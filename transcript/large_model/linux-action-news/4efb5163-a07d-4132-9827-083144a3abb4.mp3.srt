1
00:00:00,000 --> 00:00:16,240
Hello, and welcome to Linux Action News, our weekly take on Linux and the open source world.

2
00:00:16,240 --> 00:00:21,360
This is episode 102, recorded on April 21st, 2019. I'm Chris.

3
00:00:21,360 --> 00:00:22,360
And I'm Joe.

4
00:00:22,360 --> 00:00:27,320
Hello, Joe. Good to be connected with you, especially on a week that's packed with news.

5
00:00:27,320 --> 00:00:31,600
Let's kick things off with the new Ubuntu 19.04 release.

6
00:00:31,600 --> 00:00:35,120
You're not going to play that horrible disco duck tune.

7
00:00:35,120 --> 00:00:39,560
I mean, I could. No, no, we keep it very serious here, Joe.

8
00:00:39,560 --> 00:00:44,720
Yeah. So it's a pretty big release for them, even though it's an interim one. It's quite

9
00:00:44,720 --> 00:00:49,320
important at least on the desktop, certainly with the performance improvements, which I

10
00:00:49,320 --> 00:00:51,760
hear are massive.

11
00:00:51,760 --> 00:00:55,560
You hear? You mean you didn't? You weren't like drawn in? You weren't tempted to give

12
00:00:55,560 --> 00:00:56,560
it a go?

13
00:00:56,560 --> 00:01:01,760
When you use Xfce day to day, the difference between incredibly slow and slightly less

14
00:01:01,760 --> 00:01:07,040
slow doesn't really make much difference. And you get back on Xfce and it's like super

15
00:01:07,040 --> 00:01:08,040
fast.

16
00:01:08,040 --> 00:01:10,560
All right. Fair enough. Fair enough. Don't get me don't get me going yet. Let me just

17
00:01:10,560 --> 00:01:16,040
say this. Yeah, it actually is. I have been running it for weeks and weeks. And what you

18
00:01:16,040 --> 00:01:20,440
are really seeing with this release is the result of work from both upstream and downstream

19
00:01:20,440 --> 00:01:27,000
developers. Memory enhancements, CPU optimization and even strange and small animation tweaks

20
00:01:27,000 --> 00:01:29,520
really combined to make it feel very fast.

21
00:01:29,520 --> 00:01:35,120
The Gnome shell on Ubuntu 1904 is the fastest Gnome shell I've experienced. The improved

22
00:01:35,120 --> 00:01:40,920
performance is immediately noticeable. You combine that with Linux 5.0 under the hood,

23
00:01:40,920 --> 00:01:45,700
which gives you AMD FreeSync support, touch screen support for Raspberry Pis. You also

24
00:01:45,700 --> 00:01:51,200
get Mesa 19.0 in the stack, as well as the option to install the Nvidia proprietary drivers

25
00:01:51,200 --> 00:01:57,480
during installation. All of that comes together to make 1904 really about performance.

26
00:01:57,480 --> 00:01:59,640
Is it enough to tempt you back over to Gnome?

27
00:01:59,640 --> 00:02:03,920
It certainly was enough to make me say, OK, I've got to give it a fair go for a while.

28
00:02:03,920 --> 00:02:07,840
And I did. I've been running it, like I said, for probably really two months.

29
00:02:07,840 --> 00:02:10,800
But now it's out. Are you going to stick with it or are you just going back to plasma?

30
00:02:10,800 --> 00:02:16,920
OK, all right. Well, so I will say this, Joe, it's not it's not there quite yet for me.

31
00:02:16,920 --> 00:02:20,040
It is such an improvement. It's really great. If you're a Gnome shell fan, this is this

32
00:02:20,040 --> 00:02:23,960
is really great. It's just I've had a couple of situations where it still doesn't really

33
00:02:23,960 --> 00:02:31,480
hold up for me. So I'm not switching back yet, but I am I am filled with respect for

34
00:02:31,480 --> 00:02:36,000
what not only has the entire project pulled off, but for the contributions the different

35
00:02:36,000 --> 00:02:40,140
upstream and downstream developers have made and for how far they've taken it in one release

36
00:02:40,140 --> 00:02:41,140
cycle.

37
00:02:41,140 --> 00:02:46,560
Fair enough. We've also got the flavors. They've all released their 1904 and there's not a

38
00:02:46,560 --> 00:02:52,320
huge amount to say about many of them. Ubuntu Budgie seems to be probably the biggest in

39
00:02:52,320 --> 00:02:53,960
terms of improvements and changes.

40
00:02:53,960 --> 00:02:57,000
Yeah, well, one of the things that I liked about Budgie is they've switched out to the

41
00:02:57,000 --> 00:03:00,640
Nemo file manager, which is just a great file manager with lots of nice features from the

42
00:03:00,640 --> 00:03:05,280
good old days of Nautilus, as well as some as some like font and UI tweaks throughout.

43
00:03:05,280 --> 00:03:11,480
It's a really solid release. Mate is also a really solid release. And I got to admit

44
00:03:11,480 --> 00:03:14,760
Joe, Ubuntu 1904 is great.

45
00:03:14,760 --> 00:03:19,640
Yeah, a few of the components have now been ported to GTK 3 and that effort continues.

46
00:03:19,640 --> 00:03:24,400
I'm really hoping that by 2004, the whole thing is going to be ready for that. But otherwise,

47
00:03:24,400 --> 00:03:28,680
pretty solid release. I don't think I'm going to really switch to it because I stick on

48
00:03:28,680 --> 00:03:32,560
the LTSs, but it gives me hope for the next LTS definitely.

49
00:03:32,560 --> 00:03:37,520
You've been trying to get me to try it out for, well, I don't know, two years now. And

50
00:03:37,520 --> 00:03:44,200
it was ironically the performance improvements to GNOME 3.32 shell that got me to try out

51
00:03:44,200 --> 00:03:50,560
XFCE. I got a taste for a faster GTK environment and then I wanted to go all in. And so I went

52
00:03:50,560 --> 00:03:56,640
over to XFCE and I spent about 20 minutes configuring and was pretty happy with the

53
00:03:56,640 --> 00:04:00,600
results. I think really part of what's turned me off for so long is I've been there done

54
00:04:00,600 --> 00:04:08,760
that and all of the screenshots are very unappealing, but you don't have to go by the default config.

55
00:04:08,760 --> 00:04:14,560
You can theme it yourself. And I spent, like I said, just a little bit of time doing that.

56
00:04:14,560 --> 00:04:20,640
And I ended up with a very modern stack with a traditional desktop interface and I'm staying

57
00:04:20,640 --> 00:04:26,520
for now at least. So 1904 was great, but at the end of it, I decided I think I'm going

58
00:04:26,520 --> 00:04:32,440
to try out Manjaro XFCE edition. You said you don't like Manjaro because they hold the

59
00:04:32,440 --> 00:04:39,000
updates back and stuff. I know. I don't like that as much, but I have heard so many nice

60
00:04:39,000 --> 00:04:43,560
things about their XFCE default setup that I thought that seems like a pretty good place

61
00:04:43,560 --> 00:04:48,800
to start for a modern implementation. And I kind of miss using a rolling release, at

62
00:04:48,800 --> 00:04:53,600
least on my laptop. On my production machines, I'm just sticking with the LTS. 1804 has

63
00:04:53,600 --> 00:04:59,800
been solid. The plasma desktop that I'm running on Kubuntu has been great. No problems, really.

64
00:04:59,800 --> 00:05:03,480
And I think I'm just going to stick there for a while. And if my experiments with XFCE

65
00:05:03,480 --> 00:05:07,780
result in something productive, maybe when it comes around to the next refresh cycle

66
00:05:07,780 --> 00:05:10,680
for our studio computers, I might refresh them to XFCE.

67
00:05:10,680 --> 00:05:13,840
Oh, that'll be a glorious, glorious day.

68
00:05:13,840 --> 00:05:14,840
We'll hold a party for you.

69
00:05:14,840 --> 00:05:16,920
Yeah, I'll have to fly in.

70
00:05:16,920 --> 00:05:17,920
Yeah, we'll fly you out.

71
00:05:17,920 --> 00:05:26,280
I can cut the ribbon and stuff. But this release isn't just about the desktop for Ubuntu. They

72
00:05:26,280 --> 00:05:32,580
do focus a little bit on that, but it's kind of more about the cloud. Well, as they say,

73
00:05:32,580 --> 00:05:34,080
from the cloud to the edge.

74
00:05:34,080 --> 00:05:38,240
Right, which does include the developer. And they're very clear about that. They say in

75
00:05:38,240 --> 00:05:42,480
here that in their big press release on their website that they've integrated the best of

76
00:05:42,480 --> 00:05:46,520
OpenStack and Kubernetes and many more. So that way it's ready to go and they have their

77
00:05:46,520 --> 00:05:52,840
optimized minimal Ubuntu 1904 images available for the major public cloud instances. And

78
00:05:52,840 --> 00:05:57,920
then they sort of wax poetically about their reach and developer productivity thanks to

79
00:05:57,920 --> 00:06:02,760
snaps and Visual Studio Code being one of the many popular snaps. And they highlight

80
00:06:02,760 --> 00:06:07,900
the feature in 1904 where you can install multiple instances of the same snap, which

81
00:06:07,900 --> 00:06:08,900
is great.

82
00:06:08,900 --> 00:06:13,040
So you want to have maybe like a testing version and like a production version and the one

83
00:06:13,040 --> 00:06:16,680
you're rolling out to your end users. And last but not least, they're saying, hey, by

84
00:06:16,680 --> 00:06:21,440
the way, if you're a VMware user, we're now going to automatically install those old open

85
00:06:21,440 --> 00:06:25,640
VM tools for you. And that way you get bi directional clipboard, easy sharing of files,

86
00:06:25,640 --> 00:06:29,280
and of course, that graceful power management. Once you have all that set up, that's all

87
00:06:29,280 --> 00:06:33,560
right out of the box. Now in 1904, you combine that with the performance improvements. And

88
00:06:33,560 --> 00:06:35,940
they're trying to make a case here for the developer.

89
00:06:35,940 --> 00:06:39,840
Being able to install those different versions of snaps reminds me quite a lot of what fedoras

90
00:06:39,840 --> 00:06:45,560
do with modularity. Although it's kind of a different approach to it, it kind of gives

91
00:06:45,560 --> 00:06:46,560
you the same result.

92
00:06:46,560 --> 00:06:51,460
Yeah, I think the the nice thing about the snap approach is you're doing it in the deliverable

93
00:06:51,460 --> 00:06:56,040
end result. And you have the container aspect of snaps where they're isolated from the rest

94
00:06:56,040 --> 00:07:01,520
of the system. But it is obviously something that developers are looking for. You want

95
00:07:01,520 --> 00:07:06,040
the testing version, you want the production version, you want the one that's rolling out.

96
00:07:06,040 --> 00:07:09,920
But also, wouldn't it be great to have the ability to do a phased rollouts via the snap

97
00:07:09,920 --> 00:07:13,420
store? I think that might be part of this as well. You know, you can learn a lot more

98
00:07:13,420 --> 00:07:17,680
if you join their webinar on May 7. As we're recording that that's just a little bit out

99
00:07:17,680 --> 00:07:21,040
there. And you can learn more by using the links in our show notes.

100
00:07:21,040 --> 00:07:28,120
Yeah, linuxactionnews.com slash one zero two. But speaking of IoT, Mozilla have graduated

101
00:07:28,120 --> 00:07:34,280
project things to its own proper project now, which they're calling web things. Now I must

102
00:07:34,280 --> 00:07:40,840
admit that home automation and Internet of Things is not really for me. But I know you

103
00:07:40,840 --> 00:07:48,200
are all over that with, you know, smart sockets and shouting at your Alexa and stuff. So is

104
00:07:48,200 --> 00:07:49,680
this appealing to you?

105
00:07:49,680 --> 00:07:57,360
It is. I felt like the IoT ecosystem is really early days. And I've been experimenting with

106
00:07:57,360 --> 00:08:03,160
HomeKit and the Alexa solutions and the Google Home selection, trying to feel all of them

107
00:08:03,160 --> 00:08:07,600
out seeing which one is more respecting of your privacy, which one chats the most and

108
00:08:07,600 --> 00:08:12,640
whatnot. But none of them give me what I really want, which is 100% local control, like my

109
00:08:12,640 --> 00:08:17,420
internet could be disconnected, and I can still manage these devices. Mozilla is pushing

110
00:08:17,420 --> 00:08:23,600
us in that direction. So this initiative is both their effort behind pushing forward standards

111
00:08:23,600 --> 00:08:29,460
that focus on security, privacy and interoperability, sort of like their wheelhouse. But it's also

112
00:08:29,460 --> 00:08:33,600
a couple of components of software, primarily two different components, the web things gateway

113
00:08:33,600 --> 00:08:40,560
and the web things framework. The web things gateway is interesting. It's a software distribution

114
00:08:40,560 --> 00:08:45,920
for smart home gateways focused on privacy and security that you manage all of this locally,

115
00:08:45,920 --> 00:08:51,160
including getting a web dashboard that gives you logs and stats. Say you have an IoT device

116
00:08:51,160 --> 00:08:56,640
that monitors electrical usage. You could pull that in and generate real time graphs

117
00:08:56,640 --> 00:09:01,920
and logs on that using this platform. And what's really fun about it is along with creating

118
00:09:01,920 --> 00:09:07,880
a standard development kit, they've created images for the Raspberry Pi, and they're working

119
00:09:07,880 --> 00:09:13,480
on an open WRT image. So you could load this on a lot of consumer routers, and you just

120
00:09:13,480 --> 00:09:16,200
get the IoT gateway baked into it.

121
00:09:16,200 --> 00:09:21,440
Yeah, that all sounds amazing. But you need the devices to support it. You've got tons

122
00:09:21,440 --> 00:09:24,180
of these devices. Do any of them support this yet?

123
00:09:24,180 --> 00:09:30,720
It's a bit mixed right now. So that's where the web things framework comes in. Now, this

124
00:09:30,720 --> 00:09:39,300
is a set of libraries for like Node.js, Python, Java, Rust, Arduino kits, MicroPython, as

125
00:09:39,300 --> 00:09:46,480
well as some third party libraries like IoT.js, and some APIs for the web. And some of these

126
00:09:46,480 --> 00:09:50,520
work with some of the devices I have and some of them don't. And what these different libraries

127
00:09:50,520 --> 00:09:57,400
do is say you can use a Python application to get a standard library to control the percentage

128
00:09:57,400 --> 00:10:04,380
of brightness for a bulb or the color or whatever it might be. They give you a standard programming

129
00:10:04,380 --> 00:10:08,880
interface to control this stuff. And then it's up to Mozilla to update the devices that

130
00:10:08,880 --> 00:10:13,640
they support. And it's going to be hit and miss right now. And unfortunately, really,

131
00:10:13,640 --> 00:10:18,560
this is really the story of the whole freaking IoT device market to begin with. It's not

132
00:10:18,560 --> 00:10:22,520
like it's like solving it yet. But you could see where like, there's potential down the

133
00:10:22,520 --> 00:10:27,360
road to solve it. Maybe do you really think that the manufacturers are going to settle

134
00:10:27,360 --> 00:10:32,520
on this standard and not just have their own app and their own APIs that are all closed

135
00:10:32,520 --> 00:10:38,080
and just force you to use their own walled garden? I think realistically, you're going

136
00:10:38,080 --> 00:10:43,120
to have some vendors that go for price, and they're going to be really narrow and locked

137
00:10:43,120 --> 00:10:47,640
in like they'll only work with the echo product or they'll only work with home kit. Then you'll

138
00:10:47,640 --> 00:10:52,200
have devices that are a little more premium that support multiple standards and multiple

139
00:10:52,200 --> 00:10:56,060
protocols, and they'll cost more money. But those of us that care, we'll be able to buy

140
00:10:56,060 --> 00:11:02,920
those ones. And this may be one of the many standards and protocols and SDKs and API's

141
00:11:02,920 --> 00:11:04,440
and etc, etc, that they support.

142
00:11:04,440 --> 00:11:08,480
Well, once again, it feels like Mozilla is the organization to do this. I don't have

143
00:11:08,480 --> 00:11:14,880
a huge interest in it personally. But I know that a lot of people do. And it's an area

144
00:11:14,880 --> 00:11:22,040
where we need someone trustworthy like Mozilla to get involved and try and shepherd the whole

145
00:11:22,040 --> 00:11:27,920
industry towards something that does use open standards and can use completely free software

146
00:11:27,920 --> 00:11:33,480
if you want it to, and not have to interact with the huge tech companies like Apple, Amazon

147
00:11:33,480 --> 00:11:34,480
and Google.

148
00:11:34,480 --> 00:11:38,680
And what Mozilla has done here is what they're traditionally so good at is now they've set

149
00:11:38,680 --> 00:11:43,680
the bar. This is now the new minimum, and now the industry can choose to step up or

150
00:11:43,680 --> 00:11:49,000
not. And by creating standard libraries for Node.js, Python and many others, it's going

151
00:11:49,000 --> 00:11:53,520
to have a good chance of getting an adoption. That's a pretty clever way to go. And Mozilla

152
00:11:53,520 --> 00:11:58,180
is particularly good at some of this infrastructure stuff. In fact, that's why I'm pretty excited

153
00:11:58,180 --> 00:12:03,640
about Pyodide, which is their initiative to bring the scientific community that uses Python

154
00:12:03,640 --> 00:12:05,760
to the web, right into the browser.

155
00:12:05,760 --> 00:12:09,280
Yeah, there have been quite a few attempts in the past to get Python running in the web

156
00:12:09,280 --> 00:12:12,840
browser, but I don't think any of them have been as complete as Pyodide.

157
00:12:12,840 --> 00:12:17,920
Well, and it goes back to Mozilla might be the right organization to back something like

158
00:12:17,920 --> 00:12:23,200
this, which long term, when you're talking sustainability of a project over 10, 20 years,

159
00:12:23,200 --> 00:12:29,880
really matters. And so you might be thinking, or I was at least, why do we need Python in

160
00:12:29,880 --> 00:12:35,240
the web browser exactly? Well, they address that in their post. They say JavaScript doesn't

161
00:12:35,240 --> 00:12:40,440
have a mature suite of data science libraries, and it's missing a number of features that

162
00:12:40,440 --> 00:12:45,760
are useful for numeric computing. While we still think it's worthwhile to work on changing

163
00:12:45,760 --> 00:12:51,640
that and moving JavaScript towards a data science ecosystem. In the meantime, we're

164
00:12:51,640 --> 00:12:56,680
also taking a shortcut. We're meeting data scientists where they are by bringing the

165
00:12:56,680 --> 00:13:04,200
popular and mature Python scientific stack to the browser. And what we really have here

166
00:13:04,200 --> 00:13:10,160
is something called Pyodide. It gives a full standard Python interpreter that runs entirely

167
00:13:10,160 --> 00:13:16,760
in the browser with full access to the browser's traditional web APIs. And think of it really

168
00:13:16,760 --> 00:13:23,360
as three components. Number one, you download the source code of a Python interpreter, CPython,

169
00:13:23,360 --> 00:13:28,160
and the scientific computing packages like NumPy. Then you apply a small set of changes

170
00:13:28,160 --> 00:13:34,240
to make them work in the new environment. And then you compile them to WebAssembly. And

171
00:13:34,240 --> 00:13:39,120
that's what Pyodide is doing in the browser. It's pretty clever. And you get everything

172
00:13:39,120 --> 00:13:41,680
that CPython can do and that NumPy can bring.

173
00:13:41,680 --> 00:13:45,840
It's funny that they say these files can be quite large. The total download is a huge

174
00:13:45,840 --> 00:13:46,840
50 megabytes.

175
00:13:46,840 --> 00:13:54,360
Yeah, I know, right? I mean, that is large from a web page standpoint, but it's small

176
00:13:54,360 --> 00:13:56,920
from like, say, probably even a short YouTube video.

177
00:13:56,920 --> 00:14:02,760
But it's not even much bigger than the Firefox binary for Windows. So that's why it is big,

178
00:14:02,760 --> 00:14:06,680
as you say, by web standards. But once you've got it once, then as long as you don't clear

179
00:14:06,680 --> 00:14:11,760
your cache, you're good to go from then on. And they're focusing on the scientific angle

180
00:14:11,760 --> 00:14:15,860
here. But the first thing I thought about was education. And you've got how many kids

181
00:14:15,860 --> 00:14:20,680
with Chromebooks these days? Being able to run Python right there in the browser seems

182
00:14:20,680 --> 00:14:22,760
like it'd be very useful in the classroom.

183
00:14:22,760 --> 00:14:25,960
Well, that was one of the points that Mozilla brings up in that post that we have linked.

184
00:14:25,960 --> 00:14:32,080
As they say, this is sort of a long term defensive move for Python as well, because they're concerned

185
00:14:32,080 --> 00:14:36,640
that if you can't take advantage of it in the browser, you are locked out of certain

186
00:14:36,640 --> 00:14:43,280
use cases like Chromebooks and mobile. And that for Python to remain relevant long term,

187
00:14:43,280 --> 00:14:46,000
they got to have some sort of presence in the browser. And you could maybe make that

188
00:14:46,000 --> 00:14:51,480
argument. Right now, Python's doing better than I ever expected. It's interesting because

189
00:14:51,480 --> 00:14:56,600
it's been around for a while. But just looking at the metrics from the Linux Academy students,

190
00:14:56,600 --> 00:15:01,140
Python is intensely interesting to them. Python is an area that's bringing a lot of students

191
00:15:01,140 --> 00:15:05,800
over to the Linux Academy platform right now so they can learn it. And I've heard more

192
00:15:05,800 --> 00:15:10,240
and more of our listeners talking about Python. And the Kota Radio show gets more and more

193
00:15:10,240 --> 00:15:15,260
emails about Python than it ever has before. All of the data that I can look at is suggesting

194
00:15:15,260 --> 00:15:17,720
that Python is doing better than it ever has right now.

195
00:15:17,720 --> 00:15:22,660
Well, I'm not surprised at all by that. Because, okay, it might not be the fastest and most

196
00:15:22,660 --> 00:15:26,480
efficient language. And being interpreted means that obviously it's going to be way

197
00:15:26,480 --> 00:15:31,360
slower than something that's compiled. But just look at any source code from Python.

198
00:15:31,360 --> 00:15:32,800
It's so easy to read.

199
00:15:32,800 --> 00:15:33,800
Yeah, it's approachable.

200
00:15:33,800 --> 00:15:38,720
Exactly. It's therefore easy to write as well. And that's why it just seems obvious to me

201
00:15:38,720 --> 00:15:41,040
that people would get into it and like it.

202
00:15:41,040 --> 00:15:45,840
Well, everybody was talking about Python at the new OpenSSH 8.0 release party. You know,

203
00:15:45,840 --> 00:15:49,080
I didn't see you there, Joe. I thought you were going to fly in for the big release party

204
00:15:49,080 --> 00:15:50,080
this week.

205
00:15:50,080 --> 00:15:54,520
No, I was too busy getting my boxes owned from using a slightly older version of OpenSSH.

206
00:15:54,520 --> 00:16:00,000
I do love me some SCP. And so if you do as well, it's probably worth upgrading to version

207
00:16:00,000 --> 00:16:06,300
8.0. This release contains a mitigation for a weakness in the SCP tool and protocol. This

208
00:16:06,300 --> 00:16:14,160
is related to CVE-2019-6111. When copying a file from a remote system to a local directory,

209
00:16:14,160 --> 00:16:19,920
SCP did not verify that the file names that the server had sent matched those requested

210
00:16:19,920 --> 00:16:26,880
by the client. This could allow a hostile server to create an unexpected local file

211
00:16:26,880 --> 00:16:33,880
that essentially contained attack content. This release adds a client-side check to the

212
00:16:33,880 --> 00:16:40,440
file names sent from the server to make sure they actually match the original request.

213
00:16:40,440 --> 00:16:44,740
But then they put this note in here, Joe, and this hits me hard and makes me feel like

214
00:16:44,740 --> 00:16:51,800
an old man. And I hate this kind of stuff. They say this, the SCP protocol is outdated,

215
00:16:51,800 --> 00:16:59,120
inflexible, and not readily fixed. We recommend the use of more modern protocols like SFTP

216
00:16:59,120 --> 00:17:04,720
and rsync for file transfer instead. It's not that I can't use those tools. It's just

217
00:17:04,720 --> 00:17:11,240
SCP is so handy. Like you install the, you're already going to use OpenSSH anyway. So you

218
00:17:11,240 --> 00:17:17,320
install that and you get this fantastic SCP. Not that you don't get SFTP, but I don't know,

219
00:17:17,320 --> 00:17:23,040
something about like a tool that I have just used for 20 years now, I'm being told, hey

220
00:17:23,040 --> 00:17:26,800
old man, stop using one of your favorite tools. This is like the first time this has really

221
00:17:26,800 --> 00:17:27,800
happened to me.

222
00:17:27,800 --> 00:17:31,480
Yeah, I use SCP loads. I do use rsync a little bit.

223
00:17:31,480 --> 00:17:33,200
Oh, it's great. rsync is incredible.

224
00:17:33,200 --> 00:17:38,320
Oh yeah, but I don't know, there's just something about SCP. I just learned it before rsync

225
00:17:38,320 --> 00:17:40,080
and so I just default to it.

226
00:17:40,080 --> 00:17:46,000
Yeah, it's quick. It's muscle memory. I can send and receive SCP files around my network

227
00:17:46,000 --> 00:17:52,680
in seconds, especially when you have keys and it's just, I love it more than going on

228
00:17:52,680 --> 00:17:55,960
a Windows box and going to the run prompt and putting the server name and using the

229
00:17:55,960 --> 00:18:02,560
whole UNC path. That feels old and clunky compared to using SCP. Not that I can't, again,

230
00:18:02,560 --> 00:18:07,520
SFTP, rsync, it's fine. This is my moment though. Here we are, 2019, this is my moment.

231
00:18:07,520 --> 00:18:11,560
It's like, hey old man, stop using this old SCP thing. I'm like, okay, all right. I'll

232
00:18:11,560 --> 00:18:16,040
take that advice on. I'll do it. Just not going to do it without complaining.

233
00:18:16,040 --> 00:18:21,920
Yeah, but this bug was pretty obscure. It was one specific use case and the server had

234
00:18:21,920 --> 00:18:26,200
to be owned in the first place. It's not like this was some man in the middle or whatever.

235
00:18:26,200 --> 00:18:28,080
Right, because you have to execute that file.

236
00:18:28,080 --> 00:18:31,680
Yeah, and I can't see it being the biggest problem if your server is being owned to the

237
00:18:31,680 --> 00:18:35,840
point where someone could exploit this. You've got way bigger problems to deal with than

238
00:18:35,840 --> 00:18:41,320
that. I mean, it needed to be patched, obviously, and it's good that it has been now, but it

239
00:18:41,320 --> 00:18:45,640
just seems like a relatively minor problem to me.

240
00:18:45,640 --> 00:18:50,320
Generally they are in isolation. That's how this works. In isolation, each one of these

241
00:18:50,320 --> 00:18:57,080
isn't a major issue, but it is not uncommon to chain multiple vulnerabilities together

242
00:18:57,080 --> 00:19:01,560
to have an overall effect. So if you could somehow compromise a machine to be able to

243
00:19:01,560 --> 00:19:06,520
execute files, but you just couldn't get files on the machine, you combine it with this attack

244
00:19:06,520 --> 00:19:10,520
and now you've got a way to copy the file onto the machine and you've got a way to execute

245
00:19:10,520 --> 00:19:14,040
it. You chain the two attacks together, Bob's your uncle, you now own the box.

246
00:19:14,040 --> 00:19:18,440
And that's why it is important because security is more than just one vulnerability. Security

247
00:19:18,440 --> 00:19:23,240
is an in-depth approach where multiple things in multiple layers have to be secure.

248
00:19:23,240 --> 00:19:28,560
Well, it's good that this was patched so quickly. I mean, it's only been around since RCP, what,

249
00:19:28,560 --> 00:19:32,880
30-odd years ago?

250
00:19:32,880 --> 00:19:37,640
Yeah. Yeah, you know, relatively in terms of the age of the universe.

251
00:19:37,640 --> 00:19:44,320
Yeah. But I'm not going to stop using SCP. So I just despite them for calling us old.

252
00:19:44,320 --> 00:19:48,400
Good. You and me, SCP and Nano to the grave for life.

253
00:19:48,400 --> 00:19:54,160
Yeah, man. Definitely. But will people stop using Chrome on Android? Well, if the EU has

254
00:19:54,160 --> 00:19:57,280
anything to say about it, they're certainly going to have the choice.

255
00:19:57,280 --> 00:20:01,680
It seems like they'll have the choice, but Google has found a way that's slightly more

256
00:20:01,680 --> 00:20:07,640
clever than the old Microsoft approach. So they're going to have a screen after you receive

257
00:20:07,640 --> 00:20:14,080
your Google device where you can select different apps that are randomly sorted based on popularity

258
00:20:14,080 --> 00:20:19,520
and some random variable. But they're still installing Chrome by default.

259
00:20:19,520 --> 00:20:23,600
If Chrome and Google search are all still installed by default, you would just also

260
00:20:23,600 --> 00:20:29,680
now get the option to install Firefox or Edge or Opera or DuckDuckGo. And then if you do

261
00:20:29,680 --> 00:20:35,960
install them, it will walk you through a series of steps that are not intuitive to set them

262
00:20:35,960 --> 00:20:41,340
as the default. But it doesn't just immediately switch them to the default. You have to go

263
00:20:41,340 --> 00:20:49,200
through additional hoops afterwards. So it's sort of, to me, a half-assed attempt to have

264
00:20:49,200 --> 00:20:53,140
their cake and eat it too. You can, you'll get a prop now to install Firefox. That is

265
00:20:53,140 --> 00:20:57,600
indeed an improvement. But Chrome's already there and set to the default when the device

266
00:20:57,600 --> 00:20:58,600
arrives.

267
00:20:58,600 --> 00:21:02,440
Yeah, it's like a welcome screen. You can put all the effort you want into it. People

268
00:21:02,440 --> 00:21:07,040
are just going to close it immediately and not read it. It just feels like one of those,

269
00:21:07,040 --> 00:21:11,680
yeah, next, whatever. And if you've got a next and a finish button and you've got Google

270
00:21:11,680 --> 00:21:15,840
search and Google Chrome installed by default, then I think very few people are actually

271
00:21:15,840 --> 00:21:20,720
going to take advantage of this, at least with the Microsoft one. I remember seeing

272
00:21:20,720 --> 00:21:26,560
it and I remember trying it out and it was actually pretty good. It kind of prompted

273
00:21:26,560 --> 00:21:32,880
you to actually think about installing something else. But this Android one just feels very

274
00:21:32,880 --> 00:21:39,680
much like next, next, next finish. You know, just like people do with the location settings

275
00:21:39,680 --> 00:21:43,720
and all the rest of that or all of the opt out of privacy stuff. I actually read all

276
00:21:43,720 --> 00:21:46,200
of that stuff, but I don't think many people do.

277
00:21:46,200 --> 00:21:50,960
And it literally is just a next, next, next screen. So that's why it feels like that,

278
00:21:50,960 --> 00:21:55,160
because that's literally what it's going to be. And it comes across as install more

279
00:21:55,160 --> 00:21:59,800
crap on your machine. But the other thing that's tricky here is if you read the verbiage

280
00:21:59,800 --> 00:22:04,400
of the way Google talks about this, is the browsers have to be compatible with the absolute

281
00:22:04,400 --> 00:22:10,080
latest version of Android that ships on that device. So if it's say the Pixel 4 and it's

282
00:22:10,080 --> 00:22:15,000
coming with a brand, brand new version of Android that maybe Opera and Edge are not

283
00:22:15,000 --> 00:22:20,780
ready for but only Firefox is, then the only thing in that list will be Firefox. So they

284
00:22:20,780 --> 00:22:25,360
also have a technicality where that list will change depending on the compatibility with

285
00:22:25,360 --> 00:22:26,360
the release of Android.

286
00:22:26,360 --> 00:22:30,560
Do you think this is then weaseling out of the European Commission's ruling then? Or

287
00:22:30,560 --> 00:22:34,760
is it a case of them obeying the letter of the law without obeying the spirit of it?

288
00:22:34,760 --> 00:22:40,320
It seems to be indeed trying to obey the letter of the law. If it's the spirit, I don't know.

289
00:22:40,320 --> 00:22:45,720
I'm so far removed from it. You know, I'd say that's up to each individual user to decide.

290
00:22:45,720 --> 00:22:50,880
To me, it doesn't seem nearly as complete as what Microsoft did with Windows back in

291
00:22:50,880 --> 00:22:56,720
the day, especially since Chrome is placed above all of the others in a separate category

292
00:22:56,720 --> 00:23:00,880
where it says installed and then the alternatives are all listed below it. Same with Google

293
00:23:00,880 --> 00:23:05,600
search. It feels like they're all second brands and you would just want to next next next

294
00:23:05,600 --> 00:23:09,480
bastard because you're used to all this crap coming at you when you're setting up a new

295
00:23:09,480 --> 00:23:10,480
device.

296
00:23:10,480 --> 00:23:12,800
Yeah, I wonder if they're going to get away with it. You would have thought so. They would

297
00:23:12,800 --> 00:23:18,520
have checked this stuff out before they put it out to the public. But it does feel a bit

298
00:23:18,520 --> 00:23:22,920
wrong to do that. You've got Google just as you say on its own, and then just all these

299
00:23:22,920 --> 00:23:29,160
other third party ones. Whereas with the Microsoft browser ballot, it was genuinely random. And

300
00:23:29,160 --> 00:23:33,480
I would imagine a lot of people just went for the first one, whatever that was. Whereas

301
00:23:33,480 --> 00:23:38,080
the first one here is Chrome. And so this is effectively pointless.

302
00:23:38,080 --> 00:23:41,480
Do you know how many stories there have been recently with their switching their name to

303
00:23:41,480 --> 00:23:48,360
Anthos for the Google Cloud platform? And with like this stuff, this monopoly stuff?

304
00:23:48,360 --> 00:23:53,200
How many times a year now do do these stories come up? You're like, this really feels like

305
00:23:53,200 --> 00:23:58,040
like a new Microsoft. This is like Microsoft when they're at their worst, when there was

306
00:23:58,040 --> 00:24:03,100
a lot of people that were into Microsoft. But then there was like these fringe, crazy

307
00:24:03,100 --> 00:24:08,060
free software users that were like, Microsoft's evil, and they're doing things that you don't

308
00:24:08,060 --> 00:24:15,040
recognize. I feel like that's what's going on here with Google. Like this is a monopolistic

309
00:24:15,040 --> 00:24:19,280
move that they're making. And they have a dominance over search. They have a dominance

310
00:24:19,280 --> 00:24:23,920
over web advertising. They have a dominance with Chrome now. And they have a dominance

311
00:24:23,920 --> 00:24:30,240
with Android. And they continue to behave in all of these different ways, just like

312
00:24:30,240 --> 00:24:35,760
Microsoft did of the past. If you understand and appreciate Google's history, you will

313
00:24:35,760 --> 00:24:41,480
understand how deeply ironic that is. They're like a young adolescent Microsoft. They have

314
00:24:41,480 --> 00:24:45,560
to go through a maturity phase that perhaps we are now seeing Microsoft enter.

315
00:24:45,560 --> 00:24:49,040
Yeah, I can't really disagree with that. It really does feel that way.

316
00:24:49,040 --> 00:24:53,200
Well, thankfully, Joe, everything does change over time as we seem to bear witness. And

317
00:24:53,200 --> 00:24:57,960
one of the things that I really appreciate so many years now into doing podcasting is

318
00:24:57,960 --> 00:25:04,840
that all you need to listen to a podcast is an RSS feed. You don't even need a web browser.

319
00:25:04,840 --> 00:25:10,160
It's just generally available as a standard spec. And you can get our feed at linuxactionnews.com

320
00:25:10,160 --> 00:25:15,280
slash subscribe. We have the straight up RSS feed as well as many other ways to get this

321
00:25:15,280 --> 00:25:16,280
show.

322
00:25:16,280 --> 00:25:19,960
And you can go to linuxactionnews.com slash contact for ways to get in touch with us.

323
00:25:19,960 --> 00:25:23,600
And if you've been thinking about subscribing to Linux Academy, do it right now. Go, go,

324
00:25:23,600 --> 00:25:28,360
go just for a limited time. The $299 a year promo. That's a crazy good deal. It's like

325
00:25:28,360 --> 00:25:33,920
33% off. Go take advantage of that. You'll lock it in. Go to linuxacademy.com and subscribe

326
00:25:33,920 --> 00:25:34,920
to get the promo.

327
00:25:34,920 --> 00:25:38,680
And if you're going to be at Linux Fest Northwest this week, then do come and say hello to us

328
00:25:38,680 --> 00:25:43,800
and all the crew and go to meetup.com slash Jupiter broadcasting for some of the events

329
00:25:43,800 --> 00:25:44,800
that we're organizing.

330
00:25:44,800 --> 00:25:49,680
Yeah, I'll be barbecuing for you in the parking lot outside Lady Dupes. How would you not

331
00:25:49,680 --> 00:25:55,280
want to come see that? And somehow, regardless of the barbecuing and the festing, we will

332
00:25:55,280 --> 00:26:00,440
be back next Monday with our weekly take on the latest Linux and open source news. I am

333
00:26:00,440 --> 00:26:02,320
at Chris LAS.

334
00:26:02,320 --> 00:26:04,240
I'm at Joe Ressington.

335
00:26:04,240 --> 00:26:06,920
Thank you for joining us and we will see you next week.

336
00:26:06,920 --> 00:26:33,040
See you later.

