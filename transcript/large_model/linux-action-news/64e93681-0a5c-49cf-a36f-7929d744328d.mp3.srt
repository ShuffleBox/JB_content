1
00:00:00,000 --> 00:00:09,440
Hello, and welcome to Linux Action News, episode 173 recorded on January 24th, 2021.

2
00:00:09,440 --> 00:00:10,440
I'm Chris.

3
00:00:10,440 --> 00:00:11,440
And I'm Wes.

4
00:00:11,440 --> 00:00:12,440
Hello, Wes.

5
00:00:12,440 --> 00:00:13,440
Let's do the news.

6
00:00:13,440 --> 00:00:17,320
It's a new year, and with it come new Red Hat Enterprise Linux programs.

7
00:00:17,320 --> 00:00:23,080
If you recall, last year, on December 8th, Red Hat announced a major shift in how CentOS

8
00:00:23,080 --> 00:00:27,520
is delivered, from trailing rail development to leading it.

9
00:00:27,520 --> 00:00:32,080
Not yet public, but in the works at the time, was an expansion to their developer program

10
00:00:32,080 --> 00:00:38,360
that makes current versions of Red Hat Enterprise Linux free to use in production on up to 16

11
00:00:38,360 --> 00:00:39,360
hosts.

12
00:00:39,360 --> 00:00:43,820
Yeah, this week, Red Hat announced they are expanding their existing developer program

13
00:00:43,820 --> 00:00:48,560
so that individual developer subscriptions for RHEL can be used in production for up

14
00:00:48,560 --> 00:00:49,840
to 16 systems.

15
00:00:49,840 --> 00:00:54,760
You will need to sign in to the RHEL account system, and you will have to download it from

16
00:00:54,760 --> 00:00:58,520
there and, of course, have your system plugged into that to receive updates.

17
00:00:58,520 --> 00:01:02,840
But Red Hat promises this isn't a sales program, and they say that no sales representative

18
00:01:02,840 --> 00:01:04,500
will follow up.

19
00:01:04,500 --> 00:01:10,040
An option will exist, though, within the subscription to easily upgrade to full support, but that's

20
00:01:10,040 --> 00:01:12,040
all up to you.

21
00:01:12,040 --> 00:01:15,080
It seems kind of odd that they're wrapping this up into their developer program.

22
00:01:15,080 --> 00:01:21,240
I don't really know of other vendors that wrap developer accounts into production licenses.

23
00:01:21,240 --> 00:01:27,520
I think just that alone might cause large-scale, serious companies to kind of look at this

24
00:01:27,520 --> 00:01:30,680
and stay away, maybe stay a little skeptical.

25
00:01:30,680 --> 00:01:35,040
And the elephant in the room here that everybody thought of when they read this, which seemed

26
00:01:35,040 --> 00:01:39,960
obvious on its face, is that they should have announced this when they announced the change

27
00:01:39,960 --> 00:01:43,120
to how they're producing CentOS.

28
00:01:43,120 --> 00:01:48,680
Leading that story with RHEL going free to more people and expanding how you can get

29
00:01:48,680 --> 00:01:53,720
access to RHEL would have obviously softened the blow about the change to CentOS's support

30
00:01:53,720 --> 00:01:57,080
cycle and switching focus to Stream.

31
00:01:57,080 --> 00:02:01,360
Instead, this ends up feeling reactionary and really too little too late.

32
00:02:01,360 --> 00:02:06,860
And what's worse is we know, based on Red Hat's phrasing, but also to multiple people

33
00:02:06,860 --> 00:02:12,080
we've talked inside Red Hat to, we know that these plans to make RHEL available to more

34
00:02:12,080 --> 00:02:17,760
people for free were in the works before the CentOS changes were made public.

35
00:02:17,760 --> 00:02:21,760
But now in the shadow of what feels like just having the deal changed on us, they're announcing

36
00:02:21,760 --> 00:02:25,660
a new deal and it leads one to suspect that the deal could just change again.

37
00:02:25,660 --> 00:02:30,560
It feels like you're on borrowed time, a fact which they kind of addressed with some statements,

38
00:02:30,560 --> 00:02:33,800
but not really simply saying, we're going to try to keep it as long as possible.

39
00:02:33,800 --> 00:02:36,320
We're making it sustainable.

40
00:02:36,320 --> 00:02:42,040
It feels like they're asking us to trust them again after they've just broken the trust.

41
00:02:42,040 --> 00:02:45,040
And it really doesn't seem like 16 hosts is enough.

42
00:02:45,040 --> 00:02:49,160
Yeah, I'm not quite sure what environments this makes sense for.

43
00:02:49,160 --> 00:02:54,560
I mean, I can imagine some small businesses maybe, but in that case, I'm not sure what

44
00:02:54,560 --> 00:02:56,320
exact benefit they're getting using RHEL.

45
00:02:56,320 --> 00:03:00,480
I mean, RHEL's not bad and it can work quite nicely, but the old version of CentOS could,

46
00:03:00,480 --> 00:03:05,280
Stream probably could, or Rocky Linux could, or even Ubuntu LTS.

47
00:03:05,280 --> 00:03:08,680
Because let's be honest, so you and I before the show, I was talking about an old client

48
00:03:08,680 --> 00:03:09,680
of mine.

49
00:03:09,680 --> 00:03:13,920
It's a doctor with three nurses and an occasional doctor that comes in and works out of the

50
00:03:13,920 --> 00:03:15,120
other office.

51
00:03:15,120 --> 00:03:17,740
They need one server.

52
00:03:17,740 --> 00:03:22,200
And the Ubuntu support model is perfect for them because they can deploy Ubuntu LTS, which

53
00:03:22,200 --> 00:03:25,860
is the industry standard for long-term support versions of Ubuntu.

54
00:03:25,860 --> 00:03:30,160
And if there is a day in which they needed support, it sort of has this on-demand support

55
00:03:30,160 --> 00:03:34,140
structure where you can go from no contract to contract.

56
00:03:34,140 --> 00:03:37,480
And that appeals to them because they can defer, defer, defer until the day they need

57
00:03:37,480 --> 00:03:38,480
it.

58
00:03:38,480 --> 00:03:41,420
With RHEL, you're going to have to kind of maintain a relationship.

59
00:03:41,420 --> 00:03:42,640
You're going to need to sign in.

60
00:03:42,640 --> 00:03:45,840
You're going to need to keep the system plugged into the RHEL dashboard.

61
00:03:45,840 --> 00:03:49,680
You're going to have to make sure that when they discontinue support for this version,

62
00:03:49,680 --> 00:03:53,400
you upgrade because there'll be no extended support for developers.

63
00:03:53,400 --> 00:03:56,760
And you're also going to have to be willing to consider yourself a developer to even get

64
00:03:56,760 --> 00:03:59,720
access to this for this one small business.

65
00:03:59,720 --> 00:04:01,920
You have to pretend like you're a developer now.

66
00:04:01,920 --> 00:04:04,160
Yeah, that's kind of the weird part.

67
00:04:04,160 --> 00:04:05,840
I mean, it certainly makes sense in general.

68
00:04:05,840 --> 00:04:06,840
I like the program.

69
00:04:06,840 --> 00:04:10,860
I like also that they're including, if you are paying for RHEL, you now get more developer

70
00:04:10,860 --> 00:04:13,840
licenses on top of that for free.

71
00:04:13,840 --> 00:04:16,440
But these are all things that made more sense in the reverse order.

72
00:04:16,440 --> 00:04:22,700
You just can't unsee that once you're aware of it because in some sense, the whole latest

73
00:04:22,700 --> 00:04:27,360
CentOS development feels that way where CentOS Stream, yeah, makes sense.

74
00:04:27,360 --> 00:04:31,080
We should have a place where RHEL is developed, having more access for developers, people

75
00:04:31,080 --> 00:04:34,340
who want to learn RHEL, who want to start playing it, set up a nice home ladder or maybe

76
00:04:34,340 --> 00:04:38,360
a small business where the admin admins a lot of RHEL and it just makes sense for them

77
00:04:38,360 --> 00:04:39,520
to do so.

78
00:04:39,520 --> 00:04:41,360
That's all great.

79
00:04:41,360 --> 00:04:44,640
But if CentOS had just remained, if it had never been acquired, it's almost like we've

80
00:04:44,640 --> 00:04:50,880
had to go through all of this drama and just confusion to get back to a slightly improved

81
00:04:50,880 --> 00:04:52,120
version of what we had before.

82
00:04:52,120 --> 00:04:53,120
Yeah.

83
00:04:53,120 --> 00:04:57,080
I mean, at least these CentOS alternatives are truly community ran.

84
00:04:57,080 --> 00:05:01,640
So I think over time as they produce and as long as they produce consistently, they'll

85
00:05:01,640 --> 00:05:06,280
gain a level of trust that maybe a corporation just can't get anymore.

86
00:05:06,280 --> 00:05:13,040
But I think what they're missing here is this developer program is missing out on a huge

87
00:05:13,040 --> 00:05:19,240
use case for CentOS and that's large volume deployments where the infrastructure is not

88
00:05:19,240 --> 00:05:23,220
the primary revenue generator, but a tool to generate revenue.

89
00:05:23,220 --> 00:05:27,180
Think of a web host, a VPS at scale.

90
00:05:27,180 --> 00:05:32,200
When you look at the web stats, which are available to us, 19% of web servers currently

91
00:05:32,200 --> 00:05:35,060
run CentOS.

92
00:05:35,060 --> 00:05:36,060
Think about that for a second.

93
00:05:36,060 --> 00:05:38,360
It's only second to Ubuntu.

94
00:05:38,360 --> 00:05:43,560
If Red Hat has no solution for these large deployment customers that put them in the

95
00:05:43,560 --> 00:05:47,680
sales funnel, well, Rocky Linux or someone else will.

96
00:05:47,680 --> 00:05:51,500
That's the key thing here is CentOS, instead of being used as a sales funnel strategy to

97
00:05:51,500 --> 00:05:58,960
move people into RHEL or other Red Hat products, or here's a crazy idea, sell one-off support

98
00:05:58,960 --> 00:06:01,000
packages for CentOS like Ubuntu does.

99
00:06:01,000 --> 00:06:02,520
I know wild, right?

100
00:06:02,520 --> 00:06:05,780
Instead of doing something like that that would have funneled customers into the Red

101
00:06:05,780 --> 00:06:11,080
Hat sales department, what they're doing now is they're just not addressing a large portion

102
00:06:11,080 --> 00:06:12,760
of the CentOS user base.

103
00:06:12,760 --> 00:06:16,660
When you look at how many web servers run CentOS, it's clear that there's a lot of large

104
00:06:16,660 --> 00:06:21,240
scale deployments and they're going to look at the 16 host limitation and say, all right,

105
00:06:21,240 --> 00:06:22,760
well, we're not even going to consider that.

106
00:06:22,760 --> 00:06:28,320
I can't help but think to an old employer of mine who all the application VMs were running

107
00:06:28,320 --> 00:06:33,080
Ubuntu, but the actual virtualization hosts were all on CentOS.

108
00:06:33,080 --> 00:06:36,200
That might be a place where Stream doesn't fit or they might not have been comfortable

109
00:06:36,200 --> 00:06:39,920
with that, but it was also an environment where the business was not... They were never

110
00:06:39,920 --> 00:06:40,920
going to pay for RHEL.

111
00:06:40,920 --> 00:06:45,000
You were never going to convince people upstairs that that was worth it.

112
00:06:45,000 --> 00:06:46,000
I don't know what they've done.

113
00:06:46,000 --> 00:06:50,920
I've not spoken to them, but I've got to imagine it's Ubuntu LTS now.

114
00:06:50,920 --> 00:06:53,000
Well, I mean, yeah.

115
00:06:53,000 --> 00:06:59,200
If you want something that is still supported for five years that doesn't... They're never

116
00:06:59,200 --> 00:07:04,500
also going to get away from that rolling concept, even though it's just as rolling probably

117
00:07:04,500 --> 00:07:06,120
as Ubuntu LTS is.

118
00:07:06,120 --> 00:07:09,640
Yeah, it has minor updates inside a major release update.

119
00:07:09,640 --> 00:07:12,440
If we consider that rolling all of a sudden, then we've just changed the definition of

120
00:07:12,440 --> 00:07:19,240
rolling, but that branding will not ever be removed from CentOS Stream.

121
00:07:19,240 --> 00:07:26,080
Rocky Linux will come in with its, quote unquote, bug for bug compatibility as this built from

122
00:07:26,080 --> 00:07:33,160
RHEL source RPMs alternative that's maintained by a nonprofit backed community.

123
00:07:33,160 --> 00:07:38,100
It is so perfectly addressing the need that CentOS filled, and oh, by the way, they're

124
00:07:38,100 --> 00:07:45,240
working on a tool to convert CentOS installs to Rocky Linux.

125
00:07:45,240 --> 00:07:50,720
It seems clear to me that Rocky will fill that position just fine for a lot of people,

126
00:07:50,720 --> 00:07:52,920
or something like Rocky, like the Cloud Linux solution.

127
00:07:52,920 --> 00:07:53,920
Yeah, absolutely.

128
00:07:53,920 --> 00:07:56,480
And you know what, Wes?

129
00:07:56,480 --> 00:07:59,040
Maybe that's just fine.

130
00:07:59,040 --> 00:08:02,460
People have their community backed enterprise distribution that they can use at scale and

131
00:08:02,460 --> 00:08:08,920
that they trust, and RHEL's development, like you were saying, moves out into the open.

132
00:08:08,920 --> 00:08:14,740
And what seems clear to me is those involved with CentOS's development felt some sort of

133
00:08:14,740 --> 00:08:16,320
change needed to happen.

134
00:08:16,320 --> 00:08:21,200
There's always been some kind of inherent conflict of interest between RHEL sales and

135
00:08:21,200 --> 00:08:22,200
CentOS.

136
00:08:22,200 --> 00:08:26,320
You know, why are you selling this super expensive thing over here and essentially giving it

137
00:08:26,320 --> 00:08:28,600
away over here?

138
00:08:28,600 --> 00:08:30,320
It obviously wasn't sustainable.

139
00:08:30,320 --> 00:08:34,700
And when you weigh the contributions that Red Hat has made to the Linux community, calling

140
00:08:34,700 --> 00:08:36,780
it invaluable isn't doing it justice.

141
00:08:36,780 --> 00:08:39,960
It's been fundamental to the success of Linux in so many ways.

142
00:08:39,960 --> 00:08:42,720
What Red Hat has done has been fundamental.

143
00:08:42,720 --> 00:08:47,200
So if this change is what they felt needed to happen to make that contribution level

144
00:08:47,200 --> 00:08:52,360
sustainable and resolve that conflict of interest, put CentOS in a way that's sustainable in

145
00:08:52,360 --> 00:08:58,720
their development chart, you know, when they look at it now, they have CentOS leading RHEL

146
00:08:58,720 --> 00:09:01,120
and Fedora at the base of all of it.

147
00:09:01,120 --> 00:09:07,000
So if you're a fan of Fedora, if you're a fan of CentOS, this essentially enshrines

148
00:09:07,000 --> 00:09:10,880
them in the development process of Red Hat Enterprise Linux and brings the development

149
00:09:10,880 --> 00:09:14,720
of Red Hat Enterprise Linux out into the open and makes the whole kit and caboodle, the

150
00:09:14,720 --> 00:09:19,000
whole package dependent on Fedora's future development.

151
00:09:19,000 --> 00:09:23,800
So in a lot of ways, it does a lot of good things and the community is stepping up to

152
00:09:23,800 --> 00:09:29,700
offer a solution and I feel confident that the Cloud Linux solution and Rocky Linux will

153
00:09:29,700 --> 00:09:34,080
be shipping well before the end of life date for standard CentOS.

154
00:09:34,080 --> 00:09:38,280
We have until the end of this year and these projects are on track and I suspect Stream

155
00:09:38,280 --> 00:09:42,640
will remain a great distribution for a lot of people and then Rocky and others will fill

156
00:09:42,640 --> 00:09:43,640
that gap.

157
00:09:43,640 --> 00:09:46,920
The only loser we're really going to have in all of this besides the sysadmins who have

158
00:09:46,920 --> 00:09:50,880
to burn their time worrying about this is the Red Hat sales department because they're

159
00:09:50,880 --> 00:09:56,080
going to lose a huge part of their sales funnel, but at the same time, they've at least resolved

160
00:09:56,080 --> 00:09:57,320
this internal conflict.

161
00:09:57,320 --> 00:10:01,040
Yeah, I think you're right to say that there is a conflict there.

162
00:10:01,040 --> 00:10:05,880
Clearly, there were two minds within Red Hat that wasn't sitting comfortably.

163
00:10:05,880 --> 00:10:09,120
So if this is what it took to get to a new steady state for a while, I think you're right

164
00:10:09,120 --> 00:10:11,140
to point out that Red Hat's doing a lot of great stuff.

165
00:10:11,140 --> 00:10:12,800
That investment is not going anywhere.

166
00:10:12,800 --> 00:10:16,320
Neither are the source tarballs that they continue to publish that fuel the efforts

167
00:10:16,320 --> 00:10:17,540
of things like Rocky Linux.

168
00:10:17,540 --> 00:10:22,200
So if we've just got a new structure, a new organization, in some ways, maybe we'll look

169
00:10:22,200 --> 00:10:26,320
back on this as just the nature and sort of the power of open source development.

170
00:10:26,320 --> 00:10:32,720
Yeah, and maybe even, this is a little bold, but maybe even a necessary change.

171
00:10:32,720 --> 00:10:38,860
From the server to the desktop, in a development status update for Ubuntu 21.04, the team has

172
00:10:38,860 --> 00:10:45,200
revealed that they'll be skipping the next GNOME release and sticking instead with 3.38.

173
00:10:45,200 --> 00:10:47,280
What's old is new again, Wes.

174
00:10:47,280 --> 00:10:49,160
I'm having a bit of deja vu here.

175
00:10:49,160 --> 00:10:55,120
When Ubuntu announced it was switching back to GNOME from Unity in April of 2017, we pondered

176
00:10:55,120 --> 00:10:57,640
how long it would take until this might happen.

177
00:10:57,640 --> 00:11:02,040
And as we thought then, just like it kind of looks like now, it would take a confluence

178
00:11:02,040 --> 00:11:07,040
of perfectly reasonable reasons, which is exactly what's happened here.

179
00:11:07,040 --> 00:11:11,560
The Ubuntu team has reasoned that the new shell might not be fully ready in the next

180
00:11:11,560 --> 00:11:12,560
release.

181
00:11:12,560 --> 00:11:16,080
It's a big undertaking, probably going to take some time to work that out.

182
00:11:16,080 --> 00:11:21,360
They are unsure what the impact will be on their custom desktop and extensions.

183
00:11:21,360 --> 00:11:25,640
They can't guarantee what that experience will be like, and because we're already well

184
00:11:25,640 --> 00:11:29,240
into the development cycle, it's a moving target.

185
00:11:29,240 --> 00:11:33,240
And they suspect there's likely going to be some design questions they have to resolve,

186
00:11:33,240 --> 00:11:38,480
and what they consider non-trivial code changes to make things work with GNOME 40.

187
00:11:38,480 --> 00:11:43,160
And of course that other big-ticket item, GTK4.

188
00:11:43,160 --> 00:11:48,100
As Ubuntu desktop developer Sebastien Bachur pointed out, Debian will have it packaged

189
00:11:48,100 --> 00:11:55,600
in time, at least it seems, but the team feels GTK4 stability is just unknown right now.

190
00:11:55,600 --> 00:12:00,480
And the team suspects it will take a couple of GNOME release cycles to fully transition.

191
00:12:00,480 --> 00:12:04,000
Yeah, and that's just the reality right now.

192
00:12:04,000 --> 00:12:09,140
They are for themselves mid-release cycle on the Ubuntu release.

193
00:12:09,140 --> 00:12:16,240
So it's a big load, and they have the time now to just smooth that out over the next

194
00:12:16,240 --> 00:12:18,080
couple of Ubuntu releases.

195
00:12:18,080 --> 00:12:21,520
Instead of eating it all now and then having things potentially change on them, they can

196
00:12:21,520 --> 00:12:26,160
release, let another development cycle of GNOME land, and they can work it into a future

197
00:12:26,160 --> 00:12:29,480
Ubuntu, and they still have time before the LTS lands.

198
00:12:29,480 --> 00:12:34,880
Yeah, you know, it does make me think this is sensible, because Ubuntu is, you know,

199
00:12:34,880 --> 00:12:36,240
it's more than just the GNOME desktop.

200
00:12:36,240 --> 00:12:37,440
It's the Ubuntu desktop.

201
00:12:37,440 --> 00:12:42,160
They've got their own feel, they've all got their own fit and finish there, and it's primarily,

202
00:12:42,160 --> 00:12:45,000
you know, used by a lot of folks as a workstation to get work done.

203
00:12:45,000 --> 00:12:49,200
You don't really want that changing and breaking all the time, so it makes sense to be careful

204
00:12:49,200 --> 00:12:53,240
if we're going to have anything close to what you get on like the Apple side of the house.

205
00:12:53,240 --> 00:12:57,160
It's nice to see some thought going in and not just, well, they updated, should we?

206
00:12:57,160 --> 00:13:01,420
I joked about deja vu though, and I have to say, it kind of reminds me of the bad old

207
00:13:01,420 --> 00:13:07,240
days where Ubuntu would be shipping an older version of GTK or GNOME, and it would make

208
00:13:07,240 --> 00:13:11,720
life a little bit more frustrating for those of us that wanted to install and use the latest

209
00:13:11,720 --> 00:13:13,200
stuff.

210
00:13:13,200 --> 00:13:17,680
And it kind of reminded me of a time where it felt like Ubuntu on the desktop was behind

211
00:13:17,680 --> 00:13:18,680
a little bit.

212
00:13:18,680 --> 00:13:22,560
You know, I can't help but reconnect with some of those old feelings, even though the

213
00:13:22,560 --> 00:13:24,520
situation is totally different.

214
00:13:24,520 --> 00:13:29,600
Like, this is a pretty big design change, and if anything, distributions like Ubuntu

215
00:13:29,600 --> 00:13:35,320
and a few others are kind of there to insulate their users, and they absorb some of that

216
00:13:35,320 --> 00:13:38,360
upstream and smooth it out before it hits their users.

217
00:13:38,360 --> 00:13:43,560
It's exactly the role they should be playing, and yet I can't help but feel this slight

218
00:13:43,560 --> 00:13:44,560
tinge of disappointment.

219
00:13:44,560 --> 00:13:50,760
Yeah, I think maybe you should have always expected or not gotten unused to this, I guess

220
00:13:50,760 --> 00:13:51,760
I'm saying.

221
00:13:51,760 --> 00:13:54,760
I have memories of the same, and it was kind of like, yeah, all right, this isn't exciting,

222
00:13:54,760 --> 00:13:58,240
especially when you are like us and are sort of clued in and are following updates and

223
00:13:58,240 --> 00:14:02,000
all the exciting developments happening and improvements in these desktops.

224
00:14:02,000 --> 00:14:05,640
But hey, that's what you have Arch for, or really, that's what you have Fedora for.

225
00:14:05,640 --> 00:14:10,040
Yeah, and if anything, this just makes it in a way more fun to try the different distributions,

226
00:14:10,040 --> 00:14:13,040
because for a bit here, they'll be more differentiated than ever.

227
00:14:13,040 --> 00:14:18,880
You do wonder how this impacts the downstream Ubuntu derivatives that don't necessarily

228
00:14:18,880 --> 00:14:24,280
have the same opinion or perhaps ship their own desktop environment and would like GTK4,

229
00:14:24,280 --> 00:14:29,800
but my gut tells me probably most of the downstream derivatives are kind of grateful for a little

230
00:14:29,800 --> 00:14:35,080
bit of stability for a bit before the transition to GTK4, because if everybody can get up to

231
00:14:35,080 --> 00:14:39,440
the most current GTK, if they can use this release cycle to get current on a lot of things,

232
00:14:39,440 --> 00:14:42,560
it'll make the transition to 4 easier.

233
00:14:42,560 --> 00:14:47,060
And so I have to think this gives the derivatives a little bit of a chance to take a breath

234
00:14:47,060 --> 00:14:49,800
of air and get some work done.

235
00:14:49,800 --> 00:14:53,880
But I acknowledge that it's essentially a choice being made out of their control.

236
00:14:53,880 --> 00:14:54,880
It's kind of like the deal.

237
00:14:54,880 --> 00:14:59,600
Like if you're going to ride on Ubuntu's coattails, this is sometimes the deal you get.

238
00:14:59,600 --> 00:15:02,340
And it does sound like there'll be Debian packages available.

239
00:15:02,340 --> 00:15:08,200
So perhaps there's a route of escape there for distros that really want the latest GNOME.

240
00:15:08,200 --> 00:15:13,320
It also makes me think maybe you just need the GNOME version of Neon.

241
00:15:13,320 --> 00:15:15,320
You mean GNOME OS, Wes?

242
00:15:15,320 --> 00:15:18,320
I think I do.

243
00:15:18,320 --> 00:15:19,920
linode.com slash LAN.

244
00:15:19,920 --> 00:15:23,200
Go there to get a $100 60-day credit and support the show.

245
00:15:23,200 --> 00:15:26,220
A big thank you to Linode for supporting this here program.

246
00:15:26,220 --> 00:15:27,840
They're our cloud hosting provider.

247
00:15:27,840 --> 00:15:31,840
I chose Linode about two years ago, and I've been using them every day since, and I've

248
00:15:31,840 --> 00:15:33,080
just really expanded on that.

249
00:15:33,080 --> 00:15:37,560
I've grown to trust them and deploy all of our backend services on Linode.

250
00:15:37,560 --> 00:15:40,280
And with that $100 credit, you can really get started.

251
00:15:40,280 --> 00:15:44,000
I mean, they have systems that are as cheap as $5 a month, but why not play around in

252
00:15:44,000 --> 00:15:46,460
their configurator and really build yourself something neat?

253
00:15:46,460 --> 00:15:50,840
Deploy a game server in seconds with a lot of the settings pre-configured in the deployments

254
00:15:50,840 --> 00:15:52,120
just right there in the screen.

255
00:15:52,120 --> 00:15:54,560
You set the options you want and hit go.

256
00:15:54,560 --> 00:15:57,500
And what I really love about Linode is their passion for Linux.

257
00:15:57,500 --> 00:16:00,360
That's what got them into this game back in 2003.

258
00:16:00,360 --> 00:16:04,720
They've been doing this basically since cloud computing was a thing.

259
00:16:04,720 --> 00:16:09,180
They started three years before AWS, and yet they're still crushing them on the price.

260
00:16:09,180 --> 00:16:12,840
And unlike some of the entry-level hosting services that lock you into their platform,

261
00:16:12,840 --> 00:16:17,160
Linode gives you full backend access to customize and control your servers to fit your need.

262
00:16:17,160 --> 00:16:20,820
And that has come in handy for me several times.

263
00:16:20,820 --> 00:16:21,820
Love it.

264
00:16:21,820 --> 00:16:26,200
So go to linode.com slash land, get that $100 60-day credit, and see what I've been talking

265
00:16:26,200 --> 00:16:27,200
about.

266
00:16:27,200 --> 00:16:30,120
They're independently owned, and they're founded on a love for Linux, and that has influenced

267
00:16:30,120 --> 00:16:32,040
so many of their decisions over the years.

268
00:16:32,040 --> 00:16:36,040
And now they're dedicated to offering the best way to virtualize anything you need for

269
00:16:36,040 --> 00:16:37,880
a cloud computer.

270
00:16:37,880 --> 00:16:41,340
Maybe it's a website, a personal site, or maybe it's the backend infrastructure for

271
00:16:41,340 --> 00:16:42,480
your business.

272
00:16:42,480 --> 00:16:45,200
That $100 credit will give you an idea of what it's capable of.

273
00:16:45,200 --> 00:16:49,520
Go over their documentation and try out their fantastic human-powered support.

274
00:16:49,520 --> 00:16:54,040
You can do a lot with that $100 60-day credit, so go to linode.com slash land.

275
00:16:54,040 --> 00:16:58,300
That's linode.com slash land, and a big thank you to Linode for sponsoring Linux Action

276
00:16:58,300 --> 00:17:00,820
News.

277
00:17:00,820 --> 00:17:08,200
On a blog post titled Doubling Down on Open Part 2, posted January 14th, Elastic announced

278
00:17:08,200 --> 00:17:14,240
changes to the license for Elasticsearch and Kibana, changing from the Apache 2.0 license

279
00:17:14,240 --> 00:17:18,520
to the server-side public license and the Elastic license.

280
00:17:18,520 --> 00:17:24,320
If you're not familiar, Elasticsearch is a distributed, multi-tenant-capable, full-text

281
00:17:24,320 --> 00:17:30,800
search engine with a powerful HTTP-based REST API and the ability to ingest schema-free

282
00:17:30,800 --> 00:17:36,280
JSON documents, which, especially when paired with its sister project Kibana, an open-source

283
00:17:36,280 --> 00:17:41,920
data visualization dashboard, it provides a flexible data storage and analysis platform

284
00:17:41,920 --> 00:17:46,200
that has seen wide-scale deployment across a huge number of industries.

285
00:17:46,200 --> 00:17:50,360
And this is really what we're seeing here is a bigger meta-story that's been going on

286
00:17:50,360 --> 00:17:53,280
for a few years, and this show has been covering it.

287
00:17:53,280 --> 00:17:59,640
Open-source projects that become massively successful, they create, in some ways, industries,

288
00:17:59,640 --> 00:18:05,680
they have to start tweaking their license in reaction to AWS hoovering up their customers

289
00:18:05,680 --> 00:18:07,560
and monetizing their work.

290
00:18:07,560 --> 00:18:12,960
You know, it's an interesting sort of tack-on problem to the fact that AWS just dominates

291
00:18:12,960 --> 00:18:14,640
hosting these days, right?

292
00:18:14,640 --> 00:18:19,080
I've often sort of wondered, and we've taken advantage of some services, things like Nextcloud,

293
00:18:19,080 --> 00:18:24,280
maybe Hosted Matrix, or Home Assistant comes to mind in this case, where you just, you

294
00:18:24,280 --> 00:18:28,440
have an open-source project you love, you want to use it and leverage it, but you don't

295
00:18:28,440 --> 00:18:33,160
want to manage the server side, so you're happy to pay someone to do that for you.

296
00:18:33,160 --> 00:18:38,880
But in the AWS case, well, they're already the default, so when they also offer everything,

297
00:18:38,880 --> 00:18:43,520
of course that's where businesses are going to go, and that just means it's harder if

298
00:18:43,520 --> 00:18:46,120
you're going to try to sell it on your own on the side.

299
00:18:46,120 --> 00:18:50,840
Yeah, if you're an all-in AWS organization and you need to deploy something like Elastic

300
00:18:50,840 --> 00:18:54,560
Search, it's just a no-brainer to go with the one that AWS offers.

301
00:18:54,560 --> 00:18:58,280
I mean, you don't have to go set up a whole separate relationship and sign contracts and

302
00:18:58,280 --> 00:19:01,240
I mean, maybe you don't have to do all of those things, but it's a whole separate thing

303
00:19:01,240 --> 00:19:03,960
when you've already got an Oedipus account.

304
00:19:03,960 --> 00:19:07,560
Everyone in the organization is familiar, and you just click another button.

305
00:19:07,560 --> 00:19:12,480
And this week, AWS announced they're forking Elastic Search.

306
00:19:12,480 --> 00:19:16,440
AWS says Elastic Search is no longer open-source software.

307
00:19:16,440 --> 00:19:21,500
As they put it, they are now, quote, stepping up to provide a truly open-source Elastic

308
00:19:21,500 --> 00:19:23,120
Search alternative.

309
00:19:23,120 --> 00:19:28,000
And Amazon also let us know that they're always prepared for open-source projects to get angry

310
00:19:28,000 --> 00:19:29,000
with them.

311
00:19:29,000 --> 00:19:34,160
Adding in their post, when AWS decides to offer a service based on an open-source project,

312
00:19:34,160 --> 00:19:39,600
we ensure that we are equipped and prepared to maintain it ourselves if necessary.

313
00:19:39,600 --> 00:19:44,080
Their forks of Elastic Search and Kibana will be based on the latest Apache version two

314
00:19:44,080 --> 00:19:49,840
licensed code bases, version 7.10, and they plan to publish new GitHub repositories in

315
00:19:49,840 --> 00:19:52,400
the next few weeks.

316
00:19:52,400 --> 00:19:56,840
The AWS team also pushed back on being the villain in this story.

317
00:19:56,840 --> 00:20:00,180
Quote, Elastic knows what they're doing is fishy.

318
00:20:00,180 --> 00:20:02,440
The community has told them this.

319
00:20:02,440 --> 00:20:06,520
It's also why they felt the need to write an additional blustery blog on top of their

320
00:20:06,520 --> 00:20:15,480
initial license change blog to try to explain their actions as AWS made us do it.

321
00:20:15,480 --> 00:20:16,960
Most folks aren't fooled.

322
00:20:16,960 --> 00:20:19,000
We didn't make them do anything.

323
00:20:19,000 --> 00:20:23,400
They believe that restricting their license will lock others out of offering managed Elastic

324
00:20:23,400 --> 00:20:28,080
Search services, which will let Elastic build a bigger business.

325
00:20:28,080 --> 00:20:32,080
Elastic has a right to change their license, but they should also step up and own their

326
00:20:32,080 --> 00:20:33,160
decision.

327
00:20:33,160 --> 00:20:38,320
It's interesting how much the step up language is being used here and how bluntly AWS is

328
00:20:38,320 --> 00:20:41,680
just coming at this as this has evolved over the years where they've kind of been caught

329
00:20:41,680 --> 00:20:42,740
off guard.

330
00:20:42,740 --> 00:20:46,600
Now they're just coming out with all guns blazing, essentially saying we're prepared

331
00:20:46,600 --> 00:20:49,320
for open-source projects to flake on us.

332
00:20:49,320 --> 00:20:52,320
We're stepping up to provide something that's truly free.

333
00:20:52,320 --> 00:20:59,880
And they try to play like this underdog who is compensating for cranky open-source projects.

334
00:20:59,880 --> 00:21:02,040
And I'm just, I don't buy that image.

335
00:21:02,040 --> 00:21:04,160
It seems so obviously self-motivated.

336
00:21:04,160 --> 00:21:06,680
Oh yes, absolutely.

337
00:21:06,680 --> 00:21:11,000
Now I will say Amazon has been doing better in the open-source community the last few

338
00:21:11,000 --> 00:21:12,000
years.

339
00:21:12,000 --> 00:21:14,440
You know, they have, I think in a real sense stepped up at least in some areas.

340
00:21:14,440 --> 00:21:18,360
Now that changes a lot depending on which area we're talking about.

341
00:21:18,360 --> 00:21:21,660
And there's some spicy language and feelings on both sides here.

342
00:21:21,660 --> 00:21:25,320
And I can certainly sympathize with Elastic, the folks who have done a lot of stuff out

343
00:21:25,320 --> 00:21:29,960
in the open-source world, tried to build at least open-source based or open-core for a

344
00:21:29,960 --> 00:21:35,760
while type of product, which generally the community tends to like and found themselves

345
00:21:35,760 --> 00:21:39,880
struggling to make a sustainable business because of the elephant in the room of everyone's

346
00:21:39,880 --> 00:21:42,300
just running it on Amazon.

347
00:21:42,300 --> 00:21:48,200
But at the same time, it's hard to argue that this license change, I mean, the OSI isn't

348
00:21:48,200 --> 00:21:50,000
fond of this license, right?

349
00:21:50,000 --> 00:21:56,120
So there is a sense that the community, rightly so, feels you're changing the essence of what

350
00:21:56,120 --> 00:21:57,120
this is.

351
00:21:57,120 --> 00:21:58,800
The deal has been changed a little bit.

352
00:21:58,800 --> 00:22:01,640
That is where Amazon is 100% right.

353
00:22:01,640 --> 00:22:06,160
And from their perspective, they are just now executing on what they're legally allowed

354
00:22:06,160 --> 00:22:08,520
to do with anything that's Apache licensed.

355
00:22:08,520 --> 00:22:13,460
And in this post, they cite the many several occasions where they submitted code upstream.

356
00:22:13,460 --> 00:22:15,160
So it's not like they weren't contributing here.

357
00:22:15,160 --> 00:22:17,880
They were actually contributing upstream to the project.

358
00:22:17,880 --> 00:22:22,360
And I guess that'd be my comment to kind of underscore what you said is we have seen AWS

359
00:22:22,360 --> 00:22:28,000
do more of that investing in engineers and investing essentially in the output of code

360
00:22:28,000 --> 00:22:29,740
that goes back upstream to these projects.

361
00:22:29,740 --> 00:22:35,200
And I feel like as this story, this meta story has evolved over the last few years, that's

362
00:22:35,200 --> 00:22:38,640
an area where Amazon has actually quote unquote stepped up.

363
00:22:38,640 --> 00:22:44,000
It is interesting to consider some of these new anti-AWS based licenses because at least

364
00:22:44,000 --> 00:22:48,120
for the stuff we're doing at JB or personal use, it wouldn't necessarily affect me.

365
00:22:48,120 --> 00:22:51,960
I'm not worried about being sued by Elastic over it and we're not selling a managed service

366
00:22:51,960 --> 00:22:56,720
or anything like it of the essential parts of Elasticsearch.

367
00:22:56,720 --> 00:23:01,280
But there's a new license with new verbiage and not a bunch of court cases to let you

368
00:23:01,280 --> 00:23:03,120
know how that's going to be interpreted.

369
00:23:03,120 --> 00:23:06,840
So I can certainly see why this would create a lot of uncertainty for other businesses

370
00:23:06,840 --> 00:23:09,400
who are selling some kind of service.

371
00:23:09,400 --> 00:23:16,080
Maybe it's not just a new face on Elasticsearch or Cubana, but it's heavily used.

372
00:23:16,080 --> 00:23:17,080
How integral is that?

373
00:23:17,080 --> 00:23:19,180
Where do you draw the line?

374
00:23:19,180 --> 00:23:22,840
Elastic has published some additional blog posts and updates to FAQ pages and the like

375
00:23:22,840 --> 00:23:25,800
to try to clarify that because it's clearly upsetting some people.

376
00:23:25,800 --> 00:23:31,060
But if you had an open source, a quote unquote proper open source version, wouldn't you just

377
00:23:31,060 --> 00:23:33,400
use that?

378
00:23:33,400 --> 00:23:39,980
Xencrypt, who now provides TLS certificates to more than 235 million websites, has announced

379
00:23:39,980 --> 00:23:42,080
a successful database upgrade.

380
00:23:42,080 --> 00:23:47,200
And as you might expect at their scale, a database upgrade is anything but trivial.

381
00:23:47,200 --> 00:23:52,900
Their certificate authority software, Boulder, uses MySQL style schemas and queries to manage

382
00:23:52,900 --> 00:23:57,680
subscriber accounts and the entire certificate issuance process.

383
00:23:57,680 --> 00:24:03,440
It's designed to work with a single MySQL or MariaDB or Percona database at the backend.

384
00:24:03,440 --> 00:24:07,600
They currently use MariaDB with the InaboutDB database engine.

385
00:24:07,600 --> 00:24:12,360
To hear them say it, running a certificate authority against a single database is done

386
00:24:12,360 --> 00:24:14,120
just to minimize complexity.

387
00:24:14,120 --> 00:24:18,280
Keep things simple, only a few places where it can go wrong because, well, you really

388
00:24:18,280 --> 00:24:20,120
don't want to get this process wrong.

389
00:24:20,120 --> 00:24:22,960
Yeah, it keeps, as they put it, the maintenance burden low.

390
00:24:22,960 --> 00:24:29,080
But obviously one consequence of this design is that their database machines need to be

391
00:24:29,080 --> 00:24:30,080
pretty powerful.

392
00:24:30,080 --> 00:24:33,960
I mean, they acknowledge that eventually they may need to shard or break up the single database

393
00:24:33,960 --> 00:24:35,400
into multiple databases.

394
00:24:35,400 --> 00:24:40,280
But so far, they claim hardware advances have allowed them to just avoid doing that.

395
00:24:40,280 --> 00:24:46,680
Their old hardware before the upgrade was a dual socket Xeon E5 2650 box with a total

396
00:24:46,680 --> 00:24:55,680
of 48 threads and a terabyte of RAM and 24 3.8 terabyte Samsung SATA SSDs.

397
00:24:55,680 --> 00:24:56,680
Now they have some new stuff.

398
00:24:56,680 --> 00:24:57,680
Oh, yeah.

399
00:24:57,680 --> 00:25:06,640
The new hardware is based on two AMD EPYC 7542s with a total of 64 cores, 128 threads,

400
00:25:06,640 --> 00:25:14,440
and now two terabytes of RAM with 24 6.4 terabyte Intel NVMe SSDs along for the ride.

401
00:25:14,440 --> 00:25:15,840
Yeah, now that's a big deal.

402
00:25:15,840 --> 00:25:21,320
See, going with those EPYC CPUs provides a hundred and twenty eight PCI lanes, which

403
00:25:21,320 --> 00:25:27,560
enables them to put in 24 NVMe drives in one single machine.

404
00:25:27,560 --> 00:25:32,760
If you want to geek out more on these server performance charts and details, it's really

405
00:25:32,760 --> 00:25:36,240
worth visiting their post, which we'll have linked in the show notes.

406
00:25:36,240 --> 00:25:40,080
They clearly show a big performance improvement for Let's Encrypt with Headroom for Growth,

407
00:25:40,080 --> 00:25:41,400
which is great.

408
00:25:41,400 --> 00:25:46,600
And they also talk a bit about their adoption of OpenCFS and how they optimized it for NVMe

409
00:25:46,600 --> 00:25:47,600
drives.

410
00:25:47,600 --> 00:25:51,440
All of it is fascinating.

411
00:25:51,440 --> 00:25:55,120
Datadog.com slash Linux Action News.

412
00:25:55,120 --> 00:25:57,360
Datadog is end-to-end application monitoring.

413
00:25:57,360 --> 00:25:59,720
They're the unified monitoring and analytics platform.

414
00:25:59,720 --> 00:26:03,760
I mean, really for complete visibility into the performance of your applications, you

415
00:26:03,760 --> 00:26:08,020
need telemetry data, traces, metrics, and logs that describe the activity across your

416
00:26:08,020 --> 00:26:09,520
entire stack.

417
00:26:09,520 --> 00:26:13,640
But if you're using multiple monitoring tools, your data can end up in silos, making it difficult

418
00:26:13,640 --> 00:26:17,480
to troubleshoot issues that affect the user experience.

419
00:26:17,480 --> 00:26:21,900
Datadog lets you quickly analyze the performance of your Linux servers in real time with customizable

420
00:26:21,900 --> 00:26:26,240
dashboards that troubleshoot Linux issues in seconds with a unified view of your metrics,

421
00:26:26,240 --> 00:26:29,800
your traces, and your logs all in one place.

422
00:26:29,800 --> 00:26:33,600
And with the Datadog clipboard, you can streamline the performance, so check out investigation

423
00:26:33,600 --> 00:26:38,160
outages by capturing relevant views of your infrastructure and applications all in one

424
00:26:38,160 --> 00:26:39,160
place.

425
00:26:39,160 --> 00:26:40,960
In one shot time, get the big picture.

426
00:26:40,960 --> 00:26:45,440
And they have turnkey integrations for over 400 technologies to just get going.

427
00:26:45,440 --> 00:26:50,920
You can even use Datadog to monitor the key metrics of a Linux box right alongside proprietary

428
00:26:50,920 --> 00:26:54,160
and open source applications, the entire stack.

429
00:26:54,160 --> 00:26:59,720
So start your Datadog trial today by visiting datadog.com slash Linux Action News.

430
00:26:59,720 --> 00:27:04,140
You start your free trial, create one dashboard, and you can get a free Datadog t-shirt.

431
00:27:04,140 --> 00:27:06,840
So that's datadog.com slash Linux Action News.

432
00:27:06,840 --> 00:27:10,120
Create a dashboard, get some free swag, and unify your monitoring.

433
00:27:10,120 --> 00:27:14,760
A big thank you to Datadog for sponsoring this here episode of Linux Action News.

434
00:27:14,760 --> 00:27:22,360
And a big thank you to everybody for visiting datadog.com slash Linux Action News.

435
00:27:22,360 --> 00:27:27,800
Developers at ARM virtualization company Corellium have managed to get Ubuntu 2004

436
00:27:27,800 --> 00:27:31,240
up and running on the new Apple Silicon Mac Mini.

437
00:27:31,240 --> 00:27:36,480
This certainly got a lot of attention when the developers started tweeting pictures of

438
00:27:36,480 --> 00:27:42,160
the Raspberry Pi version of Ubuntu desktop running on an M1.

439
00:27:42,160 --> 00:27:44,920
The networking was made possible using a dongle.

440
00:27:44,920 --> 00:27:49,800
And as you might expect, the GPU work here, well, is minimal.

441
00:27:49,800 --> 00:27:51,600
It's essentially just a frame buffer.

442
00:27:51,600 --> 00:27:53,560
It's no acceleration.

443
00:27:53,560 --> 00:27:55,240
So that's still a sticking point.

444
00:27:55,240 --> 00:28:02,240
Corellium has worked on getting Linux working on the A14 chip that can be found in some

445
00:28:02,240 --> 00:28:03,760
iPads, I believe.

446
00:28:03,760 --> 00:28:08,960
So they had a bunch of code that was pretty much baked for the A14.

447
00:28:08,960 --> 00:28:13,760
So it wasn't a big transition to get it up and running on the M1.

448
00:28:13,760 --> 00:28:17,360
The only kind of negative thing about it is they've just kind of been sitting on this

449
00:28:17,360 --> 00:28:20,040
code for this entire time.

450
00:28:20,040 --> 00:28:24,280
And then they kind of have one developer who's now putting it up on GitHub.

451
00:28:24,280 --> 00:28:29,480
And it seems kind of like it's more of a product that they have that they're utilizing now

452
00:28:29,480 --> 00:28:31,120
to make a big splash.

453
00:28:31,120 --> 00:28:36,040
And I say that because in background, in a conversation I was having with Hector Martin,

454
00:28:36,040 --> 00:28:40,920
he had talked to me about how one of the ways they may strategically try to raise awareness

455
00:28:40,920 --> 00:28:44,480
for their project is by doing exactly what Corellium just did.

456
00:28:44,480 --> 00:28:48,120
He kind of even laid out that the way you go through it, the way you take the pictures

457
00:28:48,120 --> 00:28:52,800
up on Twitter and post them, like he had the whole thing as a way to raise awareness for

458
00:28:52,800 --> 00:28:53,800
the project.

459
00:28:53,800 --> 00:28:55,680
A marketing media strategy.

460
00:28:55,680 --> 00:28:58,640
And of course, we're talking about Asahi Linux project.

461
00:28:58,640 --> 00:29:03,760
He launched to try to do this, so there's a little bit of maybe some thunder being stolen

462
00:29:03,760 --> 00:29:04,760
here.

463
00:29:04,760 --> 00:29:06,840
It at least felt a little dicey on Twitter for a few moments.

464
00:29:06,840 --> 00:29:09,280
It's probably not going to help them raise funds.

465
00:29:09,280 --> 00:29:11,680
It's not going to get them any more patrons for a bit.

466
00:29:11,680 --> 00:29:15,560
I mean, not that it's going to steal from them, but what it kind of came across as is

467
00:29:15,560 --> 00:29:17,040
Corellium was like, hey, look at us.

468
00:29:17,040 --> 00:29:18,440
It actually even tweeted this.

469
00:29:18,440 --> 00:29:23,180
We had a free day, so we got it up and running on the M1.

470
00:29:23,180 --> 00:29:26,240
But they really haven't interfaced directly with the kernel community as far as we can

471
00:29:26,240 --> 00:29:27,460
tell yet.

472
00:29:27,460 --> 00:29:31,460
And we don't really know if they have any actual plan on following through with being

473
00:29:31,460 --> 00:29:36,120
a normal contributing member of the kernel community, or if this is just sort of a code

474
00:29:36,120 --> 00:29:37,120
dump.

475
00:29:37,120 --> 00:29:38,120
We'll see.

476
00:29:38,120 --> 00:29:41,380
I mean, at the moment, it's just one guy doing the work to take all of this upstream and

477
00:29:41,380 --> 00:29:42,600
try to clean it up.

478
00:29:42,600 --> 00:29:46,140
And at the end of the day, the Ashi Linux project can't really touch this unless it's

479
00:29:46,140 --> 00:29:47,600
legally safe.

480
00:29:47,600 --> 00:29:50,240
And so it's sort of like one of these situations where, okay, good job.

481
00:29:50,240 --> 00:29:51,240
You got it working.

482
00:29:51,240 --> 00:29:52,300
Now upstream it.

483
00:29:52,300 --> 00:29:54,680
And if it passes those tests, then we can really use it.

484
00:29:54,680 --> 00:29:58,580
In the meantime, this is actually a bit of a marketing stunt.

485
00:29:58,580 --> 00:30:04,680
Unless you want to get a Mac that has no graphics acceleration that requires dongles for basic

486
00:30:04,680 --> 00:30:05,680
functionality.

487
00:30:05,680 --> 00:30:07,180
I mean, that's kind of what a Mac is already.

488
00:30:07,180 --> 00:30:12,320
But really, who buys a really expensive M1 Mac to have very poor functionality?

489
00:30:12,320 --> 00:30:16,080
And I think what Corelium is doing is they're kind of capitalizing on people not understanding

490
00:30:16,080 --> 00:30:20,760
the nuances of what it takes to get this system up and running to get attention for their

491
00:30:20,760 --> 00:30:21,760
commercial products.

492
00:30:21,760 --> 00:30:24,640
Yeah, it is hard to downplay that aspect.

493
00:30:24,640 --> 00:30:31,400
I think Hector Martin and Asahi Linux had been trying to take things definitely slower,

494
00:30:31,400 --> 00:30:35,180
step by step, trying to do things right, making sure things could be upstream.

495
00:30:35,180 --> 00:30:39,240
But also, I think have done a surprisingly good job of setting expectations from the

496
00:30:39,240 --> 00:30:40,240
beginning.

497
00:30:40,240 --> 00:30:44,080
Whereas you're right, these kinds of announcements, flashy announcements for Corelium, despite

498
00:30:44,080 --> 00:30:47,680
some impressive work, I mean, their blog post about how they did it and some of the technical

499
00:30:47,680 --> 00:30:52,480
details is definitely interesting and it's some hard and impressive work.

500
00:30:52,480 --> 00:30:55,600
But yeah, no one's going to, this is not usable by any stretch of the means.

501
00:30:55,600 --> 00:30:58,960
You've got a proof of concept working and that's what you should have said.

502
00:30:58,960 --> 00:31:02,600
Yeah, and they say they're aiming to upstream as much of the work as possible.

503
00:31:02,600 --> 00:31:04,320
That's going to be what matters long term.

504
00:31:04,320 --> 00:31:08,080
You know, I have seen a few mailing lists posts go by, it does look like there's some

505
00:31:08,080 --> 00:31:09,080
healthy discussions.

506
00:31:09,080 --> 00:31:11,780
I haven't seen, you know, nothing's been merged, of course, far too early for that.

507
00:31:11,780 --> 00:31:15,240
But I see Hector Martin's name in there providing some good feedback to you.

508
00:31:15,240 --> 00:31:20,520
So hopefully the end result here is that patches fly, conversation happens and eventually good

509
00:31:20,520 --> 00:31:21,680
code gets merged.

510
00:31:21,680 --> 00:31:25,720
On the GPU front, it is worth mentioning that the developer we've covered in the past who's

511
00:31:25,720 --> 00:31:31,160
working with the Yashii Linux project has put another update on their blog and it appears

512
00:31:31,160 --> 00:31:33,080
that progress is happening.

513
00:31:33,080 --> 00:31:37,240
They've actually been able to draw a triangle using the GPU on the screen.

514
00:31:37,240 --> 00:31:42,720
Well, while that is a minor in the grand scheme of things, it's a very important first step.

515
00:31:42,720 --> 00:31:45,680
They're drawing triangles now on the M1 GPU.

516
00:31:45,680 --> 00:31:49,000
And the debate continues if this time is a good investment or not.

517
00:31:49,000 --> 00:31:52,720
But I kind of feel like that's a side debate because it's clearly happening regardless.

518
00:31:52,720 --> 00:31:54,200
Yeah, I'm not these people's manager.

519
00:31:54,200 --> 00:31:55,840
I don't get to tell them how to spend their time.

520
00:31:55,840 --> 00:31:58,920
So all I can do is sit here and wait and hope.

521
00:31:58,920 --> 00:32:04,160
Well talking about ARM devices, the Raspberry Pi Foundation has a real tiny announcement.

522
00:32:04,160 --> 00:32:05,280
It's a Pico.

523
00:32:05,280 --> 00:32:09,060
It's a little Raspberry Pi Pico board for four dollars.

524
00:32:09,060 --> 00:32:15,080
It has a custom dual core ARM processor running at a hundred and thirty three megahertz, two

525
00:32:15,080 --> 00:32:20,820
hundred and sixty four kilobytes of RAM and twenty six GPIO ports, which include three

526
00:32:20,820 --> 00:32:24,800
analog inputs, a micro USB port and a temperature sensor.

527
00:32:24,800 --> 00:32:27,860
It doesn't come with Wi-Fi or Bluetooth, though.

528
00:32:27,860 --> 00:32:32,560
But I mean, again, it's four dollars if you want to run something on that shiny new Raspberry

529
00:32:32,560 --> 00:32:33,560
Pi Pico.

530
00:32:33,560 --> 00:32:35,400
It's actually quite easy.

531
00:32:35,400 --> 00:32:39,640
You plug your device in your computer using the micro USB port, then you boot up the Pi

532
00:32:39,640 --> 00:32:44,700
Pico while holding down a button and the device will just appear on your computer as an external

533
00:32:44,700 --> 00:32:48,560
drive, copy over your programs and away you go.

534
00:32:48,560 --> 00:32:52,820
Now something I noticed that is really pretty neat is that in addition to C, you can use

535
00:32:52,820 --> 00:32:55,280
Micro Python as your development language.

536
00:32:55,280 --> 00:32:58,440
It's a Python inspired language for microcontrollers.

537
00:32:58,440 --> 00:33:02,560
And I don't know about you, Chris, but my C++ is a little rusty.

538
00:33:02,560 --> 00:33:07,320
And as I know you love to see, Wes, they have tons of good documentation, a data sheet and

539
00:33:07,320 --> 00:33:08,320
a lot more.

540
00:33:08,320 --> 00:33:13,860
We'll have links in the show notes at LinuxActionNews.com slash 173.

541
00:33:13,860 --> 00:33:17,160
And while you're over there, check out the subscribe page for all the ways to get new

542
00:33:17,160 --> 00:33:18,160
episodes.

543
00:33:18,160 --> 00:33:21,240
And of course, the contact page for ways to get in touch.

544
00:33:21,240 --> 00:33:27,240
And pro tip, check out Linux Unplug 390 for an in the trenches discussion of Elasticsearch.

545
00:33:27,240 --> 00:33:31,840
As for us, though, we'll be back next Monday with our weekly take on the latest Linux and

546
00:33:31,840 --> 00:33:33,240
open source news.

547
00:33:33,240 --> 00:34:02,840
Thanks for joining us and we will see you next week.

