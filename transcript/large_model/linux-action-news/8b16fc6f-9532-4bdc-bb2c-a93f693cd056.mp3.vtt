WEBVTT

00:00.000 --> 00:08.920
Hello, and welcome to Linux Action News, episode 167, recorded on December 13th, 2020.

00:08.920 --> 00:09.920
I'm Chris.

00:09.920 --> 00:10.920
And I'm Wes.

00:10.920 --> 00:11.920
Hello, Wes.

00:11.920 --> 00:13.000
Let's do the news.

00:13.000 --> 00:17.040
And let's start with this huge news with CentOS.

00:17.040 --> 00:21.840
Red Hat has announced that the future of CentOS is Stream.

00:21.840 --> 00:23.760
It's CentOS, Wes, but not as we know it.

00:23.760 --> 00:29.160
Yeah, this is certainly a complex story, and we'll cover all the angles, but let's start

00:29.160 --> 00:30.160
with some context.

00:30.160 --> 00:37.480
CentOS has a long history, starting 16 years ago, way back in 2004, with its first release,

00:37.480 --> 00:39.200
version 2.

00:39.200 --> 00:42.960
CentOS stands for Community Enterprise Linux Operating System.

00:42.960 --> 00:48.240
And the project was a hit, offering a binary compatible and subscription-free distribution

00:48.240 --> 00:51.400
built from the Red Hat Enterprise Linux source code.

00:51.400 --> 00:57.000
With one major caveat, of course, and that was that Red Hat's proprietary branding and

00:57.000 --> 00:59.520
logos, everything of that nature was removed.

00:59.520 --> 01:05.240
And also another big one, especially in production workloads, no Red Hat commercial support.

01:05.240 --> 01:09.320
But CentOS still managed to appeal to a broad market of developers, tinkers, and definitely

01:09.320 --> 01:13.460
people who just wanted to try out the platform before they paid for the platform.

01:13.460 --> 01:19.460
And CentOS also became famous along that way for some rough patches, some things that weren't

01:19.460 --> 01:22.560
necessarily ideal for an enterprise distribution.

01:22.560 --> 01:29.200
I think maybe more notable is on July 31st, 2009, the CentOS project leader disappeared.

01:29.200 --> 01:34.280
And to kind of give you a taste of how things were back then, the post starts, this is just

01:34.280 --> 01:40.040
the first sentence, quote, the future of the CentOS Linux project appears in jeopardy,

01:40.040 --> 01:44.600
as the project leader, Lance Davis, has dropped off the face of the earth, end quote.

01:44.600 --> 01:49.480
Yeah, like many open source projects, there's some troubles along the way, especially around

01:49.480 --> 01:54.760
control and organization of the project, but that didn't slow CentOS down.

01:54.760 --> 01:59.320
In 2010, they'd overtaken Debian to become the most popular Linux distribution for web

01:59.320 --> 02:03.840
servers, controlling almost 30% of the Linux web at that time.

02:03.840 --> 02:06.960
Yeah, Debian managed to claim some of that back later.

02:06.960 --> 02:12.960
And of course, now in 2020, according to W3Techs, as far as web servers go, Ubuntu has 47.6%

02:12.960 --> 02:14.160
of the market today.

02:14.160 --> 02:19.360
But CentOS, still in a strong number two with 18.8% of web servers that are active on the

02:19.360 --> 02:21.760
web today, still very actively used.

02:21.760 --> 02:26.400
The next real notable thing that happened was January 27th, 2014.

02:26.400 --> 02:32.260
Red Hat Aqua hired some of the CentOS development team and the branding and the copyrights.

02:32.260 --> 02:35.640
So it was essentially a purchase, but in a kind of open source project style.

02:35.640 --> 02:40.120
And at the time they said that Red Hat and the CentOS project would, quote, join forces

02:40.120 --> 02:47.120
to spread, I'm sorry, join forces to speed up open source innovation, end quote.

02:47.120 --> 02:48.720
I don't think they quite said it like that though.

02:48.720 --> 02:53.200
Now you add just a little bit more flair, as you do.

02:53.200 --> 02:57.760
Now from there CentOS continued on until the next big era in announcement, which was last

02:57.760 --> 03:03.400
year in September of 2019, when CentOS Stream was announced and promised to transform the

03:03.400 --> 03:06.200
development experience within CentOS.

03:06.200 --> 03:10.720
And that brings us to this week, December 8th, 2020.

03:10.720 --> 03:17.620
Red Hat has announced that the CentOS project is shifting its entire focus to CentOS Stream.

03:17.620 --> 03:22.400
What has changed as of this week is the standard release of CentOS is going away in December

03:22.400 --> 03:24.240
2021.

03:24.240 --> 03:26.960
There will not be a CentOS Linux 9.

03:26.960 --> 03:34.300
Updates for CentOS Linux 8, the standard distribution will continue until December 31st, 2021.

03:34.300 --> 03:42.200
And CentOS Stream 9 will launch in Q2 of 2021 as part of the RHEL 9 development process.

03:42.200 --> 03:47.680
The significant change here is that CentOS will no longer be built from RHEL and instead

03:47.680 --> 03:53.080
RHEL will be built from CentOS because going forward, CentOS means CentOS Stream.

03:53.080 --> 03:57.080
In the past, we use that to refer to what was basically just the rebuild of Red Hat

03:57.080 --> 04:00.620
Enterprise Linux, but CentOS is now CentOS Stream.

04:00.620 --> 04:03.720
You won't have traditional releases going forward into the future.

04:03.720 --> 04:07.420
You won't have a new CentOS 7.3 or 8.3.

04:07.420 --> 04:10.320
It's just going to be CentOS Stream.

04:10.320 --> 04:15.460
The way to think about it now is it is the bridge of development between Red Hat Enterprise

04:15.460 --> 04:17.000
Linux and Fedora.

04:17.000 --> 04:21.720
Fedora is where operating system development and fundamentals happens.

04:21.720 --> 04:24.940
Stream is where the entire product is developed and refined.

04:24.940 --> 04:28.200
And RHEL is where it is shipped, Red Hat Enterprise Linux.

04:28.200 --> 04:30.520
This is a big departure from the way things have been.

04:30.520 --> 04:33.880
And the reaction to this has been massive.

04:33.880 --> 04:39.000
I've broken it down into four components and I want to start with the communication because

04:39.000 --> 04:42.160
I think that's one of the number one complaints is this was communicated poorly.

04:42.160 --> 04:45.960
And Red Hat has attempted to address this and individual members of Red Hat have made

04:45.960 --> 04:51.480
some really great blog posts after the fact that really help clarify all of this.

04:51.480 --> 04:55.800
So we've had the benefit of reading those and can consolidate and relay it.

04:55.800 --> 04:58.760
But if you'd like, we do have some in the show notes.

04:58.760 --> 05:03.400
They've added significantly more to the conversation since the original announcement.

05:03.400 --> 05:07.680
It's a real shame these didn't come out before or with the announcement or they didn't lead

05:07.680 --> 05:11.480
the announcement because they really clarify a few things.

05:11.480 --> 05:16.040
But additionally, if you zoom out and I think it's unfortunate because it speaks badly for

05:16.040 --> 05:20.040
Red Hat is I think the echo chamber got them on this one.

05:20.040 --> 05:24.840
They were a little blindsided by this and they didn't really think big picture here

05:24.840 --> 05:30.080
because they could have done a strategy that would have potentially just significantly

05:30.080 --> 05:31.840
lessen the blow of this thing.

05:31.840 --> 05:34.680
Just you know, here's an example.

05:34.680 --> 05:41.400
And Red Hat spent from now until RHEL 9, which is due in 2022.

05:41.400 --> 05:43.280
So let's just say a year and a half and change.

05:43.280 --> 05:48.560
Let's say they spent the next year, year and a half and change showing the world how you

05:48.560 --> 05:53.920
could take their universal base image, which is based on RHEL, and you could run that on

05:53.920 --> 05:56.480
sent off stream and have a good time.

05:56.480 --> 06:00.320
Or if they showed different use cases of people running sent off stream and how boring it

06:00.320 --> 06:02.880
is and how it's essentially the same experience.

06:02.880 --> 06:07.300
Yeah, I mean, part of the problem here, I think, is that sent off stream had partially

06:07.300 --> 06:12.200
been branded as something of a rolling release, although in the context of the RHEL universe.

06:12.200 --> 06:15.320
And that meant people didn't really think you could be trusted in production, that it

06:15.320 --> 06:17.960
was right for that use case at all.

06:17.960 --> 06:21.600
And we haven't heard much about stream really, at least in the larger community since it

06:21.600 --> 06:22.660
was released last year.

06:22.660 --> 06:27.080
So being told that's your new operating system without really understanding it, that's a

06:27.080 --> 06:28.080
little bit scary.

06:28.080 --> 06:33.320
But you use that year and a half to correct the misconception that stream is rolling.

06:33.320 --> 06:36.480
I mean, I've seen comparisons to Arch, which is ridiculous.

06:36.480 --> 06:37.480
It doesn't make sense.

06:37.480 --> 06:41.140
I think when people try this, they're going to be surprised at how boring it is.

06:41.140 --> 06:43.800
So correcting that misconception.

06:43.800 --> 06:48.280
And then last, well, actually, two more things they could have done is they are working on

06:48.280 --> 06:52.760
a free Red Hat Enterprise Linux program with less production restrictions.

06:52.760 --> 06:54.160
It's almost out.

06:54.160 --> 06:55.880
They could have launched that first.

06:55.880 --> 07:00.880
And then lastly, and probably most importantly, and how it should have gone down, is this

07:00.880 --> 07:06.120
could have waited, easy for me to say, until CentOS 9 slash RHEL 9 and make the change

07:06.120 --> 07:07.800
at a major version.

07:07.800 --> 07:12.600
Because one of the number one things we've got in via email is people have just migrated

07:12.600 --> 07:13.600
to CentOS 8.

07:13.600 --> 07:14.600
Yeah, exactly.

07:14.600 --> 07:15.600
They're looking at that.

07:15.600 --> 07:18.000
They know that there's a long support cycle, or at least there used to be.

07:18.000 --> 07:21.160
And so they could take some time to make the shift in their own time when they were ready,

07:21.160 --> 07:23.520
start playing around in the new version of the release.

07:23.520 --> 07:28.560
And when you've just found out that all that work is maybe wasted, ouch.

07:28.560 --> 07:33.880
One of our matrix chatters said that he had a day that was like none other because he

07:33.880 --> 07:34.960
saw the news.

07:34.960 --> 07:38.400
And later that day, they were going to have a meeting about migrating to CentOS 8.

07:38.400 --> 07:43.180
And like, within the span of one day, the next year long migration plan was just completely

07:43.180 --> 07:44.180
thrown out.

07:44.180 --> 07:46.280
And like, he's got no idea what we're doing now.

07:46.280 --> 07:49.040
We just, it was, I mean, it just it disrupted a lot of people.

07:49.040 --> 07:54.400
So not getting a good solid heads up and then reducing the perceived support window, even

07:54.400 --> 07:58.320
if it wasn't, you know, even if it wasn't written in stone, if it wasn't confirmed,

07:58.320 --> 07:59.320
for sure.

07:59.320 --> 08:06.420
The perceived support window from 2029 to 2021, I mean, it's a massive reduction, right?

08:06.420 --> 08:10.640
So it's it's one of those situations where if you could have prepped people a little

08:10.640 --> 08:14.040
more for that coming, could have given them the logic and the reasoning and could have

08:14.040 --> 08:18.200
made them more comfortable with what they're transitioning to and given them more options

08:18.200 --> 08:22.000
to get free rel, all of that would have made this a lot smoother.

08:22.000 --> 08:26.080
So the communication strategy from Red Hat was like amateur hour.

08:26.080 --> 08:27.200
They rushed it.

08:27.200 --> 08:30.460
And you got to think that's the result of the echo chamber.

08:30.460 --> 08:34.820
And I think the change in that life support commitment cycle also leads to this amount

08:34.820 --> 08:38.840
of reaction, making that kind of change, regardless of how it was communicated, was going to upset

08:38.840 --> 08:39.840
people.

08:39.840 --> 08:44.240
Yeah, one of the big changes here is that CentOS stream support will only be five years.

08:44.240 --> 08:49.080
And five years is pretty great for you know, community provided support, but it's not 10.

08:49.080 --> 08:52.640
And if that's what you're used to, maybe you're deploying stuff that's in environments that

08:52.640 --> 08:56.360
you don't touch or service often, just it's just a different paradigm.

08:56.360 --> 08:57.360
Yep.

08:57.360 --> 08:58.360
That's that is true.

08:58.360 --> 09:00.000
I'd say that's like the top third complaint.

09:00.000 --> 09:03.800
And the top fourth complaint out of a top four here is that people are convinced stream

09:03.800 --> 09:07.840
is going to be less stable than Red Hat Enterprise Linux.

09:07.840 --> 09:12.840
I think this is going to be one of those we'll just see Red Hat is making the case that no,

09:12.840 --> 09:13.840
not really.

09:13.840 --> 09:16.920
We're doing everything through the same continuous integration testing.

09:16.920 --> 09:20.620
We're still having all of the same validation requirements for what goes into CentOS stream

09:20.620 --> 09:22.560
that goes into RHEL itself.

09:22.560 --> 09:26.600
And Red Hat's trying to make the argument that it's this engineering process that has

09:26.600 --> 09:32.440
led to RHEL stability, not the not not like the order in which the packages move through

09:32.440 --> 09:33.440
different distributions.

09:33.440 --> 09:38.000
Yeah, in many ways, this is a modernization, right, embracing some of the cloud workflows,

09:38.000 --> 09:40.340
modern DevOps workflows here.

09:40.340 --> 09:42.400
Previously a lot of this work was hidden at Red Hat.

09:42.400 --> 09:44.180
We didn't see how exactly RHEL got built.

09:44.180 --> 09:47.840
But if you think about it, when you're trying to build this stable enterprise operating

09:47.840 --> 09:52.640
system, you can only tolerate so much change in the layer just above it when you're trying

09:52.640 --> 09:55.520
to build all these pieces together, integrate them and test them.

09:55.520 --> 09:58.760
So I don't think there's a huge incentive for that to break all the time.

09:58.760 --> 10:03.720
Okay, maybe some things will happen, but there were bugs and issues in CentOS as a rebuild

10:03.720 --> 10:04.720
as well.

10:04.720 --> 10:09.800
Well, and RHEL actually had an issue that shipped in production with that boothole flaw

10:09.800 --> 10:13.800
recently that caused some Red Hat Enterprise Linux systems not to boot.

10:13.800 --> 10:15.920
It happens even at the RHEL level.

10:15.920 --> 10:20.920
And if you take away the change that a lot of sysadmins that maybe even have millions

10:20.920 --> 10:25.200
of deployments just had the land that just shifted under them, and we look at what this

10:25.200 --> 10:30.080
means for Red Hat Enterprise Linux, I think this is kind of interesting because it does

10:30.080 --> 10:35.240
in a sense, it moves the future of Red Hat Enterprise Linux out into the open and gives

10:35.240 --> 10:40.920
people a way to develop against that, like the Podman team, for example, is working with

10:40.920 --> 10:44.040
much more, it's a much more faster paced project.

10:44.040 --> 10:48.400
It's working with a lot newer technologies than the rest of traditional RHEL.

10:48.400 --> 10:52.400
And so for them, something like CentOS Stream gives them a pace that they can develop at

10:52.400 --> 10:57.100
and have it ready when RHEL 9 ships, but it still goes through all the same validation

10:57.100 --> 10:58.100
and testing.

10:58.100 --> 11:03.520
That could be, if that works out right, that could be really just fine.

11:03.520 --> 11:08.520
People could end up converting to Stream, which is apparently very simple to do.

11:08.520 --> 11:13.440
Just gone through it once on a test system, it was very obvious and very simple.

11:13.440 --> 11:17.220
I don't know if it would be harder on a system that's been around for a year or two that

11:17.220 --> 11:24.200
maybe has more technical debt, it could be, but it's a supported migration path from standard

11:24.200 --> 11:27.840
CentOS 8 to CentOS Stream 8.

11:27.840 --> 11:32.600
And if you make that change, I think you're going to find it's pretty basic.

11:32.600 --> 11:34.880
It feels just like regular CentOS.

11:34.880 --> 11:38.860
It also provides some more ways of actually working with the upstream community.

11:38.860 --> 11:43.520
Because if you're a RHEL customer or just using CentOS, you didn't have a great pipeline

11:43.520 --> 11:47.620
for getting in some of those fixes if you did run into a bug or you wanted a new feature.

11:47.620 --> 11:50.580
But now with Stream, it's open, everything's out in the open.

11:50.580 --> 11:55.060
You can contribute, you can submit bugs, submit fixes, submit patches, and actually get influence

11:55.060 --> 11:59.460
and fix your own problems potentially or work with Red Hat and the open source community

11:59.460 --> 12:03.260
around it to improve things for the next version of the software you're going to be running.

12:03.260 --> 12:05.440
And that wasn't really available before.

12:05.440 --> 12:06.440
Yeah.

12:06.440 --> 12:09.040
So that is obviously a clear improvement.

12:09.040 --> 12:15.120
I think additionally, as a Fedora user, what I like about it is it kind of supplies a buffer

12:15.120 --> 12:18.600
between the community and the suits.

12:18.600 --> 12:20.880
CentOS Stream is where they're going to focus.

12:20.880 --> 12:23.500
It's where the attention is going to go for getting things ready.

12:23.500 --> 12:28.680
And it lets Fedora just be Fedora and not have to worry about trying to get itself into

12:28.680 --> 12:32.200
a shippable state that is enterprise supportable, et cetera, et cetera.

12:32.200 --> 12:35.540
They can continue to innovate and they can try to make the best product there.

12:35.540 --> 12:39.880
That then leads to CentOS where the suit pressure is applied, right?

12:39.880 --> 12:45.460
All of the expectations of the business get focused and it kind of keeps that heat away

12:45.460 --> 12:49.960
from what is now a daily desktop driver for me.

12:49.960 --> 12:53.440
And so I kind of like this arrangement from a Fedora user standpoint.

12:53.440 --> 12:55.040
It helps keep Fedora weird.

12:55.040 --> 13:01.800
Well, and I think we've seen speculation that, oh, if this is the end of Fedora, because

13:01.800 --> 13:04.840
if they did this to CentOS, then they're going to do it to Fedora next.

13:04.840 --> 13:10.600
But actually, it makes Fedora a critical part of the fundamental operating system development

13:10.600 --> 13:16.160
that needs to happen, has to happen in a space that still gets used, it still requires shipping

13:16.160 --> 13:20.760
a product because at the end, they're trying to get it to something that they can turn

13:20.760 --> 13:22.680
into an enterprise product.

13:22.680 --> 13:26.200
And that means Fedora is critical for that early phase development.

13:26.200 --> 13:28.680
And it means I keep getting fresh, cool stuff.

13:28.680 --> 13:29.680
Yeah, exactly.

13:29.680 --> 13:30.680
Right.

13:30.680 --> 13:34.120
I mean, you're not going to just enable system D, home D on CentOS stream because it doesn't

13:34.120 --> 13:35.120
make sense.

13:35.120 --> 13:36.120
You haven't tried it out.

13:36.120 --> 13:37.320
You don't know what all the implications or downsides are.

13:37.320 --> 13:41.840
But Fedora can be a place where that kind of more wild out in the open development can

13:41.840 --> 13:44.040
actually take place with fewer risks.

13:44.040 --> 13:49.400
And so you'll have, I think, a fair amount of users who will be very disappointed.

13:49.400 --> 13:54.560
And I think you're going to have a lot of sysadmins out there who had their trust violated,

13:54.560 --> 13:58.160
and it's probably never going to be forgotten.

13:58.160 --> 14:03.480
Like some of the famous moments in the past of CentOS or CentOS, this is yet another one

14:03.480 --> 14:04.840
of those.

14:04.840 --> 14:08.600
And I think long term, they're probably going to be OK.

14:08.600 --> 14:12.460
You're probably going to have most users who are cost sensitive that have something in

14:12.460 --> 14:16.000
production just make the switch, and then you'll have some that defect to the Ubuntu

14:16.000 --> 14:21.480
and the Seusses out there, or purchase a Red Hat Enterprise Linux subscription.

14:21.480 --> 14:26.680
And of course, there are some new open source rebuilds in the work to try and take the place

14:26.680 --> 14:30.000
of what the former name of CentOS meant.

14:30.000 --> 14:31.000
We'll see.

14:31.000 --> 14:34.480
I guess that'll be a factor of how stable Stream is, if that works for companies, and

14:34.480 --> 14:39.520
if a legitimate and strong enough open source community forms over in those new areas.

14:39.520 --> 14:40.520
Yeah.

14:40.520 --> 14:42.480
We should probably get to a couple of the forks in a moment.

14:42.480 --> 14:45.760
But I was just thinking, Wes, as we were talking about this, the other thing that you have

14:45.760 --> 14:51.440
to keep in mind is all of this is happening while AWS is coming along and gobbling up

14:51.440 --> 14:55.720
more and more of the traditional server market share, and more and more applications are

14:55.720 --> 15:00.480
just getting shipped as containers, and people could care less what the distribution is.

15:00.480 --> 15:05.600
And you have to wonder if in that new world, if a free version of your operating system

15:05.600 --> 15:09.760
isn't maybe more important than ever to stay competitive and to get user base.

15:09.760 --> 15:16.640
And that's the thing is, if Red Hat doesn't keep those users, somebody like AWS, who's

15:16.640 --> 15:21.400
now offering Amazon Linux, which is based on Red Hat Enterprise Linux.

15:21.400 --> 15:22.400
Indeed.

15:22.400 --> 15:26.140
Comes along and says, oh, by the way, now we also have some on-premises offering, so

15:26.140 --> 15:29.520
you can use the same management tools for your on-premises install as you do the ones

15:29.520 --> 15:30.680
up in AWS Cloud.

15:30.680 --> 15:36.740
And oh, by the way, you can deploy Amazon Linux, and it's a supported RHEL clone.

15:36.740 --> 15:41.360
And they may be risking some market loss to essentially the cloud in this move as well.

15:41.360 --> 15:45.740
Yeah, it is a time to be relevant and to be easy to try things out, right?

15:45.740 --> 15:50.560
Will CentOS Stream have that same sort of understanding that you can click that when

15:50.560 --> 15:53.440
you see it in your dashboard of whatever cloud you're using to spin up a new instance to

15:53.440 --> 15:55.000
play around for your next project?

15:55.000 --> 15:59.360
Is it going to have an appeal to you that you're actually going to want to use?

15:59.360 --> 16:03.840
One of the former co-founders of CentOS has launched Rocky Linux.

16:03.840 --> 16:08.480
It's already become the number one project on GitHub over the weekend, lots of excitement

16:08.480 --> 16:10.300
and activity.

16:10.300 --> 16:15.720
And Cloud Linux, which is made by a cloud hosting provider, has also come along and

16:15.720 --> 16:20.040
said, we're going to offer Cloud Linux, and we already have the staff and the team to

16:20.040 --> 16:21.040
maintain it.

16:21.040 --> 16:22.040
We're ready to go.

16:22.040 --> 16:26.920
So just overnight, practically, you've had at least two, and I've seen a third pop up

16:26.920 --> 16:27.920
as well.

16:27.920 --> 16:32.680
Well, and you know Oracle is advertising their unspeakable Linux as well.

16:32.680 --> 16:33.680
Right.

16:33.680 --> 16:37.320
Everybody like woke up and tried to take advantage of the situation and said, hey, check us out.

16:37.320 --> 16:43.600
And by the way, we have a newer kernel if you want it to with ButterFS support.

16:43.600 --> 16:46.880
That was actually part of their pitch.

16:46.880 --> 16:50.800
Everybody's going to try to, you know, everybody who's going to try to take advantage of this

16:50.800 --> 16:54.720
now, this vacuum in the market for this, because clearly there was people that wanted CentOS.

16:54.720 --> 16:56.800
It was a very popular distribution.

16:56.800 --> 16:59.340
It served a need.

16:59.340 --> 17:02.400
And somebody will come along and offer it.

17:02.400 --> 17:06.280
Maybe Red Hat will step up and they'll refine their free Red Hat Enterprise project.

17:06.280 --> 17:09.880
Maybe they'll get more people using the universal base image.

17:09.880 --> 17:14.840
Or maybe people are just going to switch to Rocky Linux 9 when it comes out.

17:14.840 --> 17:16.320
Only time will tell on that one.

17:16.320 --> 17:21.080
But this is all going to be stuff we'll be following here on Linux Action News.

17:21.080 --> 17:22.760
linode.com slash LAN.

17:22.760 --> 17:27.240
Go there to get a $100 60 day credit towards a new account and go there to support the

17:27.240 --> 17:28.240
show.

17:28.240 --> 17:29.780
Linode is our cloud server provider.

17:29.780 --> 17:33.640
And because the price is so great, it makes it possible for a small team to have killer

17:33.640 --> 17:34.640
infrastructure.

17:34.640 --> 17:38.700
And personally, one of the things that I think is great about Linode is all of the distributions

17:38.700 --> 17:39.700
they support.

17:39.700 --> 17:42.480
I recently converted a CentOS 8 bucks to CentOS Stream.

17:42.480 --> 17:47.400
They got all the Alpines, Arches, recent CentOS releases, Debian's, Fedora's, OpenSUSE's,

17:47.400 --> 17:48.400
and Ubuntu's.

17:48.400 --> 17:50.320
Oh my, they've got it all.

17:50.320 --> 17:55.780
If you need a personal server for a blog or a portfolio, or maybe a game server, VPN server,

17:55.780 --> 17:58.400
they got systems that start at $5 a month.

17:58.400 --> 18:01.980
When you go to linode.com slash LAN, you get a $100 credit.

18:01.980 --> 18:05.960
Now you can really build out some infrastructure, maybe something for your business.

18:05.960 --> 18:09.960
You'd be surprised with 11 data centers around the world, you can get a server right next

18:09.960 --> 18:12.360
to your clients and serve them super fast.

18:12.360 --> 18:17.480
But what I love about Linode beyond their great dashboard, the 40 gigabit connections,

18:17.480 --> 18:23.120
native SSDs on the hypervisors, what I really like about them and trust about them is their

18:23.120 --> 18:25.320
love for Linux and open source.

18:25.320 --> 18:29.480
Creating Linux and open source initiatives has been a key part of Linode's core from

18:29.480 --> 18:30.480
the beginning.

18:30.480 --> 18:34.880
They've sponsored projects like Kubuntu, the All Things Open conference, and of course,

18:34.880 --> 18:37.220
our beloved Linux Fest Northwest.

18:37.220 --> 18:39.000
And you know, they started before AWS.

18:39.000 --> 18:43.540
They've been in this game for a long time because they followed the goal.

18:43.540 --> 18:45.680
They followed what they loved about Linux.

18:45.680 --> 18:48.800
They followed their passion.

18:48.800 --> 18:51.880
And that led them to create Linode.

18:51.880 --> 18:56.440
And then through their success, they've supported key parts of the open source ecosystem.

18:56.440 --> 19:00.240
And now this is your humble show and I invite you to go check them out and see what I've

19:00.240 --> 19:02.660
been talking about, linode.com slash LAN.

19:02.660 --> 19:05.780
You go there, you get the $100 60 day credit towards a new account.

19:05.780 --> 19:10.560
You support the show and you get a cloud provider that's dedicated to offering the best virtualized

19:10.560 --> 19:11.560
cloud computing.

19:11.560 --> 19:16.600
If it runs on Linux, it runs on Linode, linode.com slash LAN.

19:16.600 --> 19:21.080
Also, thank you to Ting for sponsoring this here show.

19:21.080 --> 19:22.520
Linux.ting.com.

19:22.520 --> 19:27.960
I've talked about Ting for a long time, but right now is truly the best time to switch

19:27.960 --> 19:28.960
to Ting.

19:28.960 --> 19:33.280
It's the next generation of Ting mobile and you could save more than ever and get $25

19:33.280 --> 19:35.880
off when you go to linux.ting.com.

19:35.880 --> 19:39.160
Ting is a mobile provider that just makes sense.

19:39.160 --> 19:44.220
And now they have plans with data that starts unlimited at $15 and $45 depending on what

19:44.220 --> 19:45.220
you need.

19:45.220 --> 19:50.000
So if you use two gigabytes or 20 gigabytes, well, there's a perfect Ting plan for you

19:50.000 --> 19:51.000
and your family now.

19:51.000 --> 19:54.400
They made a lot of improvements, but don't worry, all of the core stuff that I've always

19:54.400 --> 19:56.400
talked about Ting, it's still there.

19:56.400 --> 19:59.240
They still got the award winning customer service.

19:59.240 --> 20:04.920
They still have nationwide LTE and now 5G coverage and still no contracts ever.

20:04.920 --> 20:09.440
Ting mobile customers can now choose from three different plans based on your data needs.

20:09.440 --> 20:11.000
It's really simple to switch to Ting.

20:11.000 --> 20:15.600
You're going to wonder why all cell phone providers don't have to do it this way.

20:15.600 --> 20:17.560
Ting sets the bar so hard.

20:17.560 --> 20:18.560
You got to try it.

20:18.560 --> 20:20.100
Go to linux.ting.com.

20:20.100 --> 20:23.580
You can check your current phone, you create an account, pick a plan that's right for you,

20:23.580 --> 20:25.200
and they're just going to mail you a SIM card.

20:25.200 --> 20:28.580
You pop that in your phone and you're activated in minutes.

20:28.580 --> 20:29.720
Or you can get something new too.

20:29.720 --> 20:32.280
They have a Ting store where you can get devices directly.

20:32.280 --> 20:34.500
Cutting your phone bill in half has never been easier.

20:34.500 --> 20:38.680
It's really awesome to watch Ting make this big transition, to really step it up.

20:38.680 --> 20:44.320
I mean, unlimited data plans starting around $15 and going to $45.

20:44.320 --> 20:45.320
That's crazy.

20:45.320 --> 20:46.480
I can't even believe that's on there.

20:46.480 --> 20:50.960
And with the ease to manage your account through their dashboard, there's really no reason

20:50.960 --> 20:52.960
not to try it.

20:52.960 --> 20:54.420
linux.ting.com.

20:54.420 --> 20:57.460
Go there, support the show, and get $25 off.

20:57.460 --> 21:01.120
And thank you to everybody who supports our sponsors to make it possible for independent

21:01.120 --> 21:04.360
media, to give our shows away for free, to cover our costs.

21:04.360 --> 21:05.480
It makes all of the difference.

21:05.480 --> 21:10.600
Thank you to our sponsors, linode.com slash lan and linux.ting.com.

21:10.600 --> 21:13.520
And thank you everyone who supports those sponsors.

21:13.520 --> 21:19.640
linux.ting.com, linode.com slash lan.

21:19.640 --> 21:26.360
For the past five years, Google has been quietly developing a new operating system, Fuchsia,

21:26.360 --> 21:28.400
from the ground up.

21:28.400 --> 21:33.440
Starting this week, Google's Fuchsia OS is now being developed more openly, including

21:33.440 --> 21:37.240
accepting contributions from the public.

21:37.240 --> 21:41.280
Last year, Google quietly launched an official Fuchsia development website for the project,

21:41.280 --> 21:46.640
aiming to teach developers how best to work on the operating system and, to a much lesser

21:46.640 --> 21:49.400
extent, how to make apps.

21:49.400 --> 21:53.520
All throughout the last four years, though, Fuchsia has been something of a secretive

21:53.520 --> 21:58.520
skunkworks project, with Google remaining surprisingly quiet about its purpose.

21:58.520 --> 22:00.440
And that's sort of the big change this week.

22:00.440 --> 22:05.720
The company is making something of a splash with Fuchsia on the Google open source blog,

22:05.720 --> 22:08.840
and they're making an opening call for developers to contribute to the project.

22:08.840 --> 22:15.080
In fact, this is really the first formal announcement of the Fuchsia operating system's existence

22:15.080 --> 22:16.840
and how Google plans to use it.

22:16.840 --> 22:22.280
They say in this post, Fuchsia is a long term project for a general purpose open source

22:22.280 --> 22:23.600
operating system.

22:23.600 --> 22:28.760
And today we're expanding Fuchsia's open source model to welcome contributions from the public.

22:28.760 --> 22:35.020
The blog goes on to continue to say, Fuchsia is designed to prioritize security, upgradability,

22:35.020 --> 22:39.600
and performance, and is currently under active development by the Fuchsia team.

22:39.600 --> 22:44.860
We have been developing Fuchsia in the open, by their definition, I guess that's true,

22:44.860 --> 22:49.640
because they go on to say in their Git repository for the last four years, you can browse the

22:49.640 --> 22:54.280
repository history, they give you the URL, which we have, and you can see how Fuchsia

22:54.280 --> 22:55.760
has evolved over time.

22:55.760 --> 23:00.880
They finish by saying, we are laying this foundation from the kernel up to make it easier

23:00.880 --> 23:06.460
to create long lasting secure products and experiences.

23:06.460 --> 23:11.560
Perhaps more importantly, for both interested developers and us, the general public, Google

23:11.560 --> 23:14.920
now has a public roadmap for Fuchsia's development.

23:14.920 --> 23:19.080
On it, you can see things like the projects that the Fuchsia team is actively undertaking,

23:19.080 --> 23:21.880
such as the revamp of their component system.

23:21.880 --> 23:27.760
Yeah, you know, they keep talking about how their goal is to have a robust, secure, general

23:27.760 --> 23:30.960
purpose operating system for production.

23:30.960 --> 23:35.240
Gosh Wes, that sounds an awful lot like Linux, but they don't want you to get confused.

23:35.240 --> 23:36.240
This isn't for toys.

23:36.240 --> 23:40.920
They say on the site, Fuchsia's goal is to power production devices and products used

23:40.920 --> 23:43.000
for business critical applications.

23:43.000 --> 23:48.080
As such, Fuchsia is not a playground for experimental operating system concepts.

23:48.080 --> 23:53.880
Instead, the platform roadmap is driven by practical use cases arising from partner and

23:53.880 --> 23:55.480
product needs.

23:55.480 --> 23:59.960
And that felt like a little bit of a, I know you've all been saying this is our playground,

23:59.960 --> 24:03.880
but we're actually building this to be a production OS on day one.

24:03.880 --> 24:09.340
And again, that to me reads as exactly the market that Linux is addressing.

24:09.340 --> 24:12.160
So you're wondering why Fuchsia?

24:12.160 --> 24:18.440
I'm wondering, I'm wondering if Fuchsia isn't like, this is my Fuchsia conspiracy bacon,

24:18.440 --> 24:25.120
but I'm wondering if Fuchsia isn't kind of like a backup plan for the Linux kernel and

24:25.120 --> 24:30.240
maybe the Linux kernel team not going along with them in the future, sort of how you can

24:30.240 --> 24:34.300
kind of have a plan B that helps you apply pressure in negotiations.

24:34.300 --> 24:38.720
If someone knows you've got a credible threat, then they're more likely to concede and compromise

24:38.720 --> 24:41.540
versus if they think they have power over you.

24:41.540 --> 24:46.880
And I wonder if this isn't Google's credible threat, like a way to bargain a little bit

24:46.880 --> 24:50.640
and say, well, if you guys don't go this way, we're just going to focus all in on Fuchsia.

24:50.640 --> 24:55.720
It is interesting, and I think either way, it's clearly, they've learned a lot in their

24:55.720 --> 24:59.440
wide scale deployments of Linux, and I think a lot of that knowledge is going into some

24:59.440 --> 25:00.440
of Fuchsia's development.

25:00.440 --> 25:06.560
I mean, I think particularly of their long history developing containers and other deployment

25:06.560 --> 25:11.160
methodologies and security things like gVisor for Linux and having to deal with Linux security

25:11.160 --> 25:15.720
issues, their work on Android, and also now all those smaller devices they ship in their

25:15.720 --> 25:20.520
Google Home platform, Chromecast, those especially seem like ripe targets for Fuchsia.

25:20.520 --> 25:22.200
Oh yeah, for sure.

25:22.200 --> 25:23.560
And they've been really clever.

25:23.560 --> 25:30.580
A lot of the development languages and methodologies that people use to write for Fuchsia are gaining

25:30.580 --> 25:32.180
traction elsewhere in the market.

25:32.180 --> 25:36.920
Google has very cleverly been playing the long game on this one and got people to adopt

25:36.920 --> 25:39.280
these technologies well ahead of Fuchsia's release.

25:39.280 --> 25:47.400
So you may see in 2021 some actual smoke to this fire and adoption uptick may be pretty

25:47.400 --> 25:50.960
relatively simple, since a lot of people are already using the languages and tools that

25:50.960 --> 25:51.960
Fuchsia OS uses.

25:51.960 --> 25:55.760
Yeah, I think that'll be the next question is, is it easy for me to actually get Fuchsia

25:55.760 --> 25:58.600
deployed somewhere and run my apps on it?

25:58.600 --> 26:03.560
Until that happens, I don't really see it overtaking Linux for general application deployment,

26:03.560 --> 26:06.800
but certainly could make some inroads in specialized sectors.

26:06.800 --> 26:07.800
We'll see what happens.

26:07.800 --> 26:12.040
But bringing us a little closer to home, we do end the show today with a brand new shiny

26:12.040 --> 26:18.760
kernel, Linux 5.10 is released and besides being the last kernel release of 2020, this

26:18.760 --> 26:24.500
is also a significant milestone because it's a long term support version of the Linux kernel

26:24.500 --> 26:28.840
to be maintained for at least five years and it's also just a big sucker.

26:28.840 --> 26:34.120
Yeah, Linux 5.10 LTS is likely to be the kernel used in operating system releases like Debian

26:34.120 --> 26:38.040
11 and Magia 8, among many others.

26:38.040 --> 26:42.960
Although I should note that Fedora 34 and Ubuntu 21.04, well, those are more likely

26:42.960 --> 26:46.120
to see Linux 5.11.

26:46.120 --> 26:49.520
As for Linux 5.10, well, the merge window closed in October.

26:49.520 --> 26:54.480
Yeah, and this is one of the largest kernel releases in recent times, so there's a lot

26:54.480 --> 26:55.480
to dig into.

26:55.480 --> 26:59.640
Michael Arbel over at Phyronix has been doing a yeoman's amount of work to dig through some

26:59.640 --> 27:03.040
of this, but we grabbed a couple of our favorite things in here.

27:03.040 --> 27:06.840
There's a lot of continued work in Intel's forthcoming Rocket Lake and Alder Lake hardware

27:06.840 --> 27:12.760
to get that ready for day one Linux support and AMD Zen 3 platform users got temperature

27:12.760 --> 27:14.800
monitoring now built into Linux.

27:14.800 --> 27:21.960
But the thing that I'm really excited for is Raspberry Pi VC4 support is now baked into

27:21.960 --> 27:23.760
mainline Linux.

27:23.760 --> 27:29.420
Yeah, this Raspberry Pi 4 display support is really nice to see and the timing works

27:29.420 --> 27:36.040
out well because Mesa 20.3 introduced the V3DV Vulkan driver for the Raspberry Pi 4

27:36.040 --> 27:38.360
support, which is a story we talked about last week.

27:38.360 --> 27:44.360
Yeah, now we're seeing that Mesa and that Vulkan driver come together all in the Linux

27:44.360 --> 27:49.000
kernel, which is just a big deal for Raspberry Pi 4 users.

27:49.000 --> 27:50.000
Like yourself.

27:50.000 --> 27:51.380
Yep, I'm very happy about it.

27:51.380 --> 27:54.560
But you must be pretty excited about the Creative Labs Sound Blaster stuff.

27:54.560 --> 28:01.680
Oh yeah, the Creative Labs Sound Blaster AE-7 sound card is finally supported under Linux

28:01.680 --> 28:04.560
thanks to the work of the open source community.

28:04.560 --> 28:08.400
And isn't that nice, like Linux is still a place where if you have a device that you

28:08.400 --> 28:12.120
want work, you can get the code made, well, you can get it shipped.

28:12.120 --> 28:14.600
Wes is always going on about a Sound Blasters.

28:14.600 --> 28:18.640
Just like I've always been going on about my Nintendo Switch controllers, I got those

28:18.640 --> 28:20.720
Nintendo Switch Pro controllers.

28:20.720 --> 28:21.720
They're expensive.

28:21.720 --> 28:26.080
I would love to be able to use them with Linux instead of having to get like the Xbox controller.

28:26.080 --> 28:33.320
And now, no like side module needed, no more DKMS for me baked right into 510 is support

28:33.320 --> 28:36.680
for the Nintendo Switch Joy-Cons and Pro controllers.

28:36.680 --> 28:39.280
Should be working for both USB and Bluetooth.

28:39.280 --> 28:41.280
Obviously, I haven't tested this yet.

28:41.280 --> 28:46.680
It's all thanks to the new Nintendo HID driver and you even get rumble support and gyro data.

28:46.680 --> 28:47.680
Oh, neat.

28:47.680 --> 28:50.440
That seems like another great reason I should pick up a Switch.

28:50.440 --> 28:53.280
Yes, yes, yes, it is, Wes, yes, it is.

28:53.280 --> 28:59.000
There's some also good security improvements in 510, including some hardening against possible

28:59.000 --> 29:02.060
DMA attacks by external PCI Express devices.

29:02.060 --> 29:03.640
That's nice to see.

29:03.640 --> 29:08.000
And a neat feature we're now stealing from the BSDs that they've had for years, which

29:08.000 --> 29:11.000
is the no SIM follow mount option.

29:11.000 --> 29:12.000
Merry Christmas us.

29:12.000 --> 29:18.320
Yes, and now we are onward to Linux 5.11 merge window with many fancy new features on tap,

29:18.320 --> 29:19.600
which we will keep an eye on.

29:19.600 --> 29:24.600
It's doing the second week, so you'll see people landing some stuff in there just before

29:24.600 --> 29:26.560
the Christmas holiday break.

29:26.560 --> 29:31.540
So you may expect the kernel team to be a little more strict than usual about accepting

29:31.540 --> 29:37.320
already properly tested ready code, not anything that looks a little shaky because nobody wants

29:37.320 --> 29:38.320
their holiday wrecked.

29:38.320 --> 29:39.320
No, right?

29:39.320 --> 29:41.520
I don't want a broken Linux kernel under my Christmas tree.

29:41.520 --> 29:45.840
Well, that does bring us to the end of this week's episode, but go to linuxactionnews.com

29:45.840 --> 29:49.920
slash prescribe for all the ways to get new episodes as we update you on these stories

29:49.920 --> 29:52.040
as you know they're going to develop.

29:52.040 --> 29:56.080
And linuxactionnews.com slash contact for ways to get in touch.

29:56.080 --> 30:02.880
And why not join the new Coda radio happy hour jblive.tv Mondays at 5 PM 8 PM Eastern.

30:02.880 --> 30:05.480
Join us for a special live stream and hangout.

30:05.480 --> 30:10.280
We'll be back next Monday with our weekly take on the latest Linux and open source news.

30:10.280 --> 30:30.360
Thanks for joining us and we will see you next week.

