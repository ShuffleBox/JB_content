1
00:00:00,000 --> 00:00:09,040
Hello, and welcome to Linux Action News, episode 207, recorded on September 19th, 2021.

2
00:00:09,040 --> 00:00:10,040
I'm Chris.

3
00:00:10,040 --> 00:00:11,040
And I'm Wes.

4
00:00:11,040 --> 00:00:12,040
Hello, Wes.

5
00:00:12,040 --> 00:00:13,120
Let's do the news.

6
00:00:13,120 --> 00:00:17,680
We've been focused on the server and the enterprise the last few episodes.

7
00:00:17,680 --> 00:00:22,800
So this week, we wanted to start with the good old Linux desktop and some good news

8
00:00:22,800 --> 00:00:25,560
for HDR monitor users out there.

9
00:00:25,560 --> 00:00:30,940
Red Hat is hiring specifically for a full time position to work on the Linux desktop

10
00:00:30,940 --> 00:00:35,480
graphic stack and focus on HDR display support.

11
00:00:35,480 --> 00:00:39,880
The job posting reads, quote, the Red Hat workstation engineering team is looking for

12
00:00:39,880 --> 00:00:46,560
an experienced senior software engineer to work on the desktop, compositor and GPU support

13
00:00:46,560 --> 00:00:50,400
for high dynamic range formats and displays for Linux.

14
00:00:50,400 --> 00:00:57,160
The post also specifically mentions GNOME when talking about job responsibilities, saying

15
00:00:57,160 --> 00:01:01,960
he will contribute to feature enhancements, bug fixes and major subsystems like Linux

16
00:01:01,960 --> 00:01:09,320
kernel, Wayland and GNOME, all in support of implementation of HDR on Linux.

17
00:01:09,320 --> 00:01:14,800
While they do talk about working upstream in general, no other desktop environment is

18
00:01:14,800 --> 00:01:16,900
specifically mentioned.

19
00:01:16,900 --> 00:01:21,600
That does make me a touch nervous there, Wes, because it well, it seems like a full stack

20
00:01:21,600 --> 00:01:22,600
job, right?

21
00:01:22,600 --> 00:01:26,180
Like it seems like you got to do the lower level driver stuff.

22
00:01:26,180 --> 00:01:30,120
You have to do the Wayland stuff and you have to do the toolkit and desktop environment stuff

23
00:01:30,120 --> 00:01:36,300
all has to support HDR and the full color range you need for HDR.

24
00:01:36,300 --> 00:01:40,600
And so I would think the plasma is going to need similar work to enable this in the plasma

25
00:01:40,600 --> 00:01:45,280
desktop and the cute developers love to do similar work to enable this in Qt.

26
00:01:45,280 --> 00:01:51,560
So it does leave me wondering how plasma can kind of keep up and offer a similar functionality.

27
00:01:51,560 --> 00:01:53,720
So there is some parity between the two major desktops.

28
00:01:53,720 --> 00:01:58,920
And maybe if anyone has an understanding of some work or anything that is already ongoing

29
00:01:58,920 --> 00:02:03,700
to support this, let me know at our contact page at linuxactionnews.com slash contact.

30
00:02:03,700 --> 00:02:07,320
But you did do some digging into the state of HDR and Qt.

31
00:02:07,320 --> 00:02:13,040
Yeah, well, a few years ago, 2019, Krita was looking at adding HDR support, which makes

32
00:02:13,040 --> 00:02:14,640
sense, right?

33
00:02:14,640 --> 00:02:19,080
And at the time, they found that Qt could really only support up to an eight bit color

34
00:02:19,080 --> 00:02:20,080
space.

35
00:02:20,080 --> 00:02:24,960
They wanted something more like 10 bit or 16 bit for like full HDR support.

36
00:02:24,960 --> 00:02:29,960
They were able to get there basically by hacking up Qt a bit and changing things and making

37
00:02:29,960 --> 00:02:32,560
more of it color space aware.

38
00:02:32,560 --> 00:02:36,420
But sadly, at the time, there was really only HDR support from Windows.

39
00:02:36,420 --> 00:02:38,320
So that's where this work was done.

40
00:02:38,320 --> 00:02:41,640
I don't really know what the state is on Linux today.

41
00:02:41,640 --> 00:02:49,760
Yeah, but I think the silver lining here, and it's a pretty nice silver lining.

42
00:02:49,760 --> 00:02:55,160
Even if not all of that work is usable outside of GNOME and GTK, a lot of it is going to

43
00:02:55,160 --> 00:02:59,120
be work that will be and it's all going to be upstream.

44
00:02:59,120 --> 00:03:03,720
So everyone can benefit because there will be some lower level components that are improved

45
00:03:03,720 --> 00:03:05,020
for this.

46
00:03:05,020 --> 00:03:08,320
And the stuff that may or may not be done to GTK and GNOME is all going to be out in

47
00:03:08,320 --> 00:03:09,320
the public.

48
00:03:09,320 --> 00:03:12,240
It'll be there for the documentation for everyone to see.

49
00:03:12,240 --> 00:03:14,200
So there will be benefits universally.

50
00:03:14,200 --> 00:03:16,680
This is it's a 100 percent a good move.

51
00:03:16,680 --> 00:03:21,560
And I'm I'm grateful that Red Hat still does some of this very heavy lifting, even though

52
00:03:21,560 --> 00:03:27,960
they don't directly sell a desktop product outside of a few rail desktop installations.

53
00:03:27,960 --> 00:03:31,080
And I guess those clients are important enough or whatever it is.

54
00:03:31,080 --> 00:03:33,080
I am just so grateful that Red Hat does this.

55
00:03:33,080 --> 00:03:37,280
I'm not trying to take away from that, but I am always looking out for my my favorite

56
00:03:37,280 --> 00:03:38,280
desktop.

57
00:03:38,280 --> 00:03:41,720
It's just a difficult world where we have a lot of competing interests in Linux and

58
00:03:41,720 --> 00:03:43,080
there are a lot of upsides, right?

59
00:03:43,080 --> 00:03:48,440
Because Plasma is very distinct from GNOME, but there are some downsides, too.

60
00:03:48,440 --> 00:03:52,120
If you're interested in helping out with this work, well, you'll need to be highly

61
00:03:52,120 --> 00:03:55,100
proficient in C, of course.

62
00:03:55,100 --> 00:03:58,760
And Red Hat says you'll need to be familiar with contributing to the development of a

63
00:03:58,760 --> 00:04:02,760
major desktop Linux distribution, their words.

64
00:04:02,760 --> 00:04:09,800
And then as examples of that, you've got Fedora, Ubuntu or Google Chrome OS.

65
00:04:09,800 --> 00:04:14,560
You can work remotely or in a Red Hat office up to you, but you do have to work in a country

66
00:04:14,560 --> 00:04:17,160
where Red Hat is registered to do business.

67
00:04:17,160 --> 00:04:21,000
Well, sticking with the desktop for a bit longer, Canonical has announced that they

68
00:04:21,000 --> 00:04:25,800
are shipping Firefox as a snap in future versions of Ubuntu.

69
00:04:25,800 --> 00:04:30,760
This is apparently the work and result of cooperation between the desktop team at Canonical,

70
00:04:30,760 --> 00:04:35,280
the snap team at Canonical and developers over at Mozilla.

71
00:04:35,280 --> 00:04:39,360
And it seems to be the first step towards a dab to snap transition that will take place

72
00:04:39,360 --> 00:04:42,080
during the 20204 development cycle.

73
00:04:42,080 --> 00:04:47,200
It's not clear exactly what happened behind the scenes in the Firefox 92 release notes,

74
00:04:47,200 --> 00:04:52,820
though Mozilla say that Canonical is now building the official Firefox snap.

75
00:04:52,820 --> 00:04:57,320
At the same time, Ubuntu has said Mozilla is in charge of publishing the snap.

76
00:04:57,320 --> 00:05:01,640
I'm hoping that mostly just means they've got well-connected CI systems.

77
00:05:01,640 --> 00:05:05,080
Either way, it does sound like Mozilla and Canonical have spent some considerable time

78
00:05:05,080 --> 00:05:09,600
together to make sure this goes well, including making sure that things like Firefox user

79
00:05:09,600 --> 00:05:13,200
profiles are brought over to the snap version when they make the transition.

80
00:05:13,200 --> 00:05:16,680
Yeah, OK, that's good, and I'm glad they thought of that.

81
00:05:16,680 --> 00:05:21,480
And so to be clear here, if you're a Firefox user on Ubuntu, this is going to impact users

82
00:05:21,480 --> 00:05:28,360
of the Ubuntu desktop installing 2110 or upgrading to 2110 and then the full transition is targeting

83
00:05:28,360 --> 00:05:30,780
2204.

84
00:05:30,780 --> 00:05:35,080
On the upside, if you're a fan of these kinds of things, it does appear this snap is using

85
00:05:35,080 --> 00:05:36,960
strict confinement.

86
00:05:36,960 --> 00:05:41,440
That is good to see, but I am struck by the fact that if you rewound this story a couple

87
00:05:41,440 --> 00:05:46,520
of years, I think this announcement would have been met with outrage online.

88
00:05:46,520 --> 00:05:48,720
And I've seen a little, but I see not much.

89
00:05:48,720 --> 00:05:51,640
I mean, it's very little compared to what I think it would have been.

90
00:05:51,640 --> 00:05:59,480
And I wonder maybe if in 2021 people are just used to the concept of universal sandbox apps.

91
00:05:59,480 --> 00:06:00,480
Is it becoming normal?

92
00:06:00,480 --> 00:06:06,320
I mean, I'm not sure what I attribute this rather mediocre, mild reaction to.

93
00:06:06,320 --> 00:06:09,280
Yeah, I mean, part of it might be normalization.

94
00:06:09,280 --> 00:06:13,880
It's already packaged up as a flat pack, say, and Canonical have been moving more and more

95
00:06:13,880 --> 00:06:18,080
things to a snap, including other browsers like Chromium, right?

96
00:06:18,080 --> 00:06:23,720
But it also might be just that there's less usage of Firefox in general, sad as that is

97
00:06:23,720 --> 00:06:25,440
to say.

98
00:06:25,440 --> 00:06:29,080
But really, to my mind, I'm just not that upset either.

99
00:06:29,080 --> 00:06:33,640
I mean, it's a little strange because Firefox is kind of the default browser on a lot of

100
00:06:33,640 --> 00:06:36,320
these, you know, open source operating systems these days.

101
00:06:36,320 --> 00:06:39,840
And thinking of it being in a non-traditional package is a bit strange.

102
00:06:39,840 --> 00:06:44,200
But I think you're right, for a browser, for something that changes all the time, it kind

103
00:06:44,200 --> 00:06:45,640
of makes sense to be packaged this way.

104
00:06:45,640 --> 00:06:49,760
I mean, heck, Mozilla even distributes a tarball you can just download and run, which is how

105
00:06:49,760 --> 00:06:51,720
I've been trying out the latest versions anyway.

106
00:06:51,720 --> 00:06:52,720
Yeah.

107
00:06:52,720 --> 00:06:53,720
And you make a good point.

108
00:06:53,720 --> 00:06:54,720
It has been a flat pack.

109
00:06:54,720 --> 00:06:56,960
And truthfully, I don't mind having my browser a little extra sandbox.

110
00:06:56,960 --> 00:06:59,720
That seems like a good thing.

111
00:06:59,720 --> 00:07:00,720
And I think you're right.

112
00:07:00,720 --> 00:07:02,440
If people really care, they'll just grab the tar.

113
00:07:02,440 --> 00:07:05,400
The type of people who would care could just grab the tarball.

114
00:07:05,400 --> 00:07:06,400
That's fine.

115
00:07:06,400 --> 00:07:10,720
If you've got questions or thoughts and Ubuntu is still collecting feedback as well, that's

116
00:07:10,720 --> 00:07:15,320
all happening over on the Ubuntu discourse where they've got an FAQ and they've posted

117
00:07:15,320 --> 00:07:17,520
some of their rationale for going through this.

118
00:07:17,520 --> 00:07:22,400
We will, of course, have that linked in the show notes.

119
00:07:22,400 --> 00:07:27,760
Rather impressively, there are already some new developments in the effort to port Linux

120
00:07:27,760 --> 00:07:30,200
to Apple's M1 platform.

121
00:07:30,200 --> 00:07:37,560
Alissa Rosenzweig spoke this week at the VirtualX.org Developers Conference about that ongoing work

122
00:07:37,560 --> 00:07:40,680
and the reverse engineering challenges involved.

123
00:07:40,680 --> 00:07:46,840
Hello, and welcome to this magical talk in the magical world of Toronto, Canada.

124
00:07:46,840 --> 00:07:48,120
It's not really that magical.

125
00:07:48,120 --> 00:07:49,920
We have construction, though.

126
00:07:49,920 --> 00:07:52,880
And this is the talk on the occult of Apple GPU.

127
00:07:52,880 --> 00:07:59,720
I'm Alissa Rosenzweig, your resident witch, and we'll be going on a magical adventure.

128
00:07:59,720 --> 00:08:04,660
Listening to the talk from XDC, you really learn to appreciate just how complicated the

129
00:08:04,660 --> 00:08:11,160
entire task of getting just the M1 GPU stack up and working on Linux really is.

130
00:08:11,160 --> 00:08:17,680
One of the most difficult obstacles so far has been dealing with the graphics co-processors.

131
00:08:17,680 --> 00:08:22,200
So first, I would like to talk about the DCP, which is responsible for the display side.

132
00:08:22,200 --> 00:08:27,360
The DCP is the acronym based on our best guess, based on the behavior of it.

133
00:08:27,360 --> 00:08:29,440
It stands for diabolical cluster puck.

134
00:08:29,440 --> 00:08:32,400
Wait, that can't be right.

135
00:08:32,400 --> 00:08:34,720
This is the display co-processor.

136
00:08:34,720 --> 00:08:36,200
It manages the display controller.

137
00:08:36,200 --> 00:08:38,300
It is not the display controller.

138
00:08:38,300 --> 00:08:39,300
That's a key distinction.

139
00:08:39,300 --> 00:08:42,960
It is a co-processor that has its own co-processor.

140
00:08:42,960 --> 00:08:44,840
It's co-processors all the way down.

141
00:08:44,840 --> 00:08:47,640
There are seven megabytes of firmware on this thing.

142
00:08:47,640 --> 00:08:51,520
Linux or Mac OS does not talk to the display controller itself.

143
00:08:51,520 --> 00:08:54,200
Those registers are just not even in the device tree.

144
00:08:54,200 --> 00:08:58,200
There's this massive pile of firmware with its own pile of firmware that does all of

145
00:08:58,200 --> 00:09:00,040
the display controller interaction.

146
00:09:00,040 --> 00:09:03,840
We just have an API to deal with in the kernel space.

147
00:09:03,840 --> 00:09:06,000
Yeah, I don't know either.

148
00:09:06,000 --> 00:09:11,120
Like, what is happening here?

149
00:09:11,120 --> 00:09:12,120
Co-processors all the way down.

150
00:09:12,120 --> 00:09:16,440
But you know, honestly, the display side really is making great progress.

151
00:09:16,440 --> 00:09:20,640
And the AGX Gellium 3D driver is getting into good shape now.

152
00:09:20,640 --> 00:09:25,960
She also noted that at some point soon, a Vulkan driver will become important as well.

153
00:09:25,960 --> 00:09:30,000
But for the moment, that's a challenge for the future.

154
00:09:30,000 --> 00:09:32,640
However, I think we should all keep our expectations in check.

155
00:09:32,640 --> 00:09:34,160
We're going to get this up and going, it looks like.

156
00:09:34,160 --> 00:09:36,400
I mean, I'm starting to bet on that now.

157
00:09:36,400 --> 00:09:39,400
But I think it's going to be a complicated answer.

158
00:09:39,400 --> 00:09:44,480
Like there's going to be some perhaps gaps in OpenGL support, at least historic OpenGL

159
00:09:44,480 --> 00:09:45,480
support.

160
00:09:45,480 --> 00:09:49,440
Apple has the luxury of being able to look at the same exact sets of features and just

161
00:09:49,440 --> 00:09:51,080
saying, you know what, we don't need those.

162
00:09:51,080 --> 00:09:53,240
We're getting rid of them in hardware.

163
00:09:53,240 --> 00:09:57,860
And basically anything that's deprecated in OpenGL, you're not going to find hardware

164
00:09:57,860 --> 00:09:58,860
support for.

165
00:09:58,860 --> 00:10:06,320
I mean, the M1, huge amounts of the geometry pipeline are done in shaders, which is fast

166
00:10:06,320 --> 00:10:08,160
enough in practice.

167
00:10:08,160 --> 00:10:15,760
The net result is that well-written applications on Linux will run just as fast as their metal

168
00:10:15,760 --> 00:10:17,080
counterparts.

169
00:10:17,080 --> 00:10:23,120
But there will be a lot of hoops to jump through if we ever want to become conformant and support

170
00:10:23,120 --> 00:10:27,380
all the random ancient legacy things and want to pass all the piglets.

171
00:10:27,380 --> 00:10:33,040
In the Q&A portion of the talk, the question of how firmware will be distributed on the

172
00:10:33,040 --> 00:10:34,840
M1 came up.

173
00:10:34,840 --> 00:10:37,680
Something we've worried about could be legally tricky.

174
00:10:37,680 --> 00:10:43,040
It's apparently seemingly straightforward, at least in one regard.

175
00:10:43,040 --> 00:10:48,360
And one last question, Patrick Jacobson asks, is the DCP firmware redistributable or do

176
00:10:48,360 --> 00:10:53,880
you need something like a download script like we have for FaceTime HD webcam drivers?

177
00:10:53,880 --> 00:10:56,120
So this is a very interesting question.

178
00:10:56,120 --> 00:10:58,320
I wish I touched on this earlier.

179
00:10:58,320 --> 00:11:03,160
It's not redistributable, but that doesn't actually matter for our case because Linux

180
00:11:03,160 --> 00:11:06,520
never touches this firmware.

181
00:11:06,520 --> 00:11:09,040
It's on an internal system partition.

182
00:11:09,040 --> 00:11:13,160
So it's on the internal storage, but not on the operating system partition.

183
00:11:13,160 --> 00:11:17,720
It's loaded by the bootloader, presumably it's signature checked by the bootloader,

184
00:11:17,720 --> 00:11:19,540
and then the firmware is locked.

185
00:11:19,540 --> 00:11:25,800
So the operating system, be it Mac OS or Linux, just does not touch this firmware.

186
00:11:25,800 --> 00:11:33,400
This is unfortunate to us because it means we can't modify the firmware to be less ridiculous.

187
00:11:33,400 --> 00:11:37,680
We could not replace it with an open source version even if we wanted to.

188
00:11:37,680 --> 00:11:45,680
However, it neatly avoids all of the legal questions because from Linux's perspective,

189
00:11:45,680 --> 00:11:47,700
there's no firmware being used at all.

190
00:11:47,700 --> 00:11:52,960
And this is one of the great ironies of Asahi Linux to me, is that with the exception of

191
00:11:52,960 --> 00:11:56,320
the Wi-Fi, everything will work on Linux Libre.

192
00:11:56,320 --> 00:11:58,320
And this is very much not a Libre chip.

193
00:11:58,320 --> 00:12:02,300
Now, I'm still seeing it argued online that maybe this work is just a waste of time.

194
00:12:02,300 --> 00:12:06,400
But personally, I feel like that ship has sailed and is a moot point and we should kind

195
00:12:06,400 --> 00:12:07,400
of move on.

196
00:12:07,400 --> 00:12:11,080
But I think if we think about this beyond just getting Linux on this Apple hardware,

197
00:12:11,080 --> 00:12:18,140
which is no doubt going to extend the life of this hardware and also be a boon for developers.

198
00:12:18,140 --> 00:12:24,000
But another result of this is we are getting a deep look at the Apple M1 platform and we're

199
00:12:24,000 --> 00:12:29,280
getting insights into the hardware that Apple doesn't typically share.

200
00:12:29,280 --> 00:12:33,140
The DCP runs the RTKit operating system.

201
00:12:33,140 --> 00:12:35,040
This is the real-time kit.

202
00:12:35,040 --> 00:12:39,960
It is Apple's secret real-time operating system that is running on every piece of firmware

203
00:12:39,960 --> 00:12:46,580
or not every, with the exception of the SecureNClub, which has its own SecureNClub operating system.

204
00:12:46,580 --> 00:12:51,320
It's running on essentially all of the coprocessors on Apple devices.

205
00:12:51,320 --> 00:12:54,840
It's also running on things like the AirPods.

206
00:12:54,840 --> 00:13:01,980
It's a fairly large operating system, not by Linux or Mac OS standards, but by the sorts

207
00:13:01,980 --> 00:13:05,640
of things you'd run on a firmware with real-time constraints.

208
00:13:05,640 --> 00:13:07,800
I mean, it's a whole system.

209
00:13:07,800 --> 00:13:13,240
Some other recent developments in this space include the USB-C support code going out for

210
00:13:13,240 --> 00:13:20,840
testing, GCC announcing plans to support the M1 in an upcoming version, and just today

211
00:13:20,840 --> 00:13:24,000
Alyssa announced she got internal storage working.

212
00:13:24,000 --> 00:13:30,040
Yeah, in fact, while we are recording this very episode, she is live streaming her development

213
00:13:30,040 --> 00:13:34,920
of Linux for the M1, running Linux on the M1, all from the internal disk.

214
00:13:34,920 --> 00:13:36,640
It's looking really good.

215
00:13:36,640 --> 00:13:41,700
When you look at the areas the entire Asahi Linux team is tackling and the speed at which

216
00:13:41,700 --> 00:13:47,440
they are doing it and how it's all going upstream or will be going upstream, it's just so damn

217
00:13:47,440 --> 00:13:48,440
impressive.

218
00:13:48,440 --> 00:13:53,280
It's truly amazing, impressive work being done right now, and the team is just killing

219
00:13:53,280 --> 00:13:54,280
it.

220
00:13:54,280 --> 00:14:03,440
And just a note of congrats to the LVFS project, who just recently served up 2 million firmware

221
00:14:03,440 --> 00:14:05,940
downloads in the past month.

222
00:14:05,940 --> 00:14:12,060
In just one month alone, firmware troublemaker and LVFS project lead Richard Hughes wrote

223
00:14:12,060 --> 00:14:17,700
on Twitter, we hit 2 million firmware downloads in the last 30 days for the first time.

224
00:14:17,700 --> 00:14:26,360
There are now over 3,000 firmware files available on LVFS, with over 100 vendors using 50 different

225
00:14:26,360 --> 00:14:27,360
protocols.

226
00:14:27,360 --> 00:14:30,960
It's been a huge amount of work, but it feels pretty awesome.

227
00:14:30,960 --> 00:14:33,840
It really has been a huge amount of work.

228
00:14:33,840 --> 00:14:40,040
LVFS launched 6 years ago, way back in March of 2015.

229
00:14:40,040 --> 00:14:45,640
Over time, more and more vendors began adopting LVFS for distributing those important firmware

230
00:14:45,640 --> 00:14:51,720
updates, and then in 2019, LVFS joined the Linux Foundation.

231
00:14:51,720 --> 00:14:55,600
You can hear our coverage in Linux Action News 189 for that.

232
00:14:55,600 --> 00:14:56,600
Indeed.

233
00:14:56,600 --> 00:15:01,640
You know, I think for a while, we've been of the opinion that part of what has made

234
00:15:01,640 --> 00:15:07,860
LVFS so successful is their sort of practical approach of adopting standards and not doing

235
00:15:07,860 --> 00:15:10,320
things their own way for no reason.

236
00:15:10,320 --> 00:15:16,340
And a good example of that is them using the same.cab files that Windows uses to distribute

237
00:15:16,340 --> 00:15:18,100
the firmware files.

238
00:15:18,100 --> 00:15:22,520
In a big way, the vendors didn't have to do anything different to package up their updates

239
00:15:22,520 --> 00:15:28,000
to play nice with LVFS and FlopD, so kind of made it more approachable and easier to

240
00:15:28,000 --> 00:15:29,000
adopt.

241
00:15:29,000 --> 00:15:30,400
Yeah, I think that's definitely a factor.

242
00:15:30,400 --> 00:15:34,580
And I think something else that helped with adoption is, although it was really truly

243
00:15:34,580 --> 00:15:39,480
created to solve a problem for the desktop, LVFS and FlopD, the software itself, work

244
00:15:39,480 --> 00:15:44,680
great on phones, tablets, IoT devices, and headless servers, which has been huge.

245
00:15:44,680 --> 00:15:48,200
It has proven to be a very flexible, flexible tool.

246
00:15:48,200 --> 00:15:49,520
It's great.

247
00:15:49,520 --> 00:15:54,120
You've also got things like industry trends helping, like UEFI in general, which kind

248
00:15:54,120 --> 00:15:57,360
of created some standards for all these updates.

249
00:15:57,360 --> 00:16:03,080
And of course, key support from vendors like Dell early on, proving out the concept.

250
00:16:03,080 --> 00:16:05,120
The future seems bright though.

251
00:16:05,120 --> 00:16:10,280
Intel just recently announced they're working on rebootless firmware updates for UEFI systems.

252
00:16:10,280 --> 00:16:16,440
Could really see how a project like LVFS would be interested.

253
00:16:16,440 --> 00:16:17,960
Linode.com slash LAN.

254
00:16:17,960 --> 00:16:23,400
Go there to get $100 in 60-day credit on a new account and go there to support the show.

255
00:16:23,400 --> 00:16:28,080
This episode of Litx Action News is made possible by Linode's sponsorship and by you taking

256
00:16:28,080 --> 00:16:30,360
advantage of our sponsors.

257
00:16:30,360 --> 00:16:34,880
Linode started in 2003 as one of the very first companies in cloud computing.

258
00:16:34,880 --> 00:16:39,360
And now 18 years later, well, they are the largest independent cloud provider in the

259
00:16:39,360 --> 00:16:42,520
world with 11 data centers around the world.

260
00:16:42,520 --> 00:16:47,320
And you know that checks my boxes, but Linode has really remained focused since the very

261
00:16:47,320 --> 00:16:51,440
beginning, making cloud computing simple, affordable, and accessible.

262
00:16:51,440 --> 00:16:55,240
And if you haven't tried it out yet because you think it might be complicated or maybe

263
00:16:55,240 --> 00:17:00,080
it's going to be too, I don't know, server-y, well, don't worry.

264
00:17:00,080 --> 00:17:05,600
You can take advantage of our $100 offer and deploy one of Linode's many ready to go systems.

265
00:17:05,600 --> 00:17:07,360
Like Nextcloud, for example.

266
00:17:07,360 --> 00:17:12,040
If you just go to Linode.com slash LAN, you create an account, you get that $100, and

267
00:17:12,040 --> 00:17:15,160
then you can deploy a Nextcloud instance in seconds.

268
00:17:15,160 --> 00:17:17,320
Or maybe you want to build a discourse community.

269
00:17:17,320 --> 00:17:20,320
Well, they've got a click for that as well.

270
00:17:20,320 --> 00:17:24,140
Or maybe it's time to replace Zoom with something like Chitsi.

271
00:17:24,140 --> 00:17:27,560
You can do that with a one-click deployment on the note as well.

272
00:17:27,560 --> 00:17:32,980
Just get started by going to Linode.com slash LAN and see why we use them for everything.

273
00:17:32,980 --> 00:17:37,200
From development tools to game servers, Linode makes it easy to get started in just a few

274
00:17:37,200 --> 00:17:38,200
clicks.

275
00:17:38,200 --> 00:17:42,480
And then once you're there, you'll find they also have an easy to use powerful cloud

276
00:17:42,480 --> 00:17:47,340
dashboard and S3 compatible object storage that we absolutely love.

277
00:17:47,340 --> 00:17:50,920
They have bare metal servers, if your workload demands that.

278
00:17:50,920 --> 00:17:56,440
Cloud firewalls, DDoS protection, VLAN support, a powerful DNS manager, and even Kubernetes

279
00:17:56,440 --> 00:17:57,800
support if that's how you roll.

280
00:17:57,800 --> 00:17:58,920
It's all in there.

281
00:17:58,920 --> 00:18:01,160
Plus they are their own ISP.

282
00:18:01,160 --> 00:18:03,600
So their networking is just wicked fast.

283
00:18:03,600 --> 00:18:06,280
And they've invested in the best hardware.

284
00:18:06,280 --> 00:18:09,040
There's really so much I could go on about Linode.

285
00:18:09,040 --> 00:18:13,160
And their pricing is 30 to 50% cheaper than other major cloud providers.

286
00:18:13,160 --> 00:18:17,280
And if you ever run into any trouble getting something set up or something goes sideways,

287
00:18:17,280 --> 00:18:22,520
Linode comes with amazing 24 seven customer support by phone or by ticket.

288
00:18:22,520 --> 00:18:25,840
And they have hundreds of guides, tutorials, and they're constantly investing in new

289
00:18:25,840 --> 00:18:28,800
content to help people get things set up.

290
00:18:28,800 --> 00:18:31,400
They really have a deep support for the community.

291
00:18:31,400 --> 00:18:34,320
They made our Jupiter colony reunion road trip possible.

292
00:18:34,320 --> 00:18:39,380
And they invest in content creators that create educational material to help people get started

293
00:18:39,380 --> 00:18:40,920
on Linux.

294
00:18:40,920 --> 00:18:42,200
There's so much to check out.

295
00:18:42,200 --> 00:18:46,480
You just got to go do it for yourself and take advantage of that $100.

296
00:18:46,480 --> 00:18:51,240
Go to linode.com slash land, get that hundred dollars, create a new account and you support

297
00:18:51,240 --> 00:18:52,240
the show.

298
00:18:52,240 --> 00:18:56,800
That's linode.com slash land.

299
00:18:56,800 --> 00:19:00,920
This episode of Linux action news is also made possible by Ting.

300
00:19:00,920 --> 00:19:04,640
And if you're sick of overpaying for cell service, go see why I switched to Ting back

301
00:19:04,640 --> 00:19:11,520
in 2013 and take 25 bucks off by going to the linux.ting.com.

302
00:19:11,520 --> 00:19:15,040
Ting is an MVNO or I guess you could call them a mobile virtual network operator.

303
00:19:15,040 --> 00:19:19,840
But what that means is Ting mobile customers get access to the big carrier networks, but

304
00:19:19,840 --> 00:19:22,840
with way better customer service and pricing.

305
00:19:22,840 --> 00:19:28,880
Ting mobile offers nationwide coverage, a great mix of plans, fast data on LTE and 5G

306
00:19:28,880 --> 00:19:29,880
networks.

307
00:19:29,880 --> 00:19:32,360
And Ting's plans are simple and straightforward.

308
00:19:32,360 --> 00:19:35,060
That's why I've stuck with them since 2013.

309
00:19:35,060 --> 00:19:39,120
They're a mobile operator that's smarter and they have plans that start at $10 and stop

310
00:19:39,120 --> 00:19:40,120
at $55.

311
00:19:40,120 --> 00:19:45,520
I think their set 12 plan could be a great plan for a family and everyone gets access

312
00:19:45,520 --> 00:19:48,040
to Ting's award winning customer service.

313
00:19:48,040 --> 00:19:52,140
And of course, that nationwide LTE and 5G where it's available.

314
00:19:52,140 --> 00:19:54,380
It's really simple to switch to Ting.

315
00:19:54,380 --> 00:19:57,640
Pretty much any phone is going to work because of the networks they support.

316
00:19:57,640 --> 00:20:00,600
But you just get started by going to linux.ting.com.

317
00:20:00,600 --> 00:20:04,600
Check your current phone, go create an account, pick a plan that's right for you.

318
00:20:04,600 --> 00:20:06,560
Ting figures it out and sends you a SIM card.

319
00:20:06,560 --> 00:20:09,080
You pop that in your phone, you get activated in minutes.

320
00:20:09,080 --> 00:20:12,400
And if you ever have any troubles, you contact their great customer service and they get

321
00:20:12,400 --> 00:20:13,400
you sorted out.

322
00:20:13,400 --> 00:20:16,360
So go over to linux.ting.com.

323
00:20:16,360 --> 00:20:21,080
Get that $25 discount and switch to a much better mobile operator.

324
00:20:21,080 --> 00:20:22,600
It's the next generation of Ting mobile.

325
00:20:22,600 --> 00:20:23,600
It's here.

326
00:20:23,600 --> 00:20:26,920
Go see how much you could save and take $25 off of that.

327
00:20:26,920 --> 00:20:27,920
Linux.ting.com.

328
00:20:27,920 --> 00:20:37,280
Black Lotus Labs, the threat research group at Lumen Technologies, formerly SentryLink,

329
00:20:37,280 --> 00:20:43,480
revealed on Thursday that it had discovered new malware that uses the Windows subsystem

330
00:20:43,480 --> 00:20:46,160
for Linux to avoid being detected.

331
00:20:46,160 --> 00:20:50,760
They seem to identify several malicious files that were written primarily in Python and

332
00:20:50,760 --> 00:20:55,400
compiled in the Linux binary ELF format specifically for Debian.

333
00:20:55,400 --> 00:20:59,960
These files acted as loaders running a payload that was either embedded within a sample or

334
00:20:59,960 --> 00:21:04,720
retrieved from a remote server and then injected into a running process using standard Windows

335
00:21:04,720 --> 00:21:05,720
API calls.

336
00:21:05,720 --> 00:21:12,240
I think many of us speculated that this could happen, but now we've got a documented case

337
00:21:12,240 --> 00:21:17,380
of it actually happening, in fact, happening two different ways.

338
00:21:17,380 --> 00:21:19,440
One was a pure Python version.

339
00:21:19,440 --> 00:21:23,920
There was another variant that used Python plus PowerShell.

340
00:21:23,920 --> 00:21:28,320
Once installed, the malware would attempt to kill any antivirus programs it could find

341
00:21:28,320 --> 00:21:31,760
and then spawn a reverse shell.

342
00:21:31,760 --> 00:21:36,440
I think really a big part of the challenge here is that most of the endpoint client security

343
00:21:36,440 --> 00:21:42,560
like antivirus programs and whatnot are just simply not designed to analyze ELF files,

344
00:21:42,560 --> 00:21:44,280
at least on their Windows versions.

345
00:21:44,280 --> 00:21:47,920
Yeah, I guess they'll have to learn.

346
00:21:47,920 --> 00:21:53,520
I just hope this doesn't mean that more enterprises will start locking down access to WSL by

347
00:21:53,520 --> 00:21:54,520
default.

348
00:21:54,520 --> 00:21:57,120
I mean, some places took them forever to even enable the thing.

349
00:21:57,120 --> 00:21:58,120
I know.

350
00:21:58,120 --> 00:21:59,600
I could really see IT departments doing that.

351
00:21:59,600 --> 00:22:03,720
It's just sort of an easy way to solve this problem and then only turning it on for people

352
00:22:03,720 --> 00:22:06,880
who really, really beg to have access to it.

353
00:22:06,880 --> 00:22:11,720
You hate to see that happening, but then again, when you see things like the Linux kernel

354
00:22:11,720 --> 00:22:16,840
adding file servers into itself, well, maybe it's not such a bad idea to lock that thing

355
00:22:16,840 --> 00:22:17,840
down.

356
00:22:17,840 --> 00:22:22,720
It sure didn't take long, but there is already an important security fix inbound for Samsung's

357
00:22:22,720 --> 00:22:25,720
new KSMBD in-kernel file server.

358
00:22:25,720 --> 00:22:31,440
Yeah, this weekend security vulnerability is an issue handling dot dot that basically

359
00:22:31,440 --> 00:22:37,080
leads to files outside of the SMB3 share being accessible to clients.

360
00:22:37,080 --> 00:22:41,600
And oh yeah, there are also three more patches currently undergoing review and testing looking

361
00:22:41,600 --> 00:22:43,000
at buffer overflows.

362
00:22:43,000 --> 00:22:47,080
I hope this is an indication people are taking a real close look at this thing and maybe

363
00:22:47,080 --> 00:22:51,040
it gets a few more eyeballs on it before it ships.

364
00:22:51,040 --> 00:22:55,340
But either way, we'll keep tabs on what happens and keep you informed on that and every other

365
00:22:55,340 --> 00:22:57,280
story in the world of Linux and open source.

366
00:22:57,280 --> 00:23:04,400
So go to linuxactionnews.com slash subscribe for all the ways to get new episodes and linuxactionnews.com

367
00:23:04,400 --> 00:23:06,960
slash contact for ways to get in touch.

368
00:23:06,960 --> 00:23:11,480
And if you haven't subscribed to extras, go to extras dot show slash subscribe and get

369
00:23:11,480 --> 00:23:15,760
subscribe because we have some exclusive content from the road trip coming up soon.

370
00:23:15,760 --> 00:23:21,280
As for us, we'll be back next Monday with our weekly take on the latest links and open

371
00:23:21,280 --> 00:23:22,920
source news.

372
00:23:22,920 --> 00:23:24,080
Thanks for joining us.

373
00:23:24,080 --> 00:23:25,640
And that's all the news for this week.

