Hello, and welcome to Linux Action News, our weekly take on Linux and the open source world.
This is Episode 74, recorded on October 7th, 2018.
I'm Chris.
And I'm Joe.
Hello, Joe.
It's good to be connected with you, and it's a good week for all of us fans of big storage
setups.
Is this going to be on our Linux laptop or in the enterprise?
Yeah, Red Hat's Stratus storage project has reached 1.0 stable.
So this 1.0 milestone is a pretty big deal.
Not all the features are there.
We're not even talking full RAID capability yet.
But soon, the conversation will change and comparisons will start to be made to the feature
set of ZFS or ButterFS, but with much more flexible file system support and using a bunch
of existing established safe tools on Linux to accomplish this.
So Project Stratus is going to be a big deal when everything's all done, and it's going
to be free and available to all Linux users.
The key phrase there is going to be, because even at 1.0, it's not mature at all, is it
really?
You mentioned not having RAID support.
That is a big deal, and that's not going to come until version 2.0.
And the ZFS feature parity, that's not going to come until 3.0.
So this is definitely one to watch, but I think that it's very much the testing phase
right now, isn't it?
It's not anywhere near ready for production.
But don't be too surprised if it comes along quickly.
A lot of the groundwork is now done with this 1.0 milestone, and some of the things they
need to get some of that RAID support and feature set are existing tools in Linux.
Remember here, Stratus itself is not a file system, so we don't have the delay and lag
time of creating a file system and making sure it's safe like we've been watching with
ButterFS.
In fact, multiple independent file systems can be created and used and managed with Stratus.
It's pretty great like that.
So this isn't some big science project where we have to watch the creation of a new file
system we'll use for 20 years.
It's the bringing together of some existing tools and creating the services around them
to have an API and management tools.
That could progress fairly quickly, especially with the backing of Red Hat.
Yeah, that's true.
And they are targeting XFS as the main supported file system for now, which makes you happy
presumably.
Yeah, absolutely.
You knew that.
You knew that when you saw that, didn't you?
Yep.
Yeah, that's probably one of my favorite things about it.
In fact, I'd love to dig more into this.
I've been following this on Linux Unplugged since they announced it.
And obviously, I'm a big fan of this because it's a very Linux solution to this problem
to finally get parity features with ZFS and have ButterFS as promise, but be able to use
a file system that I choose like XFS and have a programmatic API that people can use to
set things up, which is going to make management of Linux systems and their disk automatable
and scalable.
Clearly, I'm just very excited about it.
Lots of potential.
I hope to have the opportunity to talk to Andy Grover, who's been the main voice behind
this project since it started.
It is interesting, though, that once this becomes mature and gets rolled into RHEL,
you're going to have three very different approaches to the same problem on the three
main distros.
You're going to have Stratus on Red Hat, ButterFS on SUSE, and ZFS on Ubuntu.
Yeah, that crossed my mind, too.
It's three very different approaches.
Of course, Project Stratus could get widespread adoption, Debian could adopt it, and then
it'd probably pretty quickly show up in a future Ubuntu release.
I'm sure the Ubuntu folks will be fine with that.
But it is initially going to be three very different approaches.
The one thing that will give Stratus an eventual heads up, besides the fact that major parts
of it are written in Rust, which is awesome, is that API.
I know I've mentioned it a few times now, but that is a big deal for orchestration systems
and management to be able to standardize how your Linux boxes that you deploy in seconds
can have their entire drive set up.
I really had my eyes opened when I had a conversation with an AWS engineer who said, we frequently
have customers that spin up multiple thousands of Ubuntu systems at once.
And he said, that's why when you hear about them cutting down the boot time, it's not
for your laptop.
It's for all these AWS instances that need to scale up immediately at 3,000 at once booting.
And when you have that many systems that you're managing that you create and destroy in a
day, programmatically setting up all of the disk storage has been a bespoke solution for
each distribution and each setup for each shop for years now.
And this is going to bring it all unified together, and you'll start seeing Chef and
Puppet and Ansible how-to guides that get this stuff going in no time.
But potentially for the desktop as well, that API means that it could easily be built into
GUI tools as well that would make provisioning disks really straightforward for end users.
But you're right that really the enterprise stuff is where this is targeted.
And so the GUI user end of things is probably going to be a kind of afterthought and probably
made by third parties rather than Red Hat.
I wouldn't be so sure.
I wouldn't be too surprised ways down the road to see support show up in gnome disks,
something like that.
I could see that.
Yeah.
Yeah.
Well, speaking of Ansible and Red Hat, Red Hat is bridging the gap between the old style
server management and the future DevOps in the cloud style management.
And that's what their next update to Red Hat satellite.
So the quick and short of this announcement, for those of you in IT, this new tool will
integrate Red Hat's enterprise management tools with Ansible's automation tools, which
means sysadmins can now use the Red Hat satellite interface to manage RHEL with Ansible's remote
execution and state management.
Also Ansible playbooks.
So you could be automatically generating machines like a madman or lady.
Well, at the other end of the Red Hat world, you've got Fedora on the desktop.
And one of their devs has posted a question for people.
He wants to gather some data regarding hibernation on laptops, because that has traditionally
been something in Linux where we've just assumed that it's not going to work very well.
But he's got some thing pads where it does work.
And he's got some other machines where it doesn't work brilliantly.
And so he wants to get some data together to see, is this a problem?
And if so, we'll have to get this sorted.
This is one of those opportunities where you can make a small impact in the open source
community even if you don't write a single line of code.
So with a little information and a little help, they might be able to get to the bottom
and hunt down the great hibernate bug.
Yeah, so there'll be a link in the show notes, linuxactionnews.com slash 74.
So go and help out there.
But let's switch gears and talk about Windows 10.
Why are we going to talk about Windows 10 on a Linux show, Chris?
Because they got a feature that I wish we would have thought of first, Joe.
It is something that is connected to Android.
And it'll bring Android apps essentially to the Windows desktop.
The feature, which Microsoft is referring to as app mirroring, it shows up in Windows
as an app called, quote, your phone.
And it seems to work best with Android for now.
Although Microsoft did announce the ability to transfer web pages from the iPhone to Windows
10 desktop.
But in a sense, it is a remote projection of the app from your Android device.
And of course, because it's Microsoft, they have a tweet where they showed a work case
where you're stuck in a boring meeting and you just can't stop that texting.
So you call up the texting app from your Android phone and you mirror it to your Windows 10
app, and you reply to text messages while you're in that boring meeting from your Windows
10 machine.
It reminds me a lot of KDE Connect.
Yeah, although this is the whole app.
It's actually remote VNC style.
Although it seems to be, if you look at the videos, much smoother.
It seems to be well performing, like better than even, say, RDP performs.
And so since it's the entire app, it has all of your chat history, all of the emojis, whatever
you might not have on one machine that's on another machine, you know, all that little
stuff.
It's all going to be there.
There are no real details of how this is going to work.
So I mean, maybe we'll never get to see how this works with it being Windows, but it seems
like some sort of sorcery to me.
I suppose we'll find out fairly soon because it's going to be in the October updates, which
well, there was an update recently, wasn't there, which they had to pull.
So maybe we'll be waiting a little bit longer.
All these years later, Microsoft still having that problem with Windows.
Thankfully my Linux box hasn't had any issues like that in a long time.
So one other thing I note about this is it's limited right now, apparently, to the Android
stock texting and photo apps and one specific iPhone web page transfer app.
So it's not all the apps on your phone.
It's ones that they have built some sort of specific support for.
That might also indicate why it's so performant, but it does add to the mystery a bit.
And it makes me want that same damn thing on Linux.
Well, good luck running that if you've got lineage on your phone is all I can say.
I don't suppose that's going to work very well.
It's interesting because Google went the other way.
They got Android apps working on Chrome OS and Linux apps instead of projecting apps
onto the Chromebook.
So they kind of they took a different route.
Hmm.
Well, speaking of Microsoft, you might recall from back in April, they announced something
called Azure Sphere OS, which was Linux based.
Well, now they're actually shipping the hardware for that.
Yeah.
And just for 85 US greenbacks, you can order a development kit right now if you're in the
US.
So worldwide availability.
If there is worldwide availability, it's a different skew of the kid, it appears.
But this Azure Sphere OS deal is fascinating to me because it to me it represents the next
generation of IoT devices.
I hope I hope I didn't just make people tune out by saying IoT.
But it really is sort of in a different league of IoT device.
And it's got a really fascinating multi-core setup where they've isolated the Wi-Fi and
network stack in what they're calling a core.
And the hardware encryption module, which has to be signed and verified by Microsoft
and the hardware OEM, is in its own core.
And then the Linux Azure Sphere OS is in its own core.
And Microsoft claims that if you say pop the Wi-Fi stack, you do not necessarily then get
access to the OS or the hardware encryption.
It's got a design that's pretty fascinating and they paint the most boring picture in
the world.
And it's clear to me this is how these devices are going to be used.
On Microsoft's Azure Sphere OS documentation website, they outline a use case where a dishwasher
manufacturer embeds one of these in there and monitors the temperature of the dry and
wash cycles.
And if the temperature starts to fluctuate, it then assumes there could be a fault and
it runs a diagnostic.
All meanwhile, security updates and management is all happening through Azure.
The whole idea with this Azure Sphere OS device is that it's part of an ecosystem that involves
cloud connectivity and other components.
But that's why I say it kind of makes it a different level device.
It's kind of a new tier.
Yeah.
And obviously they want you to connect it to Azure, their cloud, so they can make the
money there.
But they do claim that it will be open enough that you'll be able to use other cloud providers
or even potentially on premises, which we'll have to see exactly how that works out.
But that's kind of a good sign, isn't it?
Yeah.
And I think it's necessary for certain types of use cases like devices that go inside government
facilities or hospitals.
There may just be certain requirements where you're going to eventually have to support
on-premises management.
One thing to note right now, a little disappointing.
It's fun to see Microsoft building a Linux-based OS and then shipping it on hardware.
That's kind of fun for those of us that have been around since, well, the 80s.
But it's a little disappointing to see that it requires Windows 10 and full Visual Studio
to actually develop with this thing.
It would be great to see support for Visual Studio code somehow or even just support for
using Linux to build for this thing.
I'd love to see them at least get there.
This thing's in early days now, so perhaps they will.
Well, although it does say in the documentation that Windows 10 and Visual Studio are a requirement
for this, I did read in some of the marketing material that you can develop for it however
you want in just a standard text editor.
And I think that is a bit of a problem here.
The communication has been a little bit opaque.
It's not exactly clear what this Linux-based OS is.
We don't know what kernel it's going to be.
I remember when you spoke to someone from Microsoft called Galen Hunt.
Unfortunately, that was an off-air interview, but you kind of spoke about it on Linux Unplugged
episode 245.
He had said to you it was going to be an upstream kernel, and they were going to aggressively
track that.
Whereas now in the marketing material, it says a custom Linux kernel.
So I don't know, perhaps that's just changed in the last few months.
I don't know if that necessarily suggests it's not still aggressively tracking an upstream
kernel, because they have built this thing to be pretty rapidly updated via the Azure
Sphere management.
So I could still see them calling it a custom kernel, even though it's something that's
just really upstream with some modifications.
I do also recall in that conversation, I tried to get some specifics on what kernel modifications
they were making.
And some of it had to do with backup and restore.
Some of it was for hardware encryption support.
And there was a few other, oh yeah, crash metric collection with some other modifications
they had made.
And they felt that that was enough of a change to call it a custom kernel, if I recall.
Right.
Okay.
Well, I mean, that's the one thing that we are going to get source code to here.
They have to give us the kernel source, don't they?
Yeah, it's true.
We'll find out in due course.
That's something to watch for, I suppose.
Yeah.
I do remember at the time thinking about what Canonical are doing.
Because Canonical obviously are known for Ubuntu on the desktop and that does make them
some money.
But the whole Snaps thing is not about bringing things like Spotify to the desktop, although
that's a nice kind of side benefit.
As far as I'm aware, Snaps are really targeted at IoT and that's where they're making their
real money.
Yeah.
I'm not so sure about that.
I think Snaps are definitely built with IoT devices in mind.
But I think it seems to me, at least, Canonical's approach has become a multi-spectrum approach
where they want Snaps for desktop, server, and IoT.
As far as where they make their money from, I don't know if that's true either about IoT
being a big revenue source, but I could be wrong.
I think it's just a component.
And I think that's why Snaps are also just as important, say, on the server, if maybe
not even more important these days.
Yeah, but the IoT comes hand in hand with the server, doesn't it?
And that's the whole point.
That's the whole point of Microsoft doing this.
They're not making money selling these devices for $90 or whatever.
They're making the money on the backend, tying people into Azure and charging them an arm
and a leg for it.
Yeah.
And the whole pipeline is going to be based around Azure.
So if you are a manufacturer of that dishwasher and you want to submit a new firmware to your
devices, well, it's all going through the Azure pipeline where you submit it, getting
it signed, getting it checked, getting it delivered over the CDN, that's all done through
Azure.
That's the benefit is these companies don't have to invent their own distribution mechanism
for firmwares to devices over the internet, which they suck at.
But the flip side is you're going to be paying for that convenience.
And it just really is going to be up to Microsoft to how market competitive they want to make
that price.
You could really see a future here where developers are tightly integrated with GitHub and Microsoft's
product pipeline and Visual Studio Code.
And IoT device manufacturers are tightly integrated all the way to the IoT device end.
From when they develop the code and create the code and publish it on GitHub to when
it ships in that dishwasher, it's Microsoft services from end to end.
Yeah, exactly.
And that is a real competitor to what Canonical are trying to do.
And obviously Microsoft have got a lot more money and resources to make this thing happen.
But it does feel like direct competition to what at least my understanding was Canonical's
kind of long term play was, which is the Internet of Things devices tied into Ubuntu on the
back end on servers that they are supporting, not selling directly like Microsoft are with
Azure, but getting them into the Ubuntu ecosystem and making their money there.
Well, Joe, if I were to channel my inner shuttle worth here for a moment, I think I'd start
this reply by describing the potentially billions of IoT devices that could be shipping in the
next five to 10 to 20 years.
And I would describe the size of that market to you.
And then I would come around with something like, there's plenty of fish to go around
and we'll be serving different customer niches.
There's going to be a lot of companies that don't want to get into a month to month contract
with Microsoft to manage a few devices.
They're going to want to control that stack top to bottom.
And the part they suck the most at shipping software.
That's what they've solved with snaps.
I think that's what my inner shuttle worth would tell you.
Yeah, and I think that is a reasonable point, actually, that the market is big enough.
And you're not necessarily going to get one player completely dominating it.
And so there's probably room for both of them.
And I would imagine Microsoft will be going after a bigger market than Canonical.
But Canonical have got big ambitions, haven't they?
And that's why it kind of came to mind that they are in direct competition here.
But maybe they're not.
Maybe the markets are subtly different enough that there is enough money to go around here
and enough of the market.
Yeah, it feels like there is some competition, some crossover.
I mean, it's worth noting, again, Microsoft's product runs on Linux and obviously Canonical's
solution will be Linux based.
And that's interesting to be competing head to head in that area.
Microsoft has the resources and they have the scale, but Canonical has the flexibility.
That company can turn on a dime.
And it's just something that a company the size of Microsoft is not as capable of doing.
They've been demonstrating a lot of flexibility, I'd say, in the last five to six years and
adapting to the market in a way that is pretty impressive for a company their size.
I've lived here in Washington and have family members and friends that work at Microsoft
and have watched this transition take place.
And I have also made a big transition.
I used to be one of the biggest Microsoft haters out there.
And now I'm sitting here going, damn, look at them.
They're moving pretty quick and they're doing some slick stuff and they're making the right
call on a lot of this.
But you can't beat Canonical.
They've got that size, they've got that flexibility, and they've got that drive and they've got
that motivation.
So I think they're going to be fine.
They'll carve out a good market.
And the reality is they have a good system.
The Ubuntu core system, the SNAP systems, all of that is pretty good with the LTS support.
And then you can also get support contracts from them.
It's a good solution.
It just depends on the size and scale of the manufacturer and probably the cost of device
that they're trying to make.
Well, one thing to watch out for with this Azure Sphere OS is if that starts supporting
SNAPs, then that to me is a red flag about who might just be buying Canonical rather
than the IPO.
That's the canary in the IoT coal mine, is what you're saying?
Yep, that's what I'm saying.
That's not bad.
I like that.
We'll keep track of that.
Well, just to wrap up the show, a story of Node, which actually is still available for
comment by you, the Node.js Foundation and the JS Foundation have announced their intent
to merge.
And they're holding a Q&A session at the Node.js Interactive conference on October 10.
So if you want to get involved and have questions, anyone attending is welcome to ask questions.
And you can also submit them anonymously ahead of time if you'd like.
Yeah, this seems pretty likely to happen to me.
It just seems like a logical step to take, really.
Why not pool your resources together?
And it's good to see that they haven't just announced we're doing this.
This is a new governance structure.
This is a new financial structure.
They want to get some feedback first from the community.
I suppose, first of all, is this a good idea?
I can't see many people being against this as an idea.
But it's more the details, really, I think, where they're looking for community feedback,
just so they can get this merger right.
Yeah, I wonder if anybody could object.
I would love to know, because I don't think I'm connected deeply enough to either one
of these communities.
Let us know your thoughts at linuxactionnews or linuxactionnews.com slash contact.
But I'll tell you what they think.
They say a tighter alignment of communities will expand the scope of the current foundations
and enable greater support for Node.js and a broader range of JavaScript projects.
If you read between the lines, Joe, it seems like the different boards had been flirting
several times already, kind of talking about how could we work more together.
And then boom, merger time.
Happens, Joe.
It happens.
Yeah, it's also worth noting that they talk about an umbrella structure and the two sides
of it still having independence, technically, but just being able to pool the resources
that they need.
So to me, that sounds like quite a sensible approach, if they can keep the technical sides
separate.
Without a question, that's a story that we'll be keeping an eye on and seeing how that develops.
If you'd like to catch this show every single week and see what other stories are developing,
go to linuxactionnews.com slash subscribe for all the ways to get new episodes.
And go to linuxactionnews.com slash contact for ways to get in touch.
We'll be back next Monday with our weekly take on the latest Linux and open source news.
I'm at Chris LAS.
I'm at Joe Rissington.
Thank you for joining us and we'll see you next week.
See you later.
