1
00:00:00,000 --> 00:00:10,040
Hello, and welcome to Linux Action News, Episode 267, recorded on November 16th, 2022.

2
00:00:10,040 --> 00:00:11,040
I'm Chris.

3
00:00:11,040 --> 00:00:12,040
And I'm Wes.

4
00:00:12,040 --> 00:00:13,040
Hello, Wes.

5
00:00:13,040 --> 00:00:14,840
Let's do the news.

6
00:00:14,840 --> 00:00:22,800
We start this week with the release of Fedora 37, with GNOME 43, and now, official support

7
00:00:22,800 --> 00:00:25,680
for the Raspberry Pi 4.

8
00:00:25,680 --> 00:00:27,880
And you know that caught my attention.

9
00:00:27,880 --> 00:00:33,200
The work to officially get Fedora on the Pi 4 has been going on for a number of years.

10
00:00:33,200 --> 00:00:38,320
And I think one of the main issues was the lack of accelerated graphics.

11
00:00:38,320 --> 00:00:46,580
So with V3D now upstream, and included in Fedora 37, that problem has been solved.

12
00:00:46,580 --> 00:00:49,740
So I gave it a go recently on my Pi 400.

13
00:00:49,740 --> 00:00:52,600
And that's the one that's a Raspberry Pi built into the keyboard.

14
00:00:52,600 --> 00:00:57,040
And even though I was using a USB thumb drive, so I, you know, load times for some applications

15
00:00:57,040 --> 00:01:02,760
aside, I still was seeing some of the best performance on a Pi yet.

16
00:01:02,760 --> 00:01:06,540
The GTK interface just really felt like I was on a standard desktop.

17
00:01:06,540 --> 00:01:10,180
The elements when you click them, the way the windows draw, really snappy.

18
00:01:10,180 --> 00:01:14,160
I think the Fedora project has really delivered here.

19
00:01:14,160 --> 00:01:20,040
This release of Fedora is also shipping enhancements to wired networking on the CM4.

20
00:01:20,040 --> 00:01:28,560
And as you said, Chris, accelerated graphics using the V3D GPU for both OpenGL ES and Vulkan,

21
00:01:28,560 --> 00:01:33,400
which is probably making the biggest impact on the performance that you're seeing there.

22
00:01:33,400 --> 00:01:37,520
Now, there are a few caveats that people should be aware of.

23
00:01:37,520 --> 00:01:44,680
Yeah, the biggest one for me was Wi-Fi on the Pi 400 is still considered, quote, out

24
00:01:44,680 --> 00:01:47,800
of scope for 37's release.

25
00:01:47,800 --> 00:01:52,560
It is waiting on firmware to be upstreamed from the vendor, which at this point is really

26
00:01:52,560 --> 00:01:53,560
kind of an unknown.

27
00:01:53,560 --> 00:01:59,040
So you'll have to use the Ethernet port on the Pi 400.

28
00:01:59,040 --> 00:02:06,440
Another thing to be aware of that also bites us, only the official CM4 I.O. board is supported

29
00:02:06,440 --> 00:02:07,560
right now.

30
00:02:07,560 --> 00:02:12,640
Other carrier boards should work, but that's going to depend on the particular vendor's

31
00:02:12,640 --> 00:02:13,640
implementation.

32
00:02:13,640 --> 00:02:19,560
And to keep things in the theme with the broader 37 release, hardware-based media decoding

33
00:02:19,560 --> 00:02:24,240
for H.264 is out of scope for this release.

34
00:02:24,240 --> 00:02:29,200
So just got to keep those caveats in mind when picking an OS for your Pi 4.

35
00:02:29,200 --> 00:02:34,000
But with those aside, I think this already makes a pretty compelling development workstation

36
00:02:34,000 --> 00:02:40,960
for anyone working on an IoT platform or developers that are targeting ARM servers.

37
00:02:40,960 --> 00:02:45,440
And if some of those dependencies land upstream, you could really see that list of caveats

38
00:02:45,440 --> 00:02:48,160
getting smaller pretty quickly.

39
00:02:48,160 --> 00:02:56,080
The 37 release also saw the project officially add two new additions, Fedora Core OS and

40
00:02:56,080 --> 00:02:58,080
Fedora Cloud is back.

41
00:02:58,080 --> 00:03:01,960
Yeah, OK, so Fedora Core OS, that probably rings a bell.

42
00:03:01,960 --> 00:03:06,960
That's a successor to what you might even remember as Atomic Host, perhaps.

43
00:03:06,960 --> 00:03:12,480
And as you've probably guessed, it provides automatic atomic updates with rollbacks.

44
00:03:12,480 --> 00:03:15,560
And it's really focused at container-based workloads.

45
00:03:15,560 --> 00:03:19,360
And the cloud edition, well, that provides a Fedora base to run in public or private

46
00:03:19,360 --> 00:03:20,360
clouds.

47
00:03:20,360 --> 00:03:24,540
In fact, AMIs will be available in the AWS Marketplace later this week.

48
00:03:24,540 --> 00:03:27,720
And the community channels are available now.

49
00:03:27,720 --> 00:03:32,820
On the desktop side of things, Fedora workstation ships GNOME 43 with the latest and greatest

50
00:03:32,820 --> 00:03:38,520
version of the GTK toolkit, and Firefox's language packs, well, they've finally been

51
00:03:38,520 --> 00:03:45,120
split into sub-packages, keeping things leaner and meaner.

52
00:03:45,120 --> 00:03:47,220
If you'd like more, well, don't worry.

53
00:03:47,220 --> 00:03:51,600
We did a complete review in Linux Unplugged 484.

54
00:03:51,600 --> 00:03:59,480
Well, nothing makes us feel more awkward in the free software community than talking about

55
00:03:59,480 --> 00:04:03,320
the great work over at Facebook slash Meta.

56
00:04:03,320 --> 00:04:08,040
And this week, they're finally announcing Sapling, a new Git-compatible source control

57
00:04:08,040 --> 00:04:09,160
client.

58
00:04:09,160 --> 00:04:13,300
In the announcement, they acknowledge how critical Git and other distributed version

59
00:04:13,300 --> 00:04:17,680
control systems have become to modern development workflows.

60
00:04:17,680 --> 00:04:23,320
In fact, Sapling started life as an extension to the Mercurial version control system, before

61
00:04:23,320 --> 00:04:28,640
eventually growing into what Meta describes as a scalable, user-friendly tool over the

62
00:04:28,640 --> 00:04:31,400
past 10 years.

63
00:04:31,400 --> 00:04:34,180
Here's where they kind of zero in on the goods in the announcement.

64
00:04:34,180 --> 00:04:40,080
They say, quote, Sapling is a source control system used at Meta that emphasizes usability

65
00:04:40,080 --> 00:04:41,920
and scalability.

66
00:04:41,920 --> 00:04:46,320
Git and Mercurial users will find that many of the basic concepts are familiar, and that

67
00:04:46,320 --> 00:04:52,080
workflows like understanding your repository, working with stacks of commits, and recovering

68
00:04:52,080 --> 00:04:57,760
from mistakes are substantially easier when used with our Sapling-compatible server and

69
00:04:57,760 --> 00:05:01,600
a virtual file system we hope to open source in the future.

70
00:05:01,600 --> 00:05:06,800
Sapling can serve Meta's internal repository with tens of millions of files, and tens of

71
00:05:06,800 --> 00:05:14,400
millions of commits, and tens of millions of branches.

72
00:05:14,400 --> 00:05:20,040
I can't believe it, but it's apparently already that time of the year.

73
00:05:20,040 --> 00:05:25,660
Google has kicked off the 2023 Summer of Code program.

74
00:05:25,660 --> 00:05:31,760
It's the 19th consecutive year of funding open source development over the summer.

75
00:05:31,760 --> 00:05:36,120
And Google says they've reviewed the feedback from the 2022 program, and they're going to

76
00:05:36,120 --> 00:05:39,000
make some tweaks for next year.

77
00:05:39,000 --> 00:05:43,360
Seems like up first is increased flexibility in the project links.

78
00:05:43,360 --> 00:05:50,360
Instead of a set 12 weeks for everyone, they're now going to allow a 10 to 22 week range.

79
00:05:50,360 --> 00:05:55,800
They also have more options for the project's time commitments, and in another big change,

80
00:05:55,800 --> 00:06:03,600
expanding beyond students and making the program available to anyone new to open source development.

81
00:06:03,600 --> 00:06:09,720
That seems like a big deal and a great addition to the Google Summer of Code program.

82
00:06:09,720 --> 00:06:14,800
It could potentially open this up to many more open source projects.

83
00:06:14,800 --> 00:06:22,840
So if you're interested in applying for the program, we'll put a link in the show notes.

84
00:06:22,840 --> 00:06:26,960
Checking in on the progress of Rust landing in the Linux kernel.

85
00:06:26,960 --> 00:06:32,680
With the initial Rust infrastructure support landing in Linux 6.1, the next obvious question

86
00:06:32,680 --> 00:06:36,360
is when should we expect complete support?

87
00:06:36,360 --> 00:06:41,960
Well, this past Thursday, Miguel Olieda, leading the Rust for Linux effort, sent out a set

88
00:06:41,960 --> 00:06:44,600
of 28 patches.

89
00:06:44,600 --> 00:06:50,240
Miguel writes in the patch notes, quote, this patch series is the first batch of changes

90
00:06:50,240 --> 00:06:55,120
to upstream the rest of the Rust support.

91
00:06:55,120 --> 00:07:01,280
That combined with everything else already in Linux Next, well, could mean seeing full

92
00:07:01,280 --> 00:07:08,640
Rust support ready for the 6.2 merge window next month, though I don't know if I bet my

93
00:07:08,640 --> 00:07:15,160
sats on that.

94
00:07:15,160 --> 00:07:19,040
Go there to get $100 in 60-day credit on a new account, and it's a great way to support

95
00:07:19,040 --> 00:07:20,040
the show.

96
00:07:20,040 --> 00:07:23,920
Linode is fast, reliable cloud hosting with the best support in the business.

97
00:07:23,920 --> 00:07:26,120
Real humans all day, every day.

98
00:07:26,120 --> 00:07:30,960
And they're 30% to 50% cheaper than the hyperscalers that want to lock you into their platform

99
00:07:30,960 --> 00:07:33,300
and give you all these crazy upsells constantly.

100
00:07:33,300 --> 00:07:36,120
On top of that, Linode does better performance.

101
00:07:36,120 --> 00:07:37,720
They've got 11 data centers today.

102
00:07:37,720 --> 00:07:42,000
They're adding a dozen more next year, and they have great features like object storage,

103
00:07:42,000 --> 00:07:48,780
cloud firewall, backups, Kubernetes support, Terraform, Ansible, all of that and more.

104
00:07:48,780 --> 00:07:50,320
Linode is what we use.

105
00:07:50,320 --> 00:07:51,320
You're going to love it.

106
00:07:51,320 --> 00:07:53,040
So go to linode.com slash LAN.

107
00:07:53,040 --> 00:07:57,760
Get that $100 in 60-day credit, kick the tires for yourself, and support the show.

108
00:07:57,760 --> 00:08:04,160
Linode.com slash LAN.

109
00:08:04,160 --> 00:08:07,480
And also, thank you to Collide.

110
00:08:07,480 --> 00:08:11,920
Collide is an endpoint security solution that uses the most powerful, untapped resource

111
00:08:11,920 --> 00:08:15,080
in IT, end users.

112
00:08:15,080 --> 00:08:19,080
When you're trying to achieve security goals, whether for a third party audit or for your

113
00:08:19,080 --> 00:08:23,960
own compliance standards, the conventional wisdom is to treat every device like Fort

114
00:08:23,960 --> 00:08:25,760
Knox.

115
00:08:25,760 --> 00:08:31,240
Old school device management tools like MDMs force disruptive agents onto employee devices

116
00:08:31,240 --> 00:08:35,680
that slow performance and treat privacy as an afterthought.

117
00:08:35,680 --> 00:08:41,240
Their way of doing things turns IT admins and end users into enemies and creates its

118
00:08:41,240 --> 00:08:47,400
own security problems because users turn to shadow IT just to do their jobs.

119
00:08:47,400 --> 00:08:49,200
Collide does things differently.

120
00:08:49,200 --> 00:08:56,840
Instead of forcing changes on users, Collide sends them security recommendations via Slack.

121
00:08:56,840 --> 00:09:01,240
Collide will automatically notify your team when their devices are insecure and give them

122
00:09:01,240 --> 00:09:06,000
step-by-step instructions on how to solve the problem.

123
00:09:06,000 --> 00:09:11,240
By reaching out to employees via a friendly Slack DM and educating them about company

124
00:09:11,240 --> 00:09:17,280
policies, Collide can help you build a culture in which everyone contributes to security

125
00:09:17,280 --> 00:09:21,760
because everyone understands how and why to do it.

126
00:09:21,760 --> 00:09:27,200
For IT admins, Collide provides a single dashboard that lets you monitor the security of your

127
00:09:27,200 --> 00:09:33,160
entire fleet, whether they're running on Mac, Windows, or Linux.

128
00:09:33,160 --> 00:09:38,080
You can see at a glance which employees have their disks encrypted, OSs up to date, and

129
00:09:38,080 --> 00:09:43,920
password manager installed, making it easy to prove compliance to your auditors, customers,

130
00:09:43,920 --> 00:09:44,920
and leadership.

131
00:09:44,920 --> 00:09:54,360
So, that's Collide, user-centered, cross-platform, endpoint security for teams that Slack.

132
00:09:54,360 --> 00:09:58,560
You can meet your compliance goals by putting users first.

133
00:09:58,560 --> 00:10:02,040
Visit collide.com slash LAN to find out how.

134
00:10:02,040 --> 00:10:08,040
If you follow that link, I'll hook you up with a goodie bag, including a t-shirt, just

135
00:10:08,040 --> 00:10:10,680
for activating a free trial.

136
00:10:10,680 --> 00:10:18,400
That's K-O-L-I-D-E dot com slash LAN.

137
00:10:18,400 --> 00:10:25,440
Today as we record, Microsoft has released version 1.0 of the Windows subsystem for Linux.

138
00:10:25,440 --> 00:10:34,040
Now, to be clear, this is the 1.0 of WSL 2.0, so it's 2.0's 1.0.

139
00:10:34,040 --> 00:10:36,360
What's confusing about that?

140
00:10:36,360 --> 00:10:40,640
Absolutely nothing at all, that's just par for the course for Microsoft.

141
00:10:40,640 --> 00:10:46,360
But here's a quick little timeline of the history of WSL.

142
00:10:46,360 --> 00:10:53,400
Six years ago, way back on August 2nd, 2016, WSL saw its initial release.

143
00:10:53,400 --> 00:11:00,240
Now, this was WSL version 1, which relied on some fancy Windows kernel translation layers

144
00:11:00,240 --> 00:11:03,600
to emulate the Linux kernel API.

145
00:11:03,600 --> 00:11:07,560
That worked pretty well, but there were some problems that the translation layer approach

146
00:11:07,560 --> 00:11:09,840
just couldn't really resolve.

147
00:11:09,840 --> 00:11:18,680
So then, three years later, June 12th, 2019, the first version of WSL 2 was released.

148
00:11:18,680 --> 00:11:24,760
This was transitioned from running that translation layer to instead running a full-blown real

149
00:11:24,760 --> 00:11:28,120
Linux kernel in a hypervisor.

150
00:11:28,120 --> 00:11:37,560
And that is what got us to today, November 16th, 2022, and the 1.0 release of WSL 2.0.

151
00:11:37,560 --> 00:11:44,840
Yeah, and you know, 2.0's 1.0 is not really a big significant release in terms of features.

152
00:11:44,840 --> 00:11:50,620
The release log includes three relatively minor changes, I suppose you could say.

153
00:11:50,620 --> 00:11:54,320
One of which is literally just the removal of the preview label.

154
00:11:54,320 --> 00:12:00,060
But in doing so and hitting this milestone, it means that WSL is now generally available

155
00:12:00,060 --> 00:12:03,120
to all Windows Store users.

156
00:12:03,120 --> 00:12:05,960
That's a pretty big change for the public.

157
00:12:05,960 --> 00:12:10,280
If you weren't already nerdy or curious enough to go poking around and enable extra settings

158
00:12:10,280 --> 00:12:16,720
to get access to it, it means now that WSL is just generally available to a whole bunch

159
00:12:16,720 --> 00:12:18,360
more Windows users.

160
00:12:18,360 --> 00:12:23,080
I've got to think that's kind of a good thing.

161
00:12:23,080 --> 00:12:28,260
Looking at the heart of WSL, it's powered by Linux kernel 5.15.

162
00:12:28,260 --> 00:12:35,920
But with Linux 6.1 now in the late RC stage, and 6.1 being slated to be the next LTS release,

163
00:12:35,920 --> 00:12:43,640
well, one can likely surmise that WSL 2.0 will be rebased on 6.1 sometime next year.

164
00:12:43,640 --> 00:12:46,040
Yeah, that is a little bit of a wait.

165
00:12:46,040 --> 00:12:52,700
But you know, I think something like WSL, you know, ideally the 1.0 release is not some

166
00:12:52,700 --> 00:12:56,340
big earth shattering release, it should be safe and stable.

167
00:12:56,340 --> 00:12:58,240
That's what a 1.0 should be.

168
00:12:58,240 --> 00:13:01,880
And if you look back at the development cycle, it does seem like a lot of the last really

169
00:13:01,880 --> 00:13:08,080
big changes to WSL, they landed in like the 0.7 release cycle.

170
00:13:08,080 --> 00:13:13,000
And since then, with all of the subsequent releases to this point, it seems that Microsoft's

171
00:13:13,000 --> 00:13:16,840
really just been trying to work out the kinks and smooth things out.

172
00:13:16,840 --> 00:13:23,160
And you know, on the kernel, something tells me that WSL users probably don't care that

173
00:13:23,160 --> 00:13:26,000
much about the specific kernel version.

174
00:13:26,000 --> 00:13:30,320
As long as the functionality to make their WSL work and whatever app that they need to

175
00:13:30,320 --> 00:13:33,520
do work is there, I think they're probably happy.

176
00:13:33,520 --> 00:13:37,080
But it does have me wondering how usable it all is now.

177
00:13:37,080 --> 00:13:41,760
Kind of makes me think that maybe you and I should give Windows 11 an honest try, you

178
00:13:41,760 --> 00:13:47,520
know, put WSL 2.0 on there, 2.0, 1.0, of course, get the new terminal.

179
00:13:47,520 --> 00:13:51,320
Maybe the audience could recommend a package manager, really anything the audience could

180
00:13:51,320 --> 00:13:53,400
recommend to make it a usable experience.

181
00:13:53,400 --> 00:13:58,000
But you and I load it up and see if we can't make it a workstation that meets our requirements

182
00:13:58,000 --> 00:14:00,840
as Linux users.

183
00:14:00,840 --> 00:14:04,720
A little hesitant for what I'm about to agree to.

184
00:14:04,720 --> 00:14:05,720
But yeah, yeah, right.

185
00:14:05,720 --> 00:14:11,200
I mean, it probably would be a good idea to get an update on what that experience is like.

186
00:14:11,200 --> 00:14:15,980
I know we both tried it, both Windows 11 and WSL 2.0, but I haven't used either of them

187
00:14:15,980 --> 00:14:18,600
in ages, let alone together.

188
00:14:18,600 --> 00:14:24,200
I do need to clarify though, I for one, I do care what version my kernel is.

189
00:14:24,200 --> 00:14:27,920
Yeah, that's going to be a point of pride, you know, midway into next year when they're

190
00:14:27,920 --> 00:14:29,800
still on 5.15.

191
00:14:29,800 --> 00:14:33,840
And we've got like rust and all of that kind of good goodness in our kernels on our modern

192
00:14:33,840 --> 00:14:39,200
systems will be like, well, if you weren't done WSL, I actually kind of have the sense

193
00:14:39,200 --> 00:14:44,880
that this 1.0 for 2.0 is not the only WSL news, maybe even this week.

194
00:14:44,880 --> 00:14:45,880
I'm not sure.

195
00:14:45,880 --> 00:14:48,160
It seems that Microsoft has some more in store.

196
00:14:48,160 --> 00:14:52,440
One of the Microsoft program managers for WSL, Craig Lowen, he tweeted right around

197
00:14:52,440 --> 00:14:57,960
when we started recording that they have some quote, other exciting news coming very soon

198
00:14:57,960 --> 00:15:02,160
in regards to the Windows subsystem for Linux.

199
00:15:02,160 --> 00:15:06,680
So we'll keep an eye on that and everything else going on in the world of Linux and open

200
00:15:06,680 --> 00:15:07,680
source news.

201
00:15:07,680 --> 00:15:12,400
So the best thing you can do is go to linuxactionnews.com slash subscribe for all the ways to get our

202
00:15:12,400 --> 00:15:13,400
new episodes.

203
00:15:13,400 --> 00:15:19,240
And linuxactionnews.com slash contact to let us know what kernel you're running.

204
00:15:19,240 --> 00:15:23,800
Did we miss a story this week? Boost in with a new podcast app from newpodcastapps.com

205
00:15:23,800 --> 00:15:26,280
and tell us what you'd like to hear us cover.

206
00:15:26,280 --> 00:15:31,400
And you'll hear it when we're back next week with our take on the latest Linux and open

207
00:15:31,400 --> 00:15:33,200
source news.

208
00:15:33,200 --> 00:15:52,200
Thanks for joining us and that's all the news for this week.

