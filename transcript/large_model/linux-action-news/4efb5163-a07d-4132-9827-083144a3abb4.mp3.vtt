WEBVTT

00:00.000 --> 00:16.240
Hello, and welcome to Linux Action News, our weekly take on Linux and the open source world.

00:16.240 --> 00:21.360
This is episode 102, recorded on April 21st, 2019. I'm Chris.

00:21.360 --> 00:22.360
And I'm Joe.

00:22.360 --> 00:27.320
Hello, Joe. Good to be connected with you, especially on a week that's packed with news.

00:27.320 --> 00:31.600
Let's kick things off with the new Ubuntu 19.04 release.

00:31.600 --> 00:35.120
You're not going to play that horrible disco duck tune.

00:35.120 --> 00:39.560
I mean, I could. No, no, we keep it very serious here, Joe.

00:39.560 --> 00:44.720
Yeah. So it's a pretty big release for them, even though it's an interim one. It's quite

00:44.720 --> 00:49.320
important at least on the desktop, certainly with the performance improvements, which I

00:49.320 --> 00:51.760
hear are massive.

00:51.760 --> 00:55.560
You hear? You mean you didn't? You weren't like drawn in? You weren't tempted to give

00:55.560 --> 00:56.560
it a go?

00:56.560 --> 01:01.760
When you use Xfce day to day, the difference between incredibly slow and slightly less

01:01.760 --> 01:07.040
slow doesn't really make much difference. And you get back on Xfce and it's like super

01:07.040 --> 01:08.040
fast.

01:08.040 --> 01:10.560
All right. Fair enough. Fair enough. Don't get me don't get me going yet. Let me just

01:10.560 --> 01:16.040
say this. Yeah, it actually is. I have been running it for weeks and weeks. And what you

01:16.040 --> 01:20.440
are really seeing with this release is the result of work from both upstream and downstream

01:20.440 --> 01:27.000
developers. Memory enhancements, CPU optimization and even strange and small animation tweaks

01:27.000 --> 01:29.520
really combined to make it feel very fast.

01:29.520 --> 01:35.120
The Gnome shell on Ubuntu 1904 is the fastest Gnome shell I've experienced. The improved

01:35.120 --> 01:40.920
performance is immediately noticeable. You combine that with Linux 5.0 under the hood,

01:40.920 --> 01:45.700
which gives you AMD FreeSync support, touch screen support for Raspberry Pis. You also

01:45.700 --> 01:51.200
get Mesa 19.0 in the stack, as well as the option to install the Nvidia proprietary drivers

01:51.200 --> 01:57.480
during installation. All of that comes together to make 1904 really about performance.

01:57.480 --> 01:59.640
Is it enough to tempt you back over to Gnome?

01:59.640 --> 02:03.920
It certainly was enough to make me say, OK, I've got to give it a fair go for a while.

02:03.920 --> 02:07.840
And I did. I've been running it, like I said, for probably really two months.

02:07.840 --> 02:10.800
But now it's out. Are you going to stick with it or are you just going back to plasma?

02:10.800 --> 02:16.920
OK, all right. Well, so I will say this, Joe, it's not it's not there quite yet for me.

02:16.920 --> 02:20.040
It is such an improvement. It's really great. If you're a Gnome shell fan, this is this

02:20.040 --> 02:23.960
is really great. It's just I've had a couple of situations where it still doesn't really

02:23.960 --> 02:31.480
hold up for me. So I'm not switching back yet, but I am I am filled with respect for

02:31.480 --> 02:36.000
what not only has the entire project pulled off, but for the contributions the different

02:36.000 --> 02:40.140
upstream and downstream developers have made and for how far they've taken it in one release

02:40.140 --> 02:41.140
cycle.

02:41.140 --> 02:46.560
Fair enough. We've also got the flavors. They've all released their 1904 and there's not a

02:46.560 --> 02:52.320
huge amount to say about many of them. Ubuntu Budgie seems to be probably the biggest in

02:52.320 --> 02:53.960
terms of improvements and changes.

02:53.960 --> 02:57.000
Yeah, well, one of the things that I liked about Budgie is they've switched out to the

02:57.000 --> 03:00.640
Nemo file manager, which is just a great file manager with lots of nice features from the

03:00.640 --> 03:05.280
good old days of Nautilus, as well as some as some like font and UI tweaks throughout.

03:05.280 --> 03:11.480
It's a really solid release. Mate is also a really solid release. And I got to admit

03:11.480 --> 03:14.760
Joe, Ubuntu 1904 is great.

03:14.760 --> 03:19.640
Yeah, a few of the components have now been ported to GTK 3 and that effort continues.

03:19.640 --> 03:24.400
I'm really hoping that by 2004, the whole thing is going to be ready for that. But otherwise,

03:24.400 --> 03:28.680
pretty solid release. I don't think I'm going to really switch to it because I stick on

03:28.680 --> 03:32.560
the LTSs, but it gives me hope for the next LTS definitely.

03:32.560 --> 03:37.520
You've been trying to get me to try it out for, well, I don't know, two years now. And

03:37.520 --> 03:44.200
it was ironically the performance improvements to GNOME 3.32 shell that got me to try out

03:44.200 --> 03:50.560
XFCE. I got a taste for a faster GTK environment and then I wanted to go all in. And so I went

03:50.560 --> 03:56.640
over to XFCE and I spent about 20 minutes configuring and was pretty happy with the

03:56.640 --> 04:00.600
results. I think really part of what's turned me off for so long is I've been there done

04:00.600 --> 04:08.760
that and all of the screenshots are very unappealing, but you don't have to go by the default config.

04:08.760 --> 04:14.560
You can theme it yourself. And I spent, like I said, just a little bit of time doing that.

04:14.560 --> 04:20.640
And I ended up with a very modern stack with a traditional desktop interface and I'm staying

04:20.640 --> 04:26.520
for now at least. So 1904 was great, but at the end of it, I decided I think I'm going

04:26.520 --> 04:32.440
to try out Manjaro XFCE edition. You said you don't like Manjaro because they hold the

04:32.440 --> 04:39.000
updates back and stuff. I know. I don't like that as much, but I have heard so many nice

04:39.000 --> 04:43.560
things about their XFCE default setup that I thought that seems like a pretty good place

04:43.560 --> 04:48.800
to start for a modern implementation. And I kind of miss using a rolling release, at

04:48.800 --> 04:53.600
least on my laptop. On my production machines, I'm just sticking with the LTS. 1804 has

04:53.600 --> 04:59.800
been solid. The plasma desktop that I'm running on Kubuntu has been great. No problems, really.

04:59.800 --> 05:03.480
And I think I'm just going to stick there for a while. And if my experiments with XFCE

05:03.480 --> 05:07.780
result in something productive, maybe when it comes around to the next refresh cycle

05:07.780 --> 05:10.680
for our studio computers, I might refresh them to XFCE.

05:10.680 --> 05:13.840
Oh, that'll be a glorious, glorious day.

05:13.840 --> 05:14.840
We'll hold a party for you.

05:14.840 --> 05:16.920
Yeah, I'll have to fly in.

05:16.920 --> 05:17.920
Yeah, we'll fly you out.

05:17.920 --> 05:26.280
I can cut the ribbon and stuff. But this release isn't just about the desktop for Ubuntu. They

05:26.280 --> 05:32.580
do focus a little bit on that, but it's kind of more about the cloud. Well, as they say,

05:32.580 --> 05:34.080
from the cloud to the edge.

05:34.080 --> 05:38.240
Right, which does include the developer. And they're very clear about that. They say in

05:38.240 --> 05:42.480
here that in their big press release on their website that they've integrated the best of

05:42.480 --> 05:46.520
OpenStack and Kubernetes and many more. So that way it's ready to go and they have their

05:46.520 --> 05:52.840
optimized minimal Ubuntu 1904 images available for the major public cloud instances. And

05:52.840 --> 05:57.920
then they sort of wax poetically about their reach and developer productivity thanks to

05:57.920 --> 06:02.760
snaps and Visual Studio Code being one of the many popular snaps. And they highlight

06:02.760 --> 06:07.900
the feature in 1904 where you can install multiple instances of the same snap, which

06:07.900 --> 06:08.900
is great.

06:08.900 --> 06:13.040
So you want to have maybe like a testing version and like a production version and the one

06:13.040 --> 06:16.680
you're rolling out to your end users. And last but not least, they're saying, hey, by

06:16.680 --> 06:21.440
the way, if you're a VMware user, we're now going to automatically install those old open

06:21.440 --> 06:25.640
VM tools for you. And that way you get bi directional clipboard, easy sharing of files,

06:25.640 --> 06:29.280
and of course, that graceful power management. Once you have all that set up, that's all

06:29.280 --> 06:33.560
right out of the box. Now in 1904, you combine that with the performance improvements. And

06:33.560 --> 06:35.940
they're trying to make a case here for the developer.

06:35.940 --> 06:39.840
Being able to install those different versions of snaps reminds me quite a lot of what fedoras

06:39.840 --> 06:45.560
do with modularity. Although it's kind of a different approach to it, it kind of gives

06:45.560 --> 06:46.560
you the same result.

06:46.560 --> 06:51.460
Yeah, I think the the nice thing about the snap approach is you're doing it in the deliverable

06:51.460 --> 06:56.040
end result. And you have the container aspect of snaps where they're isolated from the rest

06:56.040 --> 07:01.520
of the system. But it is obviously something that developers are looking for. You want

07:01.520 --> 07:06.040
the testing version, you want the production version, you want the one that's rolling out.

07:06.040 --> 07:09.920
But also, wouldn't it be great to have the ability to do a phased rollouts via the snap

07:09.920 --> 07:13.420
store? I think that might be part of this as well. You know, you can learn a lot more

07:13.420 --> 07:17.680
if you join their webinar on May 7. As we're recording that that's just a little bit out

07:17.680 --> 07:21.040
there. And you can learn more by using the links in our show notes.

07:21.040 --> 07:28.120
Yeah, linuxactionnews.com slash one zero two. But speaking of IoT, Mozilla have graduated

07:28.120 --> 07:34.280
project things to its own proper project now, which they're calling web things. Now I must

07:34.280 --> 07:40.840
admit that home automation and Internet of Things is not really for me. But I know you

07:40.840 --> 07:48.200
are all over that with, you know, smart sockets and shouting at your Alexa and stuff. So is

07:48.200 --> 07:49.680
this appealing to you?

07:49.680 --> 07:57.360
It is. I felt like the IoT ecosystem is really early days. And I've been experimenting with

07:57.360 --> 08:03.160
HomeKit and the Alexa solutions and the Google Home selection, trying to feel all of them

08:03.160 --> 08:07.600
out seeing which one is more respecting of your privacy, which one chats the most and

08:07.600 --> 08:12.640
whatnot. But none of them give me what I really want, which is 100% local control, like my

08:12.640 --> 08:17.420
internet could be disconnected, and I can still manage these devices. Mozilla is pushing

08:17.420 --> 08:23.600
us in that direction. So this initiative is both their effort behind pushing forward standards

08:23.600 --> 08:29.460
that focus on security, privacy and interoperability, sort of like their wheelhouse. But it's also

08:29.460 --> 08:33.600
a couple of components of software, primarily two different components, the web things gateway

08:33.600 --> 08:40.560
and the web things framework. The web things gateway is interesting. It's a software distribution

08:40.560 --> 08:45.920
for smart home gateways focused on privacy and security that you manage all of this locally,

08:45.920 --> 08:51.160
including getting a web dashboard that gives you logs and stats. Say you have an IoT device

08:51.160 --> 08:56.640
that monitors electrical usage. You could pull that in and generate real time graphs

08:56.640 --> 09:01.920
and logs on that using this platform. And what's really fun about it is along with creating

09:01.920 --> 09:07.880
a standard development kit, they've created images for the Raspberry Pi, and they're working

09:07.880 --> 09:13.480
on an open WRT image. So you could load this on a lot of consumer routers, and you just

09:13.480 --> 09:16.200
get the IoT gateway baked into it.

09:16.200 --> 09:21.440
Yeah, that all sounds amazing. But you need the devices to support it. You've got tons

09:21.440 --> 09:24.180
of these devices. Do any of them support this yet?

09:24.180 --> 09:30.720
It's a bit mixed right now. So that's where the web things framework comes in. Now, this

09:30.720 --> 09:39.300
is a set of libraries for like Node.js, Python, Java, Rust, Arduino kits, MicroPython, as

09:39.300 --> 09:46.480
well as some third party libraries like IoT.js, and some APIs for the web. And some of these

09:46.480 --> 09:50.520
work with some of the devices I have and some of them don't. And what these different libraries

09:50.520 --> 09:57.400
do is say you can use a Python application to get a standard library to control the percentage

09:57.400 --> 10:04.380
of brightness for a bulb or the color or whatever it might be. They give you a standard programming

10:04.380 --> 10:08.880
interface to control this stuff. And then it's up to Mozilla to update the devices that

10:08.880 --> 10:13.640
they support. And it's going to be hit and miss right now. And unfortunately, really,

10:13.640 --> 10:18.560
this is really the story of the whole freaking IoT device market to begin with. It's not

10:18.560 --> 10:22.520
like it's like solving it yet. But you could see where like, there's potential down the

10:22.520 --> 10:27.360
road to solve it. Maybe do you really think that the manufacturers are going to settle

10:27.360 --> 10:32.520
on this standard and not just have their own app and their own APIs that are all closed

10:32.520 --> 10:38.080
and just force you to use their own walled garden? I think realistically, you're going

10:38.080 --> 10:43.120
to have some vendors that go for price, and they're going to be really narrow and locked

10:43.120 --> 10:47.640
in like they'll only work with the echo product or they'll only work with home kit. Then you'll

10:47.640 --> 10:52.200
have devices that are a little more premium that support multiple standards and multiple

10:52.200 --> 10:56.060
protocols, and they'll cost more money. But those of us that care, we'll be able to buy

10:56.060 --> 11:02.920
those ones. And this may be one of the many standards and protocols and SDKs and API's

11:02.920 --> 11:04.440
and etc, etc, that they support.

11:04.440 --> 11:08.480
Well, once again, it feels like Mozilla is the organization to do this. I don't have

11:08.480 --> 11:14.880
a huge interest in it personally. But I know that a lot of people do. And it's an area

11:14.880 --> 11:22.040
where we need someone trustworthy like Mozilla to get involved and try and shepherd the whole

11:22.040 --> 11:27.920
industry towards something that does use open standards and can use completely free software

11:27.920 --> 11:33.480
if you want it to, and not have to interact with the huge tech companies like Apple, Amazon

11:33.480 --> 11:34.480
and Google.

11:34.480 --> 11:38.680
And what Mozilla has done here is what they're traditionally so good at is now they've set

11:38.680 --> 11:43.680
the bar. This is now the new minimum, and now the industry can choose to step up or

11:43.680 --> 11:49.000
not. And by creating standard libraries for Node.js, Python and many others, it's going

11:49.000 --> 11:53.520
to have a good chance of getting an adoption. That's a pretty clever way to go. And Mozilla

11:53.520 --> 11:58.180
is particularly good at some of this infrastructure stuff. In fact, that's why I'm pretty excited

11:58.180 --> 12:03.640
about Pyodide, which is their initiative to bring the scientific community that uses Python

12:03.640 --> 12:05.760
to the web, right into the browser.

12:05.760 --> 12:09.280
Yeah, there have been quite a few attempts in the past to get Python running in the web

12:09.280 --> 12:12.840
browser, but I don't think any of them have been as complete as Pyodide.

12:12.840 --> 12:17.920
Well, and it goes back to Mozilla might be the right organization to back something like

12:17.920 --> 12:23.200
this, which long term, when you're talking sustainability of a project over 10, 20 years,

12:23.200 --> 12:29.880
really matters. And so you might be thinking, or I was at least, why do we need Python in

12:29.880 --> 12:35.240
the web browser exactly? Well, they address that in their post. They say JavaScript doesn't

12:35.240 --> 12:40.440
have a mature suite of data science libraries, and it's missing a number of features that

12:40.440 --> 12:45.760
are useful for numeric computing. While we still think it's worthwhile to work on changing

12:45.760 --> 12:51.640
that and moving JavaScript towards a data science ecosystem. In the meantime, we're

12:51.640 --> 12:56.680
also taking a shortcut. We're meeting data scientists where they are by bringing the

12:56.680 --> 13:04.200
popular and mature Python scientific stack to the browser. And what we really have here

13:04.200 --> 13:10.160
is something called Pyodide. It gives a full standard Python interpreter that runs entirely

13:10.160 --> 13:16.760
in the browser with full access to the browser's traditional web APIs. And think of it really

13:16.760 --> 13:23.360
as three components. Number one, you download the source code of a Python interpreter, CPython,

13:23.360 --> 13:28.160
and the scientific computing packages like NumPy. Then you apply a small set of changes

13:28.160 --> 13:34.240
to make them work in the new environment. And then you compile them to WebAssembly. And

13:34.240 --> 13:39.120
that's what Pyodide is doing in the browser. It's pretty clever. And you get everything

13:39.120 --> 13:41.680
that CPython can do and that NumPy can bring.

13:41.680 --> 13:45.840
It's funny that they say these files can be quite large. The total download is a huge

13:45.840 --> 13:46.840
50 megabytes.

13:46.840 --> 13:54.360
Yeah, I know, right? I mean, that is large from a web page standpoint, but it's small

13:54.360 --> 13:56.920
from like, say, probably even a short YouTube video.

13:56.920 --> 14:02.760
But it's not even much bigger than the Firefox binary for Windows. So that's why it is big,

14:02.760 --> 14:06.680
as you say, by web standards. But once you've got it once, then as long as you don't clear

14:06.680 --> 14:11.760
your cache, you're good to go from then on. And they're focusing on the scientific angle

14:11.760 --> 14:15.860
here. But the first thing I thought about was education. And you've got how many kids

14:15.860 --> 14:20.680
with Chromebooks these days? Being able to run Python right there in the browser seems

14:20.680 --> 14:22.760
like it'd be very useful in the classroom.

14:22.760 --> 14:25.960
Well, that was one of the points that Mozilla brings up in that post that we have linked.

14:25.960 --> 14:32.080
As they say, this is sort of a long term defensive move for Python as well, because they're concerned

14:32.080 --> 14:36.640
that if you can't take advantage of it in the browser, you are locked out of certain

14:36.640 --> 14:43.280
use cases like Chromebooks and mobile. And that for Python to remain relevant long term,

14:43.280 --> 14:46.000
they got to have some sort of presence in the browser. And you could maybe make that

14:46.000 --> 14:51.480
argument. Right now, Python's doing better than I ever expected. It's interesting because

14:51.480 --> 14:56.600
it's been around for a while. But just looking at the metrics from the Linux Academy students,

14:56.600 --> 15:01.140
Python is intensely interesting to them. Python is an area that's bringing a lot of students

15:01.140 --> 15:05.800
over to the Linux Academy platform right now so they can learn it. And I've heard more

15:05.800 --> 15:10.240
and more of our listeners talking about Python. And the Kota Radio show gets more and more

15:10.240 --> 15:15.260
emails about Python than it ever has before. All of the data that I can look at is suggesting

15:15.260 --> 15:17.720
that Python is doing better than it ever has right now.

15:17.720 --> 15:22.660
Well, I'm not surprised at all by that. Because, okay, it might not be the fastest and most

15:22.660 --> 15:26.480
efficient language. And being interpreted means that obviously it's going to be way

15:26.480 --> 15:31.360
slower than something that's compiled. But just look at any source code from Python.

15:31.360 --> 15:32.800
It's so easy to read.

15:32.800 --> 15:33.800
Yeah, it's approachable.

15:33.800 --> 15:38.720
Exactly. It's therefore easy to write as well. And that's why it just seems obvious to me

15:38.720 --> 15:41.040
that people would get into it and like it.

15:41.040 --> 15:45.840
Well, everybody was talking about Python at the new OpenSSH 8.0 release party. You know,

15:45.840 --> 15:49.080
I didn't see you there, Joe. I thought you were going to fly in for the big release party

15:49.080 --> 15:50.080
this week.

15:50.080 --> 15:54.520
No, I was too busy getting my boxes owned from using a slightly older version of OpenSSH.

15:54.520 --> 16:00.000
I do love me some SCP. And so if you do as well, it's probably worth upgrading to version

16:00.000 --> 16:06.300
8.0. This release contains a mitigation for a weakness in the SCP tool and protocol. This

16:06.300 --> 16:14.160
is related to CVE-2019-6111. When copying a file from a remote system to a local directory,

16:14.160 --> 16:19.920
SCP did not verify that the file names that the server had sent matched those requested

16:19.920 --> 16:26.880
by the client. This could allow a hostile server to create an unexpected local file

16:26.880 --> 16:33.880
that essentially contained attack content. This release adds a client-side check to the

16:33.880 --> 16:40.440
file names sent from the server to make sure they actually match the original request.

16:40.440 --> 16:44.740
But then they put this note in here, Joe, and this hits me hard and makes me feel like

16:44.740 --> 16:51.800
an old man. And I hate this kind of stuff. They say this, the SCP protocol is outdated,

16:51.800 --> 16:59.120
inflexible, and not readily fixed. We recommend the use of more modern protocols like SFTP

16:59.120 --> 17:04.720
and rsync for file transfer instead. It's not that I can't use those tools. It's just

17:04.720 --> 17:11.240
SCP is so handy. Like you install the, you're already going to use OpenSSH anyway. So you

17:11.240 --> 17:17.320
install that and you get this fantastic SCP. Not that you don't get SFTP, but I don't know,

17:17.320 --> 17:23.040
something about like a tool that I have just used for 20 years now, I'm being told, hey

17:23.040 --> 17:26.800
old man, stop using one of your favorite tools. This is like the first time this has really

17:26.800 --> 17:27.800
happened to me.

17:27.800 --> 17:31.480
Yeah, I use SCP loads. I do use rsync a little bit.

17:31.480 --> 17:33.200
Oh, it's great. rsync is incredible.

17:33.200 --> 17:38.320
Oh yeah, but I don't know, there's just something about SCP. I just learned it before rsync

17:38.320 --> 17:40.080
and so I just default to it.

17:40.080 --> 17:46.000
Yeah, it's quick. It's muscle memory. I can send and receive SCP files around my network

17:46.000 --> 17:52.680
in seconds, especially when you have keys and it's just, I love it more than going on

17:52.680 --> 17:55.960
a Windows box and going to the run prompt and putting the server name and using the

17:55.960 --> 18:02.560
whole UNC path. That feels old and clunky compared to using SCP. Not that I can't, again,

18:02.560 --> 18:07.520
SFTP, rsync, it's fine. This is my moment though. Here we are, 2019, this is my moment.

18:07.520 --> 18:11.560
It's like, hey old man, stop using this old SCP thing. I'm like, okay, all right. I'll

18:11.560 --> 18:16.040
take that advice on. I'll do it. Just not going to do it without complaining.

18:16.040 --> 18:21.920
Yeah, but this bug was pretty obscure. It was one specific use case and the server had

18:21.920 --> 18:26.200
to be owned in the first place. It's not like this was some man in the middle or whatever.

18:26.200 --> 18:28.080
Right, because you have to execute that file.

18:28.080 --> 18:31.680
Yeah, and I can't see it being the biggest problem if your server is being owned to the

18:31.680 --> 18:35.840
point where someone could exploit this. You've got way bigger problems to deal with than

18:35.840 --> 18:41.320
that. I mean, it needed to be patched, obviously, and it's good that it has been now, but it

18:41.320 --> 18:45.640
just seems like a relatively minor problem to me.

18:45.640 --> 18:50.320
Generally they are in isolation. That's how this works. In isolation, each one of these

18:50.320 --> 18:57.080
isn't a major issue, but it is not uncommon to chain multiple vulnerabilities together

18:57.080 --> 19:01.560
to have an overall effect. So if you could somehow compromise a machine to be able to

19:01.560 --> 19:06.520
execute files, but you just couldn't get files on the machine, you combine it with this attack

19:06.520 --> 19:10.520
and now you've got a way to copy the file onto the machine and you've got a way to execute

19:10.520 --> 19:14.040
it. You chain the two attacks together, Bob's your uncle, you now own the box.

19:14.040 --> 19:18.440
And that's why it is important because security is more than just one vulnerability. Security

19:18.440 --> 19:23.240
is an in-depth approach where multiple things in multiple layers have to be secure.

19:23.240 --> 19:28.560
Well, it's good that this was patched so quickly. I mean, it's only been around since RCP, what,

19:28.560 --> 19:32.880
30-odd years ago?

19:32.880 --> 19:37.640
Yeah. Yeah, you know, relatively in terms of the age of the universe.

19:37.640 --> 19:44.320
Yeah. But I'm not going to stop using SCP. So I just despite them for calling us old.

19:44.320 --> 19:48.400
Good. You and me, SCP and Nano to the grave for life.

19:48.400 --> 19:54.160
Yeah, man. Definitely. But will people stop using Chrome on Android? Well, if the EU has

19:54.160 --> 19:57.280
anything to say about it, they're certainly going to have the choice.

19:57.280 --> 20:01.680
It seems like they'll have the choice, but Google has found a way that's slightly more

20:01.680 --> 20:07.640
clever than the old Microsoft approach. So they're going to have a screen after you receive

20:07.640 --> 20:14.080
your Google device where you can select different apps that are randomly sorted based on popularity

20:14.080 --> 20:19.520
and some random variable. But they're still installing Chrome by default.

20:19.520 --> 20:23.600
If Chrome and Google search are all still installed by default, you would just also

20:23.600 --> 20:29.680
now get the option to install Firefox or Edge or Opera or DuckDuckGo. And then if you do

20:29.680 --> 20:35.960
install them, it will walk you through a series of steps that are not intuitive to set them

20:35.960 --> 20:41.340
as the default. But it doesn't just immediately switch them to the default. You have to go

20:41.340 --> 20:49.200
through additional hoops afterwards. So it's sort of, to me, a half-assed attempt to have

20:49.200 --> 20:53.140
their cake and eat it too. You can, you'll get a prop now to install Firefox. That is

20:53.140 --> 20:57.600
indeed an improvement. But Chrome's already there and set to the default when the device

20:57.600 --> 20:58.600
arrives.

20:58.600 --> 21:02.440
Yeah, it's like a welcome screen. You can put all the effort you want into it. People

21:02.440 --> 21:07.040
are just going to close it immediately and not read it. It just feels like one of those,

21:07.040 --> 21:11.680
yeah, next, whatever. And if you've got a next and a finish button and you've got Google

21:11.680 --> 21:15.840
search and Google Chrome installed by default, then I think very few people are actually

21:15.840 --> 21:20.720
going to take advantage of this, at least with the Microsoft one. I remember seeing

21:20.720 --> 21:26.560
it and I remember trying it out and it was actually pretty good. It kind of prompted

21:26.560 --> 21:32.880
you to actually think about installing something else. But this Android one just feels very

21:32.880 --> 21:39.680
much like next, next, next finish. You know, just like people do with the location settings

21:39.680 --> 21:43.720
and all the rest of that or all of the opt out of privacy stuff. I actually read all

21:43.720 --> 21:46.200
of that stuff, but I don't think many people do.

21:46.200 --> 21:50.960
And it literally is just a next, next, next screen. So that's why it feels like that,

21:50.960 --> 21:55.160
because that's literally what it's going to be. And it comes across as install more

21:55.160 --> 21:59.800
crap on your machine. But the other thing that's tricky here is if you read the verbiage

21:59.800 --> 22:04.400
of the way Google talks about this, is the browsers have to be compatible with the absolute

22:04.400 --> 22:10.080
latest version of Android that ships on that device. So if it's say the Pixel 4 and it's

22:10.080 --> 22:15.000
coming with a brand, brand new version of Android that maybe Opera and Edge are not

22:15.000 --> 22:20.780
ready for but only Firefox is, then the only thing in that list will be Firefox. So they

22:20.780 --> 22:25.360
also have a technicality where that list will change depending on the compatibility with

22:25.360 --> 22:26.360
the release of Android.

22:26.360 --> 22:30.560
Do you think this is then weaseling out of the European Commission's ruling then? Or

22:30.560 --> 22:34.760
is it a case of them obeying the letter of the law without obeying the spirit of it?

22:34.760 --> 22:40.320
It seems to be indeed trying to obey the letter of the law. If it's the spirit, I don't know.

22:40.320 --> 22:45.720
I'm so far removed from it. You know, I'd say that's up to each individual user to decide.

22:45.720 --> 22:50.880
To me, it doesn't seem nearly as complete as what Microsoft did with Windows back in

22:50.880 --> 22:56.720
the day, especially since Chrome is placed above all of the others in a separate category

22:56.720 --> 23:00.880
where it says installed and then the alternatives are all listed below it. Same with Google

23:00.880 --> 23:05.600
search. It feels like they're all second brands and you would just want to next next next

23:05.600 --> 23:09.480
bastard because you're used to all this crap coming at you when you're setting up a new

23:09.480 --> 23:10.480
device.

23:10.480 --> 23:12.800
Yeah, I wonder if they're going to get away with it. You would have thought so. They would

23:12.800 --> 23:18.520
have checked this stuff out before they put it out to the public. But it does feel a bit

23:18.520 --> 23:22.920
wrong to do that. You've got Google just as you say on its own, and then just all these

23:22.920 --> 23:29.160
other third party ones. Whereas with the Microsoft browser ballot, it was genuinely random. And

23:29.160 --> 23:33.480
I would imagine a lot of people just went for the first one, whatever that was. Whereas

23:33.480 --> 23:38.080
the first one here is Chrome. And so this is effectively pointless.

23:38.080 --> 23:41.480
Do you know how many stories there have been recently with their switching their name to

23:41.480 --> 23:48.360
Anthos for the Google Cloud platform? And with like this stuff, this monopoly stuff?

23:48.360 --> 23:53.200
How many times a year now do do these stories come up? You're like, this really feels like

23:53.200 --> 23:58.040
like a new Microsoft. This is like Microsoft when they're at their worst, when there was

23:58.040 --> 24:03.100
a lot of people that were into Microsoft. But then there was like these fringe, crazy

24:03.100 --> 24:08.060
free software users that were like, Microsoft's evil, and they're doing things that you don't

24:08.060 --> 24:15.040
recognize. I feel like that's what's going on here with Google. Like this is a monopolistic

24:15.040 --> 24:19.280
move that they're making. And they have a dominance over search. They have a dominance

24:19.280 --> 24:23.920
over web advertising. They have a dominance with Chrome now. And they have a dominance

24:23.920 --> 24:30.240
with Android. And they continue to behave in all of these different ways, just like

24:30.240 --> 24:35.760
Microsoft did of the past. If you understand and appreciate Google's history, you will

24:35.760 --> 24:41.480
understand how deeply ironic that is. They're like a young adolescent Microsoft. They have

24:41.480 --> 24:45.560
to go through a maturity phase that perhaps we are now seeing Microsoft enter.

24:45.560 --> 24:49.040
Yeah, I can't really disagree with that. It really does feel that way.

24:49.040 --> 24:53.200
Well, thankfully, Joe, everything does change over time as we seem to bear witness. And

24:53.200 --> 24:57.960
one of the things that I really appreciate so many years now into doing podcasting is

24:57.960 --> 25:04.840
that all you need to listen to a podcast is an RSS feed. You don't even need a web browser.

25:04.840 --> 25:10.160
It's just generally available as a standard spec. And you can get our feed at linuxactionnews.com

25:10.160 --> 25:15.280
slash subscribe. We have the straight up RSS feed as well as many other ways to get this

25:15.280 --> 25:16.280
show.

25:16.280 --> 25:19.960
And you can go to linuxactionnews.com slash contact for ways to get in touch with us.

25:19.960 --> 25:23.600
And if you've been thinking about subscribing to Linux Academy, do it right now. Go, go,

25:23.600 --> 25:28.360
go just for a limited time. The $299 a year promo. That's a crazy good deal. It's like

25:28.360 --> 25:33.920
33% off. Go take advantage of that. You'll lock it in. Go to linuxacademy.com and subscribe

25:33.920 --> 25:34.920
to get the promo.

25:34.920 --> 25:38.680
And if you're going to be at Linux Fest Northwest this week, then do come and say hello to us

25:38.680 --> 25:43.800
and all the crew and go to meetup.com slash Jupiter broadcasting for some of the events

25:43.800 --> 25:44.800
that we're organizing.

25:44.800 --> 25:49.680
Yeah, I'll be barbecuing for you in the parking lot outside Lady Dupes. How would you not

25:49.680 --> 25:55.280
want to come see that? And somehow, regardless of the barbecuing and the festing, we will

25:55.280 --> 26:00.440
be back next Monday with our weekly take on the latest Linux and open source news. I am

26:00.440 --> 26:02.320
at Chris LAS.

26:02.320 --> 26:04.240
I'm at Joe Ressington.

26:04.240 --> 26:06.920
Thank you for joining us and we will see you next week.

26:06.920 --> 26:33.040
See you later.

