Hello, and welcome to Linux Action News, episode 251, recorded on July 26th, 2022.
I'm Chris.
And I'm Wes.
Hello, Wes.
Let's do the news.
Last week, we found out Red Hat was getting a new boss.
And this week, we're hearing about the company's next steps from comments made by that new
CEO, Matt Hicks.
For context, you need to know that Hicks' comments were made shortly after IBM shares
fell the most in almost 9 months, after the tech company lowered its forecasts for free
cash flow this year.
But one area of growth IBM did see was its hybrid cloud division.
Red Hat's sales grew by 12%, which is maybe not fantastic for Red Hat, but by most standards
is quite reasonably good growth.
Indeed, just a couple of years into this merger, Red Hat's already playing a significant
positive role.
So can Hicks keep things going in the right direction?
In an interview, Hicks recently said, quote, we'll keep using the same core fundamentals
that we built 20 plus years ago.
He goes on to say that Red Hat's particular combination of open source software and support
on top, quote, continues to play in new markets, whether that's the shift to cloud and cloud
services or to edge computing.
In the next couple of quarters, we'll just focus on executing.
There's great momentum right now around the open hybrid cloud.
And really, not just the cloud, although that is what gets all of the headlines.
We've spoken with folks behind the scene that tell us the automotive industry could be a
significant area for growth for Red Hat over the next few years.
In fact, I believe we have that growth to thank for pipewire and the problems that the
automotive companies needed to solve for their infotainment systems.
We don't really see much reporting on this because most of these car companies want to
be super secretive.
Hicks did speak publicly about working with GM, though, saying, quote, we're also working
with General Motors on UltiFi, GM's end to end software platform.
And two days ago, we announced a partnership with ABB, one of the world's leading manufacturing
automation companies.
He goes on to say, quote, it's pretty cool to see Linux and open source technologies
being pulled into these totally new markets in the industry.
I agree.
And he concluded with, quote, so my job is not to change anything, but to keep us executing
and capturing the opportunities ahead.
All right.
I take that as CEOs speak to mean he's really not going to change anything too radically.
He also had positive statements to make about the new CentOS development model, saying he
believes that the contribution cycle wasn't really working in the previous model and that's
now been corrected.
After what feels like 100 darn years, the preempt RT patch set might finally get mainlined
in the Linux 5.20 development cycle.
Now if you're unfamiliar, the preempt RT patches turn the kernel into a near real time kernel
by replacing various locking primitives with preemptible priority inheritance aware versions,
enforcing interrupt threading and introducing mechanisms to break up long non preemptible
sections.
Right.
And when you put all that together, it makes the kernel with a few low level exceptions
fully preemptible and brings most execution context under the scheduler's control.
For years now, there has been talk of these preempt RT patches coming to the mainline
kernel, but it just never panned out.
But there was a significant change earlier this year.
Intel acquired the consulting firm behind the preempt RT patch set, Linutronics, and
now they've been working more aggressively to get these mainlined.
Kind of makes sense that you might need a little company backing for this.
I mean it's a large set of patches and a lot of possible objections that could come
from the existing kernel community.
But fast forward a few months and now we seem to be down to just the two final blockers,
which might just get sorted out in the next week or so with some of that work already
underway.
But ultimately we'll have to wait and find out in about two weeks if the patches actually
make it into Linux 5.20, and that's assuming of course that there's no last minute objections
from Linus or anyone else.
From the Never Too Many Projects file this week, Google has announced what they hope
is the eventual successor to C++, the Carbon programming language.
Yeah, so far they're calling it quote, an experimental successor to C++.
The hope here is that Carbon is a more natural migration path from C++ than to some of the
other alternatives like, say, Rust.
Carbon aims for performance that matches C++, seamless bi-directional interoperability with
existing C++ codebases, an easier learning curve for C++ developers, comparable expressivity,
and scalable migration.
And Google's no slouch here, people tend to like the languages they create, they know
what they're doing.
And Carbon is built on top of the LLVM compiler stack, and aims to work for performance critical
software and have easily understandable code and offer practical safety.
I suppose the big question in my mind is, Carbon too late?
I mean, we're seeing Rust support almost everywhere now, including maybe the kernel.
Could so many existing modern languages already provide a really nice developer experience,
and of course, have larger ecosystems?
I agree, Wes.
I did a little bit of digging around, tried to get an idea of where Google was coming
from on this and read their GitHub and their announcement and some of their documentations.
And what I took away from it is that Google seems to be arguing that C++ is just such
a huge market.
It is such a dominant language in the performance critical software arena.
And that that user base isn't slowing down at all.
Google believes that user base is continuing to grow at a large pace.
So reading through their materials, I think that's their target is not necessarily developers
using one of these modern languages like, you know, maybe Go.
But they're looking for something that really appeals to existing C++ developers.
Yeah, that does kind of make sense, right?
If you're an existing C++ developer, maybe you're an enthusiast, maybe you're taken
by Rust, but it's quite a different language.
And if you're just trying to get your day job done, you might not have a bunch of time
to learn a radically different language and still hit your product deadlines.
And that's maybe why Google isn't really looking at Rust as competition.
They're looking at folks who are already using C++ in their day to day life, and trying to
make carbon an easy migration path so they can gradually shift things over.
That's where that easy interoperability comes in, right?
So you can sort of have some of your code base in carbon, and the rest of it in C++,
at least until you have time to move it over.
They really stress that carbon is taking a quote, successor language approach.
We'd like to know your thoughts, though.
Is Google onto something with carbon?
Send us your feedback or send us a boost.
Well I never thought I'd say this in a million years, but ByteDance, the Chinese company
behind TikTok, has been working on a number of Linux kernel optimizations for the past
few years.
And, well, their most recent work almost seems purpose-built for one man, Wes Payne.
What are these mysterious improvements?
It's faster KExec rebooting, of course.
Now my love of KExec aside, really this makes sense when you think about how modern data
centers run Linux.
When you have a fleet of thousands of servers, shaping off even a few milliseconds off the
reboot time can make a huge difference.
Now ByteDance, like many other large organizations, or, you know, myself, rely on KExec reboots
to move to a new kernel, either for security, maintenance, or optimization.
By using KExec, they avoid the significant downtime of those servers posting and doing
all the pre-kernel boot-up steps.
That stuff does seem like it takes forever, but even when you're using KExec to switch
to a new kernel and avoid all the hardware initialization and bootloader stuff, in its
current form, that can be too dang slow when you've got thousands of servers.
And that's what's so great about this, quote, faster KExec reboot patch series that aims
to reduce the current 500 millisecond timeline down to just 15.
Wow, I mean, that really, when you think about it at scale, is significant.
So how do they manage to squeeze out all that performance?
Well, they did it by optimizing everywhere they could, just like a few areas, to just
give you an example.
They looked at using uncompressed kernel images to speed up the boot process to avoid the
time of having to decompress the kernel, and then they made optimizations for how that
gets copied around in memory, and then they have a patch in there for reusing the crash
kernel reserved memory for normal KExec operations.
And they note that when they enabled the uncompressed kernel on x86 systems alone, that shaved off
150 milliseconds right there.
That's a huge return.
It did mean, though, their kernel image went from 8.5 megabytes to 53 megabytes.
But all in all, the patch itself is small.
It's only 100 lines of code that need to be added to the Linux kernel.
And well, ByteDance hopes to have all of that upstreamed in the near future.
And I guess this story just tells us that thanks to the GPL, even something good can
come out of TikTok.
A very special acknowledgement to This Week in GNOME for recently reaching one full year
of weekly publications on the developments going on in the GNOME world.
Curated by Felix Hocker, if you're a GNOME fan, it's a great time to catch these weekly
developments.
With the first alpha of GNOME 43 just out, and really, a generally impressive amount
of things happening right now.
Don't worry though, if you're a Plasma fan, we've also got a link to Nate's excellent
This Week in KDE in the show notes.
Linode.com slash LAN.
Linode offers options for developers and businesses that don't want the complexities of hyperscalers,
and you don't need their endless options.
They just make it simple, affordable, and accessible to deploy and manage your projects
or your customers' projects in the cloud.
And Linode does it for a better price and better performance.
I've tried them all and Linode does it the best.
That's why we run everything we've built for the last few years on Linode.
I mean, if you're like us too, as a Linux user, you kind of can tell that they love
Linux too.
Like, you know how Linux users, we just can tell when there's like another Linux user
that especially when it's a product like Linode where you're dealing with the system, and
you can hit a button and they give you the actual commands to run and I really appreciate
that that it permeates everything they've done over the years.
It's why they got into this.
And now they have some of the best support, some of the best performance, 11 data centers
for you to choose from, great features like object storage, cloud firewall, nice, easy
to understand backups that are going to make you feel confident your data and your systems
are completely backed up, and so much more.
So go try it.
Go learn something, go build something and get $100 and it's a great way to support the
show too.
Kick the tires and support the show, linode.com slash LAN.
And thank you to Kalyde, Kalyde.com slash LAN.
Kalyde is an endpoint security solution that uses the most powerful untapped resource in
IT, the end users.
You know, when you're trying to achieve security goals, maybe it's for yourself or a third
party audit, I used to work for a bank, we had certain things we just had to follow in
order to be FDIC insured.
Old school device management like MDMs, they force disruptive agents that end users hate.
That kind of creates this dynamic between end users and IT that's no good.
I have been on both sides of it.
It also creates other little side problems and sometimes security problems as well.
Kalyde does things differently.
Instead of forcing changes on users, Kalyde sends them security recommendations via Slack.
Kalyde will automatically notify your team when devices are insecure, and then it gives
them a step by step instruction on how to solve that problem.
And by reaching out to employees with a friendly Slack DM, and then educating them about company
policies, Kalyde can help you build a culture in which everyone contributes to security,
because everyone understands why and how to do it.
For IT admins, Kalyde provides just a single dashboard, a beautiful dashboard, as you might
say, that lets you monitor the security of your entire fleet.
You can be on a Mac, Windows or Linux, it's all going to work.
And you can see at a glance which employees have their disencrypted OS up to date, password
managers installed, you know, that kind of stuff, make it easy for audits, for leadership,
and just for yourself.
So that's Kalyde, user-centered cross-platform endpoint security for teams that Slack.
You can meet your compliance goals by putting users first.
Visit Kalyde.com slash land to find out how.
And you go there, you're also going to get hooked up with a goody bag that includes a
free t-shirt just for activating a free trial.
So that's K-O-L-I-D-E dot com slash land, Kalyde dot com slash land.
The BUNNERFS file system has many advanced features, and it's seen a significant amount
of development in just the last few years.
But one feature it still lacks is native file system encryption.
Fortunately though, there are patches in development right now that aim to provide exactly that
functionality.
Now sure, you might say, BUNNERFS can already run off dmcrypt, lux, encrypted partition,
or make use of some tool like eCryptFS.
But this in-progress patch set is leveraging the native encryption framework already present
in the kernel known as FSCrypt.
Now it appears that this work actually started sometime last year, but just now it's finally
in a state that the developer wants to get some feedback.
Writing in the draft, quote, my goal in sending out this RFC is to get feedback on whether
these are going in a reasonable direction.
While there are a couple of additional parts, they are fundamentally minor compared to this.
And all of this is early code obviously, so it means not everything is fully implemented
yet, such as encryption for inline data extents and compressed data.
There's also going to need to be some work on adding additional file system tests that
can properly run BUNNERFS through its paces with the new encryption built in.
But really, the remaining work is pretty darn minor compared to what the developer has already
accomplished.
Yeah, it's pretty great to see this.
I have had BUNNERFS in production for several years now, and I remain quite convinced it's
one of the best file systems for my Raspberry Pi 4 servers.
But even on our bigger boxes, a root file system with transparent file system compression,
copy on write support, and snapshots all with just built in kernel support, that has proven
to be extremely useful.
It really has.
And you know, with ZFS just somewhat recently adding native encryption itself, I mean, we
got to keep up with those BSDs, right?
So soon, you'll have that native encryption added to the list of great BUNNERFS features
that you just get for free with a standard kernel.
And you know, Chris, it seems like it might actually make a ton of sense for your Pi's
because it's a pretty darn easy device for someone to walk away with.
Having an even better way to encrypt your data, it's going to be a nice upgrade and
totally worth the price.
The price of one free kernel, and you can see this scenario on laptops too, a single
SSD, BUNNERFS can make a lot of sense, and why not have the best protection possible?
All you had to do was install Linux.
So of course, we're going to keep an eye on this development, and we'll give it a spin
when it ships and tell you what we think.
So don't miss a single episode of Linux Action News.
Be sure you go to LinuxActionNews.com slash subscribe for all the ways to get new episodes.
And LinuxActionNews.com slash contact to tell us why we should just be using CFS, darn it.
And we'll have a link in the show notes to the podcasting 2.0 episode 94, Bell's Out.
I joined Dave and Adam to talk about the podcasting industry, advertising, where things are going,
Spotify, and so much more.
As for this year's podcast, well, don't worry, we'll be back next week with our take on the
latest Linux and open source news.
Thanks for joining us.
And that's all the news for this week.
