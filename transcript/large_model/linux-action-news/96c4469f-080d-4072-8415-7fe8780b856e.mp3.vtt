WEBVTT

00:00.000 --> 00:17.400
Hello, and welcome to Linux Action News, our weekly take on Linux and the open source world.

00:17.400 --> 00:22.120
This is episode 88, recorded on January 13th, 2019.

00:22.120 --> 00:23.120
I'm Chris.

00:23.120 --> 00:24.120
And I'm Joe.

00:24.120 --> 00:25.120
Hello, Joe.

00:25.120 --> 00:27.200
It's good to be connected with you.

00:27.200 --> 00:32.400
In fact, it's good for all of us because soon we may get to choose our own Linux on Chrome

00:32.400 --> 00:37.240
OS, which is based on Linux.

00:37.240 --> 00:38.240
Linuxception.

00:38.240 --> 00:42.600
Yeah, this thing that was formerly called Crostini, which is now just called Linux on

00:42.600 --> 00:49.240
Chrome OS, means that you can use Debian apps within Chrome OS, but now they are looking

00:49.240 --> 00:53.560
to expand that to be different distros.

00:53.560 --> 00:57.300
It's not going to be particularly easy to do it.

00:57.300 --> 01:00.860
It's going to take a bit of admin skill.

01:00.860 --> 01:06.280
But then I suppose the kind of people who are looking to install these Linux apps probably

01:06.280 --> 01:07.280
have those skills.

01:07.280 --> 01:08.280
Well, here's the details.

01:08.280 --> 01:10.440
I was reading through how they're going to do this.

01:10.440 --> 01:15.560
And it's really down to device administrators, they'll be able to designate a URL for Chrome

01:15.560 --> 01:19.680
OS to download the Linux distro of choice, and then does a hash to make sure it got the

01:19.680 --> 01:21.280
right file.

01:21.280 --> 01:25.240
And if you need it, it's also intended for a license key to get that you can fetch a

01:25.240 --> 01:27.400
license key from that URL to be present.

01:27.400 --> 01:30.360
I don't know what that license key is going to be used for.

01:30.360 --> 01:36.100
And it's not quite clear if you need to make modifications to a specific Linux OS or distro

01:36.100 --> 01:39.560
to get it to work on the Chrome OS Crostini environment.

01:39.560 --> 01:45.280
But the basic principles are put it up on an HTTP location, give the URL via the device

01:45.280 --> 01:46.640
administrator tool.

01:46.640 --> 01:49.720
And then Chrome OS when you go to install Linux support when you when you go to enable

01:49.720 --> 01:52.660
that as a user just pulls it from that location and loads it.

01:52.660 --> 01:54.960
And then it's just part of regular old Chrome OS.

01:54.960 --> 01:59.640
So it looks like to start with, at least this is only going to be available to managed users.

01:59.640 --> 02:01.120
So it's not going to be for everyone.

02:01.120 --> 02:04.480
Yeah, I wouldn't be too surprised though, if people on the internet figure out a way

02:04.480 --> 02:06.600
to get to that parameter.

02:06.600 --> 02:11.040
They've already, they quote unquote, the people on the internet have already looked through

02:11.040 --> 02:13.080
the available beta source code.

02:13.080 --> 02:17.360
And there doesn't really seem to be a way at first pass.

02:17.360 --> 02:19.940
But I feel confident that they'll figure that out.

02:19.940 --> 02:23.520
In a few months, we may even have a story that reads something like Chrome OS subreddit

02:23.520 --> 02:26.640
figures out how to custom specify a URL for Linux distro.

02:26.640 --> 02:28.960
I have a sense it's gonna happen.

02:28.960 --> 02:32.640
The question I have is why do you need to have different distros supported as opposed

02:32.640 --> 02:34.240
to Debian?

02:34.240 --> 02:38.800
What is there that's available for other distros that isn't available for Debian?

02:38.800 --> 02:41.120
Apart from some of the proprietary stuff, maybe?

02:41.120 --> 02:44.440
I think you got to keep in mind the audience for this feature, which is developers.

02:44.440 --> 02:48.880
So it isn't so much about the application availability, like if you're just using this

02:48.880 --> 02:51.880
to install GIMP, it probably doesn't matter.

02:51.880 --> 02:56.240
But if you're using this to actually build software, you want a specific environment.

02:56.240 --> 02:58.700
That's why the Windows subsystem for Linux exists.

02:58.700 --> 03:03.000
You want maybe an Ubuntu environment if you're deploying on an Ubuntu server up in the cloud.

03:03.000 --> 03:08.720
That's the angle the Sputnik team went after with the Dell XPS 13 and Windows subsystem,

03:08.720 --> 03:12.800
like I mentioned, and I think what made the MacBook so popular amongst web developers

03:12.800 --> 03:17.280
is you get the command line, you get something that you can easily SSH into, and now the

03:17.280 --> 03:21.560
next stage of that that is taking what really made MacBooks popular is now you can have

03:21.560 --> 03:22.600
your own environment.

03:22.600 --> 03:24.440
So it's not just a Bash shell anymore.

03:24.440 --> 03:28.080
It's a Bash shell in your preferred development environment.

03:28.080 --> 03:29.080
I don't know.

03:29.080 --> 03:31.440
Maybe that's really, really valuable.

03:31.440 --> 03:37.240
Maybe but I always come back to the same argument of if you want a proper GNU slash Linux laptop,

03:37.240 --> 03:42.480
then buy one from Dell or System76 or Entryware or whatever.

03:42.480 --> 03:50.200
Why bother buying Chrome OS and then trying to kind of force this potentially quite sketchy

03:50.200 --> 03:52.680
Linux app support on top of it?

03:52.680 --> 03:57.840
Surely Chrome OS should just stay as this simplified platform and then we've got a proper

03:57.840 --> 03:59.600
GNU slash Linux for everyone else.

03:59.600 --> 04:01.280
Yeah, good points.

04:01.280 --> 04:06.440
And I have to say, I really like seeing Linux be a headline feature that all these companies

04:06.440 --> 04:08.140
are going after to add to their platforms.

04:08.140 --> 04:09.600
That's pretty cool to watch.

04:09.600 --> 04:14.000
But there is that skeptical side of me that looks at this and I think, who's the target

04:14.000 --> 04:15.080
market?

04:15.080 --> 04:18.280
It seems like it's too simple of an operating system.

04:18.280 --> 04:22.900
Chrome OS is too simple and you wouldn't really want to build software on a Chromebook.

04:22.900 --> 04:26.920
That's going to be slow and not very appealing.

04:26.920 --> 04:30.480
You would probably just end up SSHing into your development box and doing the work on

04:30.480 --> 04:32.320
a much more powerful system.

04:32.320 --> 04:34.120
I don't quite get it.

04:34.120 --> 04:37.520
On the flip side, I want this feature as an end user.

04:37.520 --> 04:39.720
I'm looking forward to trying this out someday on a Chromebook.

04:39.720 --> 04:43.040
I've never really considered getting one, but this is kind of pushing me over the edge.

04:43.040 --> 04:48.360
It does make me a bit sad though that this is how Linux on the desktop has succeeded

04:48.360 --> 04:55.320
in this totally lockdown controlled by Google way and that they're kind of feeding us piecemeal

04:55.320 --> 05:01.920
little bits here and there, network, file, share support, and then Linux app support

05:01.920 --> 05:07.080
and then other distros and it's kind of all on their terms rather than with traditional

05:07.080 --> 05:11.600
desktop Linux where we've just had so much choice and control and that control has just

05:11.600 --> 05:17.840
been given away to Google and I just wish that this isn't how desktop Linux had succeeded.

05:17.840 --> 05:20.680
In some ways, I'd rather it not succeed than succeed like this.

05:20.680 --> 05:24.200
Well, the good news is we still have traditional desktop Linux.

05:24.200 --> 05:29.220
So for those of us that want that feature set, it's not going away anytime soon.

05:29.220 --> 05:33.760
But I think we've always wondered what was going to be the success pathway for desktop

05:33.760 --> 05:36.140
Linux to get into consumers' hands.

05:36.140 --> 05:41.080
Who was going to put hardware in stores and incentivize salesmen to actually sell it?

05:41.080 --> 05:46.000
Who was going to subsidize the hardware so it could be competitive in a low-end consumer

05:46.000 --> 05:49.320
market where they're not willing to spend very much money?

05:49.320 --> 05:55.160
And what company would have the development resources to build that platform?

05:55.160 --> 06:01.200
The number of companies that can do that in 2019 and in 2018 and the last few years is

06:01.200 --> 06:05.000
about five and one of them is Google.

06:05.000 --> 06:10.480
I just can't see another pathway to mainstream consumers without going through one of the

06:10.480 --> 06:14.320
top six or so tech companies at this point.

06:14.320 --> 06:17.620
Maybe if Amazon had done something like this.

06:17.620 --> 06:22.360
And I think in the end, users are generally better off with the exception of all of the

06:22.360 --> 06:30.240
horribly disturbing privacy violations that really could have their own weekly news podcast.

06:30.240 --> 06:36.200
And for those of us who still want traditional private, secure, customizable, enterprise-grade

06:36.200 --> 06:38.440
Linux, it's going to be out there.

06:38.440 --> 06:39.720
Yeah, that's true.

06:39.720 --> 06:43.560
And most of those distros are going to be developed on GitHub, aren't they?

06:43.560 --> 06:46.200
Hey-oh, yeah, well, if Microsoft has their way.

06:46.200 --> 06:52.200
And here we are, early 2019, and Microsoft is already just wrecking GitHub by announcing

06:52.200 --> 06:56.720
two major updates that frankly make it more accessible to developers.

06:56.720 --> 07:02.800
Unlimited free private repositories and a new simpler enterprise offering.

07:02.800 --> 07:04.760
You can't really argue with free, Joe.

07:04.760 --> 07:05.760
I know.

07:05.760 --> 07:07.240
You can't argue with that.

07:07.240 --> 07:09.080
You do have to wonder why they've done it.

07:09.080 --> 07:13.440
And it's presumably because of the success of GitLab.

07:13.440 --> 07:16.760
And I think this will attract people over.

07:16.760 --> 07:21.760
It's these free private repos, it's only for small teams.

07:21.760 --> 07:25.360
So you can only have three people at once contributing to them.

07:25.360 --> 07:29.560
So it's not really going to cost them that much money, but I think it is going to earn

07:29.560 --> 07:35.440
them quite a lot of goodwill amongst kind of small-time hobbyists and whatnot.

07:35.440 --> 07:36.440
Yep.

07:36.440 --> 07:39.520
And I think Microsoft can afford to do this.

07:39.520 --> 07:43.920
And it was the reason, well, one of three reasons that I was paying for GitHub.

07:43.920 --> 07:46.320
I have private repositories that I use for notes.

07:46.320 --> 07:48.840
I have note apps that saved to GitHub for me.

07:48.840 --> 07:51.280
I don't really need that to be public.

07:51.280 --> 07:53.380
And there's nothing really all that interesting in there.

07:53.380 --> 07:56.080
So I paid for a GitHub account to have a private repo.

07:56.080 --> 07:59.240
I don't really need to do that when my renew comes up.

07:59.240 --> 08:01.280
I can use it for free now.

08:01.280 --> 08:05.480
I think this is a good move to keep GitHub competitive.

08:05.480 --> 08:10.800
I don't think it's a game changer, but I think it's a necessary move for them to stay competitive.

08:10.800 --> 08:13.420
And it shows that they're willing to still be nimble.

08:13.420 --> 08:15.400
This enterprise stuff, it's nice.

08:15.400 --> 08:19.620
They have a new unified product for Enterprise Cloud, which used to be called GitHub Business

08:19.620 --> 08:24.120
Cloud, and their new Enterprise Server update, which all looks really good.

08:24.120 --> 08:26.760
They're doing the right stuff for business and for the general public.

08:26.760 --> 08:27.760
But you're right.

08:27.760 --> 08:30.040
This isn't a game changer, but it's good to see.

08:30.040 --> 08:33.960
Well, something that assured it's going to be a game changer is that Homebrew has now

08:33.960 --> 08:37.140
come to Linux.

08:37.140 --> 08:39.080
Had you even really heard of Homebrew before this story?

08:39.080 --> 08:41.760
Yeah, I'd heard of it, but I'd not used it.

08:41.760 --> 08:48.300
It's traditionally how you manage software on a Mac if you are nerdy and want to install

08:48.300 --> 08:51.620
things like Git and whatnot.

08:51.620 --> 08:55.040
If you're a command line person on the Mac, then you use Homebrew.

08:55.040 --> 09:00.640
Yeah, I mean, the Mac doesn't really have a traditional package manager like we think

09:00.640 --> 09:01.640
of.

09:01.640 --> 09:05.240
They have a way to install packages, but it's not connected to like an online repo where

09:05.240 --> 09:08.200
you can search for packages and then update all your packages on the command line.

09:08.200 --> 09:10.440
So Homebrew was exactly that.

09:10.440 --> 09:14.040
It was a package manager developed by the community, and it's been around for a while.

09:14.040 --> 09:19.200
It's pretty good for what you get, it's got a pretty good software selection, and it stays

09:19.200 --> 09:21.040
fairly up to date on everything.

09:21.040 --> 09:24.480
It makes using the Mac tolerable, to be honest with you.

09:24.480 --> 09:31.920
But things are now changing a bit, because with the new release, version 1.90, they have

09:31.920 --> 09:37.760
added Homebrew on Linux, known as Linuxbrew, and this also includes support for the Windows

09:37.760 --> 09:43.920
subsystem for Linux, which means technically Homebrew has now also come to Windows 10.

09:43.920 --> 09:46.960
So you might be asking, why would I want Homebrew on Linux?

09:46.960 --> 09:48.160
Good question.

09:48.160 --> 09:50.280
It's really all about not having to have root access.

09:50.280 --> 09:52.000
That's really what it comes down to.

09:52.000 --> 09:56.220
If you're on like a shared system where you don't have root access, Homebrew can just

09:56.220 --> 09:57.220
run out of your home directory.

09:57.220 --> 10:01.440
So you can have a pretty functional package manager without having to have administrative

10:01.440 --> 10:02.800
access to the box.

10:02.800 --> 10:06.340
It can either be installed in your home directory, which is nice.

10:06.340 --> 10:11.040
It may include when you install it recent versions of glibc and gcc, depending on how

10:11.040 --> 10:14.120
old your distro is, which is another nice thing about Homebrew.

10:14.120 --> 10:18.560
If you have a super out of date distro, it may still be supported by Homebrew.

10:18.560 --> 10:23.080
And you can install packages via Homebrew that don't conflict with your operating system

10:23.080 --> 10:24.080
packages.

10:24.080 --> 10:27.200
It can get a little messy, but I assume if you're running a rig like that, you know what

10:27.200 --> 10:28.200
you're doing.

10:28.200 --> 10:32.520
And so depending on how old your rig is, it may pull down its own libraries, or it may

10:32.520 --> 10:36.440
just use your system version, and keeps them all in your home directory, unless you specify

10:36.440 --> 10:37.440
otherwise.

10:37.440 --> 10:39.480
And it makes it nice and easy and tidy.

10:39.480 --> 10:43.520
It's worth mentioning it's beta support right now in version 2.0.

10:43.520 --> 10:47.200
They plan to land official Linux support.

10:47.200 --> 10:51.460
You know what I would use it is I tried out those Amazon virtual Linux desktops.

10:51.460 --> 10:52.460
They're pretty neat.

10:52.460 --> 10:55.800
We talked about it weeks and weeks and weeks ago on Linux Action News.

10:55.800 --> 10:59.160
And the thing is, is it has a very limited package set.

10:59.160 --> 11:02.400
And you could load this on one of those instances, one of those virtual desktops, and just start

11:02.400 --> 11:04.360
installing packages all day long.

11:04.360 --> 11:05.360
That's pretty neat.

11:05.360 --> 11:09.360
Well, speaking of Amazon, I think the only way I can describe the next story is shots

11:09.360 --> 11:10.920
fired at MongoDB.

11:10.920 --> 11:11.920
Savage.

11:11.920 --> 11:14.120
It's a savage move by Amazon.

11:14.120 --> 11:20.200
They basically set up their own MongoDB ripoff called AWS DocumentDB, and I predict it's

11:20.200 --> 11:21.640
going to be a smashing success.

11:21.640 --> 11:23.120
I think it will be successful.

11:23.120 --> 11:24.120
Yeah, absolutely.

11:24.120 --> 11:30.880
Looking at the specs of it and what it can actually do, it's a completely managed database

11:30.880 --> 11:35.320
solution, which takes a lot of the work and effort out for you, and it's got all the backups

11:35.320 --> 11:36.320
sorted out.

11:36.320 --> 11:39.000
It's distributed over different data centers.

11:39.000 --> 11:41.000
It's lightning fast.

11:41.000 --> 11:45.040
I can see people moving away from MongoDB to this in their droves.

11:45.040 --> 11:49.040
Yeah, and as the famous saying goes, nobody gets fired for choosing AWS.

11:49.040 --> 11:56.560
Now, it's worth pointing out, MongoDB does have their own managed database as a service,

11:56.560 --> 12:02.640
but it launched in 2017, and in their most recent results, Mongo said they had about

12:02.640 --> 12:06.320
6,200 customers using the service.

12:06.320 --> 12:08.320
That's not going to compete with AWS.

12:08.320 --> 12:10.760
There's probably more than that already on AWS.

12:10.760 --> 12:15.040
Yeah, they probably had more beta testers than that.

12:15.040 --> 12:18.240
But it is yet more vendor lock-in, isn't it?

12:18.240 --> 12:20.380
That's where I would be concerned to use this.

12:20.380 --> 12:23.660
I think a lot of companies won't care about that because they are just totally wedded

12:23.660 --> 12:24.660
to AWS.

12:24.660 --> 12:30.200
But at least if you were using MongoDB on AWS, you can extract your data and run it

12:30.200 --> 12:34.160
on premises, whereas once it's locked into this, it's going to be that bit harder to

12:34.160 --> 12:35.160
do so.

12:35.160 --> 12:39.600
They also, to make things easier for you to get in and get all that nice lock-in, they're

12:39.600 --> 12:45.320
introducing a MongoDB compatibility layer, which is essentially compliant with MongoDB

12:45.320 --> 12:46.960
3.6's API.

12:46.960 --> 12:51.640
Before they changed their license, which we covered a few weeks ago, just like we predicted

12:51.640 --> 12:56.200
in that episode, Amazon froze that code base, they forked right there and said, here's your

12:56.200 --> 12:57.200
compatibility layer.

12:57.200 --> 13:01.480
We'll implement our own database, but we will support MongoDB 3.6's API.

13:01.480 --> 13:02.480
Savage.

13:02.480 --> 13:07.480
There's a bit of a war of words as well, isn't there, between Amazon and MongoDB?

13:07.480 --> 13:12.200
MongoDB are saying that, oh, it's a poor man's MongoDB and it's a rip-off.

13:12.200 --> 13:16.360
And Amazon are saying, well, this is a proper professional version of it that's actually

13:16.360 --> 13:17.360
going to work properly.

13:17.360 --> 13:22.520
Yeah, well really, I was reading a quote in the register from Amazon's non-relational

13:22.520 --> 13:27.480
database VP, Sean Bice, and the register says he makes no bones about the fact that Amazon

13:27.480 --> 13:33.420
spent a lot of time looking at how to support MongoDB workloads, thought about that a lot,

13:33.420 --> 13:37.720
and then ultimately decided to build a new purpose-built document database from the ground

13:37.720 --> 13:41.440
up, end quote, that supported the MongoDB APIs.

13:41.440 --> 13:47.640
And then throughout the rest of the article, there's like little jibes at their availability

13:47.640 --> 13:51.920
and their scalability and their regional limitations and things like that just kind of sprinkled

13:51.920 --> 13:53.800
throughout the whole article.

13:53.800 --> 13:58.220
Amazon clearly has a more competitive product built off the backs of years of developers

13:58.220 --> 14:02.360
contributing to open source, and they're just like, all right, thanks for the fish.

14:02.360 --> 14:03.440
So long.

14:03.440 --> 14:05.280
This is very much aimed at enterprise, though.

14:05.280 --> 14:10.080
I mean, you only have to look at the resources that they offer, starting from 15 gigabytes

14:10.080 --> 14:14.080
of RAM up to nearly 500 gigabytes.

14:14.080 --> 14:18.600
This is not your sort of $10 droplet situation, is it?

14:18.600 --> 14:19.600
No.

14:19.600 --> 14:24.240
I mean, cost is definitely going to be a consideration, which is maybe where the MongoDB service

14:24.240 --> 14:26.000
can remain competitive.

14:26.000 --> 14:28.040
This is really like all other AWS services.

14:28.040 --> 14:30.040
It's pricing on demand.

14:30.040 --> 14:35.080
And the one thing is they don't charge for the inbound, so getting data into your document

14:35.080 --> 14:37.020
DB instance, they don't charge you for.

14:37.020 --> 14:38.520
But there is an IO rate.

14:38.520 --> 14:39.960
There's the storage rate.

14:39.960 --> 14:42.560
There's a lot of cost in here, including backup.

14:42.560 --> 14:47.000
And it's a cost that enterprises are willing to pay for to have really, really reliable

14:47.000 --> 14:48.000
infrastructure.

14:48.000 --> 14:54.520
But it's so cost prohibitive for some companies that they may start with other document databases

14:54.520 --> 14:58.000
and just remain on them because of the initial startup cost.

14:58.000 --> 15:02.440
But for the enterprises that can afford it, I think this is going to be very, very successful.

15:02.440 --> 15:08.480
If you look at the companies that are already using Amazon document DB, like Capital One,

15:08.480 --> 15:14.200
Dow Jones, and the Washington Post, as well as many others, this is going to be a massive

15:14.200 --> 15:15.200
success.

15:15.200 --> 15:17.600
I know I said that at the start of the story, but I really think Amazon's going to have

15:17.600 --> 15:18.640
a win here.

15:18.640 --> 15:24.240
And we really, as an open source community, need to take a hard look at this because this

15:24.240 --> 15:29.400
is a product that is a rip off of something that open source developers have contributed

15:29.400 --> 15:30.400
to for years.

15:30.400 --> 15:31.800
I don't know.

15:31.800 --> 15:32.800
Maybe I'm wrong.

15:32.800 --> 15:33.800
Is this a rip off or not?

15:33.800 --> 15:34.800
Let me know.

15:34.800 --> 15:35.800
LinuxActionNews.com slash contact.

15:35.800 --> 15:38.880
I'd really like to get the audience's take on that because to me it feels like Amazon's

15:38.880 --> 15:41.500
playing a little dirty here.

15:41.500 --> 15:44.960
But they're also a capitalist based company.

15:44.960 --> 15:45.960
They're trying to be competitive.

15:45.960 --> 15:50.920
I can't really argue with them wanting to make money and everything was free and open.

15:50.920 --> 15:56.760
And so as long as they make that MongoDB compatibility API Apache licensed, they're good.

15:56.760 --> 16:01.280
The back end implementation can be closed and owned by Amazon for eternity.

16:01.280 --> 16:05.920
And the API layer that is MongoDB compatible can stay open source, everybody's happy.

16:05.920 --> 16:09.640
Yeah, MongoDB have really shot themselves in the foot there, changing the license to

16:09.640 --> 16:12.800
try and stop this sort of thing because it's happened anyway.

16:12.800 --> 16:15.840
By everybody being happy, I mean MongoDB is not going to be happy.

16:15.840 --> 16:19.800
And you wonder now, just speculation corner here on Linux Action News, which is something

16:19.800 --> 16:24.480
we don't do very often, did they know at the time this was in the works?

16:24.480 --> 16:28.360
Was that maybe part of the story that didn't come out at the time, is that they knew Amazon?

16:28.360 --> 16:30.640
Because surely Amazon's been working on this for a while.

16:30.640 --> 16:32.360
In some of the reports, they say three years.

16:32.360 --> 16:34.120
Yeah, at least two I read.

16:34.120 --> 16:36.640
So you would imagine that they got wind of it.

16:36.640 --> 16:38.680
And maybe that did influence their decision.

16:38.680 --> 16:39.680
Yeah, yeah.

16:39.680 --> 16:40.680
I don't know.

16:40.680 --> 16:41.680
It's hard to say.

16:41.680 --> 16:42.680
They didn't say at the time.

16:42.680 --> 16:45.120
So I get end speculation corner, but I thought that was interesting.

16:45.120 --> 16:46.120
Yeah.

16:46.120 --> 16:51.680
Well, some good news coming out of the LVFS project this week is that Phoenix have joined

16:51.680 --> 16:52.680
them.

16:52.680 --> 16:57.200
Yes, the makers of really widely used firmwares.

16:57.200 --> 16:58.400
They're a huge firmware vendor.

16:58.400 --> 17:00.080
Anybody using a ThinkPad right now?

17:00.080 --> 17:03.480
They're probably using Phoenix code in the main board.

17:03.480 --> 17:11.160
They've been working with Lenovo, Phoenix has, and their ODMs on LVS support for a while.

17:11.160 --> 17:17.640
This was kind of hinted when Richard, the main guy behind the LVS project, announced

17:17.640 --> 17:19.180
Lenovo was on board.

17:19.180 --> 17:22.760
There was an implication, kind of like a little sneaky message in there, that there was another

17:22.760 --> 17:24.720
big vendor about to be announced.

17:24.720 --> 17:25.720
This is it.

17:25.720 --> 17:31.920
This is a big deal because Richard hopes that, big picture, other downstream vendors like

17:31.920 --> 17:37.080
Tuxedo and Star Labs will be able to take advantage of LVFS without having to work back

17:37.080 --> 17:41.000
and forth with their upstream ODMs like Clevo.

17:41.000 --> 17:44.440
Interesting though that System76 and Intraware are not in that list.

17:44.440 --> 17:46.880
Yeah, there's been a little bit of back and forth.

17:46.880 --> 17:52.680
I'm not going to say beef, but getting on for beef between Huzy and those companies

17:52.680 --> 17:53.680
you mentioned.

17:53.680 --> 17:56.880
It's not a huge surprise that he didn't link to them.

17:56.880 --> 17:59.920
But hopefully they'll be able to take advantage of this.

17:59.920 --> 18:03.560
Getting that firmware update through your software manager really feels like a first

18:03.560 --> 18:06.640
class desktop Linux experience, so I hope so too.

18:06.640 --> 18:11.400
And the more of these companies who get on board, the more momentum there is and hopefully

18:11.400 --> 18:15.840
that will mean that eventually we'll have all of the hardware companies on board and

18:15.840 --> 18:19.680
we'll just be able to update firmware for every device that we've got.

18:19.680 --> 18:21.280
That would be nice.

18:21.280 --> 18:24.960
Even if it is proprietary software, at least if you're getting updates, it's better than

18:24.960 --> 18:25.960
not.

18:25.960 --> 18:26.960
This is how I felt for a while.

18:26.960 --> 18:31.240
If we're going to turn all of these chips into mini computers running operating systems

18:31.240 --> 18:34.760
and firmware, then we better keep them secure and up to date.

18:34.760 --> 18:39.000
It's a responsibility we have as end users and the companies making this stuff and this

18:39.000 --> 18:40.000
enables that.

18:40.000 --> 18:45.720
So it's a pretty big deal and I love to just see every few weeks Richard has another post

18:45.720 --> 18:47.920
about another win for that project.

18:47.920 --> 18:52.920
It's so great to see that and every time the story comes up after the announcement of IBM

18:52.920 --> 18:56.220
buying Red Hat, I think to myself in the back of my mind, yep, this is another one of those

18:56.220 --> 18:59.240
Red Hat projects that we really don't want to go away.

18:59.240 --> 19:02.040
I really want this to stick around.

19:02.040 --> 19:03.040
Just keeping tally.

19:03.040 --> 19:04.040
Not that I'm worried.

19:04.040 --> 19:05.040
No, I'm not worried.

19:05.040 --> 19:06.040
No, no.

19:06.040 --> 19:07.040
It could go wrong, right?

19:07.040 --> 19:12.360
Although if I was an Ethereum Classic user, I would be very worried this last week.

19:12.360 --> 19:16.480
The Ethereum Classic network suffered one of those famous 51% attacks.

19:16.480 --> 19:22.600
Yeah, it's not clear if that's exactly what it was, but it was something akin to a 51%

19:22.600 --> 19:23.600
attack.

19:23.600 --> 19:30.280
It was a lot of transactions that were double spent basically, which meant that whoever

19:30.280 --> 19:36.120
was doing this attack made off with the best part of half a million dollars worth of Ethereum

19:36.120 --> 19:37.120
Classic.

19:37.120 --> 19:41.240
Yeah, so this is also called a rollback attack and a rollback attack generates a new fork

19:41.240 --> 19:43.040
of the blockchain essentially.

19:43.040 --> 19:46.960
This causes nodes to replace the original blockchain, the one that was supposed to be

19:46.960 --> 19:52.160
the agreed upon blockchain, with the new one that makes it possible for attackers to reverse

19:52.160 --> 19:53.720
previously made transactions.

19:53.720 --> 19:55.860
So you could reverse transactions to go in their favor.

19:55.860 --> 20:00.460
They're essentially getting the majority of the network to adopt a new ledger and they

20:00.460 --> 20:05.720
have retroactively tilted that register in their favor, like an accounting register.

20:05.720 --> 20:10.380
Rollback attacks require control of a substantial fraction of the total horsepower though.

20:10.380 --> 20:15.540
So it really takes some machinery devoted to generating the blockchain to get that power,

20:15.540 --> 20:18.000
to have that level of consensus.

20:18.000 --> 20:21.620
And to the network's credit, a lot of people noticed this was going on pretty quickly,

20:21.620 --> 20:22.620
one of them being Coinbase.

20:22.620 --> 20:25.580
Yeah, and they suspended trading on it very, very quickly.

20:25.580 --> 20:29.880
But it's funny that we're talking about Ethereum Classic here rather than Ethereum because

20:29.880 --> 20:35.000
Ethereum Classic was created out of controversy in the first place because there was a huge

20:35.000 --> 20:40.980
theft of Ethereum and at the time there was a lot of debate within the community, should

20:40.980 --> 20:46.980
we fork the blockchain and basically give everyone their money back or should we not?

20:46.980 --> 20:50.840
And it was decided that they would fork that blockchain, give everyone their money back

20:50.840 --> 20:53.420
and that was Ethereum.

20:53.420 --> 20:57.100
And the kind of diehard purists who said, no, that's not right, you just have to roll

20:57.100 --> 21:00.060
with it, that carried on as Ethereum Classic.

21:00.060 --> 21:04.600
I guess in theory, the smaller the network, the easier it would be to get a substantial

21:04.600 --> 21:06.980
control of it if you have access to a lot of horsepower.

21:06.980 --> 21:11.940
Yeah, and it seems that Ethereum Classic was just about the right size where it was worth

21:11.940 --> 21:16.500
doing, but it was also possible to do because you couldn't really do that with Bitcoin,

21:16.500 --> 21:19.700
for example, because it's just too many people mining it.

21:19.700 --> 21:23.820
Although there really is a quick fix that exchanges and large pools can make to prevent

21:23.820 --> 21:28.100
this is they can just increase the number of confirmation blocks, which takes longer

21:28.100 --> 21:31.480
and then makes it much harder to have a majority control.

21:31.480 --> 21:35.640
It still feels like we're in the early days of cryptocurrencies to me.

21:35.640 --> 21:40.300
Some people would argue and say that it's all about to tank and by the end of this year

21:40.300 --> 21:44.940
or maybe next year, it'll all be worth nothing and it'll just be proved to be a pyramid scheme.

21:44.940 --> 21:48.520
But this feels like teething issues to me.

21:48.520 --> 21:54.600
We need to work out this stuff before we can get to a point where it's actually used by

21:54.600 --> 21:55.600
normal people.

21:55.600 --> 22:00.540
And I know that people were kind of starting to get that way when Bitcoin got up to around

22:00.540 --> 22:02.780
twenty thousand dollars.

22:02.780 --> 22:08.500
But since that's kind of gone back down to various lows that I don't even want to think

22:08.500 --> 22:10.180
about how low it is.

22:10.180 --> 22:15.460
But since then, people have lost it, you know, normal people have lost interest.

22:15.460 --> 22:21.380
But I think we need to go through these issues and work out ways to get around them if we're

22:21.380 --> 22:26.860
ever going to get to a situation where cryptocurrencies are taken seriously and just part of everyday

22:26.860 --> 22:28.500
life like using a visa card.

22:28.500 --> 22:29.500
Right.

22:29.500 --> 22:30.500
It's growing pains.

22:30.500 --> 22:35.140
Not that you asked, but it's almost thirty five hundred dollars right now as we record.

22:35.140 --> 22:41.180
I was looking I was trying to try to get some perspective on what does it take for a new

22:41.180 --> 22:42.700
currency to be adopted?

22:42.700 --> 22:44.740
Like what is just the the average time?

22:44.740 --> 22:48.040
And I I didn't go back to gold and I didn't go very far.

22:48.040 --> 22:52.180
But looking at countries that have made currency switches right now, it typically takes some

22:52.180 --> 22:56.500
of these smaller countries about six months on average to like transition to the new currency.

22:56.500 --> 23:00.700
Then the public takes about two years for the old currency to be worked out.

23:00.700 --> 23:03.640
But cryptocurrency is a totally different piece.

23:03.640 --> 23:07.980
Like these other these other currencies are backed by a government, by a central authority,

23:07.980 --> 23:09.780
which makes implementation straightforward.

23:09.780 --> 23:12.720
They tell you to use this currency and you have to use that currency to pay your taxes

23:12.720 --> 23:14.620
like you've got no choice.

23:14.620 --> 23:17.820
But with cryptocurrency, it's like Linux distros.

23:17.820 --> 23:19.540
There's tons to pick from.

23:19.540 --> 23:22.540
They're open source, they're organic, they go in different directions.

23:22.540 --> 23:23.540
Sometimes they make mistakes.

23:23.540 --> 23:28.260
It's a totally different beast than a government controlled currency.

23:28.260 --> 23:33.540
And it may never work out, or it may take a generation to work out the kinks for the

23:33.540 --> 23:34.540
people's currency.

23:34.540 --> 23:39.720
Well, I remember reading quite a lot about this a year or so ago and coming to the conclusion

23:39.720 --> 23:44.740
that we wouldn't have one cryptocurrency to rule them all, we'd end up with thousands

23:44.740 --> 23:51.460
all kind of interacting with each other and having micropayments here and there.

23:51.460 --> 23:56.080
So it just feels too early to know exactly where we're going to be, whether or not we're

23:56.080 --> 24:00.540
going to end up with Bitcoin or Ethereum or whatever becoming just the one that's used

24:00.540 --> 24:07.420
or whether everyone will have their own currency and they'll just be traded, I suppose, like

24:07.420 --> 24:09.260
the fiat currencies that we have now.

24:09.260 --> 24:11.720
I think that's got to be what happens.

24:11.720 --> 24:17.780
If cryptocurrency ever got legitimate, where it was maybe even a little sexy for a company

24:17.780 --> 24:21.060
to use it, you can imagine the Amazon coin.

24:21.060 --> 24:28.380
And your Xbox tokens and your Google Play Store currency could all be cryptocurrency

24:28.380 --> 24:30.380
that the user isn't even aware of.

24:30.380 --> 24:34.780
It's all white labeled and done with GUIs for the end user.

24:34.780 --> 24:38.940
But on the back end, it's their own cryptocurrency that they could even play the markets with

24:38.940 --> 24:41.780
and all kinds of really horrifying stuff.

24:41.780 --> 24:43.820
But it just seems like naturally, that's the way it's going to go.

24:43.820 --> 24:47.940
If anybody can make their own cryptocurrency, you just have to be big enough for adoption

24:47.940 --> 24:49.720
for it to be successful.

24:49.720 --> 24:51.980
And if they get legitimate, why wouldn't that happen?

24:51.980 --> 24:53.700
It's going to become the internet funny money.

24:53.700 --> 24:58.340
And in a way, it'll be good because in theory, consumers could trade between platforms.

24:58.340 --> 25:02.380
If you have an Amazon coin and you no longer want to use Amazon Prime and you want to go

25:02.380 --> 25:08.060
subscribe to Google YouTube Music, in theory, you would be able to transfer your crypto

25:08.060 --> 25:12.980
Amazon coin over using an exchange into your Google account, perhaps.

25:12.980 --> 25:14.820
Maybe that'd be the upside for consumers.

25:14.820 --> 25:20.980
But it's going to be a weird, weird sort of dystopian sci-fi future when that happens.

25:20.980 --> 25:22.700
Everybody will have their own internet tokens.

25:22.700 --> 25:23.700
Yeah.

25:23.700 --> 25:27.980
Or maybe it'll just crash and just keep using the dollar and the pound and the euro and

25:27.980 --> 25:28.980
stuff.

25:28.980 --> 25:29.980
Buy gold, Joe.

25:29.980 --> 25:30.980
Yeah.

25:30.980 --> 25:31.980
Could you imagine?

25:31.980 --> 25:37.500
That'd be such a great native ad, like if we had gold ads on this show.

25:37.500 --> 25:43.240
Well, either way, it turns out, we'll cover it here on the show, if it takes over the

25:43.240 --> 25:46.680
world or it fizzles out, whenever it matters, we'll cover it on Linux Action News.

25:46.680 --> 25:50.580
Go to linuxactionnews.com slash subscribe for all the ways to get new episodes.

25:50.580 --> 25:54.260
And go to linuxactionnews.com slash contact for ways to get in touch with us.

25:54.260 --> 25:56.980
And just a quick note, the live shows at Linux Academy are back.

25:56.980 --> 26:01.940
Anthony, the CEO, and I will be hosting three live shows over the next three weeks.

26:01.940 --> 26:07.260
Get all the details at linuxacademy.com slash live, with new stuff being launched each live

26:07.260 --> 26:08.260
stream.

26:08.260 --> 26:11.860
We'll be back next Monday with our weekly take on the latest Linux and open source news.

26:11.860 --> 26:13.420
I'm at Chris LAS.

26:13.420 --> 26:15.020
I'm at Joe Ressington.

26:15.020 --> 26:16.020
Thank you for joining us.

26:16.020 --> 26:17.620
And we will see you next week.

26:17.620 --> 26:44.260
We'll see you later.

