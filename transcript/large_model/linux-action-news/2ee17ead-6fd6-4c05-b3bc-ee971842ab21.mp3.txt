Hello and welcome to Linux Action News, episode 193, recorded on June 13th, 2021.
I'm Chris.
And I'm Wes.
Hello, Wes.
Let's do the news.
We start this week with the major usability improvements landing in Plasma 5.22, including
considerable investment in Wayland support, with standout features such as Kwin now supporting
variable refresh rate and FreeSync screens.
This is a nice improvement if you have multiple monitors with different refresh rates, as
each screen can now be configured individually.
Finally, and both Wayland and X11 users get this one, if you have more than one screen,
new windows now open on the screen where your cursor is located.
Another nice feature to see is adaptive panel transparency, which didn't work on my Plasma
5.22 install, but the idea is that it adaptively changes when you maximize or reduce windows
and make your background look all nice and pretty.
I just think that's a nice quality of life thing in there.
There's some Krunner improvements too that show how much text is being displayed, and
that's fantastic.
And of course, because this is Plasma, there's all these little things you can tweak now.
The system clock looks a little bit sharper in the way it displays your events and dates
and the way you can move between months and years is a lot nicer.
Those kinds of things, it's good to see that in there, but the big feature that really
stood out to me is what they call the speed dial now in system settings.
It's the first page that opens when you bring up the Plasma system settings, and it's kind
of like the most common things you're going to want to tweak in Plasma.
Not everything that I tweak, but like 80%, and it's the first screen that comes up.
So what they've done is right at the top, they've put, do you want a light theme or
a dark theme?
Okay.
The next option down, what do you want your animation speed throughout Plasma to be?
And then the next section down there, which is super handy for new Plasma users, would
you like a double click or a single click to launch files?
Because that can throw people off.
And then they also have a slider in here that is a little unusual, but I kind of like it
Wes.
It's called the send user feedback and you slide it.
At first it's disabled by default, it's disabled, right?
But then you slide it over to basic system information.
Okay.
Then you slide it over further, basic system information and usage statistics.
You're getting a little more personal.
There's two more notches to go though, Wes.
So we take it up another notch and it says detailed system information and basic usage
statistics.
And then the last notch, when I set it to blast, detailed system information and usage
statistics.
I don't know exactly.
I'd love to know, like, what does that mean in terms of network sending and how often
it's checking?
How much data and what are the keys in there?
When does it collect it?
When does it transmit it?
Because I'm kind of tempted to support the Plasma project.
I don't mind sending them some detailed information about my old Linux box here that I'm running
this on and letting them know.
And so that kind of stuff is in here in this new quick settings or what they call speed
dial.
But then when you go into system settings, it's labeled as quick settings, but then they
have more launching off icons you can click to get to things like the general behavior,
the window behavior, the compositor stuff.
It really makes getting in here and changing some of the basic stuff nice and quick.
But the other thing I noticed, and I actually had to change my theme back, I had to like
change it and change it back.
And then I noticed that the breeze theme is looking a lot tighter.
And I don't know how long, how many updates I've gone without maybe doing this toggle
of my themes, but the system icons look so much better down in the tray.
The launch bar looks a lot cleaner.
The windows look a lot cleaner.
And the light theme is extremely pleasant now.
And I'm actually thinking about switching back to light theme in Plasma.
Your dark theme, Chris.
I know.
This makes no sense.
I know.
Better alert the Twitterverse.
The brand is changing.
We're going light theme.
It's actually just really, it's just really elegant.
They've just nailed this release and they're already working on the next one.
And so is the GNOME project with version 40.2 being released this week.
While there wasn't an official 40.1 release, 40.2 comes with lots of fixes and improvements
for your favorite applications, as well as general performance enhancements across the
board.
That's nice to see.
Improved touch interactions have been added to the app grid, as well as a solution for
those of us who use fingerprint readers that were having some authentication failures.
But what I thought was nice to see were the improvements in Mudder.
There was a performance improvement for Nvidia users, improvements for those of you who use
fractional scaling and want to do screencasting, even some gamma correction issues were solved
in there.
Overall, GNOME software seemed to receive a lot of attention too during this cycle.
It now comes with better support for flat packs and improved air reporting when on low
disk space.
So I guess, yeah, that actually is, those are nice things to see in there.
It's nice to know why that install didn't work at the very least.
Yeah it is.
And GNOME software also saw improved automatic downloads for pending updates and improvements
to search query speeds.
I actually was wondering if GNOME software was going to get the old retirement, but these
improvements along with featured app carousel improvements and other things that have landed
and just general bug fixes when you go through the change log for GNOME software make me
think it's actually more alive than ever and it's going to be sticking around.
There have also been some nice performance improvements across the stack, including some
important fixes for say a nasty 100% CPU usage issue in the GNOME display manager login screen,
a different high CPU use issue in Getit the text editor, and a fix for a memory leak in
GNOME calendar's time zone monitoring code.
Linode.com slash LAN.
Go there to get $100 in 60 day credit and you support the show.
No matter what skill level you're at, you're going to find that Linode makes it possible
for your ideas to come to life on the web.
Everything we've built for JB now runs on Linode.
In fact, just Friday we deployed a brand new shiny purpose built $5 a month Linode.
We're working with some friends of ours who are putting together an online virtual event
and they need a way to collaborate with the different speakers and they don't really need
something as complicated as a full syncing solution.
That's where FileRun came in and it just took minutes to get up and running on Linode.
It's a self-hosted file manager, beautiful web UI makes it really easy to pull down files
for different users and upload stuff.
It got them collaborating in minutes and it's running on Linode in the Texas data center.
Nice and centralized to everybody who's working on the project.
And of course Linode has data centers, 11 of them, all around the world.
Crazy fast connections between each data center because they are their own ISP.
They are the largest independent cloud computing provider and they've been around since 2003.
This file server idea that we had was a conversation and 10 minutes later we had the server deployed,
15 minutes after that we had the application up and going.
It took longer for the DNS to switch over than it did for us to get the entire stack
up and running.
And a lot of our Linode builds use their S3 compatible object storage on the back end
so that way it grows with our needs without us having to tinker with it every single day.
I love that about Linode.
I can have systems that are one click deployed, super easy to manage, or rigs that I build
from scratch with any distribution I like.
So try it out, see what we've been talking about.
It's just linode.com slash LAN to get that $100 in credit and support the show.
Linode.com slash LAN.
A seven-year-old privilege escalation bug that could lead to root access came to light
this week.
Kevin Backhouse, a member of the GitHub Security Lab, wrote an extensive summary on the GitHub
blog and he's the one who discovered this flaw in Pollkit.
Pollkit is a toolkit for defining and handling authorizations on your Linux box.
It's used for allowing unprivileged processes to speak to privileged processes.
And it's installed by default on most of your local Linux distributions.
The vulnerability enables an unprivileged local user to get a root shell on the system.
It's easy to exploit with just a few standard command line tools.
It seems the bug was introduced seven years ago and first shipped with Pollkit version
0.113.
However, many of the most popular Linux distributions didn't ship the vulnerable version until a
little more recently.
The nuance there is a little boring, but depending on like if you're based on Debian or something,
it took a little while for this to work its way into every distribution, but it's pretty
much there now.
Because it's been around for seven years, that's not so good.
So if you're not familiar with Pollkit, think of it as something that's essentially playing
the role of a judge on your system.
Like trying to decide if something that requires higher privileges, like say creating a new
user account for example, if it's allowed, if that creation should happen, if the access
to those privileges should be allowed.
For some requests, Pollkit will make an instant decision to allow or deny.
And then for others, you've probably seen this on your system, it'll pop up a dialogue
box so the administrator can grant authorization by entering their password.
Clearly an important system service, and that's why this bug being around for seven years
and being kind of simple to exploit, makes this a noticeable issue.
And really the vulnerability is surprisingly easy to exploit.
I mean you just need a few things you've already got like bash, the kill command, and dbus
send.
How do you go about it?
Well it's triggered by starting a dbus send command trying to talk to Pollkit.
But you kill it while Pollkit is still in the middle of processing your request.
I mean we're talking small windows of milliseconds here to trigger the bug, but if you know where
to poke and when, you can be well on your way to popping root on the box.
So why does killing that dbus send command cause this authentication bypass?
Well it comes down to just how Pollkit has been built and essentially the series of sequences
it goes through when an authentication event is triggered.
And it's really the timing of this that triggers the bug.
That's what really matters with this one because it turns out that Pollkit asks the dbus daemon
for the UID of the requesting process.
And it makes that request multiple times using different code paths.
While most of those code paths handle this error just fine, one of those code paths does
not.
So if you happen to kill the dbus send command early, it gets handled by the correct code
path and the request is rejected.
To trigger the vulnerable code path though, you have to disconnect at just the right moment.
And because there are multiple processes involved here, timing of that right moment varies from
one run to the next.
That's why it usually takes a few tries for the exploit to succeed.
But with a little scripting help, that's no problem.
This is a fun one to read up on and the summary on the GitHub blog that Kevin Backhouse did
is great.
It walks you through his thought process.
It walks you through the different distributions that are impacted.
Like if you're on Ubuntu 18.04 right now, you're not affected by this.
But if you're on 20.04, you are.
So there's some nuance to it.
But the entire journey is fascinating.
And every now and then a couple of times a year, somebody takes the time to really do
a proper write up on how they discovered a bug like this.
And this is one of those examples.
It's a great read and it's an educational read too.
And really, it's just a pretty good primer on Polkit in general.
And hey, at least we finally have a good reason for sticking with 18.04 in the studio.
Of course, the relevant distribution patches are all going out right now.
So make sure you get updated.
Another area of development that Wes and I have followed for a while now is real time
support in the Linux kernel.
In fact, when we had a conversation with the Mars helicopter operations lead from JPL,
he relayed to us that one of the most important developments in Linux for use in space applications
is real time kernel support.
So we've been kind of following real time support for a while.
It seems maybe the news in that area isn't so good.
There has been talk over 2020 about actually getting that functionality merged into the
Linux kernel, but really hasn't materialized and hasn't happened.
And now it looks like due to a lack of funding, we're at risk of some of that code never getting
patched into the Linux kernel.
The preempt RT patch set is around 200 out of tree patches that kind of have to be maintained
on the side.
And as you might imagine, with a fast moving kernel, that is not an easy task.
What we learned recently, however, is an update on the status of those mainlining efforts.
And unfortunately, that status is that although the preempt RT patch set has made some significant
strides, right now it's stalled due to a funding gap.
And that funding gap needs to be closed if mainlining is ever going to happen.
And as you know, Chris, there are more and more important applications that really would
like to see this code both maintained and mainlined.
Unfortunate to hear this, Wes, I've always thought of real time support in the context
of media production because it's something we talk about when it comes to audio latency.
But it wasn't until we talked to Tim Kenam and he helped me understand how necessary
real time is for certain industrial uses.
Yeah, really.
There are applications that just aren't suitable to deploy Linux in if you don't have these
kinds of real time guarantees.
We learned about the funding gap from a presentation by Thomas Gleixner at an ELISA, or Enabling
Linux in Safety Applications Summit last month.
Oh, yes.
Yes.
That's a group that the Linux Foundation put together back in February of 2019.
A bunch of different companies that are interested in using Linux in their day to day operations
and in their equipment.
They have a GitHub page even, where they have some code specifically around automotive and
other areas and some documentation.
I think we've just got to hope that one or multiple of these companies hear Thomas's
cry and step up to help.
Linux.ting.com.
Are you tired of fussing with mobile?
Would you like your cellular plans to be a solved problem?
Ting is mobile done better.
Break out of the boring carrier duopoly and try Ting.
Go to linux.ting.com and get $25 off.
Ting has some great plans for individuals and for families.
Their new set 12 plan includes 12 gigs of data, unlimited talk and text, all for just
$35 a month.
They have lots of different plans though, so if you need two gigs or 20 gigs, there's
a perfect Ting plan for you.
And every line comes with Ting's award winning customer service, multiple nationwide LTE
and 5G networks for you to choose from, and you never have to worry about contracts.
It's simple to switch to Ting.
Pretty much any phone will work because of their wide network support, which means you
pick the network that works best in your area and your phone's likely already compatible.
Just head to linux.ting.com to check your current phone, create an account and pick
a plan that's just right for you.
Once you put in the info for your SIM, get all that stuff figured out, Ting will send
you a SIM card, you pop in your device and you're good to go.
Or maybe it's time to get a brand new device, or maybe something simpler.
Either way, cutting your phone bill in half has never been easier with Ting's brand new
plans.
The next generation of Ting Mobile is here, and I can tell you as a long time Ting customer,
there's never been a better time to try it.
So try it and save.
Go to linux.ting.com.
That's linux.ting.com.
Hello System 0.5 has been released.
A macOS inspired free PSD desktop for those looking to leave the Mac.
Once upon a time there was the Macintosh, a friendly machine designed by geniuses like
Steve Jobs, Bill Atkinson and Andy Hertzfeld.
Over time the geniuses went away and things went downhill.
Going back to some of the original design philosophies of the early Macintosh, the Mac
was reborn with the introduction of the iMac.
With macOS 10 it went on to become the most powerful yet intuitive workstation with a
user interface so slick you wanted to lick it.
Then genius left.
What had started simple and pleasant is again turning complicated and messy.
They say it is a system being designed for mere mortals.
That was Simon Peter and they're working on an open source system that is welcoming to
switchers from the Mac who have become disenfranchised with the direction of the platform.
And from there it only got worse.
With so-called platform security that in reality secures nothing but their own revenue stream,
they are not helping you, the user.
They're locked in and locked down is getting worse and worse.
You are no longer free to own your devices and to do with them as you like.
It feels more like you are a guest on devices rented to you.
Now it is 0.5 but Wes and I decided to give Hello System a try and it's definitely clean
and minimal.
That's for sure.
But you know if you're looking for something based on FreeBSD and you want a desktop that
kind of gets out of your way, they're onto something here and it very much is reminiscent
of the early macOS design UI, very early versions of macOS.
You mean before it became more of a mobile inspired operating system?
You could say that, in fact that's sort of what guides their design decisions.
A desktop is not a mobile phone, hence let's not water down our user interfaces with design
elements made for anything else but the mouse.
And I can appreciate their perspective on this.
You know at first glance you're like okay well why do we need another desktop environment,
this is just one of many and I could theme an existing Qt environment to look like a
Mac because this is all based on Qt as well from what I could see.
And I kind of agree until I started reading into their ideas and I started kind of processing
some of the project's goals.
Let's talk about the goals of Hello System.
I never quite remember whether it was Leonardo da Vinci or Steve Jobs who said simplicity
is the ultimate sophistication.
But in any case I wholeheartedly agree.
Setting the language of the keyboard should be no more complicated than clicking on the
name of the language.
One click or even better the keyboard should just tell the computer its language, zero
clicks.
Less is more.
Every pixel on the screen should serve a purpose.
Every animation in the user interface should convey sense.
Simple yet powerful is where we want to be.
Our objective is to be both easy to use for mere mortals yet powerful under the hood for
advanced users.
Simon goes on to talk about supporting old Macs to bring life to old iMacs that have
been abandoned by Apple as they age out or as they transition to their own platform.
But I think what resonated with me was the idea of creating a welcoming user-friendly
free BSD desktop environment.
Not that there's a few out there of course, but this seems to actually have some real
momentum behind it.
They have a very well-defined project strategy, a well-defined goal, and very clear ideas
of what goes in this and what doesn't.
I think it's safe to say it's still early days, but yeah, I was kind of impressed with
how well everything hung together.
You can tell that there is a grand unified dream here somewhere, even if all the pieces
aren't quite there yet.
You know, if you're comfortable with free BSD or you wanted to experiment with free
BSD, it is one version behind at this point.
But if you like minimal Linux desktop environments like Xfce or LXQt, I think this would be
appealing to you.
And I like their long-term direction with this thing, so I actually thought I'd come
on here and be really snarky.
I thought that would be my take of this thing.
Because, you know, another thing that looks like the Mac.
But I like the idea of specifically creating a landing place for these Mac users who are
getting frustrated with Apple.
It's not everybody, you know, and it may not be millions of people.
But to have some kind of landing pad that recreates a familiar Unix environment and
has a familiar design ethos, it kind of makes sense.
These disgruntled, I'm trying to think of another word for it, Wes, but you know, these
disgruntled Mac users can go buy a ThinkPad and they can throw a hello system on there
and be perfectly happy.
Are the majority of them going to do it?
No.
But it doesn't seem like that much more of a stretch than trying to design an environment
that's welcoming to Windows users.
And perhaps it might be a catalyst for getting some newer hardware support in that free BSD
kernel.
I don't think that would hurt.
When I first tried this out, Wes, I tried it in my VM and the results were mixed.
So then I went and moved it over to my ThinkPad.
And this totally makes sense, but it is a little confusing on the ThinkPad.
They've designed it to use the command key like on the Mac.
So to close a window, it's command W or command Q.
I see what they're doing.
I mean, it totally makes sense, but it was a little trippy on the ThinkPad to try to
figure that out.
They're just really getting started here.
They're tweaking the look, they're tweaking the theme, they're fixing bugs.
They're getting things like when you close the notebook lid, it actually goes to sleep
by default.
Like that's just been turned on now and they're kind of nailing down those kinds of basic
fundamentals and digging into this project just a little bit to see who's involved.
I noticed app image developer Pro Bono is involved with this project.
And I think that gives it a good shot, like somebody who's got some real credentials and
has shipped code that people are actually using.
But on top of that, it makes me think it could be a great way to distribute applications
that are self-contained on the system a lot like the Mac does.
That could be a clever use of app image in a system like this that's integrated pretty
core to the overall method to get software on and off the box.
I actually don't know if that's the case because the Wi-Fi just totally did not work on my
ThinkPad, so I didn't add or remove any software during my test.
But top-to-bottom integration with app image since Pro Bono is involved just seems like
an obvious direction this thing could go.
With all these small independent desktop efforts, I think it's kind of important to think about
really what are the goals here?
And yeah, it'd be pretty neat if a hello system really took off and that's what we were doing
the show on, say, or using on our laptops.
It seems kind of like a long shot though.
It does, at least based on all the other projects that have tried the very same.
But regardless of that, it's interesting just as an academic, a philosophical, or even an
artistic exercise to express possible visions of what the desktop could or may be.
And you never know, there might be some hello system features that make it into a future
Linux desktop or even the Mac.
Yeah, it doesn't necessarily have to have millions and millions of users to move the
needle and kind of be a vote for a way that computing should work.
It kind of acts as a counterbalance to mobilize every UI element possible.
So it's kind of great just in that regard.
There's always fun developments.
It's one of the things I love about free software and open source operating systems is you can
go back in time if you want and go check out the classic days of macOS as if you're going
to build it again today.
And we love following that kind of stuff and all of the other things that matter in the
world of Linux and open source.
So check out linuxactionnews.com slash subscribe for all the ways to get new episodes of this
here show.
And linuxactionnews.com slash contact for ways to keep in touch.
Jupiter Garage, the bearded tux joggers have become an audience favorite.
Go check them out at JupiterGarage.com.
We'll be back next Monday with our weekly take on the latest Linux and open source news.
Thanks for joining us and we will see you next week.
