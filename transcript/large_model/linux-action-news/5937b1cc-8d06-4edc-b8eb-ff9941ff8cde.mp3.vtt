WEBVTT

00:00.000 --> 00:16.200
Hello, and welcome to Linux Action News, our weekly take on Linux and the open source world.

00:16.200 --> 00:19.920
This is episode 44, recorded on March 11th, 2018.

00:19.920 --> 00:20.920
I'm Chris.

00:20.920 --> 00:21.920
I'm Noah.

00:21.920 --> 00:22.920
Hello Noah, you're not Joe.

00:22.920 --> 00:23.920
I'm not.

00:23.920 --> 00:24.920
Thanks for having me though.

00:24.920 --> 00:25.920
You bet.

00:25.920 --> 00:26.920
Yeah, Joe is extremely sick this week.

00:26.920 --> 00:31.000
He regrets not being here, but it did kind of work out because both you and I are on

00:31.000 --> 00:35.240
location in California at Scale 16x.

00:35.240 --> 00:37.040
And we'll tell you a little bit about our impressions.

00:37.040 --> 00:38.880
But first, let's get into the news.

00:38.880 --> 00:41.440
Our first story this week is the OpenWatch.

00:41.440 --> 00:45.440
Yeah, this is a project from Blocks, the project behind OpenWatch.

00:45.440 --> 00:48.720
And I think it's a really interesting project, really caught my attention.

00:48.720 --> 00:54.280
The idea that you can actually start to utilize the unused space on your wrist where the band

00:54.280 --> 00:55.280
usually sits.

00:55.280 --> 00:56.280
Yeah.

00:56.280 --> 00:59.320
So this is an OpenWatch and it's going to be based on Android Oreo.

00:59.320 --> 01:04.560
The goal of this initiative is to release a full Linux kernel and an Android Oreo board

01:04.560 --> 01:07.640
support package that folks can use for development.

01:07.640 --> 01:10.240
It'll be the same chipset, but it won't be a completed watch.

01:10.240 --> 01:14.600
The current code base is based on Oreo and will run on a large number of smartwatches

01:14.600 --> 01:17.880
that are already available, as well as one Blocks will be selling.

01:17.880 --> 01:21.520
But they're funding initial development and collaborating with a handful of ROM makers

01:21.520 --> 01:27.560
to create an open smartwatch operating system, ideally going towards eventually a modular

01:27.560 --> 01:33.860
smartwatch where you could maybe put an additional battery in the band or a sensor of some kind.

01:33.860 --> 01:37.880
And you snap those in and the OpenWatch project would just work with those pieces.

01:37.880 --> 01:41.600
So I guess my first question is, because it seems to me that the kind of people that like

01:41.600 --> 01:45.960
smartwatches are the kind of people that want technology to just kind of be transient, not

01:45.960 --> 01:49.080
the kind of people that want to build things, so to speak.

01:49.080 --> 01:50.080
Maybe.

01:50.080 --> 01:55.040
I am almost more receptive to the idea of a modular smartwatch than I am a modular smartphone.

01:55.040 --> 02:00.240
Because if you do it at the bands, that is something that people already swap out for

02:00.240 --> 02:05.680
like fashion reasons or like I replaced a band recently just because it got old.

02:05.680 --> 02:10.920
And if I could get a band that maybe had additional battery life or had a blood sugar sensor in

02:10.920 --> 02:13.280
it, I could be down for that.

02:13.280 --> 02:14.760
Or maybe an LTE radio.

02:14.760 --> 02:17.920
Maybe the watch doesn't ship with an LTE radio, but you could put one in a band.

02:17.920 --> 02:22.040
What happens when you're, if you start to get more modules, like you want more modules,

02:22.040 --> 02:24.960
like do you have to grow your wrist or like does it eventually fall off?

02:24.960 --> 02:26.960
You just get more watches.

02:26.960 --> 02:30.000
Yeah, it's really the sprawl of internet connected devices.

02:30.000 --> 02:31.080
Maybe Fedora can tame that.

02:31.080 --> 02:33.440
Yeah, they seem to have a solution.

02:33.440 --> 02:36.320
Fedora IoT edition is a go.

02:36.320 --> 02:41.740
The Fedora Council has approved a proposal by Peter Robinson to create a specific tailored

02:41.740 --> 02:44.200
version of Fedora for Internet of Things devices.

02:44.200 --> 02:45.600
It's very early days.

02:45.600 --> 02:47.400
They're getting a working group in place.

02:47.400 --> 02:50.240
They'll set up an initial monthly release process.

02:50.240 --> 02:54.840
And as you would expect, it's going to be heavily built around OS tree and Fedora atomic

02:54.840 --> 02:55.840
host images.

02:55.840 --> 02:57.640
That'll be the key foundation of this thing.

02:57.640 --> 03:01.720
And then working with hardware partners and software developers to make a version of Fedora

03:01.720 --> 03:04.080
that's designed for IoT devices.

03:04.080 --> 03:08.720
Do you see a lot of other companies participating in this or is this primarily something that

03:08.720 --> 03:11.680
exists in and around the Fedora project themselves?

03:11.680 --> 03:15.340
I mean, maybe they see somebody asking for this that I haven't seen, but Canonical's

03:15.340 --> 03:19.680
obviously been working on a version for internet connected devices for a long time.

03:19.680 --> 03:25.240
And what seems to have worked in the market so far, despite my preference, is people just

03:25.240 --> 03:29.280
slamming together some custom stack of Linux and throwing some 2.4 or 2.6 kernel in there

03:29.280 --> 03:31.240
and just rolling their own solution.

03:31.240 --> 03:37.080
So there is like a space for Fedora or Ubuntu to solve this, but the manufacturers don't

03:37.080 --> 03:39.360
really seem to be super interested in it.

03:39.360 --> 03:43.220
Dell's done a few things with the Ubuntu solution, but I'm not seeing like massive adoption.

03:43.220 --> 03:44.220
It's out there.

03:44.220 --> 03:45.640
They announced a few more devices recently.

03:45.640 --> 03:50.360
I guess my first thought is, is Fedora really the best project for that, even if we're talking

03:50.360 --> 03:51.920
about it from a Red Hat standpoint?

03:51.920 --> 03:55.320
Like wouldn't CentOS or one of the more stripped down versions that are specifically designed

03:55.320 --> 03:56.800
for enterprise and uptime?

03:56.800 --> 04:01.680
Yeah, although I think Project Atomic, when you're doing OS tree snapshots and you can

04:01.680 --> 04:06.500
do complete rollbacks, Atomic rollbacks kind of reduces the risk of upgrading Fedora.

04:06.500 --> 04:10.760
And if I was going to have my way, these IoT devices would almost be like on a monthly

04:10.760 --> 04:15.000
patch cycle like Android supported devices are, you know, where Google pushes out security

04:15.000 --> 04:17.920
updates to Nexus and Pixel devices every month.

04:17.920 --> 04:20.980
Probably most IoT devices should be like that because it's a lot of the same technology

04:20.980 --> 04:23.000
stack in those IoT devices.

04:23.000 --> 04:25.560
Speaking of Google, did you see that AMP's got a lot of attention recently?

04:25.560 --> 04:32.280
Yeah, we've covered this sort of growing angst with AMP over the last few months on LAN a

04:32.280 --> 04:33.860
couple of times now.

04:33.860 --> 04:38.600
And there has been this widely circulated open letter that we talked about asking Google

04:38.600 --> 04:40.720
to make some improvements to AMP.

04:40.720 --> 04:46.520
And of course, my primary criticism with AMP is that Google is re-hosting publishers content

04:46.520 --> 04:51.080
and the URLs show Google address, not the original domain.

04:51.080 --> 04:55.200
And the only way to fix that is if browser manufacturers adopt a new standard that Google's

04:55.200 --> 04:56.280
just been proposing.

04:56.280 --> 05:00.680
This week, there was a major shift in Google's approach to how they display AMP content.

05:00.680 --> 05:05.360
So the other criticism with AMP content is that it gets front and center, nice preview

05:05.360 --> 05:06.960
placement in Google search.

05:06.960 --> 05:07.960
You've seen this.

05:07.960 --> 05:11.400
If you search for something, if there's an AMP page, there's a carousel where the results

05:11.400 --> 05:15.120
show up with a thumbnail and you tap that sucker and it loads right away.

05:15.120 --> 05:19.120
And so Google's been giving preferential treatment to things that use AMP.

05:19.120 --> 05:20.920
And that's one of the number one criticisms.

05:20.920 --> 05:26.360
They're using Google search as a lever to get publishers to re-host content on Google,

05:26.360 --> 05:27.360
basically.

05:27.360 --> 05:28.360
So what changed this week?

05:28.360 --> 05:33.520
There was a blog post this week by the AMP team that's talking about accepting AMP like

05:33.520 --> 05:36.520
other systems into that search carousel.

05:36.520 --> 05:37.720
So it'll be AMP for sure.

05:37.720 --> 05:40.000
If you use AMP, you'll get in the search carousel.

05:40.000 --> 05:47.560
But they're willing to entertain the idea now of AMP-like feature sets that are like

05:47.560 --> 05:52.360
the ones that Facebook and Apple do that would also get preferential treatment but wouldn't

05:52.360 --> 05:53.360
be using AMP.

05:53.360 --> 05:56.840
As long as you meet these certain requirements, which they have not fully enumerated yet,

05:56.840 --> 06:01.040
and are AMP-like in your load time and how you display content to the users, we will

06:01.040 --> 06:04.500
start featuring you in the carousel at some point in the future now.

06:04.500 --> 06:05.500
That's the change.

06:05.500 --> 06:07.800
Has that started to satisfy some of your concerns?

06:07.800 --> 06:09.120
No, not at all.

06:09.120 --> 06:11.040
Because first of all, this is years away.

06:11.040 --> 06:16.120
Because it's got to go to the W3C body, and it's got to go to a different consortium that

06:16.120 --> 06:18.220
deals with just offline content.

06:18.220 --> 06:20.940
So there's two different standards bodies it's got to go through.

06:20.940 --> 06:24.160
Then once it gets to those two different standards bodies, it's got to get all of the browser

06:24.160 --> 06:29.240
manufacturers to implement support for it at the browser level, including Apple Safari,

06:29.240 --> 06:31.720
Mozilla Firefox, Edge.

06:31.720 --> 06:32.800
It's a huge uphill battle.

06:32.800 --> 06:35.320
It's a multi-year up-year battle, and Google knows it.

06:35.320 --> 06:36.320
They know it.

06:36.320 --> 06:39.180
And this is the insidious part, in my personal opinion.

06:39.180 --> 06:41.640
They're going to double down on AMP development in the meantime.

06:41.640 --> 06:45.880
So while the standards bodies drag their feet, and then the browser manufacturers drag their

06:45.880 --> 06:50.240
feet, Google is doubling down on AMP with this as an excuse now, saying, well, look,

06:50.240 --> 06:52.400
we're going to start accepting other content.

06:52.400 --> 06:53.800
But in the meantime, we've just updated AMP.

06:53.800 --> 06:55.520
In the meantime, we've just updated AMP.

06:55.520 --> 06:56.680
And that's in this Verge article.

06:56.680 --> 06:58.440
They do an interview with the creator of AMP.

06:58.440 --> 07:00.040
He's like, yeah, we're going to keep going.

07:00.040 --> 07:02.800
AMP will just be one of the standards, and it's going to be great.

07:02.800 --> 07:06.200
And it really is just sort of them saying, well, at some point, we're going to tell you

07:06.200 --> 07:08.760
how you can play in our sandbox, but we just haven't figured it out yet.

07:08.760 --> 07:12.480
So no, it doesn't make me feel better, but you seem to be an AMP fan, all things considered.

07:12.480 --> 07:13.480
I am.

07:13.480 --> 07:18.400
I guess, for me, my understanding is that on a 3G connection, a page will take up to

07:18.400 --> 07:21.440
10 seconds to load, and that is just unacceptable.

07:21.440 --> 07:26.200
And so as we move towards mobile-centered devices and internet-connected devices where

07:26.200 --> 07:30.080
everything is online and people use that as a way to find your business, to call the phone

07:30.080 --> 07:32.920
number, whatever, I think that's going to become more important.

07:32.920 --> 07:36.600
Don't you worry about Google rolling their own standard over the web?

07:36.600 --> 07:38.040
It's not even addressing the core issue.

07:38.040 --> 07:40.000
The core issue is people need to build better websites.

07:40.000 --> 07:44.720
Yes, but with 25 million, they have 25 million domains that are already there, so it seems

07:44.720 --> 07:48.800
like it's a project that exists, it's something that you have to participate in.

07:48.800 --> 07:53.080
It's kind of like saying, well, I don't want to optimize my search results for Google because

07:53.080 --> 07:54.960
I don't particularly care for Google.

07:54.960 --> 07:56.160
That's the engine that people search on.

07:56.160 --> 07:57.280
You kind of have to be prevalent there.

07:57.280 --> 07:59.200
I feel like AMP is the next iteration of that.

07:59.200 --> 08:03.360
Yeah, I suppose it's also why you have to be on YouTube and you have to be on iTunes

08:03.360 --> 08:04.660
if you're a podcast.

08:04.660 --> 08:07.320
Even if you're not a user of iTunes, you still have to publish there.

08:07.320 --> 08:11.360
But it feels like a slow takeover of the web.

08:11.360 --> 08:15.520
They tried social networking, they tried Buzz, they tried Google+, they couldn't get any

08:15.520 --> 08:20.320
traction there, so now they're just turning Google Search into your social network feed.

08:20.320 --> 08:23.840
The next thing that happens with AMP, the next big feature they're rolling out, is something

08:23.840 --> 08:29.760
that's comparable to Instagram stories, where you'll be able to mouse over the AMP carousel

08:29.760 --> 08:36.240
and it will animate the pictures and show you live, rich media.

08:36.240 --> 08:40.440
You can flip through multiple pages just there in the carousel.

08:40.440 --> 08:42.560
You're going to have your search results going to be a series of this, because now you've

08:42.560 --> 08:47.160
got knowledge boxes on the side when you search for an actor with all of Google's information

08:47.160 --> 08:49.440
about them and you've got search cards that come up.

08:49.440 --> 08:53.560
Now you're going to have AMP stories that give you a little animated story right there

08:53.560 --> 08:54.560
in the Google search results.

08:54.560 --> 09:00.640
They're turning search into a social media feed over time, and they're using the levers

09:00.640 --> 09:03.360
of Chrome and AMP to do it.

09:03.360 --> 09:07.600
It feels like, well, we couldn't be Twitter, we couldn't be Facebook, but we've got search,

09:07.600 --> 09:11.760
and we've got Chrome now, and we've got AMP now, and we're just going to use all of these

09:11.760 --> 09:15.280
to funnel it all back to Google Search, the one thing that we get a lot of traction with.

09:15.280 --> 09:16.280
Yeah.

09:16.280 --> 09:19.640
I think that's where you're right, and I think that's where I agree that there is some concern

09:19.640 --> 09:20.640
there.

09:20.640 --> 09:24.640
I mean, you have a hundred different technology providers that are participating in it, so

09:24.640 --> 09:26.200
I also feel like there is...

09:26.200 --> 09:27.200
And it's up on GitHub.

09:27.200 --> 09:29.680
I mean, it's not like it's going to be completely a closed standard.

09:29.680 --> 09:30.680
So I see what you're saying.

09:30.680 --> 09:34.200
The fact that they're opening it up to other AMP-like competitors does leave the door open

09:34.200 --> 09:37.720
for the possibility of maybe an open source alternative or an open source competitor to

09:37.720 --> 09:41.760
come in down the line.

09:41.760 --> 09:43.560
Last.ting.com.

09:43.560 --> 09:48.160
Go to last.ting.com to support the show and get $25 in Ting credit if you bring a device

09:48.160 --> 09:51.400
and $25 off a device if you want a new one.

09:51.400 --> 09:56.840
I brought my Ting devices with me on this trip to scale, and I did Coda Radio, I've

09:56.840 --> 10:02.520
done Linux Unplugged, and now I'm going to publish Linux Action News all on my Ting connection.

10:02.520 --> 10:07.880
And what I love about Ting when I'm traveling is I have my GSM SIM and my CDMA SIM and my

10:07.880 --> 10:12.520
Nexus 6P, which can use both of them, plus I've got a Netgear MiFi with me that does

10:12.520 --> 10:16.160
CDMA, so whatever is stronger in my area, I just switch over to that.

10:16.160 --> 10:18.840
I've got three devices, my bill's usually around $40.

10:18.840 --> 10:22.200
Now when I go on a trip, my bill might be a little bit more that month.

10:22.200 --> 10:23.780
It's only that month I pay.

10:23.780 --> 10:27.720
The rest of the month my bill's around $30, $40 for three phones.

10:27.720 --> 10:33.240
The average Ting line is $23 per device, because it's $6 for just the line, and then your

10:33.240 --> 10:38.080
minutes, your messages, and your megabytes, however much you use, that's what you pay.

10:38.080 --> 10:42.280
Last.ting.com.

10:42.280 --> 10:46.120
Speaking of open source, did you see what GitHub is doing for their licensing scheme?

10:46.120 --> 10:50.840
This is an internal project that they're now making public, and at first I was kind of

10:50.840 --> 10:54.400
skeptical pants when I saw this, but think about this when you've got a lot of people

10:54.400 --> 10:59.460
contributing to a large project on GitHub, you've got mixed licenses, and more often

10:59.460 --> 11:03.960
than not, you're linking to other projects that may be using a different license.

11:03.960 --> 11:09.220
I mean, with open source, one of the beauties is you could have maybe the 80% written by

11:09.220 --> 11:12.240
somebody else and the 20% is the only stuff you had to write.

11:12.240 --> 11:15.920
That's the beauty of standing on the shoulders of giants in open source.

11:15.920 --> 11:21.800
But what do you do when you have all these licenses that are MIT, Apache, BSD, GPL2,

11:21.800 --> 11:24.400
GPL3, and hundreds of other licenses?

11:24.400 --> 11:28.880
Well, Git had taken some heat in the years past about not properly enforcing this, and

11:28.880 --> 11:32.640
they developed this tool internally that would sort of go through a project and look at everything

11:32.640 --> 11:37.420
it links to and watch every commit and figure out if there's any licensing compatibilities.

11:37.420 --> 11:41.600
And it's called Licensed, and it works on any Git repository, and it's public now.

11:41.600 --> 11:45.600
And by finding, caching, and checking license metadata for dependencies, it can also see

11:45.600 --> 11:49.520
if the projects you're depending on are maybe in some sort of license violation.

11:49.520 --> 11:53.940
This flexibility allows Licensed to work equally well for repositories holding thousands of

11:53.940 --> 11:57.160
projects as it would for a repository just containing a single project.

11:57.160 --> 12:00.840
The program discovers what dependencies exist for each of your applications.

12:00.840 --> 12:05.840
For each dependent library or routine found, Licensed finds its dependency source location

12:05.840 --> 12:10.160
in the local environment and extracts its basic metadata like its name, its version,

12:10.160 --> 12:12.400
its homepage, and the summary.

12:12.400 --> 12:16.220
Once Licensed ensures that dependencies are met with all the other open source license

12:16.220 --> 12:22.260
requirements, it then does a monitor of future Git commits, like a continuous integration

12:22.260 --> 12:26.720
job to make sure that future commits by anyone are also license compliant.

12:26.720 --> 12:32.740
So with 77% of all of the programs on GitHub having no license, I think this is a really

12:32.740 --> 12:39.080
useful way for these projects to start to gather a cumulative ability to track all of

12:39.080 --> 12:42.800
those licensing and make sure that there are licenses in place because one of the things

12:42.800 --> 12:43.800
Where do you start otherwise?

12:43.800 --> 12:44.800
Right.

12:44.800 --> 12:49.320
And one of the things that this article goes on to say is that when you have a program

12:49.320 --> 12:53.140
that comes out, they want to be able to know that they can take that program and use it

12:53.140 --> 12:55.400
and it will fit inside of this other project.

12:55.400 --> 12:59.000
And this solves that problem because up until now, there hasn't been a way to track that.

12:59.000 --> 13:01.440
And now the story that gave me the most pause this week.

13:01.440 --> 13:02.440
I think I'm good.

13:02.440 --> 13:03.440
I think I'm good.

13:03.440 --> 13:05.320
But I will admit it took me a second.

13:05.320 --> 13:11.480
Debian and Kali Linux are now available on the Windows subsystem for Linux.

13:11.480 --> 13:16.200
Kali, yeah, the distribution that's used with security testers and researchers was made

13:16.200 --> 13:19.480
available yesterday on the Windows Store for the Windows subsystem.

13:19.480 --> 13:26.680
Kali is now joining Ubuntu, SUSE, OpenSUSE, and Debian on the store for the Windows subsystem

13:26.680 --> 13:27.680
for Linux.

13:27.680 --> 13:31.320
When I first heard about this, one of the things that I thought was this is really great

13:31.320 --> 13:34.200
for if you're a Windows user and you need to do some penetration testing because it

13:34.200 --> 13:37.880
eliminates the necessity for a VM.

13:37.880 --> 13:41.120
But then I started to come up with some potential problems.

13:41.120 --> 13:46.200
So for example, does this support the promiscuous mode inside of the network card to allow it

13:46.200 --> 13:49.520
to actually capture that card and be able to do all of the things that you would need

13:49.520 --> 13:50.520
to do?

13:50.520 --> 13:53.440
You can do that inside of a VM, but can you do that on a subsystem?

13:53.440 --> 13:54.440
I had the same question.

13:54.440 --> 13:59.840
The other trick I think that they're pulling to make Microsoft comfortable is I don't believe

13:59.840 --> 14:04.640
the real penetration testing tools actually ship with when you get the subsystem for Linux.

14:04.640 --> 14:08.840
You have to then run like a subsequent script to then pull them all down and install them.

14:08.840 --> 14:10.120
That seems very pointless.

14:10.120 --> 14:13.680
If you don't have the whole point of Kali Linux is not a desktop driver.

14:13.680 --> 14:17.720
So Kali Linux is literally a tool set for people that are doing penetration testing.

14:17.720 --> 14:20.400
If you're not going to give them the tools to do that, what's the purpose?

14:20.400 --> 14:23.520
There's obviously going to be some that would work, but the thing that I think is noticeable

14:23.520 --> 14:28.880
here is there's a lot of options now and one of the things you can do on Windows 10 that

14:28.880 --> 14:35.320
you cannot do on regular Linux, at least without some efforts and some cheroots, is you can

14:35.320 --> 14:40.400
now open up a window and have Debian in one window, Ubuntu in one window, Fedora in another

14:40.400 --> 14:44.880
window, they're all accessing the same file system, it's the same network.

14:44.880 --> 14:47.280
It's really useful to see that, to test that.

14:47.280 --> 14:50.680
I could see that being, it's a neat trick that you can now do on Windows 10 that would

14:50.680 --> 14:53.640
take more monkeying on Linux itself to actually pull off.

14:53.640 --> 14:55.220
It's a good question about network card access.

14:55.220 --> 14:59.560
That was my first quandary too about this is like, well, what can it actually do?

14:59.560 --> 15:02.760
And it's interesting, some of the critics of this are saying that there is a problem

15:02.760 --> 15:07.920
with some of the IO performance, but to me, how much does IO performance matter inside

15:07.920 --> 15:09.480
of a penetration testing suite?

15:09.480 --> 15:14.320
Yeah, well, but if you're using a SUSE or Debian or Ubuntu for like some development

15:14.320 --> 15:16.080
work, then all of a sudden it matters.

15:16.080 --> 15:20.320
Specifically where that bottleneck is, is CPU performance is actually comparable.

15:20.320 --> 15:21.360
It's decent.

15:21.360 --> 15:24.600
It's when you're hitting the disk and I think maybe it's like when it's translating disk

15:24.600 --> 15:29.360
calls to like NTFS file system writes, it really hits the wall there.

15:29.360 --> 15:34.400
But Microsoft told me, and this article confirms it, that they are already working on a new

15:34.400 --> 15:36.480
version of that that is significantly faster.

15:36.480 --> 15:39.960
I don't know if they're caching or what they're doing, but they have, they already have an

15:39.960 --> 15:42.160
idea on how to fix the disk IOs issue.

15:42.160 --> 15:46.260
I think what the subsystem really is about is it's a stepping stone.

15:46.260 --> 15:50.880
If you don't need the overhead of a VM, then like at scale, we heard somebody complaining,

15:50.880 --> 15:53.440
all these guys are running multiple VMs and they're running out of disk and memory.

15:53.440 --> 15:58.160
Well, if you can just load it up in the subsystem that has minimal overhead, if you don't need

15:58.160 --> 16:01.720
the full functionality of a VM, it's a pretty viable option and then it's pretty easy to

16:01.720 --> 16:02.720
step up.

16:02.720 --> 16:06.080
The other thing to me is the local integration with the system itself, right?

16:06.080 --> 16:09.360
So you have local windows, you have, like you said, local file systems, all of those

16:09.360 --> 16:13.080
things are running locally on the machine and you're not capturing your cursor, coming

16:13.080 --> 16:17.480
back out, going back in, trying to set up a bi-directional clipboard, all of that stuff

16:17.480 --> 16:19.120
is just integrated.

16:19.120 --> 16:23.400
And so if you use these tools just for a small portion of your job, that's a really great

16:23.400 --> 16:24.400
way to get it done.

16:24.400 --> 16:28.600
Or if you just really want a legitimate open SSH client, or you're more familiar with

16:28.600 --> 16:33.120
TracePath under Linux, like now all that stuff's available to you, sneaky dogs, but I don't

16:33.120 --> 16:36.440
think it's a full replacement, it's just like a stepping stone.

16:36.440 --> 16:39.360
And I'll wrap my thoughts with this, I've been looking at the subsystem like this Debian

16:39.360 --> 16:43.120
and Kali Linux edition as the way you and I look at how to switch people to Linux.

16:43.120 --> 16:46.480
Super quick version is, you wanna put somebody successfully on Linux, get them on Firefox,

16:46.480 --> 16:50.800
LibreOffice, get them using Pidgin or whatever you were gonna have them using on Linux or

16:50.800 --> 16:52.480
Telegram or whatever it is.

16:52.480 --> 16:56.280
Get them using that on their existing platform, Mac or Windows, and then come back six months

16:56.280 --> 16:58.400
later or whatever and switch them over to Linux.

16:58.400 --> 17:02.160
I think the subsystem could be doing the same thing to power Windows users, they can start

17:02.160 --> 17:05.960
playing around with Linux, start learning the commands, start to understand how this

17:05.960 --> 17:09.040
directory structure might work, all that kind of stuff, and then be like, you know what,

17:09.040 --> 17:10.640
I'm ready for a real Linux rig.

17:10.640 --> 17:12.920
So the subsystem may end up giving us more Linux switchers.

17:12.920 --> 17:13.920
Absolutely.

17:13.920 --> 17:17.360
When we were at scale this week, we definitely saw people that were going around Windows

17:17.360 --> 17:18.920
shopping at different distributions.

17:18.920 --> 17:23.040
I didn't even think this was a thing anymore, but you were talking with Nathan from Ubuntu,

17:23.040 --> 17:25.560
Nathan Haynes, and he said that, yeah, that is a thing.

17:25.560 --> 17:29.280
People come here and they ask us questions and we sometimes send them to the Fedora booth,

17:29.280 --> 17:32.200
they sometimes send people over here to the Ubuntu booth, people are here to shop for

17:32.200 --> 17:33.200
Linux.

17:33.200 --> 17:37.480
Yeah, it was really exciting to talk to them and it was also exciting to see that Canonical

17:37.480 --> 17:41.440
and Ubuntu specifically is participating in that community effort, right?

17:41.440 --> 17:45.760
So if somebody comes to their booth and has a requirement that can be met by Ubuntu, they're

17:45.760 --> 17:50.440
not afraid to hand them off to the KD team or the GNOME team, or they're even developing

17:50.440 --> 17:52.000
a relationship with Microsoft.

17:52.000 --> 17:56.960
Yeah, Microsoft had a presence here, a big presence, they had a really nice booth.

17:56.960 --> 17:59.560
Just before we started the show, I was thinking, am I glad I did it?

17:59.560 --> 18:03.960
Am I glad I moved down here for six days and went to scale?

18:03.960 --> 18:04.960
I think I am.

18:04.960 --> 18:09.080
I feel like the conference might still be finding its footing completely, but there

18:09.080 --> 18:12.280
was some focus tracks that I think worked really well.

18:12.280 --> 18:16.740
If you wanted to really deep dive into Postgres, or if you're really just there about Ubuntu,

18:16.740 --> 18:20.200
there were tracks that were all day things about just those topics.

18:20.200 --> 18:23.960
I hate saying this because it sounds a little cliche to say, but it really also is about

18:23.960 --> 18:27.600
the community because it's a bunch of people you can geek out about with Linux, just in

18:27.600 --> 18:28.600
general.

18:28.600 --> 18:30.000
Everybody can talk Linux for the most part.

18:30.000 --> 18:33.800
You know, I've always thought the talks are great, the conference is great, but it's really

18:33.800 --> 18:37.340
the people that you meet in and outside the conference that I really enjoy and the activities

18:37.340 --> 18:41.480
that we do outside, having dinner, having drinks, that's what I really come here for.

18:41.480 --> 18:46.600
I think the reason why it's worth mentioning it is because it took me about four years,

18:46.600 --> 18:51.640
or five years, of doing this to say, actually no, this is really the best part.

18:51.640 --> 18:55.800
I know you're here for scale, and so you gotta go, and I go to the talks, and I go to what

18:55.800 --> 18:59.320
interests me, but I don't pressure myself to try to get as many of the talks in as possible

18:59.320 --> 19:03.240
because I walk away with a lot more when I go hang out with people and we talk what they're

19:03.240 --> 19:06.440
doing at their work, and you get to geek out about Linux at the same time.

19:06.440 --> 19:11.460
You get to have a friendly conversation about GNOME versus Plasma instead of a turf war

19:11.460 --> 19:12.460
on the internet.

19:12.460 --> 19:15.520
You know, another thing I'll add in there is a lot of times when we think about conferences,

19:15.520 --> 19:19.880
we think about projects, and we think about software, but one of the things that was really

19:19.880 --> 19:23.520
fantastic was getting to meet some of the people that work on the hardware, like the

19:23.520 --> 19:28.280
two-factor authentication, Yubikey, from Yubico, who made a trip to this conference, showed

19:28.280 --> 19:32.280
up, and we've been using their products forever, but to be able to actually shake and meet

19:32.280 --> 19:35.760
the people that are doing it and see what they have coming down the pipeline and the

19:35.760 --> 19:40.280
fact that they're staying so close and plugged into the Linux community as the desktop develops

19:40.280 --> 19:42.520
on 2018, that was really encouraging to see.

19:42.520 --> 19:43.520
Yeah.

19:43.520 --> 19:46.480
It was so awesome when they would answer, yeah, I use Linux, or when we were talking

19:46.480 --> 19:50.000
to the Inkscape co-creators, like, oh yeah, I run Linux every single day.

19:50.000 --> 19:51.160
I love seeing that.

19:51.160 --> 19:53.080
I feel like we get a little bit more of that at scale.

19:53.080 --> 19:57.280
It's not exclusively that, but you get a little bit more at scale than I think I saw two years

19:57.280 --> 19:58.280
ago.

19:58.280 --> 19:59.880
And now Linux Fest Northwest is next.

19:59.880 --> 20:03.880
That's coming up at the end of April, linuxfestnorthwest.org if you want to check that out.

20:03.880 --> 20:08.160
And if you want to hear some interviews from the floor of scale, including one of the co-founders

20:08.160 --> 20:12.600
of Inkscape, which was a great interview because he's a Linux user, go check out the Ask Noah

20:12.600 --> 20:13.600
program.

20:13.600 --> 20:14.600
Yeah.

20:14.600 --> 20:15.600
Thank you very much.

20:15.600 --> 20:16.600
We did a show live from the floor.

20:16.600 --> 20:17.600
We aired some interviews.

20:17.600 --> 20:20.760
We've got a couple more that are going to air on Tuesday at 6 PM central.

20:20.760 --> 20:23.560
And if there are any questions, of course, the phone line is always open.

20:23.560 --> 20:24.560
You were a maniac.

20:24.560 --> 20:25.560
You were a machine.

20:25.560 --> 20:26.560
It was a lot of fun.

20:26.560 --> 20:28.560
And thank you guys for tuning to this week's episode of the Linux Action News.

20:28.560 --> 20:32.960
You can go to linuxactionnews.com slash subscribe for all the ways to get new episodes.

20:32.960 --> 20:36.160
And linuxactionnews.com slash contact for ways to stay in touch.

20:36.160 --> 20:39.960
And you can support the whole network at our Patreon page and keep us going at patreon.com

20:39.960 --> 20:40.960
slash jupitersignal.

20:40.960 --> 20:44.960
Joe and Chris will be back next Monday with their weekly take on Linux in the open source

20:44.960 --> 20:45.960
community.

20:45.960 --> 20:46.960
I'm at Chris LAS.

20:46.960 --> 20:48.400
I'm at Colonel Linux.

20:48.400 --> 20:50.880
Thank you for joining us and we'll see you next week.

20:50.880 --> 21:07.000
See you later.

