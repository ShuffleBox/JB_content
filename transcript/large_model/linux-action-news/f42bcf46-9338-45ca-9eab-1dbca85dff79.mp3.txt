Hello, and welcome to Linux Action News, our weekly take on Linux and the open source world.
This is episode 35, recorded on January 7th, 2018.
I'm Chris.
And I'm Joe.
Hello, Joe.
Happy 2018.
Let's kick off our first episode of the new year with some positive news.
Yeah, UbiPorts are still going strong.
They released during the holiday break OTA 3 for quite a lot of their devices.
And even more exciting, they are working on Android support using Andbox.
And this is something that I'm really happy to see.
It's I think the major thing that Canonical got wrong with Ubuntu Touch was not working
towards getting Android apps working and being quite stubborn about it and saying, no, we're
a different platform.
And there are a lot of philosophical reasons why they chose to do that.
And I suppose there are technological arguments as well.
Andbox wasn't as well developed back then.
But enough of that.
Looking forward, we're going to get Android apps on Ubuntu Touch.
And suddenly, it's looking like a much better prospect to me in terms of something that
I could actually use as a daily driver.
Now in 2018, it seems obvious that you have to have solid Android app support.
And this looks really good because it's not your old kind of Android app support.
It's the new container version of Android app support where things run much faster.
No longer do you have to emulate the entire hardware stack.
So this is a new version.
And it's a pretty cool project.
So I'm really glad to see this land.
This is also a general maintenance update.
It's not just about early days of Android support.
The updates also changed things over to using DuckDuckGo for search.
They removed the Ubuntu store from the app scope.
There's a lot of other nice little tidying changes that just keep the thing moving.
And keeping it moving is really their best option right now.
It's based on Ubuntu 15.10, which as you probably know, because of math, is no longer supported.
So they're really doing tidying, winter cleaning, and getting things ready to move the entire
project forward to a more sustainable version of their Ubuntu base.
Yeah, this Anbox stuff and also Snaps that they're working on, they are both only going
to be available in the 16.04 version of it, which is getting there.
It's still pretty unstable.
I've tried 16.04 and a Nexus 5 and it's not usable yet, but they don't claim that it is.
And this is all very much work in progress.
But as you say, the 15.04 version, this latest OTA of theirs, that is solid.
It is working well.
But it still has the problems that it had before for me.
I'm much more positive about it now.
It's a community project and it's not being sold as this consumer-ready operating system
because they don't claim that, do they?
They claim that it's still for developers, enthusiasts, and that's kind of how I've always
seen it.
I agree.
And that's the sweet spot.
And those of us who have things like the Nexus 5 or the Fairphone 2 or some of the BQ devices
or even a Nexus 4, we can inject new life into these devices.
My Nexus 5 is a great device and it's sort of a shame that Android has left it behind.
And I love, love, love that projects like this give me something to play around with
this old device that's now super easy to mod, it's super easy to get control of, I can find
all kinds of extra parts for, I can buy them on eBay, the entire Nexus 5 for really cheap.
It's a great playground device and if UbiPorts didn't do much more than just give new life
to this phone, I'd be pretty happy just as a geek and maybe there's a market there.
Maybe people like me represent a large enough market now that a community project can continue
on.
Yeah, don't forget the OnePlus One, of course, which was a really popular phone at the time.
I've now moved on to a 3T, but I've still got my old OnePlus One and that is a perfect
device to use with it.
It's got three gigabytes of RAM, it's got a really powerful processor and there's no
reason why it won't be able to run this and box stuff.
And that I think is probably where I'm going to be testing it also on the Nexus 5 that
I've got.
But yeah, I'm really looking forward to this.
Now just a quick note, as I wax on poetically about getting life into old devices, Project
Andbox, which is the Android in a box project, doesn't necessarily work on all of the older
devices like some of the BQ devices that were the lower-end BQ devices that supported Ubuntu
Touch.
You might not actually be able to run the Project Andbox stuff, which gives you Android
apps.
So keep that in mind.
There is sort of a cutoff of usefulness if you want to be able to run Android apps on
future Ubuntu Touch builds.
Yeah, if you look at their website, anything that is a legacy device is not going to run
this interesting stuff, unfortunately.
Now this is interesting, giving life to your old routers.
OpenWRT, it's a brand name at this point, and we have good news this week, the name
itself is not going away.
But there is a big merger coming between OpenWRT and LEDE.
I think you mean routers.
And I've always said it as lead, I don't know, it all encapsulates LEDE, but it doesn't really
matter anymore because that is going away, that branding, and it's going back to OpenWRT,
which is good.
They've been talking about doing this since I think June of last year.
So it's taken a long time to get all the details worked out, but now finally this is happening
and they can all concentrate on code and making it work well instead of all this politics
stuff that really just distracted from what they should have been doing, I think.
Yeah, now if you used OpenWRT or LEDE, go check the link in the show notes so you get
the details on how long you can expect your version to be supported.
But here is the high level takeaway.
They are merging projects, the name OpenWRT will remain sort of the forward facing project
name, but the code base will really be based on LEDE.
It's sort of a pretty good solid base and they list a whole bunch of reasons on the
wiki why they're going to rebase on LEDE.
So the name will be OpenWRT, but under the hood, it's LEDE.
Yeah, it seems that when that split happened, most of the top developers went over to LEDE,
didn't they?
So it's not a surprise that that code base is in a better shape than the original OpenWRT
one.
Yeah, I agree.
And I appreciate that they're sticking though with the OpenWRT name because routers are
in that fringe where some people who are not necessarily followers of all of this stuff
kind of get interested in this market and they want to reflash their router to make
it more secure, to add functionality, whatever reason, and they go for things that they know
the name of like DDWRT or OpenWRT or Tomato Router.
There's just these names that have sort of populated out there and that's what they go
search for.
And so if you introduce another name at this point, the average consumer is never going
to find you.
And this sort of humble recognition on the open source project standpoint to say this
is the brand that the average consumer recognizes and we're going to stick with it, even though
the code base is LEED, I think it shows some cunning and cleverness.
Well, yeah.
Look at LibreOffice, for example.
How many people, normals, not Linux geeks, install OpenOffice still?
Oh, yeah.
I know a ton of people because that brand is so strong and you can't just expect people
to forget a brand that's quite well known.
And as you say, no one really, well, a few people know about LEED, but OpenWRT, everyone
knows.
So yeah, I think it was the right decision, definitely.
Now something not many of us know about, but we're learning more this week is Google's
experimental Fuchsia OS.
Yeah, the potential replacement for Android at some point.
And it's not Linux based, there's no GPL inside, it's all nice and permissively licensed.
It's very early days still, but there's a device that you can actually run it on if
you've got $1,000 to drop on a Pixelbook.
Yeah, it's Google's Pixelbook and you say it's an Android replacement, but they've actually
been minimizing the ARM work and the Android UI work and they've been doubling down on
supporting the latest version of the Pixel.
So make of that as you will.
I don't know what to make of it myself.
Google's third operating system, which comes after Chrome and Android, documents describe
it as targeting modern phones and modern personal computers.
The OS, as Joe said, doesn't use a Linux kernel at all.
It's got its own Google developed microkernel, which is called Magenta, and then they have
different versions and the current version is called Zircon right now.
And it uses Vulkan for the graphics layer and it uses Flutter for the SDK.
And they say that if you write an app for Fuchsia OS, it'll run on Android or iOS potentially
as well.
It sounds an awful lot like Convergence to me.
So right now they're supporting the Pixelbook as well as the Acer Switch Alpha 12 and old
NUCs from 2015.
And if you have one of those devices and you have a USB device that you're willing to quote
unquote sacrifice, you can try out Fuchsia.
And apparently when you flash Fuchsia installer to a USB thumb drive, it damages in a way
that is irrecoverable.
Really I was reading about that and I think it might just be a miscommunication because
as far as I can see, it just DDs the image over it and destroys the partitioned layout
and everything.
That would make sense, right?
But in Google's documentation, it says it's destructive to the USB device.
So you have to take that warning.
I might have to try this with a really cheap old USB device and see if I can format it
again afterwards because that seems very odd to me that it would literally destroy it.
All right.
Well, let's talk about the thing that's on my mind is that Fuchsia's install process
doesn't support any ARM based targets right now.
So this whole thing about smartphones and tablets seems like a line to me because what
it works on right now is x86 devices like old NUCs.
Isn't that just easier to develop for?
Because if you're going to develop on an x86 device and compile everything, it just makes
it that bit easier and quicker to do while you're in this early development stage and
then they can compile it for ARM later.
I don't know.
I mean, it is a shift in focus, but surely they can't be looking to x86 devices when
ARM is just everywhere.
We'll take this for what it is, but they originally were packaging the system UI as an APK to
run on top of an Android phone for people to try out and they just kind of bailed on
that.
And now they're just working on the x86 like full desktop version of it.
Well, it's always felt like a hedge, hasn't it, from Google because they've got Chrome
OS that is really well developed at this stage.
It is really well developed.
It's just a hedge against the GPL, isn't it, really?
That is what some people have suggested, is that this is Google's hedge against the GPL,
specifically the GPL 3, and that this could just end up being a Chrome runtime.
But there's not much danger of the kernel being re-licensed as GPL v3, is there?
Not from what I've seen.
It seems especially now with this new signing statement that we covered a few weeks ago,
the GPL 2 is fairly locked in for the Linux kernel.
That's why I don't really buy that it's GPL hedging.
It feels like something else is happening.
Well, is it not just that Google have got plenty of R&D money and they have to throw
it at something?
Who knows?
It's all speculation, Joe.
Here's mine.
It's an Android killer.
It's a project that was born to address all of the fundamental performance issues with
Android that people like me see constantly.
And they said, well, if we were going to fix all of this stuff, what kind of OS would we
build?
And it's this.
In my estimation, Fuchsia OS is designed to sort of solve all of the Android problems,
and they're going to see where it can go.
But who knows?
It's all rampant speculation.
I think that sounds reasonable, and I think that a happy byproduct of how they're developing
this is that it will probably be able to replace Chrome OS as well.
Last.ting.com.
It's a smarter way to do mobile.
If you just want to do something simple with your mobile plan, Ting's the way to go.
If you want to do something a little more complicated, well, stay tuned.
I actually have advice for you, too.
The average Ting bill for one device is about $23 a month per phone.
It's $6 a month, and then your usage on top of that.
Whatever Uncle Sam takes in your area, there's that to factor in, too, but it's $6 for the
line.
Now, $23 is like you, just you, which is lovely, but what if you have a family?
What if you have a business?
It's $6 per line after that.
$6 for the line, and then just your usage on top of that.
Last.ting.com.
You can go there and get $25 off a device or $25 in service credits if you bring a Ting-compatible
device.
Now, they have CDMA and GSM networks, so go check their BYOD page.
You may already be set, because then you get $25 in service credit, like I said, it's $23
on average for a line, so you just paid for your first month.
Oh, last.ting.com.
Pay for what you use, nationwide coverage, no contracts, nor the termination fees.
Now, here's another idea for Ting.
If you have a security system or a monitoring system or something that's using just a little
bit of data here and there, you can go get a $9 SIM card from Ting.
Last.ting.com.
$9 SIM card and then $25 in service credits means that you might be able to monitor something
or check in on a camera feed or remotely connect to a system for months without having to pay
anything out of pocket.
That's how my buddy Chase does it.
Last.ting.com.
Okay, so there's no way we can ignore Meltdown and Spectre.
We have to talk about this.
Two major bugs, well, it's actually three major bugs with CPUs that affect all operating
systems and pretty much all devices, apart from the Raspberry Pi, which is nice.
Where do we start with it?
I think there's no point talking about Windows and Mac OS and stuff, but with Linux, it's
pretty big news for us, isn't it?
Yeah, this is probably one of the biggest stories of 2018 right off the bat.
So let's break it down.
You've got Meltdown and you've got Spectre.
Meltdown breaks the most fundamental isolation between user applications and the operating
system.
So the Meltdown attack allows a program to access memory and thus also things like your
keys and your passwords and other elements of the programs you might be running and the
operating system.
That's Meltdown.
And then there's Spectre.
Now Spectre is the one we're going to be hearing a lot more throughout 2018, I suspect.
Spectre breaks the isolation between different applications.
It allows an attacker to trick otherwise error-free, bug-free programs, which may have followed
best practices, into leaking their secrets.
The safety checks of some of those best practices actually even make the situation worse.
And it could come down to a fundamental design flaw that future processors will have to correct.
Now Meltdown is being patched actively.
Spectre doesn't necessarily have an upstream patch as of the recording of this program.
There are different distributions that are shipping potential fixes to Spectre, but none
of those have been upgraded into Linus's tree.
And it's not even clear if those patches are going to work at this stage.
With Meltdown, that seems quite clear that it is going to work.
You're going to have a performance hit with certain workloads, especially data center
workloads, not necessarily on the desktop.
But with Spectre, we just don't know.
It's not really patchable, is it?
It's mitigation rather than full patches.
And I suppose eventually there'll be workarounds to make us immune to it to some extent.
But as you say, this is a fundamental problem with processors and how they work.
The things that have made these processors so fast in the first place are being exploited.
And it's fundamental, there's no other word for it.
Briefly, one of the things that I find really fascinating about this story, and I'll go
into a lot more detail in a future episode of TechSnap, but the core issues were discovered
independently by two different Project Zero researchers who were not communicating initially.
And Spectre and Meltdown were discovered independently, so they were sort of converging in on these
different vulnerabilities.
And that sort of adds to the confusion because they're similar, they were discovered around
the same time, both of which were discovered by Project Zero engineers.
But the core issues have been known to Intel and Project Zero since June of 2017.
Now Google immediately started working with Intel, and Intel started researching the problem,
trying to determine what the issue was.
But what we know at this point is that some companies weren't brought into loop until
Christmas Day, and some a little bit before that.
And that initial disclosure wasn't planned until January 9th, which is several days from
now.
And so some companies, like Canonical, were caught off guard with the early public disclosures.
But to be fair, that is not going to be the case for much longer.
They said Tuesday the 9th is when they were planning to, they're going to try and do it
before then.
But if not, they'll definitely hit that deadline.
So as you're listening to this, it's probably only one day away.
But it's still not good.
You'd hope that these companies would all work together a little more closely and a
little earlier than this.
I don't know why Canonical was left out of the loop for so long, because it seems Red
Hat weren't, were they?
Because their patches are all ready to go.
If you're running a distro kernel, you might be covered already.
But Greg Kh says in a post recently, check it for yourself.
He's a little skeptical of some of these distro-conceived solutions.
And he notes, at least for Spectre, nothing's actually been integrated upstream.
But I want to go back in time a little bit to November 15th.
And I want to talk about Kaiser.
Now Kaiser was a set of patches that was being presented as early as November to solve side
channel attacks with Intel devices and other types of devices.
All told, the discussion around Kaiser was some of the early signs back in November that
maybe something big was coming.
Because everybody was all of a sudden on board, Linus and Greg.
This whole set of patches that was going to reduce performance was being fast-tracked
by the kernel developers.
And nobody really talked about why or gave public time frames.
But everybody was on board with Kaiser.
And you can see some discussions at LWN.net on November 15th about some suggestions for
hiding the kernel from user space, which were really the early groundwork for fixing this
big problem.
So it's been in development for months now.
Yeah, and they redacted some comments from the code and everything, didn't they?
Which was very unusual because it's usually so openly developed.
Not only that, but there was also Linux kernel mailing lists post from an AMD developer that
was talking about some vulnerability that AMD wasn't quite as susceptible to, that implied
Intel was.
And if you connected the dots, you could start to realize there's probably something big
here.
And that's exactly what the register did.
And they ran with the story that said, hey, there could be a huge vulnerability here.
And that pushed everybody's timetables up.
Now I've seen some performance charts.
And it really is obvious that once these patches for Meltdown are put in place, you get this
immediate hit in performance for a lot of workloads.
And you're talking about maybe 5%, maybe 10%, maybe as much as 30% extra compute power needed,
which if you're running a lot of applications, if you're running a big company, that is a
lot more money you're going to have to spend because of this.
And it's all Intel's fault, isn't it?
And there's talk of class action lawsuits.
Could this be really serious for Intel, I wonder?
It really gets down into the nuance because, of course, the kernel developers are making
some assumptions that the processor will provide them for certain protections.
So they take certain shortcuts for performance benefits.
So where does the fault really lie?
If you depend on the processor all the time, then you could say, well, that's a bad assumption
to make.
But of course, you could say that the processor should be designed fundamentally to protect
against these sort of side channel attacks.
I don't know if the lawsuits are going to get very far because they could get really
marred down in semantics.
It's early days right now.
But if you follow Twitter and you just do a few searches on Meltdown, you'll start to
see people that are tweeting about performance dropping through the floor, screenshots for
login servers and database servers that are just totally tanking.
It appears to be sort of a conflux of issues.
If your workload stresses the network subsystem and the disk subsystem, then you really notice
it.
If you really need to nail the processor or nail the GPU, you don't really seem to have
a big performance impact.
But when it's multiple subsystems, that's really when things come to their knees.
And I've been involved in some AWS customer support forums where essentially people are
saying I have to completely upgrade to a whole new category of AWS hardware now.
It's going to cost me way more money than I projected for 2018.
And they're pretty upset about it.
And rightfully so.
If you suddenly have to do all your maths again for your projected revenue and spending
and everything because of this, it's going to cost companies millions of dollars potentially.
And it's all Intel's fault.
You say there's nuance there and maybe the kernel people should have known about this.
And yeah, I suppose there is that argument to be made.
But for me, the hardware is at fault here.
And the blame lies with Intel as far as I'm concerned.
Well I'm going to dig more into speculative execution and all of that kind of stuff in
the TechSnap program.
And I suggest people stay tuned for that.
But I agree, a lot of this is on Intel, especially the meltdown aspect of it, which is predominantly
on Intel.
But there are ARM and AMD systems that are potentially vulnerable to anything that does
speculative execution.
Yeah, that's true.
So I suppose it isn't completely Intel's fault.
It's just the industry's fault, I suppose, for trying to push on too fast and not stopping
to think about the potential consequences of what they're doing.
Well speaking of not fully thinking through of the consequences, Evan's war against the
Software Freedom Conservancy just got a bit dirtier.
Yeah, at first it seemed like the law center was offering an olive branch to Conservancy
by saying that they were going to kind of drop the case.
But they were going to do that by offering them a license to use the trademark by pretty
much saying, it is our trademark, you are in the wrong, but we'll let you get away with
it.
And that didn't go down very well, did it?
It really makes this whole thing way more complicated.
I think a lot of us in the bleachers were hoping for something simple, a quick dismissal.
And now with this fraud claim, that's just simply not going to happen.
And I knew this was going to happen.
I knew that Evan has been around for a while.
He wouldn't just simply roll over.
We knew it was going to be harder than this, but boy, at least myself and I think a lot
of others were hoping just for a quick, easy dismissal.
I'll say this.
One thing that I find interesting in this whole spat is the Software Freedom Conservancy
is much more verbose about what's going on.
They're pretty quick with the blog post.
They're pretty clear in their language and in linking to legal documents what's going
on.
It does make the Software Freedom Law Center feel like the aggressor and the Conservancy
as the victim.
And they're clearly just trying to document what's happening to them.
Well, in the initial blog posts, Bradley, I think, said that they are very committed
to transparency.
And it is good to see that at least on one side, we're getting that transparency here.
Let's take the last few moments of the show to talk about something that has been particularly
difficult for Joe and I in the last couple of weeks.
And that's the crazy ass price of Bitcoin in regards to our prediction recently.
Yeah.
So we recorded that prediction show quite a long time before it was aired.
And Bitcoin was riding pretty high at that point.
And then immediately after we recorded it, pretty much, it took a tumble down and down
and down.
And I had predicted that it wouldn't drop below 15,000 this year.
And at the stroke of midnight, it was around 13,000.
So I'm immediately wrong.
To be fair, we did say that it's volatile and that it could go either way.
But we're wrong.
Another interesting thing when I listened back, you had said that you thought the high
would be 100,000.
And then you thought that the price on December 1 would be 103,000.
So that kind of didn't make sense either.
But this is the thing with Bitcoin, you can never really predict it, can you?
And as I said last year, we could be facing, in December, 100,000, or we could be facing
under 1,000.
And there's just no way to know that.
There's really two versions of me when it comes to this issue.
Version one is the enthusiast.
I just want to see cryptocurrencies succeed.
And then version two is the Bitcoin investor.
Now the Bitcoin investor in me thinks that Bitcoin long term is doomed unless they solve
some fundamental issues, which Noah addresses in Ask Noah 42, The End of Bitcoin.
Unless they address fundamental issues, Bitcoin is getting too expensive to operate.
If you have like $20 or less in Bitcoin, you can't do anything with it.
It's dark matter money.
Because the transaction fees are becoming so expensive on the Bitcoin network that it
costs about $20 to move a dollar.
Yeah, but those issues can be fixed.
You talked about last year about potentially caching stuff with databases.
I think there are technical workarounds for that.
And the blockchain technology itself is so fundamentally solid that I think that you're
being too pessimistic here.
I think that it might turn out to be a bubble, and it might turn out to be only worth 1,000
or a few hundred or whatever.
But I can't see it just being worth nothing.
It's a negative outlook.
I'll have a negative outlook until they address the issues.
Once they address the issues, which they could do fairly simply, then my outlook will change.
But I think Bitcoin is going to struggle, and the price will reflect that struggle until
they solve these problems.
Yeah, well, we'll keep an eye on it, and we'll report any major events that happen in the
Bitcoin world.
Yeah, and of course, the big lesson here is that the open source world is much, much,
much larger than just Bitcoin.
And you can get all of the news every single week at linuxactionnews.com slash subscribe.
And you can go there for all of the ways to get every single episode.
Yeah, and you can go to linuxactionnews.com slash contact for ways to get in touch with
us.
And you can support the entire network at patreon.com slash Jupiter signal, or go to
Jupiter broadcasting.com slash stickers and get yourself a Linux action news sticker.
Yeah, I've got one on my desktop machine.
Looks pretty cool.
So we'll be back next Monday with our weekly take on the latest Linux and open source news.
I'm at Chris LAS.
I'm at Joe Rissington.
Thank you for joining us, and we'll see you next week.
See you later.
