1
00:00:00,000 --> 00:00:09,280
Hello and welcome to Linux Action News, episode 193, recorded on June 13th, 2021.

2
00:00:09,280 --> 00:00:10,280
I'm Chris.

3
00:00:10,280 --> 00:00:11,280
And I'm Wes.

4
00:00:11,280 --> 00:00:12,280
Hello, Wes.

5
00:00:12,280 --> 00:00:13,280
Let's do the news.

6
00:00:13,280 --> 00:00:20,040
We start this week with the major usability improvements landing in Plasma 5.22, including

7
00:00:20,040 --> 00:00:26,400
considerable investment in Wayland support, with standout features such as Kwin now supporting

8
00:00:26,400 --> 00:00:30,520
variable refresh rate and FreeSync screens.

9
00:00:30,520 --> 00:00:35,480
This is a nice improvement if you have multiple monitors with different refresh rates, as

10
00:00:35,480 --> 00:00:38,760
each screen can now be configured individually.

11
00:00:38,760 --> 00:00:46,680
Finally, and both Wayland and X11 users get this one, if you have more than one screen,

12
00:00:46,680 --> 00:00:52,220
new windows now open on the screen where your cursor is located.

13
00:00:52,220 --> 00:00:57,560
Another nice feature to see is adaptive panel transparency, which didn't work on my Plasma

14
00:00:57,560 --> 00:01:03,600
5.22 install, but the idea is that it adaptively changes when you maximize or reduce windows

15
00:01:03,600 --> 00:01:05,960
and make your background look all nice and pretty.

16
00:01:05,960 --> 00:01:08,120
I just think that's a nice quality of life thing in there.

17
00:01:08,120 --> 00:01:12,440
There's some Krunner improvements too that show how much text is being displayed, and

18
00:01:12,440 --> 00:01:13,440
that's fantastic.

19
00:01:13,440 --> 00:01:17,160
And of course, because this is Plasma, there's all these little things you can tweak now.

20
00:01:17,160 --> 00:01:21,080
The system clock looks a little bit sharper in the way it displays your events and dates

21
00:01:21,080 --> 00:01:24,680
and the way you can move between months and years is a lot nicer.

22
00:01:24,680 --> 00:01:28,100
Those kinds of things, it's good to see that in there, but the big feature that really

23
00:01:28,100 --> 00:01:33,180
stood out to me is what they call the speed dial now in system settings.

24
00:01:33,180 --> 00:01:37,760
It's the first page that opens when you bring up the Plasma system settings, and it's kind

25
00:01:37,760 --> 00:01:42,480
of like the most common things you're going to want to tweak in Plasma.

26
00:01:42,480 --> 00:01:47,840
Not everything that I tweak, but like 80%, and it's the first screen that comes up.

27
00:01:47,840 --> 00:01:51,120
So what they've done is right at the top, they've put, do you want a light theme or

28
00:01:51,120 --> 00:01:52,120
a dark theme?

29
00:01:52,120 --> 00:01:53,120
Okay.

30
00:01:53,120 --> 00:01:56,440
The next option down, what do you want your animation speed throughout Plasma to be?

31
00:01:56,440 --> 00:02:00,240
And then the next section down there, which is super handy for new Plasma users, would

32
00:02:00,240 --> 00:02:04,300
you like a double click or a single click to launch files?

33
00:02:04,300 --> 00:02:06,060
Because that can throw people off.

34
00:02:06,060 --> 00:02:10,840
And then they also have a slider in here that is a little unusual, but I kind of like it

35
00:02:10,840 --> 00:02:11,840
Wes.

36
00:02:11,840 --> 00:02:13,760
It's called the send user feedback and you slide it.

37
00:02:13,760 --> 00:02:16,240
At first it's disabled by default, it's disabled, right?

38
00:02:16,240 --> 00:02:19,040
But then you slide it over to basic system information.

39
00:02:19,040 --> 00:02:20,040
Okay.

40
00:02:20,040 --> 00:02:24,440
Then you slide it over further, basic system information and usage statistics.

41
00:02:24,440 --> 00:02:27,080
You're getting a little more personal.

42
00:02:27,080 --> 00:02:29,240
There's two more notches to go though, Wes.

43
00:02:29,240 --> 00:02:34,020
So we take it up another notch and it says detailed system information and basic usage

44
00:02:34,020 --> 00:02:36,960
statistics.

45
00:02:36,960 --> 00:02:42,640
And then the last notch, when I set it to blast, detailed system information and usage

46
00:02:42,640 --> 00:02:45,200
statistics.

47
00:02:45,200 --> 00:02:46,200
I don't know exactly.

48
00:02:46,200 --> 00:02:50,360
I'd love to know, like, what does that mean in terms of network sending and how often

49
00:02:50,360 --> 00:02:51,360
it's checking?

50
00:02:51,360 --> 00:02:53,480
How much data and what are the keys in there?

51
00:02:53,480 --> 00:02:54,520
When does it collect it?

52
00:02:54,520 --> 00:02:55,840
When does it transmit it?

53
00:02:55,840 --> 00:02:58,060
Because I'm kind of tempted to support the Plasma project.

54
00:02:58,060 --> 00:03:02,560
I don't mind sending them some detailed information about my old Linux box here that I'm running

55
00:03:02,560 --> 00:03:05,160
this on and letting them know.

56
00:03:05,160 --> 00:03:09,480
And so that kind of stuff is in here in this new quick settings or what they call speed

57
00:03:09,480 --> 00:03:10,480
dial.

58
00:03:10,480 --> 00:03:14,400
But then when you go into system settings, it's labeled as quick settings, but then they

59
00:03:14,400 --> 00:03:19,800
have more launching off icons you can click to get to things like the general behavior,

60
00:03:19,800 --> 00:03:21,900
the window behavior, the compositor stuff.

61
00:03:21,900 --> 00:03:26,080
It really makes getting in here and changing some of the basic stuff nice and quick.

62
00:03:26,080 --> 00:03:30,440
But the other thing I noticed, and I actually had to change my theme back, I had to like

63
00:03:30,440 --> 00:03:32,080
change it and change it back.

64
00:03:32,080 --> 00:03:35,800
And then I noticed that the breeze theme is looking a lot tighter.

65
00:03:35,800 --> 00:03:39,240
And I don't know how long, how many updates I've gone without maybe doing this toggle

66
00:03:39,240 --> 00:03:44,240
of my themes, but the system icons look so much better down in the tray.

67
00:03:44,240 --> 00:03:45,680
The launch bar looks a lot cleaner.

68
00:03:45,680 --> 00:03:47,520
The windows look a lot cleaner.

69
00:03:47,520 --> 00:03:51,080
And the light theme is extremely pleasant now.

70
00:03:51,080 --> 00:03:54,840
And I'm actually thinking about switching back to light theme in Plasma.

71
00:03:54,840 --> 00:03:55,840
Your dark theme, Chris.

72
00:03:55,840 --> 00:03:56,840
I know.

73
00:03:56,840 --> 00:03:57,840
This makes no sense.

74
00:03:57,840 --> 00:03:58,840
I know.

75
00:03:58,840 --> 00:03:59,840
Better alert the Twitterverse.

76
00:03:59,840 --> 00:04:00,840
The brand is changing.

77
00:04:00,840 --> 00:04:01,960
We're going light theme.

78
00:04:01,960 --> 00:04:03,640
It's actually just really, it's just really elegant.

79
00:04:03,640 --> 00:04:07,840
They've just nailed this release and they're already working on the next one.

80
00:04:07,840 --> 00:04:15,080
And so is the GNOME project with version 40.2 being released this week.

81
00:04:15,080 --> 00:04:21,560
While there wasn't an official 40.1 release, 40.2 comes with lots of fixes and improvements

82
00:04:21,560 --> 00:04:26,600
for your favorite applications, as well as general performance enhancements across the

83
00:04:26,600 --> 00:04:27,600
board.

84
00:04:27,600 --> 00:04:29,240
That's nice to see.

85
00:04:29,240 --> 00:04:33,840
Improved touch interactions have been added to the app grid, as well as a solution for

86
00:04:33,840 --> 00:04:38,200
those of us who use fingerprint readers that were having some authentication failures.

87
00:04:38,200 --> 00:04:41,560
But what I thought was nice to see were the improvements in Mudder.

88
00:04:41,560 --> 00:04:45,600
There was a performance improvement for Nvidia users, improvements for those of you who use

89
00:04:45,600 --> 00:04:50,960
fractional scaling and want to do screencasting, even some gamma correction issues were solved

90
00:04:50,960 --> 00:04:51,960
in there.

91
00:04:51,960 --> 00:04:56,520
Overall, GNOME software seemed to receive a lot of attention too during this cycle.

92
00:04:56,520 --> 00:05:01,240
It now comes with better support for flat packs and improved air reporting when on low

93
00:05:01,240 --> 00:05:02,240
disk space.

94
00:05:02,240 --> 00:05:06,400
So I guess, yeah, that actually is, those are nice things to see in there.

95
00:05:06,400 --> 00:05:10,360
It's nice to know why that install didn't work at the very least.

96
00:05:10,360 --> 00:05:11,360
Yeah it is.

97
00:05:11,360 --> 00:05:15,440
And GNOME software also saw improved automatic downloads for pending updates and improvements

98
00:05:15,440 --> 00:05:17,200
to search query speeds.

99
00:05:17,200 --> 00:05:21,760
I actually was wondering if GNOME software was going to get the old retirement, but these

100
00:05:21,760 --> 00:05:26,320
improvements along with featured app carousel improvements and other things that have landed

101
00:05:26,320 --> 00:05:30,640
and just general bug fixes when you go through the change log for GNOME software make me

102
00:05:30,640 --> 00:05:35,240
think it's actually more alive than ever and it's going to be sticking around.

103
00:05:35,240 --> 00:05:40,560
There have also been some nice performance improvements across the stack, including some

104
00:05:40,560 --> 00:05:50,040
important fixes for say a nasty 100% CPU usage issue in the GNOME display manager login screen,

105
00:05:50,040 --> 00:05:57,240
a different high CPU use issue in Getit the text editor, and a fix for a memory leak in

106
00:05:57,240 --> 00:06:04,440
GNOME calendar's time zone monitoring code.

107
00:06:04,440 --> 00:06:05,960
Linode.com slash LAN.

108
00:06:05,960 --> 00:06:09,240
Go there to get $100 in 60 day credit and you support the show.

109
00:06:09,240 --> 00:06:12,120
No matter what skill level you're at, you're going to find that Linode makes it possible

110
00:06:12,120 --> 00:06:15,080
for your ideas to come to life on the web.

111
00:06:15,080 --> 00:06:17,760
Everything we've built for JB now runs on Linode.

112
00:06:17,760 --> 00:06:24,600
In fact, just Friday we deployed a brand new shiny purpose built $5 a month Linode.

113
00:06:24,600 --> 00:06:28,640
We're working with some friends of ours who are putting together an online virtual event

114
00:06:28,640 --> 00:06:33,440
and they need a way to collaborate with the different speakers and they don't really need

115
00:06:33,440 --> 00:06:36,640
something as complicated as a full syncing solution.

116
00:06:36,640 --> 00:06:40,200
That's where FileRun came in and it just took minutes to get up and running on Linode.

117
00:06:40,200 --> 00:06:45,120
It's a self-hosted file manager, beautiful web UI makes it really easy to pull down files

118
00:06:45,120 --> 00:06:47,440
for different users and upload stuff.

119
00:06:47,440 --> 00:06:51,560
It got them collaborating in minutes and it's running on Linode in the Texas data center.

120
00:06:51,560 --> 00:06:54,400
Nice and centralized to everybody who's working on the project.

121
00:06:54,400 --> 00:06:58,800
And of course Linode has data centers, 11 of them, all around the world.

122
00:06:58,800 --> 00:07:03,000
Crazy fast connections between each data center because they are their own ISP.

123
00:07:03,000 --> 00:07:07,860
They are the largest independent cloud computing provider and they've been around since 2003.

124
00:07:07,860 --> 00:07:13,400
This file server idea that we had was a conversation and 10 minutes later we had the server deployed,

125
00:07:13,400 --> 00:07:16,620
15 minutes after that we had the application up and going.

126
00:07:16,620 --> 00:07:20,200
It took longer for the DNS to switch over than it did for us to get the entire stack

127
00:07:20,200 --> 00:07:21,260
up and running.

128
00:07:21,260 --> 00:07:25,400
And a lot of our Linode builds use their S3 compatible object storage on the back end

129
00:07:25,400 --> 00:07:29,300
so that way it grows with our needs without us having to tinker with it every single day.

130
00:07:29,300 --> 00:07:31,440
I love that about Linode.

131
00:07:31,440 --> 00:07:35,920
I can have systems that are one click deployed, super easy to manage, or rigs that I build

132
00:07:35,920 --> 00:07:38,640
from scratch with any distribution I like.

133
00:07:38,640 --> 00:07:41,220
So try it out, see what we've been talking about.

134
00:07:41,220 --> 00:07:46,040
It's just linode.com slash LAN to get that $100 in credit and support the show.

135
00:07:46,040 --> 00:07:52,840
Linode.com slash LAN.

136
00:07:52,840 --> 00:07:58,380
A seven-year-old privilege escalation bug that could lead to root access came to light

137
00:07:58,380 --> 00:07:59,720
this week.

138
00:07:59,720 --> 00:08:04,600
Kevin Backhouse, a member of the GitHub Security Lab, wrote an extensive summary on the GitHub

139
00:08:04,600 --> 00:08:09,800
blog and he's the one who discovered this flaw in Pollkit.

140
00:08:09,800 --> 00:08:14,040
Pollkit is a toolkit for defining and handling authorizations on your Linux box.

141
00:08:14,040 --> 00:08:19,560
It's used for allowing unprivileged processes to speak to privileged processes.

142
00:08:19,560 --> 00:08:23,600
And it's installed by default on most of your local Linux distributions.

143
00:08:23,600 --> 00:08:29,860
The vulnerability enables an unprivileged local user to get a root shell on the system.

144
00:08:29,860 --> 00:08:34,600
It's easy to exploit with just a few standard command line tools.

145
00:08:34,600 --> 00:08:39,540
It seems the bug was introduced seven years ago and first shipped with Pollkit version

146
00:08:39,540 --> 00:08:41,800
0.113.

147
00:08:41,800 --> 00:08:48,560
However, many of the most popular Linux distributions didn't ship the vulnerable version until a

148
00:08:48,560 --> 00:08:49,560
little more recently.

149
00:08:49,560 --> 00:08:53,480
The nuance there is a little boring, but depending on like if you're based on Debian or something,

150
00:08:53,480 --> 00:08:58,100
it took a little while for this to work its way into every distribution, but it's pretty

151
00:08:58,100 --> 00:08:59,600
much there now.

152
00:08:59,600 --> 00:09:03,000
Because it's been around for seven years, that's not so good.

153
00:09:03,000 --> 00:09:07,800
So if you're not familiar with Pollkit, think of it as something that's essentially playing

154
00:09:07,800 --> 00:09:09,480
the role of a judge on your system.

155
00:09:09,480 --> 00:09:14,320
Like trying to decide if something that requires higher privileges, like say creating a new

156
00:09:14,320 --> 00:09:18,820
user account for example, if it's allowed, if that creation should happen, if the access

157
00:09:18,820 --> 00:09:20,960
to those privileges should be allowed.

158
00:09:20,960 --> 00:09:24,560
For some requests, Pollkit will make an instant decision to allow or deny.

159
00:09:24,560 --> 00:09:27,780
And then for others, you've probably seen this on your system, it'll pop up a dialogue

160
00:09:27,780 --> 00:09:31,960
box so the administrator can grant authorization by entering their password.

161
00:09:31,960 --> 00:09:38,240
Clearly an important system service, and that's why this bug being around for seven years

162
00:09:38,240 --> 00:09:43,920
and being kind of simple to exploit, makes this a noticeable issue.

163
00:09:43,920 --> 00:09:47,920
And really the vulnerability is surprisingly easy to exploit.

164
00:09:47,920 --> 00:09:52,760
I mean you just need a few things you've already got like bash, the kill command, and dbus

165
00:09:52,760 --> 00:09:53,760
send.

166
00:09:53,760 --> 00:09:55,560
How do you go about it?

167
00:09:55,560 --> 00:10:00,460
Well it's triggered by starting a dbus send command trying to talk to Pollkit.

168
00:10:00,460 --> 00:10:06,360
But you kill it while Pollkit is still in the middle of processing your request.

169
00:10:06,360 --> 00:10:11,400
I mean we're talking small windows of milliseconds here to trigger the bug, but if you know where

170
00:10:11,400 --> 00:10:17,640
to poke and when, you can be well on your way to popping root on the box.

171
00:10:17,640 --> 00:10:22,080
So why does killing that dbus send command cause this authentication bypass?

172
00:10:22,080 --> 00:10:28,880
Well it comes down to just how Pollkit has been built and essentially the series of sequences

173
00:10:28,880 --> 00:10:33,520
it goes through when an authentication event is triggered.

174
00:10:33,520 --> 00:10:36,940
And it's really the timing of this that triggers the bug.

175
00:10:36,940 --> 00:10:40,520
That's what really matters with this one because it turns out that Pollkit asks the dbus daemon

176
00:10:40,520 --> 00:10:43,420
for the UID of the requesting process.

177
00:10:43,420 --> 00:10:48,200
And it makes that request multiple times using different code paths.

178
00:10:48,200 --> 00:10:52,920
While most of those code paths handle this error just fine, one of those code paths does

179
00:10:52,920 --> 00:10:54,000
not.

180
00:10:54,000 --> 00:10:58,120
So if you happen to kill the dbus send command early, it gets handled by the correct code

181
00:10:58,120 --> 00:11:01,100
path and the request is rejected.

182
00:11:01,100 --> 00:11:07,680
To trigger the vulnerable code path though, you have to disconnect at just the right moment.

183
00:11:07,680 --> 00:11:14,120
And because there are multiple processes involved here, timing of that right moment varies from

184
00:11:14,120 --> 00:11:15,800
one run to the next.

185
00:11:15,800 --> 00:11:20,000
That's why it usually takes a few tries for the exploit to succeed.

186
00:11:20,000 --> 00:11:23,200
But with a little scripting help, that's no problem.

187
00:11:23,200 --> 00:11:29,220
This is a fun one to read up on and the summary on the GitHub blog that Kevin Backhouse did

188
00:11:29,220 --> 00:11:30,220
is great.

189
00:11:30,220 --> 00:11:33,360
It walks you through his thought process.

190
00:11:33,360 --> 00:11:36,360
It walks you through the different distributions that are impacted.

191
00:11:36,360 --> 00:11:39,700
Like if you're on Ubuntu 18.04 right now, you're not affected by this.

192
00:11:39,700 --> 00:11:42,960
But if you're on 20.04, you are.

193
00:11:42,960 --> 00:11:45,280
So there's some nuance to it.

194
00:11:45,280 --> 00:11:47,660
But the entire journey is fascinating.

195
00:11:47,660 --> 00:11:52,040
And every now and then a couple of times a year, somebody takes the time to really do

196
00:11:52,040 --> 00:11:56,040
a proper write up on how they discovered a bug like this.

197
00:11:56,040 --> 00:11:57,760
And this is one of those examples.

198
00:11:57,760 --> 00:12:00,520
It's a great read and it's an educational read too.

199
00:12:00,520 --> 00:12:05,520
And really, it's just a pretty good primer on Polkit in general.

200
00:12:05,520 --> 00:12:10,840
And hey, at least we finally have a good reason for sticking with 18.04 in the studio.

201
00:12:10,840 --> 00:12:14,360
Of course, the relevant distribution patches are all going out right now.

202
00:12:14,360 --> 00:12:16,400
So make sure you get updated.

203
00:12:16,400 --> 00:12:20,600
Another area of development that Wes and I have followed for a while now is real time

204
00:12:20,600 --> 00:12:22,120
support in the Linux kernel.

205
00:12:22,120 --> 00:12:28,320
In fact, when we had a conversation with the Mars helicopter operations lead from JPL,

206
00:12:28,320 --> 00:12:35,360
he relayed to us that one of the most important developments in Linux for use in space applications

207
00:12:35,360 --> 00:12:37,760
is real time kernel support.

208
00:12:37,760 --> 00:12:40,560
So we've been kind of following real time support for a while.

209
00:12:40,560 --> 00:12:44,620
It seems maybe the news in that area isn't so good.

210
00:12:44,620 --> 00:12:49,640
There has been talk over 2020 about actually getting that functionality merged into the

211
00:12:49,640 --> 00:12:53,420
Linux kernel, but really hasn't materialized and hasn't happened.

212
00:12:53,420 --> 00:12:58,440
And now it looks like due to a lack of funding, we're at risk of some of that code never getting

213
00:12:58,440 --> 00:13:00,320
patched into the Linux kernel.

214
00:13:00,320 --> 00:13:06,040
The preempt RT patch set is around 200 out of tree patches that kind of have to be maintained

215
00:13:06,040 --> 00:13:07,040
on the side.

216
00:13:07,040 --> 00:13:13,400
And as you might imagine, with a fast moving kernel, that is not an easy task.

217
00:13:13,400 --> 00:13:19,200
What we learned recently, however, is an update on the status of those mainlining efforts.

218
00:13:19,200 --> 00:13:25,520
And unfortunately, that status is that although the preempt RT patch set has made some significant

219
00:13:25,520 --> 00:13:30,200
strides, right now it's stalled due to a funding gap.

220
00:13:30,200 --> 00:13:35,880
And that funding gap needs to be closed if mainlining is ever going to happen.

221
00:13:35,880 --> 00:13:40,240
And as you know, Chris, there are more and more important applications that really would

222
00:13:40,240 --> 00:13:44,280
like to see this code both maintained and mainlined.

223
00:13:44,280 --> 00:13:48,240
Unfortunate to hear this, Wes, I've always thought of real time support in the context

224
00:13:48,240 --> 00:13:52,760
of media production because it's something we talk about when it comes to audio latency.

225
00:13:52,760 --> 00:13:58,000
But it wasn't until we talked to Tim Kenam and he helped me understand how necessary

226
00:13:58,000 --> 00:14:00,320
real time is for certain industrial uses.

227
00:14:00,320 --> 00:14:01,440
Yeah, really.

228
00:14:01,440 --> 00:14:05,960
There are applications that just aren't suitable to deploy Linux in if you don't have these

229
00:14:05,960 --> 00:14:08,720
kinds of real time guarantees.

230
00:14:08,720 --> 00:14:15,240
We learned about the funding gap from a presentation by Thomas Gleixner at an ELISA, or Enabling

231
00:14:15,240 --> 00:14:18,720
Linux in Safety Applications Summit last month.

232
00:14:18,720 --> 00:14:19,720
Oh, yes.

233
00:14:19,720 --> 00:14:20,720
Yes.

234
00:14:20,720 --> 00:14:23,800
That's a group that the Linux Foundation put together back in February of 2019.

235
00:14:23,800 --> 00:14:28,040
A bunch of different companies that are interested in using Linux in their day to day operations

236
00:14:28,040 --> 00:14:29,040
and in their equipment.

237
00:14:29,040 --> 00:14:33,720
They have a GitHub page even, where they have some code specifically around automotive and

238
00:14:33,720 --> 00:14:36,120
other areas and some documentation.

239
00:14:36,120 --> 00:14:40,520
I think we've just got to hope that one or multiple of these companies hear Thomas's

240
00:14:40,520 --> 00:14:48,400
cry and step up to help.

241
00:14:48,400 --> 00:14:50,080
Linux.ting.com.

242
00:14:50,080 --> 00:14:52,360
Are you tired of fussing with mobile?

243
00:14:52,360 --> 00:14:56,320
Would you like your cellular plans to be a solved problem?

244
00:14:56,320 --> 00:14:57,920
Ting is mobile done better.

245
00:14:57,920 --> 00:15:01,760
Break out of the boring carrier duopoly and try Ting.

246
00:15:01,760 --> 00:15:05,880
Go to linux.ting.com and get $25 off.

247
00:15:05,880 --> 00:15:09,320
Ting has some great plans for individuals and for families.

248
00:15:09,320 --> 00:15:14,720
Their new set 12 plan includes 12 gigs of data, unlimited talk and text, all for just

249
00:15:14,720 --> 00:15:17,040
$35 a month.

250
00:15:17,040 --> 00:15:19,960
They have lots of different plans though, so if you need two gigs or 20 gigs, there's

251
00:15:19,960 --> 00:15:21,800
a perfect Ting plan for you.

252
00:15:21,800 --> 00:15:27,720
And every line comes with Ting's award winning customer service, multiple nationwide LTE

253
00:15:27,720 --> 00:15:33,300
and 5G networks for you to choose from, and you never have to worry about contracts.

254
00:15:33,300 --> 00:15:34,600
It's simple to switch to Ting.

255
00:15:34,600 --> 00:15:38,180
Pretty much any phone will work because of their wide network support, which means you

256
00:15:38,180 --> 00:15:42,640
pick the network that works best in your area and your phone's likely already compatible.

257
00:15:42,640 --> 00:15:46,880
Just head to linux.ting.com to check your current phone, create an account and pick

258
00:15:46,880 --> 00:15:49,080
a plan that's just right for you.

259
00:15:49,080 --> 00:15:52,440
Once you put in the info for your SIM, get all that stuff figured out, Ting will send

260
00:15:52,440 --> 00:15:55,640
you a SIM card, you pop in your device and you're good to go.

261
00:15:55,640 --> 00:15:59,640
Or maybe it's time to get a brand new device, or maybe something simpler.

262
00:15:59,640 --> 00:16:04,800
Either way, cutting your phone bill in half has never been easier with Ting's brand new

263
00:16:04,800 --> 00:16:05,800
plans.

264
00:16:05,800 --> 00:16:10,440
The next generation of Ting Mobile is here, and I can tell you as a long time Ting customer,

265
00:16:10,440 --> 00:16:12,920
there's never been a better time to try it.

266
00:16:12,920 --> 00:16:14,320
So try it and save.

267
00:16:14,320 --> 00:16:17,520
Go to linux.ting.com.

268
00:16:17,520 --> 00:16:23,720
That's linux.ting.com.

269
00:16:23,720 --> 00:16:27,800
Hello System 0.5 has been released.

270
00:16:27,800 --> 00:16:42,240
A macOS inspired free PSD desktop for those looking to leave the Mac.

271
00:16:42,240 --> 00:16:47,080
Once upon a time there was the Macintosh, a friendly machine designed by geniuses like

272
00:16:47,080 --> 00:16:50,360
Steve Jobs, Bill Atkinson and Andy Hertzfeld.

273
00:16:50,360 --> 00:16:54,260
Over time the geniuses went away and things went downhill.

274
00:16:54,260 --> 00:16:58,200
Going back to some of the original design philosophies of the early Macintosh, the Mac

275
00:16:58,200 --> 00:17:01,300
was reborn with the introduction of the iMac.

276
00:17:01,300 --> 00:17:06,720
With macOS 10 it went on to become the most powerful yet intuitive workstation with a

277
00:17:06,720 --> 00:17:10,400
user interface so slick you wanted to lick it.

278
00:17:10,400 --> 00:17:12,020
Then genius left.

279
00:17:12,020 --> 00:17:16,440
What had started simple and pleasant is again turning complicated and messy.

280
00:17:16,440 --> 00:17:19,600
They say it is a system being designed for mere mortals.

281
00:17:19,600 --> 00:17:23,920
That was Simon Peter and they're working on an open source system that is welcoming to

282
00:17:23,920 --> 00:17:28,760
switchers from the Mac who have become disenfranchised with the direction of the platform.

283
00:17:28,760 --> 00:17:30,760
And from there it only got worse.

284
00:17:30,760 --> 00:17:36,320
With so-called platform security that in reality secures nothing but their own revenue stream,

285
00:17:36,320 --> 00:17:38,880
they are not helping you, the user.

286
00:17:38,880 --> 00:17:42,600
They're locked in and locked down is getting worse and worse.

287
00:17:42,600 --> 00:17:47,640
You are no longer free to own your devices and to do with them as you like.

288
00:17:47,640 --> 00:17:51,280
It feels more like you are a guest on devices rented to you.

289
00:17:51,280 --> 00:17:58,040
Now it is 0.5 but Wes and I decided to give Hello System a try and it's definitely clean

290
00:17:58,040 --> 00:17:59,040
and minimal.

291
00:17:59,040 --> 00:18:00,260
That's for sure.

292
00:18:00,260 --> 00:18:03,960
But you know if you're looking for something based on FreeBSD and you want a desktop that

293
00:18:03,960 --> 00:18:09,820
kind of gets out of your way, they're onto something here and it very much is reminiscent

294
00:18:09,820 --> 00:18:14,720
of the early macOS design UI, very early versions of macOS.

295
00:18:14,720 --> 00:18:18,300
You mean before it became more of a mobile inspired operating system?

296
00:18:18,300 --> 00:18:22,160
You could say that, in fact that's sort of what guides their design decisions.

297
00:18:22,160 --> 00:18:27,560
A desktop is not a mobile phone, hence let's not water down our user interfaces with design

298
00:18:27,560 --> 00:18:30,880
elements made for anything else but the mouse.

299
00:18:30,880 --> 00:18:33,760
And I can appreciate their perspective on this.

300
00:18:33,760 --> 00:18:38,640
You know at first glance you're like okay well why do we need another desktop environment,

301
00:18:38,640 --> 00:18:43,520
this is just one of many and I could theme an existing Qt environment to look like a

302
00:18:43,520 --> 00:18:46,640
Mac because this is all based on Qt as well from what I could see.

303
00:18:46,640 --> 00:18:52,160
And I kind of agree until I started reading into their ideas and I started kind of processing

304
00:18:52,160 --> 00:18:53,800
some of the project's goals.

305
00:18:53,800 --> 00:18:56,800
Let's talk about the goals of Hello System.

306
00:18:56,800 --> 00:19:02,640
I never quite remember whether it was Leonardo da Vinci or Steve Jobs who said simplicity

307
00:19:02,640 --> 00:19:05,000
is the ultimate sophistication.

308
00:19:05,000 --> 00:19:08,040
But in any case I wholeheartedly agree.

309
00:19:08,040 --> 00:19:11,600
Setting the language of the keyboard should be no more complicated than clicking on the

310
00:19:11,600 --> 00:19:13,380
name of the language.

311
00:19:13,380 --> 00:19:17,680
One click or even better the keyboard should just tell the computer its language, zero

312
00:19:17,680 --> 00:19:19,080
clicks.

313
00:19:19,080 --> 00:19:20,920
Less is more.

314
00:19:20,920 --> 00:19:23,620
Every pixel on the screen should serve a purpose.

315
00:19:23,620 --> 00:19:27,640
Every animation in the user interface should convey sense.

316
00:19:27,640 --> 00:19:30,520
Simple yet powerful is where we want to be.

317
00:19:30,520 --> 00:19:35,880
Our objective is to be both easy to use for mere mortals yet powerful under the hood for

318
00:19:35,880 --> 00:19:37,440
advanced users.

319
00:19:37,440 --> 00:19:41,560
Simon goes on to talk about supporting old Macs to bring life to old iMacs that have

320
00:19:41,560 --> 00:19:47,120
been abandoned by Apple as they age out or as they transition to their own platform.

321
00:19:47,120 --> 00:19:52,000
But I think what resonated with me was the idea of creating a welcoming user-friendly

322
00:19:52,000 --> 00:19:53,700
free BSD desktop environment.

323
00:19:53,700 --> 00:19:58,360
Not that there's a few out there of course, but this seems to actually have some real

324
00:19:58,360 --> 00:20:00,560
momentum behind it.

325
00:20:00,560 --> 00:20:05,760
They have a very well-defined project strategy, a well-defined goal, and very clear ideas

326
00:20:05,760 --> 00:20:07,440
of what goes in this and what doesn't.

327
00:20:07,440 --> 00:20:12,480
I think it's safe to say it's still early days, but yeah, I was kind of impressed with

328
00:20:12,480 --> 00:20:14,760
how well everything hung together.

329
00:20:14,760 --> 00:20:20,320
You can tell that there is a grand unified dream here somewhere, even if all the pieces

330
00:20:20,320 --> 00:20:21,800
aren't quite there yet.

331
00:20:21,800 --> 00:20:25,320
You know, if you're comfortable with free BSD or you wanted to experiment with free

332
00:20:25,320 --> 00:20:27,600
BSD, it is one version behind at this point.

333
00:20:27,600 --> 00:20:33,040
But if you like minimal Linux desktop environments like Xfce or LXQt, I think this would be

334
00:20:33,040 --> 00:20:34,840
appealing to you.

335
00:20:34,840 --> 00:20:39,480
And I like their long-term direction with this thing, so I actually thought I'd come

336
00:20:39,480 --> 00:20:40,920
on here and be really snarky.

337
00:20:40,920 --> 00:20:43,360
I thought that would be my take of this thing.

338
00:20:43,360 --> 00:20:46,480
Because, you know, another thing that looks like the Mac.

339
00:20:46,480 --> 00:20:52,240
But I like the idea of specifically creating a landing place for these Mac users who are

340
00:20:52,240 --> 00:20:54,000
getting frustrated with Apple.

341
00:20:54,000 --> 00:20:57,020
It's not everybody, you know, and it may not be millions of people.

342
00:20:57,020 --> 00:21:01,880
But to have some kind of landing pad that recreates a familiar Unix environment and

343
00:21:01,880 --> 00:21:06,240
has a familiar design ethos, it kind of makes sense.

344
00:21:06,240 --> 00:21:08,740
These disgruntled, I'm trying to think of another word for it, Wes, but you know, these

345
00:21:08,740 --> 00:21:13,600
disgruntled Mac users can go buy a ThinkPad and they can throw a hello system on there

346
00:21:13,600 --> 00:21:14,860
and be perfectly happy.

347
00:21:14,860 --> 00:21:16,880
Are the majority of them going to do it?

348
00:21:16,880 --> 00:21:17,880
No.

349
00:21:17,880 --> 00:21:21,400
But it doesn't seem like that much more of a stretch than trying to design an environment

350
00:21:21,400 --> 00:21:23,740
that's welcoming to Windows users.

351
00:21:23,740 --> 00:21:28,080
And perhaps it might be a catalyst for getting some newer hardware support in that free BSD

352
00:21:28,080 --> 00:21:29,080
kernel.

353
00:21:29,080 --> 00:21:30,080
I don't think that would hurt.

354
00:21:30,080 --> 00:21:34,520
When I first tried this out, Wes, I tried it in my VM and the results were mixed.

355
00:21:34,520 --> 00:21:36,480
So then I went and moved it over to my ThinkPad.

356
00:21:36,480 --> 00:21:39,560
And this totally makes sense, but it is a little confusing on the ThinkPad.

357
00:21:39,560 --> 00:21:42,640
They've designed it to use the command key like on the Mac.

358
00:21:42,640 --> 00:21:45,240
So to close a window, it's command W or command Q.

359
00:21:45,240 --> 00:21:46,720
I see what they're doing.

360
00:21:46,720 --> 00:21:50,660
I mean, it totally makes sense, but it was a little trippy on the ThinkPad to try to

361
00:21:50,660 --> 00:21:51,760
figure that out.

362
00:21:51,760 --> 00:21:53,980
They're just really getting started here.

363
00:21:53,980 --> 00:21:56,960
They're tweaking the look, they're tweaking the theme, they're fixing bugs.

364
00:21:56,960 --> 00:22:00,980
They're getting things like when you close the notebook lid, it actually goes to sleep

365
00:22:00,980 --> 00:22:01,980
by default.

366
00:22:01,980 --> 00:22:06,680
Like that's just been turned on now and they're kind of nailing down those kinds of basic

367
00:22:06,680 --> 00:22:11,180
fundamentals and digging into this project just a little bit to see who's involved.

368
00:22:11,180 --> 00:22:15,680
I noticed app image developer Pro Bono is involved with this project.

369
00:22:15,680 --> 00:22:19,560
And I think that gives it a good shot, like somebody who's got some real credentials and

370
00:22:19,560 --> 00:22:21,960
has shipped code that people are actually using.

371
00:22:21,960 --> 00:22:26,240
But on top of that, it makes me think it could be a great way to distribute applications

372
00:22:26,240 --> 00:22:30,340
that are self-contained on the system a lot like the Mac does.

373
00:22:30,340 --> 00:22:34,000
That could be a clever use of app image in a system like this that's integrated pretty

374
00:22:34,000 --> 00:22:38,080
core to the overall method to get software on and off the box.

375
00:22:38,080 --> 00:22:42,660
I actually don't know if that's the case because the Wi-Fi just totally did not work on my

376
00:22:42,660 --> 00:22:46,760
ThinkPad, so I didn't add or remove any software during my test.

377
00:22:46,760 --> 00:22:50,320
But top-to-bottom integration with app image since Pro Bono is involved just seems like

378
00:22:50,320 --> 00:22:52,000
an obvious direction this thing could go.

379
00:22:52,000 --> 00:22:56,960
With all these small independent desktop efforts, I think it's kind of important to think about

380
00:22:56,960 --> 00:22:58,840
really what are the goals here?

381
00:22:58,840 --> 00:23:03,160
And yeah, it'd be pretty neat if a hello system really took off and that's what we were doing

382
00:23:03,160 --> 00:23:05,520
the show on, say, or using on our laptops.

383
00:23:05,520 --> 00:23:07,360
It seems kind of like a long shot though.

384
00:23:07,360 --> 00:23:12,400
It does, at least based on all the other projects that have tried the very same.

385
00:23:12,400 --> 00:23:18,040
But regardless of that, it's interesting just as an academic, a philosophical, or even an

386
00:23:18,040 --> 00:23:24,720
artistic exercise to express possible visions of what the desktop could or may be.

387
00:23:24,720 --> 00:23:28,760
And you never know, there might be some hello system features that make it into a future

388
00:23:28,760 --> 00:23:31,560
Linux desktop or even the Mac.

389
00:23:31,560 --> 00:23:36,360
Yeah, it doesn't necessarily have to have millions and millions of users to move the

390
00:23:36,360 --> 00:23:40,960
needle and kind of be a vote for a way that computing should work.

391
00:23:40,960 --> 00:23:46,680
It kind of acts as a counterbalance to mobilize every UI element possible.

392
00:23:46,680 --> 00:23:48,840
So it's kind of great just in that regard.

393
00:23:48,840 --> 00:23:49,840
There's always fun developments.

394
00:23:49,840 --> 00:23:55,080
It's one of the things I love about free software and open source operating systems is you can

395
00:23:55,080 --> 00:24:00,600
go back in time if you want and go check out the classic days of macOS as if you're going

396
00:24:00,600 --> 00:24:02,200
to build it again today.

397
00:24:02,200 --> 00:24:05,480
And we love following that kind of stuff and all of the other things that matter in the

398
00:24:05,480 --> 00:24:07,700
world of Linux and open source.

399
00:24:07,700 --> 00:24:12,440
So check out linuxactionnews.com slash subscribe for all the ways to get new episodes of this

400
00:24:12,440 --> 00:24:13,520
here show.

401
00:24:13,520 --> 00:24:17,680
And linuxactionnews.com slash contact for ways to keep in touch.

402
00:24:17,680 --> 00:24:24,160
Jupiter Garage, the bearded tux joggers have become an audience favorite.

403
00:24:24,160 --> 00:24:27,120
Go check them out at JupiterGarage.com.

404
00:24:27,120 --> 00:24:32,280
We'll be back next Monday with our weekly take on the latest Linux and open source news.

405
00:24:32,280 --> 00:24:52,880
Thanks for joining us and we will see you next week.

