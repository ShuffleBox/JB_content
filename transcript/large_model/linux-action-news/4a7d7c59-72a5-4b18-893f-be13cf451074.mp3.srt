1
00:00:00,000 --> 00:00:16,280
Hello, and welcome to Linux Action News, our weekly take on Linux and the open source world.

2
00:00:16,280 --> 00:00:21,200
This is episode 106, recorded on May 19th, 2019. I'm Chris.

3
00:00:21,200 --> 00:00:22,200
And I'm Joe.

4
00:00:22,200 --> 00:00:26,600
Hello, Joe. Good to be connected with you again. This week, we're starting out with

5
00:00:26,600 --> 00:00:33,640
a story that is maybe a theme of 2019. And that is the side channel attacks specifically

6
00:00:33,640 --> 00:00:38,200
on the Intel processors. And another one has been discovered this week that also impacts

7
00:00:38,200 --> 00:00:39,480
Linux.

8
00:00:39,480 --> 00:00:45,120
Yet another side channel speculative execution bug in Intel hardware. This is starting to

9
00:00:45,120 --> 00:00:49,160
get a bit old, isn't it? This time they're calling it zombie load.

10
00:00:49,160 --> 00:00:53,920
Yeah, the idea is that like it gets zombie information, it resurrects information from

11
00:00:53,920 --> 00:01:01,240
the dead. The technical name for it is MDS, micro architectural data sampling. I guess

12
00:01:01,240 --> 00:01:07,560
zombies are way, way cooler than micro architectural data sampling. Fair enough.

13
00:01:07,560 --> 00:01:12,200
It's actually a combination of three different vulnerabilities. And Red Hat have got a great

14
00:01:12,200 --> 00:01:17,960
write up of this, and some videos, they've got a kind of high level video that explains

15
00:01:17,960 --> 00:01:24,040
it with metaphors, and then a really deep dive video. So very impressed with Red Hat

16
00:01:24,040 --> 00:01:27,680
for this. I suppose that's kind of their job. But either way, that's my go to on this if

17
00:01:27,680 --> 00:01:28,680
you want to learn all about it.

18
00:01:28,680 --> 00:01:33,480
It is actually kind of interesting that Red Hat has one of the best takes for different

19
00:01:33,480 --> 00:01:36,960
levels of understanding. We'll link to a couple of different things in the show notes that

20
00:01:36,960 --> 00:01:42,580
are worth checking out, including their breakdown of the differences of MDS, say versus Meltdown

21
00:01:42,580 --> 00:01:46,740
or Spectre. But there's another aspect to the story that I think is fascinating to chat

22
00:01:46,740 --> 00:01:52,900
about a little bit, Joe, and that is, number one, you're not really fully safe, even after

23
00:01:52,900 --> 00:01:58,440
all the microcode updates and whatnot, unless you disable hyperthreading. And number two,

24
00:01:58,440 --> 00:02:02,920
it's really something that shared hosting providers or cloud providers that have multi

25
00:02:02,920 --> 00:02:07,520
tenant users on there need to worry about more so than people that are on premises or

26
00:02:07,520 --> 00:02:13,320
on a desktop PC. Not that those systems aren't affected, but just simply, it's a lot more

27
00:02:13,320 --> 00:02:16,920
of a risk when you have untrusted users on one box.

28
00:02:16,920 --> 00:02:21,760
Yeah, and if you've got six physical cores and no hyperthreading like me on my i5, then

29
00:02:21,760 --> 00:02:26,960
you're completely safe. But yeah, either way, it's not a huge deal if you're just using

30
00:02:26,960 --> 00:02:31,980
a personal system and you're completely in control of it. But yeah, those shared cloud

31
00:02:31,980 --> 00:02:35,080
hosting environments, that's where this is really going to cause a problem.

32
00:02:35,080 --> 00:02:41,620
Yeah, and some of the numbers are pretty dramatic. When you apply the fixes and you disable hyperthreading,

33
00:02:41,620 --> 00:02:48,040
you can get to nearly a 40% reduction in performance. And those are Intel's numbers. So those if

34
00:02:48,040 --> 00:02:51,740
anything may be a little conservative.

35
00:02:51,740 --> 00:02:56,400
And that's why Red Hat is saying that you really have to look at your specific use case,

36
00:02:56,400 --> 00:03:03,600
your specific workload, and do the risk assessment. Is it worth that performance impact to mitigate

37
00:03:03,600 --> 00:03:07,620
the risk? And in a lot of cases, it probably isn't.

38
00:03:07,620 --> 00:03:11,820
This really does seem like a tricky one for multi-tenant systems. And you kind of wonder

39
00:03:11,820 --> 00:03:17,900
like long term, maybe this is going to sell some AMD systems because they're immune to

40
00:03:17,900 --> 00:03:22,240
the MDS vulnerabilities. And all rise in box is looking better and better for that desktop,

41
00:03:22,240 --> 00:03:24,640
Joe. I got to say, they're making it really appealing these days.

42
00:03:24,640 --> 00:03:29,300
Yeah, I mean, the value for money proposition is better. And now if the security proposition

43
00:03:29,300 --> 00:03:33,840
is better, then it feels like a no brainer, really. I've always gone Intel because I don't

44
00:03:33,840 --> 00:03:37,560
know really, it's the name you know, you know, you're not gonna have any problems with Linux

45
00:03:37,560 --> 00:03:43,440
on it. But I hear great things about Ryzen. And really, the data center is where this

46
00:03:43,440 --> 00:03:49,160
matters. And the Xeons are just absolutely dominating there. Maybe this is excellent

47
00:03:49,160 --> 00:03:54,840
news for AMD. But that said, some of the older side channel attacks, you know, they're still

48
00:03:54,840 --> 00:04:00,400
vulnerable to that. And it is conceivable that there will be future ones. I mean, it's

49
00:04:00,400 --> 00:04:06,040
almost certain, isn't it that we're going to have future potential vulnerabilities for

50
00:04:06,040 --> 00:04:11,480
both Intel and AMD. I remember talking about that at the time that Spectre and Meltdown

51
00:04:11,480 --> 00:04:15,880
came out, you know, around Christmas, we knew that was going to be just the start of it.

52
00:04:15,880 --> 00:04:20,700
Mm hmm. Yeah, sure. Yep. And we called it on TechSnap too. We said this is 2019 is going

53
00:04:20,700 --> 00:04:25,240
to be the year of speculative execution and side channel attacks. It's, it's a pretty

54
00:04:25,240 --> 00:04:31,240
handy feature that is right for the picking if you can get a process on the local box.

55
00:04:31,240 --> 00:04:35,220
And it was part of Intel's secret sauce. Now AMD likes to boast that well, we designed

56
00:04:35,220 --> 00:04:39,080
it with security in mind. You know, that'd be that'd be what it is. I'm sure future Intel

57
00:04:39,080 --> 00:04:43,360
processors will work this out. But in the meantime, I just can't get over that 40% number.

58
00:04:43,360 --> 00:04:48,400
I can't tell if that's if that's real or not. And I'd love to get some information from

59
00:04:48,400 --> 00:04:52,440
the audience that has hands on with this and data centers. Just let me know at Chris LAS,

60
00:04:52,440 --> 00:04:57,880
are you seeing performance impacts from these fixes? And are they as dramatic or worse even

61
00:04:57,880 --> 00:05:03,320
than 40%? I'd love to just collect some anecdotal evidence from the audience from various sources

62
00:05:03,320 --> 00:05:08,600
because that's that's a huge story if it's true. There's also another topic I'm really,

63
00:05:08,600 --> 00:05:13,360
really interested in getting feedback. That's AMP. Now, I was a couple of months ago, we

64
00:05:13,360 --> 00:05:17,240
talked about this new committee that was being set up to oversee AMP, you'll have to forgive

65
00:05:17,240 --> 00:05:22,200
my brief summary of it. And we weren't sure what that would result in. But it seems like

66
00:05:22,200 --> 00:05:26,280
maybe we're seeing some of the first fruits of that committee's work.

67
00:05:26,280 --> 00:05:32,560
Yeah, AMP being accelerated mobile pages, which Google are very much in control of even

68
00:05:32,560 --> 00:05:37,760
though they're trying to kind of spin it that they're not. And this makes websites load

69
00:05:37,760 --> 00:05:41,480
really quickly on mobile, specifically on Chrome on Android.

70
00:05:41,480 --> 00:05:46,200
Right. And from a publisher standpoint, you get featured in their carousel of search results

71
00:05:46,200 --> 00:05:51,640
with a live preview. So you get essentially top tier placement, like what you would get

72
00:05:51,640 --> 00:05:53,040
for a Google ad placement.

73
00:05:53,040 --> 00:05:58,120
Yeah, and the performance is amazing. It's really, really fast for the user. But one

74
00:05:58,120 --> 00:06:04,560
of the problems that publishers have is that the URL always shows as google.com slash whatever

75
00:06:04,560 --> 00:06:09,560
slash AMP, and then the URL of the page. And that's a bit confusing for people, you know,

76
00:06:09,560 --> 00:06:13,720
you think you read in TechCrunch or the register or whatever, but in fact, you read in something

77
00:06:13,720 --> 00:06:15,200
that's on a Google URL.

78
00:06:15,200 --> 00:06:19,040
Well, and publishers hate it because you're not sharing their URL, you're sharing a Google

79
00:06:19,040 --> 00:06:22,920
URL. It doesn't have their brand. It doesn't link directly to them. It's hard to track

80
00:06:22,920 --> 00:06:26,760
metrics. They hate it. Yeah. And fair enough. It's their content, I suppose. Fair enough.

81
00:06:26,760 --> 00:06:31,840
Well, yeah. And so the solution to this is just obfuscate it, just hide the fact that

82
00:06:31,840 --> 00:06:35,680
it's on Google servers and pretend that it's coming from the actual source.

83
00:06:35,680 --> 00:06:42,240
Yep. This is a thing. It's called signed exchange. And it is another Google initiative to solve

84
00:06:42,240 --> 00:06:47,160
a problem that was caused by Google AMP. So if you're not familiar, just a super brief

85
00:06:47,160 --> 00:06:52,680
overview. The reason AMP is so dang fast is because it's all coming from Google server.

86
00:06:52,680 --> 00:06:57,760
Google pre-renders the page, caches everything. It's all prefetched. And then they deliver

87
00:06:57,760 --> 00:07:03,600
you a fully realized result immediately. Of course, the issue is, is then you're sending

88
00:07:03,600 --> 00:07:09,200
around Google links instead of website links. You lose that idea and that branding. So Google

89
00:07:09,200 --> 00:07:13,760
figured, well, what about this signed exchange idea that we have? It's a Google technology

90
00:07:13,760 --> 00:07:19,040
that provides a way to prove the source and origin of a web document. You can use signed

91
00:07:19,040 --> 00:07:23,820
exchange to determine a page's original publisher, no matter where that document is being hosted

92
00:07:23,820 --> 00:07:30,220
at currently. A publisher can sign an HTTP request response pair with their domain certificate.

93
00:07:30,220 --> 00:07:34,760
So it's their cert that's signed. Thus, it generates a signed exchange and it can be

94
00:07:34,760 --> 00:07:40,160
served to browsers similar to the way a web page is now, but it's served from Google's

95
00:07:40,160 --> 00:07:48,520
servers with your domain name, even though it's from their domain, but it's using your

96
00:07:48,520 --> 00:07:56,280
SSL key to prove that it's legitimately from you, even though it's from Google.

97
00:07:56,280 --> 00:08:00,360
This makes me feel very, very uncomfortable because at least those who are tech savvy

98
00:08:00,360 --> 00:08:05,600
can know, all right, hang on. This is an AMP page that is hosted on Google servers because

99
00:08:05,600 --> 00:08:12,840
you can technically host an AMP page on your own server and it will be fast and everything,

100
00:08:12,840 --> 00:08:16,560
but obviously the Google cache is going to be amazingly fast. So that's what a lot of

101
00:08:16,560 --> 00:08:17,560
the publishers go for.

102
00:08:17,560 --> 00:08:22,200
Oh, it's a slippery slope, my friend, because it's not only fast, but it uses less data.

103
00:08:22,200 --> 00:08:27,760
So it's cheaper for mobile users. It uses less CPU because the client isn't doing the

104
00:08:27,760 --> 00:08:33,360
rendering so it saves battery life and you get that carousel placement. And now you take

105
00:08:33,360 --> 00:08:37,440
it a step further. This is a Google technology. It's the signed exchange thing is something

106
00:08:37,440 --> 00:08:41,840
they're proposing. I mean, they're proposing as a standard working with other people. So

107
00:08:41,840 --> 00:08:46,760
it's something anybody could theoretically adopt except for Safari and Firefox have signaled

108
00:08:46,760 --> 00:08:54,720
they have no intention of supporting it. So what you have is AMP content being served

109
00:08:54,720 --> 00:08:58,840
up by Google servers that only works in Google Chrome.

110
00:08:58,840 --> 00:09:02,800
I think the European commission might be having a word with them about this shortly if they're

111
00:09:02,800 --> 00:09:03,800
not careful.

112
00:09:03,800 --> 00:09:09,800
Man, this does not seem like the direction Google wants to go with this. I kind of get

113
00:09:09,800 --> 00:09:14,560
it and I appreciate that signed exchange actually is pretty clever technology that they're trying

114
00:09:14,560 --> 00:09:20,400
to establish as a standard and Firefox could change its position. That's a really tough

115
00:09:20,400 --> 00:09:26,040
spot for Mozilla, though, because they lose either way. Because if they enable Google,

116
00:09:26,040 --> 00:09:31,960
then they encourage more lock in. But if they don't support this, they're essentially left

117
00:09:31,960 --> 00:09:37,120
out of a game that is a lot larger than they can ever hope to be. That's a rock in a hard

118
00:09:37,120 --> 00:09:38,120
place for Firefox.

119
00:09:38,120 --> 00:09:41,920
Well, except that if you're using Firefox as your primary browser, then you won't even

120
00:09:41,920 --> 00:09:46,280
really know about this. And so you won't see the benefits of it. But you won't know what

121
00:09:46,280 --> 00:09:47,280
you're missing.

122
00:09:47,280 --> 00:09:53,120
Yeah. And I suppose it's possible to that Firefox could support this later on. It seems

123
00:09:53,120 --> 00:09:56,140
that the publishers don't like this very much. And that was something that the committee

124
00:09:56,140 --> 00:10:00,760
has also been very focused on. I'll put some supporting links in the show notes for that.

125
00:10:00,760 --> 00:10:07,320
It's an interesting position. So Google is trying to drive this with a lot of energy.

126
00:10:07,320 --> 00:10:11,480
And there's no real clear demand on end user side. And there's no real clear demand on

127
00:10:11,480 --> 00:10:14,520
publisher side. So who is it that wants this?

128
00:10:14,520 --> 00:10:19,360
Well, Google, obviously, they want to have more control. I mean, we both tweeted about

129
00:10:19,360 --> 00:10:24,800
that purchase history thing this week, where you can see everything you've ever bought

130
00:10:24,800 --> 00:10:29,380
online, as long as you got the receipt going into your Gmail. And it just backs up the

131
00:10:29,380 --> 00:10:33,720
obvious fact that, of course, Google knows everything you're buying if your receipts

132
00:10:33,720 --> 00:10:35,000
all go through Gmail.

133
00:10:35,000 --> 00:10:39,840
Yeah, of course. Of course, they're indexing and categorizing that. We knew that. I actually

134
00:10:39,840 --> 00:10:43,800
kind of appreciate that they're willing to tell me that. In a way, at least if they're

135
00:10:43,800 --> 00:10:50,400
transparent, then I can make an informed decision. So in a way, I respect that. It was alarming

136
00:10:50,400 --> 00:10:54,360
to go through that because I was thinking like they'd have anything I bought on a Google

137
00:10:54,360 --> 00:10:59,480
account. No, no, no, no, no. Anything that's ever emailed my Gmail account a receipt, an

138
00:10:59,480 --> 00:11:06,240
Uber ride, a DoorDash, buying something with Stripe out in the real world, Google has it

139
00:11:06,240 --> 00:11:07,240
on a list.

140
00:11:07,240 --> 00:11:10,240
Suddenly, you realized how many sandwiches you'd be buying.

141
00:11:10,240 --> 00:11:15,200
Yeah, a lot of sandwiches, Joe. So maybe I should cut back and I could just use the Google

142
00:11:15,200 --> 00:11:18,560
list to keep track of things.

143
00:11:18,560 --> 00:11:22,680
But it really does just come down to Google wanting complete control over all the data

144
00:11:22,680 --> 00:11:25,120
in the world so they can sell you stuff.

145
00:11:25,120 --> 00:11:29,680
I don't know. I feel like that's a hard line you're taking. To me, it seems like there

146
00:11:29,680 --> 00:11:34,720
is, there is a couple of things that it's doing that I like. Loading pages very, very

147
00:11:34,720 --> 00:11:41,480
fast and pre-rendering them. So they're saving bandwidth on mobile and CPU cycles. I get

148
00:11:41,480 --> 00:11:46,280
that. I think it would be better served from publishers directly. And the other thing that

149
00:11:46,280 --> 00:11:52,880
I, the other reason why I think that'd be a lot better is you could be better than your

150
00:11:52,880 --> 00:11:55,820
competition and get ranked higher in Google.

151
00:11:55,820 --> 00:12:01,420
Like if you really invested on building a responsive, fast website, you invested in

152
00:12:01,420 --> 00:12:05,540
designing things correctly, you did the right kind of images, you cashed everything correctly.

153
00:12:05,540 --> 00:12:10,600
Like you really, as a business, made that part of your focus. And as a result, the Google

154
00:12:10,600 --> 00:12:13,800
search results would reward you and you may show up above your competitors, which could

155
00:12:13,800 --> 00:12:15,640
matter a lot.

156
00:12:15,640 --> 00:12:21,400
All of that's gone now. It removes that pressure for publishers to really invest in their technology

157
00:12:21,400 --> 00:12:25,440
because now Google can come around, suck it all up, pre-render it, and then deliver it

158
00:12:25,440 --> 00:12:30,840
in a consumable way and your site can be dog crap slow. And that I don't like at all. So

159
00:12:30,840 --> 00:12:34,800
there's the control aspect that we talk a lot about and that feels like it's going to

160
00:12:34,800 --> 00:12:42,080
make the web experience for the rest of us, not in Chrome, a little less great. And control

161
00:12:42,080 --> 00:12:46,920
or not, there's that element to it too that I think is part of why people care about the

162
00:12:46,920 --> 00:12:47,920
AMP story.

163
00:12:47,920 --> 00:12:53,400
Well, I really hope that this advisory committee can do some good here. And I'm not very impressed

164
00:12:53,400 --> 00:12:58,840
with this first move that they've made, but it could be this amazing standard, this open

165
00:12:58,840 --> 00:13:04,120
standard that Google has kind of talked about and is trying to make happen that individual

166
00:13:04,120 --> 00:13:10,840
publishers could use and adopt and potentially have different variants of instead of just

167
00:13:10,840 --> 00:13:17,640
having all of that centralized control and obfuscating URLs is just the complete opposite

168
00:13:17,640 --> 00:13:19,040
of what I wanted to see with AMP.

169
00:13:19,040 --> 00:13:24,040
Well, I guess we've said our piece. If this topic does interest you, I want to draw your

170
00:13:24,040 --> 00:13:28,160
attention to a link in the show notes. We have a blog post by an individual who is a

171
00:13:28,160 --> 00:13:33,360
self-admitted AMP critic, but I love where he took it. He decided to join the advisory

172
00:13:33,360 --> 00:13:38,280
committee for AMP and they just recently had a meeting and he documents it on his blog.

173
00:13:38,280 --> 00:13:43,280
I appreciate this level of transparency. He seems to have a rather rational take on it

174
00:13:43,280 --> 00:13:46,680
and links and cites a lot of the stuff that he talks about. So it's a really good reference

175
00:13:46,680 --> 00:13:48,200
and we'll have a link to that in the show notes.

176
00:13:48,200 --> 00:13:51,600
Yeah, linuxactionnews.com slash 106.

177
00:13:51,600 --> 00:13:56,080
But you won't be reading that blog post running Windows on a Chromebook. Not that you'd ever

178
00:13:56,080 --> 00:14:01,080
want to, but it was almost, almost a real official bonafide thing.

179
00:14:01,080 --> 00:14:06,040
Yeah, we talked about this last summer and the Windows aspect is not particularly interesting,

180
00:14:06,040 --> 00:14:10,680
but if you can dual boot Chrome OS and Windows, then it's going to make dual booting Chrome

181
00:14:10,680 --> 00:14:15,800
OS and Linux that little bit easier, at least you would assume. But unfortunately that project

182
00:14:15,800 --> 00:14:21,600
went nowhere and so it's going to be just straight up Chrome OS with all the Android

183
00:14:21,600 --> 00:14:24,760
apps and the Linux apps on top of it.

184
00:14:24,760 --> 00:14:29,340
I love this story though, because first of all, it had a great codename, Project Campfire,

185
00:14:29,340 --> 00:14:35,440
and it's one of those where just loose on Reddit find this stuff and they noticed recently

186
00:14:35,440 --> 00:14:41,240
it was like a user cross frog or something like that on Reddit. Notice that there was

187
00:14:41,240 --> 00:14:46,240
comments in the latest Chrome code bases that said that these features have been deprecated.

188
00:14:46,240 --> 00:14:50,360
They were pulling them out. I think about a world where you kind of had a Chromebook

189
00:14:50,360 --> 00:14:59,600
that was running Android apps, Linux applications and tribooting Chrome OS, Windows and Linux.

190
00:14:59,600 --> 00:15:04,840
I don't know the use case for that, but that's a hell of a lot of different ways you could

191
00:15:04,840 --> 00:15:10,300
use a $300, $400, $500 laptop. That straight up would have been impressive. I think they've

192
00:15:10,300 --> 00:15:14,280
determined they've gotten there close enough with where Chrome OS has gone recently that

193
00:15:14,280 --> 00:15:17,560
they thought, let's pull the plug on this for now. We don't need people running Windows

194
00:15:17,560 --> 00:15:18,560
on these things.

195
00:15:18,560 --> 00:15:22,800
And you know that Project Campfire, only a Mac user could have come up with that. That's

196
00:15:22,800 --> 00:15:25,560
pretty close to boot camp for my money.

197
00:15:25,560 --> 00:15:29,720
Oh, you know what? I guess I hadn't really put that together. I suppose I kind of see

198
00:15:29,720 --> 00:15:33,400
it, Project Campfire. I was thinking because it was like a summer project.

199
00:15:33,400 --> 00:15:37,880
Oh, maybe. Maybe I'm casting aspersions there, but that's the first thing I thought about

200
00:15:37,880 --> 00:15:38,880
was boot camp.

201
00:15:38,880 --> 00:15:45,680
Yeah. You could see where the logic had come though. I bet you the thought process was,

202
00:15:45,680 --> 00:15:49,640
well the one thing that's preventing people from switching to Chrome OS is that one Windows

203
00:15:49,640 --> 00:15:53,460
app. Because that's the same thing with Linux desktops. The one thing that prevents people

204
00:15:53,460 --> 00:15:57,120
from switching is like the one or two applications on Windows that you can't get on Linux. Maybe

205
00:15:57,120 --> 00:16:02,560
it's Premier or it's some game or whatever it might be. They had to have a similar conversation

206
00:16:02,560 --> 00:16:08,180
at some Chrome OS development meeting and said, you know, if we made it possible for

207
00:16:08,180 --> 00:16:12,880
people to run Windows 10, even if it was like in a tiny light VM or something, then they

208
00:16:12,880 --> 00:16:16,240
could run that one application and switch to Chromebooks. That had to be it.

209
00:16:16,240 --> 00:16:20,560
And then they sat back and looked at the way the market's going. And they said to themselves,

210
00:16:20,560 --> 00:16:25,760
ah, we don't really need to bother, but maybe old Goog saw that Gardner market forecast

211
00:16:25,760 --> 00:16:30,360
that was published in April. And they said, ah, I don't know. They read this report and

212
00:16:30,360 --> 00:16:35,080
the report says something to the effect of only 75% of professional PCs will be running

213
00:16:35,080 --> 00:16:41,560
Windows 10 by 2021. I mean, it's a good chunk, right? But it's maybe not where the future's

214
00:16:41,560 --> 00:16:45,280
headed. And so they decided to invest in other places. That's got to be, that's got to be

215
00:16:45,280 --> 00:16:48,080
like the whole logic process. If I were to guess.

216
00:16:48,080 --> 00:16:52,400
Well, surely the other 25% is going to be Windows 7 because people are desperately clinging

217
00:16:52,400 --> 00:16:53,400
onto it.

218
00:16:53,400 --> 00:16:58,280
Yeah, actually can understand, right? If you just want to get something done and you need

219
00:16:58,280 --> 00:17:03,800
something that's compatible with Windows, Windows 7 does a heck of a job. The only problem

220
00:17:03,800 --> 00:17:09,520
is that pesky support that's expiring. And if you're say the South Korean government,

221
00:17:09,520 --> 00:17:15,120
you got to make some plans and they are at least considering and testing migrating to

222
00:17:15,120 --> 00:17:18,900
Linux instead of Windows 10. That's according to the Korean Herald.

223
00:17:18,900 --> 00:17:21,800
Can I put my extremely cynical hat on for a second?

224
00:17:21,800 --> 00:17:23,880
Of course. I thought you were always wearing that hat.

225
00:17:23,880 --> 00:17:28,240
Oh yeah, that's true. Let me put my extra cynical hat on top of it then. I can't help

226
00:17:28,240 --> 00:17:32,360
but think this is the South Korean government trying to shake down Microsoft for a bit of

227
00:17:32,360 --> 00:17:38,000
extra free support, just threatening them that we're going to move over to Linux. Because

228
00:17:38,000 --> 00:17:43,660
if you actually look at life in South Korea, you need Windows to do a lot of stuff. I remember

229
00:17:43,660 --> 00:17:49,720
having a conversation with a listener, it must be a few years ago now, about how to

230
00:17:49,720 --> 00:17:54,320
do any sort of interaction with the government, you need to have a Windows PC.

231
00:17:54,320 --> 00:17:56,680
Yeah, ActiveX, I think specifically is what it is.

232
00:17:56,680 --> 00:18:01,440
Yeah, and some other applications that are only available for it. So for them to move

233
00:18:01,440 --> 00:18:05,840
over, it's not like switching out Office for LibreOffice.

234
00:18:05,840 --> 00:18:09,440
I think there's also some character support issues that aren't as solid as they should

235
00:18:09,440 --> 00:18:10,440
be.

236
00:18:10,440 --> 00:18:15,400
Yeah. And so it's not really a realistic proposition that South Korea could do this.

237
00:18:15,400 --> 00:18:22,440
Maybe. At a certain point, you have to move on from ActiveX, right? There's other factors

238
00:18:22,440 --> 00:18:26,840
at play here. My understanding, I don't know, I've never actually been directly familiar

239
00:18:26,840 --> 00:18:31,160
with it. But from conversations I've had, and from what I've read, that ActiveX requirement

240
00:18:31,160 --> 00:18:35,240
comes about because the government has their own self-implemented form of encryption. Because

241
00:18:35,240 --> 00:18:39,480
at the time that they built all those systems, it was illegal to export anything beyond 40

242
00:18:39,480 --> 00:18:43,040
bit from the United States. And so they came up with their own solution that is implemented

243
00:18:43,040 --> 00:18:48,500
with ActiveX. But if they own that, then they can move it to something newer. And it's high

244
00:18:48,500 --> 00:18:54,080
time to do that. Let's be honest, Microsoft is deprecating Internet Explorer. They're

245
00:18:54,080 --> 00:18:58,980
deprecating Windows 7. They're up against a couple of massive market forces. And yeah,

246
00:18:58,980 --> 00:19:02,640
they could be trying to leverage a few more years of free support. But it looks like they're

247
00:19:02,640 --> 00:19:09,360
doing the math. They say it would cost them about 780 billion won or I think that's 655

248
00:19:09,360 --> 00:19:15,920
US greenbacks, 655 million US greenbacks. But it also anticipates long-term cost reductions

249
00:19:15,920 --> 00:19:20,840
after the entire total cost of ownership has been calculated. So they've been looking into

250
00:19:20,840 --> 00:19:26,280
that. They don't mention like specific plans or actions, but they do say one of their goals

251
00:19:26,280 --> 00:19:31,360
is to avoid building reliance on a single operating system.

252
00:19:31,360 --> 00:19:35,360
The most disappointing thing about this whole story is that they're going to build their

253
00:19:35,360 --> 00:19:39,960
own custom distro based on Ubuntu instead of using Red Star OS.

254
00:19:39,960 --> 00:19:45,480
Well, yeah, I agree. Red Star OS is best OS, no doubt about it. But I really hope this

255
00:19:45,480 --> 00:19:49,160
doesn't go the route of Munich where they really like they fork off their own version

256
00:19:49,160 --> 00:19:54,200
of Ubuntu. They fork off their own thing of LibreOffice. If they were smart, they would

257
00:19:54,200 --> 00:20:00,720
do this in a very standardized enterprise rollout form. Get mainline Ubuntu, get a support

258
00:20:00,720 --> 00:20:06,920
contract. It's $25 a desktop. Get a support contract with Canonical. Do it the proper

259
00:20:06,920 --> 00:20:12,180
way. So that way these are supported machines. These things are performing a critical function.

260
00:20:12,180 --> 00:20:18,560
To treat them otherwise is just asking for disaster. This is just, oh, just spend a little

261
00:20:18,560 --> 00:20:19,560
bit of money here.

262
00:20:19,560 --> 00:20:23,840
Yeah. Even if it ends up costing you a little bit more, at least you're not completely locked

263
00:20:23,840 --> 00:20:28,600
in. At least Ubuntu does use all open source and open standards and you could hire a consulting

264
00:20:28,600 --> 00:20:34,500
firm to carry on if Canonical goes away or stops supporting the desktop or whatever.

265
00:20:34,500 --> 00:20:40,660
This is why I think it's really important in businesses and in enterprises and in governments,

266
00:20:40,660 --> 00:20:46,660
you shouldn't go in talking about cost at all. In fact, let's say it's even a little

267
00:20:46,660 --> 00:20:52,480
more expensive. Let's say that because I think the total overall win for the public is open

268
00:20:52,480 --> 00:20:57,560
formats and avoiding vendor lock-in for the core operating system which powers your entire

269
00:20:57,560 --> 00:21:02,200
infrastructure. The value of that long-term, especially when it's government money, so

270
00:21:02,200 --> 00:21:08,000
it's citizens tax money, that's just critical. Having document formats that we can open for

271
00:21:08,000 --> 00:21:13,560
the next 25 years, that matters. That matters a lot in these types of deployments. Having

272
00:21:13,560 --> 00:21:18,820
something where different contract support companies or internal IT support can actually

273
00:21:18,820 --> 00:21:24,360
build and extend your system and maintain it and avoid technical debt is so much more

274
00:21:24,360 --> 00:21:29,180
valuable than the cost of the machine license or the support license. It's phenomenally

275
00:21:29,180 --> 00:21:33,280
more valuable in these institutions because these are long-term institutions that get

276
00:21:33,280 --> 00:21:37,320
10 plus years out of these machines if they can and they're creating documents that have

277
00:21:37,320 --> 00:21:43,160
to be consumed for 30 plus 50 years. That's the value that we should be selling to these

278
00:21:43,160 --> 00:21:47,120
institutions, not the cost of the software. We're going to lose if that's what we focus

279
00:21:47,120 --> 00:21:48,120
on.

280
00:21:48,120 --> 00:21:53,240
Yeah. You have to figure that changing from say Ubuntu to Red Hat, it's got to be a hell

281
00:21:53,240 --> 00:21:58,000
of a lot easier and cheaper than moving from Windows to Linux or vice versa.

282
00:21:58,000 --> 00:22:03,440
Absolutely. Yeah. No doubt about it. No doubt about it. Just from a file system standpoint,

283
00:22:03,440 --> 00:22:07,640
it's easier to move your data from one Extended 4 file system to another Extended 4 file system.

284
00:22:07,640 --> 00:22:11,960
It doesn't matter what the kernel is or what the user land is, but going from NTFS to Extended

285
00:22:11,960 --> 00:22:17,480
4, that's a hell of a transition. Just simple things at that level or backing up your configuration

286
00:22:17,480 --> 00:22:23,680
file for NGINX, you could use that on another box. There's direct one-to-one value, skill

287
00:22:23,680 --> 00:22:28,640
set, et cetera. You make the migration once and then you reap those benefits for the life

288
00:22:28,640 --> 00:22:33,040
of the systems. That's the real value there. We'll see where South Korea goes.

289
00:22:33,040 --> 00:22:37,720
I hope they're not just leveraging. One would think that if they're at this stage, they've

290
00:22:37,720 --> 00:22:42,720
still got a year and change of support from Microsoft Extended support for Windows 7,

291
00:22:42,720 --> 00:22:44,840
so they're in a good position right now.

292
00:22:44,840 --> 00:22:48,160
Well, if they do switch to open standards and open source, then surely they're going

293
00:22:48,160 --> 00:22:52,700
to be taking full advantage of Microsoft open sourcing one of the algorithms behind the

294
00:22:52,700 --> 00:22:53,980
Bing search engine.

295
00:22:53,980 --> 00:22:59,160
I was going to come on here and be all like, womp, womp, Bing algorithm, open source, who

296
00:22:59,160 --> 00:23:04,800
knows? I was wrong, man. I did some investigation into what this actually does, and it really

297
00:23:04,800 --> 00:23:10,400
makes me appreciate that search is a way harder problem than I ever have appreciated.

298
00:23:10,400 --> 00:23:16,480
Yeah, because if you think about doing just a find or grep or whatever, the time that

299
00:23:16,480 --> 00:23:20,600
that takes, usually you're only dealing with a few hundred or a few thousand files and

300
00:23:20,600 --> 00:23:25,120
if it takes a second, whatever. But if you're dealing with billions of files and it needs

301
00:23:25,120 --> 00:23:29,000
to be instant, then that is a very tricky problem to solve.

302
00:23:29,000 --> 00:23:33,680
Especially when you have the variability of human language. An example they give in the

303
00:23:33,680 --> 00:23:40,960
documentation and in a video is a user sits down and wants to search for the Rocky 4 movie,

304
00:23:40,960 --> 00:23:46,080
but Rocky 4, the proper spelling is in Roman numerals, but being just an average user,

305
00:23:46,080 --> 00:23:50,280
they sit down, they type in Rocky and the number 4. The system has to be smart enough

306
00:23:50,280 --> 00:23:54,620
to consider other factors and still return the right results.

307
00:23:54,620 --> 00:23:59,840
Another example they gave is the word bank generally means like a financial institution,

308
00:23:59,840 --> 00:24:04,480
but you can also bank things. You can have a bank side of a hill. There's a lot of different

309
00:24:04,480 --> 00:24:09,920
uses for the word bank when you think about it and a computer has to know what the intention

310
00:24:09,920 --> 00:24:15,640
is. That's the element they've open sourced here, a key piece of what makes that possible.

311
00:24:15,640 --> 00:24:19,600
It seems Microsoft's intention by making this open source isn't to make Bing take off like

312
00:24:19,600 --> 00:24:26,640
crazy, but to just give developers another tool to work with machine learning and AI.

313
00:24:26,640 --> 00:24:32,680
Essentially what you have here is a Python library with AI models pre-built and it has,

314
00:24:32,680 --> 00:24:40,240
I quote, a space partition tree and graph algorithm, speed tag. That's what's at the

315
00:24:40,240 --> 00:24:45,640
core of the open source Python library that Microsoft is making available. It's not a

316
00:24:45,640 --> 00:24:52,160
new idea of vector search, but it's really powerful and they are teaming vector search

317
00:24:52,160 --> 00:24:58,280
up with machine learning here, buzz, buzz, buzz, and then releasing that as an MIT licensed

318
00:24:58,280 --> 00:24:59,280
Python library.

319
00:24:59,280 --> 00:25:02,920
That's it. I'll spin it up in Azure instance and run in this tomorrow.

320
00:25:02,920 --> 00:25:06,280
To the cloud, Joe. It's time to do some vector based searches.

321
00:25:06,280 --> 00:25:09,960
Do you think that's what it's about though, just driving people to Azure? I know that's

322
00:25:09,960 --> 00:25:14,120
the kind of cliche go to, but I can't really see any other reason why they would open source

323
00:25:14,120 --> 00:25:15,120
this.

324
00:25:15,120 --> 00:25:19,560
I think so. I mean, machine learning is a big part of the platform's future plans and

325
00:25:19,560 --> 00:25:25,200
it I think is very valuable from a brand standpoint, even if there's not a direct correlation to

326
00:25:25,200 --> 00:25:29,900
Azure. I think it's pretty powerful from a brand standpoint to be a leader in this industry,

327
00:25:29,900 --> 00:25:34,800
to have services that enable machine learning, to be releasing software that enables machine

328
00:25:34,800 --> 00:25:35,800
learning.

329
00:25:35,800 --> 00:25:40,320
I think it's pretty clever on Microsoft's part. They're trying to get legitimacy with

330
00:25:40,320 --> 00:25:46,560
the developer community and giving them really good free open source software. Well, how

331
00:25:46,560 --> 00:25:50,320
are developers not going to like that? People just have to keep looking for ways to hate

332
00:25:50,320 --> 00:25:52,200
Microsoft, but this one isn't going to be one of them.

333
00:25:52,200 --> 00:25:54,880
Oh, I'm sure people will find some way to hate them about it.

334
00:25:54,880 --> 00:25:58,320
Yeah, there's a way to twist this, I'm sure. I mean, after all, it does have Bing in the

335
00:25:58,320 --> 00:25:59,320
name.

336
00:25:59,320 --> 00:26:05,440
Well, before we get out of here, there's a breaking story as we've been recording. Details

337
00:26:05,440 --> 00:26:10,940
are a little bit light at this point, but it seems that Google have cut off Huawei,

338
00:26:10,940 --> 00:26:15,440
and so there'll be no more GApps for them. And if they want to sell any Android phones,

339
00:26:15,440 --> 00:26:18,320
then it's just AOSP all the way for them.

340
00:26:18,320 --> 00:26:23,780
Boy, what a story. As we're recording, Reuters publishes that Alphabet Inc., Google's parent

341
00:26:23,780 --> 00:26:28,600
company has suspended business with Huawei that requires any transfer of hardware, software

342
00:26:28,600 --> 00:26:32,920
or technical services, except for those that are available in the open source project,

343
00:26:32,920 --> 00:26:37,460
which Joe said. Here's the direct quote from a Google source, Huawei will only be able

344
00:26:37,460 --> 00:26:41,780
to use the public versions of Android and will not be able to get access to proprietary

345
00:26:41,780 --> 00:26:47,560
apps and services from Google. Google has clarified that includes the Play Store and

346
00:26:47,560 --> 00:26:53,560
Play services, and has also clarified that existing Huawei users that currently have

347
00:26:53,560 --> 00:26:59,760
access to the Play Store will still be able to update the apps that they have now from

348
00:26:59,760 --> 00:27:06,720
Google. So your Gmail app and whatnot will still get updated, but what happens to your

349
00:27:06,720 --> 00:27:10,980
operating system and telco updates and things like that, that's all up in the air right

350
00:27:10,980 --> 00:27:14,320
now. This has got to be a massive blow for the company.

351
00:27:14,320 --> 00:27:18,840
Well, it's fine for the users. They can just flash lineage and the Google apps and they'll

352
00:27:18,840 --> 00:27:23,800
be fine. Oh wait, no, Huawei locked down the bootloaders so no one can do that.

353
00:27:23,800 --> 00:27:27,940
Right, right. Yeah, this is a hell of a story. And there's some deep political sides to this

354
00:27:27,940 --> 00:27:32,840
that we're not going to get into. On Thursday, the Trump administration added Huawei to a

355
00:27:32,840 --> 00:27:39,120
trade blacklist. So I think this is likely Google responding to that. They probably don't

356
00:27:39,120 --> 00:27:41,040
have much of a choice in this situation.

357
00:27:41,040 --> 00:27:45,120
He does have the best blacklist. Tremendous.

358
00:27:45,120 --> 00:27:47,840
People say Joe, people say. People tell him.

359
00:27:47,840 --> 00:27:50,000
Not a lot of people know this.

360
00:27:50,000 --> 00:27:51,000
Everybody knows.

361
00:27:51,000 --> 00:27:55,000
I think you're going to have to follow up on Linux Unplugged on Tuesday with this because

362
00:27:55,000 --> 00:27:58,480
this is going to be a big story this week, by the looks of things.

363
00:27:58,480 --> 00:28:01,220
Yeah, I would imagine the next couple of days it'll develop. So if something interesting

364
00:28:01,220 --> 00:28:05,180
does come out of this, you bet. We'll put it on there. And like always, we're going

365
00:28:05,180 --> 00:28:10,620
to get the latest and greatest that's happening in the open source world every single week

366
00:28:10,620 --> 00:28:15,920
right here on Linux Action News. Go to linuxactionnews.com slash subscribe for all the ways to get new

367
00:28:15,920 --> 00:28:16,920
episodes.

368
00:28:16,920 --> 00:28:20,680
And go to linuxactionnews.com slash contact for ways to get in touch with us.

369
00:28:20,680 --> 00:28:24,680
Also, we have two events coming up at meetup.com slash Jupiter Broadcasting. We've got a Kubernetes

370
00:28:24,680 --> 00:28:30,000
study group coming up and a dinner at Texas Linux Fest. If you're going to Texas Linux

371
00:28:30,000 --> 00:28:34,400
Fest, it'll be awesome to see you there. Meetup.com slash Jupiter Broadcasting for those and future

372
00:28:34,400 --> 00:28:35,400
events.

373
00:28:35,400 --> 00:28:38,360
And we'll put a link in the show notes to the last study group that has been published

374
00:28:38,360 --> 00:28:41,400
on YouTube, Command Line Threat Hunting. So do check that out.

375
00:28:41,400 --> 00:28:45,560
We'll be back next Monday with our weekly take on the latest Linux and open source news.

376
00:28:45,560 --> 00:28:47,280
I am at Chris LAS.

377
00:28:47,280 --> 00:28:49,760
I am at Joe Ressington.

378
00:28:49,760 --> 00:28:52,400
Thank you for joining us and we will see you next week.

379
00:28:52,400 --> 00:28:55,400
Have a great night, y'all.

