Hello, and welcome to Linux Action News, our weekly take on Linux and the open source world.
This is episode 44, recorded on March 11th, 2018.
I'm Chris.
I'm Noah.
Hello Noah, you're not Joe.
I'm not.
Thanks for having me though.
You bet.
Yeah, Joe is extremely sick this week.
He regrets not being here, but it did kind of work out because both you and I are on
location in California at Scale 16x.
And we'll tell you a little bit about our impressions.
But first, let's get into the news.
Our first story this week is the OpenWatch.
Yeah, this is a project from Blocks, the project behind OpenWatch.
And I think it's a really interesting project, really caught my attention.
The idea that you can actually start to utilize the unused space on your wrist where the band
usually sits.
Yeah.
So this is an OpenWatch and it's going to be based on Android Oreo.
The goal of this initiative is to release a full Linux kernel and an Android Oreo board
support package that folks can use for development.
It'll be the same chipset, but it won't be a completed watch.
The current code base is based on Oreo and will run on a large number of smartwatches
that are already available, as well as one Blocks will be selling.
But they're funding initial development and collaborating with a handful of ROM makers
to create an open smartwatch operating system, ideally going towards eventually a modular
smartwatch where you could maybe put an additional battery in the band or a sensor of some kind.
And you snap those in and the OpenWatch project would just work with those pieces.
So I guess my first question is, because it seems to me that the kind of people that like
smartwatches are the kind of people that want technology to just kind of be transient, not
the kind of people that want to build things, so to speak.
Maybe.
I am almost more receptive to the idea of a modular smartwatch than I am a modular smartphone.
Because if you do it at the bands, that is something that people already swap out for
like fashion reasons or like I replaced a band recently just because it got old.
And if I could get a band that maybe had additional battery life or had a blood sugar sensor in
it, I could be down for that.
Or maybe an LTE radio.
Maybe the watch doesn't ship with an LTE radio, but you could put one in a band.
What happens when you're, if you start to get more modules, like you want more modules,
like do you have to grow your wrist or like does it eventually fall off?
You just get more watches.
Yeah, it's really the sprawl of internet connected devices.
Maybe Fedora can tame that.
Yeah, they seem to have a solution.
Fedora IoT edition is a go.
The Fedora Council has approved a proposal by Peter Robinson to create a specific tailored
version of Fedora for Internet of Things devices.
It's very early days.
They're getting a working group in place.
They'll set up an initial monthly release process.
And as you would expect, it's going to be heavily built around OS tree and Fedora atomic
host images.
That'll be the key foundation of this thing.
And then working with hardware partners and software developers to make a version of Fedora
that's designed for IoT devices.
Do you see a lot of other companies participating in this or is this primarily something that
exists in and around the Fedora project themselves?
I mean, maybe they see somebody asking for this that I haven't seen, but Canonical's
obviously been working on a version for internet connected devices for a long time.
And what seems to have worked in the market so far, despite my preference, is people just
slamming together some custom stack of Linux and throwing some 2.4 or 2.6 kernel in there
and just rolling their own solution.
So there is like a space for Fedora or Ubuntu to solve this, but the manufacturers don't
really seem to be super interested in it.
Dell's done a few things with the Ubuntu solution, but I'm not seeing like massive adoption.
It's out there.
They announced a few more devices recently.
I guess my first thought is, is Fedora really the best project for that, even if we're talking
about it from a Red Hat standpoint?
Like wouldn't CentOS or one of the more stripped down versions that are specifically designed
for enterprise and uptime?
Yeah, although I think Project Atomic, when you're doing OS tree snapshots and you can
do complete rollbacks, Atomic rollbacks kind of reduces the risk of upgrading Fedora.
And if I was going to have my way, these IoT devices would almost be like on a monthly
patch cycle like Android supported devices are, you know, where Google pushes out security
updates to Nexus and Pixel devices every month.
Probably most IoT devices should be like that because it's a lot of the same technology
stack in those IoT devices.
Speaking of Google, did you see that AMP's got a lot of attention recently?
Yeah, we've covered this sort of growing angst with AMP over the last few months on LAN a
couple of times now.
And there has been this widely circulated open letter that we talked about asking Google
to make some improvements to AMP.
And of course, my primary criticism with AMP is that Google is re-hosting publishers content
and the URLs show Google address, not the original domain.
And the only way to fix that is if browser manufacturers adopt a new standard that Google's
just been proposing.
This week, there was a major shift in Google's approach to how they display AMP content.
So the other criticism with AMP content is that it gets front and center, nice preview
placement in Google search.
You've seen this.
If you search for something, if there's an AMP page, there's a carousel where the results
show up with a thumbnail and you tap that sucker and it loads right away.
And so Google's been giving preferential treatment to things that use AMP.
And that's one of the number one criticisms.
They're using Google search as a lever to get publishers to re-host content on Google,
basically.
So what changed this week?
There was a blog post this week by the AMP team that's talking about accepting AMP like
other systems into that search carousel.
So it'll be AMP for sure.
If you use AMP, you'll get in the search carousel.
But they're willing to entertain the idea now of AMP-like feature sets that are like
the ones that Facebook and Apple do that would also get preferential treatment but wouldn't
be using AMP.
As long as you meet these certain requirements, which they have not fully enumerated yet,
and are AMP-like in your load time and how you display content to the users, we will
start featuring you in the carousel at some point in the future now.
That's the change.
Has that started to satisfy some of your concerns?
No, not at all.
Because first of all, this is years away.
Because it's got to go to the W3C body, and it's got to go to a different consortium that
deals with just offline content.
So there's two different standards bodies it's got to go through.
Then once it gets to those two different standards bodies, it's got to get all of the browser
manufacturers to implement support for it at the browser level, including Apple Safari,
Mozilla Firefox, Edge.
It's a huge uphill battle.
It's a multi-year up-year battle, and Google knows it.
They know it.
And this is the insidious part, in my personal opinion.
They're going to double down on AMP development in the meantime.
So while the standards bodies drag their feet, and then the browser manufacturers drag their
feet, Google is doubling down on AMP with this as an excuse now, saying, well, look,
we're going to start accepting other content.
But in the meantime, we've just updated AMP.
In the meantime, we've just updated AMP.
And that's in this Verge article.
They do an interview with the creator of AMP.
He's like, yeah, we're going to keep going.
AMP will just be one of the standards, and it's going to be great.
And it really is just sort of them saying, well, at some point, we're going to tell you
how you can play in our sandbox, but we just haven't figured it out yet.
So no, it doesn't make me feel better, but you seem to be an AMP fan, all things considered.
I am.
I guess, for me, my understanding is that on a 3G connection, a page will take up to
10 seconds to load, and that is just unacceptable.
And so as we move towards mobile-centered devices and internet-connected devices where
everything is online and people use that as a way to find your business, to call the phone
number, whatever, I think that's going to become more important.
Don't you worry about Google rolling their own standard over the web?
It's not even addressing the core issue.
The core issue is people need to build better websites.
Yes, but with 25 million, they have 25 million domains that are already there, so it seems
like it's a project that exists, it's something that you have to participate in.
It's kind of like saying, well, I don't want to optimize my search results for Google because
I don't particularly care for Google.
That's the engine that people search on.
You kind of have to be prevalent there.
I feel like AMP is the next iteration of that.
Yeah, I suppose it's also why you have to be on YouTube and you have to be on iTunes
if you're a podcast.
Even if you're not a user of iTunes, you still have to publish there.
But it feels like a slow takeover of the web.
They tried social networking, they tried Buzz, they tried Google+, they couldn't get any
traction there, so now they're just turning Google Search into your social network feed.
The next thing that happens with AMP, the next big feature they're rolling out, is something
that's comparable to Instagram stories, where you'll be able to mouse over the AMP carousel
and it will animate the pictures and show you live, rich media.
You can flip through multiple pages just there in the carousel.
You're going to have your search results going to be a series of this, because now you've
got knowledge boxes on the side when you search for an actor with all of Google's information
about them and you've got search cards that come up.
Now you're going to have AMP stories that give you a little animated story right there
in the Google search results.
They're turning search into a social media feed over time, and they're using the levers
of Chrome and AMP to do it.
It feels like, well, we couldn't be Twitter, we couldn't be Facebook, but we've got search,
and we've got Chrome now, and we've got AMP now, and we're just going to use all of these
to funnel it all back to Google Search, the one thing that we get a lot of traction with.
Yeah.
I think that's where you're right, and I think that's where I agree that there is some concern
there.
I mean, you have a hundred different technology providers that are participating in it, so
I also feel like there is...
And it's up on GitHub.
I mean, it's not like it's going to be completely a closed standard.
So I see what you're saying.
The fact that they're opening it up to other AMP-like competitors does leave the door open
for the possibility of maybe an open source alternative or an open source competitor to
come in down the line.
Last.ting.com.
Go to last.ting.com to support the show and get $25 in Ting credit if you bring a device
and $25 off a device if you want a new one.
I brought my Ting devices with me on this trip to scale, and I did Coda Radio, I've
done Linux Unplugged, and now I'm going to publish Linux Action News all on my Ting connection.
And what I love about Ting when I'm traveling is I have my GSM SIM and my CDMA SIM and my
Nexus 6P, which can use both of them, plus I've got a Netgear MiFi with me that does
CDMA, so whatever is stronger in my area, I just switch over to that.
I've got three devices, my bill's usually around $40.
Now when I go on a trip, my bill might be a little bit more that month.
It's only that month I pay.
The rest of the month my bill's around $30, $40 for three phones.
The average Ting line is $23 per device, because it's $6 for just the line, and then your
minutes, your messages, and your megabytes, however much you use, that's what you pay.
Last.ting.com.
Speaking of open source, did you see what GitHub is doing for their licensing scheme?
This is an internal project that they're now making public, and at first I was kind of
skeptical pants when I saw this, but think about this when you've got a lot of people
contributing to a large project on GitHub, you've got mixed licenses, and more often
than not, you're linking to other projects that may be using a different license.
I mean, with open source, one of the beauties is you could have maybe the 80% written by
somebody else and the 20% is the only stuff you had to write.
That's the beauty of standing on the shoulders of giants in open source.
But what do you do when you have all these licenses that are MIT, Apache, BSD, GPL2,
GPL3, and hundreds of other licenses?
Well, Git had taken some heat in the years past about not properly enforcing this, and
they developed this tool internally that would sort of go through a project and look at everything
it links to and watch every commit and figure out if there's any licensing compatibilities.
And it's called Licensed, and it works on any Git repository, and it's public now.
And by finding, caching, and checking license metadata for dependencies, it can also see
if the projects you're depending on are maybe in some sort of license violation.
This flexibility allows Licensed to work equally well for repositories holding thousands of
projects as it would for a repository just containing a single project.
The program discovers what dependencies exist for each of your applications.
For each dependent library or routine found, Licensed finds its dependency source location
in the local environment and extracts its basic metadata like its name, its version,
its homepage, and the summary.
Once Licensed ensures that dependencies are met with all the other open source license
requirements, it then does a monitor of future Git commits, like a continuous integration
job to make sure that future commits by anyone are also license compliant.
So with 77% of all of the programs on GitHub having no license, I think this is a really
useful way for these projects to start to gather a cumulative ability to track all of
those licensing and make sure that there are licenses in place because one of the things
Where do you start otherwise?
Right.
And one of the things that this article goes on to say is that when you have a program
that comes out, they want to be able to know that they can take that program and use it
and it will fit inside of this other project.
And this solves that problem because up until now, there hasn't been a way to track that.
And now the story that gave me the most pause this week.
I think I'm good.
I think I'm good.
But I will admit it took me a second.
Debian and Kali Linux are now available on the Windows subsystem for Linux.
Kali, yeah, the distribution that's used with security testers and researchers was made
available yesterday on the Windows Store for the Windows subsystem.
Kali is now joining Ubuntu, SUSE, OpenSUSE, and Debian on the store for the Windows subsystem
for Linux.
When I first heard about this, one of the things that I thought was this is really great
for if you're a Windows user and you need to do some penetration testing because it
eliminates the necessity for a VM.
But then I started to come up with some potential problems.
So for example, does this support the promiscuous mode inside of the network card to allow it
to actually capture that card and be able to do all of the things that you would need
to do?
You can do that inside of a VM, but can you do that on a subsystem?
I had the same question.
The other trick I think that they're pulling to make Microsoft comfortable is I don't believe
the real penetration testing tools actually ship with when you get the subsystem for Linux.
You have to then run like a subsequent script to then pull them all down and install them.
That seems very pointless.
If you don't have the whole point of Kali Linux is not a desktop driver.
So Kali Linux is literally a tool set for people that are doing penetration testing.
If you're not going to give them the tools to do that, what's the purpose?
There's obviously going to be some that would work, but the thing that I think is noticeable
here is there's a lot of options now and one of the things you can do on Windows 10 that
you cannot do on regular Linux, at least without some efforts and some cheroots, is you can
now open up a window and have Debian in one window, Ubuntu in one window, Fedora in another
window, they're all accessing the same file system, it's the same network.
It's really useful to see that, to test that.
I could see that being, it's a neat trick that you can now do on Windows 10 that would
take more monkeying on Linux itself to actually pull off.
It's a good question about network card access.
That was my first quandary too about this is like, well, what can it actually do?
And it's interesting, some of the critics of this are saying that there is a problem
with some of the IO performance, but to me, how much does IO performance matter inside
of a penetration testing suite?
Yeah, well, but if you're using a SUSE or Debian or Ubuntu for like some development
work, then all of a sudden it matters.
Specifically where that bottleneck is, is CPU performance is actually comparable.
It's decent.
It's when you're hitting the disk and I think maybe it's like when it's translating disk
calls to like NTFS file system writes, it really hits the wall there.
But Microsoft told me, and this article confirms it, that they are already working on a new
version of that that is significantly faster.
I don't know if they're caching or what they're doing, but they have, they already have an
idea on how to fix the disk IOs issue.
I think what the subsystem really is about is it's a stepping stone.
If you don't need the overhead of a VM, then like at scale, we heard somebody complaining,
all these guys are running multiple VMs and they're running out of disk and memory.
Well, if you can just load it up in the subsystem that has minimal overhead, if you don't need
the full functionality of a VM, it's a pretty viable option and then it's pretty easy to
step up.
The other thing to me is the local integration with the system itself, right?
So you have local windows, you have, like you said, local file systems, all of those
things are running locally on the machine and you're not capturing your cursor, coming
back out, going back in, trying to set up a bi-directional clipboard, all of that stuff
is just integrated.
And so if you use these tools just for a small portion of your job, that's a really great
way to get it done.
Or if you just really want a legitimate open SSH client, or you're more familiar with
TracePath under Linux, like now all that stuff's available to you, sneaky dogs, but I don't
think it's a full replacement, it's just like a stepping stone.
And I'll wrap my thoughts with this, I've been looking at the subsystem like this Debian
and Kali Linux edition as the way you and I look at how to switch people to Linux.
Super quick version is, you wanna put somebody successfully on Linux, get them on Firefox,
LibreOffice, get them using Pidgin or whatever you were gonna have them using on Linux or
Telegram or whatever it is.
Get them using that on their existing platform, Mac or Windows, and then come back six months
later or whatever and switch them over to Linux.
I think the subsystem could be doing the same thing to power Windows users, they can start
playing around with Linux, start learning the commands, start to understand how this
directory structure might work, all that kind of stuff, and then be like, you know what,
I'm ready for a real Linux rig.
So the subsystem may end up giving us more Linux switchers.
Absolutely.
When we were at scale this week, we definitely saw people that were going around Windows
shopping at different distributions.
I didn't even think this was a thing anymore, but you were talking with Nathan from Ubuntu,
Nathan Haynes, and he said that, yeah, that is a thing.
People come here and they ask us questions and we sometimes send them to the Fedora booth,
they sometimes send people over here to the Ubuntu booth, people are here to shop for
Linux.
Yeah, it was really exciting to talk to them and it was also exciting to see that Canonical
and Ubuntu specifically is participating in that community effort, right?
So if somebody comes to their booth and has a requirement that can be met by Ubuntu, they're
not afraid to hand them off to the KD team or the GNOME team, or they're even developing
a relationship with Microsoft.
Yeah, Microsoft had a presence here, a big presence, they had a really nice booth.
Just before we started the show, I was thinking, am I glad I did it?
Am I glad I moved down here for six days and went to scale?
I think I am.
I feel like the conference might still be finding its footing completely, but there
was some focus tracks that I think worked really well.
If you wanted to really deep dive into Postgres, or if you're really just there about Ubuntu,
there were tracks that were all day things about just those topics.
I hate saying this because it sounds a little cliche to say, but it really also is about
the community because it's a bunch of people you can geek out about with Linux, just in
general.
Everybody can talk Linux for the most part.
You know, I've always thought the talks are great, the conference is great, but it's really
the people that you meet in and outside the conference that I really enjoy and the activities
that we do outside, having dinner, having drinks, that's what I really come here for.
I think the reason why it's worth mentioning it is because it took me about four years,
or five years, of doing this to say, actually no, this is really the best part.
I know you're here for scale, and so you gotta go, and I go to the talks, and I go to what
interests me, but I don't pressure myself to try to get as many of the talks in as possible
because I walk away with a lot more when I go hang out with people and we talk what they're
doing at their work, and you get to geek out about Linux at the same time.
You get to have a friendly conversation about GNOME versus Plasma instead of a turf war
on the internet.
You know, another thing I'll add in there is a lot of times when we think about conferences,
we think about projects, and we think about software, but one of the things that was really
fantastic was getting to meet some of the people that work on the hardware, like the
two-factor authentication, Yubikey, from Yubico, who made a trip to this conference, showed
up, and we've been using their products forever, but to be able to actually shake and meet
the people that are doing it and see what they have coming down the pipeline and the
fact that they're staying so close and plugged into the Linux community as the desktop develops
on 2018, that was really encouraging to see.
Yeah.
It was so awesome when they would answer, yeah, I use Linux, or when we were talking
to the Inkscape co-creators, like, oh yeah, I run Linux every single day.
I love seeing that.
I feel like we get a little bit more of that at scale.
It's not exclusively that, but you get a little bit more at scale than I think I saw two years
ago.
And now Linux Fest Northwest is next.
That's coming up at the end of April, linuxfestnorthwest.org if you want to check that out.
And if you want to hear some interviews from the floor of scale, including one of the co-founders
of Inkscape, which was a great interview because he's a Linux user, go check out the Ask Noah
program.
Yeah.
Thank you very much.
We did a show live from the floor.
We aired some interviews.
We've got a couple more that are going to air on Tuesday at 6 PM central.
And if there are any questions, of course, the phone line is always open.
You were a maniac.
You were a machine.
It was a lot of fun.
And thank you guys for tuning to this week's episode of the Linux Action News.
You can go to linuxactionnews.com slash subscribe for all the ways to get new episodes.
And linuxactionnews.com slash contact for ways to stay in touch.
And you can support the whole network at our Patreon page and keep us going at patreon.com
slash jupitersignal.
Joe and Chris will be back next Monday with their weekly take on Linux in the open source
community.
I'm at Chris LAS.
I'm at Colonel Linux.
Thank you for joining us and we'll see you next week.
See you later.
