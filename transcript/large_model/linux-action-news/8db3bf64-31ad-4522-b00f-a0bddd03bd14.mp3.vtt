WEBVTT

00:00.000 --> 00:09.040
Hello, and welcome to Linux Action News, episode 177, recorded on February 21st, 2021.

00:09.040 --> 00:10.040
I'm Chris.

00:10.040 --> 00:11.040
And I'm Wes.

00:11.040 --> 00:12.040
Hello, Wes.

00:12.040 --> 00:13.040
Let's do the news.

00:13.040 --> 00:14.040
Touchdown confirmed.

00:14.040 --> 00:21.920
Perseverance safely on the surface of Mars, ready to begin seeking the sand of past life.

00:21.920 --> 00:29.720
This week, as you likely already know, NASA landed a rover named Perseverance on Mars.

00:29.720 --> 00:35.220
If you watched along with the two million others, you may or may not know Perseverance

00:35.220 --> 00:45.240
has a Linux powered tiny helicopter in its belly.

00:45.240 --> 00:53.280
It weighs about four pounds and its primary mission will be to master flight on Mars.

00:53.280 --> 00:57.160
And it was the highlight of my week to chat with Tim Kenam, who is the Mars helicopter

00:57.160 --> 00:59.040
operations lead at JPL.

00:59.040 --> 01:03.120
I was hoping to get some Linux details and he did not disappoint.

01:03.120 --> 01:08.240
He tells me that the Ingenuity helicopter and the helicopter base station that is attached

01:08.240 --> 01:14.560
to the rover that acts as a radio relay, it uses a port of Lanero Linux, which is a popular

01:14.560 --> 01:16.900
distro for embedded processors.

01:16.900 --> 01:22.380
Some of the tech details are the board that it runs on is a it's a it's a board built

01:22.380 --> 01:29.360
for them with a Qualcomm Snapdragon 801 with a quad core 2.2 gigahertz ARM processor in

01:29.360 --> 01:30.360
it.

01:30.360 --> 01:34.200
Tim also noted that the Linux distribution and board support package was provided to

01:34.200 --> 01:39.000
JPL, but they did some tweaking and rebuilding for their use.

01:39.000 --> 01:43.400
Also just as important to note here, the software running on that flying Linux box, it's open

01:43.400 --> 01:44.400
source.

01:44.400 --> 01:45.400
Oh, yeah.

01:45.400 --> 01:48.840
Tim tells us they're using a flight software framework that JPL open sourced a couple of

01:48.840 --> 01:51.540
years ago actually called F Prime.

01:51.540 --> 01:52.540
How cool is this?

01:52.540 --> 01:55.400
Because the OS, you know, Linux, it's it's open source and free software.

01:55.400 --> 02:01.980
But so is the software that solves real challenges for this Mars flying Linux copter.

02:01.980 --> 02:07.200
So F Prime helps it deal with the conditions of flying in the Martian atmosphere, which

02:07.200 --> 02:10.440
is much thinner than the Earth's atmosphere.

02:10.440 --> 02:15.560
And that alone, despite power restrictions and other things, make it extremely tricky

02:15.560 --> 02:17.200
to fly on Mars.

02:17.200 --> 02:19.360
Yeah, that causes all kinds of problems.

02:19.360 --> 02:23.120
One thing I didn't realize was it actually means that the speed of sound is much lower.

02:23.120 --> 02:25.360
And so you're just closer to the speed of sound.

02:25.360 --> 02:27.440
It's much harder to fly.

02:27.440 --> 02:31.040
And as a result, the helicopter blades, they have to be made of a special composite because

02:31.040 --> 02:35.240
they just have to go incredibly fast, which that takes a lot of power on its own.

02:35.240 --> 02:38.080
But it also causes a lot of vibration that you have to dampen on the craft.

02:38.080 --> 02:39.080
Yeah.

02:39.080 --> 02:43.240
And not only do these types of blades have to run super, super fast, but the components

02:43.240 --> 02:45.920
in the copter have to be kept warm.

02:45.920 --> 02:51.860
So legitimately, two thirds of the Linux copter's power goes to just keeping the components

02:51.860 --> 02:53.360
from freezing.

02:53.360 --> 02:55.440
And then there's the delay.

02:55.440 --> 03:00.640
Mars is so far away that it takes radio signals quite a long time to get from the Linux copter

03:00.640 --> 03:01.640
back here to Earth.

03:01.640 --> 03:06.160
The team did actually at first try to build this thing to fly with a joystick.

03:06.160 --> 03:09.240
If you were sitting right there on Mars and you were trying to joystick it, what is it

03:09.240 --> 03:10.320
like?

03:10.320 --> 03:12.160
And it's almost unflyable.

03:12.160 --> 03:17.400
And the reason for that, it's the aerodynamics of when you want to command a roll to the

03:17.400 --> 03:20.880
left because you see yourself starting to move to the right and you start commanding

03:20.880 --> 03:23.400
a roll to the left, there's a delay aspect.

03:23.400 --> 03:28.040
So that delay effect makes it very, very difficult for a human to try and pilot it.

03:28.040 --> 03:31.480
Sounds to me like they're trying to use a really slow VNC connection.

03:31.480 --> 03:35.000
And that's when they realized they'd need a local solution.

03:35.000 --> 03:37.100
And then F Prime was born.

03:37.100 --> 03:44.100
The way this flies autonomously, it has onboard gyros, onboard accelerometers and onboard

03:44.100 --> 03:48.560
camera and altimeter and an inclinometer.

03:48.560 --> 03:55.080
And so using that sensor suite, real time measurement against the terrain and of course

03:55.080 --> 04:01.720
the gyros and the accelerometers sensing onboard, the real time estimation of the state of the

04:01.720 --> 04:09.920
vehicle is made continuously, again, hundreds of Hertz and then that's fed into the closed

04:09.920 --> 04:15.560
loop control algorithm that takes the estimated state and then generates the correction that's

04:15.560 --> 04:18.720
needed at the blade level.

04:18.720 --> 04:20.860
And then the blades are continuously being controlled.

04:20.860 --> 04:27.720
So when you see video tapes of our successful flights, right, and the vehicle looks dead

04:27.720 --> 04:34.240
calm, is coming up and hovering and going laterally coming back, you know, the machines

04:34.240 --> 04:37.120
are working very, very fast and very, very hard.

04:37.120 --> 04:41.980
It just looks very calm, but yeah, so the blades are being continuously controlled.

04:41.980 --> 04:47.200
That was Ingenuity project manager and she says that if the test flight coming up goes

04:47.200 --> 04:51.200
well, we could potentially see a series of flights on Mars.

04:51.200 --> 04:55.620
Each one of those flights teaches us more about complicated details of flying safely

04:55.620 --> 05:02.360
on Mars and you can imagine the ways this is going to be useful for future human visitors.

05:02.360 --> 05:06.640
The other part I'm really excited about here is up to now, we've kind of only got like

05:06.640 --> 05:08.660
selfies of these rovers.

05:08.660 --> 05:12.540
This time as the landing was happening, we got a picture from an orbiting spacecraft,

05:12.540 --> 05:14.760
but that's pretty tiny here.

05:14.760 --> 05:18.840
If Ingenuity works and it actually gets to fly out there, we're going to be able to get

05:18.840 --> 05:23.760
videos and pictures of Perseverance, perhaps even moving on the surface of Mars.

05:23.760 --> 05:26.920
And I think that's going to connect with folks just at the next level.

05:26.920 --> 05:32.200
And good news as we record this yesterday, NASA received a check-in signal from the Ingenuity

05:32.200 --> 05:38.340
helicopter and all systems seem to read go, which is a series of milestones that will

05:38.340 --> 05:39.340
be coming up.

05:39.340 --> 05:43.600
We have a series of major milestones between now and Ingenuity's first flight.

05:43.600 --> 05:48.600
So tomorrow we'll turn on the helicopter and the space station could confirm health after

05:48.600 --> 05:52.200
experiencing the dynamics through the EDL just now.

05:52.200 --> 05:57.560
And the next major milestone will be when the rover deploys the helicopter to the surface.

05:57.560 --> 06:03.080
And that marks the first moment that Ingenuity operates on its own in a standalone manner.

06:03.080 --> 06:08.200
And surviving that first cold frigid night of Mars will be a major milestone.

06:08.200 --> 06:13.040
Each one of these milestones is important because it gets us closer to having useful

06:13.040 --> 06:17.480
flying gadgets on Mars to assist any future human visitors, you know, things like drones

06:17.480 --> 06:20.280
you could actually send ahead and maybe scout things out for you.

06:20.280 --> 06:26.520
A helicopter flying far ahead of rovers and astronauts in the future can provide high

06:26.520 --> 06:31.860
definition reconnaissance information for the rovers and the astronauts before they

06:31.860 --> 06:33.780
take the long journeys.

06:33.780 --> 06:39.720
And as importantly, being able to fly will enable us to get to places that we cannot

06:39.720 --> 06:45.400
get to with rovers and astronauts like sites of steep cliffs, deep inside crevices, areas

06:45.400 --> 06:47.480
of high scientific interest.

06:47.480 --> 06:49.380
It will be game changing.

06:49.380 --> 06:55.520
This really is in the Wright brothers era of flight on Mars, I mean, early days.

06:55.520 --> 07:00.320
Yeah, Tim also shared with us that many of the components in the Linux copter are from

07:00.320 --> 07:01.640
Spark Fun.

07:01.640 --> 07:06.840
It's very much a DIY device that's just made up from a lot of regular old commercial components.

07:06.840 --> 07:10.440
Yeah, and that f prime platform can actually run on a Raspberry Pi.

07:10.440 --> 07:11.440
What?

07:11.440 --> 07:12.440
Yeah, there you go.

07:12.440 --> 07:13.440
Of course.

07:13.440 --> 07:15.280
Tim also shared some additional Linux insights.

07:15.280 --> 07:21.200
He said that the rover landing camera system that was used is also running Linux.

07:21.200 --> 07:22.740
We haven't seen anybody else talking about this.

07:22.740 --> 07:28.560
I don't think this has been widely discussed, but the system that helped land Perseverance

07:28.560 --> 07:32.120
was running Linux on a ruggedized x86 PC.

07:32.120 --> 07:33.120
Oh, right.

07:33.120 --> 07:36.560
And that was doing the machine learning to help them find a safe place to land.

07:36.560 --> 07:37.560
Wow.

07:37.560 --> 07:42.620
Yeah, he kind of begrudgingly said, so I guess technically they were the first Linux on Mars,

07:42.620 --> 07:45.360
but you know, we're going to be the ones flying Linux on Mars.

07:45.360 --> 07:47.000
I think it might be a tie.

07:47.000 --> 07:51.600
Well, either way, we know this, Mars just became the second planet that has more computers

07:51.600 --> 07:53.280
running Linux than Windows.

07:53.280 --> 07:55.740
So that's a bit of a milestone.

07:55.740 --> 08:00.600
As far as what happens next, the helicopter will remain snug in the rover's belly for

08:00.600 --> 08:05.360
the next 30 to 60 days while they check on things and monitor data feeds.

08:05.360 --> 08:10.980
Yeah, Tim shared that there are two big ticket items they'll be looking for in the data,

08:10.980 --> 08:16.020
the state of charge of Ingenuity's batteries, as well as confirmation that the base station

08:16.020 --> 08:21.280
is operating as designed and actually commanding the heaters to turn off and on in order to

08:21.280 --> 08:26.240
keep our little Linux capture nice and in the expected temperature range.

08:26.240 --> 08:27.240
Right.

08:27.240 --> 08:31.000
And so far, we only have about 24 hours of data as we record, but everything seems to

08:31.000 --> 08:32.000
be working great.

08:32.000 --> 08:36.400
Tim says it's a positive report and they are moving forward with the next phase, which

08:36.400 --> 08:38.160
is charging the helicopter's batteries.

08:38.160 --> 08:42.680
Yeah, I mean, maintaining function and good battery health is kind of critical if the

08:42.680 --> 08:47.800
helicopter is going to advance, survive through the frigid Martian climate and actually do

08:47.800 --> 08:51.600
some test flights, which is what we're all hoping it's going to be able to do.

08:51.600 --> 08:57.560
A total of five test flights are planned over a 31 day period once the rover finds the right

08:57.560 --> 09:02.500
helipad or a nice flat spot to deposit Ingenuity.

09:02.500 --> 09:06.880
As long as Ingenuity is attached to Perseverance, though, the helicopter can give its batteries

09:06.880 --> 09:08.360
a little boost.

09:08.360 --> 09:14.100
The Linux Capture has six lithium ion batteries, but once it's detached from the rover, those

09:14.100 --> 09:18.240
batteries will actually be charged by the helicopter's own cute little set of solar

09:18.240 --> 09:19.640
panels.

09:19.640 --> 09:24.540
Although the first flight of Ingenuity will be short, only about 20 seconds of hovering

09:24.540 --> 09:29.200
off the ground to start with, it will be a historic moment.

09:29.200 --> 09:35.360
I want to take a break and thank two of our sponsors for making this here production possible.

09:35.360 --> 09:36.740
Let's start with Ting.

09:36.740 --> 09:38.840
Go to linux.ting.com.

09:38.840 --> 09:39.840
It's a new year.

09:39.840 --> 09:42.720
They have new plans and it's the same great service.

09:42.720 --> 09:47.760
You guys know I've been a customer forever, but I can confidently say now is the best

09:47.760 --> 09:50.800
time ever to become a Ting customer.

09:50.800 --> 09:55.400
Why pay so much for mobile when if you know what you're doing, you can save some serious

09:55.400 --> 09:56.400
money.

09:56.400 --> 10:01.000
I'm talking like talk and text for 10 bucks a month, but if you need two gigs or you need

10:01.000 --> 10:04.520
20 gigs, whatever it is, Ting now has the perfect plan for you.

10:04.520 --> 10:05.520
And no need to worry.

10:05.520 --> 10:07.940
What's changing is lower monthly phone bills.

10:07.940 --> 10:12.840
You still get access to Ting's award-winning customer service with nationwide LTE and 5G

10:12.840 --> 10:13.840
coverage.

10:13.840 --> 10:19.120
I'm currently on Verizon, but they have three nationwide networks you can choose from now.

10:19.120 --> 10:24.000
And the thing is when people switch to Ting, they love the savings and they love the top

10:24.000 --> 10:25.100
rated customer support.

10:25.100 --> 10:30.760
That's the number one and number two things I hear from our audience, but I love no contracts.

10:30.760 --> 10:31.760
I just love it.

10:31.760 --> 10:34.200
I just think that's the better way to have phone plans.

10:34.200 --> 10:37.360
I hear from people outside the US, they tell me that's, I guess, the way they do it in

10:37.360 --> 10:38.360
the rest of the world.

10:38.360 --> 10:42.780
Well, Ting mobile customers get access to that kind of treatment and with three different

10:42.780 --> 10:47.100
providers to choose from, it's really simple to switch to Ting because just about every

10:47.100 --> 10:48.760
phone is supported.

10:48.760 --> 10:53.040
So get started by going to linux.ting.com to check your current phone, create an account

10:53.040 --> 10:55.080
and pick the plan that's right for you.

10:55.080 --> 11:01.840
You'll get $25 in credit when you go to linux.ting.com and may pay for your first month of service

11:01.840 --> 11:06.120
because generally Ting bills are below 25 bucks a month.

11:06.120 --> 11:08.920
If your phone's compatible, Ting will send you a SIM card, you pop it in, you get going

11:08.920 --> 11:11.000
in a few minutes or you can buy a phone from them.

11:11.000 --> 11:12.680
They have a whole range.

11:12.680 --> 11:13.680
So check it out.

11:13.680 --> 11:15.920
The next generation of Ting mobile is here.

11:15.920 --> 11:19.560
See how much you could save and get $25 off by going to linux.ting.com.

11:19.560 --> 11:24.440
A new year, new plans, same great service.

11:24.440 --> 11:29.280
Linux.ting.com and thank you to Ting for sponsoring Linux Action News.

11:29.280 --> 11:30.940
Also thank you to Linode.

11:30.940 --> 11:36.320
Go to linode.com slash LAN and get a $100 60-day credit towards your new account and

11:36.320 --> 11:37.800
support the show.

11:37.800 --> 11:39.760
Linode is our cloud server provider.

11:39.760 --> 11:44.160
You should see the infrastructure we have spun up with JB 3.0 on Linode.

11:44.160 --> 11:46.600
We take advantage of all of it.

11:46.600 --> 11:51.000
We use their cloud dashboard to manage our systems, get a snapshot of their usage and

11:51.000 --> 11:53.280
take advantage of their object storage.

11:53.280 --> 11:56.600
But when I need to get files up on Linode really quick or reboot a system that we're

11:56.600 --> 11:59.880
working on it, I actually leverage their command line application.

11:59.880 --> 12:04.320
It uses their API, it's quick, it's easy and if you're a Linux user, I think you should

12:04.320 --> 12:05.320
check it out.

12:05.320 --> 12:10.720
Get started by going to linode.com slash LAN, sign up, get that $100 60-day credit and play

12:10.720 --> 12:11.720
around.

12:11.720 --> 12:12.720
See what you can do.

12:12.720 --> 12:16.120
A lot of people ask us for a self-hosted Google Docs alternative.

12:16.120 --> 12:20.560
Well what we use is HedgeMD, a real-time markdown collaborative editor.

12:20.560 --> 12:25.640
And of course we host it on Linode and that's a great example of what you can use that linode.com

12:25.640 --> 12:28.800
slash LAN $100 credit for.

12:28.800 --> 12:34.640
Unpowered, self-hosted Google Docs extinguisher and you can run it on Linode in minutes.

12:34.640 --> 12:37.400
Go check it out at linode.com slash LAN.

12:37.400 --> 12:43.160
Go there, support the show and see the best virtualized Linux servers in the cloud.

12:43.160 --> 12:47.940
Thanks to Linode for sponsoring Linux Action News and thanks to everybody who goes to linode.com

12:47.940 --> 12:50.680
slash LAN.

12:50.680 --> 12:56.360
Looking ahead with Linux 5.11 just released, here's a look at some of the highlights in

12:56.360 --> 12:59.280
5.12 which just kicked off development.

12:59.280 --> 13:02.560
Yeah, usually this first week is crazy busy.

13:02.560 --> 13:06.300
It's like peak busyness for Linus Torvalds overseeing the kernel.

13:06.300 --> 13:11.980
But it wasn't until last night as we record this that code actually started showing up

13:11.980 --> 13:14.600
in the 5.12 Git repository.

13:14.600 --> 13:19.220
Linus himself was offline most of the week due to winter storms, preventing him from

13:19.220 --> 13:22.520
pushing to the Git repository and interacting with the mailing list.

13:22.520 --> 13:23.520
It was quiet.

13:23.520 --> 13:29.040
Yeah, last week in Oregon, winter storm knocked out power to thousands and ended up interfering

13:29.040 --> 13:31.920
with the start of the Linux 5.12 merge window.

13:31.920 --> 13:32.920
Yikes.

13:32.920 --> 13:38.180
It seems on Saturday evening though, Linus Torvalds is back online as pull requests have

13:38.180 --> 13:42.080
begun to be honored with new code now hitting the Git tree.

13:42.080 --> 13:43.700
People go through their snark withdrawal.

13:43.700 --> 13:49.440
You know, looking at what they're trying to get into 5.12, in a big way to me, it feels

13:49.440 --> 13:54.480
like a lot of this was work that happened over the last year during the lockdown that

13:54.480 --> 13:57.460
is now being realized in 5.12.

13:57.460 --> 14:02.740
And as the XFS maintainer Derek Wong said, a lot is going on this time.

14:02.740 --> 14:07.800
And then he says, which seems about right for this drama filled year.

14:07.800 --> 14:09.040
It sure does.

14:09.040 --> 14:14.480
And there are some big changes on the horizon with Linux 5.12, including for ButterFS, which

14:14.480 --> 14:19.880
is getting some nice performance improvements and a working zoned mode.

14:19.880 --> 14:24.220
And of course, some nice improvements for XFS as well, particularly I noticed towards

14:24.220 --> 14:26.640
being able to finally shrink that file system.

14:26.640 --> 14:27.640
That'd be nice.

14:27.640 --> 14:29.800
XFS and I have been through the trenches together.

14:29.800 --> 14:31.060
It's good to see that.

14:31.060 --> 14:36.740
But for today, we want to dig into a big feature addition that has been in the making for quite

14:36.740 --> 14:40.200
some time, ID mapped mounts.

14:40.200 --> 14:41.960
But what are ID mapped mounts?

14:41.960 --> 14:48.200
Well, as kernel developer Christian Bauer says, simply put, different mounts can expose

14:48.200 --> 14:52.520
the same file or directory with different ownership.

14:52.520 --> 14:57.680
ID mapping mounts can handle a wide range of long standing use cases on Linux.

14:57.680 --> 14:59.000
They sure can.

14:59.000 --> 15:05.040
Things like making it possible to easily share files between multiple users or multiple machines,

15:05.040 --> 15:07.080
especially in complicated scenarios.

15:07.080 --> 15:12.640
For example, ID mapped mounts will be used in the implementation of portable home directories

15:12.640 --> 15:17.420
in system D, home D, where you might want to allow users to move their home directory

15:17.420 --> 15:22.280
to an external storage device and then use it on multiple machines.

15:22.280 --> 15:26.840
It also makes it possible to share files from a host system with unprivileged containers

15:26.840 --> 15:31.300
without having to do something like change ownership permanently with chown.

15:31.300 --> 15:35.420
This technique of sharing things unprivileged with a container that's actually already used

15:35.420 --> 15:36.420
on Chrome OS.

15:36.420 --> 15:37.420
Yeah.

15:37.420 --> 15:42.840
And you could totally see a big use case for this in the enterprise in the cloud.

15:42.840 --> 15:45.360
And it sounds like system D is keen to that.

15:45.360 --> 15:50.060
They're already looking to begin immediately making use of ID mapped mounts, as are some

15:50.060 --> 15:53.900
of the container runtime, such as container D, run C, and LexD.

15:53.900 --> 15:59.000
And even where on the street is, the virtiofs team is looking at using it for virtual machines

15:59.000 --> 16:00.500
as soon as possible.

16:00.500 --> 16:05.500
This initial implementation comes with ports right now for FAT and Extended 4.

16:05.500 --> 16:09.900
It looks like there's one for XFS that's mostly done and other file systems that are being

16:09.900 --> 16:14.380
actively worked on by independent people and maintainers.

16:14.380 --> 16:20.480
From the it's about damn time file, NVIDIA has produced code to support hardware accelerated

16:20.480 --> 16:24.000
GL and Vulkan rendering with X-Wayland.

16:24.000 --> 16:27.840
Like so many good things, this was spotted in a recent merge request and NVIDIA engineer

16:27.840 --> 16:33.080
mentions in patch notes that with an impending driver update and these new patches, hardware

16:33.080 --> 16:37.160
accelerated X-Wayland support should just start working.

16:37.160 --> 16:42.800
Additionally, some new work was done to allow running X-Wayland on the integrated GPU of

16:42.800 --> 16:48.720
a laptop, but having individual applications run on a dedicated NVIDIA GPU.

16:48.720 --> 16:49.720
Love it.

16:49.720 --> 16:50.720
I love this setup.

16:50.720 --> 16:55.860
This is similar to how I'd use my eGPU and similar how others are doing GPU offloading

16:55.860 --> 16:57.640
in X11 today.

16:57.640 --> 16:59.820
Coming to Wayland, that's great.

16:59.820 --> 17:04.420
This should work nicely too with hybrid graphics laptops that are using Wayland and I would

17:04.420 --> 17:08.840
expect to see this in the quote long-lived branch driver, which I think they've renamed

17:08.840 --> 17:14.400
to the production branch now, either way it should be an NVIDIA driver 470.

17:14.400 --> 17:19.720
Moving up the stack a bit, collaborative developer, Alexandros Francis sent in a new request for

17:19.720 --> 17:26.120
common patch set that adds experimental Wayland support for running wine applications, which

17:26.120 --> 17:32.200
would mean the ability to run Windows applications directly on top of your Wayland compositor,

17:32.200 --> 17:34.600
no X-Wayland required.

17:34.600 --> 17:40.920
It's exciting because it's really taking Windows applications under wine to full support on

17:40.920 --> 17:45.160
a Wayland future desktop, but it is worth noting at this point in time, these remain

17:45.160 --> 17:49.880
out of tree and it's not really clear when or if they will be mainlined.

17:49.880 --> 17:55.760
And there's also a lack of clarity from upstream wine developers and code weavers on whether

17:55.760 --> 18:01.400
this code should first go through wine staging or what ultimately the acceptance requirements

18:01.400 --> 18:05.160
will be for introducing Wayland support into wine.

18:05.160 --> 18:10.480
But once this code is ready and these issues are worked out, it should be possible to run

18:10.480 --> 18:13.160
Windows apps directly on Wayland.

18:13.160 --> 18:14.520
You don't need X-Wayland at all.

18:14.520 --> 18:15.520
That's great.

18:15.520 --> 18:19.080
It's pretty remarkable how far wine has come and this would really take it to the next

18:19.080 --> 18:20.080
level.

18:20.080 --> 18:24.640
I wouldn't be surprised if we saw Wayland support by the wine 7.0 release sometime next

18:24.640 --> 18:25.640
year.

18:25.640 --> 18:30.480
But wine staging aside, it'll also be interesting to see if perhaps this Wayland support gets

18:30.480 --> 18:36.200
picked up earlier by say something like Proton for Steam Play usage, if it actually ends

18:36.200 --> 18:39.800
up leading to efficiency or performance benefits compared to having to go through something

18:39.800 --> 18:40.800
like X-Wayland.

18:40.800 --> 18:46.440
Well, aside from not being able to play any of these video games, Apple M1 users and OpenBSD

18:46.440 --> 18:49.980
users have something in common this week.

18:49.980 --> 18:52.440
Their operating system boots on the M1 hardware.

18:52.440 --> 18:57.760
Yes, that's right, the OpenBSD hackers, vigilant hackers that they are, managed to get it up

18:57.760 --> 19:01.920
and running on the new Apple hardware.

19:01.920 --> 19:02.920
There's some hacks.

19:02.920 --> 19:03.920
There is some hacks.

19:03.920 --> 19:05.000
They still have to be fixed.

19:05.000 --> 19:09.040
So don't expect this to be mainlined anytime soon.

19:09.040 --> 19:11.520
But it's definitely getting there.

19:11.520 --> 19:16.640
You could say it's one small step right now for OpenBSD, but a giant leap for open source

19:16.640 --> 19:17.640
kind.

19:17.640 --> 19:20.880
Yeah, but it's not quite a Linux copter on Mars.

19:20.880 --> 19:23.320
No, Wes, but not much is.

19:23.320 --> 19:27.440
We will keep an eye on that little Linux copter and let you know of any interesting developments

19:27.440 --> 19:30.000
as well as everything else that happens in the world of Linux.

19:30.000 --> 19:34.520
Go to LinuxActionNews.com slash subscribe for all the ways to get new episodes.

19:34.520 --> 19:38.440
And LinuxActionNews.com slash contact for ways to get in touch.

19:38.440 --> 19:43.300
Jupiter Broadcasting's first swag item in more than two years is here, and it's a robe.

19:43.300 --> 19:46.280
It's called the Coder, the Coder.shop.

19:46.280 --> 19:48.720
Look and feel comfortable while kicking ass.

19:48.720 --> 19:50.440
Life is better in a robe.

19:50.440 --> 19:55.640
We'll be back next Monday with our weekly take on the latest Linux and open source news.

19:55.640 --> 20:21.200
Thanks for joining us and we will see you next week.

