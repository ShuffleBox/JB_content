WEBVTT

00:00.000 --> 00:16.600
Hello, and welcome to Linux Action News, our weekly take on Linux and the open source world.

00:16.600 --> 00:22.480
This is episode 100, recorded on April 7th, 2019. I'm Chris.

00:22.480 --> 00:23.480
And I'm Joe.

00:23.480 --> 00:29.880
Hello, Joe, and happy episode 100. We kick it off with Chef celebrating our episode,

00:29.880 --> 00:34.440
obviously, by going 100% open source. At least, that's the headline.

00:34.440 --> 00:39.960
That is the headline. And it is true that now, Chef, instead of being open core and

00:39.960 --> 00:45.040
having a bunch of proprietary add-ons, everything that they do will be Apache 2 licensed. So

00:45.040 --> 00:51.380
it's all going completely 100% open source. However, the binaries are going to be paid

00:51.380 --> 00:54.280
for only. So this is very much the red hat model.

00:54.280 --> 00:58.720
Yeah. So to clarify that, you can get the binaries for free, I believe, but you cannot

00:58.720 --> 01:04.360
use them for commercial use without paying. But like in the case of RHEL, the source code

01:04.360 --> 01:08.760
is available. So you could grab the source code, build it yourself, but then in that

01:08.760 --> 01:13.720
case, you can't call it Chef. You have to call it something else, like Joe's orchestration.

01:13.720 --> 01:18.640
And maybe just as a background for people, if you're not familiar, Chef is a, well, it's

01:18.640 --> 01:23.440
a company, but it's also an open source project. It's one of the major configuration management

01:23.440 --> 01:29.480
systems on Linux and now also Windows. It's built in Ruby and Erlang, and it's one of

01:29.480 --> 01:34.840
the popular orchestration management suites. And this is a very competitive market. And

01:34.840 --> 01:39.760
so I think Chef is trying to differentiate themselves here. And the RHEL model has been

01:39.760 --> 01:41.040
proven successful.

01:41.040 --> 01:46.440
Well, just last week we talked about how they hit $3 billion, red hat, in revenue. So obviously

01:46.440 --> 01:50.680
they're doing something very right. And so it's not a surprise to see other companies

01:50.680 --> 01:52.240
following their model.

01:52.240 --> 01:56.880
Chef's talking up a big game here. They say their development process is going to go more

01:56.880 --> 02:02.880
open. They'll share more details about their roadmap, feature backlogs, and other future

02:02.880 --> 02:08.800
product developments. And all of Chef's commercial offerings will be based on the same open source

02:08.800 --> 02:14.360
code everybody else has access to. And they say, you know, this is solving a lot of problems

02:14.360 --> 02:18.840
for us, one of which being it was just getting really difficult for Chef to explain which

02:18.840 --> 02:24.560
parts of the software were open source and which were not. And now this is solved. And

02:24.560 --> 02:31.320
you've seen Redis and MongoDB all try to take different stabs at this kind of problem recently.

02:31.320 --> 02:35.960
And their solutions sort of got grief, right? They were going more closed down, whereas

02:35.960 --> 02:37.680
Chef has gone the other direction here.

02:37.680 --> 02:41.520
Yeah, this will satisfy the FOSS zealots, for want of a better word, the people who

02:41.520 --> 02:48.000
want everything to be completely open source free software. But by enforcing their trademark

02:48.000 --> 02:53.320
policy, they're really protecting their revenue stream here. So it's, I think, a very sharp

02:53.320 --> 02:57.960
move of them, because it means that they're not going to get the blowback that the likes

02:57.960 --> 03:02.060
of Redis Labs and Mongo have got. But at the same time, they are protecting their business.

03:02.060 --> 03:05.060
It seems to be a very good strategy.

03:05.060 --> 03:10.800
I think worst case scenario here is that the distributions that have Chef in the repositories

03:10.800 --> 03:14.760
are going to have to rename that to, you know, something else. And maybe the community will

03:14.760 --> 03:20.240
come up with a new name that sounds familiar, like kitchen. I don't know. Would it be great

03:20.240 --> 03:24.480
if we could predict what it's going to be right here on the show? But I'm just not familiar

03:24.480 --> 03:28.200
enough with the terminology in the kitchen. But there might be something like this, because,

03:28.200 --> 03:32.200
you know, it's based on recipes and all. That's like the whole vernacular. So if distributions

03:32.200 --> 03:35.000
could come up with a different name, then I think that solves the biggest problem we

03:35.000 --> 03:39.480
have now. Because according to the license, they are now, it's Apache 2, they can distribute

03:39.480 --> 03:41.840
as much as they like, just don't call it Chef.

03:41.840 --> 03:45.520
Well, also, they do have to remove any references to Chef in the source code.

03:45.520 --> 03:47.240
Right. And branding, any branding.

03:47.240 --> 03:51.660
Yeah, which isn't an insignificant job. Every time they release a new version, someone's

03:51.660 --> 03:55.080
going to have to go through and remove all that. I suppose you could probably just script

03:55.080 --> 03:59.760
that fairly easily. But it's something that they have to think about. And it's a bit of

03:59.760 --> 04:02.600
a headache for the distributions.

04:02.600 --> 04:08.480
But certainly not an unfamiliar problem. We've seen this even with Firefox, of course, there's

04:08.480 --> 04:12.760
lots of I mean, look at CentOS and scientific Linux. I mean, this is this is something that

04:12.760 --> 04:17.520
is a known domain. But I'm not trying to take away from the work, it probably will be tedious.

04:17.520 --> 04:21.960
I think there will be organizations that will just build it themselves and won't pay for

04:21.960 --> 04:26.500
it. But I think they're the kind of organizations, the smaller ones that wouldn't have paid anyway.

04:26.500 --> 04:30.680
And so I don't think Chef is going to actually lose out anything here. And it'll be very

04:30.680 --> 04:36.440
interesting to see how Amazon deals with this, whether they will just rebrand it as something,

04:36.440 --> 04:41.440
or whether they'll just pay Chef to license it, which would be potentially a very good

04:41.440 --> 04:44.520
revenue stream for them. And presumably what they're hoping will happen.

04:44.520 --> 04:50.280
And a great PR move by Amazon. Yeah, it would be smart for them. And they could afford it.

04:50.280 --> 04:54.880
Yeah, exactly. It's not like they can't afford it. So I don't know, I think Amazon will just

04:54.880 --> 04:58.800
make their own version of it, unfortunately, but we'll have to wait and see on that one.

04:58.800 --> 05:04.040
Well, let's move on to one of the stories that has had lots of turns. And this is the

05:04.040 --> 05:12.760
long going lawsuit with VMware over their use of GPL code in their VMware ESX bare metal

05:12.760 --> 05:14.400
virtual machine hypervisor.

05:14.400 --> 05:18.880
Yeah, we found out this week that that lawsuit is finally over for the same reasons it was

05:18.880 --> 05:23.720
last time. And that wasn't even getting into the nuts and bolts of the argument. It was

05:23.720 --> 05:29.120
simply insufficient evidence presented to the court, or rather, evidence presented in

05:29.120 --> 05:31.280
such a way that they just wouldn't accept it.

05:31.280 --> 05:35.720
Yeah, also, there's appears to have been a comment by the judge during oral hearings

05:35.720 --> 05:42.120
that the judge had concerns that this was a case being brought on ideological grounds,

05:42.120 --> 05:48.520
I'm paraphrasing a bit, and suggested because of that, that it be settled outside of court,

05:48.520 --> 05:52.720
which isn't likely that's not a solid start to a case. And then really, this goes all

05:52.720 --> 05:58.560
the way back to 2006. So this, this already failed once this was an appeal, and now that's

05:58.560 --> 06:05.280
failed. And VMware, by all accounts was clearly in violation of the GPL. I believe it's Christopher

06:05.280 --> 06:09.520
Hillwig, I'm not probably getting the pronunciation wrong there. But he spotted Linux source code

06:09.520 --> 06:16.360
being used illegally in VMware in 2006. And the way he put it is, quote, VMware uses a

06:16.360 --> 06:23.320
badly hacked 2.4 kernel with a big binary blob hooked into it, giving a derived work

06:23.320 --> 06:29.920
of the Linux kernel that is not legally redistributable. And that is, I believe, true. But they failed

06:29.920 --> 06:33.320
to make a compelling argument. They failed. Well, this is according to coverage in the

06:33.320 --> 06:36.980
German newspapers, which I'll have linked in the show notes, they failed to really present

06:36.980 --> 06:41.600
a solid argument. It was things like, well, here's my git information. And here's the

06:41.600 --> 06:44.800
git information of this and this project. And just, you know, look at looking at yourself.

06:44.800 --> 06:48.480
It's right there. It's just right there. I mean, that kind of stuff is not going to win

06:48.480 --> 06:54.640
a case like this. And it sets a bad precedent here. I hate to say this, but this was a huge

06:54.640 --> 07:00.160
waste of the Conservancy's money. Because they were the ones behind financing this.

07:00.160 --> 07:05.440
And what do I know? But what may have been established here is now a new precedent. Essentially,

07:05.440 --> 07:13.360
if you are a minor contributor to a very large code base, say 2% of the Linux kernel is yours,

07:13.360 --> 07:18.280
and you have some copyright or some claim over that 2%. What the judge said here essentially

07:18.280 --> 07:23.960
is that's not enough for you to bring this case. You have not been unduly affected enough.

07:23.960 --> 07:28.400
That is essentially precedence now, which is a massive problem for contributors of many

07:28.400 --> 07:33.280
open large open source projects. This is this could potentially be a disservice to the open

07:33.280 --> 07:39.180
source free software community long term, because this is obviously any large corporation

07:39.180 --> 07:44.520
that's using a large project could now fight on these grounds. It's very disappointing.

07:44.520 --> 07:46.560
And it's definitely not the result we wanted to see.

07:46.560 --> 07:50.880
Well, no, it's not the result we wanted to see. And it does seem to set that precedent

07:50.880 --> 07:55.200
in Germany, at least. But for other jurisdictions, who knows?

07:55.200 --> 07:58.840
Germany's a favorite spot, though, because often the rulings there, then sort of get

07:58.840 --> 08:03.960
trickled down to all of the other Western style nations, at least, according to the

08:03.960 --> 08:08.560
Conservancy's fact. But I think what we have here, Joe, just just to really underscore

08:08.560 --> 08:13.320
this is we have a proven GPL violator who just got away with it, even though they went

08:13.320 --> 08:14.320
through the court system.

08:14.320 --> 08:19.240
Well, yeah, I mean, I'm not a lawyer, and I don't even play one on a podcast. But yeah,

08:19.240 --> 08:23.060
my understanding is that they were in violation of the GPL and have got away with it.

08:23.060 --> 08:27.200
And they've essentially admitted as much now, because VMware has released a statement saying

08:27.200 --> 08:33.680
they'll in a future version, be removing that GPL code. And I think what we have here is

08:33.680 --> 08:40.400
we have a large player in the Linux Foundation, VMware. And we have another large player say

08:40.400 --> 08:45.600
like Red Hat, who's in the Linux Foundation. And if you were to look at the overall Linux

08:45.600 --> 08:51.440
source code, there is a lot of Red Hat contributions and copyrights, because employees of Red Hat,

08:51.440 --> 08:55.880
when they join Red Hat, sign over the copyright to the code they produce for Red Hat to the

08:55.880 --> 09:02.680
corporation. So those copyrights are all Red Hats. Red Hat hypothetically could have a

09:02.680 --> 09:09.600
large majority of code contribution of the Linux kernel because of this. And they would

09:09.600 --> 09:14.640
be the perfect company to then bring that to bear in court. But I believe because they're

09:14.640 --> 09:20.960
all part of the same pack, they're all part of the Let's Make Money Linux Foundation pack.

09:20.960 --> 09:26.560
Nobody took action. And it was up to one individual, Christopher Hilwig, who simply was unable

09:26.560 --> 09:33.120
to go up against OmegaCorp, who is a significant contributor to the Linux Foundation. And they

09:33.120 --> 09:37.000
clearly knew they were in violation because now they're removing that code anyways. And

09:37.000 --> 09:38.000
they got away with it.

09:38.000 --> 09:44.160
It is very disappointing. But there's one kind of strange aspect to this. You may remember

09:44.160 --> 09:51.360
Patrick McHardy, who is another kernel contributor. And he threatened a bunch of lawsuits in Germany

09:51.360 --> 09:56.580
over this GPL compliance stuff. And he was basically just trying to shake down companies

09:56.580 --> 09:58.200
for money, profit basically.

09:58.200 --> 09:59.200
Yeah, I remember.

09:59.200 --> 10:05.120
And so he didn't get very far. Now, one of the companies that he tried to sue was I think

10:05.120 --> 10:10.080
Geniatech or Geniatech, something like that. And their defense lawyer was a fellow called

10:10.080 --> 10:15.400
Till Yeager, who happens to be the person who represented Christopher in this case.

10:15.400 --> 10:20.080
So he was on the other side last time. And now he's on the side of Christopher. So you'd

10:20.080 --> 10:25.080
think that he would have enough experience to know what evidence was required and how

10:25.080 --> 10:29.400
to submit that evidence. So it's all very strange.

10:29.400 --> 10:32.120
He's an arms dealer selling arms to both sides.

10:32.120 --> 10:39.000
I would never go so far as to say that. But yeah, I mean, as usual, I'm sure he made plenty

10:39.000 --> 10:44.560
of money out of this as do all lawyers with these things. And Conservancy are the ones

10:44.560 --> 10:46.960
who have had to foot the bill by the looks of things.

10:46.960 --> 10:51.240
Yeah, I mean, in a way, the Conservancy is getting the end result they wanted. And to

10:51.240 --> 10:56.360
make to make it clear, I believe and take the Conservancy at their word that they attempted

10:56.360 --> 11:00.880
like hell, to try to solve this thing out of court. They tried to provide solutions

11:00.880 --> 11:05.400
to VMware that they just didn't want to take. And so now, they've essentially gotten the

11:05.400 --> 11:09.840
result they wanted at the very beginning of all of this. It was just VMware is doing it

11:09.840 --> 11:11.880
voluntarily after getting off scot-free.

11:11.880 --> 11:15.260
And I do take their word that that's what they're interested in. They're not interested

11:15.260 --> 11:18.960
in making a bunch of money. They just want people to be in compliance. They don't want

11:18.960 --> 11:23.680
people to violate the license so that the whole community can benefit from the changes

11:23.680 --> 11:29.200
that they make. And so while this is disappointing, as you say, at least they did eventually get

11:29.200 --> 11:33.360
the outcome they wanted. I mean, it sounds like VMware would have just done that anyway.

11:33.360 --> 11:36.000
And they could have saved themselves a bunch of money and hassle.

11:36.000 --> 11:40.780
Well, from the enterprise to your pocket, how about this one? Running Android next to

11:40.780 --> 11:45.080
Wayland applications? What, Joe? What? Wayland on Android? What?

11:45.080 --> 11:51.200
Yeah, this is a new thing called Sperve, which runs a whole Android stack on Linux, which

11:51.200 --> 11:59.680
allows you to run, therefore, Android applications, but on Linux with Wayland, with direct hardware

11:59.680 --> 12:02.520
access and full hardware acceleration.

12:02.520 --> 12:07.920
Man, you just got to love all the different use cases people come up with for containers.

12:07.920 --> 12:11.680
It feels like there's something every week. So this is, yeah, you take Android, you put

12:11.680 --> 12:16.000
it in a container environment, but it's a little different. It has, like Joe said, direct

12:16.000 --> 12:22.000
hardware access. And that was a choice they made for performance. Now, there are drawbacks,

12:22.000 --> 12:27.240
including some security risks, but using direct hardware access grants them increased GPU

12:27.240 --> 12:31.320
and CPU performance. So you got to think about what your use case is for something like this.

12:31.320 --> 12:35.360
Do you want to have a super secure Android environment or do you want to run Android

12:35.360 --> 12:39.360
applications in your Linux Wayland environment with full acceleration?

12:39.360 --> 12:43.400
They have a whole device infrastructure that they've put in place. In fact, they're taking

12:43.400 --> 12:47.480
advantage of a lot of stuff that's built into Android. And they've come up with bridges,

12:47.480 --> 12:51.400
for example, like when you start up the Android container, they have a bridge that connects

12:51.400 --> 12:58.600
the virtual Android machine to your host Pulse audio stack. And they have a hardware compositor,

12:58.600 --> 13:02.960
which does the same thing with Wayland, creates another bridge. And they say that a lot of

13:02.960 --> 13:07.880
the underlying protocols are conceptually a lot like Wayland that they're dealing with

13:07.880 --> 13:16.240
for the graphics stack. So it's pretty straightforward to then translate their hardware compositor

13:16.240 --> 13:20.400
into Wayland's protocol. And that's essentially what they have their compositor doing is just

13:20.400 --> 13:24.440
talking Wayland, taking the Android stuff in and then talking Wayland. And they have

13:24.440 --> 13:29.020
a video on their website and it's really slick. I mean, you got angry birds. What else do

13:29.020 --> 13:30.520
you need? Angry birds, Joe.

13:30.520 --> 13:35.480
Yeah. What else do you need five years ago? It's a good demonstration to be fair.

13:35.480 --> 13:39.200
Yeah. I mean, they're moving it around on the Linux desktop. They got the terminal up,

13:39.200 --> 13:43.080
they got different apps up and then boom, here's angry birds. It's neat.

13:43.080 --> 13:48.760
Now this is early days. It's not kind of primetime ready yet. But a couple of things that jumped

13:48.760 --> 13:54.640
out at me from their future plans. The first one is making it work properly on x86 with

13:54.640 --> 14:01.800
Ubuntu, which is interesting for a bit of kind of hacking around and playing with. But

14:01.800 --> 14:07.720
the really interesting one was that they want to make it work on the iMX8M with the naviv

14:07.720 --> 14:11.640
graphics driver. Now what does that mean if they get that working?

14:11.640 --> 14:13.200
Is that the Librem 5 stack?

14:13.200 --> 14:18.780
Indeed it is. So that could potentially bring Android apps to the Librem 5, which would

14:18.780 --> 14:24.080
suddenly make it a much more attractive proposition. Get F-Droid working on there and suddenly

14:24.080 --> 14:26.120
you've unlocked a whole bunch of apps.

14:26.120 --> 14:30.260
Hmm. That's an interesting future cast in there, Joe. That could have some nice positive

14:30.260 --> 14:35.640
effects for the Librem 5. I like where they're going with this. I think you got to remember

14:35.640 --> 14:40.920
though, there is a certain amount of overhead to run an entire Android operating system

14:40.920 --> 14:43.040
just so you can use an app.

14:43.040 --> 14:47.680
Keep in mind that that is what you're doing here. It's not like Wine where you're just

14:47.680 --> 14:51.760
running the application and translating the application calls. You're starting up an entire

14:51.760 --> 14:53.360
Android stack in a container.

14:53.360 --> 14:57.640
Yeah, that's not going to be great for battery life, is it? And performance generally.

14:57.640 --> 15:03.560
No. No, I wouldn't think so. And it could potentially mean more security risks as well

15:03.560 --> 15:07.240
because there's a complete operating system stack there.

15:07.240 --> 15:13.000
Yeah. But at least it makes playing with and hacking on the Librem 5 a little bit more

15:13.000 --> 15:17.080
attractive even if it doesn't make it more attractive from a mainstream point of view.

15:17.080 --> 15:21.760
Sure. And I could also see it being handy for Android development on Linux. You're developing

15:21.760 --> 15:28.200
an app. It wouldn't be a very good test case, but it definitely could be a great way while

15:28.200 --> 15:31.960
you're just building your application, getting the UI laid out. You could run it right there

15:31.960 --> 15:38.180
on your desktop. That seems pretty compelling. So I could see all educational use cases,

15:38.180 --> 15:40.800
all kinds of use cases for this thing. I mean, I'd play with it.

15:40.800 --> 15:46.120
Yeah, it definitely is one to watch and hopefully in the near future. But let's look back to

15:46.120 --> 15:51.280
the past of mobile development on Linux and Mer.

15:51.280 --> 15:58.200
Not mere, but mer. M-I-R is something different. M-E-R is something different. This week we're

15:58.200 --> 16:01.720
talking about the M-E-R version, the mobile project.

16:01.720 --> 16:08.320
Because this week, Mer and Sailfish OS have merged. Of course, Mer was a pretty big part

16:08.320 --> 16:14.120
of Sailfish OS anyway, and most of the recent contributions have come from Yola. So it's

16:14.120 --> 16:16.560
not a huge surprise that they've come together.

16:16.560 --> 16:20.360
This isn't really news that's going to impact anybody's life out there. Well, no, I shouldn't

16:20.360 --> 16:27.280
say anybody, but most of our lives. But it is a fascinating story from a history standpoint.

16:27.280 --> 16:33.800
Mer began many years ago, really as a demonstration project. Then it was sort of shut down and

16:33.800 --> 16:40.880
they shifted to MeeGo. And then when MeeGo stopped, they reincarnated Mer again. And

16:40.880 --> 16:48.120
then that became essentially the core of Sailfish OS, which now Yola uses in their devices and

16:48.120 --> 16:54.920
is actually in production. It's a weird, twisty story. And there has been, at certain points

16:54.920 --> 17:00.040
in time in history, really incredible projects that sprung up and were very usable and then

17:00.040 --> 17:06.080
were collapsed and then merged and then reincarnated. And I guess at the end, it sort of ends up

17:06.080 --> 17:07.080
where we started.

17:07.080 --> 17:12.180
I've spoken to some members of the UbiPorts community about this, and they had dabbled

17:12.180 --> 17:18.280
with Mer a bit previously, but are generally concentrating on Halium now. So that was my

17:18.280 --> 17:23.400
kind of concern. Is it going to affect them? And I think the answer is not really. And

17:23.400 --> 17:28.680
the sense there was watch and wait, really. No firm conclusion as to whether this is a

17:28.680 --> 17:35.280
good or bad thing. It just seems inevitable, really, that this was going to happen because

17:35.280 --> 17:40.720
they were doing so much work on it and pretty much no one else was. So why not merge them?

17:40.720 --> 17:44.520
And even Yola themselves say that Mer has served its purpose and can retire.

17:44.520 --> 17:49.920
Right. It's served the community well. Speaking of UbiPorts, though, they have some big news.

17:49.920 --> 17:53.920
They finally have their very own official foundation.

17:53.920 --> 17:58.220
Yeah, this has been a long time coming. They've been working on it since pretty much they

17:58.220 --> 18:04.040
took over from Canonical. And it just turns out that it is very, very complicated, particularly

18:04.040 --> 18:09.640
in Germany, where they've done this to get all the paperwork sorted. But now they've

18:09.640 --> 18:13.800
finally done it. They can move forward and their finances will be a lot less stressful

18:13.800 --> 18:17.160
and crucially much more stable in the long term.

18:17.160 --> 18:20.940
They write in the post that we'll have linked in the notes that the foundation provides

18:20.940 --> 18:27.400
the project's benefits such as structure, new funding and merchandising opportunities,

18:27.400 --> 18:31.240
which is good for sustainability. And if you're out there and you're listening and you're

18:31.240 --> 18:36.440
kind of skeptical, you don't really see the place of UbiPorts and what the purpose is,

18:36.440 --> 18:39.600
I'd encourage you to take a couple of minutes and go read this post. They do a bit of a

18:39.600 --> 18:43.700
victory lap and give you a brief overview of some of the milestones that they've achieved

18:43.700 --> 18:50.160
since they took the project over on April 5, 2017. It's pretty damn impressive. And

18:50.160 --> 18:56.200
they're getting there in a slow, methodical, release-by-release improvement approach. We

18:56.200 --> 19:02.200
could end up seeing in a couple of years time, at least, a general purpose, open source,

19:02.200 --> 19:09.560
fully functional, free phone operating system that this community has put out and this foundation

19:09.560 --> 19:13.600
sort of gives them the basis to keep that sustainable.

19:13.600 --> 19:18.680
Yeah, and it means that now they could do a deal with an OEM and put out an actual phone

19:18.680 --> 19:20.160
if they wanted to.

19:20.160 --> 19:25.680
Interesting. I hadn't really thought about that. But that would be really cool if that

19:25.680 --> 19:30.240
were to develop. Something like the PinePhone, I think, is a group they've worked with the

19:30.240 --> 19:34.560
Pine people a bit. If you could order up a phone, even if it wasn't daily driver, I'd

19:34.560 --> 19:37.840
love to play with something if the price was reasonable, just to get an idea where they're

19:37.840 --> 19:39.120
going and stay on top of it.

19:39.120 --> 19:43.720
Yeah. I mean, even if it could be someone like BQ, like Canonical worked with, the thing

19:43.720 --> 19:48.360
is until they had this financial structure in place, they weren't really legitimate in

19:48.360 --> 19:53.880
a way. They couldn't do those kind of deals, not easy at least. Whereas now, they've got

19:53.880 --> 19:59.080
that solid foundation and they could potentially do deals like that. And realistically, not

19:59.080 --> 20:05.360
much is actually going to change beyond perceptions. But the thing is, perceptions are very important

20:05.360 --> 20:07.440
and it makes them seem legit now.

20:07.440 --> 20:13.480
Yeah, especially when they're dealing with commercial OEMs. That's critical. Congratulations

20:13.480 --> 20:17.720
to them. It's just cool to see them tick on. The only thing is, though, it doesn't have

20:17.720 --> 20:19.000
enough blockchain, Joe.

20:19.000 --> 20:24.600
Oh, yeah, definitely. Everything needs more blockchain. And the EU strikes again. This

20:24.600 --> 20:26.640
time they've launched the Blockchain Association.

20:26.640 --> 20:33.840
Oh, yeah. This is a big deal. The International Association of Trusted Blockchain Applications

20:33.840 --> 20:39.800
has grown out of months of forums and roundtables held by the Commission to create a strategy

20:39.800 --> 20:45.080
around emerging technology. As the adoption of blockchain, they write, continues across

20:45.080 --> 20:50.960
a wide range of sectors, the European Commission has made a priority to study the potential

20:50.960 --> 20:56.480
impact and encouraging it across a number of initiatives. A hundred organizations in

20:56.480 --> 20:57.480
this.

20:57.480 --> 21:03.160
Yeah. Well, it kind of goes to show that it's not just about Bitcoin. We've talked a few

21:03.160 --> 21:11.520
times about how blockchain technology and distributed ledgers are not just about cryptocurrencies.

21:11.520 --> 21:18.600
It's way more than that. It's really boring stuff like shipping and distribution and logistics.

21:18.600 --> 21:24.040
And there's certain areas where it just really shines as essentially a distributed database.

21:24.040 --> 21:29.820
Right. It's a distributed ledger or database that is verifiable by crypto. And so that

21:29.820 --> 21:37.240
means even competing companies or banks that don't trust each other can rely on the information,

21:37.240 --> 21:40.720
assuming it's a sound implementation. But you know, I was looking at the organizations

21:40.720 --> 21:48.640
that were involved. Anheuser-Busch, the Bud Light Company. I guess maybe shipping. You

21:48.640 --> 21:50.920
know, they got to ship a lot of beer, I suppose.

21:50.920 --> 21:56.740
Yeah, exactly. They got to ship a lot of ingredients and beer and everything. And yeah, it just

21:56.740 --> 22:01.520
totally makes sense for these companies to adopt this technology. And whenever you have

22:01.520 --> 22:07.440
got billions of dollars in an industry, you need to have these organizations that oversee

22:07.440 --> 22:13.920
it and that these members will come together and cooperate in. And it just goes to show

22:13.920 --> 22:17.200
that this stuff has been really taken seriously now.

22:17.200 --> 22:21.640
Do you think it adds like commercial legitimacy? You know, in the eyes of corporations that

22:21.640 --> 22:23.440
might want to be implementing blockchain?

22:23.440 --> 22:29.240
Definitely, yeah. I think that like with the Ubiports thing, perceptions are very important.

22:29.240 --> 22:36.240
And even if nothing really changes in practical terms, just having this organization in place

22:36.240 --> 22:41.960
does give the whole industry and the whole area of the industry of blockchain credibility.

22:41.960 --> 22:47.560
Yeah, I guess, you know, I hadn't really thought about it, but you're right. It's sort of a

22:47.560 --> 22:54.560
stamp of approval that we recognize this as a business technology. And, boy, corporations

22:54.560 --> 22:55.560
love that kind of thing.

22:55.560 --> 23:00.800
Yeah, I think you're gonna see more and more companies adopt this technology because it

23:00.800 --> 23:06.960
actually does serve a very important purpose. It's not exciting, like running Android apps

23:06.960 --> 23:13.360
on Wayland or whatever. But it's just the plumbing, the nuts and bolts of how the globalized

23:13.360 --> 23:17.600
economy is actually going to work going into the 22nd century.

23:17.600 --> 23:23.000
Yeah, I think where I still kind of get like a little bit of, as we would say here in the

23:23.000 --> 23:28.440
States, heebie-jeebies from these kinds of stories is blockchain is kind of like cloud

23:28.440 --> 23:35.480
now. It's really all in the details. How are they verifying those transactions? Is it truly

23:35.480 --> 23:40.160
distributed? Is it under the control of one corporation or one government entity? Like

23:40.160 --> 23:45.780
all of the implementation details are really what matter when it comes to blockchain technology.

23:45.780 --> 23:52.520
And we just get this generic blockchain description, which is supposed to invoke some sort of impressed,

23:52.520 --> 23:57.840
oh, they're using crypto. But I'm left thinking, you know, if they don't have the right verification

23:57.840 --> 24:03.460
system, then it doesn't matter. It's worthless. And of course, they don't go into the details.

24:03.460 --> 24:07.920
Are they going to be setting up servers, crunching crypto in data centers? Have they come up

24:07.920 --> 24:12.820
with a different, less CPU or GPU intensive way to verify that still just as cryptographically

24:12.820 --> 24:16.400
sound and can't be hacked? Like, what are the details here? We don't know. It's just

24:16.400 --> 24:17.400
blockchain.

24:17.400 --> 24:22.200
Well, I suppose it's a bit like cloud that can mean anything from one VM that you have

24:22.200 --> 24:29.240
rented and resold to AWS and everything in between. And it is all in the implementation

24:29.240 --> 24:35.000
details. But I like to think that this association will set some standards and answer some of

24:35.000 --> 24:36.000
those questions.

24:36.000 --> 24:41.000
Yeah, fair point. That would actually be a really good use of a commission like this.

24:41.000 --> 24:45.720
Like that's, I think that would be, that's a great idea. I'm going to watch and see.

24:45.720 --> 24:50.280
Because that does seem to be the critical part. And perhaps, perhaps maybe that some

24:50.280 --> 24:54.360
sort of consensus can be reached if there is a government regulation of some effect

24:54.360 --> 24:58.580
in place. Interesting, you know, because the technology moves so fast. So that's going

24:58.580 --> 25:02.560
to be challenging for them to keep up with. But I'm sure that you use up to the challenge,

25:02.560 --> 25:03.560
right Joe?

25:03.560 --> 25:08.200
And it's funny that the the image used to illustrate this is a bunch of interconnected

25:08.200 --> 25:14.400
lines of the the map of the EU and you can see that Switzerland's missing in the middle.

25:14.400 --> 25:23.400
But then there's the UK off the coast of France hasn't been deleted just yet.

25:23.400 --> 25:27.120
That'll be a big blockchain update. Lots of verification. Well, in the meantime, we'll

25:27.120 --> 25:31.280
have more stories every single week. Go to linuxactionnews.com slash subscribe for all

25:31.280 --> 25:33.000
the ways to get new episodes.

25:33.000 --> 25:36.960
And go to linuxactionnews.com slash contact for ways to get in touch with us.

25:36.960 --> 25:41.680
And if you're a full stack Ruby on Rails developer, check out linuxacademy.com slash careers.

25:41.680 --> 25:48.320
They are hiring for full time remote positions for full stack Ruby on Rails developers. Also,

25:48.320 --> 25:54.180
just a quick plug skis for Linux Fest Northwest coming up very soon at the end of this month.

25:54.180 --> 25:58.000
We're gonna all be there. And we'd love to see you. We'll have tons of Jupiter broadcasting

25:58.000 --> 26:03.800
talks going on. We'll have a booth. We'll have a live stream. Joe and I will be there. It'll

26:03.800 --> 26:08.760
be a great time. linuxfestnorthwest.org for more information and meetup.com slash Jupiter

26:08.760 --> 26:11.760
broadcasting for our parking lot barbecue details.

26:11.760 --> 26:15.720
And just a quick shout out to cheese bacon, the newest member of our Jupiter broadcasting

26:15.720 --> 26:21.040
team who has done an absolutely fantastic job working with the Linux Academy art department

26:21.040 --> 26:25.080
to do all of the assets, all the new logos. They're all looking fantastic.

26:25.080 --> 26:30.400
Yeah, the new art is sharp. Check out the new dark theme to over at Jupiter broadcasting.com.

26:30.400 --> 26:36.280
Yeah, the design team and Mr. Bacon did a great job. Now we'll be back next Monday with

26:36.280 --> 26:41.000
our weekly take on the latest Linux and open source news. I'm at Chris LAS.

26:41.000 --> 26:42.600
I'm at Joel Rissington.

26:42.600 --> 26:45.560
Thank you for joining us. And we'll see you next week.

26:45.560 --> 27:03.560
See you later.

