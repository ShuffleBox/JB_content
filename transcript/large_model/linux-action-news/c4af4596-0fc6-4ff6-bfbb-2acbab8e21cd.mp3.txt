Hello, and welcome to Linux Action News, episode 249, recorded on July 13th, 2022.
I'm Chris.
And I'm Wes.
Hello, Wes.
Let's do the news.
Well, if you thought rolling distributions were just a fad, that misconception was laid
to rest this week.
Google made quite the splash with a comprehensive blog post on how they ended up deploying rolling
Linux desktops.
Now, more than 15 years ago, Google chose Ubuntu as the base for their internal Linux bin.
They liked that it was easy to use, and they noted it had, quote, lots of fancy extras.
And of course, they went with the LTS because they valued that release cycle.
But as time went on, they discovered challenges, and even an LTS cycle comes to an end.
And that eventually meant they'd need to upgrade their fleet of over 100,000 devices before
the end of life date of Ubuntu.
And as you might expect, Google has some unique and complex workloads that were sensitive
to large operating system upgrades.
Inevitably, Google ended up building a whole bunch of internal tools to manage all the
edge cases, writing on their blog, quote, for each OS cycle, we had a rather large version
bump in major packages that could require significant changes to software configuration.
To automate this process, we wrote an untended in-place upgrade tool that took care of a
lot of the common problems.
This automation-focused approach meant that most of the Google employees didn't have to
manually upgrade their machines by reinstalling them and recreating all their configurations.
But as most custom tools are, it wasn't perfect, and it still took nearly a year to upgrade
their entire fleet.
There was also typically a long tail of special use case upgrades that could sometimes drag
on for several years.
As you can probably imagine, just managing the process of doing the upgrades was a lot
of overhead to say nothing of doing the actual upgrade work.
Amen.
And so enters a new internal Google distribution.
Known as G-Linux Rotet, it's based on Debian testing.
One of their primary aims was to remove the two-year upgrade cycle and instead spread
out smaller updates and thus spread out the load on the team throughout time instead of
one big old push every two years.
And don't underplay the significance of a new distribution like this.
This move is considerable, and Google put a lot of research into this.
They write on the post, quote, we considered going with other Linux distributions but ended
up choosing Debian because we wanted to offer a smooth in-place migration.
This also included considerations towards the availability of packages in Debian, the
large Debian community, and also the existing internal packages and tooling that we were
using that were already in the Debian format.
While the Debian stable track follows a roughly two-year jump between releases, Debian testing
track works as a rolling release.
Google also notes that the testing release cadence means they get much more granular
changes to work with while also being able to provide the latest software to their engineers
without having to wait for the next LTS.
And reading through the post, you get a sense that that was a friction point for Google
staffers on G-Linux.
They wanted access to fresher and fresher packages.
And of course, no new Google effort would be complete without some brand new tooling.
So to manage all of these new complex tasks, like building the upstream packages that are
from source, Google's team has created a new workflow system called sieve.
Whenever a new version of, say, a new Debian package is detected, they start a build.
Then they run the entire thing through a suite of virtualized tests on various configurations.
And then once all the checks are passed, they merge that new package with their local latest
pool of packages.
And it seems through that effort, they've already flagged a common issue.
Writing, quote, one issue that we run into a few times, for example, is that in upstream
Debian, packages are usually built in Debian unstable.
After a few days, those already built packages migrate over to Debian testing.
In some cases, it's possible, however, that a build dependency is stuck in unstable, and
thus building within testing might not yet be feasible.
Google wraps up the whole post with some really positive arguments for moving their organization
to a rolling desktop.
It's quite the read in some sense.
And they say in there that the life of the G-Linux team member just looks a lot different
now, with significant reductions in the overhead for a release.
And they also say there's just no more need for this multi-stage alpha, beta, and GA phase
they used to have to go through for new LTS releases, while then also simultaneously chasing
down older machines that were still running old, out-of-date Ubuntu releases.
That process is done now.
They also highlight that this move has dramatically improved Google's security stance by operating
their fleet much closer to upstream releases.
Plus, the new testing system they set up to integrate a rolling release has resulted in
improved stability for their desktop users.
More secure, more stable?
Who doesn't like that?
Indeed, and the cherry on top here is they even encourage other organizations to give
this serious consideration.
They write with a little bit of parting advice saying consider balancing the needs of the
company against upgrade agility.
Being in control of our own moving target and baseline has helped to slow down whenever
we encountered too many problems and broke any of our team's SLOs.
Our journey has ultimately reinforced our belief that incremental changes are better
manageable than Big Bang releases.
Sticking with some industry news for a moment, Red Hat named a new CEO this week.
Matt Hicks is stepping into the role, a Red Hat veteran and currently head of products
and technologies.
Matt Hicks will be replacing Paul Cormier, the company's CEO and president since 2020,
as of this recording, we're still trying to find out where the former CEO is headed.
There have been some rumors for months that he may retire soon, but as of now, all we
know is he seems to be staying with Red Hat, but moving to a position that is quote a
somewhat less demanding position.
Cormier is known as one of the early leading voices there.
Back in 2003, he advocated for Red Hat to leave the consumer market and instead focus
on becoming a full blown business Linux.
A move that still kind of stings to this day, but was clearly a money making idea.
Yeah, you're not alone in thinking that.
Cormier had said in 2012 that many of the developers at Red Hat were upset about that
move, stating in an interview with ours, quote, engineers at the time didn't care about a
business model.
They wanted to work on Red Hat Linux.
We had some level of turmoil inside the company with going to this new model.
Some engineers left, but more stayed.
Ultimately, I think Cormier was pretty well respected in the company.
As for the new CEO, Hicks joined Red Hat in 2016 as a developer, and he said in a note
to Red Hat employees that he'd quote, never imagined that my career would lead me to this
moment.
If I had followed my initial path, not raised my hand for certain projects, or shied away
from contributing ideas and asking questions, I might not be here.
He also seems to know how to play the corporate game.
In a statement, he flexed those skills a bit, saying, quote, together, IBM and Red Hat can
really lead a new era of hybrid computing.
Red Hat has the technological expertise and the open source model.
IBM has the reach.
Moving ahead, the former CEO will still be around.
Cormier will continue to work alongside IBM Chairman and CEO Arvind Krishna.
Both the former CEO Cormier and the new CEO Hicks will report to Krishna going forward.
2022 is turning into an impressive year for Linux hardware, especially Linux first hardware.
I mean, just off the top of my head, a few standouts so far are the Steam Deck, the HP
Dev 1, the System76 Slimr Pro, and now the KDE Slimbook 4 laptop.
Yeah, this new plasma first laptop features an AMD Ryzen 7 5700U processor, and it's available
with either a 14-inch or a 15.6-inch screen.
That smaller model sells for just over $1,000 USD, and the 15.6-inch model sells for just
under $1,100.
And important to note about what you're getting for those prices, a portion of the proceeds
is donated to KDE Development.
And they really promote it as a whale-in-first experience with that.
I thought that was kind of interesting.
And this week, System76 teased an updated Launch Keyboard Lite, a smaller version of
their fully hackable mechanical keyboard.
It's a 67% sized keyboard, which System76 calls portable.
The Launch Lite features the ability to customize the layout and lighting in firmware via System76's
keyboard configurator utility.
It's got a USB Type-C 2.0 port, of course, System76's open-source QMK firmware, and a
nice selection of key switch options.
And as you would hope, the firmware is upgradable with FWEPD from your Linux system.
System76 says that orders should be going live by the time you hear this episode.
Sticking with hardware for just a moment longer, we often speak quite highly of AMD's efforts
to upstream their graphics driver code.
And that's great for those of us on a fairly up-to-date distribution.
But what about those enterprise distro users stuck on old versions of everything?
Well, AMD is on it.
You're just going to have to wait a bit longer.
Yeah, but you're probably used to that by now anyways.
The good news is AMD is actually hiring to fix this problem, which, let's be honest,
that's the real long-term fix here.
The new job position with AMD states, quote, we are looking for experienced software engineers
to enhance build, packaging, and install.
Successful candidates will utilize their knowledge of Linux application development or Linux
system administration to become key contributors to the ongoing development of AMD GPU drivers
for current and future hardware.
Experience with multiple Linux distributions and use of multiple package managers such
as RPM, apt, yum, dnf, zipper, etc.
We'll have a link to the job posting in the show notes.
You might have noticed some consternation online this week over a new Lenovo model being
limited to Windows only, at least by default.
Well, Matthew Garrett has written a post that gets into an apparent Microsoft policy change
around secured core PCs that makes it more difficult to boot Linux on these systems.
It doesn't just complicate things for Linux users though, this new policy also restricts
the system from using any drivers that are stored in flash on Thunderbolt devices, which
means eGPU setups may be a bit more complicated, as will, say, netbooting off a Thunderbolt
attached NIC.
Garrett ends the post with a call to Microsoft to be transparent about the justification
for this policy change.
The post is well worth your time, especially if you might be considering a new Linux laptop
sometime.
We'll have it linked in the show notes.
Give it a read and tell us what you think.
Linode.com slash LAN.
Go there to get $100 in 60 day credit so you can try it out and you go there to support
the show.
$100 means you can really try it out.
Linode is easy to use and powerful with great performance, 11 data centers around the world
and they're making our trip to go see JPL to take a tour down at JPL and meet up with
our West Coast listeners.
They're making it possible.
And the truth about Linode is they are really aggressively priced with pricing 30 to 50
percent cheaper than the other major hyperscalers that want to lock you into their crazy platform.
I mean, the way to talk about Linode is to talk about really how they are everything
those platforms are not.
You know, the largest hyperscalers, they want to present themselves as kind of like a one
stop shop, inviting you to become wholly dependent on them as a single source for everything
you might need.
But of course, you know that means lock in.
Linode, they let you build as you need, their services are straightforward, simple to use
and they work with your existing management platforms like Kubernetes, Terraform and Ansible
and they have great services like S3 compatible object storage and it's all backed by real
human support.
So with pricing 30 to 50 percent cheaper, 11 data centers around the world, a cloud
dashboard that beginners and pros can use, the only thing missing is a great opportunity
to try it and really see what I'm talking about.
So go to linode.com slash LAN and take advantage of that opportunity.
Go get $100 in 60 day credit on your new account and you support the show.
Linode.com slash LAN.
And thank you to Kalyde.
Kalyde.com slash LAN.
Kalyde is an endpoint security solution that uses the most powerful untapped resource in
IT, end users.
And when you're trying to achieve security goals, either for yourself or maybe a third
party audit, the conventional wisdom is to treat every single device like Fort Knox,
old school device management tools like MDMs, while they force disruptive agents onto employees
devices and slow down performance.
I resisted that type of software whenever I was a staffer.
It turns the IT admins into enemies of the users and it also creates its own security
problems.
Let's be real.
And I think it creates this sort of shadow habits for users to avoid IT detecting things.
So Kalyde just does things differently.
Instead of forcing changes on users, Kalyde sends them security recommendations via Slack.
Kalyde will automatically notify your team when their devices are insecure and give them
step by step instructions on how to solve the problem.
By reaching out to employees via a friendly Slack DM and educating them about company
policies, Kalyde can help you build a culture in which everyone contributes to security
because everyone understands and knows why they should be doing it.
And for IT admins, well, Kalyde provides a single dashboard that lets you monitor the
security of your entire fleet.
If they're on a Mac, they're on Windows, and of course, Linux.
So you can see at a glance which employees have encrypted setups, which ones have up-to-date
OSs or not, which ones might be using a password manager, and it's really simple to generate
reports so you can prove compliance to your auditors, customers, or of course, leadership.
So that's Kalyde.
User-centered cross-platform endpoint security for teams that Slack.
You can meet your compliance goals by putting users first.
Visit Kalyde.com slash LAN to find out how.
And if you go to that link, they'll hook you up with a goodie bag that includes a free
t-shirt too.
So that's K-O-L-I-D-E.com slash LAN.
Kalyde.com slash LAN.
We wrap things up today with two serious Xorg security disclosures.
These issues are due to out-of-bounds accesses within the Xorg server and can lead to local
privilege escalation on systems where the Xorg server is running with elevated permissions.
It can also lead to remote code execution when SSHX forwarding is in use.
The issues are tracked as CVE 2022, 2319, and 2320.
Both deal with the Xorg server's XKB keyboard extension not properly validating input, which
is what can trigger the server to write to out-of-bounds memory addresses.
I, of course, love SSHX forwarding, but the good news is Xorg Server 21.1.4 is now available.
It does include the fixes.
It was released on July 12, 2022.
But this kind of highlights something that Wes and I have been uneasy about for a while,
and that is the remaining prevalence of Xorg.
It still ships as default on several popular distributions.
And I think it's sort of been suggested that Xorg is completely dead, and that's obviously
been exaggerated because this past weekend, a longtime Xorg contributor, Alan Coopersmith
of Oracle, issued many updates to various old, seldom-maintained Xorg projects.
And while that's very nice to see, make no mistake, there's basically no one working
on Xorg, a point that developers seem to be trying to make over and over.
I mean, these updates came from a single developer who spent some of his own free time on the
weekend making it happen.
Yeah, and it's not like the Xorg project is onboarding new, excited developers to keep
things going.
The folks that are around have been around for a really long time, and we've been told,
off the record by some of them, that anyone who's left that still spends serious time
on this stack has moved to Wayland, and the developers are just sort of waiting for people
to figure it out.
Yeah, this is admittedly something of a tricky position for the Linux desktop to be in, something
that app image developer Pro Bono has been documenting on GitHub.
I mean, from a user's perspective, there really are still quite a few important features that
are just still missing.
Yep, he touches on things like auto key not working, many screen recording applications
that don't work, and issues that affect projects like app image amongst a long list of other
problems.
And none of them are really wrong, especially from an end user standpoint, it does seem
like something is just broken.
But I can't really help but feel that they don't matter in the grand scheme of things.
The free software desktop is not a product made by a company.
You know, sometimes we live through transitions and these transitions have regressions.
And maybe you call that a community development tax.
But I still think it's a fair trade.
It's always been the best policy to follow upstream, wherever it's going.
It's just the reality and the life of a long term Linux user.
You always go where upstream is going.
Yeah, I mean, what other choice do we have here, right?
If folks feel strongly enough in community that they'd like to continue supporting and
maintaining X, then that could work, right?
We maintain that power in the open source world.
But pending any moves there, what else can we do, right?
You can keep using X.
I think that helps, right?
It's not like X is going anywhere and it's not broken.
But we should probably be honest about some of the limitations of X, some of the reasons
that Wayland was necessary.
Yeah, that's a good point.
I agree it is nice that Xorg is still around, but the argument that we should just keep
it and fix it sort of ignores the reality that if Linux ever really got to a really
large user share, say even the size of Mac OS, the vulnerabilities in the Xorg stack
would become a constant plague for Linux.
And it would probably tarnish Linux's reputation as a secure platform.
We've got serious issues here.
Like, for example, one of the reasons Autokey doesn't work on Wayland is because under Wayland,
arbitrary applications in your GUI can't just simply monitor all of the desktop input for
every single application.
They can't see the input for the other apps.
That's a good security practice, but it does break some applications like Autokey.
And these things won't get fixed until, you know, there's a critical mass.
And so that's where we find ourselves.
We've had Wayland for, what, 13 some years now?
It's still not maybe where it needs to be.
But what other choices do we have than to just push forward?
If we don't start trying, if we don't start making it work and complaining, adding support,
lobbying to fix the issues that need to get fixed, how will we ever progress?
This is one of the things, though, that I really like about the free software community
and open source software development.
The code and the conversation is out in the open.
So as users, we can see what's coming.
We are aware of what the future holds and we can make decisions.
We can choose different distributions and desktop environments that suit our preferences accordingly.
And it also makes for a fascinating thing to watch and just discuss the progress on.
So of course, we're going to keep our eye on all of this and everything else in the world of Linux
and open source software.
So be sure you go to linuxactionnews.com slash subscribe for all the ways to get new episodes.
And linuxactionnews.com slash contact to let us know what we got wrong.
Would you like a factory tour?
Go check out Jupiter Dot Tube and find the live video versions of some of your favorite JB shows
and see how they get put together.
As for this show, well, don't worry.
We'll be back next week with our take on the latest links and open source news.
Thanks for joining us.
And that's all the news for this week.
