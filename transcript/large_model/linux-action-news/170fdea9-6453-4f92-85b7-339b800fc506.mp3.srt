1
00:00:00,000 --> 00:00:09,220
Hello, and welcome to Linux Action News, episode 244, recorded on June 8th, 2022.

2
00:00:09,220 --> 00:00:10,220
I'm Chris.

3
00:00:10,220 --> 00:00:11,220
And I'm Wes.

4
00:00:11,220 --> 00:00:12,220
Hello, Wes.

5
00:00:12,220 --> 00:00:13,780
Let's do the news.

6
00:00:13,780 --> 00:00:16,460
We start with the lizard party this week.

7
00:00:16,460 --> 00:00:22,620
SUSECON 2022 is live as we record, and one of the first things announced, the SUSE Linux

8
00:00:22,620 --> 00:00:25,740
Enterprise 15 Service Pack 4.

9
00:00:25,740 --> 00:00:29,420
Yeah, don't call it a point release.

10
00:00:29,420 --> 00:00:34,600
No, it's a service pack, but really grabbing the headlines for this release is their back-end

11
00:00:34,600 --> 00:00:38,800
switch to the open-source NVIDIA kernel driver.

12
00:00:38,800 --> 00:00:42,480
Now mind you, this is really more for server usage at this point, not for desktops and

13
00:00:42,480 --> 00:00:43,480
gaming.

14
00:00:43,480 --> 00:00:48,720
Yeah, SUSE's reason for using the open-source NVIDIA GPU kernel driver at this point is

15
00:00:48,720 --> 00:00:56,460
really their focus on the cloud-native world, saying, quote, SLEE 15 SP4 is the first major

16
00:00:56,460 --> 00:00:58,640
Linux distribution to deliver it.

17
00:00:58,640 --> 00:01:01,500
Oh, they're clearly excited about that.

18
00:01:01,500 --> 00:01:03,540
And I guess, I mean, fair play, right?

19
00:01:03,540 --> 00:01:08,200
The NVIDIA open GPU kernel driver is already considered production-ready, at least for

20
00:01:08,200 --> 00:01:14,340
data-centered GPUs with the R515 proprietary user-space driver components.

21
00:01:14,340 --> 00:01:19,020
And rounding out some of the other new features, SUSE Linux Enterprise 15 SP4 does meet Google's

22
00:01:19,020 --> 00:01:24,680
SLSA for supply chain compliance, I know you were worried about that, and it adds support

23
00:01:24,680 --> 00:01:30,580
for AMD secure virtualization encrypted state, well, and really a lot more.

24
00:01:30,580 --> 00:01:37,640
And less than 24 hours after SLEE 15 dropped, OpenSUSE Leap 15.4 has already been released.

25
00:01:37,640 --> 00:01:43,840
Yeah, as you're probably already aware, OpenSUSE Leap 15.4 is built from the same sources as

26
00:01:43,840 --> 00:01:47,320
SLEE 15 SP4.

27
00:01:47,320 --> 00:01:53,340
OpenSUSE Leap 15.4 introduces Leap Micro 5.2, which is the newest version of their lightweight

28
00:01:53,340 --> 00:01:58,380
operating system designed for containers and virtualized workloads, you guessed it, in

29
00:01:58,380 --> 00:01:59,380
the cloud.

30
00:01:59,380 --> 00:02:03,880
This latest Leap also introduces improved multimedia codec installation via Cisco's

31
00:02:03,880 --> 00:02:11,620
OpenH264, open source graphics driver improvements, and the inclusion of the NVIDIA RTX 30 signed

32
00:02:11,620 --> 00:02:13,780
firmware packages.

33
00:02:13,780 --> 00:02:20,660
Rounding out the workstation experience, 15.4 includes KDE Plasma 524, GNOME 41, Enlightenment

34
00:02:20,660 --> 00:02:28,560
0.25, and Mate 126.

35
00:02:28,560 --> 00:02:32,940
Back in March, we covered the beta release of Element Call, the voice and video conferencing

36
00:02:32,940 --> 00:02:37,720
solution that's powered by Matrix, but one of the issues we observed was the lack of

37
00:02:37,720 --> 00:02:43,840
end-to-end encryption, and it seems this week, that's been fixed.

38
00:02:43,840 --> 00:02:48,640
Yeah, now initially the Element team shipped with end-to-end encryption disabled because

39
00:02:48,640 --> 00:02:53,480
it limited their ability to debug the new feature, and anyone who's tried to debug,

40
00:02:53,480 --> 00:02:59,240
you know, an API call over HTTPS that you don't control will totally get that.

41
00:02:59,240 --> 00:03:04,560
But with the beta phase kind of wrapping up, and the need for that kind of low-level debugging

42
00:03:04,560 --> 00:03:10,520
being judged as low, the team has felt comfortable enabling end-to-end encryption, which means

43
00:03:10,520 --> 00:03:15,960
your calls over Matrix can only be decrypted by the sender and the receiver, there's no

44
00:03:15,960 --> 00:03:19,200
man in the middle with the keys to your call.

45
00:03:19,200 --> 00:03:25,240
I like that, and the Element team also announced support for spatial audio, saying it was one

46
00:03:25,240 --> 00:03:29,600
of the most fun features to work on, so it allows you to move a video participant around

47
00:03:29,600 --> 00:03:33,100
their tiles, you can move them around on your screen, and when you have this experimental

48
00:03:33,100 --> 00:03:39,120
spatial audio feature enabled, each participant's audio will sound as if it's coming from where

49
00:03:39,120 --> 00:03:42,200
their tile is positioned on your screen.

50
00:03:42,200 --> 00:03:46,800
But the feature that really caught my attention is this walkie-talkie mode.

51
00:03:46,800 --> 00:03:51,640
This release introduces a whole new experimental way of communicating on Element call.

52
00:03:51,640 --> 00:03:55,760
When creating a call, you have the option to choose between a standard video call that

53
00:03:55,760 --> 00:04:00,900
we're all used to, or this new walkie-talkie call option.

54
00:04:00,900 --> 00:04:06,280
If you opt for that version, videos are disabled and everyone is muted by default.

55
00:04:06,280 --> 00:04:10,520
To speak, you gotta push the push to talk button, which you can do either by pressing

56
00:04:10,520 --> 00:04:14,920
it on the screen directly, or by holding the space bar if you're on a test stop.

57
00:04:14,920 --> 00:04:20,520
The catch, though, is that just like a real, physical walkie-talkie or two-way radio, only

58
00:04:20,520 --> 00:04:23,240
one person can speak at a time.

59
00:04:23,240 --> 00:04:26,720
When someone else is speaking, your push to talk button will be disabled, and if you try

60
00:04:26,720 --> 00:04:30,100
to push it, you'll hear a nice little warning beep.

61
00:04:30,100 --> 00:04:33,360
In the announcement, they kind of explained some of the motivation for introducing this

62
00:04:33,360 --> 00:04:34,720
feature.

63
00:04:34,720 --> 00:04:39,320
They say that, well, there's a lot of people out there, such as taxi drivers, truckers,

64
00:04:39,320 --> 00:04:44,000
construction workers, emergency services personnel, and so on, that are just, they're used to

65
00:04:44,000 --> 00:04:46,480
using radio communications.

66
00:04:46,480 --> 00:04:51,000
And they'd like to move away from traditional hardware and on to secure encrypted software

67
00:04:51,000 --> 00:04:54,320
solutions that they can run on any device they choose.

68
00:04:54,320 --> 00:04:57,320
Yeah, that makes sense.

69
00:04:57,320 --> 00:05:02,220
And it's just kind of neat to see how quickly the Element and Matrix folks can iterate now

70
00:05:02,220 --> 00:05:05,600
that they've got some of the bones in place, you know, once you've kind of got the spec

71
00:05:05,600 --> 00:05:10,100
figured out, you start developing these features, I don't think this will be the last neat little

72
00:05:10,100 --> 00:05:13,680
addition built on top of the new calling abilities.

73
00:05:13,680 --> 00:05:18,160
I could also see a dedicated lightweight app that sort of just implemented that feature,

74
00:05:18,160 --> 00:05:22,240
at least, you know, before it rolls out to more clients.

75
00:05:22,240 --> 00:05:23,240
That'd be great.

76
00:05:23,240 --> 00:05:25,120
I'm surprised we're not using a walkie-talkie right now, Wes.

77
00:05:25,120 --> 00:05:29,720
I mean, you could picture like an Android app that's just a big button.

78
00:05:29,720 --> 00:05:31,960
It's just a radio button, right?

79
00:05:31,960 --> 00:05:33,200
I think that'd be a great one.

80
00:05:33,200 --> 00:05:35,000
I'd use the crap out of that with my kids.

81
00:05:35,000 --> 00:05:37,080
Yeah, I think we all would.

82
00:05:37,080 --> 00:05:40,800
I mean, who wants that background noise and breathing anyway?

83
00:05:40,800 --> 00:05:45,120
We should also note that there's lots of work going on to embed Element Call into Element

84
00:05:45,120 --> 00:05:47,040
itself.

85
00:05:47,040 --> 00:05:49,720
Replacing Jitsi is the default conferencing system.

86
00:05:49,720 --> 00:05:53,800
But before you get too excited, this is a two-step process.

87
00:05:53,800 --> 00:05:57,200
First you've got to embed Element Call kind of in the same way that Jitsi is embedded

88
00:05:57,200 --> 00:05:58,200
today.

89
00:05:58,200 --> 00:06:02,000
So you can get rid of Jitsi and then have an embedded Element Call that basically functions

90
00:06:02,000 --> 00:06:04,860
mostly the same way as Jitsi did before.

91
00:06:04,860 --> 00:06:09,800
After that, it's gonna get embedded in a much more tightly integrated way so that it shares

92
00:06:09,800 --> 00:06:15,400
the same underlying matrix stack as the parent Element app, which means you can share access

93
00:06:15,400 --> 00:06:22,000
control and an encryption verification, all the rest of those nice Element features.

94
00:06:22,000 --> 00:06:23,000
And that's not it.

95
00:06:23,000 --> 00:06:26,520
I mean, that's all we're going to highlight today, but there is a lot going on over at

96
00:06:26,520 --> 00:06:30,920
Element and even more so somehow in the wider matrix ecosystem.

97
00:06:30,920 --> 00:06:35,200
Things have just really shifted in the next gear of adoption, and if you haven't yet tried

98
00:06:35,200 --> 00:06:41,040
it, now might be a great time.

99
00:06:41,040 --> 00:06:45,960
Just a double heads up for you, starting with Fedora 34 users, well, I regret to inform

100
00:06:45,960 --> 00:06:48,760
you that your time to move on has arrived.

101
00:06:48,760 --> 00:06:55,600
Fedora 34 reached its end of life a couple of days ago, as we record June 7th, 2022.

102
00:06:55,600 --> 00:07:00,280
And for Ubuntu 21.10 users, well, your clock is ticking too, but you do have just a bit

103
00:07:00,280 --> 00:07:01,280
longer.

104
00:07:01,280 --> 00:07:06,720
21.10 reaches end of life on July 14th, 2022.

105
00:07:06,720 --> 00:07:10,480
Now the good news is that I have heard from multiple folks in the audience that the upgrades

106
00:07:10,480 --> 00:07:16,760
from the latest Fedora and Ubuntu from those end of life releases has actually been pretty

107
00:07:16,760 --> 00:07:21,840
smooth on average.

108
00:07:21,840 --> 00:07:28,960
And a quick little update on the much-anticipated HP Dev1, the popOS-powered AMD-based Linux

109
00:07:28,960 --> 00:07:29,960
laptop.

110
00:07:29,960 --> 00:07:34,240
Not only is it available for ordering now, but shipments seem to be going out pretty

111
00:07:34,240 --> 00:07:35,240
darn quick.

112
00:07:35,240 --> 00:07:41,800
For those of you not familiar with the HP Dev1, the system ships in one default configuration,

113
00:07:41,800 --> 00:07:49,440
which is equipped with an 8-core AMD Ryzen 7 Pro processor, 1TB of PCI and BME storage,

114
00:07:49,440 --> 00:07:51,620
and 16GB of RAM.

115
00:07:51,620 --> 00:07:59,960
That comes with a 14-inch 1000-nit 1080p display at the price point of $1,099, and is only

116
00:07:59,960 --> 00:08:02,840
available in the US for now.

117
00:08:02,840 --> 00:08:06,480
If that piques your interest, you can catch the dev perspective from Michael Dominic's

118
00:08:06,480 --> 00:08:13,580
first hands-on Encoderadio 469, and an old Linux Saltz take this coming Sunday on Linux

119
00:08:13,580 --> 00:08:18,800
Unplugged 462.

120
00:08:18,800 --> 00:08:32,920
Linode makes it possible, simple, affordable, accessible to all of us, enterprises or individuals,

121
00:08:32,920 --> 00:08:36,880
to deploy and manage your projects in the cloud.

122
00:08:36,880 --> 00:08:40,380
Everything we've built in the last couple of years here at JB, we've done it up on Linode.

123
00:08:40,380 --> 00:08:42,960
Our latest projects, they're done on Linode.

124
00:08:42,960 --> 00:08:47,000
Linode's been at this for nearly 19 years, iterating to make it better and better.

125
00:08:47,000 --> 00:08:51,160
And they have some of the best performance with 11 data centers around the world.

126
00:08:51,160 --> 00:08:55,360
Back in May, they launched their managed database service.

127
00:08:55,360 --> 00:08:56,360
That's a great service.

128
00:08:56,360 --> 00:08:59,880
It gives developers access to some popular databases in the cloud, and it shifts some

129
00:08:59,880 --> 00:09:03,400
of the responsibility of maintenance and monitoring onto Linode.

130
00:09:03,400 --> 00:09:07,680
And this week, they're rounding out the offering with Postgres and MongoDB.

131
00:09:07,680 --> 00:09:09,880
And I'm not kidding you.

132
00:09:09,880 --> 00:09:12,080
I'm taking this one, and I'm going to go for it.

133
00:09:12,080 --> 00:09:16,280
I think we're going to move some of our databases to their managed Postgres.

134
00:09:16,280 --> 00:09:20,900
We love Postgres, and I love the way Linode runs their infrastructure.

135
00:09:20,900 --> 00:09:24,800
So you put those two things together, and I think that's just going to make it great.

136
00:09:24,800 --> 00:09:25,800
And you know what?

137
00:09:25,800 --> 00:09:28,320
The reliability for us has been 100%.

138
00:09:28,320 --> 00:09:29,720
And the monitoring is fantastic.

139
00:09:29,720 --> 00:09:34,500
We recently deployed JupyterTube, our PeerTube instance, and I get all kinds of interesting

140
00:09:34,500 --> 00:09:37,880
metrics in their dashboard and alerts when things go a little awry.

141
00:09:37,880 --> 00:09:39,800
It's been really nice.

142
00:09:39,800 --> 00:09:43,440
And I hear from you out there all the time that they have the best support in the business.

143
00:09:43,440 --> 00:09:44,880
So go get that $100.

144
00:09:44,880 --> 00:09:49,680
Build something, try something, learn something, and support the show.

145
00:09:49,680 --> 00:09:55,240
You go to linode.com slash LAN.

146
00:09:55,240 --> 00:10:00,040
Jupyter.party, become a member, support independent content, and get access to all the show's

147
00:10:00,040 --> 00:10:05,240
special feeds, including an ad-free feed of Linux Action News.

148
00:10:05,240 --> 00:10:12,800
That's Jupyter.party to support all the Jupyter broadcasting shows.

149
00:10:12,800 --> 00:10:17,280
And our final story might have been the biggest surprise this week.

150
00:10:17,280 --> 00:10:23,240
As part of Apple's Worldwide Developer Conference, taking place as we record, they've updated

151
00:10:23,240 --> 00:10:28,720
their developer documentation and revealed a tool that enables x86 applications to run

152
00:10:28,720 --> 00:10:36,320
on ARM, but not just Apple's version of ARM, no, any ARM system modern enough to support

153
00:10:36,320 --> 00:10:40,720
at least version 8.2 of the ARM instruction set.

154
00:10:40,720 --> 00:10:48,440
Most of us know this as Rosetta 2, and it's been shipping on M1 Macs since M1 Macs shipped.

155
00:10:48,440 --> 00:10:54,520
And it enables those computers to run code that's built for x86 machines, and those

156
00:10:54,520 --> 00:10:56,080
are ARM-based systems.

157
00:10:56,080 --> 00:11:01,440
But what seems to be new here is Apple has created a Rosetta binary for Linux, intended

158
00:11:01,440 --> 00:11:09,320
to enable running x86 Linux containers and x86 Linux applications on an Apple SOC.

159
00:11:09,320 --> 00:11:15,320
And what's really surprising here is it does not require an Apple CPU, which kind of puts

160
00:11:15,320 --> 00:11:20,120
to bed the myth that Apple's system on a chip had something special baked in specifically

161
00:11:20,120 --> 00:11:24,400
to enable Rosetta and to enable Rosetta's impressive performance.

162
00:11:24,400 --> 00:11:30,980
But no, it seems that what you really need is just a goshdarn modern ARM CPU.

163
00:11:30,980 --> 00:11:32,240
Performance is what we're talking about here.

164
00:11:32,240 --> 00:11:38,040
I mean, that's the big deal, a speed improvement for containers with x86 code in there is going

165
00:11:38,040 --> 00:11:44,160
to be massive because so far, that compatibility has been achieved with slow QMU emulation

166
00:11:44,160 --> 00:11:47,600
that is emulating an entire x86 system.

167
00:11:47,600 --> 00:11:51,740
What's just not so clear is how useful this will be ultimately for those of us running

168
00:11:51,740 --> 00:11:54,740
Linux that aren't on a Mac.

169
00:11:54,740 --> 00:12:01,740
It seems like you might expect getting a Mac with macOS Ace Ventura installed to get access

170
00:12:01,740 --> 00:12:03,920
to the Rosetta Linux binary.

171
00:12:03,920 --> 00:12:08,240
This is definitely early days, but what we've gleaned from the documentation and from some

172
00:12:08,240 --> 00:12:12,960
of the intrepid adventurers who are testing this out is that functionally, you first have

173
00:12:12,960 --> 00:12:15,760
to install Rosetta on the Mac.

174
00:12:15,760 --> 00:12:21,200
Then you mount a shared directory that contains the Rosetta Linux binary into your Linux

175
00:12:21,200 --> 00:12:22,660
virtual machine.

176
00:12:22,660 --> 00:12:29,000
That gets you this shiny new Rosetta Linux binary, which really is an ARM Linux ELF executable

177
00:12:29,000 --> 00:12:30,480
that Apple has created.

178
00:12:30,480 --> 00:12:35,880
But to get it to actually work, you have to do some registration funny business in your

179
00:12:35,880 --> 00:12:38,240
Linux system.

180
00:12:38,240 --> 00:12:45,080
This is done using a feature added to Linux way back in kernel 2.1.43 and later named

181
00:12:45,080 --> 00:12:46,080
the bin-format-misc-module.

182
00:12:46,080 --> 00:12:52,000
According to the patch notes at the time, this feature enables a system administrator

183
00:12:52,000 --> 00:12:57,520
to register interpreters for various binary formats based on a magic number or their file

184
00:12:57,520 --> 00:13:02,900
extension and then cause the appropriate interpreter to be invoked whenever a matching file is

185
00:13:02,900 --> 00:13:03,900
executed.

186
00:13:03,900 --> 00:13:08,200
So, you know, once you've set this up, you've got Rosetta mounted in, you've got it registered

187
00:13:08,200 --> 00:13:13,080
with the system, your kernel is going to see that you're trying to execute an x86 binary

188
00:13:13,080 --> 00:13:17,520
and automatically call the Rosetta to run it for you.

189
00:13:17,520 --> 00:13:22,640
Yeah, it's interesting to see it go this direction.

190
00:13:22,640 --> 00:13:28,640
And it kind of also seems to suggest that Apple plans to keep Rosetta 2 around a lot

191
00:13:28,640 --> 00:13:33,760
longer than they did version one for the PowerPC to Intel transition.

192
00:13:33,760 --> 00:13:35,580
We'll see really where this goes.

193
00:13:35,580 --> 00:13:40,080
What would really be great is to see Apple open this up to the wider ecosystem to publish

194
00:13:40,080 --> 00:13:44,440
this up on GitHub or something like that, ship this as a standalone component that doesn't

195
00:13:44,440 --> 00:13:48,460
require Mac OS so that way developers could put it into their containers while they're

196
00:13:48,460 --> 00:13:53,600
composing them and perhaps would ease the transition from Intel to ARM.

197
00:13:53,600 --> 00:13:56,760
But I won't hold my breath for that one.

198
00:13:56,760 --> 00:14:00,600
If it does happen, though, we'll let you know about that or well, anything else that happens

199
00:14:00,600 --> 00:14:02,640
in the world of Linux and open source news.

200
00:14:02,640 --> 00:14:08,360
So be sure you go to LinuxActionNews.com slash subscribe for all the ways to get new episodes.

201
00:14:08,360 --> 00:14:12,960
And LinuxActionNews.com slash contact for ways to get in touch.

202
00:14:12,960 --> 00:14:16,840
Don't miss this week's episode of Office Hours, a special guest stops by and tells

203
00:14:16,840 --> 00:14:22,240
us about a new open source podcasting app for Android and iOS.

204
00:14:22,240 --> 00:14:27,960
As for us, we'll be back next week with our take on the latest Linux and open source news.

205
00:14:27,960 --> 00:14:28,960
Thanks for joining us.

206
00:14:28,960 --> 00:14:48,400
That's all the news for this week.

