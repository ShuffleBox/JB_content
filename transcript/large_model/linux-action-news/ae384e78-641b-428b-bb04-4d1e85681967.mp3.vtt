WEBVTT

00:00.000 --> 00:09.260
Hello, and welcome to Linux Action News, episode 205 recorded on September 4, 2021. I'm Chris.

00:09.260 --> 00:10.260
And I'm Wes.

00:10.260 --> 00:15.320
Hello, Wes from an extremely hot Tucson, Arizona. Let's do the news.

00:15.320 --> 00:23.200
And we start with a historic moment for SUSE, the release of SUSE Rancher 2.6. 2.6 is hot

00:23.200 --> 00:29.300
on the heels of SUSE's Q2 numbers, the company's first earnings as a public company since their

00:29.300 --> 00:35.160
Ranger Labs acquisition. Key takeaways from the investor briefing are the company's confirmation

00:35.160 --> 00:43.360
of an annual run rate of 519 million, growth of 16% on the prior year, and perhaps most

00:43.360 --> 00:49.580
interestingly, Rancher had an annual run rate of 50 million. That's up 91%.

00:49.580 --> 00:54.800
Those are your numbers the market notices and those are numbers that matter to SUSE.

00:54.800 --> 01:02.280
Rancher 2.6 is released is Rancher now under the SUSE umbrella. It is an evolution of that

01:02.280 --> 01:05.900
brand now. And they've kept it with a minor point release. And I think that's actually

01:05.900 --> 01:10.320
pretty clever by SUSE. We'll get into that in a moment. But their main goal here with

01:10.320 --> 01:15.080
Rancher is to continue to position Rancher as a Kubernetes agnostic management offering.

01:15.080 --> 01:20.280
To that end, this latest release supports any cloud native Computing Foundation certified

01:20.280 --> 01:25.560
Kubernetes distribution. For on premises workloads, there's the Rancher Kubernetes engine, which

01:25.560 --> 01:31.560
runs entirely within Docker containers. And of course, SUSE Rancher supports all the public

01:31.560 --> 01:37.120
cloud distributions, doubling down on their efforts to remain cloud agnostic and vendor

01:37.120 --> 01:39.900
neutral, the key selling point of Rancher.

01:39.900 --> 01:44.360
So what's new in 2.6? Well, actually quite a bit. And it leads one to suspect when you

01:44.360 --> 01:50.260
look at all these changes, they avoided bumping the version to 3.0 simply just to set expectations

01:50.260 --> 01:54.440
with customers that, hey, this product you love this Rancher, it's not going to be radically

01:54.440 --> 01:58.800
different under SUSE. But when you look at it, it has a whole new improved user experience

01:58.800 --> 02:03.920
and a new UI at the top level. They've re-architected some key workflows that right there alone,

02:03.920 --> 02:08.240
some companies would bump the version number over and under the hood, they've improved

02:08.240 --> 02:13.720
security and they've also strengthened compliance capabilities. But it seems like a lot of engineering

02:13.720 --> 02:18.240
work went into rebuilding the containers that Rancher deploys. Of course, when you set up

02:18.240 --> 02:21.520
a Rancher deployment, it's going to spin up a lot of the services that you need inside

02:21.520 --> 02:27.000
containers automatically. Previously, those containers were based on Alpine and Debian

02:27.000 --> 02:33.120
predominantly, but now they've reworked it. So they're all based on SUSE Enterprise Linux.

02:33.120 --> 02:39.440
And in addition to that, SUSE Rancher 2.6 also has added the SUSE Linux Enterprise base

02:39.440 --> 02:44.680
container images. So think universal base images, a containerized subset of RHEL, but

02:44.680 --> 02:48.960
for SUSE Linux Enterprise. And of course, because you got to have acronyms for all this

02:48.960 --> 02:52.160
enterprise stuff. They're calling it the SLI BCI.

02:52.160 --> 02:57.840
I'm not sure that name is really going to stick in my mind. But really, my question

02:57.840 --> 03:05.720
is, what took them so long? At this point, Chris, I think you'd agree with so many management

03:05.720 --> 03:12.520
platforms out there now. The real issue facing IT teams isn't really, can they find something

03:12.520 --> 03:17.240
that works to manage Kubernetes? But really, it's determining the best way to manage a

03:17.240 --> 03:23.160
multi cloud, maybe with some on premises components, and a whole bunch of solutions that you've

03:23.160 --> 03:28.000
already deployed in production, you need something that's going to work with all of that. And

03:28.000 --> 03:33.480
really, SUSE Rancher is known for solving that problem. With 2.6, they're investing

03:33.480 --> 03:35.880
even more into that strategy.

03:35.880 --> 03:41.080
Well, sticking in the container space for one more story, it seems that Docker Inc has

03:41.080 --> 03:45.640
managed to piss off more of their commercial users this week, the company has announced

03:45.640 --> 03:52.080
that their free plan is now a quote, personal plan and requires the businesses with 250

03:52.080 --> 03:57.720
or more employees. Or if that business earns more than 10 million in annual revenue, it

03:57.720 --> 04:02.560
must pay a subscription if they require the use of Docker desktop.

04:02.560 --> 04:07.840
And they very well might if they're using Docker on a Mac or a Windows machine. Now,

04:07.840 --> 04:14.880
there are no changes to the command line Docker engine, but that only runs on Linux. In addition

04:14.880 --> 04:21.380
to that new personal plan, there's also a $5 per month pro plan, and a $7 per month

04:21.380 --> 04:28.520
team subscription. Both of those are left unchanged. There's also a new $21 per month

04:28.520 --> 04:34.360
business subscription that adds centralized management, single sign on and quote, enhanced

04:34.360 --> 04:41.440
security. That's $21 per user. And I can see that adding up really quick. I mean, at that

04:41.440 --> 04:46.600
price, you might as well start swapping people over to desktop Linux and save money. Sadly,

04:46.600 --> 04:51.080
this is truly the forever story of Docker Inc. And I do mean sadly, how the hell are

04:51.080 --> 04:54.500
they going to make money? It seems to be the perpetual question and watching the way they've

04:54.500 --> 04:58.960
just jerked around Mac and Windows users over this last year alone, it, well, it's starting

04:58.960 --> 05:01.760
to look pretty desperate over there at Docker.

05:01.760 --> 05:08.160
And speaking of growing a company based on an open source product, MongoDB just had a

05:08.160 --> 05:14.360
rather impressive quarter. In a recent interview, their CEO also shared some new details about

05:14.360 --> 05:15.360
their customer base.

05:15.360 --> 05:19.720
So we have all types of customers, we now have 29,000 customers, we have some of the

05:19.720 --> 05:27.000
largest brands in the world, people like Toyota, AT&T, Morgan Stanley, Verizon, etc, as well

05:27.000 --> 05:32.200
as cutting edge startups and new breed companies like UiPath and DataRobot, who are building

05:32.200 --> 05:35.760
their business on top of MongoDB. And that's what you're seeing in our results. It was

05:35.760 --> 05:37.440
the best quarter we've had to date.

05:37.440 --> 05:42.840
And it appears the US government may be another potential source of growth for MongoDB. Their

05:42.840 --> 05:47.080
database as a service product that we've talked about before called Atlas, just received a

05:47.080 --> 05:53.120
new level of compliance approval for use in the US federal government. They already use

05:53.120 --> 05:57.760
MongoDB on premises quite a bit. And it seems the US government is quite interested in the

05:57.760 --> 06:01.240
hosted solution from the company.

06:01.240 --> 06:08.300
As the clock ticks towards December 31st, we watch and wait to see how the CentOS community

06:08.300 --> 06:14.800
will handle the upcoming transition to stream. We know Red Hat won't support CentOS 8 past

06:14.800 --> 06:21.120
the end of the year. But now, someone has stepped up to provide updates and support

06:21.120 --> 06:28.780
till the end of 2025. Cloud Linux has announced it will provide those updates and much needed

06:28.780 --> 06:35.200
support for CentOS 8, giving users a new lifeline and more time to work out their plans.

06:35.200 --> 06:39.560
This seems both good and bad to me, Wes. From a practical standpoint, it seems useful for

06:39.560 --> 06:44.640
the market. No doubt many CentOS 8 users will want to take Cloud Linux up on this. That

06:44.640 --> 06:50.800
just seems obvious to me. However, it also seems like it will slow adoption of both their

06:50.800 --> 06:57.400
own Alma Linux alternative and CentOS stream, which ultimately, I suspect it just would

06:57.400 --> 07:03.040
have been better for the industry at large to just accept, adapt, and then transition

07:03.040 --> 07:05.880
to.

07:05.880 --> 07:11.920
We've been keeping an eye on the framework laptop, the modular machine with a big nod

07:11.920 --> 07:17.120
to the right to repair. This week, they've posted specifics for getting the best results

07:17.120 --> 07:23.640
with Linux on the hardware. They note it mostly comes down to driver support in the kernel,

07:23.640 --> 07:28.260
with the relative newness of their Wi-Fi card being a particular challenge. They also point

07:28.260 --> 07:32.720
out that the Goodix-based fingerprint reader will require a newer kernel and at least version

07:32.720 --> 07:37.860
1.92 of libfprint, which is the library for the fingerprint reader. Makes sense. But really,

07:37.860 --> 07:42.800
you can just sum it all up by saying this. If you want to use Linux on a framework laptop,

07:42.800 --> 07:49.720
come Linux kernel 512 or newer. Yeah, that's really it. They note just about everything

07:49.720 --> 07:55.360
else works great with Linux out of the box, including those neat USB-C swappable hardware

07:55.360 --> 08:00.000
modules. Check the link in the show notes for more information on the framework Linux

08:00.000 --> 08:02.560
community.

08:02.560 --> 08:06.760
Linode.com slash LAN. Go there to get $100 in 60 day credit on your new account and you

08:06.760 --> 08:12.280
go there to support the show, of course. Linode started in 2003 as one of the very first companies

08:12.280 --> 08:16.800
in cloud computing. I mentioned that because I think one of the most common questions I

08:16.800 --> 08:20.280
get, Wes and I got it this morning before we started recording the show. Hey, guys,

08:20.280 --> 08:25.640
why should I choose Linode over XYZ provider? Because there are a lot of ways to host with

08:25.640 --> 08:30.360
Linode and Wes responded with, well, I like the fact that Linode is independently owned.

08:30.360 --> 08:34.720
You know, it's not some like crazy VC funded thing like they make money and they survive

08:34.720 --> 08:38.020
on the merits of their product. And I was like, that's a good one. I like Linode because

08:38.020 --> 08:42.680
they're fast. And then that other stuff I learned about later, and I really appreciated

08:42.680 --> 08:46.980
that. But what really made Linode stick with me is their speed and their performance. They

08:46.980 --> 08:52.220
are their own ISP. They've got 11 data centers around the world. They have a brilliant interface

08:52.220 --> 08:55.880
to let you manage all of this. And then the systems themselves would really matter. Our

08:55.880 --> 09:01.440
screamers, they're really fast. Linode has really just been focused on making cloud computing

09:01.440 --> 09:07.180
accessible, affordable and high performance since 2003. That's 18 years of dialing this

09:07.180 --> 09:11.720
thing in. So when you ask me, what's different about Linode? Well, it's everything that would

09:11.720 --> 09:17.000
come from focus like that and from being independently owned and having a true love for the underlying

09:17.000 --> 09:21.040
technology. That's what's different about Linode. That's why I stick with them. That's

09:21.040 --> 09:25.720
why I'm comfortable running my business platform on Linode. And honestly, it's really the best

09:25.720 --> 09:29.600
in class experience from the best customer support in the business to the interface to

09:29.600 --> 09:34.400
the UI to everything down at a technical level. And then I really appreciate all of the little

09:34.400 --> 09:39.400
extras that they have, like their S3 compatible object storage, cloud firewalls, VLAN support,

09:39.400 --> 09:44.520
their powerful DNS manager, and ultimately their support for the community for projects

09:44.520 --> 09:48.880
and open source. And of course, for things like this here humble podcast, there's so

09:48.880 --> 09:51.880
much you could learn. There's so much you could try. So that's why they're giving you

09:51.880 --> 09:58.480
$100 in 60 day credit. But you got to go to linode.com slash land that does a few things.

09:58.480 --> 10:02.240
It lets them know you heard about it here. It says, Hey, it is worth your time and money

10:02.240 --> 10:07.280
investing in the Linux action news. It also gives you that $100 credit. And it lets you

10:07.280 --> 10:11.640
try things out like maybe go install Iperf on Linode and install it on another machine

10:11.640 --> 10:15.720
on your end and do some performance testing there. Go try out a distribution you've never

10:15.720 --> 10:20.680
played around with and take advantage of the fact that you got snapshots. Yeah, I mean,

10:20.680 --> 10:24.480
I do. I'll spin up something on the node, just to avoid having to spin something up

10:24.480 --> 10:28.960
in a VM on my laptop to make it warm. Because really, it's so quick. It's so simple. I can

10:28.960 --> 10:33.520
deploy the entire base stack in like one click, or I can do a whole DIY setup if that's how

10:33.520 --> 10:38.440
I prefer. You just got to get started. So go get that $100 credit today. Sign up at

10:38.440 --> 10:46.520
linode.com slash lamb linux.ting.com. Have you heard the word? No, it's not the bird.

10:46.520 --> 10:51.640
It's ting. Let's go see how much you could save right now and take 25 bucks off of that.

10:51.640 --> 10:56.840
linux.ting.com. The trick is they're an MVNO or a mobile virtual network operator. That

10:56.840 --> 11:00.840
means Ting customers get access to all the big carrier networks, the ones you heard of,

11:00.840 --> 11:04.920
the nationwide coast to coast coverage that you look at on the coverage maps, you get

11:04.920 --> 11:11.800
access to that. But you just pay less. That's why I've been a Ting customer since 2013.

11:11.800 --> 11:16.000
They've stayed flexible with me when I'm on the road. They've got great plans. And I love

11:16.000 --> 11:20.360
their new plans. They make it great for an individual, a family or a small business.

11:20.360 --> 11:23.760
I like to mention the set 12 because I think that really hits the sweet spot. Go check

11:23.760 --> 11:28.160
that one out. They got a whole bunch. Get started at linux.ting.com. But set 12 gives

11:28.160 --> 11:34.640
you 12 gigs of data and unlimited talk and text for 35 bucks a month. How nice is that?

11:34.640 --> 11:38.600
You just don't even have to worry about it. I mean, you sync your music and your podcast

11:38.600 --> 11:42.360
while you're on Wi Fi and you're pretty much good to go. But if you use two gigs or you

11:42.360 --> 11:46.520
use 20 gigs, there's a Ting plan for you. And every plan gets access to Ting's award

11:46.520 --> 11:51.360
winning customer service with nationwide LTE and 5g coverage. It's simple to switch to

11:51.360 --> 11:55.160
Ting. Pretty much any phone will work. So just head to linux.ting.com. Check your current

11:55.160 --> 11:58.840
phone, create an account and pick the plan that's right for you. Once everything checks

11:58.840 --> 12:01.720
out, Ting will just send you a SIM card in the mail. You pop that in your phone and you

12:01.720 --> 12:06.260
get activated in minutes and they've got a nice clean process for all of it. And while

12:06.260 --> 12:10.280
you're there, go check out the Ting blog. They often are doing giveaways or helping

12:10.280 --> 12:13.760
with tips on battery life. There's a lot you can learn just from their blog. It's something

12:13.760 --> 12:17.480
that I've read for years now. So cut your current phone bill in half. It's never been

12:17.480 --> 12:22.100
easier with Ting's brand new plans. It is truly the next generation of Ting mobile.

12:22.100 --> 12:30.400
It's here and go see how much you could save and then take 25 bucks off that. Linux.ting.com.

12:30.400 --> 12:35.260
Just a couple of quick stories to round us out today. We've got to get Chris out of here

12:35.260 --> 12:42.460
before he melts. It's actually over 100 degrees Fahrenheit in his recording spot right now.

12:42.460 --> 12:48.360
So first, it seems the RISC-V platform might be getting a boost from a rather unlikely

12:48.360 --> 12:56.040
source. Apple is exploring using the open source alternative to ARM CPUs in future devices,

12:56.040 --> 13:00.380
at least according to a recent job posting. Yeah, the job posting is rather revealing

13:00.380 --> 13:05.800
and I would expect to see Apple use this for IoT type devices, you know, dongles and their

13:05.800 --> 13:11.040
home pod type gadgets. In fact, a few of Apple's cables like the lightning to headphone cable

13:11.040 --> 13:15.520
actually have tiny, tiny ARM computers in them doing digital to analog conversions already.

13:15.520 --> 13:20.400
Yeah, that makes sense. And maybe this way there'll be a few fewer ARM license fees to

13:20.400 --> 13:28.040
pay. And while we're speaking of Apple hardware, the much anticipated IOMMU driver required

13:28.040 --> 13:35.240
for PCIe, Wi-Fi, USB, display support and almost everything else on the M1 platform

13:35.240 --> 13:42.120
has finally been merged upstream by Linus into the upcoming 5.15 kernel. This is a huge

13:42.120 --> 13:47.560
milestone, Wes. This is huge. It's now being merged by Linus and this is a lot of what

13:47.560 --> 13:52.120
it takes to get Linux running on an M1. And let's not forget how great it is to that this

13:52.120 --> 13:58.160
is landing upstream. It's not like some crazy fork of Linux. Obviously, GPU support is still

13:58.160 --> 14:03.360
a big, maybe the biggest hurdle, but we're already seeing progress steadily be made in

14:03.360 --> 14:08.960
that direction, too. But speaking of things landing in Linux 5.15, one of the earliest

14:08.960 --> 14:17.320
pull requests sent in for 5.15 was KSMBD, an in-kernel SMB3 file server developed by

14:17.320 --> 14:24.480
Samsung. Now, KSMBD isn't designed to replace our beloved Samba. Instead, it's focusing

14:24.480 --> 14:30.120
on delivering really fast SMB3 file server performance and also supporting some interesting

14:30.120 --> 14:36.360
features that can be far more easily implemented in kernel space. Things like RDMA support

14:36.360 --> 14:41.840
for SMB Direct, which can help offload some of the SMB workload to supported network cards.

14:41.840 --> 14:45.880
Not just that, Wes, but also they said this is just going to work better for some Linux

14:45.880 --> 14:50.420
workloads on smaller devices that need to host files. What I was mostly curious about

14:50.420 --> 14:56.360
is will they integrate with the existing Samba user tools? And it appears they will, at least

14:56.360 --> 15:00.840
they say, where appropriate. And the Samsung developers have worked with the Samba team

15:00.840 --> 15:04.780
to make sure that some of the configuration files work right, things like extended attributes

15:04.780 --> 15:10.520
are supported and compatible. And really, I never thought this was actually going to

15:10.520 --> 15:16.200
get merged. I never thought Linus would merge a file server into the kernel. But when we

15:16.200 --> 15:20.880
read through this in some workloads, I start thinking to myself, yeah, actually, I could

15:20.880 --> 15:25.120
see myself using this. So maybe I'm actually glad to see it land.

15:25.120 --> 15:30.360
You know, I didn't expect it either. But if you do use it, make sure you've got a firewall.

15:30.360 --> 15:34.040
That's a great point, Wes, like how many Android devices is going to get installed on from

15:34.040 --> 15:38.760
Samsung that are just connected to an LTE network all the time or a 5g network? I'll

15:38.760 --> 15:42.440
tell you what, though, when 515 ships, I think we're going to be pretty tempted to try it

15:42.440 --> 15:46.760
out. So check out linuxactionnews.com slash subscribe for all the ways to get new episodes

15:46.760 --> 15:51.560
and linuxactionnews.com slash contact for ways to keep in touch. And if you want to

15:51.560 --> 15:56.040
hear more on the framework laptop, Cassidy joined us and gave us his take. He's had it

15:56.040 --> 16:00.000
for a while. So check out linuxunplug.com slash 419.

16:00.000 --> 16:04.480
As for us, we'll be back next Monday with our weekly take on the latest Linux and open

16:04.480 --> 16:05.840
source news.

16:05.840 --> 16:24.320
Thanks for joining us. And that's all the news for this week.

