1
00:00:00,000 --> 00:00:08,920
Hello, and welcome to Linux Action News Episode 187, recorded on May 2nd, 2021.

2
00:00:08,920 --> 00:00:09,920
I'm Chris.

3
00:00:09,920 --> 00:00:10,920
And I'm Wes.

4
00:00:10,920 --> 00:00:11,920
Hello, Wes.

5
00:00:11,920 --> 00:00:12,920
Let's do the news.

6
00:00:12,920 --> 00:00:19,740
Our top story this week is Fedora 34, which was just released last Tuesday.

7
00:00:19,740 --> 00:00:24,340
There are many reasons to give Fedora 34 a look, but one of them that might interest

8
00:00:24,340 --> 00:00:30,780
you is that Fedora 34 will be the basis for the next release of Red Hat Enterprise Linux,

9
00:00:30,780 --> 00:00:32,800
the upcoming RHEL 9.

10
00:00:32,800 --> 00:00:37,160
Now, of course, before we get to that point, we're going to need a new version of CentOS

11
00:00:37,160 --> 00:00:38,160
Stream.

12
00:00:38,160 --> 00:00:39,160
We're on 8 right now.

13
00:00:39,160 --> 00:00:46,320
We'll need to get to Stream 9, which we're told to expect sometime Q2 2021.

14
00:00:46,320 --> 00:00:47,320
That's coming up.

15
00:00:47,320 --> 00:00:48,560
I mean, that's right now.

16
00:00:48,560 --> 00:00:49,560
That is now, isn't it?

17
00:00:49,560 --> 00:00:51,040
Sooner than it seems.

18
00:00:51,040 --> 00:00:56,740
And back to Fedora 34 itself, the workstation spin is getting a lot of the attention this

19
00:00:56,740 --> 00:00:59,940
release cycle because it features the new GNOME 40.

20
00:00:59,940 --> 00:01:05,620
That's the big release that has the new horizontal layout, also features GTK 4 and a ton of updated

21
00:01:05,620 --> 00:01:08,540
apps in the GNOME ecosystem.

22
00:01:08,540 --> 00:01:11,820
It's getting a lot of attention just for that alone.

23
00:01:11,820 --> 00:01:16,900
Another huge change this time around is a new default sound server.

24
00:01:16,900 --> 00:01:21,180
Yeah, so long PulseAudio, hello PipeWire.

25
00:01:21,180 --> 00:01:26,700
This is a big change, but Fedora has been here before way back in 2007 and Fedora 8.

26
00:01:26,700 --> 00:01:31,940
That was when Fedora switched to PulseAudio the first time, so it had a pretty good run.

27
00:01:31,940 --> 00:01:35,320
New stuff is the name of the game for Fedora 34.

28
00:01:35,320 --> 00:01:38,940
Some Fedora releases feel really incremental and others feel huge.

29
00:01:38,940 --> 00:01:45,280
You know, GNOME 40, PipeWire is big, but for the plasma spin, Fedora 34 is the version

30
00:01:45,280 --> 00:01:48,420
where plasma went to Wayland by default.

31
00:01:48,420 --> 00:01:50,620
That was big for several reasons.

32
00:01:50,620 --> 00:01:51,620
Number one, it's a big statement.

33
00:01:51,620 --> 00:01:57,320
Now, both major spins of Fedora are Wayland first, but number two is it drove a lot of

34
00:01:57,320 --> 00:02:02,400
additional Wayland improvements within the plasma project to get things ready for 34,

35
00:02:02,400 --> 00:02:07,300
so it meant all plasma users benefited and everyone got improved Wayland support, which

36
00:02:07,300 --> 00:02:08,300
is really nice to see.

37
00:02:08,300 --> 00:02:13,140
Enough of that desktop nonsense, I know what our audience wants, and it's nitty gritty

38
00:02:13,140 --> 00:02:19,860
system details, one of those this time around is the enabling of ButterFS transparent compression

39
00:02:19,860 --> 00:02:20,860
by default.

40
00:02:20,860 --> 00:02:23,900
I mean, at least if you're using ButterFS, that is.

41
00:02:23,900 --> 00:02:29,180
And of course you might be because the last Fedora release saw the switch to using ButterFS

42
00:02:29,180 --> 00:02:30,180
by default.

43
00:02:30,180 --> 00:02:34,300
So this is a big sign that things are going well and they're comfortable twiddling a

44
00:02:34,300 --> 00:02:35,300
few settings.

45
00:02:35,300 --> 00:02:39,380
Now, this is much like PipeWire, it's one of those changes you just shouldn't have to

46
00:02:39,380 --> 00:02:43,860
notice if everything goes well, except maybe it'll be a little bit faster to access things

47
00:02:43,860 --> 00:02:45,220
off your file system.

48
00:02:45,220 --> 00:02:49,660
It also means less SSD writes if you use it on an SSD because the compression means less

49
00:02:49,660 --> 00:02:54,100
actual individual writing and it could expand and extend the life of your disk and maybe

50
00:02:54,100 --> 00:02:56,860
even slightly reduce power consumption.

51
00:02:56,860 --> 00:03:02,040
Well, if you're worried about your memory usage, good news for you, Fedora is continuing

52
00:03:02,040 --> 00:03:06,460
their development of early out of memory detection in user space.

53
00:03:06,460 --> 00:03:12,020
Now, before they'd rolled out early OOMD, but that's now being switched to system D

54
00:03:12,020 --> 00:03:13,020
OOMD.

55
00:03:13,020 --> 00:03:14,020
Yeah, that's right.

56
00:03:14,020 --> 00:03:15,620
System D has a daemon for that.

57
00:03:15,620 --> 00:03:20,060
I know that you could roll your eyes and all system D swallows another project, but it

58
00:03:20,060 --> 00:03:22,220
seems like it kind of makes sense to put it here.

59
00:03:22,220 --> 00:03:26,100
And it seems like the configuration is a lot more straightforward this way, too.

60
00:03:26,100 --> 00:03:27,100
Definitely.

61
00:03:27,100 --> 00:03:28,100
And you're right.

62
00:03:28,100 --> 00:03:31,300
I mean, system D is already setting things up, managing C groups, and that's a big part

63
00:03:31,300 --> 00:03:34,840
of what enables system D OOMD to work so well.

64
00:03:34,840 --> 00:03:38,860
Also part of that is the Linux pressure stall information that it's got access to now.

65
00:03:38,860 --> 00:03:44,060
Thanks to Facebook rounding out the low level changes, we were pretty impressed with the

66
00:03:44,060 --> 00:03:47,620
cleanup work being done for grub configuration.

67
00:03:47,620 --> 00:03:51,620
Fedora runs on all kinds of systems with different methods of booting.

68
00:03:51,620 --> 00:03:56,300
But when you were doing things on EFI, that was in particular a little bit messy, but

69
00:03:56,300 --> 00:03:59,940
they've standardized, they've cleaned things up, and now you should have a consistent experience

70
00:03:59,940 --> 00:04:03,940
no matter where you're running Fedora, what type of server or workstation environment

71
00:04:03,940 --> 00:04:09,020
you can look at exactly the same place to find your grub dot CFG, although here's hoping

72
00:04:09,020 --> 00:04:10,020
you don't have to.

73
00:04:10,020 --> 00:04:13,900
Yeah, that is a really, really nice change.

74
00:04:13,900 --> 00:04:15,580
There's a ton of stuff in this release, though, West.

75
00:04:15,580 --> 00:04:17,240
We just scratched the surface here.

76
00:04:17,240 --> 00:04:25,340
If you want more details, then do check out our in-depth review in Linux Unplugged 403.

77
00:04:25,340 --> 00:04:29,380
And now an update on our top story from last week that involved that University of Minnesota

78
00:04:29,380 --> 00:04:30,600
kernel ban.

79
00:04:30,600 --> 00:04:36,020
We've sourced some of this news from LWN, but I take you back to April 20th, 2021, when

80
00:04:36,020 --> 00:04:40,900
the world became aware of a research program that had been conducted out of the University

81
00:04:40,900 --> 00:04:46,860
of Minnesota that involved submitting intentionally buggy patches for inclusion into the Linux

82
00:04:46,860 --> 00:04:48,440
kernel.

83
00:04:48,440 --> 00:04:52,140
As you probably would figure, there's been some updates since last episode.

84
00:04:52,140 --> 00:04:56,500
A paper that was resulting from all of this work, that research paper that was going to

85
00:04:56,500 --> 00:05:01,740
be revealed at the IEEE symposium at the end of May, that's been withdrawn.

86
00:05:01,740 --> 00:05:02,740
That's off.

87
00:05:02,740 --> 00:05:04,160
They're not doing that anymore.

88
00:05:04,160 --> 00:05:09,700
Various letters have gone back and forth between the Linux Foundation and the university, and

89
00:05:09,700 --> 00:05:12,060
a giant audit has kicked off.

90
00:05:12,060 --> 00:05:15,700
So really, we need to kind of go through all of this because some of these details really

91
00:05:15,700 --> 00:05:16,700
matter.

92
00:05:16,700 --> 00:05:22,140
And we have more information than we had last week that I think fills in a lot of this stuff.

93
00:05:22,140 --> 00:05:28,440
And one of those details that's worth making really clear right now is that the most recent

94
00:05:28,440 --> 00:05:35,080
patch from early April, that was from a totally different developer, not connected to the

95
00:05:35,080 --> 00:05:37,260
hypocrite research paper.

96
00:05:37,260 --> 00:05:42,760
The patches for the paper, those were submitted back in August of 2020.

97
00:05:42,760 --> 00:05:49,000
But that said, the recent patches' poor code quality along with its source led kernel maintainers

98
00:05:49,000 --> 00:05:54,420
to suspect that maybe the effort to submit intentionally malicious patches was still

99
00:05:54,420 --> 00:05:55,420
ongoing.

100
00:05:55,420 --> 00:06:00,660
Now, since then, it has become apparent that is not the case.

101
00:06:00,660 --> 00:06:07,140
But by the time the full story became clear, well, the discussion was already well underway.

102
00:06:07,140 --> 00:06:12,380
The fundamental issue was is that the university violated the kernel team's trust by conducting

103
00:06:12,380 --> 00:06:13,380
this research.

104
00:06:13,380 --> 00:06:16,500
So essentially, all patches became suspect.

105
00:06:16,500 --> 00:06:21,340
On April 22nd, the Linux Foundation and the Technical Advisory Board sent a letter to

106
00:06:21,340 --> 00:06:26,460
the university researchers outlining how the situation should be addressed in their view.

107
00:06:26,460 --> 00:06:31,900
The letter asked for a complete disclosure of the buggy patches sent as part of the project.

108
00:06:31,900 --> 00:06:37,780
And it also asked the team to withdraw the paper that was resulting from this work.

109
00:06:37,780 --> 00:06:42,500
In response, the researchers posted an open letter apologizing to the community, followed

110
00:06:42,500 --> 00:06:47,100
by a few days later, a summary of the work they did as part of the Hypocrite Commits

111
00:06:47,100 --> 00:06:48,100
project.

112
00:06:48,100 --> 00:06:52,140
They outlined five patches submitted overall from two sock puppet accounts.

113
00:06:52,140 --> 00:06:56,860
But one of them was an ordinary bug fix that was sent from the wrong sock puppet account

114
00:06:56,860 --> 00:06:59,380
by mistake.

115
00:06:59,380 --> 00:07:04,280
Of the remaining four patches, one of them was an attempt to insert a bug that was itself

116
00:07:04,280 --> 00:07:05,280
buggy.

117
00:07:05,280 --> 00:07:07,720
So the patch was actually valid.

118
00:07:07,720 --> 00:07:10,140
And the other three contained real bugs.

119
00:07:10,140 --> 00:07:13,860
None of the three were accepted by maintainers, though the reasons for rejection were not

120
00:07:13,860 --> 00:07:16,820
always the bugs necessarily themselves in question.

121
00:07:16,820 --> 00:07:21,740
Yeah, some of those were just things like basic code quality and style.

122
00:07:21,740 --> 00:07:26,940
So while the researchers had managed to find some potential issues in the kernel, their

123
00:07:26,940 --> 00:07:32,540
execution and attention to detail in all of this research got in the way of any potential

124
00:07:32,540 --> 00:07:34,580
insights that we might have gathered.

125
00:07:34,580 --> 00:07:39,540
And that's, that's really unfortunate, because as you mentioned, it has cost both the time

126
00:07:39,540 --> 00:07:42,220
of the kernel community and the trust.

127
00:07:42,220 --> 00:07:43,220
Yeah.

128
00:07:43,220 --> 00:07:47,140
I mean, it was not only the time to review patches that were essentially worthless, but

129
00:07:47,140 --> 00:07:53,540
now the massive undertaking of reviewing all of the patches ever from the university.

130
00:07:53,540 --> 00:07:55,740
That's pretty wild.

131
00:07:55,740 --> 00:07:59,860
So you want to talk about time sick now it's 190 patches that have been identified.

132
00:07:59,860 --> 00:08:03,040
And they're still going through all of them.

133
00:08:03,040 --> 00:08:05,060
So far, things look pretty acceptable.

134
00:08:05,060 --> 00:08:08,260
And those that are acceptable, they're keeping them, they're not just like throwing stuff

135
00:08:08,260 --> 00:08:09,260
out.

136
00:08:09,260 --> 00:08:13,460
And it does turn out some of them are a little trickier to rip out than maybe originally

137
00:08:13,460 --> 00:08:15,340
thought and they're going to require another pass.

138
00:08:15,340 --> 00:08:18,180
But we'll see the review is not yet complete.

139
00:08:18,180 --> 00:08:24,460
And in there, there are also some that probably shouldn't have been merged in the first place.

140
00:08:24,460 --> 00:08:28,740
And that's kind of one interesting aspect of this whole conversation is that while we

141
00:08:28,740 --> 00:08:32,820
like how fast the kernel develops, I mean, we all want to get the shiny new features

142
00:08:32,820 --> 00:08:40,220
or hardware enablement at some level, that rapid pace of development might be incompatible

143
00:08:40,220 --> 00:08:46,580
with the other serious goal of good rigorous patch review and just having a low number

144
00:08:46,580 --> 00:08:48,060
of bugs overall.

145
00:08:48,060 --> 00:08:53,460
Yeah, it leaves that sinking feeling that potentially the model is a little vulnerable

146
00:08:53,460 --> 00:08:57,140
because you have maintainers who are very overworked.

147
00:08:57,140 --> 00:09:00,900
That doesn't in itself right there when you just stop and we think about what a time precious

148
00:09:00,900 --> 00:09:05,460
resource kernel maintainers are, that itself doesn't feel very maintainable.

149
00:09:05,460 --> 00:09:10,120
And then when you look at the velocity of development on the kernel, which is just,

150
00:09:10,120 --> 00:09:11,120
it's mind boggling.

151
00:09:11,120 --> 00:09:12,940
We covered some of the numbers last week.

152
00:09:12,940 --> 00:09:13,940
Mind boggling.

153
00:09:13,940 --> 00:09:14,940
Yeah.

154
00:09:14,940 --> 00:09:20,080
I mean, we'll see if there are any changes to the kernel development process as a result

155
00:09:20,080 --> 00:09:23,780
of this whole embarrassing little kerfuffle.

156
00:09:23,780 --> 00:09:29,580
But with the paper no longer being presented and rightfully so, I'm kind of a little worried

157
00:09:29,580 --> 00:09:37,100
that the conversation has been more about punishment than prevention.

158
00:09:37,100 --> 00:09:38,820
Linode.com slash LAN.

159
00:09:38,820 --> 00:09:43,300
Linode is the largest independent cloud computing provider, and they are our cloud computing

160
00:09:43,300 --> 00:09:44,300
provider.

161
00:09:44,300 --> 00:09:47,800
No matter what skill level you're at or what technology stack you use, Linode can help

162
00:09:47,800 --> 00:09:50,280
your ideas come to life on the web.

163
00:09:50,280 --> 00:09:54,300
And if you ever run into any trouble, if it's your production system that's critical for

164
00:09:54,300 --> 00:09:59,540
your work, or if it's just a system you like to play Minecraft on, Linode has amazing 24

165
00:09:59,540 --> 00:10:02,380
seven customer support by phone or by ticket.

166
00:10:02,380 --> 00:10:04,380
And they have hundreds of guides and tutorials.

167
00:10:04,380 --> 00:10:09,660
In fact, in the show notes, my friends, I'll link you to a guide on getting Twitch in a

168
00:10:09,660 --> 00:10:12,060
box up and running on Linode.

169
00:10:12,060 --> 00:10:17,340
If you want to self host a live stream service, you should check out Owncast, which you can

170
00:10:17,340 --> 00:10:20,540
deploy in one click on Linode.

171
00:10:20,540 --> 00:10:22,540
It's great for just getting a stream up and going.

172
00:10:22,540 --> 00:10:28,100
And it's a great way to use that $100 credit when you go to Linode.com slash LAN.

173
00:10:28,100 --> 00:10:33,580
New accounts can sign up at Linode.com slash LAN and get $100 for 60 days.

174
00:10:33,580 --> 00:10:37,620
Once you're on, you can find out Linode is easy to use and has powerful tools and a great

175
00:10:37,620 --> 00:10:38,620
cloud dashboard.

176
00:10:38,620 --> 00:10:41,340
And I love their S3 compatible object storage.

177
00:10:41,340 --> 00:10:46,080
What a simple way to back up your configuration or maybe a few systems on your LAN to object

178
00:10:46,080 --> 00:10:47,860
storage in their cloud.

179
00:10:47,860 --> 00:10:53,020
Or a great way to have a static website that loads crazy fast with no crazy weird web server

180
00:10:53,020 --> 00:10:57,700
in front that loads all this stuff, I'm looking at you WordPress.

181
00:10:57,700 --> 00:10:58,880
That's really cool.

182
00:10:58,880 --> 00:11:02,660
And it makes you look great for a portfolio too when you have a crazy fast static website.

183
00:11:02,660 --> 00:11:07,120
They also have cloud firewalls and all of those one click applications beyond just Owncast.

184
00:11:07,120 --> 00:11:11,540
And what I love about Linode is they're super fast networking, 11 data centers worldwide

185
00:11:11,540 --> 00:11:13,820
and they are their own ISP.

186
00:11:13,820 --> 00:11:17,220
There's so much to like about Linode that you need that $100.

187
00:11:17,220 --> 00:11:23,220
So go to Linode.com slash LAN, get $100 for a new account for 60 days and try out all

188
00:11:23,220 --> 00:11:27,380
the great things we're always going on about and see why Linode is where we host everything

189
00:11:27,380 --> 00:11:33,780
for Jupiter Broadcasting 3.0, linode.com slash LAN.

190
00:11:33,780 --> 00:11:39,580
There have been several important updates in the land of Enterprise Linux this week.

191
00:11:39,580 --> 00:11:45,820
And first, let's note the arrival of Red Hat Enterprise Linux 8.4, which Red Hat described

192
00:11:45,820 --> 00:11:49,900
as a system designed to be deployed on the computing edge.

193
00:11:49,900 --> 00:11:56,000
I guess that's our sign that AI and blockchain aren't hip anymore because Red Hat is pushing

194
00:11:56,000 --> 00:12:00,420
this so hard as an OS that's great for the edge.

195
00:12:00,420 --> 00:12:04,540
Which is funny because I just don't completely agree with their assessment, but it is what

196
00:12:04,540 --> 00:12:05,540
it is.

197
00:12:05,540 --> 00:12:10,100
What everyone seems to be really excited about this week, though, are the CentOS clones.

198
00:12:10,100 --> 00:12:13,980
Rocky Linux 8.3 RC1 was released over the weekend.

199
00:12:13,980 --> 00:12:18,820
I think they were targeting for a Friday release and it ended up landing on Saturday, but on

200
00:12:18,820 --> 00:12:20,260
the same weekend.

201
00:12:20,260 --> 00:12:24,460
Rocky Linux, of course, is one of the first distributions that was announced after CentOS's

202
00:12:24,460 --> 00:12:28,740
development track switched to Stream from the traditional release model.

203
00:12:28,740 --> 00:12:33,500
Since the founding of the project to the end of last year, Rocky Linux has seen some growth,

204
00:12:33,500 --> 00:12:34,500
considerable growth.

205
00:12:34,500 --> 00:12:36,140
Their Slack channels have exploded.

206
00:12:36,140 --> 00:12:40,180
Their interest has really grown and the project has announced this milestone release with

207
00:12:40,180 --> 00:12:44,820
the following statement saying, Rocky Linux Enterprise Software Foundation is pleased

208
00:12:44,820 --> 00:12:48,900
to announce the general availability of Rocky Linux 8.3.

209
00:12:48,900 --> 00:12:56,500
What I think is kind of neat, Wes, is it has support for ARM64 and of course x86-64.

210
00:12:56,500 --> 00:13:01,140
Also did you see in here, because I mean this is the state of Red Hat Enterprise Linux 8,

211
00:13:01,140 --> 00:13:04,820
which this is based on, that it's still Rockin' Kernel 4.18.

212
00:13:04,820 --> 00:13:08,060
Yeah, that was a solid kernel.

213
00:13:08,060 --> 00:13:10,400
I might even still have a machine running it.

214
00:13:10,400 --> 00:13:12,140
We have one even older in the studio.

215
00:13:12,140 --> 00:13:17,380
We have a machine Rockin' Kernel 4.15, an 1804 machine, so we actually do have that

216
00:13:17,380 --> 00:13:18,380
beat.

217
00:13:18,380 --> 00:13:22,740
The desktop environment is GNOME 3.3.2, so there's that, I suppose.

218
00:13:22,740 --> 00:13:25,420
Hey, that almost sounds surprisingly modern.

219
00:13:25,420 --> 00:13:29,500
Almost, but then 40 comes along and makes everything look old again.

220
00:13:29,500 --> 00:13:36,860
Well, while you're talking about making things look old again, Alma Linux, yet that other

221
00:13:36,860 --> 00:13:41,560
RHEL clone, released a beta of 8.4.

222
00:13:41,560 --> 00:13:46,700
So if you're excited about the things Red Hat talked about in the arrival of 8.4, well

223
00:13:46,700 --> 00:13:49,100
Alma Linux right now looks like your best bet.

224
00:13:49,100 --> 00:13:51,180
Rocky is still plain catch up.

225
00:13:51,180 --> 00:13:56,180
Yeah, so there is a couple of things when you're looking at what sets these CentOS replacements

226
00:13:56,180 --> 00:13:57,500
apart.

227
00:13:57,500 --> 00:14:04,020
One is the governance structure, which both Alma Linux and Rocky Linux are now community

228
00:14:04,020 --> 00:14:08,400
driven, although I think Rocky Linux probably more so, just out of its nature.

229
00:14:08,400 --> 00:14:13,260
But also how does it track Red Hat Enterprise Linux releases, and what is the delay there?

230
00:14:13,260 --> 00:14:17,340
What I think Alma Linux is saying with their 8.4 beta is we're going to try to be as close

231
00:14:17,340 --> 00:14:21,660
to RHEL's official releases as possible.

232
00:14:21,660 --> 00:14:26,020
And they're doing something else that I think is also going to be a nice differentiator,

233
00:14:26,020 --> 00:14:29,020
is they're kind of setting up obvious support conduits.

234
00:14:29,020 --> 00:14:32,420
So if you get Alma Linux going, you got it in production, and now all of a sudden this

235
00:14:32,420 --> 00:14:37,940
website that you built is making an income and it's important to you, there is a route

236
00:14:37,940 --> 00:14:41,620
you can take to call up support when something breaks.

237
00:14:41,620 --> 00:14:45,000
Or maybe you deploy these as some part of your back end infrastructure and one day they

238
00:14:45,000 --> 00:14:46,620
became valuable to you.

239
00:14:46,620 --> 00:14:53,500
You can kind of step into a support cycle with SLAs and 24 by 7 incident support.

240
00:14:53,500 --> 00:14:57,380
It's kind of a nice package because you get community control, theoretically, I mean I

241
00:14:57,380 --> 00:14:59,420
think that's still fully materializing.

242
00:14:59,420 --> 00:15:04,900
They appear to be releasing pretty quickly in line with main RHEL, and now they have

243
00:15:04,900 --> 00:15:08,700
this hey if you want it support package, much like Ubuntu LTS has.

244
00:15:08,700 --> 00:15:13,940
Yeah, that sounds pretty nice in theory, but we don't have a lot of details yet on exactly

245
00:15:13,940 --> 00:15:18,100
how this will work or what it will cost.

246
00:15:18,100 --> 00:15:21,580
I'm sort of assuming it'll be cheaper than RHEL though, right?

247
00:15:21,580 --> 00:15:24,420
It seems like it should be, or else what's really the value here?

248
00:15:24,420 --> 00:15:31,160
Yeah, they say the details will be available in May 2021, a multi-tiered support system.

249
00:15:31,160 --> 00:15:35,420
So at least some of those you'd think are presumably cheaper, but yeah, otherwise people

250
00:15:35,420 --> 00:15:36,420
just buy RHEL.

251
00:15:36,420 --> 00:15:38,060
That's a great point, Wes.

252
00:15:38,060 --> 00:15:44,160
Ubuntu also has a warning out to folks this week for 21.04 breaking older machines with

253
00:15:44,160 --> 00:15:45,160
EFI.

254
00:15:45,160 --> 00:15:50,340
A patch is in route or probably already out now, but you'd have to have an ISO that has

255
00:15:50,340 --> 00:15:51,400
it applied.

256
00:15:51,400 --> 00:15:57,660
This problem mostly affected older machines like a 2012 MacBook Air and some older ThinkPad

257
00:15:57,660 --> 00:16:03,040
models, but it was enough for Ubuntu to delay the rollout of that little notification prompting

258
00:16:03,040 --> 00:16:07,620
you to upgrade just on the off chance that it might affect your computer and render it

259
00:16:07,620 --> 00:16:09,500
unbootable.

260
00:16:09,500 --> 00:16:13,700
And there is a workaround that people could use if they really want 21.04 right now.

261
00:16:13,700 --> 00:16:19,780
Yeah, you'll just need to go copy the EFI boot files from a working 20.04 ISO.

262
00:16:19,780 --> 00:16:26,160
And while we're still in Ubuntu land, it's been 370 days since Ubuntu 20.04's release

263
00:16:26,160 --> 00:16:33,440
on April 23rd, 2020, and this week we got the first beta for elementary OS 6, which

264
00:16:33,440 --> 00:16:40,220
is based on Ubuntu 20.04 and looks really sharp with completely revamped notifications

265
00:16:40,220 --> 00:16:46,980
and a major shift in several ways they build the OS, including how you get it installed.

266
00:16:46,980 --> 00:16:53,780
Yeah, there's a brand new installer for elementary OS, which should bring faster and more straightforward

267
00:16:53,780 --> 00:16:58,660
installs for both regular old end users, but also for OEMs.

268
00:16:58,660 --> 00:17:03,060
The elementary team also notes here that they would really appreciate a lot of testing across

269
00:17:03,060 --> 00:17:06,940
different hardware and configurations, so if you do have a non-primary machine laying

270
00:17:06,940 --> 00:17:11,780
around you don't mind trying a beta on, maybe give elementary OS 6 beta a shot.

271
00:17:11,780 --> 00:17:15,900
Yeah, you don't have to be a master developer to run through the installer and provide the

272
00:17:15,900 --> 00:17:17,620
team some feedback if you hit a bug.

273
00:17:17,620 --> 00:17:18,620
It's a great way to help out.

274
00:17:18,620 --> 00:17:22,100
I should note though, if you want to help out from the ARM side just right now, as far

275
00:17:22,100 --> 00:17:27,780
as I know, there's no early builds of this beta for ARM systems, so keep an eye out.

276
00:17:27,780 --> 00:17:29,760
You'll have to wait a little bit, I think.

277
00:17:29,760 --> 00:17:34,940
But when you do get it on a system that is supported, you get some really nice new updates

278
00:17:34,940 --> 00:17:37,920
to the look and feel of elementary OS 6.

279
00:17:37,920 --> 00:17:42,340
There's a ton of things under the hood, because for elementary OS users, Wes, they're getting

280
00:17:42,340 --> 00:17:47,420
everything that comes with 2004, plus the new look, plus the new Flatpak integration

281
00:17:47,420 --> 00:17:52,700
with App Center, and this new style sheet that just looks really slick.

282
00:17:52,700 --> 00:17:57,020
Yeah, system-wide accent colors that you can tweak to your preference, that sounds pretty

283
00:17:57,020 --> 00:18:03,180
nice, and they're finally introducing a dark style preference, that's dark mode, for the

284
00:18:03,180 --> 00:18:07,240
first time, which I'm definitely excited to try.

285
00:18:07,240 --> 00:18:14,700
There's also a redesigned system settings view, where they'd also love some feedback.

286
00:18:14,700 --> 00:18:16,100
Linux.ting.com.

287
00:18:16,100 --> 00:18:19,980
If you're sick of overpaying for your cell service, go see how much you could save, and

288
00:18:19,980 --> 00:18:24,380
then take $25 off that at Linux.ting.com.

289
00:18:24,380 --> 00:18:29,320
I also know a good family plan is hard to find, and Ting's newest Flex plan addresses

290
00:18:29,320 --> 00:18:34,020
that particular pain point in a really customer-friendly way.

291
00:18:34,020 --> 00:18:37,820
You can add as many lines on your account as you need for just $10 a line.

292
00:18:37,820 --> 00:18:42,180
Every line has unlimited texts and calls, and every line shares the same pool of data.

293
00:18:42,180 --> 00:18:49,380
If you need two gigs or 20 gigs, there's a perfect Ting plan just for you, LTE and 5G,

294
00:18:49,380 --> 00:18:53,380
and every plan gets access to Ting's award-winning customer service.

295
00:18:53,380 --> 00:18:59,020
With nationwide LTE and 5G coverage, it means you've got three networks to choose from,

296
00:18:59,020 --> 00:19:01,680
and a ton of great possible coverage.

297
00:19:01,680 --> 00:19:05,700
And that also means it's simple to bring just about any device to Ting.

298
00:19:05,700 --> 00:19:09,380
With that wide network support, that's a lot of compatibility.

299
00:19:09,380 --> 00:19:12,520
So get started by going to Linux.ting.com.

300
00:19:12,520 --> 00:19:16,020
Check your current phone, create an account, pick the plan that you think is right for

301
00:19:16,020 --> 00:19:17,020
you.

302
00:19:17,020 --> 00:19:21,260
Next up, Ting will send you a SIM card, you'll pop it in your phone and get activated in

303
00:19:21,260 --> 00:19:22,260
minutes.

304
00:19:22,260 --> 00:19:25,900
Getting your phone bill in half has never been easier with Ting's new plans.

305
00:19:25,900 --> 00:19:29,460
The next generation of Ting Mobile is here, so go see how much you could save and take

306
00:19:29,460 --> 00:19:34,700
$25 off at Linux.ting.com.

307
00:19:34,700 --> 00:19:41,420
Well now for a story we're still learning more about, a series of new Spectre-like exploits

308
00:19:41,420 --> 00:19:44,700
that bypass all previous mitigations.

309
00:19:44,700 --> 00:19:49,420
Thanks to Tom's Hardware for the help with our reporting on this story.

310
00:19:49,420 --> 00:19:54,180
Researchers from the University of Virginia and University of California San Diego have

311
00:19:54,180 --> 00:19:59,820
published a paper describing three new types of potential Spectre attacks using vulnerabilities

312
00:19:59,820 --> 00:20:01,980
of micro-op caching.

313
00:20:01,980 --> 00:20:07,260
The team of researchers, led by Ashish Venkat, discovered that hackers can potentially steal

314
00:20:07,260 --> 00:20:11,460
data when a CPU fetches commands from the micro-op cache.

315
00:20:11,460 --> 00:20:19,220
And that's a problem, since all modern AMD CPUs and Intel CPUs since 2011 and since 2017

316
00:20:19,220 --> 00:20:22,840
on the AMD side use micro-op caches.

317
00:20:22,840 --> 00:20:28,660
So all of them in theory are vulnerable to this hypothetical attack.

318
00:20:28,660 --> 00:20:33,140
I do couch it, but I think it's also important to recognize it goes back quite a ways.

319
00:20:33,140 --> 00:20:35,420
And more bad news!

320
00:20:35,420 --> 00:20:40,540
Researchers believe that mitigating these new vulnerabilities will cause even more significant

321
00:20:40,540 --> 00:20:44,100
performance penalties than we had the first time around.

322
00:20:44,100 --> 00:20:50,020
Oh boy, I think the good thing to keep in mind here is that we really have no idea how

323
00:20:50,020 --> 00:20:53,620
easy these are to actually exploit in the real world.

324
00:20:53,620 --> 00:20:58,740
The damage may be limited to very directed attacks, people that are extremely motivated.

325
00:20:58,740 --> 00:21:03,620
The research will tell us more soon, but at this stage, I'm in the wait and see mode.

326
00:21:03,620 --> 00:21:05,500
I know you, living dangerously.

327
00:21:05,500 --> 00:21:07,380
Spectre mitigations disabled.

328
00:21:07,380 --> 00:21:08,580
And logged in as root, Wes.

329
00:21:08,580 --> 00:21:09,580
You know me.

330
00:21:09,580 --> 00:21:16,100
Well, if you'd like to know more, the researchers will be presenting at ISCA next month and

331
00:21:16,100 --> 00:21:19,500
we'll have the white paper linked in the show notes.

332
00:21:19,500 --> 00:21:23,740
Well you might just be running Linux on a platform that may not be affected by any of

333
00:21:23,740 --> 00:21:26,460
this, that Apple Silicon.

334
00:21:26,460 --> 00:21:33,060
One quick but important step on the road to getting Linux fully working on the M1 is of

335
00:21:33,060 --> 00:21:35,700
course the GPU driver.

336
00:21:35,700 --> 00:21:42,620
Well the Asahi Linux team is now able to run OpenGL workloads like GLX Gears and GLMark2

337
00:21:42,620 --> 00:21:46,340
on the M1 with a fully open source stack.

338
00:21:46,340 --> 00:21:54,900
Hey, it's not just running, they're also passing about 75%, that's a C, of the OpenGL ES 2.0

339
00:21:54,900 --> 00:21:57,620
tests that are used to establish Chronos conformance.

340
00:21:57,620 --> 00:22:02,660
The really big news this week is that stuff that is working, the compiler and the driver,

341
00:22:02,660 --> 00:22:04,940
are now upstreamed to Mesa.

342
00:22:04,940 --> 00:22:11,340
This GPU work really is key to getting Linux working on Apple Silicon in any meaningful

343
00:22:11,340 --> 00:22:12,340
way.

344
00:22:12,340 --> 00:22:17,700
We'll have a link to the blog post that captures a lot of the journey of reverse engineering

345
00:22:17,700 --> 00:22:23,620
that went on to figure out what does work and what does not work on these custom Apple

346
00:22:23,620 --> 00:22:24,620
GPUs.

347
00:22:24,620 --> 00:22:26,100
Yeah, just to bounce off that, Wes.

348
00:22:26,100 --> 00:22:29,420
If you are kind of interested in this stuff, one of the things that's captured in that

349
00:22:29,420 --> 00:22:36,100
journey is the discovery that Apple's custom GPUs, while they've culled them and made them

350
00:22:36,100 --> 00:22:42,380
really specific, they still support older APIs that are way outside Metal, which is

351
00:22:42,380 --> 00:22:44,820
Apple's proprietary graphics API.

352
00:22:44,820 --> 00:22:48,300
So they have support in there for OpenGL stuff directly.

353
00:22:48,300 --> 00:22:50,460
I guess the question is how far does that go, right?

354
00:22:50,460 --> 00:22:51,460
Yeah, right.

355
00:22:51,460 --> 00:22:56,300
The Asahi team are wondering just how many of those are there and could we leverage them

356
00:22:56,300 --> 00:23:00,620
to implement some non-Metal APIs that otherwise they just wouldn't be able to?

357
00:23:00,620 --> 00:23:06,500
Well, you can leverage our RSS feed to embrace a free and open source podcast ecosystem by

358
00:23:06,500 --> 00:23:11,300
going to linuxactionnews.com slash subscribe for all the ways to get new episodes.

359
00:23:11,300 --> 00:23:16,420
And linuxactionnews.com slash contact for ways to get in touch.

360
00:23:16,420 --> 00:23:20,900
And things might be sold out right now over at jupytergarage.com, but keep an eye out.

361
00:23:20,900 --> 00:23:26,740
Some limited classic retro last swag is going up for sale at jupytergarage.com.

362
00:23:26,740 --> 00:23:32,340
We'll be back next Monday with our weekly take on the latest Linux and open source news.

363
00:23:32,340 --> 00:23:52,860
Thanks for joining us and we will see you next week.

