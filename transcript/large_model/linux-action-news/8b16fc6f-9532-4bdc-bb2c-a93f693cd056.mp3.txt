Hello, and welcome to Linux Action News, episode 167, recorded on December 13th, 2020.
I'm Chris.
And I'm Wes.
Hello, Wes.
Let's do the news.
And let's start with this huge news with CentOS.
Red Hat has announced that the future of CentOS is Stream.
It's CentOS, Wes, but not as we know it.
Yeah, this is certainly a complex story, and we'll cover all the angles, but let's start
with some context.
CentOS has a long history, starting 16 years ago, way back in 2004, with its first release,
version 2.
CentOS stands for Community Enterprise Linux Operating System.
And the project was a hit, offering a binary compatible and subscription-free distribution
built from the Red Hat Enterprise Linux source code.
With one major caveat, of course, and that was that Red Hat's proprietary branding and
logos, everything of that nature was removed.
And also another big one, especially in production workloads, no Red Hat commercial support.
But CentOS still managed to appeal to a broad market of developers, tinkers, and definitely
people who just wanted to try out the platform before they paid for the platform.
And CentOS also became famous along that way for some rough patches, some things that weren't
necessarily ideal for an enterprise distribution.
I think maybe more notable is on July 31st, 2009, the CentOS project leader disappeared.
And to kind of give you a taste of how things were back then, the post starts, this is just
the first sentence, quote, the future of the CentOS Linux project appears in jeopardy,
as the project leader, Lance Davis, has dropped off the face of the earth, end quote.
Yeah, like many open source projects, there's some troubles along the way, especially around
control and organization of the project, but that didn't slow CentOS down.
In 2010, they'd overtaken Debian to become the most popular Linux distribution for web
servers, controlling almost 30% of the Linux web at that time.
Yeah, Debian managed to claim some of that back later.
And of course, now in 2020, according to W3Techs, as far as web servers go, Ubuntu has 47.6%
of the market today.
But CentOS, still in a strong number two with 18.8% of web servers that are active on the
web today, still very actively used.
The next real notable thing that happened was January 27th, 2014.
Red Hat Aqua hired some of the CentOS development team and the branding and the copyrights.
So it was essentially a purchase, but in a kind of open source project style.
And at the time they said that Red Hat and the CentOS project would, quote, join forces
to spread, I'm sorry, join forces to speed up open source innovation, end quote.
I don't think they quite said it like that though.
Now you add just a little bit more flair, as you do.
Now from there CentOS continued on until the next big era in announcement, which was last
year in September of 2019, when CentOS Stream was announced and promised to transform the
development experience within CentOS.
And that brings us to this week, December 8th, 2020.
Red Hat has announced that the CentOS project is shifting its entire focus to CentOS Stream.
What has changed as of this week is the standard release of CentOS is going away in December
2021.
There will not be a CentOS Linux 9.
Updates for CentOS Linux 8, the standard distribution will continue until December 31st, 2021.
And CentOS Stream 9 will launch in Q2 of 2021 as part of the RHEL 9 development process.
The significant change here is that CentOS will no longer be built from RHEL and instead
RHEL will be built from CentOS because going forward, CentOS means CentOS Stream.
In the past, we use that to refer to what was basically just the rebuild of Red Hat
Enterprise Linux, but CentOS is now CentOS Stream.
You won't have traditional releases going forward into the future.
You won't have a new CentOS 7.3 or 8.3.
It's just going to be CentOS Stream.
The way to think about it now is it is the bridge of development between Red Hat Enterprise
Linux and Fedora.
Fedora is where operating system development and fundamentals happens.
Stream is where the entire product is developed and refined.
And RHEL is where it is shipped, Red Hat Enterprise Linux.
This is a big departure from the way things have been.
And the reaction to this has been massive.
I've broken it down into four components and I want to start with the communication because
I think that's one of the number one complaints is this was communicated poorly.
And Red Hat has attempted to address this and individual members of Red Hat have made
some really great blog posts after the fact that really help clarify all of this.
So we've had the benefit of reading those and can consolidate and relay it.
But if you'd like, we do have some in the show notes.
They've added significantly more to the conversation since the original announcement.
It's a real shame these didn't come out before or with the announcement or they didn't lead
the announcement because they really clarify a few things.
But additionally, if you zoom out and I think it's unfortunate because it speaks badly for
Red Hat is I think the echo chamber got them on this one.
They were a little blindsided by this and they didn't really think big picture here
because they could have done a strategy that would have potentially just significantly
lessen the blow of this thing.
Just you know, here's an example.
And Red Hat spent from now until RHEL 9, which is due in 2022.
So let's just say a year and a half and change.
Let's say they spent the next year, year and a half and change showing the world how you
could take their universal base image, which is based on RHEL, and you could run that on
sent off stream and have a good time.
Or if they showed different use cases of people running sent off stream and how boring it
is and how it's essentially the same experience.
Yeah, I mean, part of the problem here, I think, is that sent off stream had partially
been branded as something of a rolling release, although in the context of the RHEL universe.
And that meant people didn't really think you could be trusted in production, that it
was right for that use case at all.
And we haven't heard much about stream really, at least in the larger community since it
was released last year.
So being told that's your new operating system without really understanding it, that's a
little bit scary.
But you use that year and a half to correct the misconception that stream is rolling.
I mean, I've seen comparisons to Arch, which is ridiculous.
It doesn't make sense.
I think when people try this, they're going to be surprised at how boring it is.
So correcting that misconception.
And then last, well, actually, two more things they could have done is they are working on
a free Red Hat Enterprise Linux program with less production restrictions.
It's almost out.
They could have launched that first.
And then lastly, and probably most importantly, and how it should have gone down, is this
could have waited, easy for me to say, until CentOS 9 slash RHEL 9 and make the change
at a major version.
Because one of the number one things we've got in via email is people have just migrated
to CentOS 8.
Yeah, exactly.
They're looking at that.
They know that there's a long support cycle, or at least there used to be.
And so they could take some time to make the shift in their own time when they were ready,
start playing around in the new version of the release.
And when you've just found out that all that work is maybe wasted, ouch.
One of our matrix chatters said that he had a day that was like none other because he
saw the news.
And later that day, they were going to have a meeting about migrating to CentOS 8.
And like, within the span of one day, the next year long migration plan was just completely
thrown out.
And like, he's got no idea what we're doing now.
We just, it was, I mean, it just it disrupted a lot of people.
So not getting a good solid heads up and then reducing the perceived support window, even
if it wasn't, you know, even if it wasn't written in stone, if it wasn't confirmed,
for sure.
The perceived support window from 2029 to 2021, I mean, it's a massive reduction, right?
So it's it's one of those situations where if you could have prepped people a little
more for that coming, could have given them the logic and the reasoning and could have
made them more comfortable with what they're transitioning to and given them more options
to get free rel, all of that would have made this a lot smoother.
So the communication strategy from Red Hat was like amateur hour.
They rushed it.
And you got to think that's the result of the echo chamber.
And I think the change in that life support commitment cycle also leads to this amount
of reaction, making that kind of change, regardless of how it was communicated, was going to upset
people.
Yeah, one of the big changes here is that CentOS stream support will only be five years.
And five years is pretty great for you know, community provided support, but it's not 10.
And if that's what you're used to, maybe you're deploying stuff that's in environments that
you don't touch or service often, just it's just a different paradigm.
Yep.
That's that is true.
I'd say that's like the top third complaint.
And the top fourth complaint out of a top four here is that people are convinced stream
is going to be less stable than Red Hat Enterprise Linux.
I think this is going to be one of those we'll just see Red Hat is making the case that no,
not really.
We're doing everything through the same continuous integration testing.
We're still having all of the same validation requirements for what goes into CentOS stream
that goes into RHEL itself.
And Red Hat's trying to make the argument that it's this engineering process that has
led to RHEL stability, not the not not like the order in which the packages move through
different distributions.
Yeah, in many ways, this is a modernization, right, embracing some of the cloud workflows,
modern DevOps workflows here.
Previously a lot of this work was hidden at Red Hat.
We didn't see how exactly RHEL got built.
But if you think about it, when you're trying to build this stable enterprise operating
system, you can only tolerate so much change in the layer just above it when you're trying
to build all these pieces together, integrate them and test them.
So I don't think there's a huge incentive for that to break all the time.
Okay, maybe some things will happen, but there were bugs and issues in CentOS as a rebuild
as well.
Well, and RHEL actually had an issue that shipped in production with that boothole flaw
recently that caused some Red Hat Enterprise Linux systems not to boot.
It happens even at the RHEL level.
And if you take away the change that a lot of sysadmins that maybe even have millions
of deployments just had the land that just shifted under them, and we look at what this
means for Red Hat Enterprise Linux, I think this is kind of interesting because it does
in a sense, it moves the future of Red Hat Enterprise Linux out into the open and gives
people a way to develop against that, like the Podman team, for example, is working with
much more, it's a much more faster paced project.
It's working with a lot newer technologies than the rest of traditional RHEL.
And so for them, something like CentOS Stream gives them a pace that they can develop at
and have it ready when RHEL 9 ships, but it still goes through all the same validation
and testing.
That could be, if that works out right, that could be really just fine.
People could end up converting to Stream, which is apparently very simple to do.
Just gone through it once on a test system, it was very obvious and very simple.
I don't know if it would be harder on a system that's been around for a year or two that
maybe has more technical debt, it could be, but it's a supported migration path from standard
CentOS 8 to CentOS Stream 8.
And if you make that change, I think you're going to find it's pretty basic.
It feels just like regular CentOS.
It also provides some more ways of actually working with the upstream community.
Because if you're a RHEL customer or just using CentOS, you didn't have a great pipeline
for getting in some of those fixes if you did run into a bug or you wanted a new feature.
But now with Stream, it's open, everything's out in the open.
You can contribute, you can submit bugs, submit fixes, submit patches, and actually get influence
and fix your own problems potentially or work with Red Hat and the open source community
around it to improve things for the next version of the software you're going to be running.
And that wasn't really available before.
Yeah.
So that is obviously a clear improvement.
I think additionally, as a Fedora user, what I like about it is it kind of supplies a buffer
between the community and the suits.
CentOS Stream is where they're going to focus.
It's where the attention is going to go for getting things ready.
And it lets Fedora just be Fedora and not have to worry about trying to get itself into
a shippable state that is enterprise supportable, et cetera, et cetera.
They can continue to innovate and they can try to make the best product there.
That then leads to CentOS where the suit pressure is applied, right?
All of the expectations of the business get focused and it kind of keeps that heat away
from what is now a daily desktop driver for me.
And so I kind of like this arrangement from a Fedora user standpoint.
It helps keep Fedora weird.
Well, and I think we've seen speculation that, oh, if this is the end of Fedora, because
if they did this to CentOS, then they're going to do it to Fedora next.
But actually, it makes Fedora a critical part of the fundamental operating system development
that needs to happen, has to happen in a space that still gets used, it still requires shipping
a product because at the end, they're trying to get it to something that they can turn
into an enterprise product.
And that means Fedora is critical for that early phase development.
And it means I keep getting fresh, cool stuff.
Yeah, exactly.
Right.
I mean, you're not going to just enable system D, home D on CentOS stream because it doesn't
make sense.
You haven't tried it out.
You don't know what all the implications or downsides are.
But Fedora can be a place where that kind of more wild out in the open development can
actually take place with fewer risks.
And so you'll have, I think, a fair amount of users who will be very disappointed.
And I think you're going to have a lot of sysadmins out there who had their trust violated,
and it's probably never going to be forgotten.
Like some of the famous moments in the past of CentOS or CentOS, this is yet another one
of those.
And I think long term, they're probably going to be OK.
You're probably going to have most users who are cost sensitive that have something in
production just make the switch, and then you'll have some that defect to the Ubuntu
and the Seusses out there, or purchase a Red Hat Enterprise Linux subscription.
And of course, there are some new open source rebuilds in the work to try and take the place
of what the former name of CentOS meant.
We'll see.
I guess that'll be a factor of how stable Stream is, if that works for companies, and
if a legitimate and strong enough open source community forms over in those new areas.
Yeah.
We should probably get to a couple of the forks in a moment.
But I was just thinking, Wes, as we were talking about this, the other thing that you have
to keep in mind is all of this is happening while AWS is coming along and gobbling up
more and more of the traditional server market share, and more and more applications are
just getting shipped as containers, and people could care less what the distribution is.
And you have to wonder if in that new world, if a free version of your operating system
isn't maybe more important than ever to stay competitive and to get user base.
And that's the thing is, if Red Hat doesn't keep those users, somebody like AWS, who's
now offering Amazon Linux, which is based on Red Hat Enterprise Linux.
Indeed.
Comes along and says, oh, by the way, now we also have some on-premises offering, so
you can use the same management tools for your on-premises install as you do the ones
up in AWS Cloud.
And oh, by the way, you can deploy Amazon Linux, and it's a supported RHEL clone.
And they may be risking some market loss to essentially the cloud in this move as well.
Yeah, it is a time to be relevant and to be easy to try things out, right?
Will CentOS Stream have that same sort of understanding that you can click that when
you see it in your dashboard of whatever cloud you're using to spin up a new instance to
play around for your next project?
Is it going to have an appeal to you that you're actually going to want to use?
One of the former co-founders of CentOS has launched Rocky Linux.
It's already become the number one project on GitHub over the weekend, lots of excitement
and activity.
And Cloud Linux, which is made by a cloud hosting provider, has also come along and
said, we're going to offer Cloud Linux, and we already have the staff and the team to
maintain it.
We're ready to go.
So just overnight, practically, you've had at least two, and I've seen a third pop up
as well.
Well, and you know Oracle is advertising their unspeakable Linux as well.
Right.
Everybody like woke up and tried to take advantage of the situation and said, hey, check us out.
And by the way, we have a newer kernel if you want it to with ButterFS support.
That was actually part of their pitch.
Everybody's going to try to, you know, everybody who's going to try to take advantage of this
now, this vacuum in the market for this, because clearly there was people that wanted CentOS.
It was a very popular distribution.
It served a need.
And somebody will come along and offer it.
Maybe Red Hat will step up and they'll refine their free Red Hat Enterprise project.
Maybe they'll get more people using the universal base image.
Or maybe people are just going to switch to Rocky Linux 9 when it comes out.
Only time will tell on that one.
But this is all going to be stuff we'll be following here on Linux Action News.
linode.com slash LAN.
Go there to get a $100 60 day credit towards a new account and go there to support the
show.
Linode is our cloud server provider.
And because the price is so great, it makes it possible for a small team to have killer
infrastructure.
And personally, one of the things that I think is great about Linode is all of the distributions
they support.
I recently converted a CentOS 8 bucks to CentOS Stream.
They got all the Alpines, Arches, recent CentOS releases, Debian's, Fedora's, OpenSUSE's,
and Ubuntu's.
Oh my, they've got it all.
If you need a personal server for a blog or a portfolio, or maybe a game server, VPN server,
they got systems that start at $5 a month.
When you go to linode.com slash LAN, you get a $100 credit.
Now you can really build out some infrastructure, maybe something for your business.
You'd be surprised with 11 data centers around the world, you can get a server right next
to your clients and serve them super fast.
But what I love about Linode beyond their great dashboard, the 40 gigabit connections,
native SSDs on the hypervisors, what I really like about them and trust about them is their
love for Linux and open source.
Creating Linux and open source initiatives has been a key part of Linode's core from
the beginning.
They've sponsored projects like Kubuntu, the All Things Open conference, and of course,
our beloved Linux Fest Northwest.
And you know, they started before AWS.
They've been in this game for a long time because they followed the goal.
They followed what they loved about Linux.
They followed their passion.
And that led them to create Linode.
And then through their success, they've supported key parts of the open source ecosystem.
And now this is your humble show and I invite you to go check them out and see what I've
been talking about, linode.com slash LAN.
You go there, you get the $100 60 day credit towards a new account.
You support the show and you get a cloud provider that's dedicated to offering the best virtualized
cloud computing.
If it runs on Linux, it runs on Linode, linode.com slash LAN.
Also, thank you to Ting for sponsoring this here show.
Linux.ting.com.
I've talked about Ting for a long time, but right now is truly the best time to switch
to Ting.
It's the next generation of Ting mobile and you could save more than ever and get $25
off when you go to linux.ting.com.
Ting is a mobile provider that just makes sense.
And now they have plans with data that starts unlimited at $15 and $45 depending on what
you need.
So if you use two gigabytes or 20 gigabytes, well, there's a perfect Ting plan for you
and your family now.
They made a lot of improvements, but don't worry, all of the core stuff that I've always
talked about Ting, it's still there.
They still got the award winning customer service.
They still have nationwide LTE and now 5G coverage and still no contracts ever.
Ting mobile customers can now choose from three different plans based on your data needs.
It's really simple to switch to Ting.
You're going to wonder why all cell phone providers don't have to do it this way.
Ting sets the bar so hard.
You got to try it.
Go to linux.ting.com.
You can check your current phone, you create an account, pick a plan that's right for you,
and they're just going to mail you a SIM card.
You pop that in your phone and you're activated in minutes.
Or you can get something new too.
They have a Ting store where you can get devices directly.
Cutting your phone bill in half has never been easier.
It's really awesome to watch Ting make this big transition, to really step it up.
I mean, unlimited data plans starting around $15 and going to $45.
That's crazy.
I can't even believe that's on there.
And with the ease to manage your account through their dashboard, there's really no reason
not to try it.
linux.ting.com.
Go there, support the show, and get $25 off.
And thank you to everybody who supports our sponsors to make it possible for independent
media, to give our shows away for free, to cover our costs.
It makes all of the difference.
Thank you to our sponsors, linode.com slash lan and linux.ting.com.
And thank you everyone who supports those sponsors.
linux.ting.com, linode.com slash lan.
For the past five years, Google has been quietly developing a new operating system, Fuchsia,
from the ground up.
Starting this week, Google's Fuchsia OS is now being developed more openly, including
accepting contributions from the public.
Last year, Google quietly launched an official Fuchsia development website for the project,
aiming to teach developers how best to work on the operating system and, to a much lesser
extent, how to make apps.
All throughout the last four years, though, Fuchsia has been something of a secretive
skunkworks project, with Google remaining surprisingly quiet about its purpose.
And that's sort of the big change this week.
The company is making something of a splash with Fuchsia on the Google open source blog,
and they're making an opening call for developers to contribute to the project.
In fact, this is really the first formal announcement of the Fuchsia operating system's existence
and how Google plans to use it.
They say in this post, Fuchsia is a long term project for a general purpose open source
operating system.
And today we're expanding Fuchsia's open source model to welcome contributions from the public.
The blog goes on to continue to say, Fuchsia is designed to prioritize security, upgradability,
and performance, and is currently under active development by the Fuchsia team.
We have been developing Fuchsia in the open, by their definition, I guess that's true,
because they go on to say in their Git repository for the last four years, you can browse the
repository history, they give you the URL, which we have, and you can see how Fuchsia
has evolved over time.
They finish by saying, we are laying this foundation from the kernel up to make it easier
to create long lasting secure products and experiences.
Perhaps more importantly, for both interested developers and us, the general public, Google
now has a public roadmap for Fuchsia's development.
On it, you can see things like the projects that the Fuchsia team is actively undertaking,
such as the revamp of their component system.
Yeah, you know, they keep talking about how their goal is to have a robust, secure, general
purpose operating system for production.
Gosh Wes, that sounds an awful lot like Linux, but they don't want you to get confused.
This isn't for toys.
They say on the site, Fuchsia's goal is to power production devices and products used
for business critical applications.
As such, Fuchsia is not a playground for experimental operating system concepts.
Instead, the platform roadmap is driven by practical use cases arising from partner and
product needs.
And that felt like a little bit of a, I know you've all been saying this is our playground,
but we're actually building this to be a production OS on day one.
And again, that to me reads as exactly the market that Linux is addressing.
So you're wondering why Fuchsia?
I'm wondering, I'm wondering if Fuchsia isn't like, this is my Fuchsia conspiracy bacon,
but I'm wondering if Fuchsia isn't kind of like a backup plan for the Linux kernel and
maybe the Linux kernel team not going along with them in the future, sort of how you can
kind of have a plan B that helps you apply pressure in negotiations.
If someone knows you've got a credible threat, then they're more likely to concede and compromise
versus if they think they have power over you.
And I wonder if this isn't Google's credible threat, like a way to bargain a little bit
and say, well, if you guys don't go this way, we're just going to focus all in on Fuchsia.
It is interesting, and I think either way, it's clearly, they've learned a lot in their
wide scale deployments of Linux, and I think a lot of that knowledge is going into some
of Fuchsia's development.
I mean, I think particularly of their long history developing containers and other deployment
methodologies and security things like gVisor for Linux and having to deal with Linux security
issues, their work on Android, and also now all those smaller devices they ship in their
Google Home platform, Chromecast, those especially seem like ripe targets for Fuchsia.
Oh yeah, for sure.
And they've been really clever.
A lot of the development languages and methodologies that people use to write for Fuchsia are gaining
traction elsewhere in the market.
Google has very cleverly been playing the long game on this one and got people to adopt
these technologies well ahead of Fuchsia's release.
So you may see in 2021 some actual smoke to this fire and adoption uptick may be pretty
relatively simple, since a lot of people are already using the languages and tools that
Fuchsia OS uses.
Yeah, I think that'll be the next question is, is it easy for me to actually get Fuchsia
deployed somewhere and run my apps on it?
Until that happens, I don't really see it overtaking Linux for general application deployment,
but certainly could make some inroads in specialized sectors.
We'll see what happens.
But bringing us a little closer to home, we do end the show today with a brand new shiny
kernel, Linux 5.10 is released and besides being the last kernel release of 2020, this
is also a significant milestone because it's a long term support version of the Linux kernel
to be maintained for at least five years and it's also just a big sucker.
Yeah, Linux 5.10 LTS is likely to be the kernel used in operating system releases like Debian
11 and Magia 8, among many others.
Although I should note that Fedora 34 and Ubuntu 21.04, well, those are more likely
to see Linux 5.11.
As for Linux 5.10, well, the merge window closed in October.
Yeah, and this is one of the largest kernel releases in recent times, so there's a lot
to dig into.
Michael Arbel over at Phyronix has been doing a yeoman's amount of work to dig through some
of this, but we grabbed a couple of our favorite things in here.
There's a lot of continued work in Intel's forthcoming Rocket Lake and Alder Lake hardware
to get that ready for day one Linux support and AMD Zen 3 platform users got temperature
monitoring now built into Linux.
But the thing that I'm really excited for is Raspberry Pi VC4 support is now baked into
mainline Linux.
Yeah, this Raspberry Pi 4 display support is really nice to see and the timing works
out well because Mesa 20.3 introduced the V3DV Vulkan driver for the Raspberry Pi 4
support, which is a story we talked about last week.
Yeah, now we're seeing that Mesa and that Vulkan driver come together all in the Linux
kernel, which is just a big deal for Raspberry Pi 4 users.
Like yourself.
Yep, I'm very happy about it.
But you must be pretty excited about the Creative Labs Sound Blaster stuff.
Oh yeah, the Creative Labs Sound Blaster AE-7 sound card is finally supported under Linux
thanks to the work of the open source community.
And isn't that nice, like Linux is still a place where if you have a device that you
want work, you can get the code made, well, you can get it shipped.
Wes is always going on about a Sound Blasters.
Just like I've always been going on about my Nintendo Switch controllers, I got those
Nintendo Switch Pro controllers.
They're expensive.
I would love to be able to use them with Linux instead of having to get like the Xbox controller.
And now, no like side module needed, no more DKMS for me baked right into 510 is support
for the Nintendo Switch Joy-Cons and Pro controllers.
Should be working for both USB and Bluetooth.
Obviously, I haven't tested this yet.
It's all thanks to the new Nintendo HID driver and you even get rumble support and gyro data.
Oh, neat.
That seems like another great reason I should pick up a Switch.
Yes, yes, yes, it is, Wes, yes, it is.
There's some also good security improvements in 510, including some hardening against possible
DMA attacks by external PCI Express devices.
That's nice to see.
And a neat feature we're now stealing from the BSDs that they've had for years, which
is the no SIM follow mount option.
Merry Christmas us.
Yes, and now we are onward to Linux 5.11 merge window with many fancy new features on tap,
which we will keep an eye on.
It's doing the second week, so you'll see people landing some stuff in there just before
the Christmas holiday break.
So you may expect the kernel team to be a little more strict than usual about accepting
already properly tested ready code, not anything that looks a little shaky because nobody wants
their holiday wrecked.
No, right?
I don't want a broken Linux kernel under my Christmas tree.
Well, that does bring us to the end of this week's episode, but go to linuxactionnews.com
slash prescribe for all the ways to get new episodes as we update you on these stories
as you know they're going to develop.
And linuxactionnews.com slash contact for ways to get in touch.
And why not join the new Coda radio happy hour jblive.tv Mondays at 5 PM 8 PM Eastern.
Join us for a special live stream and hangout.
We'll be back next Monday with our weekly take on the latest Linux and open source news.
Thanks for joining us and we will see you next week.
