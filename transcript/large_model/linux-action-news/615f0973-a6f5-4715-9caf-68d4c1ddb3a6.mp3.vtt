WEBVTT

00:00.000 --> 00:08.760
Hello, and welcome to Linux Action News, episode 243, recorded on June 1st, 2022.

00:08.760 --> 00:09.760
I'm Chris.

00:09.760 --> 00:10.760
And I'm Wes.

00:10.760 --> 00:11.760
Hello, Wes.

00:11.760 --> 00:13.000
Let's do the news.

00:13.000 --> 00:16.320
We start this week with some good news.

00:16.320 --> 00:22.720
The LVFS project has served more than 52 million firmware downloads to Linux users.

00:22.720 --> 00:26.720
Now for a little perspective, that was just 25 million this time last year.

00:26.720 --> 00:29.160
That's an impressive rate of growth.

00:29.160 --> 00:30.160
It sure is.

00:30.160 --> 00:33.400
And Red Hat's Richard Hughes is still running the project.

00:33.400 --> 00:39.520
And he presented a bunch of different bits of data at the Embedded Recipes 2022 conference.

00:39.520 --> 00:45.440
For instance, we learned that LVFS is up to more than 120 different hardware partners.

00:45.440 --> 00:50.680
And more recently, LVFS kicked off the Flupd Friendly Firmware Initiative.

00:50.680 --> 00:54.520
The goal with this new initiative is to help hardware partners that already have Flupd

00:54.520 --> 00:56.560
plugins available.

00:56.560 --> 01:00.320
You can imagine how this becomes a little more important with larger hardware manufacturing

01:00.320 --> 01:06.200
adoption, like, say, Google's Chromebooks and other devices requiring Flupd support

01:06.200 --> 01:08.640
as part of their certification process.

01:08.640 --> 01:13.080
Also this week, speaking of Flupd, version 1.8.1 was released.

01:13.080 --> 01:16.600
That's the back end software side to LVFS.

01:16.600 --> 01:21.880
Among a range of bug fixes and improvements was support for more Thunderbolt and USB-C

01:21.880 --> 01:26.960
blocks, which is really nice to see, because those devices, unfortunately, do require

01:26.960 --> 01:31.720
firmware updates.

01:31.720 --> 01:36.080
If you were a little quick to jump on the latest Linux release, 5.18, like a certain

01:36.080 --> 01:42.760
Chris Fisher was, well, new benchmarkers out there may have noticed a performance regression.

01:42.760 --> 01:48.240
Michael Larable over at Ferronix sure noticed it, and as he puts it, bisected it.

01:48.240 --> 01:51.520
He sure did, in kind of his classic way.

01:51.520 --> 01:56.800
He tracked it down to some memory management changes in Linux 5.18, and in particular,

01:56.800 --> 01:59.800
the LRU cache disable change.

01:59.800 --> 02:04.920
But thankfully, it turns out Red Hat's Marcelo Tosanti was already way ahead of him, and

02:04.920 --> 02:08.400
back in March created a patch to fix the issue.

02:08.400 --> 02:13.680
And like some of our most favorite patches, this one is just a really simple one-liner.

02:13.680 --> 02:18.640
A simple but important change that's now on its way to the mainline kernel via Andrew

02:18.640 --> 02:23.480
Morton's memory management patch series, and should be backported for Linux 5.18.

02:23.480 --> 02:28.040
We'll have a link to more coverage by Ferronix if you're curious, including the benchmarks

02:28.040 --> 02:33.440
that demonstrate the issue.

02:33.440 --> 02:38.200
Following up on the recent open source NVIDIA driver news, the Nouveau project has begun

02:38.200 --> 02:43.040
laying the groundwork to adapt its code into a standalone library.

02:43.040 --> 02:48.000
So far, the work seems to be focused on restructuring the basic way that Nouveau's Mesa driver

02:48.000 --> 02:52.360
code is generated, making it possible that that generated code can actually function

02:52.360 --> 02:55.160
and live in a standalone library.

02:55.160 --> 03:00.400
Red Hat's David Arlyle stated, quote, this just moves the code gen build into a separate

03:00.400 --> 03:01.520
library.

03:01.520 --> 03:06.960
This is just prep work for a future where another driver wants to reuse this code.

03:06.960 --> 03:11.720
This isn't perfect for plugging into a Vulkan driver, but doing that requires more in-depth

03:11.720 --> 03:12.720
surgery.

03:12.720 --> 03:17.760
Yeah, and as Christian explained to us just a few weeks ago, NVIDIA is going to need several

03:17.760 --> 03:22.120
open source user space components that can speak to all of the exposed kernel interfaces.

03:22.120 --> 03:27.320
Yeah, really kind of seems that they would benefit by using as much of the Nouveau project

03:27.320 --> 03:29.240
as possible.

03:29.240 --> 03:32.760
And this is kind of just the first small step starting that effort.

03:32.760 --> 03:33.760
Yeah.

03:33.760 --> 03:38.480
I mean, I think this gives us our first real sense from the outside of just how much fundamental

03:38.480 --> 03:40.960
work is ahead for this team.

03:40.960 --> 03:45.880
You know, a glimpse of just all of the things that need to be done.

03:45.880 --> 03:55.800
And maybe that's why personally to me, this is looking like a multi-year project at least.

03:55.800 --> 04:01.220
Matrix fans were pleased to see the team at Rocket Chat announced plans to build new federated

04:01.220 --> 04:05.120
features on top of the Matrix protocol.

04:05.120 --> 04:08.840
If you're not familiar, you could consider Rocket Chat an open source alternative to

04:08.840 --> 04:09.840
Slack, I suppose.

04:09.840 --> 04:14.680
So this is pretty great to see because really, the last thing we needed is another standard

04:14.680 --> 04:19.880
from another project and how we should federate all of our different chat systems.

04:19.880 --> 04:24.280
And I think Rocket Chat was clever to acknowledge that they're going to benefit from the growing

04:24.280 --> 04:26.440
network effect Matrix is seeing as well.

04:26.440 --> 04:27.440
Yeah, right.

04:27.440 --> 04:32.200
I mean, this move means Rocket Chat users should be able to communicate with anyone

04:32.200 --> 04:35.200
who's already using a Matrix compatible chat client.

04:35.200 --> 04:38.160
That means you don't have to throw out your existing clients, you don't have to throw

04:38.160 --> 04:42.280
out your Rocket Chat infrastructure, but you still get all the benefits of a true cross

04:42.280 --> 04:47.120
platform, secure, standards-based chat.

04:47.120 --> 04:48.180
This really is so great.

04:48.180 --> 04:53.040
And it sounds like the Rocket Chat team chose to use Dendrite for their Matrix backend.

04:53.040 --> 04:54.840
That's a more modern backend of the server.

04:54.840 --> 04:56.960
So that's a savvy choice on their part.

04:56.960 --> 05:01.460
And they also touched on the importance of openness and users having control over their

05:01.460 --> 05:02.520
own data.

05:02.520 --> 05:08.240
And they mentioned in their release announcement that that need is growing now more than ever

05:08.240 --> 05:13.720
stating quote, the European Union's recent Digital Markets Act to limit the market power

05:13.720 --> 05:23.320
of large online chat and messaging platforms is evidence of this need.

05:23.320 --> 05:30.080
Impressively just one week after Red Hat Enterprise 9's general availability, Alma Linux 9 is

05:30.080 --> 05:32.760
now here and out.

05:32.760 --> 05:36.120
Alma Linux 9 has now arrived.

05:36.120 --> 05:42.280
Like the RHEL 9 it's based on, Alma Linux 9.0 ships kernel version 5.14 and contains

05:42.280 --> 05:48.360
enhancements around cloud and container development and improvements to the web console cockpit.

05:48.360 --> 05:53.400
This release also features additional security profiles that greatly improve SE Linux performance,

05:53.400 --> 06:03.240
as well as Python 3.9, GCC 11, and the latest versions of LLVM, Rust, and Go.

06:03.240 --> 06:08.640
Linode.com slash LAN, go there to get $100 in 60 day credit on a new account.

06:08.640 --> 06:10.600
And of course you go there to support Linux Action News.

06:10.600 --> 06:12.960
So it's linode.com slash LAN.

06:12.960 --> 06:19.500
They make it simple, affordable, and accessible to deploy and manage your projects, your infrastructure

06:19.500 --> 06:20.640
in the cloud.

06:20.640 --> 06:25.600
And they do it better than anyone for a better price and better performance.

06:25.600 --> 06:27.280
That's the bottom line right there.

06:27.280 --> 06:28.640
They also have fantastic support.

06:28.640 --> 06:32.360
I hear that all the time when the audience gets stuck, Linode's helped them out.

06:32.360 --> 06:38.120
And they just posted a white paper, it's really a full report, and it's a free PDF download,

06:38.120 --> 06:41.660
no email required, none of that stuff, I'll link it in the show notes, and they've gone

06:41.660 --> 06:47.760
through in this report, a third party has, and they have benchmarked AWS, Azure, Google

06:47.760 --> 06:51.640
Cloud, and Linode's GPU based virtual machines.

06:51.640 --> 06:56.260
And they've done this using standardized and repeatable testing methodologies that they've

06:56.260 --> 07:02.200
used for all different kinds of industry benchmarks, a wide range of workloads was tested, and

07:02.200 --> 07:05.640
you can probably guess Linode always, always comes out on top.

07:05.640 --> 07:12.680
They have systems powered by AMD epic processors, powerful GPUs, powerful GPU systems, and of

07:12.680 --> 07:17.880
course they have MVME storage for boxes that just have incredible IOPS.

07:17.880 --> 07:21.840
But if you're looking for something to just host a personal website, a blog, a portfolio,

07:21.840 --> 07:26.040
a gaming server, or you're looking something that can handle millions of users, Linode's

07:26.040 --> 07:27.600
got you there too.

07:27.600 --> 07:30.600
They've got some of the best performance with 11 data centers you can choose from, something

07:30.600 --> 07:34.400
that's going to be close to you or your customers, and they have great features on top of that

07:34.400 --> 07:39.320
which have really brought our game up, like object storage, Terraform support, Ansible

07:39.320 --> 07:44.800
support, Cloud Firewall, great simple to understand backups that are crazy easy to recover from,

07:44.800 --> 07:45.800
all of that.

07:45.800 --> 07:49.400
So go build something, go learn something, go support the show, go see why we deploy

07:49.400 --> 07:51.780
all of our stuff on Linode.

07:51.780 --> 07:57.640
Just go to linode.com slash LAN.

07:57.640 --> 08:01.600
And this episode is made possible by your direct support, Jupiter.party.

08:01.600 --> 08:06.240
You can support the network directly and support our independent content creation with your

08:06.240 --> 08:07.300
membership.

08:07.300 --> 08:11.400
As a thank you, you'll get access to ad-free versions of all of our shows, including Linux

08:11.400 --> 08:15.160
Action News, as well as access to the special edition feeds.

08:15.160 --> 08:16.160
It's Jupiter.party.

08:16.160 --> 08:24.280
You go sign up, you get access to all the shows, and your support makes a real difference.

08:24.280 --> 08:28.720
The NixOS project surprised those in the world who were not following the project's inner

08:28.720 --> 08:38.200
workings closely when it announced a new release, version 2205, with a complete graphical installer.

08:38.200 --> 08:42.480
Now in case you've never installed NixOS, traditionally the way you do it is a direct

08:42.480 --> 08:45.720
process right on the command line.

08:45.720 --> 08:50.800
This new graphical installer though, it's built atop the Colomaris installer framework.

08:50.800 --> 08:56.800
Colomaris is a free and open source, independent, and distro agnostic installer.

08:56.800 --> 09:02.600
If you've ever installed Garuda, Manjaro, Netrunner, KDE Neon, EndeavorOS, or used Debian's

09:02.600 --> 09:09.360
live medium installer option, then you have probably used Colomaris.

09:09.360 --> 09:14.480
And while no longer will you have to hunt for some special ISO, now the Plasma and GNOME

09:14.480 --> 09:19.360
ISO images for NixOS feature a fully updated graphical installer.

09:19.360 --> 09:23.080
Now you could still opt to grab the minimal ISO, which keeps that traditional command

09:23.080 --> 09:28.000
line approach, if that's your style, but of course, Wes and I had to give this a go before

09:28.000 --> 09:29.000
the show.

09:29.000 --> 09:32.500
Yeah, you know us, we got to try the new Shiny.

09:32.500 --> 09:38.520
I should say that as a new Nix user, I'm kind of impressed this is possible at all.

09:38.520 --> 09:43.480
You know, when I started down the NixOS journey, I was kind of just taking it for granted that

09:43.480 --> 09:47.440
much like the early days of Arch, this was going to be a command line process.

09:47.440 --> 09:51.400
I don't mind that the NixOS install is actually pretty straightforward once you know, figure

09:51.400 --> 09:55.240
out how Nix works at all.

09:55.240 --> 10:02.320
But having an installer is a huge win for new users for quickly trying out system settings,

10:02.320 --> 10:07.000
or just to start your system before you've gotten fully to grasp with the Nix expression

10:07.000 --> 10:08.000
language.

10:08.000 --> 10:13.080
And, you know, what also makes this really neat to my developer focused eyes is because

10:13.080 --> 10:19.000
this is declarative, because it's Nix based, you can go take a look at the PR and see everything.

10:19.000 --> 10:22.000
You don't have to go hunt through six different build things or a bunch of different repos

10:22.000 --> 10:28.320
on GitHub or on some distribution specific server or source control system.

10:28.320 --> 10:32.400
No, you can check out all the changes, all the patches that were needed, the sort of

10:32.400 --> 10:35.640
custom Calamares extensions that were developed.

10:35.640 --> 10:39.300
All of that is in one spot in one PR on GitHub.

10:39.300 --> 10:43.120
And that that right there, it's the power of NixOS.

10:43.120 --> 10:47.200
Yeah, that does make it really simple to understand everything that's happening behind the scenes.

10:47.200 --> 10:52.000
I kind of like you was thinking, well, they're never going to do a graphical installer because

10:52.000 --> 10:57.020
you kind of learn how Nix works by installing Nix.

10:57.020 --> 10:58.080
You have to.

10:58.080 --> 11:01.560
And so I thought, well, they're going to keep it this way forever because you got to learn

11:01.560 --> 11:05.000
these basics to use the distro at all.

11:05.000 --> 11:10.560
But we then kind of had a hint coming our way because the developer who ported this

11:10.560 --> 11:16.640
to NixOS has been hanging out in our Nix nerds matrix chat room, which is a great chat room.

11:16.640 --> 11:20.680
And they tease some of this, but it just wasn't really clear.

11:20.680 --> 11:22.080
Would it actually ship?

11:22.080 --> 11:23.980
When would it ship if it did?

11:23.980 --> 11:27.360
And then, you know, it just dropped and it was we were all very excited.

11:27.360 --> 11:32.220
And so I had a chance to ask them a couple of brief questions and just kind of find out

11:32.220 --> 11:34.960
where they're going with this in our matrix room.

11:34.960 --> 11:40.000
They go by Vlynx, and I asked them why they went to the trouble to bring a GUI installer

11:40.000 --> 11:43.160
to such a pro user focused distro.

11:43.160 --> 11:48.640
They replied, quote, My main goal was to make it easier for new people to install and try

11:48.640 --> 11:54.000
NixOS, while also making it easier for others like me, who even though we could install

11:54.000 --> 11:57.880
through the terminal, prefer a simple click through installation.

11:57.880 --> 11:59.080
I can relate to that.

11:59.080 --> 12:03.240
You know, I was becoming more comfortable with the idea and getting a little bit faster

12:03.240 --> 12:05.760
each time and installing NixOS via the command line.

12:05.760 --> 12:10.120
And once you kind of just even get casually familiar with it, you know, it's like a 15

12:10.120 --> 12:11.120
minute install process.

12:11.120 --> 12:13.080
It's not a big deal.

12:13.080 --> 12:20.000
But I got to admit, after trying the GUI install approach, I do prefer that method.

12:20.000 --> 12:24.400
For one, it's just kind of how I install pretty much almost every other distro.

12:24.400 --> 12:28.680
And I tend to do something else while I'm installing a Linux distro.

12:28.680 --> 12:32.400
It's not like the thing that has my sole focus, right?

12:32.400 --> 12:37.880
So a GUI, it helps me kind of keep track of my state and keep an overview of what I'm

12:37.880 --> 12:39.440
actually doing.

12:39.440 --> 12:44.040
And so I asked Vlynx, like, is this something you plan to maintain over time?

12:44.040 --> 12:48.480
Because I imagine once you release something like this out there to the wild, there's going

12:48.480 --> 12:53.520
to be bug fixes that come in and you know, features that need to be added, right?

12:53.520 --> 12:58.120
And you know, changes that might break things, maintenance to do, new NixOS releases to keep

12:58.120 --> 12:59.120
up with.

12:59.120 --> 13:05.840
But Vlynx responded, quote, I definitely plan to keep working on it and similar projects.

13:05.840 --> 13:10.820
I've heard some people mention they'd like a way to import GitHub configs during installation.

13:10.820 --> 13:16.040
So if I make more changes to the installer, that would probably be what I work on.

13:16.040 --> 13:20.680
But I plan on ensuring that the installer stays stable for a while to come.

13:20.680 --> 13:23.840
Now that it's been released, I plan to try to upstream some of the changes to the main

13:23.840 --> 13:26.440
calamaris project as well.

13:26.440 --> 13:27.440
That's great.

13:27.440 --> 13:31.400
I mean, there's a few things that would be nice to see get tweaked over time, like just

13:31.400 --> 13:37.000
small stuff like potentially the default image on the live session maybe could have a longer

13:37.000 --> 13:42.040
power timeout because it's pretty likely that your system's going to start going to sleep

13:42.040 --> 13:43.200
before the installs over.

13:43.200 --> 13:45.280
So you got to wake it up right during installation.

13:45.280 --> 13:49.800
Or if you're on Wi-Fi, if you're not plugged in, the installer will come up and say you

13:49.800 --> 13:51.800
have no internet, so you can't proceed.

13:51.800 --> 13:55.280
Even after you've connected to internet, you have to close the installer and relaunch it.

13:55.280 --> 13:59.620
Small quality of life things, but you could see people making small patches over time

13:59.620 --> 14:01.400
to clean this stuff up.

14:01.400 --> 14:04.040
So I just think that's a fantastic answer.

14:04.040 --> 14:07.960
And the fact that Vlynx is planning to upstream all of that stuff, too, means that these other

14:07.960 --> 14:10.120
distros are going to get the benefit.

14:10.120 --> 14:13.320
This is the stuff you just love about free software.

14:13.320 --> 14:19.200
And also, Vlynx said, kind of implied with a few links, that they were working on some

14:19.200 --> 14:24.880
other projects to make NixOS even more new user friendly.

14:24.880 --> 14:29.760
Yeah, they noted, quote, I'm currently working on a graphical configuration editor.

14:29.760 --> 14:35.320
Overall, I hope someday that even non-terminal users can take advantage of all the features

14:35.320 --> 14:37.040
Nix and NixOS offer.

14:37.040 --> 14:41.640
Yeah, we're going to have to throw a link to that Nix config editor in the show notes.

14:41.640 --> 14:42.640
It sure looks neat.

14:42.640 --> 14:47.440
I mean, I only took a very quick look at it, but I like where it's headed.

14:47.440 --> 14:54.160
It's a simple NixOS configuration editor application, built with libidwaita, GTK4, and Realm 4,

14:54.160 --> 14:58.400
that lets you adjust common Nix settings without having to totally understand exactly how to

14:58.400 --> 15:00.080
compose a Nix expression yourself.

15:00.080 --> 15:04.400
Yep, just one more thing that's going to make it even more approachable to folks.

15:04.400 --> 15:10.760
And I get a real sense that these goals, they're not just like the goals of one developer in

15:10.760 --> 15:11.760
the project.

15:11.760 --> 15:16.520
I believe they're the goals of many developers in the project, and that they want to bring

15:16.520 --> 15:19.480
Nix and NixOS to new users.

15:19.480 --> 15:23.400
And maybe they're not really saying it out loud, but I kind of get a sense that they're

15:23.400 --> 15:26.680
trying to appeal to a Fedora user.

15:26.680 --> 15:31.600
Yeah, talking to them and reading through the discussions on GitHub, you really do get

15:31.600 --> 15:33.320
that impression.

15:33.320 --> 15:37.440
They want to offer one of the best development workstations in Linux, and these are some

15:37.440 --> 15:39.920
of the steps they're taking to get there.

15:39.920 --> 15:44.720
And I got to say, I'm kind of bolstered both by the support from the community after Valink's,

15:44.720 --> 15:51.400
you know, sort of spearheaded this effort, and then also just how far this has come with

15:51.400 --> 15:53.960
not that much support or involvement for the community.

15:53.960 --> 15:58.760
I mean, that just says to me, some of the power and support from the NixOS environment

15:58.760 --> 16:01.960
should really set up some future goals for success.

16:01.960 --> 16:03.040
I agree.

16:03.040 --> 16:07.600
And the tooling, like distro agnostic installers, just getting better and better to make this

16:07.600 --> 16:09.080
stuff possible.

16:09.080 --> 16:10.200
It's fascinating to watch.

16:10.200 --> 16:11.200
It really is.

16:11.200 --> 16:14.960
We, you know, NixOS has been around for a decade.

16:14.960 --> 16:18.240
And all of a sudden, there is just all of this momentum here.

16:18.240 --> 16:21.540
And more and more people, including us, have been checking it out.

16:21.540 --> 16:26.160
It's just one of the many steps to making just the ultimate developer workstation, really

16:26.160 --> 16:29.360
the power user workstation, and we just have more choices than ever.

16:29.360 --> 16:34.040
We'll keep an eye on it, just like we do for everything in the free and open source world.

16:34.040 --> 16:39.200
So be sure you go to linuxactionnews.com slash subscribe for all the ways to get new episodes.

16:39.200 --> 16:43.680
And linuxactionnews.com slash contact to tell us all about the neat things you're doing

16:43.680 --> 16:44.920
with NixOS.

16:44.920 --> 16:48.240
We've got a summer of projects here at Jupiter Broadcasting, and we're documenting all of

16:48.240 --> 16:52.300
it in Office Hours, my new show, officehours.hair.

16:52.300 --> 16:56.440
As for this show, well, don't worry, we'll be back next week with our take on the latest

16:56.440 --> 16:59.040
Linux and open source news.

16:59.040 --> 17:00.040
Thanks for joining us.

17:00.040 --> 17:17.960
And that's all the news for this week.

