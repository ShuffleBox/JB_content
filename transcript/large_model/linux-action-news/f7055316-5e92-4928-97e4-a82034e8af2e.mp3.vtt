WEBVTT

00:00.000 --> 00:16.340
Hello, and welcome to Linux Action News, our weekly take on Linux and the open-source world.

00:16.340 --> 00:20.360
This is episode 52, recorded on May 6th, 2018.

00:20.360 --> 00:21.360
I'm Chris.

00:21.360 --> 00:22.360
And I'm Joe.

00:22.360 --> 00:25.680
Hello, Joe, and congratulations on the one-year mark.

00:25.680 --> 00:29.240
And we kick it off this week with a goodbye to 32-bit.

00:29.240 --> 00:32.720
Yes, the march of progress continues.

00:32.720 --> 00:38.480
And this week, we've learned that Ubuntu Mate and Ubuntu Budgie are both dropping 32-bit

00:38.480 --> 00:41.640
ISOs going forwards with the 1810 cycle.

00:41.640 --> 00:46.840
So 1804 is going to be the last 32-bit ISOs that you're going to have for those two flavors

00:46.840 --> 00:47.840
of Ubuntu.

00:47.840 --> 00:53.360
I would imagine that other flavors will follow suit this week, but right now, I think they're

00:53.360 --> 00:56.400
the only ones that are confirmed.

00:56.400 --> 00:59.120
So do we really care about this?

00:59.120 --> 01:03.680
Do we have any 32-bit-only machines at this point that are even worth using?

01:03.680 --> 01:06.120
I don't think I could say that I personally care.

01:06.120 --> 01:10.920
But I was surprised to see that Ubuntu Mate was one of the first leading the charge here.

01:10.920 --> 01:16.480
Because when I think of Mate, I think of it as a distribution for systems that maybe are

01:16.480 --> 01:20.560
a little older that you want to get some new life into.

01:20.560 --> 01:25.080
But when you look at the project's rationale, it's pretty hard to argue with this.

01:25.080 --> 01:29.100
One thing to remember, starting with 1804, it's still early days, but they are getting

01:29.100 --> 01:31.340
hardware telemetry back now.

01:31.340 --> 01:35.800
And that's starting to give the project some early indications, including the fact that

01:35.800 --> 01:42.240
a lot of people that are installing the 32-bit version of Ubuntu are doing so on 64-bit hardware.

01:42.240 --> 01:45.920
So they look at that, and they also look at the fact that really nothing 32-bit has shipped

01:45.920 --> 01:50.840
for 10 years, and that those resources could be spent maybe supporting the ARM version

01:50.840 --> 01:52.240
even better.

01:52.240 --> 01:56.520
And when you consider that only 10% of Ubuntu Mate users are even using the 32-bit version,

01:56.520 --> 01:59.680
I really can't argue with their logic or their rationale.

01:59.680 --> 02:02.240
But I imagine it will definitely impact some folks in our audience.

02:02.240 --> 02:07.040
Because really, 32-bit hardware is still perfectly good as long as it boots and powers on, and

02:07.040 --> 02:08.440
you just want to browse the web.

02:08.440 --> 02:10.560
But the world is moving on.

02:10.560 --> 02:11.560
What about you, Joe?

02:11.560 --> 02:13.560
Don't you have a 32-bit machine kicking around?

02:13.560 --> 02:14.800
I do.

02:14.800 --> 02:16.600
It's not something that I use regularly.

02:16.600 --> 02:21.580
I only really test lightweight distros on it occasionally, and older distros.

02:21.580 --> 02:22.580
It's a very old machine.

02:22.580 --> 02:28.520
I think it was one of the last laptops made that wasn't a netbook that was 32-bit only.

02:28.520 --> 02:32.080
And I just can't really do much with it.

02:32.080 --> 02:37.240
Even if you get, say, even Lubuntu running on it, yes, you can get that running.

02:37.240 --> 02:38.480
You can get a browser up.

02:38.480 --> 02:43.320
But most websites are so heavy these days that it's just painful to use anything, especially

02:43.320 --> 02:45.160
anything multimedia or anything like that.

02:45.160 --> 02:50.640
I mean, maybe if you're just reading PDFs or just reading RSS feeds or something, it

02:50.640 --> 02:51.640
makes sense.

02:51.640 --> 02:57.080
But if you really, really want to set something like that up, you can do it with an Ubuntu

02:57.080 --> 03:01.560
minimal installation, and all the packages are still there to get what is effectively

03:01.560 --> 03:03.720
Ubuntu Budgie or Ubuntu Mate.

03:03.720 --> 03:08.500
It's really just the ISOs that they are not going to be making available now.

03:08.500 --> 03:13.280
So I don't think it's as big an issue as some people would like to say, but we saw this

03:13.280 --> 03:14.280
last year, didn't we?

03:14.280 --> 03:19.320
This ending of 32-bit support with Arch and various other distros.

03:19.320 --> 03:24.320
And I think 2018 is the year that 32-bit will just die altogether, really, apart from the

03:24.320 --> 03:26.640
odd specialist distro, maybe.

03:26.640 --> 03:31.240
But one thing you mentioned there about Ubuntu Mate being associated with old hardware, that's

03:31.240 --> 03:35.640
something that Martin Winpress is very keen to not have happen, that association.

03:35.640 --> 03:40.680
Because as far as he's concerned, it is just a modern distro.

03:40.680 --> 03:45.960
And okay, it might have a traditional paradigm, but that doesn't mean that it is aimed at

03:45.960 --> 03:47.160
low-end hardware.

03:47.160 --> 03:53.440
I think something like Lubuntu with LXD or LXQt, that is aimed at low-end hardware.

03:53.440 --> 03:55.120
But don't say that about Mate.

03:55.120 --> 03:56.960
You might upset him.

03:56.960 --> 03:57.960
Or your favorite, Ubuntu.

03:57.960 --> 04:02.360
Actually, that's one of my favorite things about Ubuntu Mate, is that you can take advantage

04:02.360 --> 04:08.260
of absolutely modern hardware and have that traditional paradigm workflow for whichever

04:08.260 --> 04:13.080
one that you potentially like, because you can switch between a bunch of different layouts.

04:13.080 --> 04:14.880
It's one of the tools they have built into the distro.

04:14.880 --> 04:16.840
So it really accommodates that.

04:16.840 --> 04:22.000
But I think it still has, Mate itself might have that association.

04:22.000 --> 04:24.040
Perhaps not Ubuntu Mate, but Mate itself.

04:24.040 --> 04:29.600
But you look at this, it's really about the economics for the project.

04:29.600 --> 04:31.600
There is less to test.

04:31.600 --> 04:35.600
There is less security surface that they have to worry about.

04:35.600 --> 04:38.800
There is a simplification in the code that they're shipping.

04:38.800 --> 04:41.000
And there is a focus for the project.

04:41.000 --> 04:45.840
Not to mention, it makes it easier from a QA standpoint, because they can focus on 64-bit

04:45.840 --> 04:51.200
hardware and stop trying to keep some 32-bit old machine alive that the project may not

04:51.200 --> 04:52.760
even have available to them.

04:52.760 --> 04:54.840
32-bit hardware is getting scarcer and scarcer.

04:54.840 --> 04:59.360
So there is all of these economic factors that make the project more efficient, it helps

04:59.360 --> 05:04.160
them get their job done better, and it gives them a simplification, which you know they

05:04.160 --> 05:06.240
could always use.

05:06.240 --> 05:08.160
It's too hard of an opportunity to pass up.

05:08.160 --> 05:10.560
And like you said earlier, I think we're going to see this spread.

05:10.560 --> 05:14.480
Yeah, I wonder if we're going to be sitting here next week talking about all the other

05:14.480 --> 05:15.880
flavors maybe.

05:15.880 --> 05:16.880
I don't know.

05:16.880 --> 05:21.200
But one flavor that you wouldn't expect it to be would be Lubuntu.

05:21.200 --> 05:26.080
And they made the news this week on one of the Jupiter Broadcasting shows, didn't they,

05:26.080 --> 05:31.600
on Ask Noah, when Simon Quigley came on and announced that finally they're moving to LXQt

05:31.600 --> 05:33.960
for the main version in 1810.

05:33.960 --> 05:37.160
This is a great milestone to see because the project's been working on this for like three

05:37.160 --> 05:38.160
years.

05:38.160 --> 05:40.800
We're going to finally see it happen in Lubuntu 1810.

05:40.800 --> 05:44.320
It'll be the first release to ship with LXQt as default.

05:44.320 --> 05:46.680
Simon goes into details on Ask Noah.

05:46.680 --> 05:51.080
But the basics are is that the primary goal here is to offer users a lightweight computing

05:51.080 --> 05:55.400
environment that will run on machines that have a wide range of hardware, some older

05:55.400 --> 06:00.160
hardware as well as more modern hardware, but use a mature LXQt environment.

06:00.160 --> 06:04.800
Now you probably guessed that Qt in there is Qt, which is a modern toolkit that the

06:04.800 --> 06:07.120
Plasma desktop is built off of.

06:07.120 --> 06:13.880
So you get a lot of the benefits of Plasma's desktop, the Qt 5 toolkit, on a lightweight,

06:13.880 --> 06:16.520
faster, fast, simple desktop environment.

06:16.520 --> 06:20.960
I don't know if it's there for me personally, but I am really watching this with a lot of

06:20.960 --> 06:21.960
anticipation.

06:21.960 --> 06:28.800
I could see after the 1804 release cycle, so my next distro could easily see be powered

06:28.800 --> 06:29.800
by LXQt.

06:29.800 --> 06:35.160
Well, I had a quick look at Lubuntu Next, the 1804 version today, and I was quite impressed

06:35.160 --> 06:36.160
with it.

06:36.160 --> 06:40.000
It's been a while since I checked in with LXQt, and it's come a long way.

06:40.000 --> 06:45.320
There are a few things that are slightly not right for me, and things that could be worked

06:45.320 --> 06:49.520
on, and they've got, well, two years before the next LTS.

06:49.520 --> 06:55.120
So I can kind of see where you're coming from with this, because it's just so lightweight

06:55.120 --> 06:56.840
and simple.

06:56.840 --> 07:02.200
And because it is based on Qt 5, it means that it is modern, and you're going to have

07:02.200 --> 07:07.480
all of the benefits with high DPI support and all the rest of it that Qt brings.

07:07.480 --> 07:14.920
And they could not stay on LXDE for another LTS after this one, because LXDE is just totally

07:14.920 --> 07:16.460
dead at this point, isn't it?

07:16.460 --> 07:23.440
The only people who are interested in maintaining it are the Raspberry Pi Foundation, and is

07:23.440 --> 07:24.440
that really relevant?

07:24.440 --> 07:28.720
I suppose it is to the however many million Raspberry Pis they've sold, but to the rest

07:28.720 --> 07:33.280
of us in the Linux community, I think we just have to accept that LXDE is dead.

07:33.280 --> 07:36.080
I have a real soft spot for it, because it is so lightweight.

07:36.080 --> 07:40.760
I've loved it on low-end hardware, but I think you just have to accept the future, much like

07:40.760 --> 07:43.600
with the 32-bit thing going away.

07:43.600 --> 07:47.680
You just have to accept LXDE going away, and it seems to be an admirable replacement to

07:47.680 --> 07:48.680
me.

07:48.680 --> 07:51.740
I agree, and I wouldn't be surprised if the Raspberry Pi Foundation doesn't just embrace

07:51.740 --> 07:54.000
the Qt version down the road.

07:54.000 --> 07:59.680
When this transition is complete in the 18.10 timeframe, we're going to see the discontinuation

07:59.680 --> 08:00.680
of Lubuntu Next.

08:00.680 --> 08:07.560
It'll just become main Lubuntu, and the current LXDE version, the 18.04, will become known

08:07.560 --> 08:09.480
as Lubuntu Classic.

08:09.480 --> 08:11.640
I do wonder how long that's going to last, though.

08:11.640 --> 08:13.680
I wouldn't have thought until the next LTS.

08:13.680 --> 08:16.320
Yeah, I'm not going to bet against you on that one.

08:16.320 --> 08:20.080
Well, speaking of things that might not be sticking around for a while, it seems the

08:20.080 --> 08:22.720
Korora project has run into some troubles.

08:22.720 --> 08:27.120
Yeah, now this is a real shame, because Korora is a great distro, as far as I'm concerned,

08:27.120 --> 08:31.480
or it was, maybe we have to talk about it in the past tense at this point.

08:31.480 --> 08:35.840
Because it takes Fedora and just removes all the fiddling, and it's got a really great

08:35.840 --> 08:40.760
default package set, and just all of the defaults generally are really easy, and I think it

08:40.760 --> 08:44.800
is the ideal introduction to Fedora for new users.

08:44.800 --> 08:49.560
So now that it's probably going to go away, that kind of sucks.

08:49.560 --> 08:53.500
Yeah, this week the project took to their blog and said for the foreseeable future,

08:53.500 --> 08:57.300
they will have no updates, they will not be tracking Fedora 28.

08:57.300 --> 09:02.560
Now the repositories will stay online, but there's not going to be any new packages or

09:02.560 --> 09:03.560
updates.

09:03.560 --> 09:04.560
They need to take a breather.

09:04.560 --> 09:09.080
They say they have to just take a break, and they will keep the servers online with the

09:09.080 --> 09:10.640
intention to come back eventually.

09:10.640 --> 09:15.160
Yeah, and there's a comment on Reddit from one of the Korora developers, which basically

09:15.160 --> 09:17.880
says that the lead dev just disappeared.

09:17.880 --> 09:20.280
Yeah, I saw that thread too.

09:20.280 --> 09:23.660
And I read through it and was shaking my head almost the entire time.

09:23.660 --> 09:28.760
Not because I was disappointed, but because I feel like I've seen this before.

09:28.760 --> 09:33.840
Anyone who's done some distro hopping in their day has run into a distro that they just love,

09:33.840 --> 09:35.800
and then the project comes to an end.

09:35.800 --> 09:41.680
And the story often starts with a lead of the project that is really the vision person,

09:41.680 --> 09:46.240
the primary driver of the project, and it just becomes too much because of internet

09:46.240 --> 09:52.000
trolls or responsibilities or insert various life reasons, and they go AFK for an extended

09:52.000 --> 09:53.000
period of time.

09:53.000 --> 09:56.700
And then you have the lieutenants of the project who do an admiral job just keeping things

09:56.700 --> 10:00.360
running for as long as they can, maintaining packages.

10:00.360 --> 10:03.760
As long as all the services stay online and the domains are paid for, they can kind of

10:03.760 --> 10:05.280
keep things moving.

10:05.280 --> 10:11.260
And it just sort of slowly devolves into a demoralized story where the rest of the team

10:11.260 --> 10:12.680
becomes burned out.

10:12.680 --> 10:14.920
They feel like they can't affect change.

10:14.920 --> 10:18.900
And of course, the entire time, they're trying to keep everything public-facing, looking

10:18.900 --> 10:21.600
all great and smiley faces.

10:21.600 --> 10:27.080
But the even deeper troubling thing here is Korora is just one of many stories this week.

10:27.080 --> 10:28.800
In fact, another one is Void Linux.

10:28.800 --> 10:32.360
Void Linux is going through almost the same exact issue.

10:32.360 --> 10:34.600
Their project leader has gone MIA.

10:34.600 --> 10:39.120
The remaining core team doesn't have access to some of the essential infrastructure tools

10:39.120 --> 10:43.360
like their GitHub page and the domain names for the most popular domain.

10:43.360 --> 10:45.080
It's just an awful situation.

10:45.080 --> 10:49.180
And Void Linux and Korora Linux have very similar stories here.

10:49.180 --> 10:52.700
It's enough to put you off using a small distro altogether, isn't it?

10:52.700 --> 10:54.480
Just in case something like this happens.

10:54.480 --> 10:56.240
Yeah, I'd really hope not, Joe.

10:56.240 --> 11:00.960
But I've gotten several notes from listeners this week who have said just that, that they

11:00.960 --> 11:03.920
feel like they've been burned by going with a small distro.

11:03.920 --> 11:09.640
And if you think about what that means, that's very dangerous because Linux thrives in an

11:09.640 --> 11:13.560
environment where any idea is technically capable of succeeding.

11:13.560 --> 11:15.520
We wouldn't have Ubuntu MATE.

11:15.520 --> 11:17.840
We wouldn't have elementary OS.

11:17.840 --> 11:22.040
We wouldn't have a bunch of other distributions that started with one or two people, in some

11:22.040 --> 11:27.320
cases just one person, if people didn't take a chance on a small distribution.

11:27.320 --> 11:32.200
At the same time, as Linux becomes more of the operating system for your new developers,

11:32.200 --> 11:36.520
the web developers or your sys admins and your DevOps category labels that people like

11:36.520 --> 11:43.440
to toss around, as Linux becomes that OS, the tolerance for this level of failure where

11:43.440 --> 11:49.040
the OS you're using just becomes unsupported is going to be low.

11:49.040 --> 11:53.980
And I think it will force a consolidation to larger distributions, which is sort of

11:53.980 --> 11:56.040
creating big Linux.

11:56.040 --> 12:01.880
Maybe we've always been there, but I've always had the feeling that a new idea, something

12:01.880 --> 12:06.960
like a Solus could come along and be disruptive and just on its technical merits could get

12:06.960 --> 12:09.400
a decent user following.

12:09.400 --> 12:11.200
But Solus is a great example.

12:11.200 --> 12:15.000
Elementary OS is another where, yes, there is some governance in place, but both of those

12:15.000 --> 12:17.560
projects are very much driven by one person.

12:17.560 --> 12:23.800
And if that one person's circumstances change, then who knows what can happen with it, especially

12:23.800 --> 12:27.080
if those circumstances change quickly.

12:27.080 --> 12:29.960
And as we know, that can happen in life.

12:29.960 --> 12:32.280
And so you do worry about them.

12:32.280 --> 12:38.320
And that does put me off moving over to one of those types of distributions, even though

12:38.320 --> 12:41.240
Solus is technically absolutely brilliant.

12:41.240 --> 12:48.400
I mean, EO package as a package manager is just so fast and so straightforward and powerful

12:48.400 --> 12:50.240
at the same time.

12:50.240 --> 12:53.800
And not to mention all of the GUI tools that Ikey's built on that as well.

12:53.800 --> 12:59.720
But I'm just reluctant to invest in it until it gets to a certain size and it can't get

12:59.720 --> 13:01.960
to a certain size if people don't invest in it.

13:01.960 --> 13:04.600
And so you get this vicious circle happening.

13:04.600 --> 13:08.960
And I think that you might be right that it's very difficult for smaller distros to break

13:08.960 --> 13:11.780
through and become the next major one.

13:11.780 --> 13:13.600
So I actually want to nitpick a bit on what you just said.

13:13.600 --> 13:18.560
I would not compare Solus and elementary OS anymore in light of what we're seeing with

13:18.560 --> 13:20.440
Void and Karora.

13:20.440 --> 13:27.100
So in my eyes, a distribution like elementary OS has several clear paths to monetization.

13:27.100 --> 13:29.820
Maybe they're not making as much money as they'd like with the App Center.

13:29.820 --> 13:33.960
And maybe a lot of folks aren't adding a dollar amount when they hit that download.

13:33.960 --> 13:38.460
But there are clear built-in paths to revenue to make a distribution sustainable.

13:38.460 --> 13:41.240
And as a result, they've slowly added staff.

13:41.240 --> 13:44.600
There's only a couple of people that are technically full-time, maybe even one.

13:44.600 --> 13:51.940
But they have a structure in place that gives a path to revenue as their user base increases.

13:51.940 --> 13:55.680
Then you look at distributions like Karora and Void Linux and perhaps Solus.

13:55.680 --> 13:57.600
I'm not sure what the situation is there.

13:57.600 --> 14:01.700
They have a Patreon, I suppose, where there's not a clear path to revenue sustainability.

14:01.700 --> 14:04.360
And I think that's what actually makes the difference.

14:04.360 --> 14:05.360
I'm going to be honest.

14:05.360 --> 14:06.360
You look at podcasts.

14:06.360 --> 14:09.440
Podcasts that have advertisers stick around for decades.

14:09.440 --> 14:13.100
Podcasts that don't have advertisers stick around for maybe 60 episodes.

14:13.100 --> 14:14.400
It's the same thing.

14:14.400 --> 14:19.440
When you put all of yourself into making something, having a path to revenue sustainability makes

14:19.440 --> 14:23.040
the difference between you disappearing and sticking around.

14:23.040 --> 14:28.920
And I know, as GNU slash Linux users, we hate to admit that money, good old capitalism plays

14:28.920 --> 14:29.920
a role here.

14:29.920 --> 14:31.760
But it, I think, does.

14:31.760 --> 14:37.040
So I think the lesson from Void and Karora is that if a distribution doesn't have a clear

14:37.040 --> 14:42.760
path to long-term sustainability when it comes to revenue, it's risky to bet on that distribution.

14:42.760 --> 14:45.400
It doesn't mean that you shouldn't use the distribution.

14:45.400 --> 14:46.400
I think it's great.

14:46.400 --> 14:49.200
I love Arch Linux as an example.

14:49.200 --> 14:53.000
But I think it's something you at least have to factor into your decision when it's part

14:53.000 --> 14:58.120
of your workflow or your development setup or perhaps a production environment.

14:58.120 --> 14:59.640
You have to consider these factors.

14:59.640 --> 15:00.800
Well, that is true.

15:00.800 --> 15:06.360
But one of the greatest things about Linux is that you can migrate over to another distro

15:06.360 --> 15:08.120
relatively easily.

15:08.120 --> 15:12.720
In some cases, it can just be copy your home directory over.

15:12.720 --> 15:13.720
Job done.

15:13.720 --> 15:18.300
Switching from Ubuntu to Fedora, say, it can be so easy to migrate.

15:18.300 --> 15:22.840
And if you're on a smaller distro and then things go wrong with it, then you've always

15:22.840 --> 15:26.960
got that backup of the many other big distros that are rock solid.

15:26.960 --> 15:28.160
That's not always the case.

15:28.160 --> 15:29.800
So take Void Linux, for example.

15:29.800 --> 15:35.640
One of the things that is standout about Void is that it doesn't use systemd.

15:35.640 --> 15:37.120
There are less and less choices.

15:37.120 --> 15:43.720
I mean, it's coming down to Dev1, FreeBSD, Gen2, and several others that don't use systemd,

15:43.720 --> 15:44.720
and that's it.

15:44.720 --> 15:49.040
So there were unique aspects amongst others, not just the failure to use systemd or the

15:49.040 --> 15:53.560
neglect to use systemd or the decision, but there were other factors about Void.

15:53.560 --> 15:55.680
But I think that's something to consider.

15:55.680 --> 16:00.000
There are certain distributions that offer something no other distribution does, much

16:00.000 --> 16:05.920
like I feel Solus does as well and elementary OS, that there really is no one-to-one transition

16:05.920 --> 16:07.160
in the Linux community.

16:07.160 --> 16:10.280
It's about as disruptive as moving from, say, Mac OS to Linux.

16:10.280 --> 16:11.400
I don't know, though.

16:11.400 --> 16:16.840
I can see your point that it is maybe not quite as easy as I'm saying, but if you can

16:16.840 --> 16:23.120
get the same desktop environment on a different system, then it can be broadly similar.

16:23.120 --> 16:29.120
Yes, some of your workflow might change, but you can at least get it looking similar and

16:29.120 --> 16:33.800
laid out and get all your files in the same places.

16:33.800 --> 16:38.920
Maybe less so with something like Void, which is quite different, but certainly if you're

16:38.920 --> 16:43.520
looking at something that's based on Ubuntu, I mean, to go from elementary, well, I suppose

16:43.520 --> 16:47.520
again that's a bad example because of Pantheon, but yeah, maybe I'm wrong and maybe you're

16:47.520 --> 16:48.520
right.

16:48.520 --> 16:49.520
I don't know, Joe.

16:49.520 --> 16:53.660
As you started describing, I thought, really, most of these end users are probably just

16:53.660 --> 16:58.700
firing up a web browser once the desktop session starts, so maybe it matters less and less.

16:58.700 --> 17:00.800
It's really on the server where it matters more now.

17:00.800 --> 17:01.800
Yeah.

17:01.800 --> 17:03.520
Well, a web browser and a terminal, I think.

17:03.520 --> 17:04.520
Fair enough.

17:04.520 --> 17:05.520
To be fair.

17:05.520 --> 17:06.520
Yeah.

17:06.520 --> 17:07.520
Absolutely.

17:07.520 --> 17:08.520
LinuxAcademy.com.

17:08.520 --> 17:13.440
Go there to learn more about Linux Academy.

17:13.440 --> 17:17.720
Start this show and sign up for a free seven-day trial to a platform that is built by Linux

17:17.720 --> 17:22.920
enthusiasts and packed full of information to teach you more about everything built around

17:22.920 --> 17:24.920
Linux and the core essentials.

17:24.920 --> 17:28.520
Linux Academy is a full-featured training library with everything you need to learn

17:28.520 --> 17:30.520
new skills and advance your career.

17:30.520 --> 17:34.720
With self-paced, in-depth video courses on every Linux, cloud, and DevOps topic, my favorite

17:34.720 --> 17:36.920
feature is the hands-on, scenario-based labs.

17:36.920 --> 17:40.480
Well, maybe my second favorite feature then would be the instructor mentoring full-time

17:40.480 --> 17:44.440
human beings that are ready to help and happy to do so.

17:44.440 --> 17:47.760
And when they're not helping you, they're constantly adding and revising content on

17:47.760 --> 17:49.000
Linux Academy.

17:49.000 --> 17:54.280
Linux Academy just released 21 new courses and a couple of cool new features for learning

17:54.280 --> 18:00.580
AWS, including some quests and challenges, 150 hands-on learning activities, and a new

18:00.580 --> 18:04.980
episode of Scale Your Code, which I used to talk about quite a while ago, which is a one-on-one

18:04.980 --> 18:09.240
interview that they do with people in the industry where you can pick up the things

18:09.240 --> 18:12.680
they've learned, how to scale, how to build a team, how to create a culture in a large

18:12.680 --> 18:13.880
IT environment.

18:13.880 --> 18:17.240
Scale Your Code has all of that, and it's part of Linux Academy.

18:17.240 --> 18:21.720
It's just one of the many things that makes your subscription valuable, plus the practice

18:21.720 --> 18:26.560
exams and quizzes, which will help you get ready for the big certification exams.

18:26.560 --> 18:29.360
Linuxacademy.com slash unplugged.

18:29.360 --> 18:31.840
Go there, free seven-day trial, and support the show.

18:31.840 --> 18:34.680
Linuxacademy.com slash unplugged.

18:34.680 --> 18:41.560
Okay, let's talk about Fedora 28 that was released this week, and there's a lot to cover

18:41.560 --> 18:42.560
here.

18:42.560 --> 18:47.360
Workstation, server, atomic host, even atomic workstation.

18:47.360 --> 18:53.020
So I think it makes sense to start with the desktop version that they call workstation,

18:53.020 --> 18:55.280
and it's a pretty solid release, isn't it?

18:55.280 --> 18:56.280
Solid.

18:56.280 --> 18:57.280
The jury is still out.

18:57.280 --> 19:00.040
I'm pretty impressed so far.

19:00.040 --> 19:03.440
Nothing like I've ever experienced would be the way I would put it.

19:03.440 --> 19:06.520
This is Fedora, but not like you know it.

19:06.520 --> 19:08.480
In a weird way, it's just like you know it.

19:08.480 --> 19:13.140
If you've been using Fedora release after release, this is a pretty incremental update.

19:13.140 --> 19:16.400
If you've been using a different distribution and you haven't tried Fedora out for three

19:16.400 --> 19:19.460
or four releases, your mind is gonna be blown.

19:19.460 --> 19:25.320
For the first time, they're making it easy for users to just turn on third-party software

19:25.320 --> 19:31.600
repositories, like RPM Fusion, like the proprietary Nvidia driver, like Chrome.

19:31.600 --> 19:36.960
When you launch software and it has a blue drop-down box that comes up and says, would

19:36.960 --> 19:40.040
you like to turn on third-party repositories?

19:40.040 --> 19:46.000
You hit yes or enable, and now you have all of the software.

19:46.000 --> 19:51.880
All of the software that in every review for the last, well, since Fedora first shipped

19:51.880 --> 19:57.520
a release, I complained was a pain in the arse for people to install, is now just a

19:57.520 --> 19:59.520
click away.

19:59.520 --> 20:04.960
One click, and now you can search for Chrome in the GNOME software, and you can install

20:04.960 --> 20:11.920
not Chromium, you can install Chrome on Fedora after you've just installed it from the ISO.

20:11.920 --> 20:15.920
If you decide maybe you've made a bad moral decision, you go into the software sources

20:15.920 --> 20:20.500
preferences or whatever they call it, and it's a big red remove button.

20:20.500 --> 20:23.600
You click that, and all of that proprietary garbage is gone.

20:23.600 --> 20:25.000
Yeah, Fedora, but not as we know it.

20:25.000 --> 20:29.280
I think that's the only way to describe it, because Fedora has been known as being a freedom

20:29.280 --> 20:30.320
loving distribution.

20:30.320 --> 20:37.440
It's not quite FSF standards, but it is very much known for being the free software distribution.

20:37.440 --> 20:41.920
For them to make it so easy, personally, I think it's a great decision, because it's

20:41.920 --> 20:46.760
opt-in, and you could easily say, no thanks, I'll stick with free software only, but it

20:46.760 --> 20:48.880
just makes it so much more accessible.

20:48.880 --> 20:50.720
It's one of the things that has put me off before.

20:50.720 --> 20:55.760
Yes, okay, I do know how to get RPM fusion working and all the rest of it, but to make

20:55.760 --> 21:00.360
it so easy, it's suddenly a much more appealing prospect to run this on the desktop.

21:00.360 --> 21:03.960
You got to look at this from the software developer's perspective, where they have to

21:03.960 --> 21:06.400
test in Chrome as part of their job.

21:06.400 --> 21:08.820
They have to use machine learning as part of their job.

21:08.820 --> 21:12.800
That's why they were provided a laptop with an NVIDIA card in it to begin with.

21:12.800 --> 21:17.980
Fedora is just simply trying to address that need, while also not diminishing the experience

21:17.980 --> 21:22.520
for users who don't want any of that crap installed, and they've really walked the line

21:22.520 --> 21:28.160
here in a way that, after all of the years of really begging for this from the project,

21:28.160 --> 21:30.600
I never imagined it would be done so well.

21:30.600 --> 21:34.240
They've implemented it in a way that doesn't offend people that just want free software,

21:34.240 --> 21:38.880
but yet they've made the experience simple and clear enough for those who've just switched

21:38.880 --> 21:40.880
to Fedora and want to get to work.

21:40.880 --> 21:47.520
I'm really impressed, and that polish extends to all aspects of Fedora 28's release.

21:47.520 --> 21:49.360
It is a cohesive experience.

21:49.360 --> 21:53.640
Let's focus on the server and cloud spins for a moment, because this is becoming a more

21:53.640 --> 21:55.640
and more compelling aspect of Fedora.

21:55.640 --> 22:01.760
I have had a Fedora 24 cloud install up on Digital Ocean since Fedora 24 came out, and

22:01.760 --> 22:04.760
I loaded Nextcloud inside a Docker container.

22:04.760 --> 22:08.600
Now one of the things I've been doing, like a test lab, is upgrading that sucker every

22:08.600 --> 22:11.160
single Fedora release since 24.

22:11.160 --> 22:13.520
I upgraded it this weekend to 28.

22:13.520 --> 22:15.280
I have yet to have anything break.

22:15.280 --> 22:19.520
I always reboot the whole system and make sure Nextcloud's working.

22:19.520 --> 22:24.600
Granted, it's a test lab machine, but that is a lot of upgrades I have done now.

22:24.600 --> 22:27.840
And I think that's maybe the bigger story here.

22:27.840 --> 22:33.960
So there is a small support window for Fedora releases, and I think that's kind of the cloud

22:33.960 --> 22:36.800
that hangs over Fedora when you go to use it in production.

22:36.800 --> 22:41.360
And to address that, the project is taking on a lot of different tracks that sort of

22:41.360 --> 22:43.880
make that release window irrelevant.

22:43.880 --> 22:48.120
So they have modularity, which maybe we can talk about more in a moment.

22:48.120 --> 22:51.280
And then they have made a ton of improvements to DNF.

22:51.280 --> 22:55.600
And then they have these cloud and server spins, or additions, if you will.

22:55.600 --> 22:58.240
The cloud edition is a minimal install that's great on a VPS.

22:58.240 --> 23:02.920
I put it on a Digital Ocean droplet, and I loaded Cockpit onto that sucker, and I've

23:02.920 --> 23:09.000
been managing now for years, actual years now, upgrade after upgrade, running Nextcloud.

23:09.000 --> 23:15.160
So this weekend, after having just another terrific Fedora experience, I made the decision

23:15.160 --> 23:22.800
to consolidate three of my systems down to one Fedora 28 system, managed all with Cockpit,

23:22.800 --> 23:25.040
using containers and virtualization.

23:25.040 --> 23:28.060
And it's a really top-notch experience.

23:28.060 --> 23:31.920
First of all, one of the things that I appreciate as a former sysadmin is the documentation

23:31.920 --> 23:35.020
around Fedora has really built up over the years.

23:35.020 --> 23:38.880
And it's not hurt by the fact that a lot of those commands you can use on CentOS, and

23:38.880 --> 23:40.960
you can use on Red Hat Enterprise Linux.

23:40.960 --> 23:43.480
So there's just so much documentation these days.

23:43.480 --> 23:47.700
Like peak Ubuntu documentation, I feel like that's where Fedora is reaching now.

23:47.700 --> 23:53.120
But the confidence they've given me now in release after release upgrades, working, has

23:53.120 --> 23:55.920
really changed my thinking about the support window.

23:55.920 --> 23:59.600
And then you combine modularity, which you got more information recently when you had

23:59.600 --> 24:00.600
a chat with Matthew Miller.

24:00.600 --> 24:04.600
Yeah, I had a great chat with him on the first episode of Late Night Linux Extra, which is

24:04.600 --> 24:07.600
a new show that I've started, latenightlinux.com, get the plug in.

24:07.600 --> 24:12.500
And it is something that I could see a lot of people really using.

24:12.500 --> 24:15.140
He talked about people using different versions of Node, for example.

24:15.140 --> 24:19.440
And if you upgrade to a new version of Fedora, you don't necessarily want to upgrade the

24:19.440 --> 24:21.360
version of the software that you run in.

24:21.360 --> 24:25.280
And having that modularity does mean that it is less painful to have such a short support

24:25.280 --> 24:26.280
window.

24:26.280 --> 24:27.280
Right.

24:27.280 --> 24:30.840
And the idea there is you could just install a version of Node.js and then the OS can float.

24:30.840 --> 24:37.500
Now you combine that with containers and virtualization, and upgrades start to become less and less

24:37.500 --> 24:38.500
relevant.

24:38.500 --> 24:42.960
They're more of an implementation detail than they are the core of what's running all of

24:42.960 --> 24:44.040
your applications.

24:44.040 --> 24:48.920
I've now gone through several releases and I'm still running the same exact Nextcloud

24:48.920 --> 24:51.360
setup and everything's working great.

24:51.360 --> 24:55.600
And the base OS has made considerable changes in the meantime.

24:55.600 --> 25:00.520
And it's really just completely unaware, Nextcloud is just completely unaware of any of it happening.

25:00.520 --> 25:05.000
And so really in summary, I'm so impressed with Fedora on the server now that I'm going

25:05.000 --> 25:12.120
to consolidate several of my different VPSs into one running on Fedora 28, using Cockpit

25:12.120 --> 25:14.760
to manage those containers and those VMs.

25:14.760 --> 25:19.640
And I'll just keep upgrading the base OS and continue to use Cockpit to manage it, which

25:19.640 --> 25:23.340
is a fantastic remote web GUI.

25:23.340 --> 25:25.980
It's nothing like the webman of the past.

25:25.980 --> 25:30.160
It's really one of the best remote administration implementations I've ever seen from not only

25:30.160 --> 25:35.240
a functionality standpoint and integration standpoint, but also from a security design

25:35.240 --> 25:36.240
standpoint.

25:36.240 --> 25:39.560
And it's something I don't think the project is getting enough credit for.

25:39.560 --> 25:44.000
It is something that back in the day we would have been blowing our minds over.

25:44.000 --> 25:46.200
And now we're like, oh yeah, whatever, it's just something Fedora has.

25:46.200 --> 25:48.060
No, you should really go look at Cockpit.

25:48.060 --> 25:49.060
It's pretty great.

25:49.060 --> 25:52.600
Now all of that said, I'm still not putting on my workstation.

25:52.600 --> 25:54.960
In fact, there was sort of a thrill I had.

25:54.960 --> 26:00.200
I had my Kubuntu workstation in front of me with a bunch of SSH windows into Fedora boxes

26:00.200 --> 26:01.200
this weekend.

26:01.200 --> 26:02.360
That was my weekend.

26:02.360 --> 26:07.080
And I'm not switching out my main workstation, because when it comes to GUI applications

26:07.080 --> 26:11.760
and desktop environments, they are less forgiving about some of these upgrades.

26:11.760 --> 26:13.400
It's less transactional.

26:13.400 --> 26:17.480
There's more esoteric configurations and extensions or applets.

26:17.480 --> 26:23.520
And I just still don't trust a eight or nine or 10 month window for my distribution and

26:23.520 --> 26:24.600
my desktop environment.

26:24.600 --> 26:27.640
I want that to be static and stable so I can get my work done.

26:27.640 --> 26:32.920
But my server, where things are containerized and isolated and virtualized, that's a different

26:32.920 --> 26:33.920
story these days.

26:33.920 --> 26:35.400
It's sort of flipped for me.

26:35.400 --> 26:37.720
And it is a very stock experience, isn't it?

26:37.720 --> 26:43.800
Similarly with the spins, I tried out the XFCE spin and it looks very much like stock

26:43.800 --> 26:44.800
XFCE.

26:44.800 --> 26:49.080
It's not quite 100% stock, but it's much closer than something like Xubuntu that I'm used

26:49.080 --> 26:50.080
to.

26:50.080 --> 26:56.120
And I don't know, you can see a distro like Ubuntu taking GNOME and adding some real value

26:56.120 --> 26:57.120
there.

26:57.120 --> 27:00.960
Whereas Fedora, I suppose the value is that it is more or less just upstream GNOME.

27:00.960 --> 27:04.560
Yeah, and I think you can make a pretty good argument for both, especially from an end

27:04.560 --> 27:05.640
user standpoint.

27:05.640 --> 27:06.640
But I like it.

27:06.640 --> 27:08.680
I kind of appreciate that they do that.

27:08.680 --> 27:11.240
And I think they have a really good implementation of GNOME 328.

27:11.240 --> 27:12.760
It's a solid release.

27:12.760 --> 27:16.320
And I've talked about this extensively in Linux Unplugged, but they have done some real

27:16.320 --> 27:21.760
pioneering work to make Thunderbolt 3 better than it is on any other desktop platform.

27:21.760 --> 27:25.180
And that is one of the most impressive things you have to give Fedora 28.

27:25.180 --> 27:28.440
And you're starting to see that materialized in other GNOME-based distributions, but they

27:28.440 --> 27:30.420
pioneered the work on Bolt.

27:30.420 --> 27:35.240
And I, as a user of Thunderbolt, really appreciate their work in that particular area.

27:35.240 --> 27:36.520
So it's a great desktop.

27:36.520 --> 27:37.680
It's a solid release.

27:37.680 --> 27:41.040
I'm just not really looking forward to upgrading it all the time.

27:41.040 --> 27:42.720
And there's promises of modularity.

27:42.720 --> 27:45.860
There's promises of atomic workstation.

27:45.860 --> 27:50.200
But they're just not there yet for a workstation use.

27:50.200 --> 27:53.200
And that's kind of what I keep coming back to with Fedora.

27:53.200 --> 27:55.420
It's getting better in all of these areas.

27:55.420 --> 27:59.680
But for workstation, professional use, I don't know if it's there yet.

27:59.680 --> 28:03.900
I bet a lot of people in the audience are using it right now and think I'm just crazy.

28:03.900 --> 28:05.680
But it's just my personal opinion.

28:05.680 --> 28:10.520
When you have to upgrade every nine or so months, it's not a great situation.

28:10.520 --> 28:13.860
I would almost prefer to see something like Fedora rolling.

28:13.860 --> 28:17.440
And I know raw hides a thing, but I would like to see an official Fedora rolling where

28:17.440 --> 28:23.240
I could maybe pin certain things, like maybe a whole metapackage group like Plasma or my

28:23.240 --> 28:24.240
web browser.

28:24.240 --> 28:28.000
I could pin to specific versions and get back ports from Red Hat Enterprise Linux.

28:28.000 --> 28:30.400
And I could have other parts that are rolling and moving.

28:30.400 --> 28:34.320
I know it sounds crazy, but I think if any project could pull that off right now, it's

28:34.320 --> 28:35.320
Fedora.

28:35.320 --> 28:38.960
Well, you're talking to someone sitting in front of Zubuntu 16.04 still.

28:38.960 --> 28:41.560
I haven't upgraded my main workstation.

28:41.560 --> 28:43.040
And I'm not going to for a while.

28:43.040 --> 28:48.400
16.04 is fine and I'll upgrade it to 18.04 in good time and then probably stick on that

28:48.400 --> 28:49.740
for another couple of years.

28:49.740 --> 28:54.060
So this model is very much not for me, but I can see the appeal of it.

28:54.060 --> 28:58.520
If you are a developer, if you want the latest stuff all the time, but you don't want to

28:58.520 --> 29:03.440
have the real bleeding edge like Arch, it seems to be sitting somewhere in the middle

29:03.440 --> 29:04.440
of that.

29:04.440 --> 29:06.520
I disagree because I think you could flip it around.

29:06.520 --> 29:08.400
You don't have to just subscribe to the latest stuff.

29:08.400 --> 29:12.720
See, I think if they pull this off right, you could sit on a Fedora workstation and

29:12.720 --> 29:16.240
say, I want this specific version of XFCE.

29:16.240 --> 29:21.920
I want this specific version of Audacity, this specific version of FFmpeg.

29:21.920 --> 29:24.600
But you can let LS and all the GNU tools roll.

29:24.600 --> 29:26.500
I don't care about the GNU tools.

29:26.500 --> 29:27.920
Keep my grep fresh.

29:27.920 --> 29:32.520
But I definitely want to make sure I only have this version of XFCE for as long as it's

29:32.520 --> 29:33.880
supported in RHEL.

29:33.880 --> 29:36.440
But I could have the Fedora version of LS.

29:36.440 --> 29:38.560
And I think that would actually work for you pretty well.

29:38.560 --> 29:41.120
Well, that feels a bit speculative.

29:41.120 --> 29:43.600
And you mentioned the Atomic workstation.

29:43.600 --> 29:47.960
They've changed the name to Silverblue, at least that's the code name for now.

29:47.960 --> 29:52.640
I think that it's nowhere near being ready at this point for daily use, certainly for

29:52.640 --> 29:58.120
most people, but it is good to see them innovating and thinking long term and not just being

29:58.120 --> 29:59.120
stale.

29:59.120 --> 30:01.560
They need to do stuff like this, don't they?

30:01.560 --> 30:02.560
Yeah.

30:02.560 --> 30:07.580
And one of the really interesting things about Atomic is it's created in an era of big infrastructure.

30:07.580 --> 30:11.040
So you can like one click deploy it to Amazon.

30:11.040 --> 30:14.440
It is available as a droplet, one click droplet on DigitalOcean.

30:14.440 --> 30:19.780
The latest version Fedora 28, when you go to quote unquote download Fedora Atomic, there

30:19.780 --> 30:24.680
are options on the Fedora Atomic project page to just spin it up on a VM or you can download

30:24.680 --> 30:25.680
the ISO.

30:25.680 --> 30:29.800
It really is a distribution that's created to run like in a VM or in virtualization.

30:29.800 --> 30:32.360
I gave it a go and it's so cool.

30:32.360 --> 30:38.040
I was doing things like Atomic run and then I would say like the name of a container.

30:38.040 --> 30:40.320
And maybe that in this case, the container was cockpit.

30:40.320 --> 30:46.080
I would say Atomic run cockpit and it would go out and pull down all of the individual

30:46.080 --> 30:52.080
dependencies as containers and build all of this Docker stuff up and run it all in containers

30:52.080 --> 30:53.640
and spin it up for me.

30:53.640 --> 30:57.160
But at the same time, it was outputting like the file system changes.

30:57.160 --> 31:01.840
So while there was a lot of container magic happening, I was very connected to the actual

31:01.840 --> 31:04.400
work that was being done on my file system.

31:04.400 --> 31:08.620
And I don't know how to really quantify that other than just saying that's the kind of

31:08.620 --> 31:13.060
output and an interface that really gives me confidence in a system.

31:13.060 --> 31:17.140
The magic scripts work and I also get output on everything they just did.

31:17.140 --> 31:22.860
And I really had the sense that if I was building out a Red Hat shop right now and I knew we

31:22.860 --> 31:26.680
were going to use a lot of CentOS and Red Hat Enterprise Linux, Fedora Atomic would

31:26.680 --> 31:29.600
absolutely be a contender in this space.

31:29.600 --> 31:30.760
It's a neat idea.

31:30.760 --> 31:35.740
The core idea here is the base OS can be updated in transactional updates.

31:35.740 --> 31:37.960
Something goes wrong, you just move back.

31:37.960 --> 31:43.640
All of the applications, even some of your administrative tools, are in containers.

31:43.640 --> 31:47.200
And they sort of float independently of your base operating system.

31:47.200 --> 31:53.400
So you can do flip upgrades, bring a system completely up to date and not even touch your

31:53.400 --> 31:54.400
containers.

31:54.400 --> 31:55.400
They still stay connected.

31:55.400 --> 31:56.400
They're still talking to their storage.

31:56.400 --> 32:00.000
And the idea here is your release windows kind of go away.

32:00.000 --> 32:05.440
And you just keep the transactional updates going over time and the system just runs until

32:05.440 --> 32:06.440
the hardware dies.

32:06.440 --> 32:10.560
Yeah, it is a huge release and there's a lot of moving parts with Fedora these days.

32:10.560 --> 32:12.600
Yeah, I'm going to plug again for you.

32:12.600 --> 32:17.040
Go check out Late Night Linux Extra because Joe had Matthew Miller on there to kind of

32:17.040 --> 32:19.600
explain all of it in their own language.

32:19.600 --> 32:20.600
And it clicks.

32:20.600 --> 32:22.120
It really clicks when he talks about it.

32:22.120 --> 32:25.760
Also, bonus mention, Daniel Foray is on there to talk about the next version of elementary

32:25.760 --> 32:26.760
OS as well.

32:26.760 --> 32:28.200
So go check that out.

32:28.200 --> 32:32.760
And also while we're plugging, go get every single episode of Linux Action News, linuxactionnews.com

32:32.760 --> 32:36.040
slash subscribe for all the ways to get the new episodes.

32:36.040 --> 32:39.600
And linuxactionnews.com slash contact for ways to get in touch.

32:39.600 --> 32:43.240
And please consider supporting the whole network at patreon.com slash Jupiter signal.

32:43.240 --> 32:49.120
We've recently posted some studio tours and an exclusive Alan Jude hosted episode of Tech

32:49.120 --> 32:50.120
Snap.

32:50.120 --> 32:53.640
We'll be back next Monday with our weekly take on the latest Linux and open source news.

32:53.640 --> 32:55.040
I'm at Chris Elias.

32:55.040 --> 32:56.400
I'm at Joe Rissington.

32:56.400 --> 32:59.160
Thank you for joining us and we will see you next week.

32:59.160 --> 33:17.240
Have a great night, sir.

