WEBVTT

00:00.000 --> 00:09.600
Hello, and welcome to Linux Action News, episode 248 recorded on July 6, 2022.

00:09.600 --> 00:10.800
I'm Chris.

00:10.800 --> 00:11.800
And I'm Wes.

00:11.800 --> 00:12.800
Hello, Wes.

00:12.800 --> 00:14.080
Let's do the news.

00:14.080 --> 00:16.560
Is it time to give up GitHub?

00:16.560 --> 00:22.880
The Software Freedom Conservancy seems to think so and has launched the Give Up GitHub campaign,

00:22.880 --> 00:29.400
writing on their blog, quote, those who forget history often inadvertently repeat it.

00:29.400 --> 00:35.080
Some of us recall that 21 years ago, the most popular code hosting site, a fully free and

00:35.080 --> 00:43.820
open source site called SourceForge, proprietorized all their code, never to make it FOSS again.

00:43.820 --> 00:48.280
They go on to write that they're concerned about the size that GitHub has gotten.

00:48.280 --> 00:55.540
And now they say GitHub has succeeded at convincing all of us to, quote, promote and even aid

00:55.540 --> 01:00.480
in the creation of a proprietary system that exploits FOSS.

01:00.480 --> 01:07.040
They go on to say, quote, GitHub profits primarily from those who wish to use GitHub tools for

01:07.040 --> 01:10.400
in-house proprietary software development.

01:10.400 --> 01:15.700
Yet GitHub comes out again and again, seeming like a good actor, because they point to their

01:15.700 --> 01:20.300
largesse in providing services to so many FOSS endeavors.

01:20.300 --> 01:24.340
But we've learned from the many gratis offerings in big tech.

01:24.340 --> 01:28.360
If you aren't the customer, you're the product.

01:28.360 --> 01:30.780
I mean, they're really coming in hot.

01:30.780 --> 01:33.240
They're really using everything they've got full spread here.

01:33.240 --> 01:38.580
And they say that FOSS developers have been for too long the proverbial frog that is slowly

01:38.580 --> 01:40.700
boiling in the water.

01:40.700 --> 01:45.440
And they acknowledge that giving up GitHub will require work and sacrifice, but a strong

01:45.440 --> 01:47.300
stance must be taken.

01:47.300 --> 01:51.000
As such, the Conservancy is ending all of their uses of GitHub, they write.

01:51.000 --> 01:56.120
And they've also announced a long term plan to assist FOSS projects to migrate away from

01:56.120 --> 01:57.600
GitHub.

01:57.600 --> 02:01.640
The Conservancy has also set up giveupgithub.org.

02:01.640 --> 02:07.920
And the number one reason they list on that page is Copilot being a for profit product.

02:07.920 --> 02:13.480
And this seems to be the crux of what currently has them upset, sort of the straw that broke

02:13.480 --> 02:15.400
the FOSS lovers back here.

02:15.400 --> 02:21.480
You see the core concern being that GitHub used copyleft license software to train Copilot

02:21.480 --> 02:24.480
and is now reselling derived code from that.

02:24.480 --> 02:29.760
And many of these free software licenses specifically have provisions for derived works.

02:29.760 --> 02:33.760
And this is an issue that we've been tracking really closely on recent episodes of Coder

02:33.760 --> 02:35.140
Radio.

02:35.140 --> 02:39.660
There are also an additional five reasons listed on the site that range from Microsoft's

02:39.660 --> 02:45.900
contract work with ICE, general concerns of SourceForge style failures, and ultimately

02:45.900 --> 02:48.600
GitHub's ownership by Microsoft.

02:48.600 --> 02:52.080
I mean, it's hard to disagree with almost all their points.

02:52.080 --> 02:56.040
And even the ones I kind of disagree with, I can understand where they're coming from

02:56.040 --> 02:57.040
on this.

02:57.040 --> 02:59.440
So I want to make that clear.

02:59.440 --> 03:03.740
But yet still, I can't help but feel like this is just yelling into the wind.

03:03.740 --> 03:09.080
It just gives me strong free software foundation vibes here are relatively in comparison small

03:09.080 --> 03:15.440
organization going up against a practically unstoppable market adoption wave being led

03:15.440 --> 03:18.360
by one of the true gorillas in the tech industry.

03:18.360 --> 03:22.240
And I'm not trying to sound like a nihilist here, but I just fear this approach is just

03:22.240 --> 03:24.080
never going to move the needle.

03:24.080 --> 03:31.520
Yeah, I mean, it's hard to disagree that this blog post this campaign, it's not going to

03:31.520 --> 03:32.520
destroy GitHub, right?

03:32.520 --> 03:34.960
I don't think any of us really expect that.

03:34.960 --> 03:39.480
But at the same time, I mean, I think it's important to think about and I would be disappointed

03:39.480 --> 03:44.560
if the Conservancy wasn't saying these things because even if, you know, even if it's not

03:44.560 --> 03:49.360
going to change the behavior like we might hope, I think it's still valuable to be said,

03:49.360 --> 03:53.360
because it's worth reflecting on what we get from GitHub, which it's very valuable.

03:53.360 --> 03:56.500
I mean, it's done a lot of good for open source and FOSS projects.

03:56.500 --> 03:57.860
It's been a point of collaboration.

03:57.860 --> 04:02.440
It's provided free resources to folks making software for the world.

04:02.440 --> 04:07.840
But there's also been a lot of disappointments, I think, especially with some of the the copilot

04:07.840 --> 04:13.460
issues lately, the lack of response from Microsoft or GitHub or seeming any willingness or interest

04:13.460 --> 04:16.080
in engaging with the community's concerns here.

04:16.080 --> 04:20.520
And then you compare that to some of the behavior from say, Amazon or others in the space, which

04:20.520 --> 04:25.520
we may not love, definitely, but seem to at least be doing a better job here.

04:25.520 --> 04:30.060
It's worth having high standards considering how much influence and money GitHub and Microsoft

04:30.060 --> 04:36.320
have and at the end of the day, a lot of the stuff we rely on is backed by Git.

04:36.320 --> 04:43.000
And so even if we may not want to consider moving, we at least still have the option.

04:43.000 --> 04:50.800
Well, we've been saying it for years now, for RISC-V to really take off with the consumer,

04:50.800 --> 04:55.140
it's going to need some developers and to reach that average developer, we're going

04:55.140 --> 04:59.680
to need a compelling system, maybe even a RISC-V based laptop.

04:59.680 --> 05:03.720
Something that lets a developer build and test RISC-V apps at home, and then ship them

05:03.720 --> 05:05.400
wherever they might need to go.

05:05.400 --> 05:10.760
Well, a forum has now opened up where you can register your interest in the Roma laptop,

05:10.760 --> 05:16.020
which is being called the industry's first native RISC-V development laptop, which is

05:16.020 --> 05:21.580
going to be built in Shenzhen, China by two companies, Deep Computing and Excalibite.

05:21.580 --> 05:26.200
As for the specs, at least at this stage, the Roma laptop will come with a quad core

05:26.200 --> 05:33.120
RISC-V processor, a GPU and NPU accelerator for video and AI workloads, up to 16 gigs

05:33.120 --> 05:40.240
of LPDDR4, more LPDDR4X memory, and up to 256 gigs of storage.

05:40.240 --> 05:43.520
The estimated shipping date is sometime in September.

05:43.520 --> 05:48.360
However, that's assuming the laptop CPUs become available in time.

05:48.360 --> 05:51.280
I'm going to admit there's some red flaggies here already.

05:51.280 --> 05:57.200
Number one, kind of shooting for a September shipping date when you don't even know when

05:57.200 --> 05:59.880
the CPUs are going to be quite finished.

05:59.880 --> 06:03.440
Red flag-ish when it comes to this kind of stuff.

06:03.440 --> 06:07.400
Also calling what essentially seems to be a forum that gets you on a mailing list, a

06:07.400 --> 06:10.720
pre-order, red flag-ish.

06:10.720 --> 06:15.480
But what is a solid red flag on the field for me is they've had to like work in a whole

06:15.480 --> 06:18.680
NFT angle to this laptop.

06:18.680 --> 06:22.940
And not only does that feel unnecessary, but it seems to me like it taints something that

06:22.940 --> 06:27.960
was pretty critical to the adoption of RISC-V in the overall ecosystem.

06:27.960 --> 06:32.640
And they write in their press release announcing the pre-orders, quote, a Web3 friendly platform

06:32.640 --> 06:39.400
with NFT creation and publication, plus integrated MetaMask style wallet, Roma will create even

06:39.400 --> 06:46.400
more integrated experiences with future AR glasses and AI speakers operating entirely

06:46.400 --> 06:50.200
on RISC-V software and powered by RISC-V.

06:50.200 --> 06:56.240
Well, whatever else that is, it's definitely a lot of buzzwords.

06:56.240 --> 07:01.000
Deep Computing and Excalibite are even trying to entice people to pre-order Roma by offering

07:01.000 --> 07:08.200
the first 100 buyers a, quote, unique NFT to mark the birth of the world's first RISC-V

07:08.200 --> 07:09.200
laptop.

07:09.200 --> 07:16.360
Also, those lucky 100 get their name or company's name engraved into their laptop.

07:16.360 --> 07:17.360
I know, I know.

07:17.360 --> 07:19.280
There are some red flags, I agree.

07:19.280 --> 07:25.280
But we've been following RISC-V for a while now, so I had to put my, quote, unquote, pre-order

07:25.280 --> 07:26.280
in.

07:26.280 --> 07:29.120
Now, all I got was an email back saying, thank you for your interest.

07:29.120 --> 07:31.920
We'll be in touch to talk more about specifics.

07:31.920 --> 07:32.920
We'll see what happens.

07:32.920 --> 07:33.920
Well, that's okay.

07:33.920 --> 07:35.280
That's kind of fun.

07:35.280 --> 07:38.160
I'm glad you did that so we can follow it.

07:38.160 --> 07:39.480
I hope you get your NFT.

07:39.480 --> 07:40.480
Right?

07:40.480 --> 07:41.480
Okay.

07:41.480 --> 07:45.360
I mean, the engraving name part, though, that actually sounds kind of cool.

07:45.360 --> 07:47.840
I got to admit that that's appealing.

07:47.840 --> 07:51.360
If only they could work in some sort of token to this whole thing, some sort of token that

07:51.360 --> 07:55.440
you get and then you stake for equity in the RISC-V laptop.

07:55.440 --> 07:56.440
I don't know.

07:56.440 --> 08:00.080
At the end of the day, I just think this NFT nonsense is just that.

08:00.080 --> 08:03.080
It's kind of marketing buzz to get more attention.

08:03.080 --> 08:05.480
I don't think it's really going to make a difference in the end product.

08:05.480 --> 08:08.440
At least hopefully it doesn't make a difference in the end product.

08:08.440 --> 08:11.320
It does signal a mixed focus to me.

08:11.320 --> 08:15.240
And I think that's concerning because the core job of just building this laptop and

08:15.240 --> 08:19.240
actually shipping it and getting it out there and processing the orders and everything,

08:19.240 --> 08:23.860
especially with the supply chain in the current state that it is, that seems like a massive

08:23.860 --> 08:27.900
task requiring 100% focus all on its own.

08:27.900 --> 08:32.640
But I think regardless, this one seems like it's going to be a fun one to watch and see

08:32.640 --> 08:38.440
where it goes.

08:38.440 --> 08:43.760
Well if you're looking for a sure bet, System76 has announced their most recent update to

08:43.760 --> 08:50.260
the Lumiere Pro with a 12th Gen Intel CPU that continues to support the Core Boot firmware.

08:50.260 --> 08:54.000
It's great to see that Core Boot support survive multiple updates.

08:54.000 --> 08:57.640
I think that's why this caught our attention this week is just to kind of acknowledge that

08:57.640 --> 09:00.560
is actually reaching an accomplishment there.

09:00.560 --> 09:04.440
This Lumiere Pro features a 14.1 inch 1080p display.

09:04.440 --> 09:07.460
It can go up to 40 gigabytes of DDR4 RAM.

09:07.460 --> 09:14.480
It has dual M.2 SSD support, Wi-Fi 6, and a 73 watt hour battery that System76 is advertising

09:14.480 --> 09:17.400
14 hours of battery life with.

09:17.400 --> 09:20.840
Pricing starts out at $1149 USD.

09:20.840 --> 09:31.300
More details on this shiny new Alder Lake laptop can be found at System76.com.

09:31.300 --> 09:35.840
Well the story I'm personally most excited about this week is maybe only tempered by

09:35.840 --> 09:41.040
just how frustrating it's taken this long for this conversation to finally happen.

09:41.040 --> 09:46.640
This week, a change proposal was submitted to enable Raspberry Pi 4 support in Fedora

09:46.640 --> 09:47.640
37.

09:47.640 --> 09:51.200
Yes, yes please.

09:51.200 --> 09:57.160
For a little background context, the Pi 4 came out in 2019 and Fedora has never officially

09:57.160 --> 10:00.000
supported a single board computer.

10:00.000 --> 10:04.640
But it seems the situation might be changing thanks to some recent upstream work finally

10:04.640 --> 10:05.640
coming together.

10:05.640 --> 10:10.520
The Fedora team seems to have felt that it never really made sense to make the Pi 4 a

10:10.520 --> 10:15.200
major target when there was just a bunch of missing graphics functionality in the upstream

10:15.200 --> 10:16.200
drivers.

10:16.200 --> 10:22.800
Yeah the ARM platform is a tricky moving target, but as time has gone on and the right code

10:22.800 --> 10:27.880
has been upstream and the right kernel updates have come out and Mesa and those kernel updates

10:27.880 --> 10:32.400
have come together, well the upstream open source graphics driver support really seems

10:32.400 --> 10:39.080
to be getting in pretty good shape for OpenGL, Vulkan, wired networking, Wi-Fi and even possibly

10:39.080 --> 10:41.640
audio looking pretty good these days.

10:41.640 --> 10:46.440
As a result of all of that hard work, Peter Robinson submitted a change proposal for Fedora

10:46.440 --> 10:51.040
37 that would polish up support for the Pi 4 platform.

10:51.040 --> 10:55.940
Now this is an area Ubuntu has been far far ahead of Fedora and it seems like that's been

10:55.940 --> 10:57.920
a pretty big benefit for them.

10:57.920 --> 11:03.520
Yeah I saw when we worked in the training area of tech, you saw lots of clusters of

11:03.520 --> 11:08.260
Raspberry Pis for Kubernetes training and experimenting with different architectures

11:08.260 --> 11:10.440
and of course I've seen them in schools a lot.

11:10.440 --> 11:15.920
It has helped define the Ubuntu Mate distribution, it's helped contribute to considerable market

11:15.920 --> 11:22.080
share for Ubuntu Mate which just had a new release this week for the Raspberry Pi.

11:22.080 --> 11:29.000
You know on the whole Fedora 37 itself as a release is shaping up to be a barn burner.

11:29.000 --> 11:34.160
I mean we could have made all of Linux action news about this release of Fedora that's in

11:34.160 --> 11:35.240
the works right now.

11:35.240 --> 11:42.940
So we'll have some additional links in the show notes if you're interested.

11:42.940 --> 11:47.180
Many in the Linux community were surprised this week when it became public that Lenart

11:47.180 --> 11:51.520
Pottering quietly left Red Hat earlier this year.

11:51.520 --> 11:55.720
Lenart has made enormous contributions to the Linux ecosystem over the past decade or

11:55.720 --> 12:01.880
so while being employed by Red Hat, particularly with his work on PulseAudio and of course

12:01.880 --> 12:02.880
SystemD.

12:02.880 --> 12:08.960
To put it simply, Lenart has been instrumental to what we now know as the modern day Linux

12:08.960 --> 12:10.920
desktop.

12:10.920 --> 12:16.120
He departed Red Hat for Microsoft and seemed to be continuing his work on SystemD with

12:16.120 --> 12:19.440
commits made in just the last few days.

12:19.440 --> 12:23.480
We'll follow up with any more details as we have them.

12:23.480 --> 12:28.360
And for you job seekers out there, Michael Arnbool over at Ferronix notes that Microsoft's

12:28.360 --> 12:38.240
careers page currently has over 600 open jobs that mention Linux.

12:38.240 --> 12:40.040
Linode.com slash LAN.

12:40.040 --> 12:44.320
Go there to support the show and get $100 in 60 day credit on a new account.

12:44.320 --> 12:48.120
Linode is the Linux geeks cloud with 11 data centers worldwide and they've been hard at

12:48.120 --> 12:54.480
this for nearly 19 years making the absolute best experience to run applications on Linux.

12:54.480 --> 12:56.700
And they are so fast.

12:56.700 --> 13:00.880
They are, I was just having a chat in the matrix chat room today.

13:00.880 --> 13:06.580
People have been testing infrastructure for video hosting and they tried the major hyperscalers

13:06.580 --> 13:08.220
and they tried Linode.

13:08.220 --> 13:12.760
And Linode is just screaming fast and I think part of it is because they are their own ISP

13:12.760 --> 13:16.420
and they support things like MVMe disks if you want super fast IOPS.

13:16.420 --> 13:19.760
They've got AMD epic processors if you want to go that route.

13:19.760 --> 13:22.260
And they're always adding new features.

13:22.260 --> 13:26.340
They've really learned to just keep improving over those 19 years.

13:26.340 --> 13:27.800
I mean, it's just dang impressive.

13:27.800 --> 13:31.360
Like they just rolled out Kali Linux now.

13:31.360 --> 13:35.880
Linode now has support for Kali Linux as a one click install from their, what they call

13:35.880 --> 13:38.380
their application marketplace.

13:38.380 --> 13:39.620
It's pretty slick.

13:39.620 --> 13:43.740
And as you probably already know, this is an excellent distribution that you can use

13:43.740 --> 13:49.460
for penetration testing, ethical hacking, network security assessments, check your own

13:49.460 --> 13:51.320
cloud infrastructure.

13:51.320 --> 13:55.840
There was a period of time where I was looking at deploying something like a hosted Kali

13:55.840 --> 14:00.660
setup so that way we could do penetration testing on my client's networks.

14:00.660 --> 14:06.060
To be able to test your own network from the outside from a super fast provider so you

14:06.060 --> 14:11.460
can really get through these tests quick and to have it be on a blessed install by them,

14:11.460 --> 14:13.340
it's a game changer.

14:13.340 --> 14:17.940
And Linode, they're the only alternative platform out there that offers anything like this.

14:17.940 --> 14:22.100
They'll let you test your production environments, make sure things are working.

14:22.100 --> 14:24.900
And then of course, when you're done, you keep the system or you destroy it.

14:24.900 --> 14:26.100
I love that kind of flexibility.

14:26.100 --> 14:29.820
It's a great way to do testing too, when you're starting a new project.

14:29.820 --> 14:34.460
They also have the best customer support in the business, super fast rigs, a dashboard

14:34.460 --> 14:39.700
that's super simple, an API that's well documented, has tons of libraries ready to go.

14:39.700 --> 14:42.940
There's so many great reasons, but put it over the top.

14:42.940 --> 14:52.300
Go get that $100 in credit and support the show, linode.com slash LAN.

14:52.300 --> 14:57.580
And a big thank you and a welcome aboard to Kalyde, Kalyde.com slash LAN.

14:57.580 --> 15:02.300
Kalyde is endpoint security solutions that use the most powerful untapped resource in

15:02.300 --> 15:04.540
IT, end users.

15:04.540 --> 15:08.700
When you're trying to achieve security goals, whether for a third party audit or your own

15:08.700 --> 15:14.020
compliance standards, the conventional wisdom is to treat every device like Fort Knox, old

15:14.020 --> 15:18.780
school device management tools like MDMs, force disruptive agents on employees' devices

15:18.780 --> 15:22.740
that slow performance and treat privacy as an afterthought.

15:22.740 --> 15:27.340
Truly one of the things I hated most about having a work-provided machine.

15:27.340 --> 15:33.420
That's the old way of doing things and honestly I think it makes users hostile towards IT.

15:33.420 --> 15:35.700
Well Kalyde does things differently.

15:35.700 --> 15:41.300
Instead of forcing changes on users, Kalyde sends them security recommendations via Slack.

15:41.300 --> 15:45.320
Kalyde will automatically notify your team when their devices are insecure and give them

15:45.320 --> 15:49.120
step-by-step instructions on how to solve the problem.

15:49.120 --> 15:53.220
By reaching out to employees via a friendly Slack DM and educating them about company

15:53.220 --> 15:58.500
policies, Kalyde can help you build a culture in which everyone contributes to security

15:58.500 --> 16:02.460
because everyone understands how and why to do it.

16:02.460 --> 16:06.980
For IT admins, Kalyde provides a single dashboard that lets you monitor the security of your

16:06.980 --> 16:12.760
entire fleet, whether you're running a Mac, Windows, or yeah, Linux.

16:12.760 --> 16:17.060
You can see at a glance which employees have their disks encrypted, who has an up-to-date

16:17.060 --> 16:19.860
OS, who has a password manager installed.

16:19.860 --> 16:25.220
It makes it easy to prove compliance to your auditors, customers, and leadership.

16:25.220 --> 16:26.220
So that's Kalyde.

16:26.220 --> 16:30.980
It's user-centered, cross-platform, endpoint security for teams at Slack.

16:30.980 --> 16:33.980
You can meet your compliance goals by putting users first.

16:33.980 --> 16:36.980
Visit Kalyde.com slash LAN to find out how.

16:36.980 --> 16:40.400
You follow that link, Kalyde.com slash LAN, they're going to hook you up with a goody

16:40.400 --> 16:45.460
bag too, including free t-shirt just for activating that free trial.

16:45.460 --> 16:47.340
I love me a free t-shirt.

16:47.340 --> 16:55.940
So that's Kalyde, K-O-L-I-D-E dot com slash LAN.

16:55.940 --> 17:01.580
One of the many changes in Ubuntu 22.04 that we were excited about was the enabling of

17:01.580 --> 17:03.580
System D OOMD.

17:03.580 --> 17:09.420
However, it now appears that this rollout has been causing a few problems.

17:09.420 --> 17:16.380
Yeah, the goal of System D OOMD is to monitor your system's memory, swap, and the pressure

17:16.380 --> 17:21.140
stall information from the kernel and attempt to take corrective action in user space before

17:21.140 --> 17:27.440
the much simpler and sometimes destructive system busting out of memory handling in the

17:27.440 --> 17:30.140
Linux kernel itself has to kick in.

17:30.140 --> 17:31.860
That can be pretty brutal.

17:31.860 --> 17:37.260
Unfortunately, it seems the configuration in 22.04, well, it's just a little too good

17:37.260 --> 17:39.460
at killing processes.

17:39.460 --> 17:43.660
Yeah, various bug reports and issues have been turning up of user applications being

17:43.660 --> 17:48.060
killed a little too frequently, especially things like Chrome.

17:48.060 --> 17:51.700
And to make matters worse, it appears that these terminations are happening without much

17:51.700 --> 17:53.180
notice to the user.

17:53.180 --> 17:57.820
So they're not even aware that their system is under memory pressure in the first place.

17:57.820 --> 18:03.720
And I'm not really clear on how much of a facility there is to actually notify the user.

18:03.720 --> 18:08.220
But as you can imagine, all of this has led to discussions in the Ubuntu community around

18:08.220 --> 18:13.960
the best path forward to address this issue without totally losing the benefits of System

18:13.960 --> 18:15.960
D OOMD.

18:15.960 --> 18:19.800
Some of the options they considered is just, you know, adjusting the default swap setup

18:19.800 --> 18:25.140
on the system, or altering some of the System D OOMD tunables that are available.

18:25.140 --> 18:30.580
Or as you might expect, they've even considered just disabling it entirely.

18:30.580 --> 18:35.260
The developers have also identified some longer term plans that should help improve the System

18:35.260 --> 18:38.820
D OOMD experience on the desktop.

18:38.820 --> 18:44.300
One of those ideas is to make use of the managed OOM preference option that's available in

18:44.300 --> 18:46.420
System D service files.

18:46.420 --> 18:51.660
When this option is set to the value avoid, well, System D OOMD will try to avoid killing

18:51.660 --> 18:56.500
that process and only terminate it if there are no other viable candidates that could

18:56.500 --> 18:59.140
be killed instead.

18:59.140 --> 19:05.220
Now the hang up here is that in its current form, the managed OOM preference is only honored

19:05.220 --> 19:11.420
for C groups and processes owned by root, which isn't often the case for many applications

19:11.420 --> 19:13.740
and services that we use on the desktop.

19:13.740 --> 19:18.880
Yeah, and of course, it's the desktop realm where this is an issue right now.

19:18.880 --> 19:24.700
Now Canonical Developer has opened up a early pull request upstream to System D to make

19:24.700 --> 19:26.940
this work for all users in all C groups.

19:26.940 --> 19:31.340
But while that will be good work, it's going to be a while before that trickles downstream

19:31.340 --> 19:36.780
to end users and there's users of 2204 today that are having this problem.

19:36.780 --> 19:41.300
So for now, a bunch of developers have opted to simply tweak the configuration of System

19:41.300 --> 19:46.860
D OOMD via an update to no longer kill processes based on swap usage.

19:46.860 --> 19:52.380
It will, however, still rely on the pressure stall information from the kernel.

19:52.380 --> 19:56.580
It's a tricky balance to get right, but hopefully this will provide some relief for a bunch

19:56.580 --> 20:00.780
of users and still get the advantages of something that's watching over their system and preventing

20:00.780 --> 20:03.080
it from potentially locking up.

20:03.080 --> 20:06.700
We'll keep an eye on how all of this goes, including the upstream development that Canonicals

20:06.700 --> 20:10.120
Developer has submitted, and we'll let you know how it goes.

20:10.120 --> 20:13.520
We'll keep an eye on where all of this goes, including Canonicals upstream efforts and

20:13.520 --> 20:14.520
keep you posted.

20:14.520 --> 20:17.220
So don't miss a single episode of Linux Action News.

20:17.220 --> 20:28.040
Be sure you go to linuxactionnews.com.com.

20:28.040 --> 20:31.540
We have a lot of projects going on here at Jupiter Broadcasting this summer, and we've

20:31.540 --> 20:35.600
been chatting with some developers that are taking podcasting to the next level.

20:35.600 --> 20:39.900
Don't miss office hours at officehours.hair.

20:39.900 --> 20:44.160
As for us, don't worry, we'll be back next week with our take on the latest Linux and

20:44.160 --> 20:45.980
open source news.

20:45.980 --> 20:46.980
Thanks for joining us.

20:46.980 --> 20:48.700
That's all the news for this week.

