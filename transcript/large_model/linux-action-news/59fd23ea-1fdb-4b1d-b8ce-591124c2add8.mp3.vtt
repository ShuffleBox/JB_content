WEBVTT

00:00.000 --> 00:09.240
Hello, and welcome to Linux Action News, episode 215, recorded on November 14th, 2021.

00:09.240 --> 00:10.240
I'm Chris.

00:10.240 --> 00:11.240
And I'm Wes.

00:11.240 --> 00:12.240
Hello, Wes.

00:12.240 --> 00:13.240
Let's do the news.

00:13.240 --> 00:18.240
We start this week with the curious case of the latest Raspberry Pi OS, now based on Debian

00:18.240 --> 00:21.760
11, which was released back on August 14th, 2021.

00:21.760 --> 00:26.820
Yeah, I think this latest version of the Raspberry Pi OS did take a bit longer than I think the

00:26.820 --> 00:31.520
team was hoping, Simon Long detailed in the release notes that some significant efforts

00:31.520 --> 00:40.520
went into bringing the Raspberry Pi OS's desktop environment, LXDE, from GTK 2 to GTK 3, and

00:40.520 --> 00:43.160
now running on top of GNOME's Mutter project.

00:43.160 --> 00:47.980
Yeah, writing about that, Simon said, quote, up until now, most of the desktop had been

00:47.980 --> 00:51.040
using version 2 of the GTK toolkit.

00:51.040 --> 00:54.840
But increasing numbers of Debian applications are using GTK 3.

00:54.840 --> 00:59.560
So to try and keep things consistent, we've upgraded all of our software and the desktop

00:59.560 --> 01:01.480
itself to the newer version.

01:01.480 --> 01:08.360
Yeah, so GTK 3 was released on February 10th, 2011.

01:08.360 --> 01:13.400
At this point, and with the launch of the LXQ project, I think a lot of us in the community

01:13.400 --> 01:17.560
just sort of assumed LXDE would never get ported to GTK 3.

01:17.560 --> 01:18.560
I certainly had.

01:18.560 --> 01:24.440
Yeah, I mean, the amount of work it was going to be to port LXDE from GTK 2 to GTK 3 was

01:24.440 --> 01:29.000
cited way back when as one of the reasons to launch LXQ in the first place.

01:29.000 --> 01:31.040
Yeah, you're right.

01:31.040 --> 01:36.520
But you know, if you want to stick with LXDE, there is no road to the wayland future paved

01:36.520 --> 01:38.040
in GTK 2.

01:38.040 --> 01:43.080
Simon notes, quote, one of the changes which was prompted by the move to GTK 3 is that

01:43.080 --> 01:47.120
we're now using the new window manager called Mutter instead of the open box window manager

01:47.120 --> 01:50.120
used in previous releases, end quote.

01:50.120 --> 01:54.320
So along with some nice to have effects, Mutter also means that future versions of Raspberry

01:54.320 --> 01:58.160
Pi OS will be wayland compatible in theory.

01:58.160 --> 02:04.000
They're not there yet, but Mutter and GTK 3 kind of lay the groundwork for that.

02:04.000 --> 02:07.760
There are some complications, though, because the window manager is responsible for drawing

02:07.760 --> 02:11.640
the title bar and the window frame around all of your application windows.

02:11.640 --> 02:15.780
But Mutter is a compositing window manager, which means that rather than individually

02:15.780 --> 02:20.540
drawing window frames right onto the existing windows on the screen, it draws all the windows

02:20.540 --> 02:25.520
to a memory buffer off screen first, where it can create a complete image of the entire

02:25.520 --> 02:26.520
screen.

02:26.520 --> 02:28.720
And then that whole image is sent to the hardware to be displayed.

02:28.720 --> 02:32.560
Right, but that composition happens in memory.

02:32.560 --> 02:36.080
And we have to remember these are Raspberry Pis we're talking about here, and not all

02:36.080 --> 02:37.560
of them have a lot of RAM.

02:37.560 --> 02:43.240
So one drawback to Mutter's approach here is it needs comparatively a lot of RAM.

02:43.240 --> 02:48.360
So it seems that Mutter can only run on Raspberry Pis with two gigs or more.

02:48.360 --> 02:53.480
As a result, on Raspberry Pis with less, the older open box window manager will still be

02:53.480 --> 02:54.480
used.

02:54.480 --> 02:57.720
I suspect that right there might be one of the reasons it took so long for this work

02:57.720 --> 02:58.720
to get done.

02:58.720 --> 03:01.800
It just wasn't going to be viable on some of those low end systems.

03:01.800 --> 03:04.320
Yeah, there's so many questions around this.

03:04.320 --> 03:06.000
Like how long did it take?

03:06.000 --> 03:10.520
All these things I want to ask, linuxactionnews.com slash contact, let's get in touch.

03:10.520 --> 03:14.000
But I will reach out myself and try to find out because I agree, like, there had to be

03:14.000 --> 03:15.000
a factor.

03:15.000 --> 03:19.320
They kind of waited until enough of their devices had enough RAM to actually take advantage

03:19.320 --> 03:21.080
of this stuff.

03:21.080 --> 03:26.320
Along with that question, I also would like to know, are they essentially becoming the

03:26.320 --> 03:28.720
de facto caretaker of LXDE now?

03:28.720 --> 03:31.040
And are they okay with that?

03:31.040 --> 03:35.320
Did they consider switching to LXQt and supporting that project instead of having to do all this

03:35.320 --> 03:37.680
work perhaps by themselves?

03:37.680 --> 03:40.080
Yeah, that's a that's a good question, too.

03:40.080 --> 03:42.240
So we'll try to get answers to those relatively soon.

03:42.240 --> 03:46.360
But while looking into the new release, we did see some reports of various compatibility

03:46.360 --> 03:51.240
issues, including some hats and new versions of libraries that are not yet compatible with

03:51.240 --> 03:53.640
some of the Pi specific applications out there.

03:53.640 --> 03:56.960
So you're going to need to check to make sure that whatever you're using on your Raspberry

03:56.960 --> 04:00.000
Pi is compatible with Debian 11.

04:00.000 --> 04:04.020
And in some cases, you may have to wait until the developers have had time to update their

04:04.020 --> 04:06.880
software to be compatible with Debian 11.

04:06.880 --> 04:11.200
Indeed, these issues were enough that Tom's Hardware wrote in their own coverage of this

04:11.200 --> 04:16.300
release that quote, right now you should treat Bullseye as a curiosity and hold off using

04:16.300 --> 04:18.120
it as your daily driver.

04:18.120 --> 04:21.120
If you have mission critical projects, stick with Buster.

04:21.120 --> 04:24.720
It's tried and tested with two years of updates and improvements.

04:24.720 --> 04:27.320
All of your hats and cameras will work with Buster.

04:27.320 --> 04:32.320
Whereas with Bullseye, they might if the software developers had the time they need to update

04:32.320 --> 04:37.680
their drivers, which many have not.

04:37.680 --> 04:42.040
If you told me about a year ago or more that we'd be following enterprise Linux releases

04:42.040 --> 04:46.080
as closely as we are now, I'd probably have had a laugh.

04:46.080 --> 04:51.380
But 2021 is the make it or break it year for the post traditional CentOS transition.

04:51.380 --> 04:54.160
So we've been paying closer attention this year.

04:54.160 --> 04:59.600
And let's start with the release of RHEL 8.5, which out of the gate, the release notes touch

04:59.600 --> 05:05.280
on collaboration with Microsoft in multiple areas, including SQL Server and.NET 6, which

05:05.280 --> 05:07.280
was also just recently released.

05:07.280 --> 05:11.520
Now the ability to run SQL Server on RHEL is definitely not new.

05:11.520 --> 05:15.760
But what is new is having it supported by a system role.

05:15.760 --> 05:16.760
What's a system role?

05:16.760 --> 05:20.640
Well, you can think of them as a collection of Ansible roles and modules that provide

05:20.640 --> 05:25.220
a stable and consistent configuration interface for RHEL, something you can automate around

05:25.220 --> 05:28.400
and lets you manage multiple instances at scale.

05:28.400 --> 05:31.320
Now Microsoft SQL is included in that collection.

05:31.320 --> 05:32.320
Indeed.

05:32.320 --> 05:37.000
And reading between the lines, it kind of, well, I don't know exactly.

05:37.000 --> 05:42.080
But I got the strong hint that there was a little more collaboration than normal between

05:42.080 --> 05:45.000
Microsoft and Red Hat around this release.

05:45.000 --> 05:50.520
And some of that was around getting.NET 6 into RHEL 8.5, which is a pretty new release.

05:50.520 --> 05:55.060
And it seems that Microsoft may be hoping that their new.NET six month release schedule

05:55.060 --> 05:59.360
means more frequent updates to.NET that's being packaged up by the distros.

05:59.360 --> 06:04.020
It was a big kumbaya, but don't fear all these Microsoft things, of course, are just optional.

06:04.020 --> 06:07.880
And like every major release, there's lots of updates to all of the packages throughout

06:07.880 --> 06:09.560
the entire distribution.

06:09.560 --> 06:14.700
Also notable is something product manager Siddharth Nagar said, quote, RHEL 9 is actually

06:14.700 --> 06:17.640
our first major release tied closely to Stream.

06:17.640 --> 06:19.580
Yeah, look at Stream go.

06:19.580 --> 06:22.600
Not only is it going way up in the repository stats.

06:22.600 --> 06:24.900
So I mean, there's actual users out there.

06:24.900 --> 06:30.280
But Stream has quickly become the collaboration point for the entire RHEL ecosystem this year,

06:30.280 --> 06:32.200
which is exactly what they wanted to happen.

06:32.200 --> 06:37.020
Speaking of which, one of the big differentiators of the new RHEL clones is how well can they

06:37.020 --> 06:39.920
keep up with Red Hat Enterprise Linux?

06:39.920 --> 06:42.500
Seems that Alma Linux is doing pretty good right now.

06:42.500 --> 06:49.040
They're clearly leading the pack, having just released Alma Linux 8.5 just two days

06:49.040 --> 06:51.400
after RHEL 8.5.

06:51.400 --> 06:56.200
No word yet on Rocky Linux 8.5.

06:56.200 --> 07:00.800
Speaking of things enterprises love, Canonical has made it a little easier to run Ubuntu

07:00.800 --> 07:05.760
virtual machines on Apple Silicon Macs with the latest version of MultiPass.

07:05.760 --> 07:09.120
If you're not familiar with it, MultiPass is a slick tool that Canonical has been making

07:09.120 --> 07:14.680
for a little while that lets you quickly stand up Ubuntu instances inside a host native virtual

07:14.680 --> 07:15.680
environment.

07:15.680 --> 07:18.840
So I recently gave it a go on an M1 Mac mini.

07:18.840 --> 07:21.040
And I have to say, I was impressed.

07:21.040 --> 07:23.200
It was very fast to set up.

07:23.200 --> 07:28.200
And I had an Ubuntu VM running that I could SSH into probably from installing the tool

07:28.200 --> 07:31.160
to getting the VM up and going in under a minute.

07:31.160 --> 07:36.040
Well, in addition to that Apple Silicon support, the new MultiPass release also introduces

07:36.040 --> 07:41.260
aliases, which lets you link commands in the virtual machine to your host terminal session.

07:41.260 --> 07:42.540
I like that a lot.

07:42.540 --> 07:44.600
So it's essentially like an alias on steroids.

07:44.600 --> 07:47.240
So you can have commands that you type in your host terminal.

07:47.240 --> 07:51.920
So you just randomly open up a terminal and type it and execute it inside that Ubuntu

07:51.920 --> 07:52.920
VM.

07:52.920 --> 07:56.420
That's that's like almost container level access to my VMs.

07:56.420 --> 08:02.080
On top of that, MultiPass 1.8 makes LexD the default back end on Linux, improves support

08:02.080 --> 08:06.240
for the Monte desktop environment, and of course has the typical collection of nice

08:06.240 --> 08:07.560
to have bug fixes.

08:07.560 --> 08:11.640
Canonical also adds that with this update, MultiPass is now supported on every major

08:11.640 --> 08:12.640
desktop platform.

08:12.640 --> 08:17.120
And they point out that that gives developers a consistent environment, regardless of the

08:17.120 --> 08:21.900
desktop OS they choose to use, they can just run it all in MultiPass.

08:21.900 --> 08:25.800
Also this week marked the release of QMU62 RC0.

08:25.800 --> 08:29.900
This is the first release candidate for a big update to a project that plays a very

08:29.900 --> 08:33.360
important role in the open source Linux virtualization stack.

08:33.360 --> 08:36.880
And this new release includes support for Apple Silicon and has a lot more important

08:36.880 --> 08:39.360
RISC-V updates included as well.

08:39.360 --> 08:43.660
And speaking of Apple Silicon, lead Asahi Linux developer Hector Martin has managed

08:43.660 --> 08:48.520
to get KDE Plasma up and running on an M1 Pro MacBook Pro 14 inch.

08:48.520 --> 08:50.680
It's a lot of pros, Wes.

08:50.680 --> 08:53.560
It's all software rendered at this point we should mention.

08:53.560 --> 08:58.360
And more work is needed for Wi-Fi and trackpad and several other devices, but storage and

08:58.360 --> 09:01.580
other PCI devices are looking pretty good.

09:01.580 --> 09:04.960
If you're starting to feel like this is a lot of M1, what's going on here?

09:04.960 --> 09:06.360
Everybody talking about Apple Silicon.

09:06.360 --> 09:07.760
I think you're not alone.

09:07.760 --> 09:11.960
In fact, Hector tweeted kind of addressing this and why he works so hard to port Linux

09:11.960 --> 09:13.120
to Apple hardware.

09:13.120 --> 09:14.720
And he said, here's an example.

09:14.720 --> 09:19.640
I've had this test machine running with GLX gears with software rendering pushing 60%

09:19.640 --> 09:23.360
CPU usage all night with the lid closed and the display on.

09:23.360 --> 09:29.680
And he says, the machine is barely warm to the touch and still nearly silent.

09:29.680 --> 09:32.240
This is why I'm porting Linux to the M1.

09:32.240 --> 09:38.960
He also joked he'd come up with a Plasma setup that was, quote, notch compatible.

09:38.960 --> 09:44.320
But RFS fans are following some proposed on disk format changes to the free file system.

09:44.320 --> 09:48.900
Prominent file system developer Joseph Basak is working on an extensive set of patches

09:48.900 --> 09:53.480
that will address some of the, quote, more painful parts to the file system's design.

09:53.480 --> 09:58.240
Yeah, he's doing this work under the extent tree v2 label.

09:58.240 --> 10:02.800
And to date, it looks like about 80 patches, but it seems like that could just be the start.

10:02.800 --> 10:04.760
And this is going to be a long term thing.

10:04.760 --> 10:09.040
Over the next year, Joseph is working towards changes to address the locking contention

10:09.040 --> 10:14.040
on global routes and the issue of block group items being spread throughout the extent tree.

10:14.040 --> 10:17.920
In total, I think you'll probably see more than a year's worth of work here.

10:17.920 --> 10:21.080
And there's still a lot that needs to be done just to prepare.

10:21.080 --> 10:25.720
Unfortunately, there's just no way around the fact that some of these improvements will

10:25.720 --> 10:28.180
require on disk format changes.

10:28.180 --> 10:32.760
So users will eventually need to convert their butter fs file systems to the updated format

10:32.760 --> 10:38.880
when the time comes, and when they eventually get the new version from the distribution.

10:38.880 --> 10:42.480
If you're curious to learn more, Joseph goes into some excellent details and defines a

10:42.480 --> 10:47.320
lot of core butter fs file system terms in his blog post, which we'll have linked in

10:47.320 --> 10:48.640
the show notes.

10:48.640 --> 10:49.980
It's really worth a read.

10:49.980 --> 10:53.120
He takes some time to point out what their options were, why they went with the path

10:53.120 --> 10:54.120
that he's trying.

10:54.120 --> 11:00.720
And I think overall, it just shows a real investment in one of our favorite file systems.

11:00.720 --> 11:04.920
Linode.com slash LAN, go there to get $100 in 60 day credit on a new account.

11:04.920 --> 11:06.880
And of course, you're going there to support the show.

11:06.880 --> 11:09.920
So it's Linode.com slash LAN.

11:09.920 --> 11:12.360
Linode is the Linux geeks cloud.

11:12.360 --> 11:13.360
It's so great.

11:13.360 --> 11:14.360
We host everything there.

11:14.360 --> 11:19.000
We have 11 data centers worldwide, and they've been hard at work for 18 years to build the

11:19.000 --> 11:24.200
best service possible to just make it great to run your application on Linux.

11:24.200 --> 11:28.000
And they obviously have really good performance or else we wouldn't host everything we've

11:28.000 --> 11:29.760
built for the last couple of years there.

11:29.760 --> 11:33.000
I'm a performance hound.

11:33.000 --> 11:37.600
Only I'm sniffing out performance, you know, like Levi sniffs out treats, I sniff out performance.

11:37.600 --> 11:39.240
And Linode definitely checks that box.

11:39.240 --> 11:44.800
In fact, I have been really impressed with how much I can even load on the $5 a month

11:44.800 --> 11:45.800
Linode.

11:45.800 --> 11:52.080
I have I originally set up a Linode to do sync thing between the studio and the RV.

11:52.080 --> 11:55.380
So that way I had like an intermediary box that could like kind of cash stuff and then

11:55.380 --> 11:58.520
really blast it down to the RV when I get a connection.

11:58.520 --> 12:00.460
And Linode has super fast network connection.

12:00.460 --> 12:02.800
So that's absolutely solid.

12:02.800 --> 12:06.880
But then as time has gone on, I've done things like I've also used this now as a jump host.

12:06.880 --> 12:08.360
I also use it now.

12:08.360 --> 12:12.480
I just set this up over the weekend to set up a Starbound server so I could play Starbound

12:12.480 --> 12:14.160
with the kids on our own server.

12:14.160 --> 12:18.060
And it's so great for that kind of stuff because I already had Docker all set up because that

12:18.060 --> 12:19.820
just takes seconds to get going.

12:19.820 --> 12:24.040
They have one click deployments for all kinds of game servers or productivity services or

12:24.040 --> 12:26.680
development servers that you might want to use.

12:26.680 --> 12:29.640
And they have the best customer support in the business.

12:29.640 --> 12:31.960
So if you ever run into any problems, they can help you.

12:31.960 --> 12:34.900
And then on top of that, if you'd just like to do it yourself, they got a ton of great

12:34.900 --> 12:39.240
guides so you can stand up the system on your own and follow a guide if you ever get stuck.

12:39.240 --> 12:42.720
They've been rolling out blazing fast new MVME based block storage.

12:42.720 --> 12:48.360
They have a super flexible S3 compatible object storage and the easy to use dashboard brings

12:48.360 --> 12:49.360
it all together.

12:49.360 --> 12:52.560
So not only do I have confidence that I'm going to figure out anything that I want to

12:52.560 --> 12:57.460
do in there, literally everyone on the JB team also knows how to use that dashboard.

12:57.460 --> 12:59.780
It's intuitive and it's accessible.

12:59.780 --> 13:03.540
But then one of the things that I found that I have used on a more day to day basis is

13:03.540 --> 13:04.680
their API.

13:04.680 --> 13:10.560
As time goes on, I probably in totality do more via the API than I actually do via their

13:10.560 --> 13:11.560
dashboard.

13:11.560 --> 13:12.560
It's really great.

13:12.560 --> 13:15.560
So I know I could say that I can go on about it and tell you how great it is and how we

13:15.560 --> 13:16.960
use it and whatnot.

13:16.960 --> 13:19.620
But I think the best thing to do is try it yourself.

13:19.620 --> 13:21.200
And that's why they're giving you $100.

13:21.200 --> 13:23.100
You can actually really try it.

13:23.100 --> 13:25.840
So head over to linode.com slash LAN.

13:25.840 --> 13:33.200
Go grab that $100 in credit and support the show linode.com slash LAN.

13:33.200 --> 13:38.880
And thank you to Ting for making Linux action news possible, linux.ting.com.

13:38.880 --> 13:42.920
If you're sick of overpaying for self service, and you should be, go see how much you can

13:42.920 --> 13:47.440
save and then take 25 bucks off that at linux.ting.com.

13:47.440 --> 13:48.640
Here's the secret sauce.

13:48.640 --> 13:49.800
Ting is an MVNO.

13:49.800 --> 13:52.020
They're a mobile virtual network operator.

13:52.020 --> 13:56.240
That means that Ting invests in areas like customer service, great rates, competitive

13:56.240 --> 14:00.160
plans and not digging holes in the ground to stand up towers.

14:00.160 --> 14:02.580
But they get to run on those towers.

14:02.580 --> 14:06.680
So they can offer nationwide coverage and a great mix of plans and fast data rates at

14:06.680 --> 14:10.440
both LTE and 5G for prices that are going to blow your mind.

14:10.440 --> 14:14.880
And then they back that up with fantastic customer service and the best dashboard in

14:14.880 --> 14:15.880
the industry.

14:15.880 --> 14:19.640
I'm big on that stuff, because honestly, sometimes I just don't have the energy to call customer

14:19.640 --> 14:20.640
support.

14:20.640 --> 14:22.400
I don't know what it is about me.

14:22.400 --> 14:23.520
Maybe I'm just not a big phone person.

14:23.520 --> 14:24.960
I think that's probably it.

14:24.960 --> 14:27.320
So I don't like calling in customer support.

14:27.320 --> 14:30.840
And that, by the way, is also why Ting has worked so good for me.

14:30.840 --> 14:34.800
I have been a customer since 2013, and I don't like making calls.

14:34.800 --> 14:37.960
So I picked plans that optimize for that.

14:37.960 --> 14:41.160
But if you are the opposite, if you're like making phone calls all the time or doing a

14:41.160 --> 14:45.680
lot of text, they have lots of plans, lots of ways to get unlimited calls and texts.

14:45.680 --> 14:48.080
So it's really just what works well for you.

14:48.080 --> 14:49.080
Maybe you need a lot of data.

14:49.080 --> 14:50.880
They got plans for that as well.

14:50.880 --> 14:53.160
And it's so simple to switch to Ting.

14:53.160 --> 14:56.560
Pretty much any phone will work because of their multi network support.

14:56.560 --> 14:59.200
So just go over to linux.ting.com.

14:59.200 --> 15:02.740
Check out your current phone, create an account and pick the plan that's right for you.

15:02.740 --> 15:05.000
When everything lines up, Ting will send you a SIM card.

15:05.000 --> 15:08.560
You pop that sucker into your phone once you get it, and you're going to be active in minutes

15:08.560 --> 15:09.560
on the Ting network.

15:09.560 --> 15:14.680
Cutting your phone bill in half has never been easier with Ting's brand new plans and

15:14.680 --> 15:15.800
brand new prices.

15:15.800 --> 15:26.440
Go see how much you could save and then take 25 bucks off that linux.ting.com.

15:26.440 --> 15:29.520
Have you pre-ordered a Steam Deck, brace yourself.

15:29.520 --> 15:32.080
We have some less than stellar news.

15:32.080 --> 15:36.720
Valve has pushed the release back to February 2022.

15:36.720 --> 15:41.120
A couple of days ago, Valve sent out an email to pre-order customers informing them that

15:41.120 --> 15:44.680
the Steam Deck release was going to be delayed by two months.

15:44.680 --> 15:45.680
All right.

15:45.680 --> 15:46.680
Okay.

15:46.680 --> 15:49.560
Yeah, Valve says in their shipping update, we're sorry about this.

15:49.560 --> 15:53.420
We did our best to work around the global supply chain issues.

15:53.420 --> 15:57.840
But due to material shortages, components aren't reaching our manufacturing facilities

15:57.840 --> 16:00.800
in time for us to meet initial launch dates.

16:00.800 --> 16:05.260
They do note that all reservation holders will keep their place in line, but dates will

16:05.260 --> 16:06.260
shift back accordingly.

16:06.260 --> 16:10.940
You know, Michael Larbell over at Fronix actually kind of points out a sort of decent silver

16:10.940 --> 16:13.120
lining to this news, though.

16:13.120 --> 16:18.920
Like he says, this two extra months will allow Valve more time to optimize their Linux stack,

16:18.920 --> 16:23.040
optimize Proton, continue work on the RADV Vulkan driver, as well as the other components

16:23.040 --> 16:24.040
that make up SteamOS.

16:24.040 --> 16:29.960
It may also give some game developers a little extra time to get their stuff ready as well.

16:29.960 --> 16:34.560
And speaking of, we did get some new details about the Steam Deck and its Arch-powered

16:34.560 --> 16:37.400
operating system from the Deck developers directly.

16:37.400 --> 16:38.520
Yeah, we did.

16:38.520 --> 16:43.200
On Friday, Valve hosted the Steam Deck Development Livestream, really targeted at developers

16:43.200 --> 16:45.200
who are porting games over to the Deck.

16:45.200 --> 16:48.480
And it's pretty informative, so we'll have a link to the full stream in the show notes.

16:48.480 --> 16:50.960
Along with learning that SteamOS will use Pipewire.

16:50.960 --> 16:53.280
I mean, hey, how could they not?

16:53.280 --> 16:57.720
Valve shared that SteamOS 3 would be made available to the general public in the near

16:57.720 --> 16:58.720
future.

16:58.720 --> 17:03.080
So do you plan to release SteamOS as a standalone, general purpose OS?

17:03.080 --> 17:07.800
Yeah, we definitely plan on releasing SteamOS as a separate operating system.

17:07.800 --> 17:09.120
We don't have exact timing on that.

17:09.120 --> 17:11.400
Again, it's really kind of the same answer as Big Picture.

17:11.400 --> 17:15.600
We're really focused on making sure that Steam Deck is a great experience.

17:15.600 --> 17:17.780
But we hope to release it to other platforms soon.

17:17.780 --> 17:22.520
Like Fedora Silverblue and others, it seems SteamOS will have a read-only system partition

17:22.520 --> 17:28.240
and utilize OS tree-like updates for safe and reversible system upgrades.

17:28.240 --> 17:31.840
Will SteamOS have a read-only, immutable OS file system?

17:31.840 --> 17:32.840
Yes.

17:32.840 --> 17:38.960
So by default, the updates, the OS updates will be distributed as a whole OS image.

17:38.960 --> 17:42.760
But you can enter a developer mode, which will let you modify the file system and install

17:42.760 --> 17:45.000
packages like a normal distribution.

17:45.000 --> 17:50.480
That could make SteamOS a compelling Arch desktop, even outside of the Deck.

17:50.480 --> 17:53.920
And definitely something we'll be digging into in the future.

17:53.920 --> 17:58.340
Even with this file system design, Valve said you will be able to load third-party apps

17:58.340 --> 18:00.000
like any other Linux PC.

18:00.000 --> 18:04.720
Yeah, so you can totally install any game like you would on the Steam desktop.

18:04.720 --> 18:09.020
You install the application and then add it to Steam and it'll show up just like it would

18:09.020 --> 18:10.400
on a regular PC.

18:10.400 --> 18:15.720
So this stream focused on developers actually gave us the first real nuanced explanation

18:15.720 --> 18:20.860
of some of the compatibility issues developers can expect when bringing their Windows game

18:20.860 --> 18:23.320
over to Linux utilizing Proton.

18:23.320 --> 18:27.600
It's pretty common for a new title to work perfectly out of the box without any work

18:27.600 --> 18:29.580
needed on the developer's part.

18:29.580 --> 18:33.880
That being said, the overall surface area is quite big and there's no shortage of gaps

18:33.880 --> 18:35.400
left to cover.

18:35.400 --> 18:39.180
Running into Proton coverage issues could mean a delay before a newly released title

18:39.180 --> 18:40.920
can be enjoyed on Deck.

18:40.920 --> 18:45.520
Here's some general tips on technology choices that might help avoid those gaps.

18:45.520 --> 18:51.200
We understand those are only likely to be useful for a project in early stages of planning.

18:51.200 --> 18:55.480
A good rule of thumb is that there is more room for error in Proton when the game uses

18:55.480 --> 19:00.680
massive external libraries, as opposed to code that it includes in its own build.

19:00.680 --> 19:05.740
For example, a built-in browser engine like the Chromium Embedded Framework is less likely

19:05.740 --> 19:08.320
to have issues than MSHTML.

19:08.320 --> 19:12.600
In general, we don't recommend launcher Windows, but if you have one, a library such

19:12.600 --> 19:17.680
as Qt is trivial to support, unlike something like.NET WPF.

19:17.680 --> 19:23.040
For video playback, libvpx or bink are better alternatives than Media Foundation.

19:23.040 --> 19:28.040
Complex or invasive anti-temper or anti-cheat frameworks can be hard or even impossible

19:28.040 --> 19:32.240
to support properly without direct involvement from their provider.

19:32.240 --> 19:35.960
Another thing that can be a huge help is for our team to be able to test and debug the

19:35.960 --> 19:37.220
game pre-release.

19:37.220 --> 19:43.440
We also got our first in-depth explanation on Valve's view of native Linux games versus

19:43.440 --> 19:45.120
just targeting Proton.

19:45.120 --> 19:50.580
On the graphics side, the latest APIs like DX11 and 12 are supported through purpose-built

19:50.580 --> 19:52.460
drivers based on Vulkan.

19:52.460 --> 19:56.720
If there is a choice between the two APIs, things are now at a point where DX12 through

19:56.720 --> 20:01.100
Proton tends to be a better experience in cases where it's also a better experience

20:01.100 --> 20:02.460
on Windows.

20:02.460 --> 20:08.460
Unlike DX12, DX11 translation is heavily reliant on dynamic shader recompilation, which can

20:08.460 --> 20:09.700
induce stutter.

20:09.700 --> 20:15.240
To address this, we have developed a robust shader precaching system as part of Steam.

20:15.240 --> 20:19.260
It lets all the needed permutations be processed before the game starts.

20:19.260 --> 20:23.320
This system is currently being improved for the deck so that the processing is done on

20:23.320 --> 20:26.860
our servers ahead of time, as opposed to the user's machine.

20:26.860 --> 20:32.920
For Proton as a whole, graphics API translation also tends to be the main source of significant

20:32.920 --> 20:34.080
CPU overhead.

20:34.080 --> 20:39.220
This has been a bit of a discussion like on Linux Unplugged, but it seems genuinely the

20:39.220 --> 20:45.320
Valve folks don't have a particular dog in this hunt beyond just looking for the least

20:45.320 --> 20:48.580
friction possible for game developers.

20:48.580 --> 20:52.480
And you get the impression they've seen some really half-assed Vulkan ports in their time.

20:52.480 --> 20:55.980
And so you get a general message from the stream, and that is, if you're going to go

20:55.980 --> 20:59.460
Vulkan for your Linux port, you really need to go all-in.

20:59.460 --> 21:04.260
That the biggest opportunity to improve Proton performance is to target Vulkan directly.

21:04.260 --> 21:08.900
It's no small task, and as such, we only recommend it in cases where it would make sense to also

21:08.900 --> 21:12.100
focus on Vulkan as your primary API for Windows.

21:12.100 --> 21:16.380
I think the most positive thing I took away from this Valve event was that every Linux

21:16.380 --> 21:21.860
gamer's gaming experience is about to be changed forever, even if you never own a deck.

21:21.860 --> 21:25.380
The very first one has to do with Proton testing, and people are wondering if it's going to

21:25.380 --> 21:27.740
be part of the game submission process moving forward.

21:27.740 --> 21:33.660
Yes, actually, we're going to wrap that up into the deck-verified testing that happens

21:33.660 --> 21:37.700
before game release, which will give us a pretty good opportunity to uncover some of

21:37.700 --> 21:40.980
these Proton issues before the game makes its way to users.

21:40.980 --> 21:41.980
That's huge.

21:41.980 --> 21:46.900
Valve will work with game developers before they've released their game to make sure it

21:46.900 --> 21:48.340
works with Proton.

21:48.340 --> 21:52.980
Not every developer will take them up on that offer, but it does mean a lot more games are

21:52.980 --> 22:00.420
going to run on Linux on day one, and that's a huge improvement for everyone using Linux,

22:00.420 --> 22:02.220
deck or no deck.

22:02.220 --> 22:05.940
It's great to see that, and we'll follow these developments and everything else in the world

22:05.940 --> 22:10.580
of Linux and open source, so be sure you go to linuxactionnews.com slash subscribe for

22:10.580 --> 22:12.460
all the ways to get new episodes.

22:12.460 --> 22:16.740
And linuxactionnews.com slash contact for ways to get in touch.

22:16.740 --> 22:21.700
Swag bags are back, and now a new swag bag with the Jupiter Broadcasting Journal.

22:21.700 --> 22:23.220
That's the J.B. Journal.

22:23.220 --> 22:25.660
Go check it out at JupiterGarage.com.

22:25.660 --> 22:30.780
We'll be back next Monday with our weekly take on the latest Linux and open source news.

22:30.780 --> 22:51.820
Thanks for joining us, and that's all the news for this week.

