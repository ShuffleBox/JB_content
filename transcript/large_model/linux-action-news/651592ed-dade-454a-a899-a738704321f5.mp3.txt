Hello, and welcome to Linux Action News. Episode 220, recorded on December 19, 2021. I'm Chris.
And I'm Wes.
Hello, Wes. Let's do the news.
And we start this week with a real mess. Following up on our story last episode, it appears the
previous mitigations to address the log for shell vulnerability may not be enough. The
log for J Team has released a new patch to fix issues that have been discovered at a
rapid pace.
A mess indeed, Wes. And it's been dubbed a design failure of catastrophic proportions
by security researchers. If you didn't catch last week's episode, the crux of the issue
really is log for J. That's where this vulnerability exists. It's part of a Java based Apache
library that's present in lots of cloud software, local software, and it's used in a lot of
industries and governments. It's a real go to tool. It's about as ubiquitous as these
kinds of things get. And so there's globally millions of servers that have this logging
tool installed and are vulnerable.
For a sense of just how bad, well, cybersecurity firm Check Point revealed on Monday that since
the weekend, there have been over 830,000 attacks using this exploit. Making matters
worse, the team has had to issue two separate patches causing server and application administrators
to have to perform a series of emergency updates. We've been hearing from many of you that staffing
is tight around the holidays, adding a particular end of year pressure to an already bad situation.
Okay, so to try to make all this clear, we're going to break it break it down into a timeline
for you. So all of this happened obviously in 2021. And it starts on Wednesday, November
24. That is when the log for J vulnerability is first disclosed to the Apache foundation
by a developer at the Alibaba cloud security team. Then on Friday, November 26. That's
the date that the vulnerabilities actually recorded into the CVE list.
But it isn't until Thursday, December 9, that reports actually surfaced about a new
zero day vulnerability termed log for Shell impacting Minecraft servers of all things.
Then just a day later on Friday, December 10, the public became aware of log for Shell.
And we learned that steam and iCloud among several other prominent online services were
vulnerable. Then on December 11, Jen Easterly, the director of the US Cyber and Infrastructure
Security Agency known as CISA released the following statement.
The log for J vulnerability is the most serious vulnerability that I've seen in my decades
long career. Everyone should assume that they are exposed and vulnerable and to check and
make sure that they're not vulnerable.
Then on Tuesday, December 14, reports of 200,000 attempted attacks across the globe came in
from checkpoint and cybersecurity companies CrowdStrike and Mandiant said that they saw
Chinese and Iranian state actors leveraging the log for J vulnerability. And then on Wednesday,
December 15, an updated fix a second log for J vulnerability patch was issued CVE 2021-45-046,
prompting the Apache Foundation to try to get the word out as fast as possible.
Now as we record on Sunday, December 19, most of the activity observed so far appears to
be pretty much just low level threats, basic use of these new exploits. But as the volume
of log for Shell attacks increases, higher level threats like ransomware will surely
follow. Because there's more than 35,000 Java packages, something like 8% of the Maven Central
repository that are impacted by log for Shell. I mean, this thing's everywhere.
Oh, yeah, no doubt. This is gonna be something we'll be hearing about well into 2022. There
is some promising numbers coming in. There's a lot of stats we can throw at you. But I
think this one really shows you how hard the open source community is working because in
less than a week, 4620 of those affected packages, that's about 13% have been fixed. That really
shows you the hustle of the community. And of course, the information security researchers,
Apache Foundation, and the log for J developers who are really working hard to try to get
all of us secure. Our thoughts, though, really, at the end of the day, are with the admins
that have to spend that extra time those late evenings or those weekends to get this stuff
installed. So that way, we're all secure. Our thanks to you.
Now for a bit of good news, everyone. A project we haven't updated you on for a while has
a new update with some great features. Pipewire 0.3.41.
I have to admit it is hard for us not to jump on every single release and tell you all about
it in each episode because these releases have been great. And they're regular, they're
constantly releasing new updates. But Pipewire 0.3.41 delivers on some special improvements
that we wanted to tell you about. Number one with a bullet right there is Flatpak Sandbox
applications are going to behave a lot better with Pipewire. So think of all of the potential
AV applications that might be Flatpak either now or in the future. Also, there was continued
work on enhancing jack compatibility. And one of those Flatpak apps I talked about,
OBS, can now capture from monitor devices again when using Wire Plumber, which we had
for a bit, we lost and it's back and it's back in a better way now. And then you got
your standard memory leak fixes, your improved buffer memory allocation, all that stuff you
always like to see in a project as well.
And for you AirPlay users out there, well, you might appreciate that there's a new module
that you can use to stream right to your AirPlay devices. And if you're stuck in the zoom lifestyle,
like I certainly am, well, the echo cancellation module has voice detection enabled now. This
should be trickling down to a distribution near you sometime sooner than you might think.
In Linux land, even old tried and true assumptions can get revised, revisited and disrupted on
the regular. And this week we have news of changes are coming to your precious extended
for file system, at least how it mounts. Now this change has actually been in the works
since about 2018. But if you've been keeping an eye on the Linux kernel development, all
signs are pointing to this change shipping soon.
It looks like in Linux 5.17, ext4 could be making use of the kernels new mount API. This
new API is meant to address limitations in the older mount design. Here's canonicals
Christian Bronner from last year's open source summit explaining some of the advantages of
the new API.
Well, the obvious cool thing is that it's, instead of being path based, something I just
critiqued seconds earlier, the new mount API is file descriptor based. In fact, you can
use the new mount API without using any paths at all, which is obviously always excellent
for security. And instead of having a single syscall to do all of the things at the same
time, the new mount API splits is split into multiple syscalls.
Now I'm not a developer that's pushing the limits of current mount API possibilities,
but Bronner articulates a list of issues in the full talk, which we will have linked in
the show notes. Right now, the extended four patches have been landing in the development
branch for Linux 5.17. And it looks like all the necessary stuff is in place for the transition
to happen with the release of Linux 5.17.
Well, speaking of Linux 5.17, a big patch of code to support Apple's M1 has been submitted.
And it appears work to support the M1 Pro and Max chips is going pretty well.
Well, project lead Hector Martin noted in an end of year update that some of the challenges
posted by the new SSE did throw them for a loop. Apple in the M1 Max and Pro has shifted
from using a component that seemingly had ties all the way back to one of the original
iPhones to now something that apparently can scale up in both terms of memory and CPU cores,
potentially hinting at more powerful future Macs. But it did require Hector and the team
to make updates to support the increased physical address space.
Amusingly, Martin wrote, while implementing support for this in Linux, we ran into a bug
in Linux's ARM SMMU support that had been there ever since 52 bit address support was
introduced. This was breaking systems with more than 256 terabytes of RAM. I wonder why
nobody noticed. Either way, Linux now correctly supports standard ARM systems with up to four
petabytes of RAM.
When you see people online asking the cliche question, is this worth the effort? Well,
this is a great example of how the effort to port to Apple's M1 SoC has benefited the
wider Linux ecosystem, and why it's important that everything they're doing is going upstream.
And just as we record Hector just got Wi Fi working after what he calls a quote, dumb
fix. And the team also recently got the touchpad and keyboard working on the M1 powered MacBooks
as well as audio playback. And to help you kind of sort where they're at in all of this,
they have published a visual overview of sorts that gives you a state of component support
right now.
Yeah, that's really nice. And just about the only way I managed to keep track of all of
these developments. But perhaps the most surprising update came from Hector directly on Twitter,
tweeting that Apple had recently made a change to Mac OS 12.1. That's only purpose seems
to be to help the Asahi team writing quote, looks like Apple changed the requirements
for Mako kernel files in 12.1, breaking our existing installation process. And they also
added a raw image mode that will never break again, and doesn't require Mako. And people
said they wouldn't help. This is intended for us.
Yeah, he was actually pretty insistent about that. Even in following threads. He said,
Seriously, I can't think of a single reason why they would add this for themselves. They
build real Makos with their own process. They have no use for raw images. They are basically
saying, he says, quote, Hey, use this, it's easier, and we won't break it in the future.
He follows up by saying this is for Asahi.
Well, some in the thread speculated, perhaps this was a move to help Microsoft get Windows
Arm Edition working on these new Macs. But Hector disagreed.
You know what, I actually agree with Hector, this tracks with how Apple often behaves.
When you look at other past examples outside of the space, it's, in one word, strange,
but there is a bit of a rhyme to their reason. You see, Apple's never just going to come
right out and release documentation, they're not going to hold a session at WWDC. It really
just comes down to Apple's middle management will never okay an allocation of valuable
developer time like that, it's just not going to happen. But there are engineers inside
the company that recognize they can make these small little changes that make a big difference.
And they're small enough changes that upper management would literally never notice even
in 100 years until, you know, we start talking about it. And why wouldn't they want this?
Think about it. Surely Apple would like to use their own SoC in their data centers. Apple
is a big Linux user internally on x86. Right now, they use it for iCloud servers, and they
use Linux for a lot of internal hardware testing on prototypes on the routine.
Yeah, I could definitely see that. And either way, I think we're both of the mindset. Who
cares exactly why they're doing this? I mean, the positive change that looks like it's going
to be a change that sticks around, which should make it a lot easier to run Linux on this
shiny new Mac hardware. That's going to benefit a lot of users for a long time.
lino.com slash LAN go there to get $100 in 60 day credit on a new account. And you go
there to support the show. Linode is really the Linux geeks cloud. They've got 11 data
centers worldwide. And they've been hard at work for 18 years making this the best experience
for running applications on Linux. If you want to build it yourself and really start
from the ground up, or you want to deploy something with a single click, they've got
excellent options for you. And regardless of which direction you go, the performance
is always incredible. I wouldn't be sticking with Linode for all these years if it didn't
actually just scream. I mean, that's the bottom line for me right there. But then I realized
like the dashboards, great, the customer service is the best in the industry. There's all these
things too, right that are just fantastic. But when you really start to use Linode for
a while, you kind of start picking up on some of the little improvements you can use by
the command line tool or taking advantage of the API or maybe you're already ahead of
me and doing something like ansible to manage your infrastructure like I should be Linode
works great with all of that stuff as well. terraform, kubernetes Yep, absolutely. So go
try it out because with $100 that's really saying something. That's Linode saying we're
confident enough that if we give you $100 on our platform, you're going to really get
a chance to try it. And when you try it, when you can really try it with that $100 you're
going to like it. That's the message they're sending there. I think that's a real confident
move on their part and I love it. And I think you're gonna like it too. I think it's a great
fit for our audience. So go over there right now grab that $100 in credit and support the
show go learn something go try something go deploy something in production. It's linode.com
slash LAN and also a big holiday thank you to Ting for making the show possible and for
all of you who support the show by going to linux.ting.com that's where you go if you're
sick of overpaying for your cell service. Go see how much you could save and then take
25 bucks off that linux.ting.com ting is going to give you access to the big carrier networks
nation donation wide networks you know the big ones that you heard of but at a way better
rate with way better customer service and no contracts ever that is essentially the
ting recipe you go over there to linux.ting.com you put your phone information in they're
gonna have something compatible because they support the big networks once you get everything
sorted ting will send you a SIM card you pop that in you go to their dashboard which is
great by the way and you get activated in minutes it really is a smarter way to do mobile
I've been a ting customer since 2013 I mean I'm not sure but I think that's longer than
I've had a kid possibly maybe not but it's close to at least one of the ages of my kids
and there's a reason it's smarter it's a better way to do mobile it's simple and ironically
the fact that there's no contract actually makes me want to stick around longer it's
just one of those things and why not get access to the same big networks you already have
but pay less for it that's the ting idea linux.ting.com just about any phone will work and you can
get started in minutes and it's a great way to support the show and save yourself some
money so head over there right now linux.ting.com and see how much you could save and then take
25 bucks off that linux.ting.com we wanted to end today by checking in on something that
matters to all of us keeping podcasting healthy and decentralized to that end we had a chance
to sit down with Dave Jones from the podcasting 2.0 index Dave shared with us their very simple
mission preserve protect and extend the open podcasting ecosystem we started by asking
Dave what was the motivation to create a brand new open source podcast index I guess the
abbreviated version of that is that a guy I've been working with for a long time widely
known in podcasting co-invented podcasting is Adam Curry and Adam and I had been friends
for you know probably 10 years or more working on various projects around RSS and feed aggregation
and OPML and we built jointly built a show notes system for his podcast the no agenda
show and which you know it's huge got about a million listeners and so we we had kind
of been through the trenches in in software our aggregation software and RSS but he called
me about a year and a half ago and said maybe a little bit longer back said hey you know
this this whole thing with Apple sort of controlling the default search the sort of the yellow
pages of podcasting number one makes no sense and number two it's concerning because with
all the deplatforming going on and and all this kind of thing and so you know they're
you have what you end up with is this what's supposed to be an open decentralized system
of podcasting built on RSS and that's true it mostly operates that way but then when
you look at in in practice where do you go to find podcasts and where do all those things
live everything goes to Apple which is you know the literally the largest company in
the world so you have this this huge dichotomy here between what podcasting is supposed to
be at a technical level and what it actually is in practice and he's like you know what
we've we really need to change this and we have we have the chops to do it so why don't
we get together and create a an index to begin with an open directory of podcasts and then
tie an API to it to where any app developer can write an app and just hook into it for
free we'll have it be donation based and not you know not a paid product and then we'll
do a podcast to go along with it and as we build it we'll just podcast about what we're
doing and hopefully we'll get a whole bunch of app developers on board that are struggling
to pay for all the infrastructure that it takes to run a back end for a podcast app
we'll make that easier for them and in the in the process we'll build this alternative
directory to Apple so that we can take that centralization away and then in the process
we'll we'll get or excuse me one of the one of the elements of it will be we'll give the
whole database away so that's I was like you know hey that sounds like a challenge sounds
fun to do yeah let's do it and so that's kind of where it was born about a year and a half
ago Dave and I had so much to talk about and there are a lot of great features and abilities
that they want to enhance podcasting within the RSS standard and when I looked through
it I liked all of them really I really couldn't be more excited about this and I think I also
feel like it couldn't have come at a better time with companies like YouTube and Facebook
just announced they want to get into podcasting within like the last week and one that we've
been watching closely in this space is Spotify as well and of course Apple who continues
to dominate so major players clearly want a piece of the action a decentralized tool
that innovates around an open standard could be what manages to keep podcasting indie yeah
I mean what they're trying to accomplish with the podcast index and podcasting 2.0 is essentially
prevent a YouTube of podcasts where you have one company controlling the entire media which
is what they would like to do the YouTube initiative clearly would be a success when
they have more podcasts exclusively on their platform that's how they all work here so
that's what Adam Curry and Dave Jones are trying to prevent and there was a lot more
we discussed with Dave including some of those new features they want to bring to RSS and
to make podcasting better and we'll have a complete chat with all of that and a lot more
in Linux unplugged in early January so don't miss that and don't miss a single episode
of Linux action news be sure you go to linuxactionnews.com slash subscribe for all the ways to get new
episodes and at linuxactionnews.com slash contact for ways to get in touch good news
for our patrons and those of you who've wanted to support the network we have a new network
membership and you'll get Linux action news completely ad-free when you join and all the
other shows go to Jupiter.party to sign up for that and we'll be back next Monday with
our weekly take on the latest Linux and open source news thanks for joining us and that's
all the news for this week.
