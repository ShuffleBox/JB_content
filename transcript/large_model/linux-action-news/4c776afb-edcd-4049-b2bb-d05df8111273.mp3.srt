1
00:00:00,000 --> 00:00:08,540
Hello, and welcome to Linux Action News, episode 230, recorded on March 2nd, 2022.

2
00:00:08,540 --> 00:00:09,540
I'm Chris.

3
00:00:09,540 --> 00:00:10,540
And I'm Wes.

4
00:00:10,540 --> 00:00:11,540
Hello, Wes.

5
00:00:11,540 --> 00:00:13,420
Let's do the news.

6
00:00:13,420 --> 00:00:17,860
We start this week with a quick state of the deck.

7
00:00:17,860 --> 00:00:24,020
Valve's team held a series of interviews, and during one chat with IGN, Valve's Lawrence

8
00:00:24,020 --> 00:00:30,120
Yang touched on the overall production of the deck, mentioning, quote, in production

9
00:00:30,120 --> 00:00:32,480
terms, it'll ramp up very quickly.

10
00:00:32,480 --> 00:00:36,080
In the first month, very quickly, we'll be in the tens of thousands.

11
00:00:36,080 --> 00:00:39,760
By the second month, we'll be in the hundreds of thousands.

12
00:00:39,760 --> 00:00:43,200
And beyond that, it'll grow even quicker.

13
00:00:43,200 --> 00:00:48,680
Woohoo, here come the decks, and here come the OS updates, which are still landing, as

14
00:00:48,680 --> 00:00:50,960
you maybe might expect.

15
00:00:50,960 --> 00:00:56,040
Viewers on Reddit reported some rather nasty thumbstick drift, which is an issue that has

16
00:00:56,040 --> 00:00:58,000
impacted many controllers over the years.

17
00:00:58,000 --> 00:01:03,240
However, this one seemed to be caused by a regression in a recent firmware update, and

18
00:01:03,240 --> 00:01:05,320
Valve has now corrected that issue.

19
00:01:05,320 --> 00:01:09,560
Unfortunately, it's not all bug fixes and good news.

20
00:01:09,560 --> 00:01:12,280
We've gotten some bad news as well.

21
00:01:12,280 --> 00:01:17,760
Bungie, makers of the popular game Destiny 2, have threatened to ban players who attempt

22
00:01:17,760 --> 00:01:21,560
to bypass compatibility requirements on the deck.

23
00:01:21,560 --> 00:01:24,120
Okay, maybe that doesn't sound so bad.

24
00:01:24,120 --> 00:01:33,000
Until you realize that those compatibility requirements, well, they mandate Windows.

25
00:01:33,000 --> 00:01:34,000
This is such a shame.

26
00:01:34,000 --> 00:01:41,760
You know, Bungie has a long history, and their start was in supporting platforms that didn't

27
00:01:41,760 --> 00:01:43,720
necessarily have mainstream support.

28
00:01:43,720 --> 00:01:45,360
So it's a shame to see this.

29
00:01:45,360 --> 00:01:50,040
But they updated their help page to give us all a hand so we can sort ourselves out, and

30
00:01:50,040 --> 00:01:54,160
the new section is titled Steam Deck and Destiny 2.

31
00:01:54,160 --> 00:01:57,840
And I'll just read a little bit to help everybody get on the same page.

32
00:01:57,840 --> 00:02:03,640
It reads, Destiny 2 is not supported for play on the Steam Deck or any system utilizing

33
00:02:03,640 --> 00:02:07,880
Steam Play's Proton unless Windows is installed and running.

34
00:02:07,880 --> 00:02:12,680
Players who attempt to launch Destiny 2 on the Steam Deck through SteamOS or Proton will

35
00:02:12,680 --> 00:02:18,760
be unable to enter the game and will be returned to the game library after a short time.

36
00:02:18,760 --> 00:02:27,040
Players who attempt to bypass Destiny 2's incompatibility will be met with a game ban.

37
00:02:27,040 --> 00:02:31,700
And man, what a shame, because speaking for myself, I'm very disappointed.

38
00:02:31,700 --> 00:02:35,880
For one reason, this is like the number one game I wanted to play on the deck.

39
00:02:35,880 --> 00:02:41,800
I really kind of fell in love with Destiny 2 when I tried it out on Stadia.

40
00:02:41,800 --> 00:02:43,960
And that's my other point in all this.

41
00:02:43,960 --> 00:02:49,020
I don't really understand even why Bungie is doing this, because I played Destiny 2

42
00:02:49,020 --> 00:02:51,760
on Stadia, which runs on Linux.

43
00:02:51,760 --> 00:02:54,720
So they have a Linux port of Destiny 2.

44
00:02:54,720 --> 00:03:01,920
So it's clearly just like a lazy, heavy-handed way to ensure that their malware-styled anti-cheat

45
00:03:01,920 --> 00:03:04,420
crap still works.

46
00:03:04,420 --> 00:03:08,840
They don't even really seem to give deck owners a full answer here.

47
00:03:08,840 --> 00:03:12,660
I mean, yeah, okay, they tell you what's going to happen, but they don't make it clear

48
00:03:12,660 --> 00:03:15,320
why or what the issue is.

49
00:03:15,320 --> 00:03:18,520
We're left to just assume it's anti-cheat related, because historically that's been

50
00:03:18,520 --> 00:03:23,520
one of the issues with Proton support for a variety of games, despite all of Valve and

51
00:03:23,520 --> 00:03:26,240
Collabra's hard work in this area.

52
00:03:26,240 --> 00:03:31,180
I suppose one plausible interpretation that is maybe a little more charitable is to suggest

53
00:03:31,180 --> 00:03:36,600
that Bungie might be buying some time to get that Stadia Linux version actually working

54
00:03:36,600 --> 00:03:37,600
on the Deck.

55
00:03:37,600 --> 00:03:43,080
And they don't really want users trying to half-ass the game support in another way in

56
00:03:43,080 --> 00:03:46,360
the meantime, and perhaps having a bad experience.

57
00:03:46,360 --> 00:03:49,260
If that's true, just tell us.

58
00:03:49,260 --> 00:03:52,880
I'm sure Valve and Collabra will be happy to help.

59
00:03:52,880 --> 00:03:53,880
Right.

60
00:03:53,880 --> 00:03:54,880
Great point.

61
00:03:54,880 --> 00:03:55,880
Yeah, they've offered.

62
00:03:55,880 --> 00:04:01,680
You know, speaking of Collabra, we did get a little more insight into what they did to

63
00:04:01,680 --> 00:04:06,200
get the Deck where it is in collaboration with Valve in a blog post on their website,

64
00:04:06,200 --> 00:04:07,280
which we will have linked.

65
00:04:07,280 --> 00:04:12,500
They go into some detail about all of this, and they talk about specifically the AB update

66
00:04:12,500 --> 00:04:18,140
system they had to create for SteamOS 3, which is now Arch-based.

67
00:04:18,140 --> 00:04:25,240
They also note in that post that the active operating system, it's a read-only partition.

68
00:04:25,240 --> 00:04:30,400
They also go into some juicy details about just exactly how those updates work.

69
00:04:30,400 --> 00:04:35,560
Quote, when upgrading, a new operating system image is written to whichever partition is

70
00:04:35,560 --> 00:04:41,240
not currently in use before rebooting the system.

71
00:04:41,240 --> 00:04:47,220
Then a specialized bootloader module automatically selects the newest operating system and boots

72
00:04:47,220 --> 00:04:48,880
into it.

73
00:04:48,880 --> 00:04:53,840
If that upgrade went successfully, you can continue to just use that new OS, and the

74
00:04:53,840 --> 00:04:57,520
old system partition is going to be used for the next upgrade.

75
00:04:57,520 --> 00:05:03,280
But if the upgraded version does not successfully boot, the bootloader automatically falls back

76
00:05:03,280 --> 00:05:08,760
to the previous system partition, and you can try that update again later.

77
00:05:08,760 --> 00:05:14,480
And maybe most interesting of all, they write, of course, new operating system images are

78
00:05:14,480 --> 00:05:22,120
downloaded with block-based deltas, so only the changed parts need to be redownloaded.

79
00:05:22,120 --> 00:05:23,760
That's super cool.

80
00:05:23,760 --> 00:05:27,160
I love that kind of stuff that's going to save you download time, especially when you're

81
00:05:27,160 --> 00:05:29,880
just trying to get this thing going and you want to play a game.

82
00:05:29,880 --> 00:05:32,360
You don't want to wait for all the updates to download, but you also don't want to get

83
00:05:32,360 --> 00:05:33,360
far behind.

84
00:05:33,360 --> 00:05:35,740
You know, really, we're just following the highlights here.

85
00:05:35,740 --> 00:05:39,840
But Liam over at Gaming on Linux has been really keeping his ear to the ground, doing

86
00:05:39,840 --> 00:05:44,640
great work capturing the day-to-day developments, as well as Michael Larable over at Ferronik.

87
00:05:44,640 --> 00:05:49,480
So those are two resources to check on the daily if you're interested in that level of

88
00:05:49,480 --> 00:05:51,680
developments around this device.

89
00:05:51,680 --> 00:05:54,840
But otherwise, we're going to keep an eye out for any major updates, any of the big

90
00:05:54,840 --> 00:06:00,240
picture macro stuff, but I suspect at this point, we're going to see incremental things,

91
00:06:00,240 --> 00:06:05,200
theme updates, compatibility improvements, that sort of stuff, and the next big news

92
00:06:05,200 --> 00:06:09,920
items will land when consumers actually start getting these things into their hands at some

93
00:06:09,920 --> 00:06:10,920
actual scale.

94
00:06:10,920 --> 00:06:15,040
But we'll keep an eye on it for you.

95
00:06:15,040 --> 00:06:20,120
Most of the time on this program, we're busy getting excited about some hot new file system

96
00:06:20,120 --> 00:06:22,800
that might be entering the kernel.

97
00:06:22,800 --> 00:06:25,480
Think BcashFS, perhaps?

98
00:06:25,480 --> 00:06:28,160
But this week, it's a little different.

99
00:06:28,160 --> 00:06:34,200
Consumers actually talk of removing a file system, a relatively rare event for the kernel.

100
00:06:34,200 --> 00:06:36,360
The file system in question?

101
00:06:36,360 --> 00:06:39,880
Our old friend, RiserFS.

102
00:06:39,880 --> 00:06:46,000
Now this isn't due to some bug that was recently caught in RiserFS, no, there haven't actually

103
00:06:46,000 --> 00:06:50,640
been any user-spotted bugs since at least 2019.

104
00:06:50,640 --> 00:06:54,040
The issue is one of maintenance.

105
00:06:54,040 --> 00:07:00,720
Code has costs, as has been observed by many kernel developers over the years, and RiserFS

106
00:07:00,720 --> 00:07:06,240
is preventing some maintenance and modification, using some ancient API calls that nothing

107
00:07:06,240 --> 00:07:07,560
else still is.

108
00:07:07,560 --> 00:07:09,840
Oh, they hate that, don't they?

109
00:07:09,840 --> 00:07:11,820
They don't like those old API calls.

110
00:07:11,820 --> 00:07:16,520
So I guess if RiserFS support matters, you better speak up now.

111
00:07:16,520 --> 00:07:20,560
But I'm wondering, and I'm hoping, I know this sounds weird, but I'm actually hoping

112
00:07:20,560 --> 00:07:27,040
they find a middle ground here and just maybe keep read-only mode for a while.

113
00:07:27,040 --> 00:07:30,400
I don't think I have any disk formatted in RiserFS.

114
00:07:30,400 --> 00:07:35,880
But there was a time, Wes, back in the day, where RiserFS was actually, it was a go-to

115
00:07:35,880 --> 00:07:37,080
file system for me.

116
00:07:37,080 --> 00:07:42,800
See, I had this situation where we had like two terabytes of disk to deal with, which

117
00:07:42,800 --> 00:07:47,680
was an astronomical amount of space in like 2002, 2003.

118
00:07:47,680 --> 00:07:49,520
It was a lot.

119
00:07:49,520 --> 00:07:53,260
And we had just transitioned to a check imaging system.

120
00:07:53,260 --> 00:07:58,280
So we were a bank, and we would process people's checks, and we would get an image of every

121
00:07:58,280 --> 00:07:59,280
check.

122
00:07:59,280 --> 00:08:02,200
And it's like a 100 kilobyte JPEG.

123
00:08:02,200 --> 00:08:06,040
And we had to store hundreds of thousands of these little files.

124
00:08:06,040 --> 00:08:12,280
And that was an area where RiserFS really excelled, was when you needed a lot of little

125
00:08:12,280 --> 00:08:13,280
files.

126
00:08:13,280 --> 00:08:14,440
And it had a few tricks for that.

127
00:08:14,440 --> 00:08:19,920
And on top of that, especially on SUSE back then, it was one of the few file systems that

128
00:08:19,920 --> 00:08:21,960
supported extended attributes.

129
00:08:21,960 --> 00:08:25,400
So you could support NTFS-style file permissions.

130
00:08:25,400 --> 00:08:30,760
And I could expose the checks to users as needed on Windows boxes with the correct permissions

131
00:08:30,760 --> 00:08:35,520
to make sure that only a very certain group could get access to these files.

132
00:08:35,520 --> 00:08:41,200
And RiserFS, back in the day, was really the only file system on Linux that offered this.

133
00:08:41,200 --> 00:08:45,600
XFS also had some of the extended attribute support, but not all of the small file tricks

134
00:08:45,600 --> 00:08:48,040
that RiserFS had.

135
00:08:48,040 --> 00:08:51,600
And otherwise, it was like extended to.

136
00:08:51,600 --> 00:08:56,380
So I could definitely see some old installations out there, so maybe some disks that are still

137
00:08:56,380 --> 00:09:01,560
archived in corporate America or in old banks that are formatted in RiserFS that they may

138
00:09:01,560 --> 00:09:05,240
one day like to fire up and retrieve the data from.

139
00:09:05,240 --> 00:09:09,440
So get in like a read-only kind of support, because I think the big bug and the issue

140
00:09:09,440 --> 00:09:13,320
they're running into with the old APIs, it really comes down to just write support.

141
00:09:13,320 --> 00:09:16,040
It seems like that'd be a good compromise.

142
00:09:16,040 --> 00:09:17,040
Just read-only.

143
00:09:17,040 --> 00:09:22,080
Yeah, read-only support has been proposed on the mailing list.

144
00:09:22,080 --> 00:09:28,040
Actually a user of RiserFS showed up to say, hey, I'm still using the latest kernels and

145
00:09:28,040 --> 00:09:30,080
still using this old file system.

146
00:09:30,080 --> 00:09:34,760
I figured I'd still have time since it's not quite the year 2038 yet.

147
00:09:34,760 --> 00:09:38,520
That's another factor here is the kernel is actively considering some maintenance to try

148
00:09:38,520 --> 00:09:44,320
and drop some of these file systems that aren't year 2038 compliant, which some of the maintainers

149
00:09:44,320 --> 00:09:47,520
like Dave Chinner were quick to point out, look, we already did that for some of the

150
00:09:47,520 --> 00:09:48,520
XFS stuff.

151
00:09:48,520 --> 00:09:49,520
That's been removed.

152
00:09:49,520 --> 00:09:51,120
We do this all the time.

153
00:09:51,120 --> 00:09:56,200
But aside from the conversation around benefits to maintainers versus benefits to users, we

154
00:09:56,200 --> 00:09:59,520
should just note that don't worry, it's not going away right now.

155
00:09:59,520 --> 00:10:03,960
Turns out there are still some RiserFS developers out there because one of them contributed

156
00:10:03,960 --> 00:10:10,520
a patch for the immediate annoyance that surfaced this week.

157
00:10:10,520 --> 00:10:16,800
An area we should probably be talking about a little more is Linux in the automotive industry.

158
00:10:16,800 --> 00:10:21,120
And a little while ago, the CentOS folks set up the Automotive Special Interest Group.

159
00:10:21,120 --> 00:10:26,440
Well this week they announced the Automotive Stream AutoSD Linux distribution.

160
00:10:26,440 --> 00:10:31,760
Okay, so it's really pretty much CentOS, but the idea is the Automotive Stream distribution

161
00:10:31,760 --> 00:10:38,240
will be upstream to what eventually will be a official Red Hat automotive product.

162
00:10:38,240 --> 00:10:43,880
Yeah, rather than just stuffing plain old CentOS into cars or having to carry a bunch

163
00:10:43,880 --> 00:10:49,800
of patches themselves, well, this special interest group and now this distribution is

164
00:10:49,800 --> 00:10:51,880
kind of copying the stream model, right?

165
00:10:51,880 --> 00:10:55,480
There'll be this open collaborative space that anyone really interested in developing

166
00:10:55,480 --> 00:10:57,600
this can contribute to.

167
00:10:57,600 --> 00:11:01,560
And then at the same time, it gives a nice base that can be customized for this, well,

168
00:11:01,560 --> 00:11:05,720
special interest that RHEL can develop a stable product based on.

169
00:11:05,720 --> 00:11:10,080
An example of where things might diverge is, well, the Linux kernel.

170
00:11:10,080 --> 00:11:15,560
They've got a special kernel automotive package planned rather than relying on CentOS Stream's

171
00:11:15,560 --> 00:11:21,120
stock kernel, which, hey, in industrial use cases, might be a good idea.

172
00:11:21,120 --> 00:11:26,240
Beyond the nerdy specifics of exactly what technical changes one wants to make trying

173
00:11:26,240 --> 00:11:31,620
to adapt Linux to cars, I think this development is also worth following just as commentary

174
00:11:31,620 --> 00:11:36,480
on the larger change to CentOS Stream and the new models of developing RHEL and RHEL

175
00:11:36,480 --> 00:11:38,800
based products that we've seen.

176
00:11:38,800 --> 00:11:42,040
It's one thing to have a special interest group, several of those exist now.

177
00:11:42,040 --> 00:11:50,320
It's another to take a step towards advancing a product and having a custom distribution.

178
00:11:50,320 --> 00:11:51,880
Linode.com slash LAN.

179
00:11:51,880 --> 00:11:56,760
Go there to get $100 and 60-day credit on a new account so you can really try Linode

180
00:11:56,760 --> 00:11:58,760
and you can support the show.

181
00:11:58,760 --> 00:12:00,520
Linode is fast, reliable cloud hosting.

182
00:12:00,520 --> 00:12:02,280
You got to try it out for your next project.

183
00:12:02,280 --> 00:12:07,280
It's worth giving it a go because if you haven't tried Linode yet, you're missing something

184
00:12:07,280 --> 00:12:12,160
special and they're always rolling out improvements to their infrastructure, so Linode's constantly

185
00:12:12,160 --> 00:12:13,160
getting better.

186
00:12:13,160 --> 00:12:16,760
They have 11 data centers around the world, so you'll find something near you or your

187
00:12:16,760 --> 00:12:17,760
customers.

188
00:12:17,760 --> 00:12:22,640
It's been nearly 19 years, so they really know what they're doing.

189
00:12:22,640 --> 00:12:27,200
They have the absolute best customer service in the industry, comes up over and over again

190
00:12:27,200 --> 00:12:30,680
from Linux Action News listeners who have made the switch to Linode.

191
00:12:30,680 --> 00:12:34,680
They're always blown away because you build something, something goes sideways, you got

192
00:12:34,680 --> 00:12:35,880
some questions.

193
00:12:35,880 --> 00:12:39,320
It makes all the difference in the world to have an expert there who doesn't try to escalate

194
00:12:39,320 --> 00:12:41,000
you to some other tier.

195
00:12:41,000 --> 00:12:42,520
They just take care of it.

196
00:12:42,520 --> 00:12:46,720
They know customer support is critical, so they've invested in having the best in the

197
00:12:46,720 --> 00:12:50,600
business, and that even extends to documentation.

198
00:12:50,600 --> 00:12:56,800
Just a couple of days ago, they did a big update, a big update in documentation around

199
00:12:56,800 --> 00:13:01,600
deep learning frameworks, documentations for new Linux utility guides, just a whole bunch

200
00:13:01,600 --> 00:13:02,600
of stuff.

201
00:13:02,600 --> 00:13:07,240
They highlight that kind of stuff on their blog, it's just such a great resource too

202
00:13:07,240 --> 00:13:11,740
if you want to get into something like machine learning or you want to learn a particular

203
00:13:11,740 --> 00:13:17,480
thing like, you know, awk or sed or grep.

204
00:13:17,480 --> 00:13:21,200
I suppose you could go dig into some training guides somewhere, but Linode has some great

205
00:13:21,200 --> 00:13:25,520
documentation too, and it's just a great platform to use to learn as well.

206
00:13:25,520 --> 00:13:31,360
It's my R&D lab all the time, and then I flip it into production, and it's built for huge

207
00:13:31,360 --> 00:13:36,280
enterprise scale uses or individual uses, and their pricing is 30 to 50% less than the

208
00:13:36,280 --> 00:13:40,400
major hyperscalers out there that are just going to try to lock you into their platform.

209
00:13:40,400 --> 00:13:43,640
Linode's also a fantastic part of a multi-cloud strategy.

210
00:13:43,640 --> 00:13:51,920
Go check it out, get $100 in credit and really kick the tires, linode.com slash lan.

211
00:13:51,920 --> 00:13:54,980
And a big thank you to Ting, linux.ting.com.

212
00:13:54,980 --> 00:13:59,400
If you're sick of overpaying for self-service, go see how much you could save and then get

213
00:13:59,400 --> 00:14:03,400
25 bucks off that by going to linux.ting.com.

214
00:14:03,400 --> 00:14:07,600
Ting is what mobile should be, it's a smarter, simpler way to do mobile.

215
00:14:07,600 --> 00:14:12,160
They ride on top of the large carrier networks, but instead of having to interface with those

216
00:14:12,160 --> 00:14:17,520
monopolies, you get to interface with Ting who focuses on value.

217
00:14:17,520 --> 00:14:22,600
They focus on customer service, and they focus on multi-network compatibility.

218
00:14:22,600 --> 00:14:26,880
They really have rates that nobody can touch because Ting doesn't have to dig holes in

219
00:14:26,880 --> 00:14:28,160
the ground, right?

220
00:14:28,160 --> 00:14:32,000
That's not their aspect, they focus on you, and that's why they were named the number

221
00:14:32,000 --> 00:14:35,380
one carrier by Consumer Reports in 2021.

222
00:14:35,380 --> 00:14:40,720
It also means they have multiple nationwide networks for you to choose, great plans, great

223
00:14:40,720 --> 00:14:44,380
mix of 5G or LTE, it's just a lot of perks.

224
00:14:44,380 --> 00:14:47,600
That's why I've been a customer since 2013.

225
00:14:47,600 --> 00:14:51,720
They got plans to start around $10 a month, plans with unlimited messaging, unlimited

226
00:14:51,720 --> 00:14:56,660
text, all kinds of data options, and every single plan gets access to Ting's award-winning

227
00:14:56,660 --> 00:14:58,240
customer service.

228
00:14:58,240 --> 00:15:01,480
And of course, no contract ever.

229
00:15:01,480 --> 00:15:05,300
It's simple to switch to Ting, and pretty much any phone's gonna work with Ting because

230
00:15:05,300 --> 00:15:07,560
they do support so many networks.

231
00:15:07,560 --> 00:15:12,520
So just head to linux.ting.com, go check your current phone out, create an account, and

232
00:15:12,520 --> 00:15:14,320
pick a plan that's right for you.

233
00:15:14,320 --> 00:15:18,040
What'll happen is, once you get all your information, you figure out what your phone's compatible

234
00:15:18,040 --> 00:15:21,720
with, Ting's gonna send you a SIM card that works great in your area.

235
00:15:21,720 --> 00:15:24,700
You pop that in your phone, and you get activated in minutes.

236
00:15:24,700 --> 00:15:27,780
It's impressive how much you can just do from their beautiful dashboard.

237
00:15:27,780 --> 00:15:31,600
The first time I signed up for Ting, it was like, I don't know, 10, 11 o'clock at night,

238
00:15:31,600 --> 00:15:35,960
something like that, everybody had gone to bed, and I just decided I was sick of overpaying

239
00:15:35,960 --> 00:15:41,120
for cell service, and I did it all online in one night.

240
00:15:41,120 --> 00:15:43,780
So just get started, and cut your phone bill in half.

241
00:15:43,780 --> 00:15:45,360
It's never been easier.

242
00:15:45,360 --> 00:15:46,360
Go to linux.ting.com.

243
00:15:46,360 --> 00:15:56,640
Recently, the Core Boot Camp has raised some awareness about an issue facing the future

244
00:15:56,640 --> 00:16:03,720
of Intel-based systems that might make them less friendly to open-source firmware.

245
00:16:03,720 --> 00:16:09,780
Core Boot developer Philipp Deppenweis, CEO of German-based security firm Immune and founder

246
00:16:09,780 --> 00:16:15,120
of Nine Elements Security, through which he's heavily involved in the open-source firmware

247
00:16:15,120 --> 00:16:19,080
space, shared some concerns on Twitter this week.

248
00:16:19,080 --> 00:16:26,160
Yeah, he drew attention to the new Intel FSP 3.0 next-gen firmware support package,

249
00:16:26,160 --> 00:16:29,960
along with what they call their universal scalable firmware.

250
00:16:29,960 --> 00:16:36,040
And he says, basically, this is just going fully closed-source on the firmware side forever.

251
00:16:36,040 --> 00:16:41,320
And when you combine these types of firmware changes that Intel is working with, along

252
00:16:41,320 --> 00:16:46,840
with ideas like software-defined silicon, which it seems the kernel team is already

253
00:16:46,840 --> 00:16:53,080
on board with, it just really reminds me how freaking badly we need an open-source processor.

254
00:16:53,080 --> 00:16:59,720
But I have to say, I look over at RISC-V, and now that we're in Q1 of 2022, and there's

255
00:16:59,720 --> 00:17:07,440
still no RISC-V Pi-like board that you could buy and try, I'm honestly losing hope that

256
00:17:07,440 --> 00:17:10,900
RISC-V is ever going to be a consumer solution.

257
00:17:10,900 --> 00:17:16,000
I think if we don't have Raspberry Pi-type systems by now, it's probably never going

258
00:17:16,000 --> 00:17:18,520
to happen for us consumers.

259
00:17:18,520 --> 00:17:19,520
There's a few.

260
00:17:19,520 --> 00:17:20,520
I should make it clear.

261
00:17:20,520 --> 00:17:22,680
There are some, right?

262
00:17:22,680 --> 00:17:24,680
You can find some.

263
00:17:24,680 --> 00:17:27,200
I'm talking like an ecosystem, right?

264
00:17:27,200 --> 00:17:31,680
I'm talking about something more than just for software developers that are maybe building

265
00:17:31,680 --> 00:17:33,960
a RISC system in the future.

266
00:17:33,960 --> 00:17:38,280
We've definitely been fairly excited about RISC-V for a while now, at least looking at

267
00:17:38,280 --> 00:17:39,840
the Linux action news.

268
00:17:39,840 --> 00:17:41,840
Tags for episodes that include RISC-V?

269
00:17:41,840 --> 00:17:43,320
Yeah, it comes up a lot.

270
00:17:43,320 --> 00:17:47,960
And there's a lot to like about it, an open architecture, some open-source implementations

271
00:17:47,960 --> 00:17:48,960
out there.

272
00:17:48,960 --> 00:17:51,240
But you're right.

273
00:17:51,240 --> 00:17:55,640
We talk about it a lot, but we haven't really got to play with it yet.

274
00:17:55,640 --> 00:17:59,080
And it's kind of frustrating, it's kind of disappointing.

275
00:17:59,080 --> 00:18:05,600
And as we see continued wide-scale adoption of ARM, I can see why you're worried.

276
00:18:05,600 --> 00:18:12,600
Yeah, I think if I zoom out long, long term, it still feels like the slow adoption of RISC-V

277
00:18:12,600 --> 00:18:17,520
into other areas of computing is probably inevitable.

278
00:18:17,520 --> 00:18:24,040
But at least with a lot of consumer devices like laptops and desktops, and Chromebook

279
00:18:24,040 --> 00:18:29,000
type systems, I think ARM is really the winner for a while.

280
00:18:29,000 --> 00:18:32,360
And obviously, the momentum that x86 will continue.

281
00:18:32,360 --> 00:18:38,320
But I just have kind of, about two years ago, I was still holding out hope pretty strongly

282
00:18:38,320 --> 00:18:42,200
that in a few years, I'd have a RISC-V laptop.

283
00:18:42,200 --> 00:18:44,320
Now pretty much all that hope has collapsed.

284
00:18:44,320 --> 00:18:50,000
And I think where I kind of went wrong is it's a very frequent and common occurrence

285
00:18:50,000 --> 00:18:56,440
in free software news and coverage to kind of go all the way to the natural, logical

286
00:18:56,440 --> 00:19:02,160
conclusion of how far this technology could possibly go and write about it from that perspective.

287
00:19:02,160 --> 00:19:07,360
And maybe not pay as much attention to the actual market demands for such a product,

288
00:19:07,360 --> 00:19:11,720
how the actual market's going to use that thing, that piece of software, that hardware

289
00:19:11,720 --> 00:19:12,720
device.

290
00:19:12,720 --> 00:19:16,480
But when you look at the actual market reality behind RISC-V, it's pretty understandable

291
00:19:16,480 --> 00:19:20,320
that it's people that are building specialist systems, people that need the integration

292
00:19:20,320 --> 00:19:26,120
of the software and the CPU for a particular kind of workload that they're doing.

293
00:19:26,120 --> 00:19:29,380
There isn't a big consumer application for it.

294
00:19:29,380 --> 00:19:31,840
Maybe it just wasn't super obvious initially.

295
00:19:31,840 --> 00:19:35,800
And maybe it just took a couple of years to realize that's where this is going.

296
00:19:35,800 --> 00:19:38,160
Or maybe it was there all along.

297
00:19:38,160 --> 00:19:39,600
Maybe it was always obvious, Wes.

298
00:19:39,600 --> 00:19:40,600
What do you think?

299
00:19:40,600 --> 00:19:45,440
Well, on one hand, I'm not sure it was obvious that RISC-V would have gotten as far as it

300
00:19:45,440 --> 00:19:46,440
has today.

301
00:19:46,440 --> 00:19:50,680
I mean, we are talking about it, we've seen, you know, Intel and many other folks show

302
00:19:50,680 --> 00:19:55,960
interest in it, especially compared to stuff like OpenPower, OpenSpark, OpenRisk, you know,

303
00:19:55,960 --> 00:20:00,120
there's a long history of various public domain or open architectures.

304
00:20:00,120 --> 00:20:03,560
But you're right, there's not been a lot of exposure to it.

305
00:20:03,560 --> 00:20:08,200
And so far, the things we have heard, well, they're Western Digital using them in their

306
00:20:08,200 --> 00:20:09,200
hard drives.

307
00:20:09,200 --> 00:20:13,500
They're just customized AI chips that are probably running proprietary models.

308
00:20:13,500 --> 00:20:17,400
And I think we tend to see something like, you know, free or open source.

309
00:20:17,400 --> 00:20:22,240
And in the Linux ecosystem, our minds jump immediately to how this can enable the freedom

310
00:20:22,240 --> 00:20:26,840
and self control of someone using a Linux desktop, say.

311
00:20:26,840 --> 00:20:31,680
But at least right now, the real selling point for RISC-V, like the reason you might use

312
00:20:31,680 --> 00:20:36,480
it over something like an ARM chip that's, you know, probably better optimized, it's

313
00:20:36,480 --> 00:20:41,040
been around longer that might have more vendors already, is because of that flexibility, because

314
00:20:41,040 --> 00:20:43,680
you need to do something custom.

315
00:20:43,680 --> 00:20:48,320
In some ways, there are parallels with, you know, some of the tooling on Linux.

316
00:20:48,320 --> 00:20:53,360
If you want to go put yourself in customized arch based system, you can get something really

317
00:20:53,360 --> 00:20:54,360
great.

318
00:20:54,360 --> 00:20:57,600
But it's not necessarily going to be super useful for someone else who has different

319
00:20:57,600 --> 00:20:58,840
use cases.

320
00:20:58,840 --> 00:21:03,480
And that's the stage of adoption and use and interest in RISC-V right now.

321
00:21:03,480 --> 00:21:08,120
The tooling that's being developed around this open instruction set, around reinvigorating

322
00:21:08,120 --> 00:21:12,440
sort of these open designs, and for folks that are trying to design this, or developers

323
00:21:12,440 --> 00:21:15,320
in that space, really exciting.

324
00:21:15,320 --> 00:21:20,640
But for those of us who just want a new desktop that isn't powered by proprietary architecture,

325
00:21:20,640 --> 00:21:23,160
yeah, I don't know.

326
00:21:23,160 --> 00:21:25,520
I know, I know.

327
00:21:25,520 --> 00:21:26,680
You're totally right.

328
00:21:26,680 --> 00:21:31,200
And it's also like Linus Torvalds said, like even back in 2016, Linus said that it's not

329
00:21:31,200 --> 00:21:36,520
so much the instruction set, it's everything else around the CPU that really matters.

330
00:21:36,520 --> 00:21:42,160
And you got to have the entire ecosystem around the CPU, the entire platform matters before

331
00:21:42,160 --> 00:21:45,200
you're going to see mass adoption in something like a PC.

332
00:21:45,200 --> 00:21:46,200
And he's right.

333
00:21:46,200 --> 00:21:52,080
And you know, with these types of open source things, it is a very slow burn, as the industry

334
00:21:52,080 --> 00:21:56,160
is often five, 10, 15 years out on some of their design plans, right?

335
00:21:56,160 --> 00:22:01,160
It's entire life cycles that they have to go through before they start looking at retooling.

336
00:22:01,160 --> 00:22:04,120
But we do have some great resources in the show notes, if you're curious about where

337
00:22:04,120 --> 00:22:08,360
Intel is going with their software to find silicon, or their new firmware stuff, or even

338
00:22:08,360 --> 00:22:12,000
a recent update on RISC-V, we have links to all of that in the show notes.

339
00:22:12,000 --> 00:22:14,880
And of course, Linux Action News is back every single week.

340
00:22:14,880 --> 00:22:20,120
So be sure you go to linuxactionnews.com slash subscribe for all the ways to get new episodes.

341
00:22:20,120 --> 00:22:24,680
And linuxactionnews.com slash contact for ways to get in touch.

342
00:22:24,680 --> 00:22:28,080
Hey, we have an East Coast Meetup coming on April 9.

343
00:22:28,080 --> 00:22:32,520
That's a Saturday, details at meetup.com slash Jupiter Broadcasting, we would love to see

344
00:22:32,520 --> 00:22:33,520
you there.

345
00:22:33,520 --> 00:22:38,680
But don't worry if you can't make it, we'll be here for you every single week with our

346
00:22:38,680 --> 00:22:42,400
take on the latest Linux and open source news.

347
00:22:42,400 --> 00:22:43,400
Thanks for joining us.

348
00:22:43,400 --> 00:22:59,000
And that's all the news for this week.

