Hello, and welcome to Linux Action News, our weekly take on Linux and the open source world.
This is episode 73, recorded on September 30th, 2018.
I'm Chris.
And I'm Joe.
And welcome back, Chris.
Hello, Joe.
It's good to be connected with you.
It's great to be co-hosting with you again.
And I'm not the only one celebrating this week.
Google turns 20, and Android turns 10 years old.
Yeah, and there's an article on TechCrunch that brought this to my attention that's got
a kind of rundown of the history of Android phones.
It's not complete history, but it shows some significant milestones.
And we really have come a long way, haven't we, since the beginning.
I was going over a couple of the major ones that I remember, and I realized I was really
into Android in the early days.
I pretty much went through all of this.
I remember when the Nexus One came out with its cool new OLED screen and nice design.
And then when I got the Evo 4G with WiMAX, that really took things to the next level.
I started really playing with ROMs, swapping out SIM cards, going with extended, crazy
super batteries.
And then I started to remember things transitioning into a competitive era with Apple, where they
were really trying to match feature for feature.
There was that weird release of Android that was really only meant for tablets.
Do you remember all this stuff?
Yeah, well, that was on the Motorola Zoom, Honeycomb, the version was.
And I actually had a Motorola Zoom, and it was pretty cool to be on the bleeding edge
for once.
And it wasn't actually too bad.
It was properly designed for a tablet, but it just seems that it never quite competed
with the iPad, did it?
Yeah, tablets never really took off the way everyone thought they were going to in general
back then.
They were out there, but they didn't replace the PC like everyone was claiming was going
to happen, which I never really bought into.
I do remember those sort of peak hardware Android release for me.
And that was right around the time the Nexus 5X came out.
I bought other phones after that, but the 5X was sort of my favorite Android phone.
And it became really easy later on to swap in different ROMs and pretty well supported
in the community in general out there.
Well, for me, the Nexus 4 was that moment, really, because the price was so low compared
to the competition for the specs that you got.
And although they cut a few corners with the camera and stuff like that, it was still an
amazing phone for the price.
And that's why it ended up being the basis for so many projects like Ubuntu Touch and
Sailfish.
And there's so many ROMs still available for that phone.
That was just one of the great things about the Nexus line in general is that it was a
pretty good phone, well supported by Google, and then eventually the community for a price
that was really competitive, cheaper than, say, a Pixel or a high-end Samsung or iPhone
is today.
Yeah, but then the 5X was where the price started to creep up.
And then the 6 was ridiculously expensive.
And then the 6P, again, was just stupidly expensive.
And that's probably what led to the decline in popularity and ultimately them just getting
rid of the Nexus line and replacing it with Pixel, which are premium, high-end phones
for a high-end price.
And here we are 10 years on, and the Pixel 3 is about to come out, and it's their 10-year
flagship.
So it's kind of crunch time for them, really.
They have to deliver a good phone with this.
Right.
That is an interesting context in which we're going to see the Pixel 3 announced is 10 years
of learning how to do Android and learning what phone hardware works and doesn't work.
If it's not a great phone after 10 years, you do kind of have to wonder what's going
on.
I'm curious.
I haven't made the jump since the 6P.
The Pixel 3 was always the one I said since the day they launched the Pixel program.
I'll wait for the third release because that's when they should have it nice and refined.
So I'm particularly interested.
But it's not all about Google's Android division.
No, the 20-year-old company also has deep down in its bowels a strike team, if you will.
It's called Project Zero.
We've covered them a ton on the TechSnap program because they're super active in the security
research area.
And this week, they're accusing some Linux distributions you may have heard of, of leaving
their users exposed to known kernel vulnerabilities for weeks.
Which is funny that we've just talked about Android and then another division of Google
criticizing distros for being tardy with patches.
I mean, come on.
Android is the worst example of that.
Hey now, Joe.
It's fair.
If you have a Pixel phone, you get monthly security updates, which he actually criticizes
in his blog post as well.
He is Jan Horn, I believe is how you say his name.
And he's a member of Google's Project Zero team.
He's a researcher who discovered the meltdown and Spectre CPU flaws.
And he's had a few harsh words for the maintainers of Ubuntu and Debian specifically.
He says they need to raise their game on merging upstream kernel security fixes faster and
shipping it to users faster.
So do you think this is fair criticism?
No, I think this is not fair criticism.
So here's the timeline, essentially.
It's a matter of weeks.
This was discovered at CVE 2018-17-182.
It was reported to the Linux kernel maintainers on September 12.
And Linus, who was very productive back then, got it merged impressively fast in a single
day after Horn reported the issue.
And within days, it was also fixed in the upstream stable kernel releases 4.18, 9, and
the other stables that came out that day.
But Horn points out that some distributions, even though the upstream patch was available
in a matter of days, have taken weeks to get them in their kernel.
In fact, Debian even, he says, shipped a kernel based on 4.9, but didn't include the security
fix.
And Ubuntu shipped a kernel on August 27 without the fix.
And he makes the point that when we have a security critical fix that's available in
an upstream stable kernel, it can take weeks before the fix is actually available to end
users, especially if the security impact is not announced publicly.
But he says it's worse when it is announced publicly, because then people start working
on exploits immediately.
So that's why users are extra vulnerable, he makes the case.
But he doesn't seem to understand about the QA process then, and the fact that you can't
just push this stuff out and hope for the best.
To that point, there's testing, but on top of that, there's a process here.
And Canonical, for example, did respond to his blog post and said the fixes are scheduled
to be released around Monday, October 1st.
I have a link in the show notes, but they just had to go through a process, like you
point out.
And now it's tagged for release in the next batch of updates that go out.
So it's really a matter of perspective.
If you're the CTO at a company that has systems that are several years out of date, then weeks
to get a fix out to end users is more than enough.
But from Horn's perspective, down in the bowels of the Googleplex and Project Zero, where
they're sitting on the strike team taking care of security issues like maniacs, hours
are days.
He's living an internet time.
He wants it to go, go, go.
We got the fix in, Linus got it merged, it's in the stable branch, everybody go.
And I think some of his experience with Meltdown and Spectre is also coloring his view here.
You have to take that into context as well.
Red Hat was a distribution that was able to respond extremely quickly to the Meltdown
vulnerability because they got a heads up directly from Intel.
Other distributions, famously, some large distributions, did not get that direct heads
up and had to hustle through the holidays in the middle of other things to get patches
out to end users.
And now they're being criticized by some of the same people involved for not responding
fast enough.
So in my opinion, I think Horn comes across a little skewed here.
He's working on internet time.
But I think his past experience with getting the Meltdown and Spectre fixes out have colored
his perspective on this issue here.
Well, exactly.
And I would rather wait two or three weeks and have my server still work than have the
fix straight away and have it potentially not.
Yeah.
And in the case of Debian, I think there's sort of an unspoken social contract there
between the distro and the end user.
And that is that Debian is going to take an even steady hand with this stuff.
They'll get the software out in due time, but Debian's not rushing anything to end users.
They try to make an exception for security, but that's your expectation as an end user.
And in Ubuntu's case, they're going to have that thing shipped on October 1st or around
there.
But I think Horn should give them a little credit for having a live patch service that
is available, I believe, up to three systems for free where you can just have immediate
software updates that are a critical nature to the kernel delivered and live patch into
your system without having to reboot.
That kind of feature helps close that gaps I was talking about with enterprises where
they go years without patching because they don't want to take down production.
And making that system easily available, Red Hat has something similar, so does SUSE, they
should get credit for that because that really makes a difference in the actual real world.
Whereas I don't use that.
I just reboot and cross my fingers.
You know, I've been trying it out on a couple of systems this year since I set up the Ubuntu
1804 workstations in the studio, and I completely forget about it until I realize I have it
on.
So, so far, it seems to be fine.
There's my in-depth review.
Nice.
Yeah, I'll try it one of these days, but in the meantime, yeah, just cross my fingers.
All right.
Well, speaking of the kernel, last episode, Wes and I talked about Linus taking a break
in the new code of conduct.
And there's no doubt that that code of conduct has been a little bit divisive, shall we say.
And there are those people who are very much against the adoption of it.
And one of those people sent an email to the kernel mailing list about a week and a half
ago that was, quite frankly, full of nonsense.
But it seems to have been picked up on by quite a few people and for some reason has
caused a bit of controversy.
I think that's just because of how that email was written.
It was strongly worded.
It suggested that, quote, contract that had been established between the contributor and
the kernel team had changed, that their original contributions took place during a meritocracy.
And that has now changed.
And therefore, they have the right to revoke their work based on copyright ownership.
And it was all described in a very thick legalese that made it sound possible because it's perhaps
even written by a lawyer.
And I think that almost gave it some legitimacy in its own, even though the idea was bonkers.
It took off like wildfire to a degree simply because of how it was written and the argument
that was being made.
But it is bonkers and nonsense.
That's not how the GPL works, is it?
If you release code under the GPL, then that is GPL code and people can do what they want
with it as long as they obey the terms of the license, as long as, well, you know, they
obey the GPL v2.
So you can stop contributing and you can make further code that you write licensed however
you want.
And you can even take code that you have submitted to the kernel and is being approved and license
it in a separate project because you're the copyright holder.
But once you have made it GPLed, then that's it.
There's no going back.
You can't just pull it out of the kernel.
You know, I'm not a lawyer and all of that, but I've read enough about this to know.
I mean, my instincts told me that this was nonsense.
And then having read about it, we shouldn't even really be talking about it, but it has
spread and I felt that we should kind of try and stamp this out.
Yeah.
It has spread all the way to the Software Freedom Conservancy who thought it was necessary
to reach out to their outside counsel.
And then together they updated the copy left and GNU public license, a comprehensive tutorial
and guide.
And you could think of this guide as setting up a structure of expectations around what
contributors and users can expect when using GPL software.
And if you ever to take something to court, the court would likely operate, again, I'm
not a lawyer, but would likely operate under the assumption that you agreed to that guideline
as well as the actual terms of the GPL version two.
So they updated their guideline in particular.
They say a contributor may only modify the software and distribute that contribution
if they have agreed to the full text of the GPL two and the contributor is of course free
to make no future grants, but they cannot withdraw past grants.
Yeah.
The whole point of the GPL essentially, or one of the main points of it.
So strange that this became such a story because it just is a non-story really.
Well, that's perfect because there's a non-distribution with some news this week.
KDE Neon has been re-based on Ubuntu 18.04 LTS, bionic beaver, and I'm elated.
I've updated all of my Neon systems.
Don't call it a distribution, but do upgrade if you're a Neon user because it's gone great
so far for me.
A few reports here and there, but the team really seems to have worked hard to make this
as smooth as possible for end users.
Yeah, and I tried it out on hardware today, installed absolutely fine, had a little play
with it.
Everything seemed to work perfectly.
It's not very different in the experience that you had on 16.04 because obviously you
got the latest KDE and you had that before, and so now it's just all of the innards have
been updated to Ubuntu 18.04, so you've got the newer kernel and newer packages.
So really, I suppose the highest praise that you can give it is that I don't notice any
difference and presumably you haven't noticed much difference.
I noticed a couple of small things because I've been following Nate Graham's weekly usability
updates about Plasma, which cover all the small things that they've been working on.
In fact, we had Nate Graham on Linux Unplugged last week, linuxunplugged.com.268.
He comes on and talks about some of the efforts he's been focused on to improve usability
for the Plasma desktop and make it more approachable.
He's a former Apple engineer and he's been bringing some of that experience to the Plasma
desktop, but he also gets into one of the number one questions I get whenever we talk
about Neon, and that is, what's the difference between Kubuntu and Neon?
And I'm just going to quickly go into this because at the core of it, I'm an advocate
for Linux, and I think one of the best ways to get Linux out there on more desktops, especially
workstation desktops, is a really great desktop experience.
And I think Plasma right now is delivering that, and so I'm really just super enthusiastic
about getting people to try it.
And so if you want a workstation grade operating system, something that'd be great for development
or in IT, or like I'm using Kubuntu here in production, you go with Kubuntu 18.04.
It's long-term support from the bottom all the way up.
The Ubuntu base, the Qt libraries that the Plasma desktop is based on, and then Plasma
itself is an LTS release of the Plasma desktop.
Kubuntu 18.04 is really rock solid.
Neon is a bit more focused at developers who are working with Qt, or perhaps enthusiasts,
or those that want the freshest desktop experience with a rock-solid reliable base.
So KDE Neon is now based on Ubuntu 18.04 long-term support base OS, but the Plasma desktop is
really fresh.
Essentially as soon as the developers stamp it as stable and ready to go, you get the
updates to your desktop.
They have three editions for different use cases.
The user edition is for those that want the latest released KDE software updated daily,
but only released when it passes a QA test.
So that's the version I have.
And then they have two developer editions built from unstable and even Git branches.
No QA checks, but it's for those that want to test or develop maybe a forthcoming software
that you're going to release in a few months or a year on the Linux desktop, and so you
want to be working with the latest stuff.
And the other thing that's really cool about Neon is not only do they have a whole deb
package archive that you could just work with, but they have ISOs and Docker images.
And you can just play around with this stuff in a Docker image on your existing system.
They also have snap packages they're working on where you're going to be able to snap install
some of this stuff.
They're going to be focusing more on that now that they're finished with the 18.04 rebase.
So it's really fascinating.
They don't like to call it a distro.
It's more like a meta environment on top of Ubuntu 18.04 is how they like you to think
about it.
But for me, it makes for a killer desktop because I get fresh Plasma, stable Ubuntu,
and recent user land applications.
All right, I'm off my soapbox, but I just encourage everybody to go check one of these
out.
Well, if I was going to move to Plasma, I think Neon is what I would use because of
that solid base, but the fresh desktop on top of it.
And I know people who use KDE Neon for their work and rely on it, and maybe it's not quite
as rock solid as Ubuntu, but it is pretty close.
Yeah, you know, my closing thoughts on this is it's really the realization that Plasma
now for many, many, many releases in a row has been getting better and better.
And if there are regressions, they very quickly fix them.
And so what we've got now is a desktop environment that's been in a refinement phase for maybe
two years now.
And that's why you're hearing more about it.
That's why people are talking more about Neon and Kubuntu and other Plasma desktop-based
distros, because the desktop environment itself is really matured.
It's multi-threaded.
It works well with your GPU.
They're really far on their Wayland support.
It's clean, and it's lower resources than you expect.
So it's getting just a bit more attention these days.
You really are in love with Plasma, aren't you?
You know, it's made me really excited about the desktop again.
I kind of just started back on, backing off, that's a tool.
It's fine.
It's okay.
You know, it's a compromise is what I was starting to think from time to time.
And now I'm just loving it.
I just love setting up Plasma.
I love getting it all tweaked the way I want.
Just great.
It's quite clear that you're in love with Plasma and Linux generally.
And it seems that SAR Microsoft, and for good reason, it seems that at least half of Azure
is running Linux.
Yeah.
They say it varies on the day because a lot of these workloads are, as they put it, elastic,
but sometimes slightly over a half of Azure.
So maybe like 60%, and usually about half in general of Azure VMs are running Linux.
It suddenly all makes sense, doesn't it?
Why Microsoft are so all in on Linux, trying to get Linux integrated into the Windows 10
desktop as much as possible because they want people to use Azure.
And if they're going to be running Linux on there, why not give them the tools to run
Linux on the Windows 10 desktop?
They say it's been a 10 year journey when they open sourced ASP.net and then just started
seeing some of the benefits.
And now they claim to have 20,000 Microsoft employees on GitHub and 200 open source projects
that are out there.
And all of this makes sense when you consider my saying that I have for Microsoft, all roads
lead to Azure.
That's the context in which you think of Microsoft.
If you're trying to figure out what they're doing, all roads lead to Azure.
And the embracing of Linux and open source that we've seen recently leads back to Azure.
To that end, our friends here at Linux Academy have several Azure positions open, I am told,
and they're full-time and remote.
So I'll put a link in the show notes, linuxactionnews.com slash...
73.
Yeah.
So we'll have a link in the show notes there if you are an Azure expert and are looking
for some work because it seems to be growing quite a bit.
I've seen some of the feedback that rolls in and people want to know more about it and
it's hard to really wrap your head around how fast these services like AWS and Azure
can grow.
Well, that's the enterprise side of things, but end users will appreciate what Mozilla's
been up to again this week with adding yet more features to Firefox.
This one's pretty great.
It's called Firefox Monitor.
And I knew this was coming down the pipe because we've been covering the Have I Been Pwned
service on TechSnap since it launched years ago.
And they have been growing and becoming more of like a database API interface that some
password managers like 1Password will interface with to see if you've been compromised.
I don't know if you recall this service, Joe, but one of the many ways that they work is
they collect leaked databases of usernames and passwords and they follow reports from
companies of what user accounts have been breached.
They mix it all together in their database.
They track all of that amongst many other ways they collect information, all pretty
sophisticated and interesting.
And then they let you query it by like plugging in your email address on their website.
And now they've been working on a way to let services like Firefox Monitor to check in
for you.
And they do it in a really clever way that doesn't reveal your credentials, doesn't leak
the information.
It's pretty sophisticated.
We covered it in depth on TechSnap.
And all you have to do is give your email address and it will check the Have I Been
Pwned database to show if you need to worry about some of your data being compromised
and where you might need to change your passwords.
And now you can give it those credentials and it'll tell you in the future if they've
been leaked somewhere.
Mozilla asked people a couple of years ago about some of the new features that they could
bring to Firefox and notifications about breaches in general was one of the most highly requested
item on people's lists.
And it's a nice system.
I know it seems a little odd giving your credentials to a service and all of that, but it's a really
well-built system that is very focused on your privacy.
Check out the backlog of TechSnap if you're curious.
But I find it kind of funny because in a way, this feels like Mozilla giving Chrome a bit
of a kick in because this last week or two, there's been a lot of hubbub about Chrome
auto logging you in and keeping Google cookies when you remove cookies.
And in that same news cycle, Mozilla comes out with this Firefox monitor announcement
where now they're going to proactively alert you about breaches and they do it in a really
clever way.
I got to tip my hat to Mozilla on this one.
Well done.
I got to tip my hat to them for telling me about something that I cannot believe this
right.
Did you know that on July 1st, 2008, MySpace leaked 360 million credentials, emails, passwords,
and usernames?
I'd forgotten about that one, but that's how popular MySpace was once upon a time.
Yeah, that reminds us that MySpace was in fact a thing for a while.
Not really relevant today because now those numbers just get thrown around like crazy,
but that does show you that they had a heyday and I bet my credentials were in there at
some point.
I know I had a MySpace account, but never with autoplaying music.
I'm afraid I was an offender there.
Oh, I'm not surprised by that at all.
All right, well, let's end with a quick community shout out.
Mintcast, which is the podcast by the Linux Mint community for all users of Linux, which
has been going for almost 10 years, needs new hosts.
Rob and Isaac have had enough and they don't want to do it anymore, but they don't want
to just stop because they were not the original hosts.
It's had many, many hosts, including me, funnily enough.
That was the first Linux podcast I ever appeared on.
So I kind of owe them a bit of a debt, really.
That's where I cut my teeth.
So if you're interested in getting into Linux podcasting, if you like Linux Mint and know
a little bit about it, they are going to help you take over, essentially.
They're not just going to abandon it.
On the latest episode, which we'll link to, they talk about how they want to kind of pass
the torch on to new hosts and show them how they've been doing it.
And I'm available to help a little bit if necessary as well with how to do the audio
and everything.
So if you've been thinking about starting a Linux podcast, contribute to an existing
project rather than starting a new one is my advice.
Get in touch with them.
Everything's over at mintcast.org.
That could be a great opportunity.
And I agree.
Let's keep the community strong.
Now, this show is strong and will be out every single week.
And you can grab new episodes at linuxactionnews.com slash subscribe for all the ways to get those.
And you can go to linuxactionnews.com slash contact for ways to get in touch.
And you can help amplify our community contributions by supporting us at Patreon.com slash JupiterSignal.
We'll be back next Monday with our weekly take on the latest Linux and open source news.
I'm at Chris LAS.
I'm at Joe Roisington.
Thank you for joining us and we'll see you next week.
Take care.
