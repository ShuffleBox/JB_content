1
00:00:00,000 --> 00:00:16,540
Hello, and welcome to Linux Action News, our weekly take on Linux and the open source world.

2
00:00:16,540 --> 00:00:21,860
This is episode 105, recorded on May 12, 2019. I'm Chris.

3
00:00:21,860 --> 00:00:22,860
And I'm Joe.

4
00:00:22,860 --> 00:00:27,220
Hello, Joe. I'm fresh back from Boston and Red Hat Summit, and I want to say Happy Mother's

5
00:00:27,220 --> 00:00:32,840
Day to you. I know it's an important day, and we have not one, not two, but a bunch

6
00:00:32,840 --> 00:00:35,080
of major stories to break down this week.

7
00:00:35,080 --> 00:00:39,360
Well, it might be Mother's Day for you, but it isn't for me, so I don't care. What I care

8
00:00:39,360 --> 00:00:43,400
much more about is Red Hat Enterprise Linux 8 having been released.

9
00:00:43,400 --> 00:00:48,200
Joe, every day for you is Mother's Day. And indeed, it was a big release. I was there

10
00:00:48,200 --> 00:00:52,480
at Red Hat Summit, so I got like all of the excitement in the room, because this isn't

11
00:00:52,480 --> 00:00:56,200
something that happens all the time. It's been a few, about five years since the last

12
00:00:56,200 --> 00:01:01,600
Enterprise version of Red Hat came out, and a lot has changed. The cloud has really become

13
00:01:01,600 --> 00:01:06,240
a thing, and Red Hat's trying to position this release as the operating system that's

14
00:01:06,240 --> 00:01:10,240
been redesigned for the, quote, hybrid cloud era.

15
00:01:10,240 --> 00:01:14,680
I must say, reading through this press release from them, it really is buzzword bingo. But

16
00:01:14,680 --> 00:01:19,680
you were there on the ground in Boston, cutting through some of those buzzwords. So what were

17
00:01:19,680 --> 00:01:22,000
the kind of standout features for you?

18
00:01:22,000 --> 00:01:26,060
You're right. There was a lot of buzz stuff to cut through, as always with these big enterprise

19
00:01:26,060 --> 00:01:29,960
releases. But there's a couple of key features. They've got AppStream now, which is something

20
00:01:29,960 --> 00:01:34,660
we've seen that showed up in Fedora in the most recent releases, where you can subscribe

21
00:01:34,660 --> 00:01:39,000
to different versions of the repositories for software. So you can have RHEL 8, but

22
00:01:39,000 --> 00:01:44,120
you could ship a very modern version of PHP even many years down the road. That's a major

23
00:01:44,120 --> 00:01:45,120
feature.

24
00:01:45,120 --> 00:01:49,640
But something else that Red Hat is launching is what they're calling UBI, the Universal

25
00:01:49,640 --> 00:01:55,520
Base Image, which is really, truly an Alpine competitor. Now, if you want to build a containerized

26
00:01:55,520 --> 00:02:01,520
environment, you can base it on this UBI, which is a real true RHEL environment. I got

27
00:02:01,520 --> 00:02:06,520
clarification specifically on this point. It's not repackaged CentOS or Fedora. It is

28
00:02:06,520 --> 00:02:12,480
true Red Hat enterprise in this base image. And if you run it on a RHEL stack, they'll

29
00:02:12,480 --> 00:02:16,520
completely support it. But you could run it on any container environment. Then you combine

30
00:02:16,520 --> 00:02:21,320
that with the new release of OpenShift 4, which is all about Kubernetes and building

31
00:02:21,320 --> 00:02:27,240
your own serverless environment. They're trying to answer the on-premises, the cloud environment,

32
00:02:27,240 --> 00:02:33,920
the Kubernetes workflow, and the container workflow, all in one release of RHEL.

33
00:02:33,920 --> 00:02:40,220
And legitimately, they got there. It wouldn't be that odd for an enterprise software company

34
00:02:40,220 --> 00:02:44,120
to try to convince everyone to just keep doing it the way they've always done things, to

35
00:02:44,120 --> 00:02:49,520
keep things the same, stable. Really, Joe, the main message they wanted us to take away

36
00:02:49,520 --> 00:02:54,640
is they've modernized RHEL to answer a lot of modern workflows for whatever particular

37
00:02:54,640 --> 00:02:59,400
workflow that might be. And it seems like from my estimation, they've pulled it off.

38
00:02:59,400 --> 00:03:02,800
And to what extent could you feel the hand of big blue in the room then?

39
00:03:02,800 --> 00:03:09,240
To a large degree, it was pretty much not present. However, you could feel it in the

40
00:03:09,240 --> 00:03:15,560
focusing of the message around hybrid cloud. Both Red Hat and IBM really want you to strongly

41
00:03:15,560 --> 00:03:23,380
buy into the idea that the next generation of cloud workloads is just on the horizon.

42
00:03:23,380 --> 00:03:30,600
The way that Ginny, the CEO of IBM, described it was, chapter two of cloud workloads is

43
00:03:30,600 --> 00:03:35,000
just about to begin. And these are the real hard jobs. This was during one of the keynotes

44
00:03:35,000 --> 00:03:39,440
up on stage. And she says, one of the real hard jobs that's about to come is the things

45
00:03:39,440 --> 00:03:43,000
that weren't easy to move to the cloud, where you'll need to have something that's a bit

46
00:03:43,000 --> 00:03:47,440
on premises and something that's across multiple different cloud providers. And that's the

47
00:03:47,440 --> 00:03:52,180
workload that they're going to try to address. And she thinks, and I would imagine IBM and

48
00:03:52,180 --> 00:03:57,260
Red Hat are all in agreement along these lines. They're all in alignment here. She thinks

49
00:03:57,260 --> 00:04:05,500
that this is probably 80% of the workload left to go. And in that messaging and in communicating

50
00:04:05,500 --> 00:04:09,680
that strategy, you could really kind of feel the hand of IBM. But outside of that, when

51
00:04:09,680 --> 00:04:14,720
it came to architecture decisions, technology decisions, the way they package all this up,

52
00:04:14,720 --> 00:04:17,400
that felt like classic, independent Red Hat.

53
00:04:17,400 --> 00:04:22,560
Are you trying to tell me then we're talking about Cloud 2.0 then? Is that the name that's

54
00:04:22,560 --> 00:04:25,720
going to be given to hybrid cloud?

55
00:04:25,720 --> 00:04:28,880
I wouldn't be surprised if they came up with something like that. If they call it that,

56
00:04:28,880 --> 00:04:33,720
I think you should get credit. But they really do want you to believe the story that the

57
00:04:33,720 --> 00:04:38,600
cloud is yet to even really kind of kick off yet. And that they're not late. They're getting

58
00:04:38,600 --> 00:04:43,200
in on the good part of it. That's the message that they really were trying to drive home.

59
00:04:43,200 --> 00:04:47,780
And that's sort of completely detached from these RHEL releases. But it was pretty great

60
00:04:47,780 --> 00:04:52,080
to be at a Red Hat summit when a RHEL is getting released. That doesn't happen every year.

61
00:04:52,080 --> 00:04:57,880
If that's really true, and there really is 80% left of the market for them to expand,

62
00:04:57,880 --> 00:05:03,480
and that with this hybrid cloud approach, they can get a big chunk of that, then suddenly

63
00:05:03,480 --> 00:05:08,400
all those billions that IBM paid for Red Hat looks like chump change, doesn't it?

64
00:05:08,400 --> 00:05:13,460
Oh, sure, yeah. They really tried to stress that point. They commissioned a study by IDC

65
00:05:13,460 --> 00:05:20,900
to really drive this home. And there was some unbelievable number. It was just remarkable

66
00:05:20,900 --> 00:05:28,280
that 5% of the worldwide economy flows through Red Hat enterprise systems. $10 trillion worth

67
00:05:28,280 --> 00:05:32,800
of global business revenues in 2019 will flow through a RHEL system.

68
00:05:32,800 --> 00:05:37,360
Well, we talk about IBM having bought Red Hat, but there are a lot of formalities to

69
00:05:37,360 --> 00:05:42,800
go through first. And this week, a major step was taken. It was approved by the Department

70
00:05:42,800 --> 00:05:47,960
of Justice. So it looks very much like that acquisition is going to complete in the second

71
00:05:47,960 --> 00:05:48,960
half of this year.

72
00:05:48,960 --> 00:05:55,260
Well, a busy week indeed. While I'm in Boston, Google IO and Microsoft Build were going on.

73
00:05:55,260 --> 00:05:59,560
And there were a few announcements that caught our attention from Microsoft this week.

74
00:05:59,560 --> 00:06:06,260
Yeah, one huge one was that they announced Windows subsystem for Linux 2, which unlike

75
00:06:06,260 --> 00:06:11,800
the first subsystem actually uses a Linux kernel. So Microsoft are going to ship a Linux

76
00:06:11,800 --> 00:06:13,320
kernel as part of Windows.

77
00:06:13,320 --> 00:06:19,640
Right, they're building an in-house kernel from the latest LTS branch from kernel.org.

78
00:06:19,640 --> 00:06:28,920
So the initial versions of WSL2 will ship with Linux kernel 4.19. Improvements or modifications

79
00:06:28,920 --> 00:06:34,300
or changes that they make to that kernel, they are committing right here in their blog

80
00:06:34,300 --> 00:06:38,980
post to upstream back up to the main kernel.org developers. And they will have their fully

81
00:06:38,980 --> 00:06:43,900
configured version of the kernel available up on GitHub for anybody to take a look at.

82
00:06:43,900 --> 00:06:52,820
It's really the addition of a new tiny lightweight VM that uses a plan nine based file server

83
00:06:52,820 --> 00:06:59,080
and the Linux kernel to create a total Linux environment on Windows where all system calls

84
00:06:59,080 --> 00:07:04,520
for the applications are supported, which was the major limitation of WSL before.

85
00:07:04,520 --> 00:07:08,780
And along with these changes in the way they're handling files now and the support for extended

86
00:07:08,780 --> 00:07:15,560
for means incredible file system performance improvements on Windows as well. Windows 10

87
00:07:15,560 --> 00:07:21,080
with a Linux kernel with extended for file system support from Explorer, all shipped

88
00:07:21,080 --> 00:07:24,520
and blessed by Microsoft. That's big news.

89
00:07:24,520 --> 00:07:30,080
It is big news. And those performance improvements are very important here because that was always

90
00:07:30,080 --> 00:07:35,440
the bottleneck. Anything that involved disk IO essentially was really slow on the first

91
00:07:35,440 --> 00:07:42,760
iteration of the subsystem. But now it's almost like native performance. There's almost no

92
00:07:42,760 --> 00:07:50,240
overhead there. And so this has become incredibly attractive to people who need to have Linux,

93
00:07:50,240 --> 00:07:53,140
but also need to run Windows for various reasons.

94
00:07:53,140 --> 00:07:56,760
A lot of things are staying the same too. I think that's a big goal of Microsoft's here

95
00:07:56,760 --> 00:08:01,920
is you can still run multiple different Windows with different Linux distros in them. The

96
00:08:01,920 --> 00:08:06,020
VM doesn't take a long time to start up. It's not like a traditional VM where it boots up

97
00:08:06,020 --> 00:08:10,340
and it loads a fake hardware environment and then it creates some sort of weird remote

98
00:08:10,340 --> 00:08:14,440
desktop connection. It's much quicker. It boots in about two seconds and it's designed

99
00:08:14,440 --> 00:08:19,780
more as like a hyper VM than a real full fledged VM. But what that gives you is the full Linux

100
00:08:19,780 --> 00:08:24,120
kernel, which means you can do things like run 32 bit applications, even on a 64 bit

101
00:08:24,120 --> 00:08:29,160
Windows environment. You can use a fuse file system. There's a lot of advantages to having

102
00:08:29,160 --> 00:08:34,320
full Linux kernel capabilities, obviously. And you can run multiple versions of them

103
00:08:34,320 --> 00:08:37,160
at once, just like you could with WSL one.

104
00:08:37,160 --> 00:08:41,760
There's a very interesting presentation from Build that was recorded and is up on YouTube

105
00:08:41,760 --> 00:08:45,460
that goes into a lot of the details about this. And one thing that jumped out at me

106
00:08:45,460 --> 00:08:51,240
was about that VM. Even if you're running multiple different distros, there's only one

107
00:08:51,240 --> 00:08:56,300
Linux kernel. They all just share the same kernel. And so it means the overall overhead

108
00:08:56,300 --> 00:08:59,080
is much lower than using traditional VMs.

109
00:08:59,080 --> 00:09:01,920
And because this isn't like some VM they've created from whole cloth, it's what they're

110
00:09:01,920 --> 00:09:07,840
using on Windows Server. It's what they're using on Azure. It means Canonical is capable

111
00:09:07,840 --> 00:09:13,920
of providing actual official support now for that version of Ubuntu on WSL two, because

112
00:09:13,920 --> 00:09:19,200
it's the same version that they provide support on Azure. Canonical has announced in collaboration

113
00:09:19,200 --> 00:09:24,800
with Microsoft, they are certifying Ubuntu on the Windows subsystem for Linux, including

114
00:09:24,800 --> 00:09:29,160
Docker containers, Kubernetes, and Snaps.

115
00:09:29,160 --> 00:09:33,680
You don't have the bell in this show, but it's almost worth ringing it for that. Snaps

116
00:09:33,680 --> 00:09:36,680
on Windows. It's a huge thing for Canonical.

117
00:09:36,680 --> 00:09:40,620
That does seem like a really big deal. It could be a really easy way to get Plex running

118
00:09:40,620 --> 00:09:44,560
for home users on Windows 10, but there's all kinds of possibilities for developers

119
00:09:44,560 --> 00:09:49,920
and system administrators if you can run some of those same Linux Snaps on the subsystem.

120
00:09:49,920 --> 00:09:54,840
And why couldn't you? It seems completely possible. It's interesting that Canonical

121
00:09:54,840 --> 00:09:58,440
is right here at the very beginning of this thing, and we're going to officially support

122
00:09:58,440 --> 00:09:59,440
that too.

123
00:09:59,440 --> 00:10:02,920
Well, they were there at the beginning of the first subsystem, weren't they? They were

124
00:10:02,920 --> 00:10:06,920
the first distro available. That's what it launched with. So it's not a huge surprise

125
00:10:06,920 --> 00:10:11,240
to see them continue in that collaboration. But there's one big question I have about

126
00:10:11,240 --> 00:10:16,120
this, right? Why didn't they just do this in the first place? Why did they spend all

127
00:10:16,120 --> 00:10:22,240
that money on working out ways to interface with the NT kernel and translate those system

128
00:10:22,240 --> 00:10:25,520
calls when they could have just done this in the first place?

129
00:10:25,520 --> 00:10:28,560
I just can't help but think they maybe had a meeting where they were trying to solve

130
00:10:28,560 --> 00:10:33,240
some of the problems that were caused by that. And someone just probably piped up with, you

131
00:10:33,240 --> 00:10:36,400
could just have a Linux kernel in a VM maybe.

132
00:10:36,400 --> 00:10:42,360
And that must be it. That's got to be it. In that video you cite earlier, they do up

133
00:10:42,360 --> 00:10:46,120
on the screen, they show like all of the issues people have submitted that frankly just come

134
00:10:46,120 --> 00:10:50,840
down to differences between the way NT does things and the way Linux does things. And

135
00:10:50,840 --> 00:10:55,280
none of them are necessarily better or worse. It's just differences and applications have

136
00:10:55,280 --> 00:11:01,300
expectations. And so I think really they did exactly what you suggest. They must have.

137
00:11:01,300 --> 00:11:03,920
They must have sat around and said, how are we going to solve all of these issues the

138
00:11:03,920 --> 00:11:07,980
developers are submitting? Because here's what's happening is we have actual application

139
00:11:07,980 --> 00:11:12,640
developers that are lifelong Windows users that now need to create a Linux application

140
00:11:12,640 --> 00:11:18,320
and they want to do some of that development better or for worse on the subsystem.

141
00:11:18,320 --> 00:11:22,640
How can we give them a complete tool to do that? Well, the real answer there is to give

142
00:11:22,640 --> 00:11:27,600
them the full kernel, right? Give them the full Monty. You got it. And so they must have

143
00:11:27,600 --> 00:11:32,880
just as a matter of process of elimination come down to this. But I think what's fascinating

144
00:11:32,880 --> 00:11:39,120
about it is this news in combination with their other big news out of build that affects

145
00:11:39,120 --> 00:11:41,160
a lot of us traditional Linux users.

146
00:11:41,160 --> 00:11:47,200
Yeah, you're talking about the Windows terminal, which is an actual proper terminal that behaves

147
00:11:47,200 --> 00:11:51,760
like it should with tabs and all of the other good stuff that we're used to on Linux. Now

148
00:11:51,760 --> 00:11:56,480
you're going to be able to have that on Windows and it's open source as well. But that is

149
00:11:56,480 --> 00:12:02,520
MIT licensed, as you'd expect, permissive license from Microsoft. And I think that may

150
00:12:02,520 --> 00:12:07,120
be the answer to the question of why they didn't do the kernel thing before was because

151
00:12:07,120 --> 00:12:13,760
any changes they make, they'll have to GPL. And as much as Microsoft has pivoted and yes,

152
00:12:13,760 --> 00:12:18,080
they do contribute to the kernel. They don't like having GPL stuff within Windows.

153
00:12:18,080 --> 00:12:21,520
Yeah, well, that's true. They don't. They seem to try to avoid that. But they're not

154
00:12:21,520 --> 00:12:25,920
just open sourcing the new Windows terminal, but also the Windows console, which hosts

155
00:12:25,920 --> 00:12:30,720
the command line infrastructure in Windows and provides the traditional like command

156
00:12:30,720 --> 00:12:35,120
prompt interface. That's not going away. That's going to run alongside the new fancy terminal

157
00:12:35,120 --> 00:12:39,880
that everybody's going to be talking about. The new the new hotness that is GPU accelerated

158
00:12:39,880 --> 00:12:45,180
because of course you need your terminal to be GPU accelerated. Of course it needs to

159
00:12:45,180 --> 00:12:51,200
use DirectX for text rendering. You got to have that so that way you get the best possible

160
00:12:51,200 --> 00:12:57,720
emojis. I kid, but they actually have something pretty good looking here. The text flies.

161
00:12:57,720 --> 00:13:02,960
It does seem to make a difference in the rendering, so you know, give them that. And the configuration

162
00:13:02,960 --> 00:13:07,600
mechanism is pretty neat. You're going to be able to create a multiple profiles for

163
00:13:07,600 --> 00:13:11,800
each shell or application or tool you want to use. You can just go right into it. So

164
00:13:11,800 --> 00:13:15,940
if you have maybe a traditional PowerShell prompt that you need to use for some applications

165
00:13:15,940 --> 00:13:20,360
and for some things you want to go right to Ubuntu, you can do that. Or maybe you want

166
00:13:20,360 --> 00:13:24,880
to just jump right to an SSH connection. You can have different profiles that just bring

167
00:13:24,880 --> 00:13:29,160
you right in there. That's a great idea, and there's a lot of other nice to have things

168
00:13:29,160 --> 00:13:34,160
in here for Windows users that. Honestly, in a big way, this kind of feels like Microsoft

169
00:13:34,160 --> 00:13:40,200
doing a big catch up because the command.exe prompt has been horrible for years. I spend

170
00:13:40,200 --> 00:13:43,840
a week on Windows 10 like two years ago or something like that, and one of the first

171
00:13:43,840 --> 00:13:47,520
things I had to do was replace the terminal. You just gotta get a new terminal and Microsoft

172
00:13:47,520 --> 00:13:53,260
says they explored extending and enhancing existing projects, but in the end decided

173
00:13:53,260 --> 00:13:57,460
they'd have to change them too much and it would be better to do their own open source

174
00:13:57,460 --> 00:14:03,420
project. Now in the summer of 2019, previews will be released on the Microsoft Store for

175
00:14:03,420 --> 00:14:09,260
early adopters, but it is all up on GitHub. You can actually go grab the source and build

176
00:14:09,260 --> 00:14:14,260
it today. People are doing that and submitting issues, and there's quite a bit of documentation

177
00:14:14,260 --> 00:14:19,360
to help you along. I'll say this, Joe, having watched the videos and read through the documentation

178
00:14:19,360 --> 00:14:24,520
as far as commercial platforms go, like your Mac OS and Windows platforms, I would bet

179
00:14:24,520 --> 00:14:28,360
you after they're done here, they probably have the nicest commercial platform terminal

180
00:14:28,360 --> 00:14:33,120
now built in by default. I don't think they're matching what's on most Linux distros and

181
00:14:33,120 --> 00:14:37,240
maybe I'll miss that GPU acceleration, but as far as the commercial platforms go, I think

182
00:14:37,240 --> 00:14:38,240
they've got it.

183
00:14:38,240 --> 00:14:41,760
I haven't really used the terminal much on other platforms, but I know the one on Windows

184
00:14:41,760 --> 00:14:47,520
is just terrible compared to Linux. The Mac one seems pretty limited as well, so I can

185
00:14:47,520 --> 00:14:52,400
see why they wanted to have a full featured one that actually matches some of the features

186
00:14:52,400 --> 00:14:57,320
of the ones that you can get on Linux. I've already seen people pretty excited about this,

187
00:14:57,320 --> 00:15:01,440
people who are forced to use Windows for their day job. They're really looking forward to

188
00:15:01,440 --> 00:15:03,080
having a proper terminal to use.

189
00:15:03,080 --> 00:15:06,660
I agree. I think about all the listeners. I look at the stats sometimes. We got a fair

190
00:15:06,660 --> 00:15:10,380
amount of Windows listeners. I think about them, I think this is going to make their

191
00:15:10,380 --> 00:15:14,800
day jobs or their lives a little bit easier. If they choose or have to run Windows, whatever

192
00:15:14,800 --> 00:15:19,200
it may be, this makes it better. It's bringing more Linux to more people.

193
00:15:19,200 --> 00:15:24,120
Well, it comes back to that same debate that surfaced when WSL was first announced. Is

194
00:15:24,120 --> 00:15:28,960
this really bringing more people to Linux or is it bringing people away from Linux to

195
00:15:28,960 --> 00:15:34,000
Windows and having people not need to dual boot, they can just have it all in Windows.

196
00:15:34,000 --> 00:15:35,360
That's what Microsoft wants.

197
00:15:35,360 --> 00:15:41,360
Oh yeah, I won't lie. It definitely touched on those buttons for a brief moment when I

198
00:15:41,360 --> 00:15:48,080
said, oh crap, crap, crap, crap, crap, crap. But you know, Joe, you just can't stop the

199
00:15:48,080 --> 00:15:54,400
slow but ever consuming progress of that Linux train. Even those simple machines that were

200
00:15:54,400 --> 00:16:00,120
just going to be a web browser on a laptop eventually sub come to that Linux monster.

201
00:16:00,120 --> 00:16:04,440
Yeah, you mentioned Google IO earlier and something that came out of it was just kind

202
00:16:04,440 --> 00:16:09,000
of a throwaway comment really that all new Chromebooks released this year are going to

203
00:16:09,000 --> 00:16:11,080
be able to run Linux applications.

204
00:16:11,080 --> 00:16:14,340
Not a huge surprise. I mean, that's sort of what you would expect as they introduce new

205
00:16:14,340 --> 00:16:20,200
features to the platform hardware that's released after those new features get support for it.

206
00:16:20,200 --> 00:16:23,840
It just seems like that would make sense. But it is nice to see that. And it's getting

207
00:16:23,840 --> 00:16:27,720
easier than ever. You can just launch now using the application search launcher thing.

208
00:16:27,720 --> 00:16:31,660
Just type in terminal and this will launch a terminal VM that starts up a Debian nine

209
00:16:31,660 --> 00:16:37,020
box in the background. But as we've covered in the past, it's now getting easier and easier

210
00:16:37,020 --> 00:16:43,140
to run full fledged applications. And Google is adding support to the file manager to get

211
00:16:43,140 --> 00:16:47,640
access to those Linux files from the file browser. So it's getting pretty integrated

212
00:16:47,640 --> 00:16:48,640
now.

213
00:16:48,640 --> 00:16:52,240
Oh, yeah. And the one slight surprise is that even the ARM Chromebooks are going to be supported

214
00:16:52,240 --> 00:16:57,000
here. And I suppose that's something we should have mentioned with the WSL too, that that

215
00:16:57,000 --> 00:17:03,400
is also going to be built for ARM 64. So ARM isn't being left behind with this.

216
00:17:03,400 --> 00:17:08,280
Well it strikes me as no coincidence that both Microsoft and Google are trying to make

217
00:17:08,280 --> 00:17:14,360
it very easy for you to get a full fledged Linux environment on your mobile system. It

218
00:17:14,360 --> 00:17:18,400
seems like they're clearly trying to go after what I call those Sputnik customers. Those

219
00:17:18,400 --> 00:17:24,320
customers that Dell recognized many years ago now when they launched the first Sputnik

220
00:17:24,320 --> 00:17:30,400
laptop aimed at quote unquote developers with Ubuntu pre-installed. They recognized that

221
00:17:30,400 --> 00:17:36,960
developers wanted to use an environment that they were deploying on in production for development.

222
00:17:36,960 --> 00:17:41,920
And now you see Microsoft and Google trying to backfill that need on their platforms that

223
00:17:41,920 --> 00:17:47,800
were never designed for this. And while it's great to have it, it sort of rings hollow

224
00:17:47,800 --> 00:17:53,200
to me. It's like trying to go back and fix something after the fact. Trying to fix the

225
00:17:53,200 --> 00:17:55,760
barn door after the cows have already left kind of a thing.

226
00:17:55,760 --> 00:18:01,040
I can see why you think that, but because they've got such a dominant market position,

227
00:18:01,040 --> 00:18:06,320
I don't think that that is necessarily the case. I think that it will actually service

228
00:18:06,320 --> 00:18:11,240
that niche and will keep people away from Linux, proper desktop Linux.

229
00:18:11,240 --> 00:18:16,780
I suppose that's definitely possible. It still seems in that scenario, worst case, people

230
00:18:16,780 --> 00:18:23,040
are still getting some rudimentary Linux knowledge and experience. And that knowledge and experience

231
00:18:23,040 --> 00:18:26,680
would be directly applicable if they were to move to a more full-featured real Linux

232
00:18:26,680 --> 00:18:31,880
system down the road for whatever reason. It could encourage them to go in that direction.

233
00:18:31,880 --> 00:18:38,120
Whereas in the past, market and general momentum might have been towards Windows or even macOS.

234
00:18:38,120 --> 00:18:42,880
Now with all these Linux environments, maybe that changes that momentum.

235
00:18:42,880 --> 00:18:47,760
Maybe. But you know, something I've been thinking about is Apple in all of this. Where is their

236
00:18:47,760 --> 00:18:52,880
developer story? Where's their Linux developer story? It seems to be non-existent to me.

237
00:18:52,880 --> 00:18:58,240
I mean, I don't pay close enough attention. Maybe there's some things they do, but you

238
00:18:58,240 --> 00:19:03,640
cannot for a second imagine that you'll be able to build and run Linux binaries on a

239
00:19:03,640 --> 00:19:08,680
Mac system. And they just seem to be being left behind here because I suppose they don't

240
00:19:08,680 --> 00:19:12,640
really care about that market. They care much more about iPhones and services.

241
00:19:12,640 --> 00:19:18,760
Yeah, they want to enable you to develop for their own ecosystem. That's what it is.

242
00:19:18,760 --> 00:19:20,240
But is that short-sighted of them?

243
00:19:20,240 --> 00:19:23,360
I don't know. I guess time will tell. Right now it doesn't seem to be.

244
00:19:23,360 --> 00:19:27,480
Yeah, but you've got to be thinking five years plus ahead, haven't you? And you know, that's

245
00:19:27,480 --> 00:19:31,760
what Microsoft and Google are doing here by realizing that Linux is the future.

246
00:19:31,760 --> 00:19:36,760
Yeah, and they did release Swift for Linux, which kind of seemed to be like an indication

247
00:19:36,760 --> 00:19:41,840
that they kind of got that. That all of these mobile apps have to connect back to server-side

248
00:19:41,840 --> 00:19:47,640
services and that's got to be running on somebody's platform. And perhaps they're just perfectly

249
00:19:47,640 --> 00:19:52,400
happy letting that be a Wild West. But it seems to me, you're right, they would want

250
00:19:52,400 --> 00:19:59,880
some kind of control knowing them. But so far, I got to say, I can't really fault them.

251
00:19:59,880 --> 00:20:01,440
They seem to be doing all right.

252
00:20:01,440 --> 00:20:05,480
Yeah, but while you're at the top is when you need to be thinking about when you might

253
00:20:05,480 --> 00:20:06,480
not be at the top.

254
00:20:06,480 --> 00:20:09,920
Yeah, I completely agree. That's good advice. You ought to write that up and send it over

255
00:20:09,920 --> 00:20:14,380
to Tim Cook. Maybe send him just this time code out there, audience. Tweet Tim Cook this

256
00:20:14,380 --> 00:20:19,680
time code. He needs to hear from Joe.

257
00:20:19,680 --> 00:20:23,280
Android's on top and they have a big problem with security updates. I mean, that's like

258
00:20:23,280 --> 00:20:28,760
the go-to horse that everybody loves to whip no matter how dead it is about nobody getting

259
00:20:28,760 --> 00:20:33,640
Android updates. Google's figured out a really, really clever solution. They're just going

260
00:20:33,640 --> 00:20:34,640
to sneak them on your phone.

261
00:20:34,640 --> 00:20:39,800
Yeah, they're calling it Project Mainline and this is part of Android Q. And their idea

262
00:20:39,800 --> 00:20:44,720
is pretty simple really. It's just expanding on Project Treble in terms of making it more

263
00:20:44,720 --> 00:20:51,400
modular and being able to update those modules via the Play Store and Play Services rather

264
00:20:51,400 --> 00:20:56,960
than relying on the OEMs to actually deliver the updates that Google puts out there.

265
00:20:56,960 --> 00:21:01,200
Well, this is exactly what I expected when Google announced the Google Play API however

266
00:21:01,200 --> 00:21:06,520
many years ago. It just seemed like a great backdoor way to push down features to phones

267
00:21:06,520 --> 00:21:10,480
that weren't getting updated by OEMs fast enough. Everybody knows the story. There's

268
00:21:10,480 --> 00:21:16,320
a huge long delay between when Google issues a security update and a phone manufacturer

269
00:21:16,320 --> 00:21:22,800
like Samsung or LG actually sends that update out to its end users. And it's becoming more

270
00:21:22,800 --> 00:21:27,800
and more of an issue as we discover more things faster and it's a bad look.

271
00:21:27,800 --> 00:21:33,120
So the new feature Project Mainline like Joe talked about is going to send some security

272
00:21:33,120 --> 00:21:38,040
updates directly to Android phones through the Play Store. Now there will be 12 different

273
00:21:38,040 --> 00:21:44,840
quote unquote modules Google is capable of updating. It's minor stuff. It's things like

274
00:21:44,840 --> 00:21:50,640
GPS stuff, media components, things that the Play API would have access to. But they are

275
00:21:50,640 --> 00:21:54,420
expanding upon that as they modularize the Android base.

276
00:21:54,420 --> 00:21:58,640
But this unfortunately is not going to solve all the problems because there are some updates

277
00:21:58,640 --> 00:22:05,200
that do need a full OS upgrade. And so we're back to that old problem. But it is going

278
00:22:05,200 --> 00:22:07,520
to help significantly by the sounds of things.

279
00:22:07,520 --> 00:22:11,920
Yeah, if they could just solve a few zero days here and there, even just a few a year,

280
00:22:11,920 --> 00:22:16,860
it seems like it's a worthwhile effort. And it does remind us that they have quite a bit

281
00:22:16,860 --> 00:22:22,200
of leverage over a phone that has those G apps and those Google Play APIs installed.

282
00:22:22,200 --> 00:22:26,400
Quite a bit of leverage, more like complete control.

283
00:22:26,400 --> 00:22:30,140
Just like attackers could have had, depending on your environment setup, if you are running

284
00:22:30,140 --> 00:22:35,400
Alpine Linux Docker images. Now don't worry, it's not as bad as it sounds, but it was possible.

285
00:22:35,400 --> 00:22:40,440
I almost didn't include this because to me, this is a bit of a non-story. But then I saw

286
00:22:40,440 --> 00:22:45,640
enough kind of debate about it and people disagreeing with my viewpoint that I thought

287
00:22:45,640 --> 00:22:50,840
we should talk about this. I think you take this a bit more seriously than I do.

288
00:22:50,840 --> 00:22:56,740
Yeah, generally. However, this one isn't making me call for red alert. So some Alpine Docker

289
00:22:56,740 --> 00:23:02,720
images shipped with root account and no password, depending on the configurations that the end

290
00:23:02,720 --> 00:23:07,920
users applied. This is all according to Cisco's Talos Research Division who discovered the

291
00:23:07,920 --> 00:23:11,440
bug and they tested each version of Alpine they could get their hands on.

292
00:23:11,440 --> 00:23:15,440
The vulnerable images of Alpine Linux Docker containers were available via the official

293
00:23:15,440 --> 00:23:22,000
Docker Hub since 2015, but it's been a while since any of those actual affected versions

294
00:23:22,000 --> 00:23:25,780
are in production. The vulnerability appears to be the result of a regression introduced

295
00:23:25,780 --> 00:23:30,880
in December of 2015 due to the nature of the issues systems deployed using the affected

296
00:23:30,880 --> 00:23:38,520
versions of Alpine Linux container that utilized PAM or another mechanism like that took advantage

297
00:23:38,520 --> 00:23:44,440
of the system shadow file that the user set up themselves after the fact were vulnerable

298
00:23:44,440 --> 00:23:52,280
to a null password for the root user. No password, zero password, have at it.

299
00:23:52,280 --> 00:23:58,920
Right, but that is less of a vulnerability and more of a, I don't know, a default setting

300
00:23:58,920 --> 00:24:04,600
that can be changed that isn't ideal out of the box. It's not like an actual vulnerability

301
00:24:04,600 --> 00:24:09,840
where the user can't just easily just do password and put a password there.

302
00:24:09,840 --> 00:24:16,280
Right, I mean it, again, it really isn't like a big deal and it was really environment specific.

303
00:24:16,280 --> 00:24:21,600
If you have the shadow package installed in your Docker container and you run a service

304
00:24:21,600 --> 00:24:27,960
as a non-root user, an attacker who then compromised your system via a completely unrelated

305
00:24:27,960 --> 00:24:32,440
security vulnerability, so they have to chain multiple vulnerabilities, or a user that had

306
00:24:32,440 --> 00:24:37,800
shell access, so you gave them legitimate shell access, could elevate their privileges

307
00:24:37,800 --> 00:24:45,560
to root within that container. That's the extent of the vulnerability and you had to

308
00:24:45,560 --> 00:24:50,200
install like the Linux PAM package or the shadow package yourself after the fact and

309
00:24:50,200 --> 00:24:56,280
it hasn't been an issue for at least a little bit now since we, as we record this.

310
00:24:56,280 --> 00:25:00,760
But doesn't this come down to the misuse of Alpine? Isn't Alpine designed to run micro

311
00:25:00,760 --> 00:25:06,440
services rather than a full stack and it's people who are running a full stack but not

312
00:25:06,440 --> 00:25:11,040
really knowing what they're doing enough to put a root password in there that is causing

313
00:25:11,040 --> 00:25:12,040
this problem?

314
00:25:12,040 --> 00:25:15,160
Fair enough. I think it's, to me too, the other thing that's interesting about it is

315
00:25:15,160 --> 00:25:20,480
that this came out the week that Red Hat announced the universal base image, which is straight

316
00:25:20,480 --> 00:25:26,840
up an Alpine competitor. It's a larger competitor in terms of file size, but it's very compelling

317
00:25:26,840 --> 00:25:34,880
because you could run a rel container that is supported by Red Hat if you run it on their

318
00:25:34,880 --> 00:25:39,400
stack or on any system you want, but you'd still get application compatibility with rel

319
00:25:39,400 --> 00:25:45,560
and it's pegged to rel8's packages. I mean, that's a pretty competitive base image to

320
00:25:45,560 --> 00:25:50,160
come up against Alpine when they have this news. Like the timing just kind of stinks

321
00:25:50,160 --> 00:25:51,160
a little bit.

322
00:25:51,160 --> 00:25:54,480
Yeah, but isn't Alpine servicing a different need here?

323
00:25:54,480 --> 00:25:58,960
I think so. I think especially when you're talking thousands or many, many thousands

324
00:25:58,960 --> 00:26:04,720
of containers, then some of these differences are pretty pronounced. But I just thought,

325
00:26:04,720 --> 00:26:09,440
I just thought the timing still was, I don't know, just very convenient for Red Hat.

326
00:26:09,440 --> 00:26:11,480
Is that some conspiracy bacon you're frying up there?

327
00:26:11,480 --> 00:26:15,040
No, I won't go that far. I won't go that far. It's just the way things work out. I don't

328
00:26:15,040 --> 00:26:17,880
think Red Hat would do that, but it is convenient.

329
00:26:17,880 --> 00:26:21,080
Well something that's definitely convenient is the blockchain. You've got to use it for

330
00:26:21,080 --> 00:26:23,400
everything, right? And it's going to be a huge success.

331
00:26:23,400 --> 00:26:28,000
Yeah. I'm going to distribute podcasts. I'm going to do my accounting on the blockchain,

332
00:26:28,000 --> 00:26:34,680
grocery shopping, everything, unless it's all a bunch of hype, Joe. Maybe it's all hype.

333
00:26:34,680 --> 00:26:37,760
Well, I do like to end often with a blockchain story.

334
00:26:37,760 --> 00:26:40,040
Yeah, you do.

335
00:26:40,040 --> 00:26:44,800
They've generally been positive, but Gartner has poured quite a lot of cold water over

336
00:26:44,800 --> 00:26:50,520
the whole thing by saying that 90% of blockchain supply chain initiatives are basically going

337
00:26:50,520 --> 00:26:51,520
nowhere.

338
00:26:51,520 --> 00:26:56,900
90% is a pretty striking number. But then again, if so many of them are just hype crap,

339
00:26:56,900 --> 00:27:00,520
that doesn't seem unreasonable. And I think it's a bit of a chicken and egg problem. They've

340
00:27:00,520 --> 00:27:05,100
identified two issues in this report that I can kind of see. Number one, without a vibrant

341
00:27:05,100 --> 00:27:10,220
market for commercial blockchain applications, the majority of companies don't really even

342
00:27:10,220 --> 00:27:17,160
grok how to evaluate or assess how they could make it useful for them. And they can't really

343
00:27:17,160 --> 00:27:21,080
visualize the entire landscape to see what the different options are. The second issue

344
00:27:21,080 --> 00:27:27,400
is a lot of the current offerings are really just solutions that are remixes of conventional

345
00:27:27,400 --> 00:27:32,320
open source technologies that people could just use for free. On top of that, it adds

346
00:27:32,320 --> 00:27:36,160
a lot of complexity and confusion because then there's a lot of one off variations between

347
00:27:36,160 --> 00:27:40,960
the different implementations depending on what version they forked from and all the

348
00:27:40,960 --> 00:27:43,280
kind of complexities that you can imagine.

349
00:27:43,280 --> 00:27:48,000
And so it makes it harder for companies to really identify the appropriate types of blockchain

350
00:27:48,000 --> 00:27:53,240
for the appropriate use cases. And then you look at the numbers. Now, granted, these are

351
00:27:53,240 --> 00:28:00,440
from 2017 and 2018. But Gardner did a survey of supply chain technology users who thought

352
00:28:00,440 --> 00:28:04,080
that maybe they could do some nice technology upgrades, you know, in the market to spend

353
00:28:04,080 --> 00:28:09,900
some money. 19% of respondents ranked blockchain as a very important technology for their businesses.

354
00:28:09,900 --> 00:28:15,720
And only 9% had even bothered investing in it. So less than 20% think it's worth their

355
00:28:15,720 --> 00:28:18,680
time and less than 10% have even spent a dime on it.

356
00:28:18,680 --> 00:28:24,320
I think another big problem here is that companies that are big enough to take advantage of blockchain

357
00:28:24,320 --> 00:28:29,240
technology are almost too big to move quickly enough to adopt it.

358
00:28:29,240 --> 00:28:32,760
If I were to put on my futurist hat here, I'd say something as fundamental as this too

359
00:28:32,760 --> 00:28:38,840
is going to take a very, very, very long time to be adopted, probably longer than SQL databases

360
00:28:38,840 --> 00:28:43,480
and Excel spreadsheets and access databases took to be adopted by businesses. Something

361
00:28:43,480 --> 00:28:48,640
like this can take a lot longer. And I think you're going to see a lot of failed attempts

362
00:28:48,640 --> 00:28:54,640
this this survey here that Gardner did. They are unimpressed. I'm unimpressed with the

363
00:28:54,640 --> 00:28:58,720
survey to be honest with you. First of all, 2017. That's quite a while ago. Second of

364
00:28:58,720 --> 00:29:02,800
all, they're asking companies to look forward to stuff that they can't even conceptualize

365
00:29:02,800 --> 00:29:06,280
what can happen to them in the next six months. Let's be honest. And I don't think we really

366
00:29:06,280 --> 00:29:12,160
have seen the breakthrough use cases yet. We're starting to see some of them. But some

367
00:29:12,160 --> 00:29:19,000
areas of business just take decades to change. Look at shipping and banking. Those are areas

368
00:29:19,000 --> 00:29:23,680
of business that can take 20 years to adopt new technology. Us humans, man, we're not

369
00:29:23,680 --> 00:29:24,680
so good at this.

370
00:29:24,680 --> 00:29:28,480
Yeah, but I think the change will come because there are some clear advantages in certain

371
00:29:28,480 --> 00:29:35,280
areas for the use of blockchain. And I think these companies will eventually realize that.

372
00:29:35,280 --> 00:29:39,360
But I just think it's going to take a bit longer than I had initially thought. Because

373
00:29:39,360 --> 00:29:43,160
I don't know, Gardner, you say you're not impressed with this. They're usually pretty

374
00:29:43,160 --> 00:29:44,400
spot on with these things.

375
00:29:44,400 --> 00:29:48,560
Yeah, you're right. I mean, Gardner has been pretty solid. I think it's just these things

376
00:29:48,560 --> 00:29:53,800
are pretty hard to map. We'll see. Long term, Joe, I'm betting on Dogecoin. I know it's

377
00:29:53,800 --> 00:29:55,880
a long shot, but it's going to make a comeback.

378
00:29:55,880 --> 00:30:02,120
I think I've still got some of those somewhere. But long term, it's all going to be about

379
00:30:02,120 --> 00:30:05,160
blockchain. And it's all going to be running on Linux.

380
00:30:05,160 --> 00:30:10,840
Of course. At the top of the show, the most important news this week is there's a new

381
00:30:10,840 --> 00:30:16,000
show where you can get to learn more about the crew. Come meet us all over at FridayStream.com.

382
00:30:16,000 --> 00:30:19,560
It's a show where our crew from all over the world hangs out and shares stories and gives

383
00:30:19,560 --> 00:30:23,240
each other a hard time. It's just a chance to get to know us a little bit better. FridayStream.com.

384
00:30:23,240 --> 00:30:29,960
Yeah, streamed live on Fridays at 2pm Pacific or released kind of Monday-ish on the RSS

385
00:30:29,960 --> 00:30:31,600
feeds. So yeah, check it out.

386
00:30:31,600 --> 00:30:36,200
Yeah, it's Friday on a Monday. It's actually kind of fun. Gets you going. But of course,

387
00:30:36,200 --> 00:30:39,920
this show comes out Monday mornings. Go to linuxactionnews.com slash subscribe for all

388
00:30:39,920 --> 00:30:41,840
the ways to get new episodes.

389
00:30:41,840 --> 00:30:45,140
And linuxactionnews.com slash contact for ways to get in touch with us.

390
00:30:45,140 --> 00:30:50,840
And one more Plug Skis Tuesday, May 14. That's coming up real soon now. We have a command

391
00:30:50,840 --> 00:30:54,640
line threat hunting study group where you'll get tips to discover if your machine has been

392
00:30:54,640 --> 00:30:59,800
compromised from the command line. Meetup.com slash Jupiter Broadcasting for time and details.

393
00:30:59,800 --> 00:31:03,320
We'll be back next Monday with our weekly take on the latest Linux and open source news.

394
00:31:03,320 --> 00:31:05,240
I am at Chris LAS.

395
00:31:05,240 --> 00:31:06,760
I am at Joel Ressington.

396
00:31:06,760 --> 00:31:09,720
Thank you for joining us and we will see you next week.

397
00:31:09,720 --> 00:31:31,960
See you later.

