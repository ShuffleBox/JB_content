Rumor has it Mr. Bacon has himself some new hardware.
I do indeed.
I recently got in my new Pine Book Pro.
That's exciting.
Yeah, it's an interesting little machine.
I haven't had a lot of time to play with it yet,
but I will say that out of all the delivery drivers,
the DHL guy seems to be the most courteous.
Yeah.
Like he gave me a nice little knock on the door.
He didn't like cop knock the door or anything.
He actually knocked.
Mike gave me a big hug the other day.
Just a big old hug.
This geeky also just got your Pine Book?
Yeah, the DHL guy bought it this morning.
Did you give him a hug?
I didn't get a hug from him,
but he did comment that his wife had the same car as me,
but that was about it.
That's your move right there.
That's the window.
I mean, he's asking for a hug.
That's what it seemed like to me.
You had a delightful DHL delivery man as well.
That's great.
Yeah, it was great.
Ha ha ha.
Oh, hello friends and welcome into the Unplugged program.
My name is Chris.
My name is Wes.
Well, hello, Wes.
Hello.
Who brought this big show?
I think you did.
Yeah, I think you did.
Uh-oh, someone did.
Maybe it was a team effort.
High five, Wes.
Ha ha ha.
We have so much to talk about today.
In the community news, there's new hardware,
there's new software, and there's things to discuss.
And then we're gonna give follow-up thoughts
on Fedora 31, as well as the release of Fedora 21.
Follow-up thoughts on Fedora 31, as well as,
we'll be joined by a special guest in the Fedora 31 section
to talk about some of the underpinnings
of the Fedora operating system,
as well as what's coming up in 32 and 33.
There's a lot to look forward to.
Yeah, it's really something.
But there's much more than that as well,
including the picks and the housekeeping.
And our community, let's start off
by saying hello to Cheese and Alex.
Hey guys.
Hello there.
Hello internet.
Oh hi.
Oh hi, don't say hi to me, that's fine.
It's just me.
I thought you spoke for the internet.
I do now, Wes.
Also, speaking of the internet,
we have our virtual log time appropriate greetings.
Mumble room.
Hello.
What's up?
Good evening.
Well, hello, hello.
It's nice to see all of you.
I see, of course, let's see.
Let's lean into this one here, Wes.
I'm gonna say, Ace Nomad.
You got it.
I thought you were gonna mess it up on that time.
No, it's not Acne Nomad.
No, it's Ace Nomad.
Not this week, anyway.
The one, the only Brent photo.
Hello, Brent.
Oh, hey there.
Mr. Bitebitten, good to see you as always.
Hello.
Carl, every time I see you, I just get hungry.
Good to see you, Carl.
I'm hungry too.
Good man.
Cassidy's here from Elementary OS.
Hey Cassidy.
Hey Cassidy.
And the one, the only, Mr. Dan the Rabbit,
one of my favorite podcasters in the universe.
Hey, Dan.
Heyo.
Heyo.
How about that?
Anne Frank's here.
Hello, Frank.
Hello, Mini Mac.
Hello.
Hello.
And this geek, Anne, coming in, right in,
as I'm calling out names.
Hello, Mr. Martin Wimpress.
Hey Wimpy.
Hello there, just in the nick of time then.
Yes, good job.
You got the shout out.
Good to see you as well.
Well, we have a lot to get into this week,
so let's get started.
We, I think, need to acknowledge yet another milestone
for our beloved desktop.
This week, Dell has really increased their range
of selection of hardware for their preloaded systems
with Ubuntu.
Their XPS 13 line has gone from like two or three options
to something damn near 18 options now,
depending on how you configure it.
This is big, Wes.
This is like, Dell goes big on Linux,
and they're betting on this developer workstation.
It has felt like, I mean, just more and more configurations,
and you've seen some of the precision line as well.
It's clearly doing well enough, they're
willing to continue to invest.
And I like having a lot of different Linux laptops
to choose from.
Yeah, this is a large range, from systems
with four cores, six cores, 1804 pre-installed.
Also, more Wi-Fi options than I ever expected them.
That's an area I didn't expect.
And actually paying attention to Wi-Fi and Linux,
playing nicely together, that's always good.
I'd love to see more than 16 gigs of RAM.
Would love to see that.
But these are beautiful systems with that gorgeous Infinity
Edge display.
I think I really have enjoyed using my T480,
and I really do like a ThinkPad for work.
But if I could be fancy enough to own multiple Linux
high-end laptops, my T480 would be my work laptop,
and an XPS 13 would be the laptop I buy for myself.
It just feels kind of friendly and approachable.
It's light.
You can throw it on the couch and not worry about it.
Yeah.
So how's the trackpad?
Because the benchmark, in my opinion, of trackpads
is or was the MacBook glass trackpad.
ThinkPad trackpads are definitely a step down from that.
Where does the XPS fit in that kind of hierarchy?
So I think it depends on what ThinkPad you have as
to the quality of the trackpad.
So my ThinkPad has got a glass trackpad, and it's very good.
And now I have a MacBook Pro, albeit a 2015 model.
I can make an objective comparison.
And certainly, the MacBook Pro is better,
but probably it's better because the gesture support is just
so much better.
And I would say that the XPS, I've got a XPS 15
and a couple of XPS 13s.
Their trackpad is as good as you can
get for a Microsoft Precision trackpad,
but it's still not to the level that the MacBook trackpads are.
Yeah, that's basically my assessment as well.
I thought it might be fun if I configured
one of these new XPS systems.
I think I'm going to go.
I think I used to hold back on 4K.
I think you're ready now.
Oh, well, the desktop's kind of caught up.
Yeah.
It's not me, Wes.
I've been ready.
My body's been ready for a long time.
I think Wimpy's ready.
That's what it is.
Yeah, if Wimpy could get Mate together.
No, actually, that's actually my point,
is things are getting to be in pretty good shape
on high DPI now.
$1,499.99 is my config.
What's with me?
Am I so much of a fancy boy?
But even that, that's not that bad.
If it's going to, you know, I mean,
you're going to keep it for three, four years.
Well, let me tell you what you get.
So for 1,500 US greenbacks, you get 16 gigabytes of DDR3 RAM,
a 13.3 inch 4K 3840 by 2160 Infinity Edge touch display,
512 gigabyte PCIe mVini drive, which is fast as hell,
killer Wi-Fi, which is pretty damn good,
and actually really good Wi-Fi matters to me,
and a 52 watt hour battery for sale.
$1,500 for something that is also
putting a vote towards shipping something with Linux preloaded
that is a nice tight package that I have now
owned two different generations of XPSs,
so I know they're good stuff.
Yeah, I think that's a fair price.
I actually thought I'd come out here and say it was too much,
but now going through it, I think it's actually fair.
Right.
I mean, it's not the best, and you unfortunately
can't quite seem to get everything all in one package.
It'd be nice to have more RAM or a little more configurable
or horsepower in there.
But it's a really shiny Linux laptop
that you're not ashamed to bring into any environment.
And you know, it's just going to keep getting better.
So if you invest now, we can look forward
to more good things.
To that note, Wes, I tweeted at Barton George this week
saying if it was 32 gig, it would probably
be an instant buy from me.
And he and several other people on Twitter
were very responsive, I've got to say.
So I think if the more people can tweet Dell
and say that we want more RAM, it
sounds to me like it might happen one day.
For now, they're pointing people at the Precision line.
But I don't think it's an impossibility,
because that 10th gen chip that's in there, the CPU,
does support up to 64 gigs.
I guess it's just a case of finding somewhere to fit
the other chips on the board.
Right, yeah, updating the platform to include it.
Or the power usage.
Oh, yeah, could be that.
Yeah, I recently reviewed a Precision 3540,
which was pre-installed with Ubuntu on the Ubuntu podcast.
And I have to say, they had to wrestle that laptop back off
me.
I absolutely loved it.
Yeah, you did.
And that one, you can put 64 gigs in.
OK, well, so I'm the guy that has
systems with 32 gigabytes of RAM.
But I'm also going to play devil's advocate here
for a moment.
This morning, as I was using my workstation,
and my mouse was chopping across the screen
like it was a system from 1992, I
really wondered if it was worth having 64 gigabytes of RAM.
And I thought about, if an audience member came to me
and said, I have a limited budget,
what's the most I should spend on RAM,
I think I would have to advise them 16 gigs.
Because performance on Linux starts
to shit the bed way before you use up all your memory.
Now, if you have 4 gigabytes of RAM or 2 gigabytes of RAM.
Yeah, 16 is pretty comfortable these days.
I mean, I've got 32 right here, and I have 28 available.
I can bring my fairly high-end system down
to a laggy desktop mess by simply playing a YouTube video
and browsing the web and loading other web pages
while I have a couple of chat applications
going in a terminal.
And I'm sitting there using 5 gigs of RAM,
so I've got literally 59 gigabytes of RAM unused.
So it's not a memory thing.
So I think we've got other problems
we have to solve before we really address the memory.
Not all desktops experience this issue, I grant you.
But it was a little disappointing,
because I felt like I've gone to this.
When I built this system, I went to this effort
of separating out the disk I.O. So my scratch disk,
my home directory, my game disk, my operating system OS.
They're all on separate, very high-speed disks.
I got high-end graphics.
Like I said, 64 gigabytes of RAM, six CPU cores.
I thought, this will be the fastest computer I have ever
owned.
Just a machine you can work on and not
have to think about anything else.
I'll just crunch through it.
But screw me, because I open up YouTube in another tab
and then tab out while I read news stories
and scroll web pages, and my whole computer lags out.
And heaven forbid, something gets a little excessive
in Slack, like maybe an animated emoticon that really
pings one thread.
Because then, if I'm watching a video, browsing a web page,
and somebody's done something in Slack,
well, then my mouse jumps across my screen every few seconds.
It's just like a stuttering mess.
It's unusable, yeah.
So there's other problems.
Not to go there, but.
You know, I hear Linux runs great in a virtual machine.
Well, what I was going to say is,
maybe we should just hit the reset button
and switch to the ARM platform.
No, I mean, I know we'll get these things fixed up.
And I know it's the worst on Gnome Shell,
and that I'm really on the cutting edge,
and this is what you get.
So I put all that into perspective.
But I am very impressed in what we're seeing,
not just in the Pine Book, but also just from the Raspberry
Pi 4.
It is significantly more powerful than the Raspberry Pi
3.
It's definitely entered an interesting territory
of keeping up, being able to perform a number of tasks
that the previous gens just couldn't quite get to.
I have a significant number of things I'm using Raspberry Pi 4.
In fact, I go into some significant detail
in the self-hosted that comes out later this week.
But I haven't really seen any distro except for Raspbian
step up to the Raspberry Pi 4.
So that's why I was very happy to see a post on the ubuntu.com
blog on November 3 that talks about Canonical's plans
for support for the Raspberry Pi.
They write, with 1910's release of Ubuntu Server,
Canonical has announced official support for the Raspberry Pi
4.
The latest board from the Raspberry Pi Foundation
sports a faster system on a chip with a processor that uses
the Cortex A72 architecture.
Additionally, it offers up to four gigabytes of RAM.
We are supporting the Raspberry Pi 4
to give developers access to a low cost
board powerful enough to consolidate
compute workloads at the edge.
That sounds pretty great.
Unfortunately, they go on.
However, our official support for this board
is currently limited to the one gig and two gigabyte versions.
Due to a kernel bug, USB ports are not
supported out of the box in the official ARM64 image
on the four gigabyte version.
Kernel fixes have been identified
by Canonical engineers.
And we're currently testing these fixes extensively.
Yeah, I ran into this with my tester.
I talked about it a little bit during our 1910 review.
And I did discover, too, that if you limit the memory
to less than four gigs, or if you just simply
use the 32-bit image, it's fine.
But then it also turned out there was a KVM bug in there.
But they're getting pretty close to having this fixed.
And it's really kind of taking some work upstream,
as well as Canonical kind of keeping on top of it.
Right, it is kind of a reminder that these are
special, unique little devices, right?
And you might have good support running in Raspbian,
because they spend a lot of time getting that to work right.
And it takes a little longer for that to filter downstream.
Yeah.
It is kind of a core reminder that you can just
limit the amount of memory your system uses, too, in Linux.
It's just so easy and so cool.
That is really neat.
Wimby, do you have any insight into this process,
either for Ubuntu MATE or for a mainline Ubuntu LTS
or whichever?
Yeah, so the hardware enablement that's in 1910
will become the next point release for 1804.
So around that time, the Raspberry Pi 4 support
will roll into an 1804 version, as well.
Obviously, we want to get that bug fixed
where all of the USB ports go away unexpectedly.
And obviously, having a Raspberry Pi 4
with 4 gigs of RAM, that makes the 64-bit story a lot more
compelling there now.
So we want to get that right.
And then, of course, when 2004 comes around,
we'll have Ubuntu core images, as well,
for the entire family of Raspberry Pis.
It seems like a pretty serious commitment.
The quote here that I highlighted for our saving
is, canonical is dedicated to offering outstanding support
for the Raspberry Pi boards.
To achieve this objective, we are
listening to feedback from the community
and acting upon it to improve our delivery process.
We want Ubuntu to become even more compelling option
for an operating system on the Raspberry Pi boards.
Wow.
That seems like it's a pretty serious effort.
Yeah.
There's lots of people lined up behind this initiative.
Yeah.
It's nice to see.
I mean, nothing against Raspbian,
but it just feels so foreign.
You know, it's so specialized and localized.
And one of the things I love about using Linux
is I can use the same thing on the server, the desktop,
or on my little Pi platform, but it's not there yet.
Well, I feel like I'm the silly one right now that's saying,
you can use a Pi 4 in production?
And the thing that makes me the most
uneasy about that recommendation is Raspbian.
Nothing against the project.
So far, as I have used it, it seems
to be a great distribution, and I get why they make it.
However, when I have put so much effort
into building the perfect home setup,
and I'm sitting there doing an OS upgrade,
there is just a bit of confidence
I have when it's an operating system that
is a daily driver for me, like Ubuntu LTS.
And there's a lot to like about Ubuntu right now.
And I just have faith in its process to upgrade.
And I also know there's a certain scale factor that's
safe there.
But so far, Raspbian's been fine.
But I would be much happier running something
that I use on my other systems in production already.
And so I'd love to see this.
In the meantime, there is some workarounds for the bugs
until they're sorted.
But it's nice to see that the LTSs will be getting it.
In the future, there are ways you can do it,
but I wouldn't necessarily recommend them yet based
on my testing.
And the other thing I should just point out,
because it might not be obvious, but the images
we prepare for the Raspberry Pi are
subject to the same security maintenance
as every other Ubuntu version.
So kernel patches and libraries and everything,
all of that stuff in the Raspberry Pi images
moves at the same cadence as everything else.
Have you had a chance to play with the Raspberry Pi 4?
I have two of them on the desk behind me at the moment.
I am not blown away as a desktop.
They seem quite good as a desktop.
But I am legitimately impressed with what
they are capable as a headless Linux
box running home servers services.
Yeah, it's definitely a huge step up
from the Pi 3 and 3 Plus and that era of Raspberry Pi.
Every time these boards get revved,
I think people have expectations that are unrealistic.
If you follow the SOC developments closely,
you'll know that they're never going to compete
with contemporary Intel or AMD-based parts,
even at the lower power limits.
But I really quite like them.
I'm obviously working on Ubuntu MATE for the Raspberry Pi 4.
That'll probably be available sometime near Christmas.
So that's a fun project for me.
But I'm also, I've just got an arcade fighting stick
and I'm building a new emulation station system.
So I'm using the Pi 4 for that.
Oh, that's great.
You know, the only thing that really scuppers the Pi for me
at the moment, Pi 4 in particular,
is the SD card requirement.
I don't want to put something into production
that relies on an SD card.
Use a USB stick.
Can you boot from that, though?
No, not yet.
It's not available yet, but it will be coming.
Yeah.
I, on the other hand, I find SD cards pretty easy to manage.
Because, I mean, you're talking to a guy
who used to make custom boot floppies to play video games.
So I can duplicate them fairly straightforwardly.
They are of a reasonable cost.
And you can use them to just essentially bootstrap
the system and then use larger storage elsewhere.
It's a compromise at this point.
But I have faith that they'll get there.
You're right, though.
It is, I think, the way to put that, Alex.
It's definitely something to be aware of.
Because those things do have a certain endurance
and then they start to fail.
And that's a bad morning.
Wimpy, you've had a lot going on.
There's been some changes for you in life.
Probably a good time to mention that you recently
sat down for a brunch with Mr. Brent.
I did have a lovely brunch with Brent.
It was a high point of my week.
Extras.show slash 29.
I really enjoyed it.
Really, a really great episode.
And Brent, you just got to keep it up.
Because I learn more about folks when
they go on brunch with Brent than I would have otherwise.
It's like, you get there.
You know, you get down, you get deep.
You get the details.
Don't worry, it doesn't hurt at all.
Brent's very gentle.
Yeah, and it's delicious.
You know, I've been having a lot of fun with these chats.
And the chat with Wimpy, of course,
was a lot of fun while we were doing it.
And it sounds like a lot of people
are really enjoying it on their commutes and stuff like that.
So I'd say, if you enjoyed it, spread it widely.
Yeah.
And also, Wimpy, just congratulations.
I think it's, anyone who's been following your journey
on this show knows that it's a bit of a remarkable journey.
And now, here you are as the director of the Ubuntu Desktop
at Canonical, which is just incredible.
And some of that journey is talked about there
in that extra.
Yeah, and my time here, particularly on Linux Unplugged,
has been pivotal in getting to where I am today.
And I talked about that with Brent.
So if you're curious as to how all that unfolded,
that's one of the things we talked about.
But yeah, thank you for Linux Unplugged.
It really has had quite the profound impact on my life.
And it's always a joy for turning up.
Oh, stop.
No, no, stop it.
Thank you for being here.
Extras.show slash 29.
Go listen to that.
It's a great additional little thing
that you might call an extra.
You might just call it that.
Well, Cassidy and Dan from Elementary OS are here.
And I think this is the perfect opportunity for us
to discuss some major updates for Elementary OS.
This is the one where we see a lot of Flatpak support land.
So what does this look like?
Because Cassidy, I think the takeaway
that I've seen the internet at large discusses,
they're calling it sideloading.
So what are we talking about here?
Yeah, so we've heard from users that there's
a lot of these cross-platform apps or just apps that
don't fit the other requirements for being curated in App Center
that they want to use on their machines.
So we talked a while ago in the spring about Flatpak
being the future for our stack, and we're
going to be moving our App Center apps over to Flatpak.
But since Flatpak is our plan, it
means we can support a more secure way
of getting third-party apps on the system
from outside of the app store.
So that's what we call sideloading.
I like the screenshot you have in the blog post
that we'll have linked in the notes,
because you get an idea as an end user
what this is going to be like from an implementation standpoint.
You get an idea of how big the download is.
It really kind of helps you understand that this is only
being backed solely by the developer.
We as a project have not vetted this.
And when you add this, this is the tricky part
that I think I was really curious how you would parse
this, and I think you nailed it.
And the last line is, when you add this app,
it may add its entire repository,
and so you will see other apps by this developer.
And that's the hardest thing, I think,
when it comes to this kind of thing for end users
to wrap their heads around.
So this dialog box, it seems like one
of these things that would be so obviously a clear thing you
should do for end users.
But the reaction, and I saw your tweets today,
the reaction has been, oh, it's so much like Mac OS
calling it sideloading.
They're just locking it down even more.
Do you push forward and just try to ignore that completely,
or do you feel like that's worth addressing on the show here?
It's funny, because with this update,
we're bringing a ton of new capability to the OS
and a ton of new software that you
can install with one click.
And it's using an open source technology
that the other desktops have kind of standardized on.
It's this very open process, and we're being very, very honest
and realistic about expectations.
And that's actually something we've heard from our existing
users, is they want to know what the implications of installing
apps, whether it's from Flatpak or from the Ubuntu
repositories, they want to know what
the difference is between these curated apps
and these third party sideloaded apps.
So we're addressing that.
And I think, of course, we'll always
get blowback from people who probably don't even
use the OS.
And that's fine.
That's part of building an open source product.
Oh, man, you just so nailed it right there.
It's frustrating, too, that the comparisons are always
there with the Apple stuff.
I know.
To me, it seems much more just like you guys are bringing
some modern OS paradigms that the whole world is exploring
here on the Linux desktop, and it's nice to see.
One of the things that actually inspired the idea originally
is that Android comes with a built-in APK installer thing
where you can sideload apps.
That's what I thought of, not Apple.
Yeah.
So it's really funny that there's
this weird obsession with people comparing us to Apple.
And it's like we draw inspiration from all over open
and closed platforms and build the best product that we
can from those ideas.
Well, actually, I would imagine this is probably never
going away because your motivation is to sell
a good operating system product.
Apple's motivation is to sell expensive hardware.
In both of those, you think about what makes a good
customer experience first.
If you're not trying to sell them into a bundle of services,
you're not trying to sell them into an ecosystem
so much as you're just trying to sell them a product,
the user is not the product.
The product is the product.
So how do we make this the best?
So a lot of times, there will be a process of thinking of how
do we make this best for the end users that
will be reflective of how Apple looks at things.
And so those comparisons will probably never go away just
because the nature of the product being a product
and not the user being the product.
But there's something else you touch on in this update
that I just wanted to get more information on
because it's like super light.
Towards the end here, you write, the end of the month,
we will finalize our brand new automation powered release
process, meaning we will easily queue up
the release of several apps and desktop components.
I don't know what you mean there.
Could you tell me more about that?
Because that sounds like really cool high tech stuff.
Yeah, so this has been an awesome, awesome bit of work
over the last month or so with several people
in the community coming together to help automate this stuff.
Basically, we have completely rebuilt
how we build elementary OS.
We're using, we've been adopting CI
across all of our over 100 repositories on GitHub.
We're doing things like testing builds,
validating with Houston CI, which is our app center test
suite.
So the same standards that we hold third party developers to,
our apps are tested against.
And then we're also linting the code
to keep up with code quality standards.
And now we even automate translation template updates.
So a lot of these things that kind of used
to be a lot of manual labor for a release
or for just maintaining the code in general
have been automated.
And along with that comes automating the package release
process.
So when we actually want to send out an update to users,
like we mentioned in the monthly update posts,
there's a whole big, long process
of preparing that release.
And the majority of that now has been automated
with continuous integration and continuous delivery,
which is so, so cool.
MARK MANDEL.
Hopefully, that just frees you up
to spend more time on the things that actually matter.
DAN SANDLER.
Exactly.
Yeah.
We were spending a lot of time on these release processes.
And now we can do more releases faster.
Oh, that's great.
Oh, that's so cool to hear.
So there's one thing that really strikes me.
So Dan, I want to give you a chance to jump in here.
Kind of wondering why this isn't all
being held for just the next elementary OS release.
Because the blog post, we've touched
on three of a dozen things that are landing that
looks like it's just an update coming to the existing OS.
Is this a strategy change?
You know, it really isn't a strategy change for us.
This is something we've been doing for a while.
And it's funny, because we hear from people
who are outside of our community talk about, oh, well,
I don't want to use an LTS-based distro,
because that means I won't get updates.
But we're totally opposite of that.
You have that stable base of the Ubuntu LTS underneath,
which is really great.
But we're also continually delivering updates
to all of our own applications every single month.
And we've been doing that for over a year now.
And all the apps in App Center are
released whenever those developers publish
new releases.
And now you can even get the latest versions
of third-party apps because of the great Flatback support.
So I think we're just continually pushing
that we want to be the most stable, but also most updated
distro that you can have.
And you get kind of that best of both worlds.
You guys better be careful, or else people
are going to start figuring out what you're doing.
And then this thing's going to blow up out of control.
You're not going to do it with a success.
You better be careful.
Because yeah, this is great.
This update, it's definitely worth a read,
because there's a lot more coming, including just nice
tweaks to the look and feel, the drop-down date menu,
just nice things for the date and time indicator,
just all kinds of small quality of life improvements,
as well as tons of new third-party software
that you can now get in the best-designed App
Center out there.
So hashtag, check it out.
Is that what the kids say, Wes?
Did I get that right?
Yes, you did.
Thank you.
I defer to Wes on those things.
Anyways, thank you, gentlemen, for joining us
and keep up the great work, because my family
appreciates it.
I love it.
Thank you.
I do, I really think it's just so great.
All right, Wes, we've got to do some housekeeping,
because everything changes.
We've got to stop salivating over to elementary.
Everything changes now.
Everything.
Everything, and nothing is changing.
Well, we're changing everything,
but then the stuff in the middle doesn't really change.
No, and stuff at the end doesn't really change,
except for it'll be sooner.
Right, faster.
Faster.
So we are experimenting with a new live time slot
for this here humble podcast.
We're going to attempt to move it up a couple of hours
in the daytime.
We currently do Linux Unplugged live every Tuesday
at 2 PM Pacific time.
Now, we're going to try moving that up to noon Pacific time.
Still on Tuesdays, still at jblive.tv.
We really need the sun right above us
when we're podcasting.
It just helps a lot.
Yeah, it's the solar panels we installed on top of our heads,
Wes.
So we really would love you to show up,
because we're petrified this is going to go horrible.
We're just really terrified.
And we love doing the show live.
I mean, it's kind of the whole thing.
Well, and we've got that virtual log, and we'll miss you
if you don't come join us.
We've been at this live time since the show's inception,
and people built a routine around it.
So we're completely paranoid.
But it is something that would work better for everyone
involved in the production of the show.
So we're going to try doing noon Pacific going forward.
Now, next week, I'm traveling, so we'll pre-record an episode.
So next week, we're just throwing everything.
Don't bother showing up live, but do check your feeds.
Yeah, we have a new episode.
Just won't do it live.
Then we're coming back at the new time, noon Pacific.
What's that East Coast time there, Wes?
Well, you just got to add three hours.
I know.
That's why I thought you would just save the time.
Yeah.
You're supposed to flex your math muscle over there
when I do those kinds of things.
I don't want it to be too easy for you.
I got to keep you sharp.
Thanks, yeah.
So this is the last two.
I know.
It's weird.
It's weird.
Savor it.
So let us know what you think.
And if you haven't had a chance to make it before,
and maybe the new time works a little better for you
for some reason, please, please come.
Because like I said, we're terrified
that nobody's going to show up.
Vote with your presence.
We've had our lug time at a certain specific time
in it forever, and it's just scary.
So let us know.
Now, also, we mentioned Brunch with Brent over at Jupiter
Extras, but while you're there, check out ThreatHunting101.
There's a lot of lingo these days
when it comes to protecting your network
and the whole quote, unquote, cyber security,
end quote, industry.
Well, just sort of with a big sharp needle
to pop the hype bubble, Elle has a chat.
You join her with a guest, special guest.
And I thought it was really good, ThreatHunting101.
Actually, you've got two special guests.
That makes it an extra special extra.
There might be some more stuff in the works.
In fact, there might be some other things
in that feed related to the topic that
are worth checking out too.
Indeed.
It's possible, Wes.
It's possible.
That extras, it's becoming something of a gold mine.
And I guess while we're here, in celebration of Mr. Daniel
Foray, submit your hashtag ask error questions.
It's a great part of the show.
Yeah, you want to listen to Dan say something hilarious.
Oh my god.
You got to start that chain.
I really appreciate, Dan, how you
are willing to take a ribbing from those guys
and stay true to yourself.
See, I was going to say bring reason.
Oh, well, that too, actually.
These guys are so nice.
They are, aren't they?
So get your questions into the crew, hashtag ask error.
Anything about Linux, the universe, life itself,
ask them and they'll answer it in a future episode.
All right, there you go, Wes.
It's so clean in here.
Housekeeping is a great moment in time.
It really is a chance to clean everything out.
So we have been really enjoying ourselves.
Everything Fedora 31, it's a great time of year.
You've got right before the holidays,
you get to celebrate the Linux days.
You get Ubuntu 19.10, which is really
like your first visceral look at the new gnome
shell and all the improvements of the different flavors.
And then Fedora usually ships somewhat on time.
And this time they nailed it.
And it's really a great opportunity for those of us
who just love Linux and love the different desktop
implementations to try it all out.
We've been running Fedora 31 for over a week.
And we have some questions about some of their bigger changes
and maybe just what the future holds for 32 and 33.
And we knew just who to ask.
Christian here is the senior engineer manager
for desktop graphics at Red Hat.
First of all, I love that there's a senior engineer
for that.
I might not have expected that.
So welcome back to the show, Christian.
Thank you.
Thanks all for having me.
I love your blog posts that you do kind of midway
into the development cycle of the next Fedora workstation.
They are so packed full of information
that these really could be the release announcement notes.
So on September 23, you posted what's
coming in Fedora workstation 31.
And there's actually quite a bit that didn't really
make it into the official bullet points of what's new.
One thing you guys wrote in here that I thought
would be really kind of interesting to get some insights
is you wrote, an item we feel is important
is reducing the need for X-Wayland
and having Firefox run natively on Wayland.
Why did you feel like that was important?
And why do we need to reduce our use of X-Wayland, do you think?
I think there's many reasons for that.
But I mean, I think for me, the major thing
is, of course, that even though we're working very hard
to make sure X-Wayland is a really great solution
and works really, really well, it still adds overhead.
And it's sort of like an abstraction layer
where you're sort of abstracting in the old X system.
And of course, you also maybe lose some of the advantages
that Wayland is meant to give you
by having to rely on X in terms of security and so on.
So yeah, we invested in making sure
that Firefox would get a native Wayland port.
And I think it's actually worth mentioning that I think
for the last five years at least,
Red Hat has more or less single-handedly maintained
Firefox for Linux.
So anyways, we did the work to make sure
that we could get a native port.
Also because a browser, right, is the most critical
application we have today.
I mean, I think often, at least for me
myself and I think for many others,
there are days where I literally don't open
any other application than the browser.
Yeah, yeah, yeah, I know.
So we wanted to make sure that the browser works really well
and is a top-notch experience under Wayland
and that it runs natively and not only this old layer.
And of course, not starting X-Wayland eventually, right,
will also be a resource-saving thing.
That if you don't need to start it,
then we free up that overhead that that causes.
You're also, in this post, talking
about X-Wayland on demand.
Does that play into that as well?
Yes, exactly.
So at the moment, right, because after 30 years,
everything had a lot of hard dependencies in X
and are assuming things are based on X.
Yeah.
So even though Fedora has been running Wayland
as our primary display server for years now,
it was only very recently that we
were able to get rid of the last remnants of code in Gnome
that still assumed there would be an X session available.
So that meant that X-Wayland has always been running.
And if there was a problem with X-Wayland, of course,
it affected your whole desktop session.
But now that we are at the point where
Gnome can run on just Wayland and don't need X at all,
we will also then do this X-Wayland on demand
so that we only start it once an application actually requested.
So if you don't have a legacy application that still uses X,
that's when we start X-Wayland, as opposed to ramping it up
for every desktop session you have,
even if you don't actually run anything on Wayland,
start on X directly.
No need to have it hanging around running
if you're not using it.
Yeah.
My battery thanks you for that.
Yeah.
No, because there's a lot of discussions
about performance in general.
And of course, there's a lot of work on making animations
smoother and these kind of things.
But I think often people tend into the performance term
to also put resource usage.
And of course, so that's another thing
we've been looking at is like, how can we
get rid of processes to keep your session as small as
possible, especially if you don't need them?
Yeah.
I want to get to Pipewire because this is something
that it feels like things are getting lined up in 31,
but things really start to shift in 32 and 33.
And maybe it's good to just recap a little bit of Pipewire
history here.
So Pipewire initially was a project
that started to really provide remote video solutions
for Wayland sessions.
Yes, correct.
I mean, the original name actually,
if you go back and get history, you
can probably still see that it was originally
called Pulse Video.
So the idea was like, hey, we need something
like Pulse Audio for video because both for Wayland
but also for as we went to Flatpaks,
we realized that when you sandbox applications,
we want it as a secure way for you
to be still able to access things like your webcam
and so on.
So it's all like, hey, let's put together
what we called Pulse Video at the time.
And then I guess as we kept discussing and looking at it,
we thought, well, we can make the whole architecture
or desktop a lot easier to maintain and deal with
if we could start centralizing things
by instead of having Pulse Audio and Pulse Video next
to each other, basically have one thing that handled both.
And then we also said, well, maybe we can bring in Jack
to this too, right?
So because that's always been the ugly stepchild
of the Linux universe, it's like this extra thing
that you have to tweak and twiddle to get going.
And we thought, let's look at it if we can get the performance
into Pipewire that enables it to also replace Jack
and basically provide a drop-in replacement
for both Pulse Audio and for Jack
and, of course, provide this new video functionality we needed.
Now, as things have evolved, it's
not so much replacing Jack but more working alongside Jack?
No, it's still the goal is to replace it.
I mean, we will be having a separate drop-in replacement
process.
Technically speaking, no Jack application
will need to be rewritten.
It will still find the quotation mark Jack server there,
but it will actually be Pipewire providing that Jack server, not
the native Jack process.
So is it sort of like a Pipewire Jack library
that the applications will just be able to communicate with?
Yeah, well, I mean, this is a Don't Sobbing Manager.
I don't know the details that well, but.
Yeah, I'm obviously a little outside of my pay grade, too.
But Jack is, well, just like Pulse Audio, it's a server,
right?
So as long as you have the server there and you speak
the Jack protocol, basically, then you can communicate with.
So it's essentially creating a Jack-compatible server
for Pipewire.
Yes, exactly.
And, of course, the same on the Pulse Audio side,
that it will be a Pulse Audio-compatible server
for Pulse Audio applications.
So my question that I just desperately need to know
is, will there still be some ALSA in the stack?
Like at the low level, are we still going through ALSA
to get to the hardware?
Yes.
Yes, we are.
I love it.
OK.
All right.
Very good.
Yeah, I mean, ALSA, of course, is still
going to be the driver side.
I mean, I guess there is definitely
parts of ALSA that, of course, is not so needed anymore.
I mean, back in the day, right, we
had all this software mixing done in ALSA.
And these days, I think Pulse Audio used to do that.
And, of course, Piper do that.
Of course, in some sense, we're maybe stripping back ALSA
a bit to be a pure driver layer, right,
as opposed to having all these sort of more high-end features
over there.
Yeah, that's a fair explanation.
That makes sense.
And that's kind of what it's doing best right now anyway.
Yeah.
Let's talk about 33, though.
So some of this lands in 32.
But in 33, the idea is to ship PipeWire
as the default audio handler, with a way
to hit a switchback function somehow.
Is that, do you think, too aggressive?
Or is that just on the edge?
It's going to be like the rollout of Pulse Audio all over
again.
Yeah, I'm curious.
Because as production people, we're
really curious to see where this goes and very excited.
Yeah, so the way we, I mean, this
was me and Wim sort of sitting down and hashing out
the plan for how to do this.
And I mean, originally, I think, probably
when I talked to you guys the last time,
our plan was let's roll out jack support first
and then do Pulse Audio later.
I think we actually concluded in the end
that that created more problem than it solved,
because you suddenly then have to deal with interacting
across the Pulse Audio and PipeWire boundary.
So we decided, OK, we just need to roll out in one go.
And so the plan now is for 32, we
will have a feature complete, or at least closely feature
complete, PipeWire there that you very easily can turn on.
And then, of course, our hope is that you and other people
start hammering on that and testing it and giving us
feedback, like, hey, everything is perfect,
or, hey, here are the problems.
And then our goal is that for Fedora 33,
we can say, hey, everyone has no report
that things are really good, and we've
been able to fix a lot of bugs during the lifecycle of Fedora
32.
So we feel confident about switching on default.
But we will do the same here that we
did for the Wayland rollout in Fedora,
where we had a plan of rolling it out at least two releases
before we actually did.
But we kept finding issues that we felt
were major enough to delay the release.
And of course, if you experience the same here,
because what I don't want is, as you said,
the PulseAudio situation, where it literally took people years
to stop hating PulseAudio because the rollout was so
bumpy.
And I don't want to repeat that experience for Pipewire.
Lesson learned.
Yeah, well, very good.
We will bang on it for sure.
And we will try to report anything that we find amiss.
I mean, Wes has already been attempting to give it a go on 31.
So we're very excited.
Because listening to the talks and just looking
at the way it's laid out, this could
be an improvement in latency, like a reduction even further
than what we have now.
I mean, we already have Pulse applications.
So if they can just talk to our Jack applications
through Pipewire and not have to use all the gross bridging
we have in place now.
We could see an improvement in real time processing,
which could be great for us for effects for our live stream.
So it's pretty exciting.
We've got cool technologies like Toolbox and Silverblue.
You've got Wayland and Pipewire and Flatpaks.
It feels like the underlying technology stuff
is getting really, really solid.
And don't forget tools like Podman.
Right.
So I wonder if, when you look at this as a developer
workstation, being that you're on the desktop team,
do you see that Gnome Shell is like the next big frontier
of work that needs to be done?
Is that what you're seeing after this?
Or what's your opinion on that?
Yes, we're definitely looking at if there
is ways to improve Gnome Shell.
And we actually have a, I don't think
I've talked about it in the public blog yet,
but I've been actually doing this effort with a lot
of students that we are getting in every year,
both in Brno in the Czech Republic
and here in Boston at the Boston University,
where we're trying to basically do a lot of surveys
and do automatic data gathering to basically try to figure out
what are their likes and dislikes.
And especially from any of them, they
come either from Windows or Mac.
So they're set up with Gnome Shell desktops,
and then you're capturing their experiences?
Yes, exactly.
Wow, that's fascinating.
We're trying to build up our capability
and figure out exactly how to do it better,
so that we can start capturing that feedback
and then improve our user experience.
And that, of course, we hope to then feed back into,
for instance, Gnome Shell and say that, OK, here's
how we can make Gnome Shell an even better option
for developers.
But I mean, of course, in the short run, for me,
the developer killer feature that we're pushing hard
is, of course, the Fedora Toolbox, which, of course,
is this new tool we have created and we
are putting a lot of resources into to make pet containers
feel natural and easy to use.
And I mean, it's not an advanced product in many ways.
I mean, Wes, I think you mentioned Podman.
I mean, Podman, of course, is a tool for creating and running
a lot of your containers.
So Toolbox is basically using Podman
to make that process even simpler,
so that we don't need to sit there
reading documentation to figure out what are commands
and all the cool things and stuff.
And our plan is that you can do Toolbox create,
and it creates you a pet container.
And then you can much more easily
find and interact with your pet containers.
And at the same time, we're doing UI integration.
Like the idea is that, for instance,
when you have a terminal opening into your toolbox
or into your pet container, the prompt
will be slightly different from, let's say, your host,
so that you don't sort of just jump to, let's say,
your 10 different terminals.
You're not sure where you are anymore.
Also, there's some integration with Gnome Shell Terminal
to remember what Toolbox you're in as well, right?
Yes.
So the plan is, of course, that you very easily
can find the terminal corresponding
to a certain toolbox.
Yeah, that's great.
So that's kind of features, you know?
Those high-level user experience features.
All the technology's there, like you're talking about,
but no one's going to find it if it's not
right there in their face.
Right, what's kind of thrilling about it,
it's taking stuff that's super low level
and bringing it all the way up to the user experience
from the top of the layer all the way down to the bottom.
But not even just using it like the tool,
the command line, whatever, the main pages,
it's the whole workflow.
That seems a big deal.
Yeah, so I agree.
That seems like I'm already using it.
As soon as I started reading what it was,
I just started using it, and I love it.
But I mean, I'm thinking about Gnome Shell itself,
like architecturally, the transition to Gnome Shell 4,
is that a near-term project, or do you
think those are longer-term projects?
Well, I would call it medium-term.
I mean, at the moment, we had a meeting just the other day,
and I said, my focus now is that I want to, in some sense,
be able to sign off saying that, hey, Wayland is done.
And I want us to focus on getting toolbox up and going.
And of course, there's also various other polished items
related to Silverblue that I want us to cross off.
And I said, only once we have these in place,
then I feel the time is to maybe start
moving into at least more serious Gnome Shell tweaks.
I mean, I'm sure that you will see smaller things coming
in going forward with, like, Alan Day, who's
sort of leading that effort to try to research what could
sort of be Gnome Shell 4.
It's still a sort of exploratory phase
and trying to get use cases and discuss with, what we'll call
it, student focus groups, but also with some existing RHEL
customers and so on to just make sure
that we don't want to sit in our own little echo chamber
and saying, oh, here's the new perfect design,
and then we ship it.
And it's like, oh, but this really breaks things for me
when I try to use Gnome Shell with Maya or something.
Good job on you, because it makes sense
to wait for the user survey data,
wait for some of these tools that fundamentally change how
someone can use their workstation,
wait for those to develop, tackle the Wayland problem
that's going to have to be completely solved
for the next Gnome Shell.
That really does seem like the right approach.
It just means we have to be a little patient.
We've got to wait.
But things are getting better in the meantime.
It's not like there isn't active continuous improvement.
Right.
I mean, even so, I mean, even in the Wayland transition,
I'm surprised how good it all is, right?
There may be X servers running under the hood,
but I never know.
It is flawless on my ThinkPad.
It is completely flawless.
Even playing Proton games on Steam on Wayland is flawless.
It's great.
Yeah.
No, I mean, I think we're pretty happy with it.
I mean, the one big, well, I mean,
there are some smaller items.
I mean, I guess you guys have seen Hans Guede, who's
on our team, right, working on trying to improve some things
regarding scaling of old STL games.
But I mean, the one big item that we're, of course, waiting
is to get things working perfectly
with the NVIDIA binary driver.
Right.
And that, of course, is something
we can't do on our own, right?
This is a collaboration with NVIDIA.
And then, of course, we've been trying
to help them put pieces in place.
But of course, we need them to then try out and enable
those features in their driver and tell us how it works.
And then hopefully, at some point in the not too distant
future, we can say, hey, Wayland or other X Wayland
on top of the NVIDIA binary driver now works correctly
and is ready to go.
That'll be huge.
Wow.
I mean, the one thing that actually delayed that a bit
was it turned out to be a bigger effort than we thought
because a lot of these tools that, for instance,
a lot of our rail workstation customers use,
all, for instance, are based on OpenGL extensions,
for instance, that NVIDIA are shipping with their driver that
are custom to NVIDIA.
And I mean, I think for a regular desktop user,
you don't even probably know about them
or ever heard about them.
But if you are using one of these applications
and you don't get access to those extensions,
then, of course, your desktop doesn't work for you.
So we ended up having to do more work on enabling
the binary driver for X Wayland.
But we believe we have the infrastructure now.
But, of course, NVIDIA now need to find the time
to do their testing and validation of it
so that we can get the driver out that supports it perfectly.
I'm amazed that we're even talking about this stage,
though, because it does mean at some point
there will be a point in time when NVIDIA binaries worked
with Wayland and when it didn't.
There'll be a marker in Linux's history.
There's going to be new Linux users who never had
to go through this.
We're right.
People will adopt Linux and never
have had to worry about this.
And I put a big asterisk next to my it works perfectly.
It works perfectly in the right scenarios.
And I think that's where Wayland's at right now.
I had to switch a couple of apps that I used,
drop a couple of extensions.
And I happen to already be switching over to Firefox
anyway, so it sort of worked perfectly for that.
And on the right hardware, like my ThinkPad with Intel
graphics or when I hook up my AMD eGPU, it's great.
On my machine upstairs, it's a little more tricky.
So there's some scenarios where it's not perfect yet,
but it showed me that everything that's
sort of been promised for so many years
is really beginning to solidify.
It's not 100% yet, but it really is beginning to get there.
I mean, I think there's a lot of sort of unsung heroes here.
I mean, there's a guy called Olivier Ferdinand on our team
who I think is mostly actually known as being
the founder of XFC, but he's been doing, for instance,
an absolutely stellar job the last few years just keeping
track of every wayland bug that has come in and making sure
we fix it and then figure out what is a corner case
triggering this issue.
And it's sort of like, not the person we might sort of see
in the headlines, but definitely some of those people
who've been doing so much legwork and just making sure
it becomes a solid experience for more and more people.
And even things that might feel obscure,
that we actually get them resolved.
And I mean, that blog post I mentioned I wrote,
I mean, the one feature, for instance, he worked on there,
which I mentioned was that he made sure that we got
some of these accessibility features brought into wayland
that we used to have and even improved them
at the same point.
So, you know, some disabled users have trouble
with mouse clicks.
So there's this feature in, you can turn on that
when you just hover your mouse over something,
it will, after a certain amount of time, click automatically.
And this used to be like this timer up in the shell,
but what he did was he actually turned it
into the cursor itself.
Now you see this little almost cake diagram
sort of swirl up as it takes up before it does the click.
Yeah, it looks really nice.
There's a screenshot in the blog post,
which we will link in the show notes.
Thank you for mentioning that,
because I think that is the biggest story
about free software in general,
is there's so many unsung heroes behind the scenes
and some of them work on things that we use and love
every single day, or some of them are solely responsible
for making this free software accessible
for an entire category of users.
And that's such a massive impact.
And you're right, they don't make headlines.
And that's something I'd love to try to change somehow.
That could be a goal of mine for 2020,
new year's resolution.
I mean, there's all these efforts that I might not see at all
or have any idea of being worked on,
but turns out are crucial.
Remarkable too.
Well, Christian, thank you.
And thank you to the entire team for all of this.
We've been enjoying Fedora 31
and we're looking forward to future releases too.
It's been a solid maintenance release
and you can see things are getting lined up
for the next couple of releases.
I think it's great.
It's really great to see this nice steady progress happening.
I know and I can't quite even describe it,
but over and over, I'm enjoying using Fedora 31.
It's just a solid release.
Next week, we're gonna dive into what we love
about our favorite distributions.
Like what are the things,
the core things we really love about them
and then what's the one thing we would change
to make them perfect.
So we'll talk more about that.
I, in the meantime, will give you something
you can fix immediately about Fedora.
I will have a couple of links in the show notes.
Let's try to add them in order of priority.
So I will start with better looking fonts
for Fedora as the first link.
If you only do one thing, do the suggestions in that link.
Then there's a second link where there's a,
I love the Friya code or Fira code.
Fira?
Fira?
Yeah, that's probably how you say it, Wes.
Thank you.
Either way, it's a handsome font.
So go get that.
And then the last one, if you really wanna go into deep
about the sad state of font rendering,
not just on Linux, my friends, but on all platforms,
there is an article that really nerds out on this.
It's a fantastic read if you're at all interested
in typography or fonts.
And the nice thing is it wraps with a few recommendations
on what you can do to fix it.
So definitely worth a read if you're running,
well, really actually out of the gate, out of the box,
the Ubuntu distributions are generally the better off
on this particular area, but if you're rolling your own,
setting up Arch or Gen2 or you're on Fedora
or some of the other distributions,
they may not have chosen some of the font options
that make a difference.
So, and that last link, that last link actually explains
why fixing your fonts matters.
It's worth looking into.
It's worth the effort, yeah.
That's the Westpain recommendation.
Well, Wes, before we run,
let's just do a super quick mention of the pick
because it's really a pick of the week
that's just for you and only for you.
And that is called Kexec Boot.
This is a project that we have linked in the show notes
that is a nice Linux bootloader implementation
based on Wes's favorite, Kexec.
Quick reminder, what's Kexec, Wes?
Okay, well, Kexec is a tool and a ability feature
of the Linux kernel that lets you load a new kernel
without having to reboot.
So you don't, the hardware doesn't have to go
through the reboot process.
You just jump right to the new kernel.
One could in theory be sitting here right now
and be running Kubuntu and Kexec into Fedora.
Yeah, exactly.
In theory.
You know, you can use it for all kinds of things
between rescue, that facility is used
for crash jump sometimes.
You can boot into a crash kernel
and then save that state off onto a file system somewhere.
So there's lots of things.
I use it for trying out new systems
because you don't have to go mucking about
with your bootloader.
You can just go jump into any old kernel and inner MFS.
As long as you point it to the right partition, it'll boot.
Nobody wants to muck.
So Kexec Boot is a neat project.
I'd actually not seen before,
but I got it installed and running today.
And it is just kind of what it says.
It's a bootloader for Kexec.
So it goes and talks to the kernel,
goes and finds out about all the partitions you have.
And then it tries to open them up, load them
and see if it has any boot entries.
And it's got a simple boot.cfg syntax.
You know, you kind of just say,
here's the kernel I want and a label
and here's the command line to append to the kernel.
And then instead of using, you know,
booting into it like a bootloader would do, it Kexecs.
That is neat.
But it's targeted to look like a real bootloader too.
So it opens up on a TTY
and it's got like a nice little graphical menu
and it'll list out the different kernels you have available.
So it opens up a new TTY on your existing distro
that you're running, your main distro.
Yeah.
And I mean, you probably want to use this at a level
because it's poking around with all the partitions.
Like, I don't know how nicely it'll play
with something that's up and running.
You probably want it at a level
where you haven't started all of your applications necessarily.
I know, Wes.
Hard shut down those things, close them all out.
Because it eventually just drops it all from memory
and then loads the new system, right?
Yeah, I mean, once you hit go,
you're thinking about everything you want working on.
I love it.
I love it.
And so it's a package that it installs
and then it just takes over TTY.
Yeah, and then it's got a nice little GUI
and you kind of select which kernel you want,
hit enter and there you go.
I'm going to break my system with this one, I think.
I love it.
I love it.
See, the nice part is you won't
because you didn't modify your bootloader.
So all you have to do is reboot
and you'll get back to where you started from.
Oh, challenge accepted there, sir.
Challenge accepted.
All right.
Well, go check out Mr. Martin Wimpress
over at the Ubuntu Podcast
because not only did he have that laptop review,
but there's just something every single week,
it turns out, that you could catch
over at ubuntupodcast.org.
Thanks for being here, Wimpy.
My pleasure.
And of course you can get more Dan.
Mr. Foray is one of three fantastic hosts
of the User Air Podcast.
So go check out User Air.
Thanks for being here, Dan.
Thank you.
No, no, no, no, no, no, no.
Thank you.
Also, a big thank you to Cassidy for coming here
and help us explaining what they're doing.
I think it's great.
I love it, Cassidy.
So glad you could make it too.
Thank you.
And thanks for having me.
Thank you, sir.
Stay a while and listen.
And Mr. Wes Payne, thank you for making it.
Indeed.
I should say, yeah, yeah.
Since episode 100, I don't think you've missed,
I mean, maybe you were traveling once or twice.
I've been traveling once or twice, but other than that.
So, I mean, you've probably been here
for like maybe minus two.
So thank you.
Not too shabby.
Check you out over at TechSnap.Systems
with Mr. Jim Salter talking benchmarks.
Oh, yeah.
You want to find about how slow or fast you just may be
and how you might measure it, check out TechSnap 415.
You need to know.
You just need to know where you're at.
I mean, I think with some of the tips in that episode,
you might be doing some benchmarks before long.
Oh, yeah.
Oh, yeah.
Oh, yeah.
Oh, yeah, definitely.
I love that kind of stuff.
Go check out the network at Jupiter Signal.
LinuxUnplugged.com is our website.
LinuxUnplugged.com slash 326 is the URL for all of our show
notes this week.
And slash subscribe for that if you want to get, you know,
maybe an RSS feed or something.
Thanks for being here.
We won't be here next Tuesday.
So there's that.
But there will be a show.
Yes, thank you.
Yes.
We already explained this, Wes.
Do you have a good Halloween?
Anything happen to your neck of the woods?
My neighbor's door was open for a weirdly long time.
So I just moved, and I've not met this particular neighbor.
But their door, I mean, like where I'm on the left
in the hallway, he's like straight through.
So I sort of, I'd taken a small nap, let's say,
got up at like 11 PM before doing some stuff.
Went to go take the dogs out, and the door's just open.
It's just hanging open.
And then I woke up the next morning, and it's still open.
They had a Halloween party is what they had.
I think they had too much Halloween.
A little candy rambunctious.
I did my Halloween the weekend before Halloween.
Yeah, that's nice.
Can't get it over with early.
Yeah, it was pretty uneventful.
Can I tell you the most American thing
that I've seen since I emigrated?
Yes, please.
There was a family on my street trick or treating
in a golf cart.
Well, you don't want to have to burn off
of those candy calories.
You don't want to get exercise.
You've been working hard for those candy calories.
Plus, think about how much more candy you can carry back,
because your arms are too weak to really carry it otherwise.
Yeah, you need that hauling capacity.
It was amazing.
And the driver was holding a big gulp
just to complete the picture.
Stop it.
Are you serious?
No.
Well, if you get it concentrated enough,
you can just dissolve the candy right in it.
I bet you it's booze.
I bet you it's booze in a big gulp.
We did get Jell-O shots.
That was cool.
We got handed Jell-O shots.
Oh, that's nice.
Yeah, that was pretty great.
That's really adult candy anyway.
Yeah, for sure.
Wyatt wrote, hope you guys had a happy Halloween.
I know I did while I was trying to get my local Sampasher
to automatically mount on my machine this morning.
A Linux kernel CVE stuck out like a sore thumb
while I was viewing dMessage.
Dun, dun, dun.
All right, so go vote JBtitles.com.
Go pick our title while I read the rest of this.
You can get the full information and links
the whole CVE will have in the show notes.
To summarize, this bug affects AMD, Centaur,
and other non-Intel processors except for the Intel Xeon PHI
family and a range of Intel Atom processors.
You have to disable simultaneous multi-threading SMT
to mitigate this bug.
Enabling the mitigation will cripple any hypervisors
you are running under the effect of processors.
My guess, the CVE comes out of the Spectre kerfuffle
that happened in January.
Unfortunately, when I read dMessage,
I didn't get my Sampasher to mount on boot,
so I don't get Sampasher's.
Regards, Wyatt.
What a weird series.
Because of this whole Intel Spectre mitigation stuff,
he can't get his Samba stuff to mount.
Didn't Jim just hit a weird series of bugs
with WireGuard and the kernel?
Oh, yeah, that was an AMD bug given not so random numbers.
Yeah, that's what WireGuard was not so happy with.
It's just sometimes the weirdest esoteric problems
manifest in a way that.
Well, we have so many different levels.
Everything's so complicated.
A violation of one of your assumptions way down below
makes weird stuff happen.
Right, assumptions that are happening before you even
know things are happening.
Right.
Well, there we have it.
