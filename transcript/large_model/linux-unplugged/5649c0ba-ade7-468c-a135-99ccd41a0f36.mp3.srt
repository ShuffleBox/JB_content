1
00:00:00,000 --> 00:00:02,780
There hasn't been a version since March 11th, 2017,

2
00:00:02,780 --> 00:00:05,840
but today, well, a couple days ago,

3
00:00:05,840 --> 00:00:10,720
WindowMaker 0.95.9 was released.

4
00:00:10,720 --> 00:00:13,080
And you remember Next, that Next desktop?

5
00:00:13,080 --> 00:00:16,360
Yeah, I mean, from ages ago, before Apple got good?

6
00:00:16,360 --> 00:00:19,080
Yeah.

7
00:00:19,080 --> 00:00:21,160
Gigi, you were just shopping Next boxes, weren't you?

8
00:00:21,160 --> 00:00:25,040
Yeah, so I was, after reading the new update

9
00:00:25,040 --> 00:00:27,560
for WindowMaker, which, when are they gonna hit 1.0?

10
00:00:27,560 --> 00:00:28,700
That's gonna be an amazing release.

11
00:00:28,700 --> 00:00:31,760
But I was looking at old Next machines

12
00:00:31,760 --> 00:00:37,200
and $800 on eBay for a full Next station right now.

13
00:00:37,200 --> 00:00:39,920
Did you catch the age or the vintage of that machine?

14
00:00:39,920 --> 00:00:42,960
1991 was the release date of that machine.

15
00:00:42,960 --> 00:00:48,800
25 megahertz, Motorola 80, I forgot the exact CPU,

16
00:00:48,800 --> 00:00:50,840
but yeah, 25 megahertz.

17
00:00:50,840 --> 00:00:52,200
25 megahertz.

18
00:00:52,200 --> 00:00:56,000
Originally sold for $5,000.

19
00:00:56,000 --> 00:00:57,120
That's a steal of a deal, man.

20
00:00:57,120 --> 00:00:58,040
I think you gotta get it.

21
00:00:58,040 --> 00:00:59,920
I wonder if you could run Linux on that thing.

22
00:00:59,920 --> 00:01:10,920
Oh, hello, friends, and welcome into your weekly Linux talk

23
00:01:10,920 --> 00:01:11,420
show.

24
00:01:11,420 --> 00:01:12,080
My name is Chris.

25
00:01:12,080 --> 00:01:12,840
My name is Wes.

26
00:01:12,840 --> 00:01:13,600
Hey there, Wes.

27
00:01:13,600 --> 00:01:14,200
Hello.

28
00:01:14,200 --> 00:01:15,700
We have a really fun episode today.

29
00:01:15,700 --> 00:01:19,880
We're hanging out with some killers, some memory killers.

30
00:01:19,880 --> 00:01:22,400
So you've probably heard the term out of memory manager,

31
00:01:22,400 --> 00:01:24,980
and you've probably also heard that Linux isn't always

32
00:01:24,980 --> 00:01:27,200
that great in a low memory situation.

33
00:01:27,200 --> 00:01:28,840
And you might wonder why, because one

34
00:01:28,840 --> 00:01:30,800
of the very first things I learned about Linux

35
00:01:30,800 --> 00:01:33,180
is that kernel will start to kill processes to survive,

36
00:01:33,180 --> 00:01:34,960
and I thought that was so cool.

37
00:01:34,960 --> 00:01:36,920
But it seems like it's used so sparingly.

38
00:01:36,920 --> 00:01:39,360
And if you're on the desktop and you run out of memory,

39
00:01:39,360 --> 00:01:42,760
you get in a 10% memory zone, you'll

40
00:01:42,760 --> 00:01:45,320
notice that your desktop just starts to thrash

41
00:01:45,320 --> 00:01:48,640
and sometimes never really fully recovers until you reboot.

42
00:01:48,640 --> 00:01:50,840
Yeah, I've certainly been there, right?

43
00:01:50,840 --> 00:01:52,780
You see the mouse move every once in a while,

44
00:01:52,780 --> 00:01:55,480
but ultimately you just have to hold the power button down.

45
00:01:55,480 --> 00:01:57,400
And you're thinking, I'm sitting here

46
00:01:57,400 --> 00:02:00,880
on a supercomputer-grade operating system,

47
00:02:00,880 --> 00:02:02,040
and this is happening.

48
00:02:02,040 --> 00:02:03,400
What the heck?

49
00:02:03,400 --> 00:02:06,520
Well, one of the first projects to try to solve this

50
00:02:06,520 --> 00:02:08,960
will be Fedora, on the desktop at least.

51
00:02:08,960 --> 00:02:11,040
There's lots of solutions, but Fedora

52
00:02:11,040 --> 00:02:13,720
is one of the first distros to ship something

53
00:02:13,720 --> 00:02:17,780
enabled by default. It's called Early Out of Memory Manager,

54
00:02:17,780 --> 00:02:19,520
and we'll talk about it in a little bit.

55
00:02:19,520 --> 00:02:23,880
And we've set up two boxes, a Fedora 31 box and a Fedora 32

56
00:02:23,880 --> 00:02:25,240
preview box.

57
00:02:25,240 --> 00:02:27,680
We're going to slam them into low memory conditions,

58
00:02:27,680 --> 00:02:30,200
absolutely punish them, and we'll

59
00:02:30,200 --> 00:02:33,560
show you how Fedora 32 handles that situation a lot

60
00:02:33,560 --> 00:02:36,120
better than 31 does.

61
00:02:36,120 --> 00:02:37,240
It's kind of exciting.

62
00:02:37,240 --> 00:02:37,800
You like this?

63
00:02:37,800 --> 00:02:39,240
This is a real-world improvement,

64
00:02:39,240 --> 00:02:42,000
and the nice part is it's all enabled by default in 32,

65
00:02:42,000 --> 00:02:43,160
so you don't have to do anything.

66
00:02:43,160 --> 00:02:43,760
Nope.

67
00:02:43,760 --> 00:02:46,960
And so I loaded up a 31 machine over here.

68
00:02:46,960 --> 00:02:49,240
Wes has a 32 machine over there.

69
00:02:49,240 --> 00:02:52,000
We've come up with the same way to stress them at the same time,

70
00:02:52,000 --> 00:02:53,760
and then it'll just be a versus, and we'll

71
00:02:53,760 --> 00:02:55,200
see how 32 and 31 compare.

72
00:02:55,200 --> 00:02:56,680
I know which one I'd rather have.

73
00:02:56,680 --> 00:02:57,720
That'll be in a little bit.

74
00:02:57,720 --> 00:03:00,440
We'll also have some community news and some housekeeping,

75
00:03:00,440 --> 00:03:02,160
but before we get to any of that,

76
00:03:02,160 --> 00:03:03,920
I'm going to say hello to Alex and Cheezy.

77
00:03:03,920 --> 00:03:05,200
How are you guys doing?

78
00:03:05,200 --> 00:03:06,560
Hello, internet friends.

79
00:03:06,560 --> 00:03:07,080
How are you?

80
00:03:07,080 --> 00:03:08,240
Hello, hello.

81
00:03:08,240 --> 00:03:09,960
I forgot my water, Wes.

82
00:03:09,960 --> 00:03:10,960
Wes, I forgot.

83
00:03:10,960 --> 00:03:13,800
Wes, will you do me a favor and grab my water?

84
00:03:13,800 --> 00:03:14,520
Thank you.

85
00:03:14,520 --> 00:03:15,960
And while you do that, I will say

86
00:03:15,960 --> 00:03:18,000
time-appropriate greetings, Virtual Lug.

87
00:03:18,000 --> 00:03:19,160
Hello, Mumble Room.

88
00:03:19,160 --> 00:03:20,560
Hello, Mumble Room.

89
00:03:20,560 --> 00:03:21,060
Hey, hey.

90
00:03:21,060 --> 00:03:21,560
Hello.

91
00:03:21,560 --> 00:03:22,680
Bienvenido.

92
00:03:22,680 --> 00:03:23,360
Hello.

93
00:03:23,360 --> 00:03:23,880
Hello.

94
00:03:23,880 --> 00:03:27,040
I hope you stay.

95
00:03:27,040 --> 00:03:27,640
Got it in there.

96
00:03:27,640 --> 00:03:31,280
We got 21 people on air today, and 35 people total.

97
00:03:31,280 --> 00:03:32,800
We'll sum up in the Quiet Listening.

98
00:03:32,800 --> 00:03:33,920
Thank you, Wes.

99
00:03:33,920 --> 00:03:35,120
I got to drink the water during the show,

100
00:03:35,120 --> 00:03:36,640
or else my mouth sounds really annoying,

101
00:03:36,640 --> 00:03:38,800
and then people have to listen to me smacking my lips.

102
00:03:38,800 --> 00:03:39,920
And Joe will complain.

103
00:03:39,920 --> 00:03:41,080
There's that, too.

104
00:03:41,080 --> 00:03:44,160
All right, well, before we get to abusing our Fedora installs,

105
00:03:44,160 --> 00:03:46,160
let's cover some community news.

106
00:03:46,160 --> 00:03:49,360
Besides WindowMaker, there are other things happening.

107
00:03:49,360 --> 00:03:52,320
Microsoft has announced essentially its own version

108
00:03:52,320 --> 00:03:53,660
of SE Linux.

109
00:03:53,660 --> 00:03:56,600
You're probably familiar with the LSM, the Linux Security

110
00:03:56,600 --> 00:03:57,100
Module.

111
00:03:57,100 --> 00:03:59,440
You have things like AppArmor, SE Linux.

112
00:03:59,440 --> 00:04:01,960
And there's others, actually, I wasn't really aware of.

113
00:04:01,960 --> 00:04:03,480
But like everything in Linux.

114
00:04:03,480 --> 00:04:04,600
Once you make it a module, people

115
00:04:04,600 --> 00:04:05,760
are going to write modules.

116
00:04:05,760 --> 00:04:07,840
And there's multiple versions of something.

117
00:04:07,840 --> 00:04:12,080
So Microsoft's is named the Integrity Policy Enforcement,

118
00:04:12,080 --> 00:04:15,020
or IPE for short, as they like to say.

119
00:04:15,020 --> 00:04:17,360
And it is indeed a full-fledged LSM,

120
00:04:17,360 --> 00:04:19,440
which is an optional add-on for Linux kernels.

121
00:04:19,440 --> 00:04:21,160
It's not necessarily mandatory.

122
00:04:21,160 --> 00:04:23,080
It's if you want these security features.

123
00:04:23,080 --> 00:04:26,040
According to the docs just released on Monday,

124
00:04:26,040 --> 00:04:29,360
IPE is Microsoft's attempt to solve the code integrity

125
00:04:29,360 --> 00:04:31,080
problem for Linux.

126
00:04:31,080 --> 00:04:34,760
Mostly because they deploy a whole bunch of Linux on Azure,

127
00:04:34,760 --> 00:04:36,560
they want to make sure it's secure.

128
00:04:36,560 --> 00:04:37,520
Go figure.

129
00:04:37,520 --> 00:04:39,920
So on Linux systems where IPE is enabled,

130
00:04:39,920 --> 00:04:43,200
system administrators can create a list of binaries

131
00:04:43,200 --> 00:04:44,760
that are allowed to execute.

132
00:04:44,760 --> 00:04:47,520
And then they can add verification attributes

133
00:04:47,520 --> 00:04:49,880
to the kernel that can check each binary before allowing

134
00:04:49,880 --> 00:04:50,360
it to run.

135
00:04:50,360 --> 00:04:53,160
Little things it needs to make sure of per binary.

136
00:04:53,160 --> 00:04:55,160
And if the binary has been altered by an attacker,

137
00:04:55,160 --> 00:04:57,560
well, then IPE can just block the execution

138
00:04:57,560 --> 00:04:59,720
of that malicious code altogether.

139
00:04:59,720 --> 00:05:01,840
If that sounds like a lot of hoops to jump through,

140
00:05:01,840 --> 00:05:04,320
well, Microsoft says IPE is not intended

141
00:05:04,320 --> 00:05:06,040
for general purpose computing.

142
00:05:06,040 --> 00:05:08,920
The IPE LSM, say that twice, was designed

143
00:05:08,920 --> 00:05:12,480
for a very specific use case where security is paramount.

144
00:05:12,480 --> 00:05:14,920
And administrators need to be in full control

145
00:05:14,920 --> 00:05:16,260
of what runs on their systems.

146
00:05:16,260 --> 00:05:17,840
And that's where you want to start

147
00:05:17,840 --> 00:05:20,600
monitoring every single executable that runs.

148
00:05:20,600 --> 00:05:23,440
Examples of this include things like embedded systems, maybe

149
00:05:23,440 --> 00:05:26,120
like your network firewall running in Azure,

150
00:05:26,120 --> 00:05:28,780
or Linux servers running strict and immutable configurations

151
00:05:28,780 --> 00:05:30,720
where you need to verify and make sure really

152
00:05:30,720 --> 00:05:32,920
that nothing changes once you've deployed it.

153
00:05:32,920 --> 00:05:35,520
I have pretty good faith that Microsoft could pull something

154
00:05:35,520 --> 00:05:37,240
like this off overall.

155
00:05:37,240 --> 00:05:40,240
And like SE Linux, they have a permissive mode

156
00:05:40,240 --> 00:05:41,240
and an enforce mode.

157
00:05:41,240 --> 00:05:44,200
So you could put it in permissive, log what breaks,

158
00:05:44,200 --> 00:05:46,840
and then try to fix that before you turn it on.

159
00:05:46,840 --> 00:05:49,640
I'm curious to what just your off the top reaction

160
00:05:49,640 --> 00:05:52,040
is to Microsoft creating essentially an SE Linux

161
00:05:52,040 --> 00:05:52,840
alternative.

162
00:05:52,840 --> 00:05:55,240
Yeah, it's interesting to see them working at scale

163
00:05:55,240 --> 00:05:55,760
like this.

164
00:05:55,760 --> 00:05:58,320
I mean, they have a lot of experience with enterprises

165
00:05:58,320 --> 00:05:59,680
and also working with governments

166
00:05:59,680 --> 00:06:01,400
where you have a lot of strict controls

167
00:06:01,400 --> 00:06:03,160
that you have to meet.

168
00:06:03,160 --> 00:06:04,560
Clearly, none of the other systems

169
00:06:04,560 --> 00:06:07,960
allowed them to really target exactly the certain use cases

170
00:06:07,960 --> 00:06:09,320
and scenarios that they had.

171
00:06:09,320 --> 00:06:12,400
So it's kind of great to see them contributing this backup

172
00:06:12,400 --> 00:06:14,280
in a way that surely other systems are

173
00:06:14,280 --> 00:06:15,100
going to be able to use.

174
00:06:15,100 --> 00:06:15,640
Right.

175
00:06:15,640 --> 00:06:16,640
I'm going to go with that.

176
00:06:16,640 --> 00:06:18,960
But I really don't know what to make of it.

177
00:06:18,960 --> 00:06:20,680
I hate the not invented here stuff.

178
00:06:20,680 --> 00:06:21,760
But at the same time, I have faith

179
00:06:21,760 --> 00:06:22,960
that Microsoft is probably pretty

180
00:06:22,960 --> 00:06:24,600
familiar with their deployment scenarios

181
00:06:24,600 --> 00:06:26,160
and deems this necessary.

182
00:06:26,160 --> 00:06:27,540
And they're not going to just go off and create something

183
00:06:27,540 --> 00:06:28,840
that's not necessary.

184
00:06:28,840 --> 00:06:31,220
And I mean, we already had multiple versions

185
00:06:31,220 --> 00:06:32,920
right of Map Armor and SE Linux.

186
00:06:32,920 --> 00:06:36,640
So you weren't really going to get your one true tool anyway.

187
00:06:36,640 --> 00:06:40,080
I took a kind of a quick look at what

188
00:06:40,080 --> 00:06:43,600
IPE is designed around.

189
00:06:43,600 --> 00:06:47,720
It seems to be very much oriented around.

190
00:06:47,720 --> 00:06:50,120
Your system essentially has to be immutable.

191
00:06:50,120 --> 00:06:53,920
It has to be paired with something like DM Verity.

192
00:06:53,920 --> 00:06:57,720
It has a lot of specific things that

193
00:06:57,720 --> 00:07:00,840
are very useful for embedded devices and things like that.

194
00:07:00,840 --> 00:07:02,880
But I also think that this is likely

195
00:07:02,880 --> 00:07:06,960
going to be structured as what's known as a minor LSM that

196
00:07:06,960 --> 00:07:10,000
can be stacked on top of a so-called major LSM,

197
00:07:10,000 --> 00:07:13,240
like SE Linux, for example, is a major LSM.

198
00:07:13,240 --> 00:07:17,440
So in the LSM framework, there are

199
00:07:17,440 --> 00:07:19,920
limited stacking capabilities.

200
00:07:19,920 --> 00:07:23,120
I know that Canonical has been pushing very hard for making

201
00:07:23,120 --> 00:07:25,640
what are so-called major LSMs to stack,

202
00:07:25,640 --> 00:07:28,240
like App Armor and SE Linux stacking on each other,

203
00:07:28,240 --> 00:07:31,060
aside of the complexity disaster that I personally

204
00:07:31,060 --> 00:07:32,320
think that will cause.

205
00:07:32,320 --> 00:07:36,520
And I also don't think anyone is going to reasonably be OK

206
00:07:36,520 --> 00:07:38,920
with such a configuration ever existing in production

207
00:07:38,920 --> 00:07:43,920
because it would make it a total nightmare to debug and analyze.

208
00:07:43,920 --> 00:07:47,440
Minor LSM stacking on top of major LSMs

209
00:07:47,440 --> 00:07:51,760
is actually quite common, like Yama on top of SE Linux

210
00:07:51,760 --> 00:07:54,680
or SMAC or App Armor and things like that.

211
00:07:54,680 --> 00:07:57,880
So I think we will see that things that

212
00:07:57,880 --> 00:08:00,600
need to exist within the LSM framework that support

213
00:08:00,600 --> 00:08:05,160
very specific use cases, if they aren't considered quote unquote

214
00:08:05,160 --> 00:08:09,120
major and are considered complementary to the major LSMs,

215
00:08:09,120 --> 00:08:12,520
which at this point are SE Linux, App Armor, and SMAC,

216
00:08:12,520 --> 00:08:16,080
we'll probably see this be used actually

217
00:08:16,080 --> 00:08:18,240
in more than just the embedded space.

218
00:08:18,240 --> 00:08:21,280
It seems like a pretty streamlined, minimal approach

219
00:08:21,280 --> 00:08:22,640
right now as well.

220
00:08:22,640 --> 00:08:24,880
So you could see adoption there.

221
00:08:24,880 --> 00:08:28,580
I want to just bring up another story that is probably somewhat

222
00:08:28,580 --> 00:08:29,740
applicable to our audience.

223
00:08:29,740 --> 00:08:31,400
This isn't getting a lot of coverage.

224
00:08:31,400 --> 00:08:33,280
It's getting covered in a couple of places.

225
00:08:33,280 --> 00:08:36,920
I'm hoping WRT has a pretty important security advisory.

226
00:08:36,920 --> 00:08:38,840
Essentially, the short version is

227
00:08:38,840 --> 00:08:41,280
there was a flaw that caused the package manager to ignore

228
00:08:41,280 --> 00:08:46,480
the SHA256 checksums embedded in the signed repository index.

229
00:08:46,480 --> 00:08:48,520
In other words, effectively bypassing

230
00:08:48,520 --> 00:08:52,040
integrity checking of the downloaded.ipk artifacts.

231
00:08:52,040 --> 00:08:53,280
Not good.

232
00:08:53,280 --> 00:08:55,160
Obviously, very easy for an attacker

233
00:08:55,160 --> 00:08:58,480
to exploit that if they could just put up a bogus package.

234
00:08:58,480 --> 00:09:00,440
So worth an update.

235
00:09:00,440 --> 00:09:02,800
Now I wanted to bring it up here because I'm

236
00:09:02,800 --> 00:09:06,400
curious if the Mumba Room or Cheese or Alex or yourself,

237
00:09:06,400 --> 00:09:09,120
Wes, if you guys are still using OpenWRT,

238
00:09:09,120 --> 00:09:13,640
if you're using something else, is OpenWRT still the project

239
00:09:13,640 --> 00:09:15,920
to go with for these kind of jobs?

240
00:09:15,920 --> 00:09:18,760
Somebody want to educate me because just kind of re-looking

241
00:09:18,760 --> 00:09:20,480
at my setup at home.

242
00:09:20,480 --> 00:09:22,560
And I would love to have a Linux operating system

243
00:09:22,560 --> 00:09:25,760
that I could put on a piece of hardware.

244
00:09:25,760 --> 00:09:28,040
So I'd love to not have to run a full-fledged machine

245
00:09:28,040 --> 00:09:29,640
if I can avoid it.

246
00:09:29,640 --> 00:09:31,600
And I'd just like to have a dynamic DNS server.

247
00:09:31,600 --> 00:09:33,520
I'd like to have a little firewall capability.

248
00:09:33,520 --> 00:09:38,440
I'd love to have a WireGuard VPN UI.

249
00:09:38,440 --> 00:09:40,080
Is OpenWRT the way to go?

250
00:09:40,080 --> 00:09:43,420
The juggernaut in this space is PFSense.

251
00:09:43,420 --> 00:09:47,780
And I think most people will kind of make that trade-off

252
00:09:47,780 --> 00:09:49,120
that, OK, it's not Linux.

253
00:09:49,120 --> 00:09:52,120
It's BSD instead, based on.

254
00:09:52,120 --> 00:09:55,240
But it's been the go-to for people

255
00:09:55,240 --> 00:09:57,120
looking to solve that and scratch that itch

256
00:09:57,120 --> 00:09:58,640
that you've just mentioned.

257
00:09:58,640 --> 00:10:00,840
You want something that's open source,

258
00:10:00,840 --> 00:10:03,920
is free, is really flexible, has all the power

259
00:10:03,920 --> 00:10:06,840
of the enterprise, can do multiple WANs.

260
00:10:06,840 --> 00:10:08,800
It can do dynamic DNS.

261
00:10:08,800 --> 00:10:11,760
Now, PFSense can't yet do WireGuard,

262
00:10:11,760 --> 00:10:13,600
which actually about two months ago

263
00:10:13,600 --> 00:10:17,200
led me to switch to something called OpenSense.

264
00:10:17,200 --> 00:10:19,080
There was a whole bunch of licensing drama,

265
00:10:19,080 --> 00:10:23,000
which Wes and Jim covered in great detail on TechSnap

266
00:10:23,000 --> 00:10:25,760
around PFSense, which led OpenSense

267
00:10:25,760 --> 00:10:27,760
to come into existence.

268
00:10:27,760 --> 00:10:31,400
And I've actually found it to be quite a nice little upgrade.

269
00:10:31,400 --> 00:10:33,680
I think we'll talk more about that on self-hosted, too,

270
00:10:33,680 --> 00:10:35,240
because I will try that one.

271
00:10:35,240 --> 00:10:37,800
There are various similar sort of solutions based on Linux,

272
00:10:37,800 --> 00:10:40,120
like IPFire is one that comes to mind.

273
00:10:40,120 --> 00:10:42,200
But I just roll myself on Linux.

274
00:10:42,200 --> 00:10:43,840
I know you know how to run DNS mask,

275
00:10:43,840 --> 00:10:45,520
so you can get a lot of that stuff

276
00:10:45,520 --> 00:10:48,360
if you're willing to set up the config files yourself.

277
00:10:48,360 --> 00:10:50,040
So legitimately have been considering that.

278
00:10:50,040 --> 00:10:51,480
It's less work than you think.

279
00:10:51,480 --> 00:10:53,080
I know a lot of people that just have

280
00:10:53,080 --> 00:10:56,700
a bunch of random IP tables rules on their Linux box,

281
00:10:56,700 --> 00:10:59,560
and then they say, yeah, that's good enough to be my firewall.

282
00:10:59,560 --> 00:11:02,560
Personally, I don't object to having a firewall with a UI

283
00:11:02,560 --> 00:11:04,480
so I can see what is easily available

284
00:11:04,480 --> 00:11:07,200
and what isn't available.

285
00:11:07,200 --> 00:11:09,880
But Brent and I actually recorded an extras not long ago

286
00:11:09,880 --> 00:11:12,640
talking about his setup and how you separate Wi-Fi

287
00:11:12,640 --> 00:11:15,120
from the firewall, all that kind of stuff.

288
00:11:15,120 --> 00:11:18,400
And he's still running, I think, Tomato

289
00:11:18,400 --> 00:11:23,700
as a version of DDWRT on some 10-year-old embedded thing.

290
00:11:23,700 --> 00:11:25,080
So something that Alex and I want

291
00:11:25,080 --> 00:11:28,040
to focus on for a couple of episodes in Self-Hosted,

292
00:11:28,040 --> 00:11:29,480
starting with next week's episode,

293
00:11:29,480 --> 00:11:33,400
is some of the basics of fundamental good networking,

294
00:11:33,400 --> 00:11:35,240
fundamentally getting good, strong Wi-Fi

295
00:11:35,240 --> 00:11:37,440
throughout your entire place, that kind of stuff.

296
00:11:37,440 --> 00:11:38,680
So check out Self-Hosted for that.

297
00:11:38,680 --> 00:11:41,600
Now, Colonel, you're a daily driver, if you'll allow it,

298
00:11:41,600 --> 00:11:43,440
of OpenWRT?

299
00:11:43,440 --> 00:11:48,160
Yeah, so I run the OpenWRT for friends and family,

300
00:11:48,160 --> 00:11:51,720
because trying to slot in an actual real router

301
00:11:51,720 --> 00:11:54,720
or something like a PF Sense scares the dickens out of them.

302
00:11:54,720 --> 00:12:00,060
They want that little consumer-grade all-in-one unit.

303
00:12:00,060 --> 00:12:02,460
And so for them, I put that on there

304
00:12:02,460 --> 00:12:04,400
because it's more secure and easier

305
00:12:04,400 --> 00:12:08,160
to manage than half a dozen different types of web

306
00:12:08,160 --> 00:12:09,440
UIs and all this other.

307
00:12:09,440 --> 00:12:11,880
And they just like it better.

308
00:12:11,880 --> 00:12:14,000
One of the things that I think you have to consider

309
00:12:14,000 --> 00:12:19,120
is that a lot of these smaller devices and less power-hungry

310
00:12:19,120 --> 00:12:24,640
devices are going to be running an embedded OpenWRT, DDWRT

311
00:12:24,640 --> 00:12:29,600
tomato or various different projects out there.

312
00:12:29,600 --> 00:12:35,000
In fact, the GL Inet Slate that you have runs OpenWRT

313
00:12:35,000 --> 00:12:38,280
and, as you know, has WireGuard built in.

314
00:12:38,280 --> 00:12:43,080
The GL Inet, I think it's the MT300 that I have,

315
00:12:43,080 --> 00:12:48,400
it's the baby brother to yours, also runs OpenWRT.

316
00:12:48,400 --> 00:12:51,960
And a lot of the Netgear Nighthawk routers

317
00:12:51,960 --> 00:12:55,560
support OpenWRT straight down the box.

318
00:12:55,560 --> 00:12:56,080
Oh, really?

319
00:12:56,080 --> 00:12:57,920
I didn't know that.

320
00:12:57,920 --> 00:13:01,000
I think it's one of those things that depends on the level

321
00:13:01,000 --> 00:13:02,080
of security.

322
00:13:02,080 --> 00:13:04,040
I mean, the way that I've always felt about it

323
00:13:04,040 --> 00:13:08,280
is that if you really want all the configurations, everything

324
00:13:08,280 --> 00:13:10,400
at your fingertips, then go with PFSense.

325
00:13:10,400 --> 00:13:13,800
If you want something that's a little more consumer-grade

326
00:13:13,800 --> 00:13:18,600
nicer generally than your manufacturer's UI,

327
00:13:18,600 --> 00:13:22,200
then go with something like OpenWRT.

328
00:13:22,200 --> 00:13:23,520
And you get a slew of packages.

329
00:13:23,520 --> 00:13:25,200
There's a ton of stuff available there.

330
00:13:25,200 --> 00:13:29,400
I mean, if you wanted to set up an IRC server on your router,

331
00:13:29,400 --> 00:13:30,040
you could.

332
00:13:30,040 --> 00:13:31,840
Well, like you said, I have it on the Slate.

333
00:13:31,840 --> 00:13:35,960
And I really just think it's the perfect spot for OpenWRT

334
00:13:35,960 --> 00:13:40,400
because they have provided a bit of a skin average user

335
00:13:40,400 --> 00:13:43,600
GUI that just shows you if you're on a Wi-Fi connection,

336
00:13:43,600 --> 00:13:45,640
if you're on a Wi-Fi, if you're repeating LAN.

337
00:13:45,640 --> 00:13:47,680
Because it's kind of designed as a travel router

338
00:13:47,680 --> 00:13:50,080
that you'd take with you to a hotel or something.

339
00:13:50,080 --> 00:13:52,200
And so it has a really nice GUI that just gives you

340
00:13:52,200 --> 00:13:54,120
that status and where you can program

341
00:13:54,120 --> 00:13:55,960
what the button on the side of the case does.

342
00:13:55,960 --> 00:13:57,920
And you can give it all these kinds of functions

343
00:13:57,920 --> 00:13:59,920
like initiate and close a WireGuard VPN

344
00:13:59,920 --> 00:14:01,880
by just clicking a button on the side of the case.

345
00:14:01,880 --> 00:14:04,560
You can assign it to a function, which is neat.

346
00:14:04,560 --> 00:14:07,320
Then they have the advanced UI, where you can actually

347
00:14:07,320 --> 00:14:11,680
manage interfaces and see data about what's being transferred.

348
00:14:11,680 --> 00:14:14,480
And then on top of that, you can also terminal into it.

349
00:14:14,480 --> 00:14:17,240
They have a web UI, or you can just turn on SSH.

350
00:14:17,240 --> 00:14:19,760
And then, yeah, you're essentially on a Linux system.

351
00:14:19,760 --> 00:14:20,760
It does feel limited.

352
00:14:20,760 --> 00:14:22,400
It does feel like I would like something

353
00:14:22,400 --> 00:14:23,600
a little more advanced.

354
00:14:23,600 --> 00:14:26,880
But at the same time, I was concerned

355
00:14:26,880 --> 00:14:27,980
I would not be able to use the Slate

356
00:14:27,980 --> 00:14:30,400
as a full-time, quote unquote, router.

357
00:14:30,400 --> 00:14:31,920
But it has been totally fine.

358
00:14:31,920 --> 00:14:34,080
And OpenWRT works great on there.

359
00:14:34,080 --> 00:14:35,960
But it's a very unmanaged version of it.

360
00:14:35,960 --> 00:14:37,400
It's not something I'm maintaining, really,

361
00:14:37,400 --> 00:14:39,920
other than just doing OEM updates.

362
00:14:39,920 --> 00:14:41,960
So is that something that you use primarily

363
00:14:41,960 --> 00:14:45,640
for LadyJuice connections when you're on the road, or like?

364
00:14:45,640 --> 00:14:46,460
All the time.

365
00:14:46,460 --> 00:14:49,280
It's always it picks and chooses between the best.

366
00:14:49,280 --> 00:14:50,520
Sometimes I have to coax it.

367
00:14:50,520 --> 00:14:52,140
It could be a little better at that.

368
00:14:52,140 --> 00:14:54,480
But at my home base, I have an ethernet connection.

369
00:14:54,480 --> 00:14:55,960
And then when I'm on the road, I'm

370
00:14:55,960 --> 00:14:58,920
either on Wi-Fi or some Wi-Fi somewhere.

371
00:14:58,920 --> 00:15:00,920
And I can pick and choose between them.

372
00:15:00,920 --> 00:15:04,560
But what's nice is the LAN IPs, everything behind the net

373
00:15:04,560 --> 00:15:06,280
always stays the same.

374
00:15:06,280 --> 00:15:07,480
Nice and simple.

375
00:15:07,480 --> 00:15:09,380
It's just the external connection that changes.

376
00:15:09,380 --> 00:15:11,960
And the devices on the LAN are none the smarter.

377
00:15:11,960 --> 00:15:15,280
What I like that you can toggle features super easily.

378
00:15:15,280 --> 00:15:17,880
So if you wanted to, say, do DNS over TLS or something

379
00:15:17,880 --> 00:15:20,880
like that, it's literally just flick a switch in the UI,

380
00:15:20,880 --> 00:15:23,280
and you're off and running that.

381
00:15:23,280 --> 00:15:24,120
So it's great.

382
00:15:24,120 --> 00:15:25,400
It does make that really easy.

383
00:15:25,400 --> 00:15:27,680
And it was really easy to just sort of get in there

384
00:15:27,680 --> 00:15:31,400
and turn off the DNS stuff when I wanted to go with PyHole.

385
00:15:31,400 --> 00:15:33,440
All that's very simple.

386
00:15:33,440 --> 00:15:35,160
One thing I want you to investigate,

387
00:15:35,160 --> 00:15:36,960
this is self-hosted show research,

388
00:15:36,960 --> 00:15:38,360
but one thing I want to investigate

389
00:15:38,360 --> 00:15:41,320
is site-to-site WireGuard VPNs from the slate

390
00:15:41,320 --> 00:15:43,720
to an OpenSense instance.

391
00:15:43,720 --> 00:15:46,800
Now, I used OpenVPN from PFSense to PFSense

392
00:15:46,800 --> 00:15:49,360
for a couple of years, and that worked really, really well.

393
00:15:49,360 --> 00:15:52,640
I haven't yet managed to have two OpenSense systems

394
00:15:52,640 --> 00:15:54,020
to do a site-to-site.

395
00:15:54,020 --> 00:15:57,120
So I'd be curious to get your take on that, Chris.

396
00:15:57,120 --> 00:16:00,080
Wonder how it would do that behind the double-grade net,

397
00:16:00,080 --> 00:16:03,360
the double-enterprise-grade carrier-grade net.

398
00:16:03,360 --> 00:16:05,900
Maybe if I had a droplet in between that

399
00:16:05,900 --> 00:16:09,760
did like the go-between, so I WireGuard out from the RV

400
00:16:09,760 --> 00:16:11,640
behind the double-carrier-grade net

401
00:16:11,640 --> 00:16:14,040
into the digital ocean droplet,

402
00:16:14,040 --> 00:16:15,680
and then the digital ocean droplet connects

403
00:16:15,680 --> 00:16:18,240
into the other land that I'm bridging to.

404
00:16:18,240 --> 00:16:20,440
I don't know, there's probably a way I could do it.

405
00:16:20,440 --> 00:16:21,820
Some sort of network tomfoolery.

406
00:16:21,820 --> 00:16:22,660
We'll figure it out.

407
00:16:22,660 --> 00:16:24,020
We did deep dive at one time,

408
00:16:24,020 --> 00:16:28,020
and that double net really is a complicator

409
00:16:28,020 --> 00:16:29,320
for that kind of stuff.

410
00:16:29,320 --> 00:16:30,160
It's just tricky.

411
00:16:30,160 --> 00:16:32,120
Sometimes it works when you're lucky.

412
00:16:32,120 --> 00:16:33,080
It's gosh-darn tricky.

413
00:16:33,080 --> 00:16:36,440
Even software that's designed to get around double nets

414
00:16:36,440 --> 00:16:39,480
still sometimes with that double-carrier-grade net

415
00:16:39,480 --> 00:16:40,900
still has issues.

416
00:16:40,900 --> 00:16:42,260
That's how you gotta say it, too.

417
00:16:42,260 --> 00:16:45,760
All right, it's time for a little housekeeping here

418
00:16:45,760 --> 00:16:47,880
on the old Unplugged podcast.

419
00:16:47,880 --> 00:16:50,320
Keep things fresh, keep you informed on what's going on.

420
00:16:50,320 --> 00:16:52,720
You know, you gotta clean yourself from time to time

421
00:16:52,720 --> 00:16:53,960
for you guys, you know.

422
00:16:53,960 --> 00:16:58,960
First and foremost, check out the recent Brunch with Brent.

423
00:16:59,200 --> 00:17:01,160
Daniel Foray, the founder of Elementary OS,

424
00:17:01,160 --> 00:17:03,600
sits down with Brent for brunch,

425
00:17:03,600 --> 00:17:06,880
and it was a really great Linux origin story.

426
00:17:06,880 --> 00:17:09,440
It's fantastic, so definitely go check that out.

427
00:17:09,440 --> 00:17:12,060
You can find that at extras.show.

428
00:17:12,060 --> 00:17:14,120
Slash 68, is it, Wes?

429
00:17:14,120 --> 00:17:15,640
I'm gonna say 68.

430
00:17:15,640 --> 00:17:17,360
Going once, yes, got it right.

431
00:17:17,360 --> 00:17:19,700
Ha ha ha, pretty great.

432
00:17:19,700 --> 00:17:23,560
You know, rumor has it, there's a lot of great brunches now.

433
00:17:24,420 --> 00:17:26,080
You could probably just go there

434
00:17:26,080 --> 00:17:28,480
and click on that brunch tag and see them all.

435
00:17:29,500 --> 00:17:30,840
That sounds like a nice way, yeah.

436
00:17:30,840 --> 00:17:33,400
You know you wanna escape the world outside?

437
00:17:33,400 --> 00:17:35,280
Have some brunch, just continuous brunch

438
00:17:35,280 --> 00:17:36,680
for several days in a row.

439
00:17:36,680 --> 00:17:38,000
I liked it so much I slapped my leg.

440
00:17:38,000 --> 00:17:40,560
I went, yeah, slapping my leg, Wes.

441
00:17:40,560 --> 00:17:42,400
Yee-haw, woo, woo.

442
00:17:42,400 --> 00:17:43,740
Now you know we do this here show live.

443
00:17:43,740 --> 00:17:45,820
We've got a great mumble room,

444
00:17:45,820 --> 00:17:47,000
and we're all hanging out here

445
00:17:47,000 --> 00:17:50,620
having ourselves a virtual lug, and you can be part of it.

446
00:17:50,620 --> 00:17:54,580
If you're like me, you're not actually making it to a lug.

447
00:17:54,580 --> 00:17:55,840
You know it'd probably be good for you,

448
00:17:55,840 --> 00:17:57,720
but you're not going, you know.

449
00:17:57,720 --> 00:17:58,600
Sometimes they're not near.

450
00:17:58,600 --> 00:17:59,960
Sometimes you got a couple options

451
00:17:59,960 --> 00:18:00,800
and you're still not going.

452
00:18:00,800 --> 00:18:02,960
Like Wes and I, we have options and we still don't go.

453
00:18:02,960 --> 00:18:03,780
We should go.

454
00:18:03,780 --> 00:18:07,900
About twice a year, I might go to one.

455
00:18:08,860 --> 00:18:10,480
But usually it's not one that's in my neighborhood.

456
00:18:10,480 --> 00:18:15,020
So it's, anyways, I'm getting off.

457
00:18:15,020 --> 00:18:15,860
I had too many Red Bulls.

458
00:18:15,860 --> 00:18:16,860
Lugs can be hard.

459
00:18:16,860 --> 00:18:17,700
It is, that's what I'm trying to say.

460
00:18:17,700 --> 00:18:18,860
When you have to meet in meet space

461
00:18:18,860 --> 00:18:20,860
because you gotta like take the time and get there.

462
00:18:20,860 --> 00:18:21,940
And here we are, look at this.

463
00:18:21,940 --> 00:18:25,340
We're hanging out with 37 other Linux users right now.

464
00:18:25,340 --> 00:18:26,560
37 other Linux users.

465
00:18:26,560 --> 00:18:27,860
And the thing is is we're all chatting

466
00:18:27,860 --> 00:18:29,420
in between the shows.

467
00:18:29,420 --> 00:18:31,340
You know like maybe we had to take a break

468
00:18:31,340 --> 00:18:32,380
a couple of minutes ago

469
00:18:32,380 --> 00:18:34,420
because we got disconnected from a couple of people.

470
00:18:34,420 --> 00:18:36,220
So we're just chatting.

471
00:18:36,220 --> 00:18:37,260
I mean, you could be part of that.

472
00:18:37,260 --> 00:18:38,260
It really is, it's great.

473
00:18:38,260 --> 00:18:40,120
It's good for the Linux soul.

474
00:18:40,120 --> 00:18:44,520
We do this show live, jblive.tv on Tuesdays, 2 p.m.

475
00:18:44,520 --> 00:18:45,900
Nope, it's been a little while.

476
00:18:45,900 --> 00:18:47,700
Noon, Pacific.

477
00:18:47,700 --> 00:18:48,660
But you can get that converted

478
00:18:48,660 --> 00:18:51,220
at jupiterbroadcasting.com slash calendar.

479
00:18:51,220 --> 00:18:52,740
You can also find that Mumble Room info

480
00:18:52,740 --> 00:18:56,340
if you just go Google search Jupiter Colony Mumble.

481
00:18:56,340 --> 00:18:58,980
Or if you get in the IRC room, you can do Bang Mumble.

482
00:18:58,980 --> 00:18:59,980
That makes it easy.

483
00:18:59,980 --> 00:19:03,640
I just mentioned that because we'd love to see you.

484
00:19:03,640 --> 00:19:05,640
Also, the conversation continues after the show

485
00:19:05,640 --> 00:19:08,420
at jupiterbroadcasting.com slash telegram.

486
00:19:08,420 --> 00:19:09,920
How we doing on numbers there, cheese?

487
00:19:09,920 --> 00:19:11,800
Do we get, we're over 1,700 now?

488
00:19:11,800 --> 00:19:15,080
Yeah, we're like 1,736 I think was the last.

489
00:19:15,080 --> 00:19:16,480
No, it's slowed, it's slowed.

490
00:19:16,480 --> 00:19:19,680
It slowed a little bit, but 1,700 people.

491
00:19:19,680 --> 00:19:21,000
I've never asked the number.

492
00:19:21,000 --> 00:19:22,600
I've never cared.

493
00:19:22,600 --> 00:19:25,400
But then I got this stupid idea of getting it to 2,000.

494
00:19:25,400 --> 00:19:26,220
And now I care.

495
00:19:26,220 --> 00:19:27,120
It's stuck in your head.

496
00:19:27,120 --> 00:19:27,960
It's dumb.

497
00:19:27,960 --> 00:19:29,120
We will get there.

498
00:19:29,120 --> 00:19:30,680
You're not gonna hear me stop complaining about it

499
00:19:30,680 --> 00:19:31,560
till it gets to 2,000.

500
00:19:31,560 --> 00:19:32,400
So let's just get it over with.

501
00:19:32,400 --> 00:19:33,780
Please, for my sake.

502
00:19:35,360 --> 00:19:37,400
Jupiterbroadcasting.com slash telegram.

503
00:19:38,260 --> 00:19:39,560
Get over there and get involved.

504
00:19:39,560 --> 00:19:41,940
You know, you get links to stuff, you know?

505
00:19:41,940 --> 00:19:43,620
You can talk to Wes Payne in there probably,

506
00:19:43,620 --> 00:19:45,720
you know, if he's around.

507
00:19:45,720 --> 00:19:46,560
Sure can.

508
00:19:46,560 --> 00:19:48,920
Just make sure you add him at really weird times.

509
00:19:50,720 --> 00:19:52,400
You're welcome, Wes.

510
00:19:52,400 --> 00:19:53,240
All right, that's all the house.

511
00:19:53,240 --> 00:19:54,080
I'm gonna get out of there

512
00:19:54,080 --> 00:19:56,280
before I wreck somebody else's day.

513
00:19:56,280 --> 00:19:58,540
Don't, don't add Wes at weird times.

514
00:19:58,540 --> 00:20:00,800
So I'm feeling a little silly

515
00:20:00,800 --> 00:20:02,660
because I just love this idea,

516
00:20:02,660 --> 00:20:05,840
thanks to Carl who suggested it in the post show last week.

517
00:20:05,840 --> 00:20:10,760
And that was just punishing the heck out of Fedora 32

518
00:20:10,760 --> 00:20:12,940
and seeing how it handles it differently

519
00:20:12,940 --> 00:20:14,920
than a Linux system in the past.

520
00:20:14,920 --> 00:20:19,920
Now, as you know, there is this out of memory manager

521
00:20:20,160 --> 00:20:21,520
that we've talked about, the OOM.

522
00:20:21,520 --> 00:20:23,560
And there's different, well, you may not know this part

523
00:20:23,560 --> 00:20:25,680
because I didn't know all of this until recently.

524
00:20:25,680 --> 00:20:28,040
There's many out of memory managers

525
00:20:28,040 --> 00:20:29,680
out there on the market.

526
00:20:29,680 --> 00:20:32,580
One created by Facebook, others created by other folks,

527
00:20:32,580 --> 00:20:35,560
ones that may be better for the desktop long-term.

528
00:20:35,560 --> 00:20:38,720
But easy, I'm sorry, early OOM

529
00:20:38,720 --> 00:20:41,560
is a very easy one to implement.

530
00:20:41,560 --> 00:20:42,760
So that's an easy way to remember that

531
00:20:42,760 --> 00:20:46,440
because early OOM is kind of a simple,

532
00:20:46,440 --> 00:20:49,600
straightforward out of memory manager

533
00:20:49,600 --> 00:20:53,400
that lives in user space versus kernel space.

534
00:20:53,400 --> 00:20:56,280
And that's a pretty significant differentiator

535
00:20:56,280 --> 00:20:59,920
because the kernel memory space killer,

536
00:20:59,920 --> 00:21:02,040
I don't know if I'm properly giving it

537
00:21:02,040 --> 00:21:06,080
full characterization, but it sort of has a bad reputation

538
00:21:06,080 --> 00:21:07,920
and it doesn't really get invoked

539
00:21:07,920 --> 00:21:10,360
until your system is already wrecked.

540
00:21:10,360 --> 00:21:11,800
Yeah, I mean, we've talked before on the show

541
00:21:11,800 --> 00:21:12,920
about Facebook's efforts.

542
00:21:12,920 --> 00:21:15,000
They actually have their own daemon to do this

543
00:21:15,000 --> 00:21:18,200
in user space and added some pressure stall metrics

544
00:21:18,200 --> 00:21:20,160
to the kernel to help that work.

545
00:21:20,160 --> 00:21:22,240
Early OOM does not take advantage of that,

546
00:21:22,240 --> 00:21:23,940
but it has a similar goal.

547
00:21:23,940 --> 00:21:25,720
It's basically, as Facebook acknowledged

548
00:21:25,720 --> 00:21:27,480
when they released their version,

549
00:21:28,720 --> 00:21:30,720
the in-kernel solution, it works sometimes,

550
00:21:30,720 --> 00:21:32,680
but we've all seen those situations.

551
00:21:32,680 --> 00:21:34,880
They've seen the situations where you have a live lock

552
00:21:34,880 --> 00:21:37,520
and your system, it is technically still doing work.

553
00:21:37,520 --> 00:21:39,520
It's swapping stuff back and forth from disk,

554
00:21:39,520 --> 00:21:41,760
but you're not gonna get anywhere.

555
00:21:41,760 --> 00:21:44,040
Yeah, we'll do a live demonstration in a moment.

556
00:21:44,040 --> 00:21:48,140
But the way early OOM or OOM works

557
00:21:48,140 --> 00:21:51,840
is if both your RAM and swap go below 10% free,

558
00:21:51,840 --> 00:21:54,680
then early OOM issues a SIG term to the process

559
00:21:54,680 --> 00:21:57,920
with the largest OOM score.

560
00:21:57,920 --> 00:22:00,720
So this must be something that the kernel is watching

561
00:22:00,720 --> 00:22:02,420
or that this is always watching the background

562
00:22:02,420 --> 00:22:04,960
and it's assigning certain weights to processes.

563
00:22:04,960 --> 00:22:07,120
Yeah, and you can also influence that

564
00:22:07,120 --> 00:22:08,300
both in the kernel version

565
00:22:08,300 --> 00:22:10,760
and then early OOM has its own config file.

566
00:22:10,760 --> 00:22:13,080
So if you wanna change that from 10% to maybe 5%

567
00:22:13,080 --> 00:22:13,960
or something like that,

568
00:22:13,960 --> 00:22:16,280
you can tune it separately for both RAM and swap.

569
00:22:16,280 --> 00:22:20,520
Yeah, now this is turned on by default now in Fedora 32,

570
00:22:20,520 --> 00:22:22,240
only for the workstation version.

571
00:22:22,240 --> 00:22:24,880
The other spins, you could turn it on.

572
00:22:24,880 --> 00:22:27,560
It's in the repo and it's just a,

573
00:22:27,560 --> 00:22:29,960
essentially a command to turn it on.

574
00:22:29,960 --> 00:22:31,880
And there are other options out there.

575
00:22:31,880 --> 00:22:33,760
So when Fedora 32 does release,

576
00:22:33,760 --> 00:22:35,260
you'll probably hear conversations about,

577
00:22:35,260 --> 00:22:37,560
well, why didn't they go with no hang?

578
00:22:37,560 --> 00:22:40,360
That's early OOM on steroids

579
00:22:40,360 --> 00:22:42,860
and it's got all these cool features or OOM or OOM,

580
00:22:42,860 --> 00:22:44,660
or why didn't they use the Facebook backed one?

581
00:22:44,660 --> 00:22:46,060
That's got the Facebook pockets.

582
00:22:46,060 --> 00:22:49,560
It's gonna be the most well-developed and financed one.

583
00:22:49,560 --> 00:22:50,800
So there'll be some debate

584
00:22:50,800 --> 00:22:52,520
about why they went with early OOM.

585
00:22:52,520 --> 00:22:55,560
But I think the simplest way to understand it

586
00:22:55,560 --> 00:22:59,560
is it's just very simple, it's stable, it's tiny,

587
00:22:59,560 --> 00:23:00,440
it's written in C,

588
00:23:00,440 --> 00:23:03,280
which is a good choice for like embedded systems

589
00:23:03,280 --> 00:23:04,600
that might have low memory.

590
00:23:04,600 --> 00:23:07,800
And it has a small set of dependencies

591
00:23:07,800 --> 00:23:09,680
and can work with much older kernels

592
00:23:09,680 --> 00:23:11,480
than a lot of these other killers.

593
00:23:11,480 --> 00:23:14,360
Yeah, I mean, so Facebook's the OMD,

594
00:23:14,360 --> 00:23:15,400
theirs looks very flexible.

595
00:23:15,400 --> 00:23:17,920
You can write plugins that execute your own custom code

596
00:23:17,920 --> 00:23:18,960
with hooks into the daemon

597
00:23:18,960 --> 00:23:21,440
to really configure how you want precise control

598
00:23:21,440 --> 00:23:22,760
over this application.

599
00:23:22,760 --> 00:23:24,080
That sounds like it would work really well

600
00:23:24,080 --> 00:23:25,400
for an application that you're designing

601
00:23:25,400 --> 00:23:27,420
and custom hosting yourself,

602
00:23:27,420 --> 00:23:29,540
but for a wide array of desktop uses.

603
00:23:29,540 --> 00:23:31,080
I mean, when I've been playing with it,

604
00:23:31,080 --> 00:23:33,160
the config file is just a few lines

605
00:23:33,160 --> 00:23:36,440
and it's basically just specifying the command line options.

606
00:23:36,440 --> 00:23:38,940
The system dunit file is very nicely documented

607
00:23:38,940 --> 00:23:40,680
and also sort of explains what's going on.

608
00:23:40,680 --> 00:23:43,600
So it'll take anyone who needs to mess with it

609
00:23:43,600 --> 00:23:44,760
all of a few minutes

610
00:23:44,760 --> 00:23:46,620
to understand exactly what's happening.

611
00:23:46,620 --> 00:23:48,560
I think if I was looking towards the future

612
00:23:48,560 --> 00:23:53,560
and I'm thinking about like the ultimate Linux workstation OS,

613
00:23:53,560 --> 00:23:55,320
it's something that has built-in snapshots

614
00:23:55,320 --> 00:23:57,040
and it's something that has one of these

615
00:23:57,040 --> 00:23:58,620
early memory killers.

616
00:23:59,520 --> 00:24:01,760
But I wonder if maybe my perfect scenario

617
00:24:01,760 --> 00:24:03,680
wouldn't be No Hang.

618
00:24:03,680 --> 00:24:05,680
Not only is it nice and configurable,

619
00:24:05,680 --> 00:24:07,480
but it seems like its real goal

620
00:24:07,480 --> 00:24:10,320
is to sort of preemptively keep your system responsive.

621
00:24:10,320 --> 00:24:13,120
So it sort of kicks in even sooner and a little smarter

622
00:24:13,120 --> 00:24:15,500
of following a certain rule set.

623
00:24:15,500 --> 00:24:17,120
I think maybe that's the one that's a little more tuned

624
00:24:17,120 --> 00:24:18,920
for the desktop as well.

625
00:24:18,920 --> 00:24:22,640
Whereas early OOM is O-O-M,

626
00:24:22,640 --> 00:24:24,240
I just try to cover my bases,

627
00:24:25,540 --> 00:24:27,860
is also perfectly I'd say usable on the server as well.

628
00:24:27,860 --> 00:24:29,840
It's a little brutal, it's a little hard handed,

629
00:24:29,840 --> 00:24:32,320
but it's usable on the server as well.

630
00:24:32,320 --> 00:24:33,400
So let's try it.

631
00:24:33,400 --> 00:24:34,280
You wanna try it?

632
00:24:34,280 --> 00:24:35,120
Ooh.

633
00:24:35,120 --> 00:24:36,120
Mm-hmm.

634
00:24:36,120 --> 00:24:37,880
Yeah, well, I figured it'd be fun

635
00:24:37,880 --> 00:24:38,920
to actually experiment with it

636
00:24:38,920 --> 00:24:40,000
and see what the differences are.

637
00:24:40,000 --> 00:24:41,680
So what Wes and I did here

638
00:24:41,680 --> 00:24:43,920
to try to keep a low memory situation,

639
00:24:43,920 --> 00:24:46,000
there's a few ways you can play with this,

640
00:24:46,000 --> 00:24:49,400
is we have set up identical VMs.

641
00:24:49,400 --> 00:24:50,640
He's running Fedora 32,

642
00:24:50,640 --> 00:24:52,840
the latest preview or beta, whatever.

643
00:24:52,840 --> 00:24:54,000
Is it actually beta yet?

644
00:24:54,000 --> 00:24:55,000
It is beta.

645
00:24:55,000 --> 00:24:55,840
Oh, is it?

646
00:24:55,840 --> 00:24:56,680
Good, perfect.

647
00:24:56,680 --> 00:24:57,500
Thanks, Carl.

648
00:24:57,500 --> 00:25:01,640
This is fun because both Ubuntu 20.04 and Fedora 32

649
00:25:01,640 --> 00:25:02,520
are really close

650
00:25:02,520 --> 00:25:04,280
and they both have really cool new features.

651
00:25:04,280 --> 00:25:05,360
So I think this is one of the reasons

652
00:25:05,360 --> 00:25:07,200
we wanted to dive into this right now

653
00:25:07,200 --> 00:25:10,980
because you could obviously do an entire episode on this.

654
00:25:10,980 --> 00:25:14,560
So what we did is we set up identical VMs in KVM

655
00:25:14,560 --> 00:25:18,740
and each assigned exactly eight gigabytes of RAM

656
00:25:18,740 --> 00:25:21,600
and otherwise pretty basic installs,

657
00:25:21,600 --> 00:25:24,400
fully up to date on both sides.

658
00:25:24,400 --> 00:25:27,520
We have three terminal windows open under Gnome Shell.

659
00:25:27,520 --> 00:25:29,300
I'm using Gnome Shell Classic.

660
00:25:29,300 --> 00:25:31,240
So are you on Gnome Shell Classic as well?

661
00:25:31,240 --> 00:25:32,960
Okay, that's one thing I didn't think to check.

662
00:25:32,960 --> 00:25:34,760
So we're both on Gnome Shell Classic.

663
00:25:35,700 --> 00:25:38,640
I have Firefox open with NetData running,

664
00:25:38,640 --> 00:25:40,360
as does Wes, and three terminals.

665
00:25:40,360 --> 00:25:42,200
So what we're gonna do,

666
00:25:42,200 --> 00:25:47,200
it turns out it is so easy to thrash a Linux box.

667
00:25:47,600 --> 00:25:48,480
It is so easy.

668
00:25:48,480 --> 00:25:50,800
What we're gonna do is we're just gonna simply

669
00:25:50,800 --> 00:25:53,400
tail slash dev slash zero.

670
00:25:53,400 --> 00:25:56,360
And that will fill up memory pretty quickly,

671
00:25:56,360 --> 00:25:57,820
depending on how much memory you have.

672
00:25:57,820 --> 00:26:00,720
If you have a system with like 64 gigs of RAM,

673
00:26:00,720 --> 00:26:02,040
it'll take a little while.

674
00:26:02,040 --> 00:26:03,920
If you don't, if you're like me

675
00:26:03,920 --> 00:26:05,200
and you only have eight gigs of RAM,

676
00:26:05,200 --> 00:26:06,120
it goes pretty quick.

677
00:26:06,120 --> 00:26:06,960
Sure does.

678
00:26:06,960 --> 00:26:09,520
So now what we're going to observe when we run this

679
00:26:09,520 --> 00:26:12,740
is how these two different systems react.

680
00:26:12,740 --> 00:26:15,840
Will either one of them remain usable

681
00:26:15,840 --> 00:26:19,460
in a low memory condition and how will they perform?

682
00:26:19,460 --> 00:26:22,720
So I'm on 31, Wes is on 32.

683
00:26:22,720 --> 00:26:24,640
Do you have your tail dev zero ready, sir?

684
00:26:24,640 --> 00:26:25,720
Yeah, let's do it.

685
00:26:25,720 --> 00:26:26,800
All right, you ready?

686
00:26:26,800 --> 00:26:29,840
Three, two, one, go.

687
00:26:30,720 --> 00:26:31,920
Okay, my memory usage is,

688
00:26:31,920 --> 00:26:34,000
I'm watching a NetData, it's climbing quickly.

689
00:26:34,000 --> 00:26:34,820
Oh boy.

690
00:26:34,820 --> 00:26:35,660
I also have top running.

691
00:26:35,660 --> 00:26:38,280
We both have top going up and I just maxed out.

692
00:26:38,280 --> 00:26:39,920
Wow, that went quick.

693
00:26:39,920 --> 00:26:40,760
Are you still running over there?

694
00:26:40,760 --> 00:26:41,600
I was just at the top.

695
00:26:41,600 --> 00:26:43,540
Okay, it looks like my NetData metrics

696
00:26:43,540 --> 00:26:45,160
are going a little slow, but I can-

697
00:26:45,160 --> 00:26:46,880
My Firefox is totally frozen.

698
00:26:46,880 --> 00:26:48,040
Okay, and my thing is killed.

699
00:26:48,040 --> 00:26:50,560
So it just terminated the tail command.

700
00:26:50,560 --> 00:26:51,400
Really?

701
00:26:51,400 --> 00:26:53,440
Yep, and I'm seeing here in the early OOM logs

702
00:26:53,440 --> 00:26:55,960
that you can configure it so it'll print out

703
00:26:55,960 --> 00:26:58,120
all the metrics it sees and it just went,

704
00:26:58,120 --> 00:26:59,080
oh, nothing's left.

705
00:26:59,080 --> 00:27:00,080
Everything's frozen.

706
00:27:00,080 --> 00:27:01,680
My system is totally locked up.

707
00:27:01,680 --> 00:27:03,360
Every terminal window is locked up,

708
00:27:03,360 --> 00:27:04,200
Firefox is locked up.

709
00:27:04,200 --> 00:27:05,760
Well, I think I'm just going to get some work done.

710
00:27:05,760 --> 00:27:06,920
I mean, while you're, you know.

711
00:27:06,920 --> 00:27:08,520
Wow, that's a significant,

712
00:27:08,520 --> 00:27:10,200
yeah, you can use Firefox right now?

713
00:27:10,200 --> 00:27:11,360
Yeah, well, I mean, my-

714
00:27:11,360 --> 00:27:12,200
What's your memory usage?

715
00:27:12,200 --> 00:27:15,160
My tail command, it just all dropped back down.

716
00:27:15,160 --> 00:27:16,540
Mine is unmodable now.

717
00:27:16,540 --> 00:27:17,960
Even my terminals have frozen.

718
00:27:17,960 --> 00:27:19,920
Top is frozen, everything's frozen.

719
00:27:19,920 --> 00:27:21,920
You weren't trying to use that system, were you, Chris?

720
00:27:21,920 --> 00:27:23,200
Wow.

721
00:27:23,200 --> 00:27:25,000
Is it going to come back?

722
00:27:25,000 --> 00:27:27,560
This is a pretty significant difference.

723
00:27:27,560 --> 00:27:28,920
Imagine like on a Raspberry Pi

724
00:27:28,920 --> 00:27:31,200
where you've only got two or four gigs of RAM, right?

725
00:27:31,200 --> 00:27:32,120
Because this is just eight gigs.

726
00:27:32,120 --> 00:27:34,180
That's not an uncommon amount of RAM.

727
00:27:34,180 --> 00:27:35,220
I just did it again.

728
00:27:35,220 --> 00:27:38,080
And it seems to just sort of replicate the same behavior.

729
00:27:38,080 --> 00:27:39,160
You just lapped me?

730
00:27:39,160 --> 00:27:40,400
He just lapped me?

731
00:27:40,400 --> 00:27:41,840
Wow, it's totally locked up.

732
00:27:41,840 --> 00:27:43,960
Now imagine if I had set this limit, you know,

733
00:27:43,960 --> 00:27:46,100
like to like 1% for your, or less,

734
00:27:46,100 --> 00:27:47,600
then you might get into a similar situation

735
00:27:47,600 --> 00:27:48,440
where you could live lock.

736
00:27:48,440 --> 00:27:49,260
So you probably-

737
00:27:49,260 --> 00:27:51,440
Shouldn't my kernel killer kick in now though?

738
00:27:51,440 --> 00:27:52,320
Sometimes.

739
00:27:52,320 --> 00:27:54,360
It's interesting because we've actually run this test

740
00:27:54,360 --> 00:27:57,780
before and usually the kernel killer does kick in now.

741
00:27:57,780 --> 00:28:00,300
We, in our prep, we ran through this

742
00:28:00,300 --> 00:28:04,220
and a couple of different takes to make it reproducible.

743
00:28:04,220 --> 00:28:07,560
And usually by now, ah, there it goes.

744
00:28:07,560 --> 00:28:08,400
Here we go.

745
00:28:08,400 --> 00:28:09,600
All my terminal process,

746
00:28:09,600 --> 00:28:11,640
all three terminal windows were just killed.

747
00:28:11,640 --> 00:28:14,320
And now Firefox is starting to come back to life.

748
00:28:14,320 --> 00:28:15,160
So that's another difference.

749
00:28:15,160 --> 00:28:16,400
Oh, it's sluggish.

750
00:28:16,400 --> 00:28:17,680
In my case, all of my terminals stayed open.

751
00:28:17,680 --> 00:28:19,840
Oh my God, one, 1000, two,

752
00:28:19,840 --> 00:28:22,760
three seconds for a tab to open.

753
00:28:22,760 --> 00:28:24,440
Oh man, it is brutal.

754
00:28:24,440 --> 00:28:25,280
It's picking up now.

755
00:28:25,280 --> 00:28:26,200
It's starting to pick up.

756
00:28:26,200 --> 00:28:28,160
It's acting a little better now.

757
00:28:28,160 --> 00:28:29,200
Oh man, it's still sluggish.

758
00:28:29,200 --> 00:28:31,980
It's taking a solid second for those tabs to close.

759
00:28:31,980 --> 00:28:32,820
So-

760
00:28:32,820 --> 00:28:33,720
This system is thrashed.

761
00:28:33,720 --> 00:28:35,440
For me, it was just the tail command that got killed.

762
00:28:35,440 --> 00:28:37,200
So all the rest of my terminals stayed open

763
00:28:37,200 --> 00:28:38,640
and I can still see the logs.

764
00:28:38,640 --> 00:28:39,960
Wow.

765
00:28:39,960 --> 00:28:40,800
Wow.

766
00:28:40,800 --> 00:28:43,120
Yeah, for me, it killed all my terminal windows.

767
00:28:43,120 --> 00:28:44,520
It didn't just go for the tail command.

768
00:28:44,520 --> 00:28:46,880
It just, it just was brutal.

769
00:28:46,880 --> 00:28:48,760
That's a significant difference.

770
00:28:49,800 --> 00:28:53,000
You can actually turn that on in 31 and 30 as well.

771
00:28:53,000 --> 00:28:53,840
It's, you don't have to wait for 32.

772
00:28:53,840 --> 00:28:55,000
Yeah, it's already, it's already packaged.

773
00:28:55,000 --> 00:28:56,640
You can find it on Debian systems as well.

774
00:28:56,640 --> 00:28:57,960
It's really easy to get going.

775
00:28:57,960 --> 00:28:59,280
I wonder if there will be instructions

776
00:28:59,280 --> 00:29:00,680
on how to get that working on 2004

777
00:29:00,680 --> 00:29:02,040
and other distros like Manjaro.

778
00:29:02,040 --> 00:29:03,800
I mean, it must be simple, right, to get it set up.

779
00:29:03,800 --> 00:29:06,080
There's probably an ArchWiki on it.

780
00:29:06,080 --> 00:29:08,160
That is really significant.

781
00:29:08,160 --> 00:29:10,040
You could have probably run that a whole other time too.

782
00:29:10,040 --> 00:29:11,160
You just didn't do it right away,

783
00:29:11,160 --> 00:29:12,920
but you probably could have lapped me three times.

784
00:29:12,920 --> 00:29:13,960
I think so.

785
00:29:13,960 --> 00:29:15,320
And your system, and that's the other thing is

786
00:29:15,320 --> 00:29:17,040
not only does it recover quicker,

787
00:29:17,040 --> 00:29:19,040
but it's more responsive when it does recover.

788
00:29:19,040 --> 00:29:20,760
You know, there was still some sluggishness

789
00:29:20,760 --> 00:29:22,160
just after it got killed as the system

790
00:29:22,160 --> 00:29:23,760
was sort of catching up and it looked like net data

791
00:29:23,760 --> 00:29:27,640
maybe lost some of its data or at least dropped its caches

792
00:29:27,640 --> 00:29:28,960
to be nice to the system under pressure.

793
00:29:28,960 --> 00:29:29,800
Yeah, look at this.

794
00:29:29,800 --> 00:29:31,960
I have a gap in my, in my metrics log.

795
00:29:31,960 --> 00:29:36,960
Starting at 12.50 and going to almost 12.50, 3.30.

796
00:29:37,560 --> 00:29:40,240
So for about three minutes there.

797
00:29:40,240 --> 00:29:41,440
Yeah, okay, so I have a little gap,

798
00:29:41,440 --> 00:29:42,680
but it's a much smaller gap.

799
00:29:42,680 --> 00:29:45,720
I have a three and a half minute gap in my logging.

800
00:29:45,720 --> 00:29:46,680
How long was your gap?

801
00:29:46,680 --> 00:29:47,520
Do you still have it on your chart there?

802
00:29:47,520 --> 00:29:48,760
I was like 10 seconds.

803
00:29:48,760 --> 00:29:50,120
Really?

804
00:29:50,120 --> 00:29:51,760
That shows you the difference right there.

805
00:29:51,760 --> 00:29:54,120
It's, that's, huh.

806
00:29:54,120 --> 00:29:55,160
That's a fun little experiment.

807
00:29:55,160 --> 00:29:58,760
I think, I think we are looking at such an awesome

808
00:29:58,760 --> 00:30:01,600
Linux desktop future when you look at the speed

809
00:30:01,600 --> 00:30:04,200
at which Manjaro is humming along now

810
00:30:04,200 --> 00:30:06,280
and how solid Ubuntu has been.

811
00:30:06,280 --> 00:30:08,600
And now with Wimpy at the lead of the desktop there,

812
00:30:08,600 --> 00:30:10,240
like, you know, that's going in good directions.

813
00:30:10,240 --> 00:30:13,200
2004 integrating snapshots is fantastic.

814
00:30:13,200 --> 00:30:16,160
Fedora 32 integrating not only the latest

815
00:30:16,160 --> 00:30:20,360
gnome shell improvements, but also this cool little trick

816
00:30:20,360 --> 00:30:22,680
is going to make it a really solid workstation.

817
00:30:22,680 --> 00:30:25,040
All of these are just getting to be such good workstation

818
00:30:25,040 --> 00:30:26,720
OSs, which is what I really care about.

819
00:30:26,720 --> 00:30:29,080
Well, it's these exact sort of corner cases, you know,

820
00:30:29,080 --> 00:30:32,080
as we saw the kernel killer does eventually work.

821
00:30:32,080 --> 00:30:35,680
And you don't get into this sort of situation every day.

822
00:30:35,680 --> 00:30:37,640
It's nice that we've reached the level where this is,

823
00:30:37,640 --> 00:30:39,360
these are the problems that we can work on now

824
00:30:39,360 --> 00:30:41,680
because we have solid foundations underneath

825
00:30:41,680 --> 00:30:44,400
and can, you know, add a little more levels of polish.

826
00:30:44,400 --> 00:30:48,400
Well, and imagine that scenario on the server for a moment.

827
00:30:48,400 --> 00:30:50,360
You know, your server is essentially unresponsive

828
00:30:50,360 --> 00:30:51,240
that entire time.

829
00:30:52,320 --> 00:30:53,640
That's, that's horrible.

830
00:30:53,640 --> 00:30:55,080
Yeah, and that's where some of the options

831
00:30:55,080 --> 00:30:58,160
that you'll find too for either preferring to kill programs

832
00:30:58,160 --> 00:31:00,840
or to totally not kill programs might be especially useful

833
00:31:00,840 --> 00:31:02,800
if you're like, well, don't ever kill my logging program,

834
00:31:02,800 --> 00:31:05,280
but yeah, you can shoot this application

835
00:31:05,280 --> 00:31:06,440
that we have to reboot sometimes.

836
00:31:06,440 --> 00:31:08,160
It seems the Red Hat developer, Chris Murphy,

837
00:31:08,160 --> 00:31:11,960
was the proponent to include this early gnome killer

838
00:31:11,960 --> 00:31:14,560
in Fedora 32.

839
00:31:14,560 --> 00:31:18,440
And that's one killer I can get behind, you know?

840
00:31:18,440 --> 00:31:20,320
I had a whole intro that I was going to do

841
00:31:20,320 --> 00:31:22,320
that was such a bad joke, I dropped it.

842
00:31:22,320 --> 00:31:24,920
But I was, I'm going to tell you now that I've, you know.

843
00:31:24,920 --> 00:31:25,920
Lay it on me.

844
00:31:25,920 --> 00:31:27,680
Today we make nice with a killer.

845
00:31:27,680 --> 00:31:29,120
No, not Hans Reiser.

846
00:31:29,120 --> 00:31:29,960
Ha!

847
00:31:33,960 --> 00:31:35,760
Too soon or are we good?

848
00:31:35,760 --> 00:31:36,760
Is that okay now?

849
00:31:36,760 --> 00:31:37,600
I can't ever tell.

850
00:31:37,600 --> 00:31:40,760
I think you should, you need to use some Reiser FS.

851
00:31:40,760 --> 00:31:41,600
Yeah, I should.

852
00:31:41,600 --> 00:31:42,440
It's probably great.

853
00:31:42,440 --> 00:31:44,480
I'm not sure that was funny even five years ago.

854
00:31:44,480 --> 00:31:45,400
Damn it, Alex.

855
00:31:47,040 --> 00:31:49,040
Millions of unread users are really upset

856
00:31:49,040 --> 00:31:50,040
with you about now.

857
00:31:50,040 --> 00:31:53,280
Hey, I used Reiser FS on a bank check imaging system

858
00:31:53,280 --> 00:31:55,000
back in the day because you needed a file system

859
00:31:55,000 --> 00:31:56,600
that was really good with small files,

860
00:31:56,600 --> 00:31:59,240
lots of small files, and I believe I needed support

861
00:31:59,240 --> 00:32:00,440
for extended attributes.

862
00:32:00,440 --> 00:32:04,840
So that's how I both got going with Reiser FS and XFS.

863
00:32:04,840 --> 00:32:06,760
Back in the day, back in the day.

864
00:32:06,760 --> 00:32:08,280
So we will have links for all the stuff

865
00:32:08,280 --> 00:32:11,520
about the different out of memory managers,

866
00:32:11,520 --> 00:32:14,640
including ones that I think are pretty cool.

867
00:32:14,640 --> 00:32:16,520
Maybe a little more server focused.

868
00:32:16,520 --> 00:32:18,040
Yeah, I would give No Hang and Try

869
00:32:18,040 --> 00:32:19,360
if you just want to go try one of these out

870
00:32:19,360 --> 00:32:22,560
because it also has desktop notifications integrated,

871
00:32:22,560 --> 00:32:24,520
which you can also get for early OOM.

872
00:32:24,520 --> 00:32:26,200
It looks like you might need another component there.

873
00:32:26,200 --> 00:32:28,560
Oh yeah, that's something we didn't even touch on,

874
00:32:28,560 --> 00:32:29,880
but that's something they're looking at

875
00:32:29,880 --> 00:32:33,840
is giving you a notification mechanism via your desktop

876
00:32:33,840 --> 00:32:36,040
to say, hey, I just had to go kill something

877
00:32:36,040 --> 00:32:36,880
in the background.

878
00:32:36,880 --> 00:32:39,400
It does make a journal entry.

879
00:32:39,400 --> 00:32:40,800
And so you could actually just look at the journal

880
00:32:40,800 --> 00:32:41,640
for that stuff.

881
00:32:41,640 --> 00:32:43,120
But if you're not looking at your journal,

882
00:32:43,120 --> 00:32:46,280
which you're probably not, it's nice to get a notification.

883
00:32:46,280 --> 00:32:47,760
Good old D-Bus.

884
00:32:47,760 --> 00:32:49,880
Well, it's just one of those like first class

885
00:32:49,880 --> 00:32:52,040
sort of entities where you should tell the user

886
00:32:52,040 --> 00:32:53,000
what's going on with their system.

887
00:32:53,000 --> 00:32:53,840
That's a good point.

888
00:32:53,840 --> 00:32:54,760
That's a good point.

889
00:32:54,760 --> 00:32:56,720
So if you don't have the desktop application,

890
00:32:56,720 --> 00:32:59,320
you have to refer to the logs to see what was killed.

891
00:32:59,320 --> 00:33:01,600
And if you're running on a low memory box

892
00:33:01,600 --> 00:33:05,440
and say you're trying to, I don't know,

893
00:33:05,440 --> 00:33:08,360
edit video and encode video,

894
00:33:08,360 --> 00:33:10,480
and it's eating up all your RAM,

895
00:33:10,480 --> 00:33:13,800
is it by default just going to kill the tasks

896
00:33:13,800 --> 00:33:16,560
that's eating up the most RAM

897
00:33:16,560 --> 00:33:18,920
like it did with the tail command?

898
00:33:18,920 --> 00:33:22,080
How does it pick which app or which process to kill

899
00:33:22,080 --> 00:33:25,160
whenever you're running these out of memory errors?

900
00:33:25,160 --> 00:33:26,760
I don't remember the exact particular,

901
00:33:26,760 --> 00:33:28,040
so I could be wrong about this,

902
00:33:28,040 --> 00:33:31,520
but I believe it works off of determining

903
00:33:31,520 --> 00:33:33,440
the memory pressure through PSI

904
00:33:33,440 --> 00:33:37,000
along with the OOM score that is associated with it.

905
00:33:37,000 --> 00:33:41,040
It also takes into account priorities.

906
00:33:41,040 --> 00:33:43,960
If you set a priority for a process ID,

907
00:33:43,960 --> 00:33:46,360
it does take that into account as well.

908
00:33:46,360 --> 00:33:50,920
You can, however, configure early OOM

909
00:33:50,920 --> 00:33:54,320
to have different specific priorities,

910
00:33:54,320 --> 00:33:57,280
or like, for example, if you're doing video encoding

911
00:33:57,280 --> 00:33:59,720
and you know that's intensive and you don't want it to die,

912
00:33:59,720 --> 00:34:02,840
you can have early OOM try very hard to ignore it

913
00:34:02,840 --> 00:34:04,280
and try to do something else

914
00:34:04,280 --> 00:34:07,280
to relieve the pressure as needed.

915
00:34:07,280 --> 00:34:08,720
We went a lot back and forth

916
00:34:08,720 --> 00:34:09,880
in the workstation working group

917
00:34:09,880 --> 00:34:12,080
about how to configure this and how to deal with this.

918
00:34:12,080 --> 00:34:14,360
I know that we had to implement

919
00:34:14,360 --> 00:34:17,000
in the configuration workaround specifically for Chrome

920
00:34:17,000 --> 00:34:21,120
because Chrome does somewhat bad things

921
00:34:21,120 --> 00:34:23,640
for how it sets up its child processes.

922
00:34:23,640 --> 00:34:27,800
But yeah, so the exact details, not sure,

923
00:34:27,800 --> 00:34:30,880
but I think that kind of gives you the gist of it.

924
00:34:30,880 --> 00:34:33,240
And also one last thing, Chris.

925
00:34:34,600 --> 00:34:37,040
Chris Murphy, who's actually doing this,

926
00:34:37,040 --> 00:34:38,040
who suggested all this

927
00:34:38,040 --> 00:34:40,320
and kind of leads the workstation working group,

928
00:34:40,320 --> 00:34:42,000
he does not work for Red Hat.

929
00:34:42,000 --> 00:34:43,840
That's a different Chris Murphy.

930
00:34:43,840 --> 00:34:45,440
Oh, then I emailed the wrong guy.

931
00:34:45,440 --> 00:34:48,360
Yeah, you probably did.

932
00:34:48,360 --> 00:34:49,680
Oh, well, there you go.

933
00:34:49,680 --> 00:34:51,640
It's hard tracking people down online.

934
00:34:51,640 --> 00:34:53,080
Sometimes you get it wrong.

935
00:34:53,080 --> 00:34:56,720
Well, hopefully Chris Murphy will pass my email along.

936
00:34:56,720 --> 00:34:57,840
I was also curious,

937
00:34:57,840 --> 00:35:01,120
is this going to be implemented into Fedora server

938
00:35:01,120 --> 00:35:02,400
when it rolls out as well?

939
00:35:02,400 --> 00:35:04,800
Because I could definitely see this being useful on,

940
00:35:04,800 --> 00:35:07,000
like Chris was saying, low-end servers,

941
00:35:07,000 --> 00:35:09,160
a droplet with limited resources.

942
00:35:09,160 --> 00:35:10,680
I personally wanted to.

943
00:35:10,680 --> 00:35:15,680
The problem was that we kind of ran out of time

944
00:35:16,040 --> 00:35:18,720
in terms of turning this into like a full,

945
00:35:18,720 --> 00:35:21,040
all Fedora edition system-wide change.

946
00:35:21,040 --> 00:35:22,720
It's pretty simple to enable though.

947
00:35:22,720 --> 00:35:24,400
It is simple to enable.

948
00:35:24,400 --> 00:35:26,240
Honestly, my suggestion is,

949
00:35:26,240 --> 00:35:29,120
if you want to see this in Fedora server,

950
00:35:29,120 --> 00:35:31,360
drop an email or something

951
00:35:31,360 --> 00:35:32,800
to the Fedora server working group

952
00:35:32,800 --> 00:35:34,880
to let them know that you're interested in this.

953
00:35:34,880 --> 00:35:35,800
And that, like,

954
00:35:35,800 --> 00:35:37,440
cause the main reason it didn't get done

955
00:35:37,440 --> 00:35:40,040
was that there was nobody from this server,

956
00:35:40,040 --> 00:35:41,640
nobody on the server team

957
00:35:41,640 --> 00:35:43,200
particularly expressed any interest

958
00:35:43,200 --> 00:35:46,720
cause they didn't hear of anybody who wanted it.

959
00:35:46,720 --> 00:35:49,080
So, I mean, I obviously believe

960
00:35:49,080 --> 00:35:51,440
that it would be useful across all the variants.

961
00:35:51,440 --> 00:35:53,840
Wouldn't something maybe like Facebook's OOMD

962
00:35:53,840 --> 00:35:55,040
make more sense?

963
00:35:55,040 --> 00:35:57,000
Because that's really kind of designed for data centers.

964
00:35:57,000 --> 00:35:59,040
That was some of the argument as well.

965
00:35:59,040 --> 00:36:02,000
Some of the issue with using Facebook's OOMD

966
00:36:02,000 --> 00:36:04,520
or O-O-M-D or whatever,

967
00:36:04,520 --> 00:36:09,520
is that it is a lot more aggressive than early OOM.

968
00:36:09,520 --> 00:36:12,840
And depending on what type of workloads

969
00:36:12,840 --> 00:36:14,240
you put into a server,

970
00:36:14,240 --> 00:36:16,760
that may not be great.

971
00:36:16,760 --> 00:36:17,640
That being said,

972
00:36:17,640 --> 00:36:20,440
one of the other reasons why we didn't do OOMD

973
00:36:20,440 --> 00:36:21,960
is because it's in the process

974
00:36:21,960 --> 00:36:23,800
of being reworked completely.

975
00:36:25,000 --> 00:36:28,320
One of the, they're working with the SystemD folks upstream

976
00:36:28,320 --> 00:36:30,040
to re-implement it as a service

977
00:36:30,040 --> 00:36:31,200
that's more tightly integrated

978
00:36:31,200 --> 00:36:33,800
with SystemD service management facilities.

979
00:36:33,800 --> 00:36:35,760
Facebook themselves heavily leveraged this

980
00:36:35,760 --> 00:36:37,880
and their contributors to SystemD upstream,

981
00:36:37,880 --> 00:36:39,520
as well as into the Fedora project.

982
00:36:39,520 --> 00:36:42,120
So they're working on making this

983
00:36:42,120 --> 00:36:43,880
a more comprehensive solution,

984
00:36:43,880 --> 00:36:46,560
better integrated with the service management capabilities

985
00:36:46,560 --> 00:36:49,560
within SystemD and exposing a better interface

986
00:36:49,560 --> 00:36:52,160
for desktops and other things to take advantage of it.

987
00:36:52,160 --> 00:36:54,760
And if that pans out the way that we all hope it does,

988
00:36:54,760 --> 00:36:58,840
we'll probably see within my guess is about a year or so,

989
00:36:58,840 --> 00:37:03,440
we will look at transitioning from early OOM to that.

990
00:37:03,440 --> 00:37:04,280
We're not there yet,

991
00:37:04,280 --> 00:37:06,320
but I think it's fascinating that this development,

992
00:37:06,320 --> 00:37:08,640
there's these parallel solutions and development

993
00:37:08,640 --> 00:37:12,360
to make Linux handle low memory solutions better,

994
00:37:12,360 --> 00:37:13,760
or situations I should say.

995
00:37:13,760 --> 00:37:15,520
And the thing that's interesting about them,

996
00:37:15,520 --> 00:37:17,200
and this is where my mind was going,

997
00:37:17,200 --> 00:37:18,720
is that they're user space, right?

998
00:37:18,720 --> 00:37:21,040
They're all user space solutions,

999
00:37:21,040 --> 00:37:22,640
but there definitely seems to be a need here.

1000
00:37:22,640 --> 00:37:23,880
And I think we just demonstrated

1001
00:37:23,880 --> 00:37:25,520
there's a real benefit on the desktop.

1002
00:37:25,520 --> 00:37:26,440
Yeah, absolutely.

1003
00:37:26,440 --> 00:37:27,360
But you could easily see how that

1004
00:37:27,360 --> 00:37:28,600
would apply to the server too.

1005
00:37:28,600 --> 00:37:31,120
Yeah, I mean, the end of it was that we all just gave up

1006
00:37:31,120 --> 00:37:32,960
waiting for the kernel to solve the problem.

1007
00:37:32,960 --> 00:37:36,440
So, I mean, if you really, really look at it,

1008
00:37:36,440 --> 00:37:38,360
all of this is just a way to try to make

1009
00:37:38,360 --> 00:37:42,680
the kernel OOM behavior happen more deterministically,

1010
00:37:42,680 --> 00:37:45,400
more repeatably, more reliably,

1011
00:37:45,400 --> 00:37:49,080
and more in a manner that a user expects.

1012
00:37:49,080 --> 00:37:52,800
And potentially maybe as if you have a user space solution,

1013
00:37:52,800 --> 00:37:54,440
then maybe the kernel one can be,

1014
00:37:54,440 --> 00:37:56,280
it's okay that it's so much more conservative

1015
00:37:56,280 --> 00:37:58,320
and heavy handed because it's kind of a backup.

1016
00:37:58,320 --> 00:38:00,680
It's a parachute to your glider.

1017
00:38:00,680 --> 00:38:01,520
Exactly.

1018
00:38:01,520 --> 00:38:02,760
Maybe, we'll see.

1019
00:38:02,760 --> 00:38:03,800
I could say, and that would be,

1020
00:38:03,800 --> 00:38:06,200
and the thing that's nice about the user space one,

1021
00:38:06,200 --> 00:38:08,640
although it's so Linux to have multiple solutions

1022
00:38:08,640 --> 00:38:10,120
to do the same thing.

1023
00:38:10,120 --> 00:38:11,840
I'm sure other operating systems,

1024
00:38:11,840 --> 00:38:13,840
they just have one and they just implement it.

1025
00:38:13,840 --> 00:38:17,240
At the same time, it's clear that there's nice uses for it.

1026
00:38:17,240 --> 00:38:20,920
Like OMD or UMD from Facebook is great for the server,

1027
00:38:20,920 --> 00:38:22,520
but NoHang looks like it's gonna be

1028
00:38:22,520 --> 00:38:23,640
a lot better for the desktop.

1029
00:38:23,640 --> 00:38:26,200
And there are different use cases there.

1030
00:38:26,200 --> 00:38:27,760
And so it's so perfectly Linux

1031
00:38:27,760 --> 00:38:28,640
that there are multiple ones,

1032
00:38:28,640 --> 00:38:30,680
but we'll get to some common ground.

1033
00:38:30,680 --> 00:38:33,240
There'll probably be some easy way

1034
00:38:33,240 --> 00:38:34,840
to swap these all out too, right?

1035
00:38:34,840 --> 00:38:37,240
Well, yeah, I mean, they're just a single binary

1036
00:38:37,240 --> 00:38:38,160
and oftentimes that run.

1037
00:38:38,160 --> 00:38:40,600
So just stop the service, start the service to the new one.

1038
00:38:40,600 --> 00:38:41,600
It's a user space thing.

1039
00:38:41,600 --> 00:38:42,440
Exactly.

1040
00:38:42,440 --> 00:38:43,680
It's a very powerful user space thing,

1041
00:38:43,680 --> 00:38:45,920
but yeah, I think it's fascinating.

1042
00:38:45,920 --> 00:38:50,680
And I might always now run a desktop with one, I think.

1043
00:38:50,680 --> 00:38:52,320
I think that's my takeaway from this.

1044
00:38:52,320 --> 00:38:53,760
It's a little bit of a paradigm shift in that sense

1045
00:38:53,760 --> 00:38:54,680
is why not?

1046
00:38:54,680 --> 00:38:55,520
Why not?

1047
00:38:55,520 --> 00:38:56,640
I mean, would you implement it on your,

1048
00:38:56,640 --> 00:38:59,040
say if you were to go back into your Neon installer?

1049
00:38:59,040 --> 00:39:00,040
Yeah, I think so.

1050
00:39:00,040 --> 00:39:02,120
I mean, you might need to do a little tuning perhaps

1051
00:39:02,120 --> 00:39:04,400
if you have some applications that are memory hogs

1052
00:39:04,400 --> 00:39:06,640
and end up getting killed, but that's easy to do.

1053
00:39:06,640 --> 00:39:08,320
Like it probably might not make as much sense

1054
00:39:08,320 --> 00:39:09,840
on the OBS machine.

1055
00:39:09,840 --> 00:39:11,320
And we also don't see those problems there.

1056
00:39:11,320 --> 00:39:12,920
So it probably does make more sense to write it

1057
00:39:12,920 --> 00:39:14,040
for a machine where you've got

1058
00:39:14,040 --> 00:39:15,720
perhaps a little more dynamic workload,

1059
00:39:15,720 --> 00:39:18,400
where you do see large changes in how much RAM is used,

1060
00:39:18,400 --> 00:39:19,920
like a web browser.

1061
00:39:19,920 --> 00:39:22,160
Yeah, and specifically my laptop.

1062
00:39:22,160 --> 00:39:23,240
Yeah.

1063
00:39:23,240 --> 00:39:25,840
With three electron apps open and.

1064
00:39:25,840 --> 00:39:26,880
At least.

1065
00:39:26,880 --> 00:39:28,000
Yeah, it's on a good day.

1066
00:39:28,000 --> 00:39:29,360
So there is one other case

1067
00:39:29,360 --> 00:39:30,560
where you might want to think about

1068
00:39:30,560 --> 00:39:35,120
for using early OOM or any other user space

1069
00:39:35,120 --> 00:39:37,000
out of memory management solution.

1070
00:39:37,000 --> 00:39:39,600
It's if you know that you're doing a workload

1071
00:39:39,600 --> 00:39:43,280
which dynamically spawns lots of threads

1072
00:39:43,280 --> 00:39:46,320
and those threads can at any given time spike

1073
00:39:46,320 --> 00:39:47,480
and use lots of memory

1074
00:39:47,480 --> 00:39:49,600
and you don't really have a good way

1075
00:39:49,600 --> 00:39:52,080
of immediately dealing with that

1076
00:39:52,080 --> 00:39:55,000
or otherwise controlling it within the application itself.

1077
00:39:55,000 --> 00:39:56,320
So for example,

1078
00:39:56,320 --> 00:39:59,400
if you are dynamically letting video encoders

1079
00:39:59,400 --> 00:40:01,840
just run wild on your computer,

1080
00:40:01,840 --> 00:40:04,240
that's probably an avenue where you,

1081
00:40:04,240 --> 00:40:07,320
if you cannot do any control in the application itself,

1082
00:40:07,320 --> 00:40:10,120
which thankfully most of them let you,

1083
00:40:10,120 --> 00:40:12,040
that is something where early OOM would benefit.

1084
00:40:12,040 --> 00:40:13,960
But another is if you're compiling code,

1085
00:40:13,960 --> 00:40:17,320
killing threads for out of control compilations

1086
00:40:17,320 --> 00:40:20,320
doesn't necessarily bring down the whole compilation process.

1087
00:40:20,320 --> 00:40:23,040
In most cases, it causes it to reschedule them

1088
00:40:23,040 --> 00:40:24,200
or do something different.

1089
00:40:24,200 --> 00:40:27,120
So, you know, it depends,

1090
00:40:27,120 --> 00:40:29,800
but like when you consider these workloads,

1091
00:40:29,800 --> 00:40:31,600
you also have to consider, you know,

1092
00:40:31,600 --> 00:40:35,160
what is the modeling for how these processes

1093
00:40:35,160 --> 00:40:37,440
and how the memory allocation is going to go.

1094
00:40:37,440 --> 00:40:38,560
Right, and what are the consequences

1095
00:40:38,560 --> 00:40:39,400
for things getting killed

1096
00:40:39,400 --> 00:40:41,080
in terms of how that work can continue?

1097
00:40:41,080 --> 00:40:41,920
For sure.

1098
00:40:41,920 --> 00:40:42,880
Yes, absolutely.

1099
00:40:42,880 --> 00:40:46,520
Yeah, that is definitely the other side

1100
00:40:46,520 --> 00:40:47,800
to this double-edged sword.

1101
00:40:47,800 --> 00:40:48,920
I think that's what makes it so interesting

1102
00:40:48,920 --> 00:40:50,600
to see it as a new default too,

1103
00:40:50,600 --> 00:40:54,360
is sort of the workstation team saying

1104
00:40:54,360 --> 00:40:57,160
this works well enough that let's push it out.

1105
00:40:57,160 --> 00:40:59,280
Yeah, and I think you'll see other distributions

1106
00:40:59,280 --> 00:41:00,280
pick it up, especially the ones

1107
00:41:00,280 --> 00:41:02,200
that want to be seen as performance focused.

1108
00:41:02,200 --> 00:41:04,360
Well, I could see this, you know,

1109
00:41:04,360 --> 00:41:07,480
the out of memory killer along with immutable systems,

1110
00:41:07,480 --> 00:41:10,360
you know, all kind of coming together under one umbrella

1111
00:41:10,360 --> 00:41:14,320
to maybe form the next, you know,

1112
00:41:14,320 --> 00:41:16,960
the next season of Linux distros and stuff,

1113
00:41:16,960 --> 00:41:18,880
you know, like what Silverblue is doing now

1114
00:41:18,880 --> 00:41:21,800
and being able to stack OOM right on top of that

1115
00:41:21,800 --> 00:41:23,640
would be, you know, a nice little...

1116
00:41:23,640 --> 00:41:25,560
All running on Wayland backed by flat pack

1117
00:41:25,560 --> 00:41:28,720
or app images or snaps, it's happening.

1118
00:41:28,720 --> 00:41:31,520
And the IRC XMN has a point about mobile devices

1119
00:41:31,520 --> 00:41:33,560
and yeah, I kind of want this for Android already.

1120
00:41:33,560 --> 00:41:35,800
Funny you should mention all of that.

1121
00:41:35,800 --> 00:41:39,120
So Silverblue, the goal with this

1122
00:41:39,120 --> 00:41:41,840
is like combined with low memory monitor and early OOM,

1123
00:41:41,840 --> 00:41:44,040
I believe that in the very near future,

1124
00:41:44,040 --> 00:41:47,280
Silverblue will also have this functionality active

1125
00:41:47,280 --> 00:41:49,000
and more tightly integrated.

1126
00:41:49,000 --> 00:41:50,560
And because of some of the stuff

1127
00:41:50,560 --> 00:41:52,280
that's going on in the flat pack side,

1128
00:41:52,280 --> 00:41:54,160
it can be slightly more intelligent

1129
00:41:54,160 --> 00:41:55,720
than your average application

1130
00:41:55,720 --> 00:41:58,760
about handling memory pressure situations.

1131
00:41:58,760 --> 00:42:01,680
Oh, and as far as Android goes, they already do this.

1132
00:42:01,680 --> 00:42:03,040
That's really one of the reasons

1133
00:42:03,040 --> 00:42:06,080
why there's been a lot of impetus

1134
00:42:06,080 --> 00:42:08,120
towards trying to fix this for desktop Linux

1135
00:42:08,120 --> 00:42:10,080
is because every other platform,

1136
00:42:10,080 --> 00:42:14,000
including the Android one already has something set up.

1137
00:42:14,000 --> 00:42:17,640
Well, that's the advantage to a unified focused

1138
00:42:17,640 --> 00:42:20,360
sort of sprint based, like we're gonna focus on this

1139
00:42:20,360 --> 00:42:21,520
and this and this and yeah,

1140
00:42:21,520 --> 00:42:24,120
the Mac does similar things, Windows does similar things.

1141
00:42:24,120 --> 00:42:25,840
Mini Mac though had a question that I bet

1142
00:42:25,840 --> 00:42:27,080
is on the mind of a lot of listeners.

1143
00:42:27,080 --> 00:42:28,240
So I wanted to let you jump in.

1144
00:42:28,240 --> 00:42:29,360
Thank you.

1145
00:42:29,360 --> 00:42:31,640
My question was how is swap involved in all this?

1146
00:42:31,640 --> 00:42:33,200
I mean, we're talking about a ROM now,

1147
00:42:33,200 --> 00:42:36,400
but we all have a little small swap partition.

1148
00:42:36,400 --> 00:42:37,840
Yeah, and I think there was some thought

1149
00:42:37,840 --> 00:42:40,120
in the design of this when it comes to swap

1150
00:42:40,120 --> 00:42:42,840
is it looks at your RAM and your swap.

1151
00:42:42,840 --> 00:42:44,520
And if they're less than 10% free

1152
00:42:44,520 --> 00:42:45,480
or if they're around that range,

1153
00:42:45,480 --> 00:42:47,200
that's when it'll generally kick in.

1154
00:42:47,200 --> 00:42:49,600
But one, I think Wes and correct me if I'm wrong,

1155
00:42:50,640 --> 00:42:53,680
but I think one of the tunables is you can say,

1156
00:42:53,680 --> 00:42:55,640
start sooner than 10% swap

1157
00:42:55,640 --> 00:42:58,160
because if I'm using that much swap,

1158
00:42:58,160 --> 00:42:59,840
then my system is already thrashing

1159
00:42:59,840 --> 00:43:01,200
way more than I would like it to be.

1160
00:43:01,200 --> 00:43:03,080
Yep, yeah, you can tune both of those separately.

1161
00:43:03,080 --> 00:43:05,000
Yeah, so you could go in there and say,

1162
00:43:05,000 --> 00:43:08,200
you know what, once I'm at 50% swap, start getting crazy.

1163
00:43:08,200 --> 00:43:10,000
Now that would probably be too much,

1164
00:43:10,000 --> 00:43:14,280
but by default, once your free swap goes below 10%,

1165
00:43:14,280 --> 00:43:15,360
that's when it starts kicking in

1166
00:43:15,360 --> 00:43:18,160
for both your swap and your RAM by default.

1167
00:43:18,160 --> 00:43:19,640
And part of the reason for setting that way

1168
00:43:19,640 --> 00:43:24,640
is that there are some people who are either putting anemic

1169
00:43:24,840 --> 00:43:25,960
or no swap at all,

1170
00:43:25,960 --> 00:43:28,400
and so we need to cover those grounds as well.

1171
00:43:28,400 --> 00:43:30,000
And people who have anemic swap,

1172
00:43:30,000 --> 00:43:32,480
this can cause interesting side effects.

1173
00:43:32,480 --> 00:43:36,400
So that's why we consider both free RAM and swap together

1174
00:43:36,400 --> 00:43:40,840
to make sure that we don't kick in unnecessarily aggressively.

1175
00:43:40,840 --> 00:43:43,000
Yeah, this is an example where sometimes

1176
00:43:43,000 --> 00:43:46,080
just blasting defaults and not letting the user change it

1177
00:43:46,080 --> 00:43:48,240
has some advantages because then you know

1178
00:43:48,240 --> 00:43:50,280
what their configuration is for things like swap.

1179
00:43:50,280 --> 00:43:52,280
You know it's exactly the amount of RAM

1180
00:43:52,280 --> 00:43:55,880
or maybe the distribution policy is 20% of the amount of RAM

1181
00:43:55,880 --> 00:43:57,960
or something, you just always know what that number is.

1182
00:43:57,960 --> 00:44:00,440
But this is a power user workstation OS

1183
00:44:00,440 --> 00:44:02,040
and we can tweak those things, thankfully.

1184
00:44:02,040 --> 00:44:03,000
Well, that's what I was just thinking

1185
00:44:03,000 --> 00:44:04,640
because with Android, I'm not very satisfied

1186
00:44:04,640 --> 00:44:06,560
with the version there because it seems

1187
00:44:06,560 --> 00:44:07,760
I have more stalls on Android

1188
00:44:07,760 --> 00:44:09,640
than I have on my Linux laptop.

1189
00:44:09,640 --> 00:44:11,000
So I want more knobs.

1190
00:44:11,000 --> 00:44:12,440
Yeah, very good point.

1191
00:44:12,440 --> 00:44:13,280
Yeah, very good point.

1192
00:44:13,280 --> 00:44:15,320
And I think it's gonna be there for you, Wes.

1193
00:44:15,320 --> 00:44:16,640
I think you will be able to.

1194
00:44:16,640 --> 00:44:18,880
Like I say, I mean, this changes everything

1195
00:44:18,880 --> 00:44:19,800
for me going forward.

1196
00:44:19,800 --> 00:44:22,680
I will forever going forward on my Linux boxes.

1197
00:44:22,680 --> 00:44:25,160
I mean, I'm gonna go start after the show installing it.

1198
00:44:25,160 --> 00:44:26,400
And now it's gonna be one of the things

1199
00:44:26,400 --> 00:44:27,760
like along with tweaking my fonts

1200
00:44:27,760 --> 00:44:29,800
and installing themes, Wes, and getting extensions,

1201
00:44:29,800 --> 00:44:32,680
I'll be installing an early memory out of memory killer

1202
00:44:32,680 --> 00:44:34,960
because that's how I roll.

1203
00:44:34,960 --> 00:44:35,880
That's pretty cool.

1204
00:44:35,880 --> 00:44:37,320
And I'm glad to see it getting turned on.

1205
00:44:37,320 --> 00:44:40,120
Now we'll see where it goes from here.

1206
00:44:40,120 --> 00:44:41,440
All right, now how about a couple of pics?

1207
00:44:41,440 --> 00:44:43,200
Not just one, but two pics.

1208
00:44:43,200 --> 00:44:44,080
Yes, please.

1209
00:44:44,080 --> 00:44:46,520
The first one, new shell.

1210
00:44:46,520 --> 00:44:49,560
It's a new type of shell.

1211
00:44:49,560 --> 00:44:51,680
Okay, all right, I'm gonna admit it.

1212
00:44:51,680 --> 00:44:52,520
I didn't put this one in,

1213
00:44:52,520 --> 00:44:54,680
so I hadn't really looked at this.

1214
00:44:54,680 --> 00:44:55,920
This looks pretty great.

1215
00:44:55,920 --> 00:44:56,960
You'll be pretty pleased to hear

1216
00:44:56,960 --> 00:44:58,960
that it's written in Rust, so.

1217
00:44:58,960 --> 00:44:59,800
What, what?

1218
00:44:59,800 --> 00:45:00,640
What was that, Wes?

1219
00:45:00,640 --> 00:45:02,200
Yeah, that's right, it's written in Rust.

1220
00:45:02,200 --> 00:45:03,240
Oh my gosh.

1221
00:45:03,240 --> 00:45:04,240
Yes, yes.

1222
00:45:11,560 --> 00:45:13,520
Yes, it is hammer time.

1223
00:45:13,520 --> 00:45:14,600
Very good.

1224
00:45:14,600 --> 00:45:16,160
It's got all kinds of smart support

1225
00:45:16,160 --> 00:45:18,520
for different formats and natively understand things

1226
00:45:18,520 --> 00:45:22,640
like XML, JSON, INI files, other configuration files.

1227
00:45:22,640 --> 00:45:25,000
And as you will see, if you visit their website,

1228
00:45:25,000 --> 00:45:27,320
when you run just the average old LS command,

1229
00:45:27,320 --> 00:45:30,480
instead of getting the normal sort of pure text LS output,

1230
00:45:30,480 --> 00:45:32,800
you get a lovely little table.

1231
00:45:32,800 --> 00:45:34,720
And new shell has a bunch of built-ins

1232
00:45:34,720 --> 00:45:35,640
to help you sort with that.

1233
00:45:35,640 --> 00:45:38,400
So instead of having to use flags to LS to configure,

1234
00:45:38,400 --> 00:45:39,520
like I only want to see things

1235
00:45:39,520 --> 00:45:41,120
that are this new or whatever,

1236
00:45:41,120 --> 00:45:42,920
you just sort of pipe it and say,

1237
00:45:42,920 --> 00:45:44,920
well, when the date is after this.

1238
00:45:44,920 --> 00:45:46,440
Oh, Wes, this is really cool.

1239
00:45:46,440 --> 00:45:48,880
Oh, I love what it does with PS and LS.

1240
00:45:48,880 --> 00:45:51,720
Oh my gosh, that, oh, that's so nice.

1241
00:45:51,720 --> 00:45:55,400
So it's basically making mcurses tables,

1242
00:45:55,400 --> 00:45:58,840
just a UI to just outline the data easier to see.

1243
00:45:58,840 --> 00:46:00,320
Well, but you can also interact with that data.

1244
00:46:00,320 --> 00:46:01,600
So you can filter on the different things.

1245
00:46:01,600 --> 00:46:04,880
You can load a JSON document into the exact same table

1246
00:46:04,880 --> 00:46:07,000
and use all the same tools to interact with it

1247
00:46:07,000 --> 00:46:08,360
and pipe it back out again

1248
00:46:08,360 --> 00:46:10,920
to traditional command line programs.

1249
00:46:10,920 --> 00:46:12,680
It's definitely, as I admit,

1250
00:46:12,680 --> 00:46:14,320
inspired by things like PowerShell, right?

1251
00:46:14,320 --> 00:46:16,920
That have these sort of rich objects behind the scenes.

1252
00:46:16,920 --> 00:46:19,160
And it's almost like a little subdomain

1253
00:46:19,160 --> 00:46:23,400
that you get with this rich capability in this new shell,

1254
00:46:23,400 --> 00:46:24,560
while still having access

1255
00:46:24,560 --> 00:46:26,640
to a somewhat traditional command line experience

1256
00:46:26,640 --> 00:46:28,200
to go do all the rest of the programs

1257
00:46:28,200 --> 00:46:30,480
that might not be supported by, you know,

1258
00:46:30,480 --> 00:46:32,280
what the additional superpowers.

1259
00:46:32,280 --> 00:46:34,040
Stay a while and listen.

1260
00:46:34,040 --> 00:46:35,160
And now one more.

1261
00:46:35,160 --> 00:46:36,960
And you know, this one's a hot market one

1262
00:46:36,960 --> 00:46:38,800
because it's just got a launchpad page.

1263
00:46:38,800 --> 00:46:40,240
Does it not have a homepage?

1264
00:46:40,240 --> 00:46:41,080
What's the matter with this thing?

1265
00:46:41,080 --> 00:46:42,640
It doesn't, I wasn't able to find one.

1266
00:46:42,640 --> 00:46:45,640
There might be one out there, but I wasn't able to find it.

1267
00:46:45,640 --> 00:46:47,240
All right, so tell me about Timekeeper Next.

1268
00:46:47,240 --> 00:46:52,120
So Timekeeper, Time KPR, which it was originally known as,

1269
00:46:52,120 --> 00:46:53,640
and then they changed the name a few times,

1270
00:46:53,640 --> 00:46:56,320
and now it's Timekeeper Next,

1271
00:46:56,320 --> 00:46:59,240
essentially allows you, you know, everyone's at home right now

1272
00:46:59,240 --> 00:47:00,840
and their kids are using their computers.

1273
00:47:00,840 --> 00:47:02,560
And likely, if you're listening to the show,

1274
00:47:02,560 --> 00:47:05,640
your kid is using a Linux-based computer.

1275
00:47:05,640 --> 00:47:09,760
You can install Timekeeper through a PPA currently.

1276
00:47:09,760 --> 00:47:11,480
It's also in the Arch repos,

1277
00:47:11,480 --> 00:47:14,080
but you can install a Timekeeper to keep track

1278
00:47:14,080 --> 00:47:17,760
of the time used on these desktop environments

1279
00:47:17,760 --> 00:47:20,440
on the computer for any other user on the system.

1280
00:47:20,440 --> 00:47:23,240
So say your kids log in and you want to allow them

1281
00:47:23,240 --> 00:47:28,240
to log in and use the machine through the certain hours,

1282
00:47:28,440 --> 00:47:31,880
or if you want to maybe allow them to use the machine,

1283
00:47:31,880 --> 00:47:36,200
they can't use it past midnight until 8 a.m. in the morning,

1284
00:47:36,200 --> 00:47:39,040
and then you only want them to have three hours

1285
00:47:39,040 --> 00:47:41,360
of computer access for the day.

1286
00:47:41,360 --> 00:47:44,400
You can set all this up on a per-user basis.

1287
00:47:45,280 --> 00:47:47,640
So it's a nice little way to kind of, you know,

1288
00:47:47,640 --> 00:47:50,080
keep your kids off of the computer a little bit

1289
00:47:50,080 --> 00:47:52,120
while you're stuck at home.

1290
00:47:52,120 --> 00:47:53,400
Yeah, or yourself.

1291
00:47:53,400 --> 00:47:54,240
Yeah, absolutely.

1292
00:47:54,240 --> 00:47:55,880
Honestly, I have a hard time.

1293
00:47:55,880 --> 00:47:57,880
Just in the last couple of days,

1294
00:47:57,880 --> 00:47:59,120
well, really yesterday and today,

1295
00:47:59,120 --> 00:48:01,960
I'm trying to get myself to move more

1296
00:48:01,960 --> 00:48:04,160
because I used to have this mindset

1297
00:48:04,160 --> 00:48:05,920
that I would just sit down and marathon a day

1298
00:48:05,920 --> 00:48:07,920
and just work, work, work, work, work, work, work, work,

1299
00:48:07,920 --> 00:48:08,760
all day long.

1300
00:48:08,760 --> 00:48:09,600
Yeah, it doesn't work.

1301
00:48:09,600 --> 00:48:10,920
Oh my God, like I get sore all over

1302
00:48:10,920 --> 00:48:13,120
in places I didn't know you would get sore.

1303
00:48:13,120 --> 00:48:14,920
Serious, like it's bad, so.

1304
00:48:14,920 --> 00:48:15,800
The sitting sore.

1305
00:48:15,800 --> 00:48:17,960
Yeah, well, and it's really, it's in my shoulders,

1306
00:48:17,960 --> 00:48:19,960
in my elbows, and in my wrists.

1307
00:48:19,960 --> 00:48:22,160
It's just getting, I'm getting like RSI, essentially,

1308
00:48:22,160 --> 00:48:23,000
is I think of what it is.

1309
00:48:23,000 --> 00:48:24,480
And so I gotta move around more.

1310
00:48:24,480 --> 00:48:27,000
And so something like that to help me just practice that

1311
00:48:27,000 --> 00:48:29,160
is always good.

1312
00:48:29,160 --> 00:48:31,240
So that's timekeeper next.

1313
00:48:31,240 --> 00:48:33,680
Yeah, I think for me, I would be tempted

1314
00:48:33,680 --> 00:48:35,840
just to go in and flip the switch and turn it off, though.

1315
00:48:35,840 --> 00:48:37,000
Yeah, I know.

1316
00:48:37,000 --> 00:48:38,920
If I was administrating it myself,

1317
00:48:38,920 --> 00:48:40,960
like it would have to be something like

1318
00:48:40,960 --> 00:48:44,480
I wasn't able to get in and turn off myself, you know?

1319
00:48:44,480 --> 00:48:46,680
I don't use like any of the digital wellbeing stuff

1320
00:48:46,680 --> 00:48:48,040
on my phone.

1321
00:48:48,040 --> 00:48:50,040
Here's the thing, you just change your root password

1322
00:48:50,040 --> 00:48:50,880
when you're drunk.

1323
00:48:50,880 --> 00:48:52,560
Get it all configured.

1324
00:48:52,560 --> 00:48:55,920
That is the best idea I've ever heard.

1325
00:48:55,920 --> 00:48:57,280
That's a Westpain pro tip right there.

1326
00:48:57,280 --> 00:48:58,320
Yeah, no doubt.

1327
00:48:58,320 --> 00:48:59,960
Yes, it is hammer time.

1328
00:49:03,800 --> 00:49:08,080
Hey, does anybody know if you can run OpenSense on ARM

1329
00:49:08,080 --> 00:49:09,520
hardware, like the Pine 64?

1330
00:49:09,520 --> 00:49:11,320
Because I think that'd make a, I was just thinking

1331
00:49:11,320 --> 00:49:12,520
about our firewall segment.

1332
00:49:12,520 --> 00:49:17,160
They did make a PF Sense box that was ARM-based.

1333
00:49:17,160 --> 00:49:20,280
From my understanding, it wasn't super great.

1334
00:49:20,280 --> 00:49:23,600
It was kind of limited on the throughput side.

1335
00:49:24,640 --> 00:49:27,600
Like you couldn't saturate the gigabit connections.

1336
00:49:27,600 --> 00:49:30,320
But yes, from my understanding,

1337
00:49:30,320 --> 00:49:33,440
there is already ARM hardware out there

1338
00:49:33,440 --> 00:49:35,520
running PF Sense and OpenSense.

1339
00:49:35,520 --> 00:49:36,920
I could sniff around.

1340
00:49:36,920 --> 00:49:37,760
We'll see.

1341
00:49:37,760 --> 00:49:39,640
Alex says he can do a low-power cheap setup,

1342
00:49:39,640 --> 00:49:41,320
so I'm waiting to see, but I'm just trying to think.

1343
00:49:41,320 --> 00:49:42,320
Yeah, 100 bucks.

1344
00:49:42,320 --> 00:49:44,880
100 bucks are used, I'm going to write a blog post

1345
00:49:44,880 --> 00:49:46,920
before the next self-hosted episode.

1346
00:49:46,920 --> 00:49:49,480
100 bucks, and you'll build an x86 system

1347
00:49:49,480 --> 00:49:52,000
that draws about 15 watts.

1348
00:49:52,000 --> 00:49:53,000
Okay, all right.

1349
00:49:53,000 --> 00:49:54,600
Okay, you got me with that, because I was going to say

1350
00:49:54,600 --> 00:49:58,360
my entire setup right now draws like 50 watts,

1351
00:49:58,360 --> 00:50:00,440
and I am so stinking proud of that.

1352
00:50:00,440 --> 00:50:04,400
That includes router, Wi-Fi, and switch, and now four Pi.

1353
00:50:04,400 --> 00:50:05,920
So it might be actually, I haven't actually checked it

1354
00:50:05,920 --> 00:50:08,280
since I added the fourth Pi, so.

1355
00:50:08,280 --> 00:50:10,240
But I'm going to shut down one of them, so it won't matter.

1356
00:50:10,240 --> 00:50:11,280
Yeah, I am, so.

1357
00:50:11,280 --> 00:50:14,160
You know who else is running a super inexpensive

1358
00:50:14,160 --> 00:50:19,160
and low-powered PF sense box is our buddy Tyler Condulo.

1359
00:50:19,520 --> 00:50:24,520
He runs a, I think it's a Wyze thin client.

1360
00:50:27,200 --> 00:50:28,040
Oh yeah.

1361
00:50:28,040 --> 00:50:29,280
As a PF sense box, yeah.

1362
00:50:29,280 --> 00:50:30,920
Wow, that's wild.

1363
00:50:30,920 --> 00:50:33,040
I remember those old boxes.

1364
00:50:33,040 --> 00:50:35,480
All right, well, I just have a quick disclaimer,

1365
00:50:35,480 --> 00:50:38,200
really quick, but I just want to get it out there.

1366
00:50:38,200 --> 00:50:42,800
Alex and I have decided together

1367
00:50:42,800 --> 00:50:44,520
that we're going to take things to the next level

1368
00:50:44,520 --> 00:50:47,040
in our self-hosted relationship,

1369
00:50:47,040 --> 00:50:49,840
and we have launched a Discord server.

1370
00:50:49,840 --> 00:50:52,840
I think you need the hallelujah.

1371
00:50:52,840 --> 00:50:53,680
Now, okay.

1372
00:50:53,680 --> 00:50:55,320
A beautiful baby server.

1373
00:50:58,240 --> 00:51:00,720
Now listen, if you don't use Discord already,

1374
00:51:00,720 --> 00:51:02,280
don't sign up on our account.

1375
00:51:03,440 --> 00:51:05,360
We're not trying to convert anyone to use Discord.

1376
00:51:05,360 --> 00:51:08,520
We're making a community there for people that use it,

1377
00:51:08,520 --> 00:51:10,600
selfhosted.show slash Discord.

1378
00:51:10,600 --> 00:51:11,800
I want to get the word out there,

1379
00:51:11,800 --> 00:51:13,920
because I know some of you already have Discord accounts

1380
00:51:13,920 --> 00:51:15,600
and you want to use it.

1381
00:51:15,600 --> 00:51:18,440
And something that Alex and I have talked about on the show

1382
00:51:18,440 --> 00:51:20,640
is trying to strike these balances from time to time.

1383
00:51:20,640 --> 00:51:23,440
We obviously lean towards hosting it yourself,

1384
00:51:23,440 --> 00:51:25,360
and we're very aware of ways we could do that

1385
00:51:25,360 --> 00:51:27,280
from IRC to Matrix.

1386
00:51:27,280 --> 00:51:31,360
But Discord is where the community is.

1387
00:51:31,360 --> 00:51:33,600
And so for the people that are there,

1388
00:51:33,600 --> 00:51:36,000
we have created a Discord server.

1389
00:51:36,000 --> 00:51:39,480
And Alex, do you have any other thoughts

1390
00:51:39,480 --> 00:51:40,320
you want to add to that?

1391
00:51:40,320 --> 00:51:42,000
Well, for some people, it's just like crazy

1392
00:51:42,000 --> 00:51:44,120
that the self-hosted show is using Discord.

1393
00:51:44,120 --> 00:51:46,360
I know, we're a pair of heathens, aren't we?

1394
00:51:47,440 --> 00:51:48,640
We knew that was coming though,

1395
00:51:48,640 --> 00:51:50,280
within 20 minutes of launching it.

1396
00:51:50,280 --> 00:51:52,360
It just boils down to pragmatism in the end.

1397
00:51:52,360 --> 00:51:54,080
I've written a blog post to try and outline

1398
00:51:54,080 --> 00:51:56,520
some of our thoughts in a bit more detail

1399
00:51:56,520 --> 00:51:57,960
as to how we came to that decision.

1400
00:51:57,960 --> 00:52:01,600
So blog.katyz.me is the first post on there at the moment.

1401
00:52:01,600 --> 00:52:04,480
And yeah, there'll be a link in the show notes.

1402
00:52:04,480 --> 00:52:05,760
It's a truly contentious issue.

1403
00:52:05,760 --> 00:52:07,680
It's why we're still on IRC for this show,

1404
00:52:07,680 --> 00:52:10,240
even though I think we'd probably have

1405
00:52:10,240 --> 00:52:13,560
maybe a thousand people in there if we were on Discord.

1406
00:52:13,560 --> 00:52:14,560
And you know, it's interesting

1407
00:52:14,560 --> 00:52:17,440
because it's just really, it's the audience.

1408
00:52:17,440 --> 00:52:19,720
I launched a Discord server for Unfilter recently.

1409
00:52:19,720 --> 00:52:21,440
It was like two weeks ago.

1410
00:52:21,440 --> 00:52:24,440
It took until this weekend, like two days ago.

1411
00:52:24,440 --> 00:52:26,280
Somebody said, hey, how come we're doing this on Discord?

1412
00:52:26,280 --> 00:52:28,480
But when we launched it for self-hosted,

1413
00:52:28,480 --> 00:52:30,200
it was within 20 minutes of launching it

1414
00:52:30,200 --> 00:52:31,640
that somebody said, what?

1415
00:52:31,640 --> 00:52:32,960
All about those expectations.

1416
00:52:32,960 --> 00:52:34,960
Yeah, and we're totally aware of that.

1417
00:52:34,960 --> 00:52:37,040
And that's something we'll address in self-hosted

1418
00:52:37,040 --> 00:52:38,280
if you check out self-hosted.

1419
00:52:38,280 --> 00:52:41,840
And also, if you start and go through our early episodes,

1420
00:52:41,840 --> 00:52:44,160
like we had one with Wendell very early on,

1421
00:52:44,160 --> 00:52:45,960
we really kind of get into our rationale there

1422
00:52:45,960 --> 00:52:48,680
about when it's absolutely vital to self-host

1423
00:52:48,680 --> 00:52:51,440
versus when you can make a compromise.

1424
00:52:51,440 --> 00:52:53,600
And I think that's important even just for Linux users.

1425
00:52:53,600 --> 00:52:55,040
It's not just a self-hosting thing.

1426
00:52:55,040 --> 00:52:56,400
It's also a software thing.

1427
00:52:56,400 --> 00:52:58,680
Linux isn't always the right solution.

1428
00:52:59,800 --> 00:53:01,000
Sometimes.

1429
00:53:01,000 --> 00:53:01,840
Now, it's true.

1430
00:53:01,840 --> 00:53:09,080
And I think when you judge someone for using Windows

1431
00:53:09,080 --> 00:53:11,920
or for Mac OS, in a way, what you're actually doing

1432
00:53:11,920 --> 00:53:14,720
is you're judging them for choosing something

1433
00:53:14,720 --> 00:53:16,520
that you did not choose.

1434
00:53:16,520 --> 00:53:19,200
You're sort of projecting a moral value onto them.

1435
00:53:19,200 --> 00:53:21,600
And then you're judging them for that projection

1436
00:53:21,600 --> 00:53:24,360
of a moral value that they never subscribed to.

1437
00:53:24,360 --> 00:53:26,640
And it's a complicated thing to judge people

1438
00:53:26,640 --> 00:53:30,040
for what they use because you're essentially shaming them

1439
00:53:30,040 --> 00:53:32,760
in your head or publicly for choosing something

1440
00:53:32,760 --> 00:53:33,600
you didn't choose.

1441
00:53:33,600 --> 00:53:35,960
And that is a slippery slope.

1442
00:53:35,960 --> 00:53:37,840
Well, and you know, it's rare that you actually understand

1443
00:53:37,840 --> 00:53:40,000
the complete context of all of those choices

1444
00:53:40,000 --> 00:53:41,320
that other people are making.

1445
00:53:41,320 --> 00:53:44,200
Yeah, very typical because it's very hard to, you know.

1446
00:53:44,200 --> 00:53:45,680
You may not understand them for your own choices.

1447
00:53:45,680 --> 00:53:47,320
Yeah, sometimes.

1448
00:53:47,320 --> 00:53:48,520
So I agree.

1449
00:53:48,520 --> 00:53:51,400
I think it's sometimes very, very likely

1450
00:53:51,400 --> 00:53:52,600
that Linux is gonna do a great job,

1451
00:53:52,600 --> 00:53:54,000
but it's not always the right tool.

1452
00:53:54,000 --> 00:53:55,960
And we shouldn't judge people for not using it.

1453
00:53:55,960 --> 00:53:59,040
I happen to like it a lot, but it's fine if you don't.

1454
00:53:59,040 --> 00:54:00,000
Really.

1455
00:54:00,000 --> 00:54:03,080
I stumbled into a conversation thread

1456
00:54:04,080 --> 00:54:06,760
on YouTube and on Reddit over the weekend

1457
00:54:06,760 --> 00:54:11,280
where somebody was being outed for running Windows

1458
00:54:11,280 --> 00:54:14,000
who was supposed to be like a Linux developer.

1459
00:54:14,000 --> 00:54:17,280
And they were outed for using Windows 10.

1460
00:54:17,280 --> 00:54:21,960
And I just felt like it was, like it's sort of old now.

1461
00:54:21,960 --> 00:54:23,600
It's like we kind of moved past all that.

1462
00:54:23,600 --> 00:54:25,040
It seems like it's one of those things

1463
00:54:25,040 --> 00:54:27,160
that people like to just hang on.

1464
00:54:27,160 --> 00:54:29,040
And I get being a purist,

1465
00:54:29,040 --> 00:54:32,000
but in that same vein, I think it's always just right

1466
00:54:32,000 --> 00:54:34,640
to use the tool that's good for the job,

1467
00:54:34,640 --> 00:54:36,200
that's perfect for the job, you know.

1468
00:54:36,200 --> 00:54:37,520
And when a lot of us came to this,

1469
00:54:37,520 --> 00:54:39,480
I mean, before you learned about licenses

1470
00:54:39,480 --> 00:54:40,560
and all of these things,

1471
00:54:40,560 --> 00:54:41,560
or maybe you came into computers

1472
00:54:41,560 --> 00:54:44,480
before the open source and free software movements,

1473
00:54:45,760 --> 00:54:47,200
computers are tools to do things.

1474
00:54:47,200 --> 00:54:49,160
We're excited about playing with them and using them.

1475
00:54:49,160 --> 00:54:50,320
And yes, I think for a lot of us,

1476
00:54:50,320 --> 00:54:52,120
once you discover open source and free software,

1477
00:54:52,120 --> 00:54:53,320
you're like, okay, this makes sense.

1478
00:54:53,320 --> 00:54:56,120
This is how we should try to be doing things for computers.

1479
00:54:56,120 --> 00:54:57,480
It's just a natural fit,

1480
00:54:57,480 --> 00:54:59,280
but there's still a whole bunch of tools out there

1481
00:54:59,280 --> 00:55:02,960
that are very useful in a huge range of fields.

1482
00:55:02,960 --> 00:55:03,800
And they're still great.

1483
00:55:03,800 --> 00:55:04,640
Yeah, well said.

1484
00:55:05,600 --> 00:55:09,760
It's funny because while we look at things like Fedora 32,

1485
00:55:09,760 --> 00:55:12,640
and we talk about Ubuntu 20.04,

1486
00:55:12,640 --> 00:55:14,800
it doesn't seem like I have this view,

1487
00:55:14,800 --> 00:55:17,720
but I truly do see this as sort of a post-distro show.

1488
00:55:17,720 --> 00:55:18,920
Like it's all great.

1489
00:55:18,920 --> 00:55:20,040
It's all good.

1490
00:55:20,040 --> 00:55:21,680
And it's just different kinds of good

1491
00:55:21,680 --> 00:55:23,240
for different use cases.

1492
00:55:23,240 --> 00:55:24,840
Like this show can get into Mint.

1493
00:55:24,840 --> 00:55:26,320
I can put myself in that head space

1494
00:55:26,320 --> 00:55:28,440
and I can appreciate things like time shift

1495
00:55:28,440 --> 00:55:29,760
and the way the updates are labeled out

1496
00:55:29,760 --> 00:55:32,200
or I can get myself in the head space of,

1497
00:55:32,200 --> 00:55:33,920
even we tried out Regolith recently.

1498
00:55:33,920 --> 00:55:35,320
I was like, actually kind of like this.

1499
00:55:35,320 --> 00:55:36,600
I get it.

1500
00:55:36,600 --> 00:55:38,840
And it's because when you step back and you remove

1501
00:55:38,840 --> 00:55:40,320
that sort of like, well, it should be like

1502
00:55:40,320 --> 00:55:41,360
this kind of thing.

1503
00:55:42,240 --> 00:55:44,480
And you just roll with kind of the awesome software

1504
00:55:44,480 --> 00:55:45,320
that it is.

1505
00:55:45,320 --> 00:55:47,160
It sort of doesn't really make sense

1506
00:55:47,160 --> 00:55:49,120
to have these different camps and tribes

1507
00:55:49,120 --> 00:55:50,000
in different distros,

1508
00:55:50,000 --> 00:55:51,800
cause they're all using the same upstream stuff.

1509
00:55:51,800 --> 00:55:53,360
They're all struggling with the same problems.

1510
00:55:53,360 --> 00:55:57,480
And often in almost, not all, but in a lot of cases,

1511
00:55:57,480 --> 00:55:59,360
maybe the majority of cases, behind the scenes,

1512
00:55:59,360 --> 00:56:02,000
the developers chat with each other.

1513
00:56:02,000 --> 00:56:04,440
They work on multiple projects.

1514
00:56:04,440 --> 00:56:06,800
It's not uncommon for them to work on several.

1515
00:56:06,800 --> 00:56:08,280
Especially in the open source world, right?

1516
00:56:08,280 --> 00:56:09,920
Where there's all these shared fundamentals.

1517
00:56:09,920 --> 00:56:11,560
Neil, what are the different distributions

1518
00:56:11,560 --> 00:56:13,280
you contribute to on a regular basis?

1519
00:56:13,280 --> 00:56:15,520
Oh boy, let's see.

1520
00:56:15,520 --> 00:56:18,160
Primarily I'm involved in Fedora and OpenSUSE,

1521
00:56:18,160 --> 00:56:21,120
but I also work in Magia, OpenMandriva.

1522
00:56:21,120 --> 00:56:23,360
A little tiny sliver in Debian.

1523
00:56:23,360 --> 00:56:26,680
I've got a little bit more than a sliver in Ubuntu.

1524
00:56:26,680 --> 00:56:29,680
I used to work on a couple of other distributions

1525
00:56:29,680 --> 00:56:32,720
like Unity and a few other,

1526
00:56:32,720 --> 00:56:35,800
Unity Linux and a couple of others.

1527
00:56:35,800 --> 00:56:39,960
I have done a little bit in Alpine, some in Void.

1528
00:56:39,960 --> 00:56:41,720
There was a little bit of time

1529
00:56:41,720 --> 00:56:43,520
where I was working with the Exervo people.

1530
00:56:43,520 --> 00:56:45,560
But Neil, some of those are competitors with Fedora,

1531
00:56:45,560 --> 00:56:46,680
you madman.

1532
00:56:46,680 --> 00:56:52,760
I'm sorry to break your heart, Chris, but for the most part,

1533
00:56:52,760 --> 00:56:56,840
all of us talk to each other and work with each other fairly often.

1534
00:56:56,840 --> 00:56:58,360
Some more than others.

1535
00:56:58,360 --> 00:57:00,960
There are some that like to live on their little islands.

1536
00:57:00,960 --> 00:57:05,920
But in general, at least within the larger distro communities,

1537
00:57:05,920 --> 00:57:08,160
to a great extent,

1538
00:57:08,160 --> 00:57:11,760
we do talk to each other and work with each other on common problems.

1539
00:57:11,760 --> 00:57:13,240
It's common software.

1540
00:57:13,240 --> 00:57:15,080
That's why the tribalism between the distros,

1541
00:57:15,080 --> 00:57:17,920
I think is sort of silly and that's why I call this a post-distro show

1542
00:57:17,920 --> 00:57:19,200
in that sense.

1543
00:57:19,200 --> 00:57:23,360
And I apply that same logic to judging people for other tools that they use.

1544
00:57:23,360 --> 00:57:25,160
I just don't think it really makes a lot of sense.

1545
00:57:25,160 --> 00:57:30,560
I do find a certain important moral value in free software,

1546
00:57:30,560 --> 00:57:34,440
but I don't need to have somebody else subscribe to that same moral value.

1547
00:57:34,440 --> 00:57:38,920
And just like I happen to like the Linux flavors I like,

1548
00:57:38,920 --> 00:57:42,400
but there's such a range and variety of different distros and Linux users

1549
00:57:42,400 --> 00:57:43,240
that it's fine.

1550
00:57:43,240 --> 00:57:44,280
Yeah, we just celebrate that.

1551
00:57:44,280 --> 00:57:45,600
We're all using the same stuff.

1552
00:57:45,600 --> 00:57:51,400
What is the purpose of this show of JB in general of what we're doing here?

1553
00:57:51,400 --> 00:57:53,800
It's to further the open source agenda, isn't it?

1554
00:57:53,800 --> 00:57:54,640
Absolutely.

1555
00:57:54,640 --> 00:57:56,840
Free software rules the world.

1556
00:57:56,840 --> 00:58:01,200
Yeah, and to help others find it and be part of a community.

1557
00:58:01,200 --> 00:58:05,640
And sometimes, to quote the orange one in the chat,

1558
00:58:05,640 --> 00:58:08,720
sometimes it's about using the best tool rather than the right tool.

1559
00:58:08,720 --> 00:58:12,440
Yeah, and I think Linux is the right tool for a lot of jobs.

1560
00:58:12,440 --> 00:58:14,320
And that's what we talk about here.

1561
00:58:14,320 --> 00:58:19,440
And for a lot of us, it's sufficient that it's all you need.

1562
00:58:19,440 --> 00:58:27,520
I had a great chat with Neil about Pagoo, a GitLab alternative.

1563
00:58:27,520 --> 00:58:30,240
We just dedicated an extras to that that came out this morning.

1564
00:58:30,240 --> 00:58:32,120
It's 14 minutes long, so it's just a quick one.

1565
00:58:32,120 --> 00:58:34,240
Extras.show slash 69.

1566
00:58:34,240 --> 00:58:36,960
If you are curious about a self-hosted GitLab alternative

1567
00:58:36,960 --> 00:58:42,040
that few projects are involved with these days, some less than before,

1568
00:58:42,040 --> 00:58:44,800
and then, of course, the free software is rolling out,

1569
00:58:44,800 --> 00:58:48,880
it's GitLab-like solution that we based on.

1570
00:58:48,880 --> 00:58:49,560
Pagoo?

1571
00:58:49,560 --> 00:58:50,720
Prager?

1572
00:58:50,720 --> 00:58:51,320
Pagger.

1573
00:58:51,320 --> 00:58:51,800
Pagger.

1574
00:58:51,800 --> 00:58:53,920
Troll.

1575
00:58:53,920 --> 00:58:55,680
Oh, am I trolling again?

1576
00:58:55,680 --> 00:58:57,480
Sometimes I do that.

1577
00:58:57,480 --> 00:59:00,920
All right, well, go find more of my work at chrislast.com.

1578
00:59:00,920 --> 00:59:04,400
Go find more of Wes at wespain.

1579
00:59:04,400 --> 00:59:07,520
And of course, at techsnap.systems.

1580
00:59:07,520 --> 00:59:08,960
What else should we plug?

1581
00:59:08,960 --> 00:59:09,880
At Cheese Bacon?

1582
00:59:09,880 --> 00:59:11,080
Is that your handle cheese?

1583
00:59:11,080 --> 00:59:13,280
Yeah, that's me on the Twitter, at Cheese Bacon.

1584
00:59:13,280 --> 00:59:14,480
There you go.

1585
00:59:14,480 --> 00:59:16,880
And of course, you can find us in the Telegram as well.

1586
00:59:16,880 --> 00:59:19,120
We'd love to have you join us live on Tuesday.

1587
00:59:19,120 --> 00:59:21,560
Get that converted at jupiterbroadcasting.com slash

1588
00:59:21,560 --> 00:59:22,640
calendar.

1589
00:59:22,640 --> 00:59:24,200
And you can always jump in that IRC.

1590
00:59:24,200 --> 00:59:27,760
It's irc.geekshed.net pound jupiterbroadcasting.

1591
00:59:27,760 --> 00:59:29,440
You don't want us to switch to Discord.

1592
00:59:29,440 --> 00:59:30,320
Use the IRC.

1593
00:59:30,320 --> 00:59:30,960
It's real easy.

1594
00:59:30,960 --> 00:59:34,760
Just go to jblive.tv to get the stream and IRC embedded right there.

1595
00:59:34,760 --> 00:59:35,320
Boom.

1596
00:59:35,320 --> 00:59:37,280
See you next Tuesday.

1597
00:59:37,280 --> 00:59:42,280
Bye.

1598
01:00:07,640 --> 01:00:10,520
Unplugged program.

1599
01:00:10,520 --> 01:00:12,280
All right, jbtitles.com.

1600
01:00:12,280 --> 01:00:14,240
Cool, bro.

1601
01:00:14,240 --> 01:00:15,680
Is the bot working?

1602
01:00:15,680 --> 01:00:16,760
Let's check.

1603
01:00:16,760 --> 01:00:18,760
I rebooted it earlier.

1604
01:00:18,760 --> 01:00:20,200
You snuck in there and rebooted it before we started.

1605
01:00:20,200 --> 01:00:21,280
Good thinking.

1606
01:00:21,280 --> 01:00:22,640
You know, you just got to reboot the bot.

1607
01:00:22,640 --> 01:00:25,240
You know what we need is a bot command that reboots itself.

1608
01:00:25,240 --> 01:00:26,000
Metabot.

1609
01:00:26,000 --> 01:00:27,760
Yeah, a master bot.

1610
01:00:27,760 --> 01:00:31,680
We need to start porting JBot to Discord right away.

1611
01:00:31,680 --> 01:00:33,320
It's not a horrible idea, actually.

1612
01:00:33,320 --> 01:00:35,640
Ideally, though, in the same crippled format.

1613
01:00:35,640 --> 01:00:38,560
We don't want to improve it too much.

1614
01:00:38,560 --> 01:00:40,400
Right, absolutely.

1615
01:00:40,400 --> 01:00:43,200
Something you have to kill from time to time.

1616
01:00:43,200 --> 01:00:44,840
It's troublesome personality.

1617
01:00:44,840 --> 01:00:46,960
What I think is interesting, too, is that, you know,

1618
01:00:46,960 --> 01:00:50,000
this talk about Discord and tools and so on and so forth,

1619
01:00:50,000 --> 01:00:53,000
we all know that Discord's using open source technologies

1620
01:00:53,000 --> 01:00:53,840
under the hood.

1621
01:00:53,840 --> 01:00:54,640
Oh, yeah.

1622
01:00:54,640 --> 01:00:55,960
They're written in Elixir.

1623
01:00:55,960 --> 01:00:57,640
Yeah, well, and you know, their servers

1624
01:00:57,640 --> 01:00:58,720
are all on the back end.

1625
01:00:58,720 --> 01:01:01,560
I know that's so true for so many services.

1626
01:01:01,560 --> 01:01:03,440
It's a tricky line there.

1627
01:01:03,440 --> 01:01:04,920
So first, I actually would have been

1628
01:01:04,920 --> 01:01:06,480
real interested if you guys had decided

1629
01:01:06,480 --> 01:01:11,480
to do like a JB network matrix to replace Geek Shed.

1630
01:01:11,480 --> 01:01:15,080
But one thing I know, I mean, I think

1631
01:01:15,080 --> 01:01:19,080
it'd be way more successful than the IRC server is.

1632
01:01:19,080 --> 01:01:22,120
But when it comes to things like Discord and Slack

1633
01:01:22,120 --> 01:01:25,800
and all of those, like, they're all proprietary solutions.

1634
01:01:25,800 --> 01:01:28,320
And I'm kind of stuck having to use them for various reasons

1635
01:01:28,320 --> 01:01:29,360
and like whatever.

1636
01:01:29,360 --> 01:01:32,080
Like, I grit my teeth and deal with it.

1637
01:01:32,080 --> 01:01:35,080
But the thing that annoys me more

1638
01:01:35,080 --> 01:01:37,520
is the fact that they're so bad at contributing back

1639
01:01:37,520 --> 01:01:39,360
to the community.

1640
01:01:39,360 --> 01:01:40,720
Like, they build lots of stuff.

1641
01:01:40,720 --> 01:01:41,520
They clearly do.

1642
01:01:41,520 --> 01:01:43,880
They build really innovative things.

1643
01:01:43,880 --> 01:01:48,440
But they don't, to some degree, share the wealth back

1644
01:01:48,440 --> 01:01:51,960
to the community to help build bigger and better solutions.

1645
01:01:51,960 --> 01:01:54,840
And that's the part that I get more annoyed

1646
01:01:54,840 --> 01:01:56,520
about more than anything else.

1647
01:01:56,520 --> 01:01:57,240
Hmm.

1648
01:01:57,240 --> 01:01:58,000
Hmm.

1649
01:01:58,000 --> 01:01:59,000
That's what I say there.

1650
01:01:59,000 --> 01:02:00,120
That doesn't sound good.

1651
01:02:00,120 --> 01:02:03,520
Until those engineers move on to another job with the skills

1652
01:02:03,520 --> 01:02:07,560
they picked up at Discord and build something else better,

1653
01:02:07,560 --> 01:02:09,000
maybe this time it will be open.

1654
01:02:09,000 --> 01:02:09,640
Who knows?

1655
01:02:09,640 --> 01:02:10,160
Possibly.

1656
01:02:10,160 --> 01:02:11,000
Possibly.

1657
01:02:11,000 --> 01:02:12,800
That's what I always hope for.

1658
01:02:12,800 --> 01:02:15,720
Well, I certainly picked up most of my skills

1659
01:02:15,720 --> 01:02:18,040
working on software that will never see the light of day

1660
01:02:18,040 --> 01:02:21,080
publicly for companies that are obviously

1661
01:02:21,080 --> 01:02:22,800
paying me money to do so.

1662
01:02:22,800 --> 01:02:24,240
And here I am contributing.

1663
01:02:24,240 --> 01:02:25,320
So it does happen.

1664
01:02:25,320 --> 01:02:27,440
Just maybe not quite in the ways we hope.

1665
01:02:27,440 --> 01:02:29,440
I would say you probably also picked up

1666
01:02:29,440 --> 01:02:32,000
a lot of hardware skills when you worked at the Apple store.

1667
01:02:32,000 --> 01:02:34,160
And now you're building home-assisted controlled

1668
01:02:34,160 --> 01:02:34,720
devices.

1669
01:02:34,720 --> 01:02:38,680
So we all kind of come full circle.

1670
01:02:38,680 --> 01:02:40,960
Alex, tell me about the printing factory

1671
01:02:40,960 --> 01:02:42,200
you've turned into over there.

1672
01:02:42,200 --> 01:02:43,000
Oh, my god.

1673
01:02:43,000 --> 01:02:45,640
I'm so bored of 3D printing.

1674
01:02:45,640 --> 01:02:48,460
I've printed nearly 300 face shields for medical workers

1675
01:02:48,460 --> 01:02:49,560
over the last seven days.

1676
01:02:49,560 --> 01:02:50,640
Ooh, very nice.

1677
01:02:50,640 --> 01:02:52,000
That's great, though.

1678
01:02:52,000 --> 01:02:55,640
About $500 in donations and lots and lots

1679
01:02:55,640 --> 01:02:58,080
of folks in local nursing homes and hospitals and stuff.

1680
01:02:58,080 --> 01:02:59,080
Very, very grateful.

1681
01:02:59,080 --> 01:03:02,480
So I'll be so happy when the big molds come online

1682
01:03:02,480 --> 01:03:03,160
and I can stop.

1683
01:03:03,160 --> 01:03:05,660
But for now, I think it's a valuable public service.

1684
01:03:05,660 --> 01:03:07,160
Do people come by and pick them up,

1685
01:03:07,160 --> 01:03:08,280
or do you have to deliver them?

1686
01:03:08,280 --> 01:03:08,920
Yep.

1687
01:03:08,920 --> 01:03:11,280
All hours of the day, I have given out

1688
01:03:11,280 --> 01:03:13,840
batches of 20 or 30 at a time.

1689
01:03:13,840 --> 01:03:15,960
They cost about $0.50 to make each.

1690
01:03:15,960 --> 01:03:18,760
And people generally seem to be donating about $1 each

1691
01:03:18,760 --> 01:03:21,840
to cover filament costs and electric and time

1692
01:03:21,840 --> 01:03:22,880
and that sort of stuff.

1693
01:03:22,880 --> 01:03:25,880
So it's been really great to see the community pull together.

1694
01:03:25,880 --> 01:03:26,840
That is really neat.

1695
01:03:26,840 --> 01:03:30,320
I'll drop the link to the blog post you wrote there, Alex.

1696
01:03:30,320 --> 01:03:33,080
I jumped on it, too, and had been printing them and was lucky

1697
01:03:33,080 --> 01:03:35,560
enough that the school donated their filament

1698
01:03:35,560 --> 01:03:38,360
from their 3D printer that's on the fritz

1699
01:03:38,360 --> 01:03:41,880
and also donated a ton of transparency sheets

1700
01:03:41,880 --> 01:03:45,280
for the actual face shield part.

1701
01:03:45,280 --> 01:03:47,240
But if anyone out there is interested,

1702
01:03:47,240 --> 01:03:49,760
I'd know, Neil, you have a 3D printer.

1703
01:03:49,760 --> 01:03:50,440
Jump on it.

1704
01:03:50,440 --> 01:03:51,200
You know what?

1705
01:03:51,200 --> 01:03:53,640
You guys just earned a taco.

1706
01:03:53,640 --> 01:03:54,560
Good job.

1707
01:03:54,560 --> 01:03:56,920
Yes.

