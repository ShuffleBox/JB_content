It's been a little bit since we've given Vim love, but now we have two excuses.
First one being, you can now play Mario on Vim.
It's a Vim plugin.
How about that, right?
It's so great.
It's, it's so great.
It's a little rough, but it is definitely, no doubt about it, Mario and there's Goombas
in there and you're jumping on them and I mean, why not?
The real game is an excuse to talk about Vim today, which this week turned 29 years young.
How about that?
Almost 30 years of Vim.
Happy birthday.
And you know what?
They're still going strong.
The birthday announcement has a lot of good news about where Vim is going, what's happening,
including a whole bunch of improvements to testing, reliability, and just nice features.
Happy birthday, Vim.
We talk a lot about Nano, the world's best editor.
You know, I shoot down every time I try to add a story to the doc.
Slipped one in today though.
I mean, it is the birthday.
Hello friends, and welcome into your weekly Linux talk show.
My name is Chris.
My name is Wes.
Hello, Wes.
Episode 378 of your Linux talk show is brought to you by a cloud guru, the leader in hands
on learning in the cloud for Linux and modern tech skills, hundreds of courses, thousands
of hands on labs.
Get certified, get started, get hired.
Go to a cloud guru.com.
Wes we have a lot to get into today.
It appears that there may be a whole new way to build and distribute applications on Linux
and it's not electron, Wes.
What?
That's right.
They're native applications.
And for so many years we have heard the promise of write once, run everywhere.
But it may be that the stars have aligned and just that has actually happened.
I'm talking native applications for Windows, Mac, Linux, Android from one tool.
That's everywhere.
I'll tell you about it more in a little bit, but of course we've also got a bunch of community
news to get into.
And I mean, we have some big batch.
This is way too much.
We should have trimmed this a little bit.
It's an irresponsible show, but nevertheless, we persist.
Little batch maintenance is all I'm saying, Wes.
It's all I'm saying.
Time appropriate greetings, mobile room.
Hello.
Time appropriate greetings.
Hello.
Hello.
Hello.
It's still the election.
Yeah, it is election day.
Hello, virtual lug.
Good to have you because we do have some big news to get into today, an untrimmed batch
as it were.
And we start with news about the Raspberry Pi and a new version of it, a new faster version
of it that is built into a keyboard.
It's called the Raspberry Pi 400.
It is a $70 Linux box that harkens back to the days of my childhood where I had a computer
that was built into the keyboard.
It was much bigger than this that you could hook directly up to the television.
Inside the Raspberry Pi keyboard, which is a product that has been shipping for a while,
so if you've seen that, you know what this thing looks like.
Inside that now, and in a slightly larger version, they have built a full-fledged Pi
computer in that plastic keyboard.
Oh, yeah.
At the heart of the Raspberry Pi 400 is a 1.8 gigahertz ARM Cortex A72.
This quad-core chip is similar to last year's Raspberry Pi 4 that you know and love so well,
Chris, but it is clocked to run slightly faster.
It has a slightly revved version of the Raspberry Pi 4 CPU chip, and that's interesting to note.
Although it's only four gigabytes of RAM, they didn't go to the full eight gigabytes.
Yeah, I would have liked to have seen that.
There's also two micro HDMI ports, so you could actually connect this to two monitors
at once, each up to 4K at a time.
That's nuts.
And it's not like they just put a Pi in this thing.
Yeah, I mean, anyone could do that.
We'll link you to a blog that did a teardown, but the Pi 400 is using a custom mainboard
that is a form factor we've never seen for the Raspberry Pi before that sort of fills
out the back end of this keyboard.
There's also a bit of thermal work that's been done in there.
It looks almost like just a regular Raspberry Pi keyboard until you look at the back of
it and you will see there's still GPIO pins there, which I think is really interesting.
You see the USB, you see Ethernet, you see the micro SD card slot.
It looks like it's going to be pretty easy to get access to that thing, too.
If you want to build something, you just probably will need an adapter that can connect right
into that space for the GPIO pins.
Yeah, you know, I like that because the Pi has always been this sort of, you know, craft
enabling project just because it's crammed into a keyboard here doesn't mean you no longer
have that.
I think this is a good quote by their founder, Eben Upton, Raspberry Pi has always been a
PC company inspired by the home computers of the 1980s.
Our mission is to put affordable, high performance, programmable computers into the hands of people
all over the world.
A couple of interesting things of note here, I think the name Pi 400 tells us that there
will likely be a Pi 500 and a Pi 600 when there's a Pi 5 and a Pi 6.
That's a natural evolution.
Right.
It's not really delayed from the main board.
Like we see, we almost see a bit of a potential release cadence coming up here.
First you release the main Raspberry Pi, so the Raspberry Pi 5, then six to nine months
after that, you release the compute board and maybe you don't do this for every Pi model,
but you know, I don't know.
Pick standout ones.
Right.
And then a few months after that, the all in one.
The other thing that this strikes me here is this is just the keyboard.
It ships, you can get it with a kit for a hundred dollars that comes with a mouse and
a guy and a pre flashed Raspberry Pi OS.
So basically everything that you need right there.
And I did actually pre-order the kit.
What?
It might be, I think make for a really great Christmas gift.
I haven't picked who yet, but maybe it's me.
Worst case, you just always got like an extra little computer ready to go laying around.
Yeah.
Like, you know what's funny about this is often one of the things that, and you know
this is true, one of the things we're looking around the studio for is a keyboard.
No kidding.
I think we've had to resort to hooking up like an unused Mac keyboard on the server
in this, in the, in the disgraceful.
It is.
Yeah.
So there is that advantage to it, but not everybody is like me where they have more
monitors than keyboards.
And so it makes me wonder if we won't see a future all in one kind of like an iMac,
but instead it's a Raspberry Pi.
I'll be just powering the whole thing and well, and when you get the kit, maybe it comes
with the Raspberry Pi keyboard that looks like this, but without the computer in it.
I would like to see something like that because that would actually make a more compelling
gift for my kids.
Yeah.
And it's simple.
You don't have to think about it.
There's no other matching or figuring out, you don't know what kind of monitor you need
or how to hook it up.
Right.
Not a problem.
Maybe that'll be the Pi 800 with eight gigs of RAM.
Right.
You're going to pre-order that next.
Yeah.
I just want something nice, like a 1080p decent size screen, you know, putting like a 20 inch
monitor, 21 inch monitor.
That'd be just right.
I wonder if they're not going this direction.
We recently talked on Linux Action News about, and we talked about on this show too, about
Ubuntu 2010 focusing their desktop support, the full fledged GNOME Shell desktop version
of Ubuntu on the Raspberry Pi 4.
Yeah, that's pretty cool.
Well, guess what now just works out of the box?
Right here.
It's a natural choice.
Yeah.
I think Canonical has an idea of where the Raspberry Pi Foundation is taking this.
And I think that was part of why with 2004, they got base server support working.
And I can testify that it works well.
I have it running on like four Raspberry Pis.
And then with 2010, they got the desktop side.
And we looked at them and we said, well, this doesn't make a lot of sense.
It seems a little slow.
It seems like a lot when you could just run MATE or XFCE.
Right.
But when you start to see this strategy emerge, and this thing's a little bit faster.
It's going to get faster because it's probably going to keep going.
When the next Ubuntu LTS comes around, something tells me there'll be a Raspberry Pi device
that runs it just fine.
And Canonical will have been there for years in these interim releases, getting that support
nailed down.
It'll be a standard platform by then.
Yeah.
And it's a safe bet that there's going to be more devices like this.
They're not slowing down.
And I think it's going to sell well.
It was one of those news announcements where I got a lot of people that said, hey, did
you see this?
And of course, because of the time zone differences, it came out during our nighttime, although
I wasn't able to sleep that night.
So I actually jumped on the pre-order right away.
I was up and-
You are a news hound.
I was.
I got on it.
And then when I went to bed and I got like a solid hour, 45 minutes of sleep, I woke
up to just tons of messages from people on the east side that had woken up and seen the
news and wanted to make sure-
Chris, have you heard?
Which I appreciate.
I think that's great.
If that breaks, it gives me an idea of the interest in the audience when I hear from
a bunch of people tell me about it.
And I also am excited about it.
So I jumped on it.
And I'll give you a full review.
I paid for it with my own hard earned money because I don't want to, you know, I don't
need a review.
You don't want to own it.
And I want to give you a full review.
And so whoever gets it's going to get it with the box already being opened once.
But that's the price they have to pay, Wes.
We have some links to the Teardown, which is really interesting.
It's a much wider board.
It runs about 65, 70 percent the length of the keyboard, where a traditional Pi would
just take up a small portion of that.
Sort of squashed and stretched it out.
The technical difference between the Raspberry Pi 4 that you probably already own or have
already heard about and the version that's shipping today in the Pi 400 is just essentially
a rev on the chip and it's obvious in this Teardown that the model is just changed by
a couple of numbers and it is capable of essentially hitting better performance at better thermals.
And it appears to have a few software level bug fixes that the already shipped version
that's also on the Raspberry Pi Compute have, but are obviously not super issues.
But you know, you get some things in production, you make some tidies, you make a revision
on the chip, you get better thermals, you have less bugs and slightly better performance.
And that all kind of came together here.
There's more information in the show notes, but nice to see it.
I would love eight gigs.
Yeah, that would be that would be a big one because at that level, I feel like I'd be
I feel pretty comfortable, especially just as another computer.
Maybe it's attached to a TV somewhere in my home or just laying around if I need a backup
or I have a guest.
It also clearly, clearly signals that they are interested in people using the Pi as a
desktop.
Well, we've kind of been debating over the years, like when is it going to get there
to really make sense, at least not in a I can only afford a Pi, but if you know, when
is it just usable?
Yeah, when is it no longer a compromise?
And it's just like, why would you pay for anything more?
And when you start to get it out like this, as a bundle for $100, there's a lot of family
members that just need email, they want access to a few websites, that would really work
for them.
I personally feel like the performance isn't there, I think, to the degree that they seem
to be signaling.
But if they're building these units, they're clearly interested in that they have the Raspberry
Pi OS where they can continue to build and evolve a lower resources desktop that performs
well.
So we'll see more, I think.
It's really interesting.
I myself would buy one of these and probably throw Manjaro or Ubuntu on there myself, with
probably a lead towards Manjaro just because the improvements are going to come in quicker
from upstream.
You love that Roland.
I do.
Speaking of Manjaro, Phil from Manjaro joins us to give us a couple of updates on things
including an upcoming Nibia release.
So what is the details here?
Welcome, Phil.
Hello, hello.
Great to be back.
So yes, also I got on the Raspberry Pi train and have also ordered two of the 400s.
And yes, we know about Ubuntu, that it's not as best.
So we try to get it faster.
We will try it with KDE as we did that with PiBook Pro already.
And maybe we go also even crazier and try Deepin, because that is the real new thing.
I don't know how it works, but maybe I will try that out.
I've had a fascination with Deepin.
It's come up a lot between Wes and I off air recently about talking more or trying it more,
but I just haven't gotten around to it.
But I do like the idea of Plasma too, because in my opinion, it scales surprisingly well
to a range of hardware.
You would think it only works on high end stuff, but surprisingly, they've put a lot
of work into making Kaywin work pretty efficiently on lower powered hardware.
Thank you.
I'll keep an eye out for that.
But that's not Nibia.
What is Nibia?
Well, Nibia is the new release we're planning, it's 20.2, which is the successor of Mika.
We will update the kernel to 5.9, have the latest Plasma on it, this would be the 5.20.3
when it's out.
And of course, we have done a lot of work in the GNOME section.
So we will have maybe Blymos working again and some setup like OEM, so the user can simply
choose to configure it on the PC when he gets it.
So if you have some old people or friend and you want to install a Manjaro on it, you can
simply partition everything, get everything ready and then give him the complete computer
and he can set up his user and own settings by his own.
So maybe this will boost up also the usage of the GNOME edition.
And maybe if that is good, then we might extend it to other editions like XFC and KDE as well.
That's great to hear.
Over the last few weeks, I've kind of been making a transition back to GNOME Shell.
And so that's really good to hear that.
Now you said something there I got to ask you about, because we've been trying to figure
out what is going on with kernel 5.9 and NVIDIA driver support, because I've seen there's
an NVIDIA driver update, but it's not clear if they've solved the 5.9 GPL condom issue
or not.
It sounds like you're shipping 5.9.
So you've probably been looking at this.
Well, we will ship it and we already tested the community gave us feedback.
So CUDA is working again.
You can use Blender again and also Darktable.
So it seems to fix it.
But I wonder myself as well, because they didn't announce it that it's fixed.
So I only see the last message like mid November, you will have a fixed version.
So it seems they made it already early November.
So good for them, but communication is a little bit broken, it seems.
Yeah, that's interesting that they wouldn't have made an announcement about it.
But it there was the update and CUDA does seem to be working with 5.9, which was the
key problem.
And it would appear they really turned that around.
I mean, I guess they had a heads up about this whole thing.
But I guess I go back to the old days of Linux when a younger Chris was running Linux and
I could see myself waiting around six, seven months before a vendor would get off their
duff and fix something.
And here it almost seems like Nvidia not only got it out relatively fast for a large company,
but they are almost, they're almost like not addressing it.
Like they don't even want to talk about the fact that it was an issue.
They don't want there to be any concern.
They don't want anybody to worry about it.
Yeah, the community taught them otherwise and they had to react.
So there was even two announcements, one in the graphics section and one is the customer
section that 5.9 was not working after the community spoke up.
So I don't know what it is.
Yeah, they made a big, they did make it clear it wouldn't work, but now they haven't made
it clear that it would work and maybe something's forthcoming still, but, or maybe they just
don't want to raise a lot of attention to it.
Well, I will keep my eye out for Nibia, especially for the GNOME Shell version.
That sounds pretty good.
I've seen people showing pictures of their Manjaro edition pine phones arriving.
Ooh.
I've seen a lot of that.
So it seems like people are getting them already.
I even got an update from someone.
He got a phone, everything branded with Manjaro and he popped it up and he saw a post-market
where, so I don't know what's going on there, but I linked him the factory image, so maybe
he can test it out and get the proper image on it, but things happen.
At least the branding version is out and everything is working.
And what I also know is it's now the 1.2.B version, which has also stabilized the screen.
So it's a small fix, but it's visible.
Very good.
Well, congratulations.
I think that's, I mean, it's a big deal to actually get those out there.
XMN in the chat room says that he got his.
I wonder if it had Manjaro on it or post-market, but it looks like they're getting out there.
So if you do get some, put them on, put them up somewhere on Reddit or social media or
something.
We'd love to see it.
We do.
I'll drop it in the Telegram group, jupitabroadcasting.com slash telegram and tag me so I can see it
in there because I love it when people get new hardware and I'd love to hear people's
impressions of it.
Well, Phil, thanks for joining us and congrats on the updates and join us again soon when
you got some news.
Okay.
Sure.
Sure.
Will do.
And it's great to have me as well.
I bet.
Yeah.
So we have some more kernel news.
This is looking ahead a little bit.
Here we're talking about 5.9, which most people don't even have yet and 5.10, which is supposed
to be a pretty great release.
We talked about that recently and we're going to go one even further out.
We're going to talk about 5.11 and the reason why I want to do this is I want to make the
point that there's just a lot of good stuff coming down the pipeline for Linux users.
Some fruit company is going to have an announcement next week and actually all kidding aside,
I'm sure Apple is going to have some pretty impressive machines to show.
But I want to remind you, the Mac OS is a bit stale as a platform.
Yes, you can put lipstick on Big Sur and make it more touch friendly, but the underlying
pinnings, they haven't really updated the Unix user land really much ever.
They just kind of drag it along to the latest versions that they can consume from the BSD
projects.
It certainly doesn't feel like it's a priority.
No, I mean, it really doesn't.
It feels like it's funny.
It feels second class now even compared to Windows command line capabilities, right?
Because with WSL and the new Windows Terminal, when you open up the Mac OS Terminal, it's
this little white box with bad fonts and a weird shell and it's just really basic and
there's been no effort.
You really on a Mac to make it work, you need to go get iTerm.
And everyone does.
You need to install Brew and I just want to remind everyone that there's still a lot of
really good stuff coming up for us Linux users.
Not only are our desktop environments getting more kick ass than ever, and I can, I feel
like I can say that having watched this for a long time, but the core stuff that's coming
in the kernel, it's never been better for us desktop users.
We are getting taken care of in a way that I honestly didn't expect.
After years of the cloud being the dominant force for Linux and then Android coming along,
I really was worried that at a kernel level, us desktop users would just be the lowest
priority.
But there are several projects that are landing in 5.9 that are then landing and also landing
in 5.10 that I'm really looking forward to.
And now we have something in kernel 5.11.
And I'm going to take a guess that the name is pronounced Collabora.
We've talked about them before.
And they've been doing work on the Linux kernel recently on behalf of Valve.
So stick with me here.
So we're talking about kernel 5.10, sort of coders for hire over at Collabora have been
hired by Valve to improve Linux gaming, particularly around the things like the Proton compatibility
layer.
So that's what they're sponsoring work again for, something around the compatibility layer.
And one of the big missing pieces right now with Proton games on Linux that has, it sort
of has curbed some of the enthusiasm, if you will, is anti-cheat and DRM technology that's
in some of these games.
It can just entirely break Windows games in wine and Proton.
And we talked about this once before, Wes, on the show.
And we said, unfortunately, it looks like one of the ways to fix this requires modifying
the kernel.
And I said, well, that's never going to happen.
Turns out, maybe it will.
This is some good info from a talk over at the Open Source Summit by Gabriel Crisman-Bertazzi
on the state of Linux gaming.
And one of the key points that he made was system call emulation and adding that functionality.
Because unfortunately, it's just often required because these DRM and anti-cheat systems are
actually issuing system calls directly from the Windows game code.
And that ends up bypassing wine, wine doesn't capture those system calls and then the games
often crash.
Yeah.
And there's really nothing we can do about that unless there's something answering those
system calls.
Yes.
And you know, they tried a user space solution at first, which would have been simpler and
wouldn't have required changing the kernel.
But unfortunately, that was still tripping up DRM and anti-cheat systems and also wasn't
great for performance.
So they've ended up creating the syscall user dispatch, which has been specifically made
in the kernel to deal with these emulated needs.
Isn't that interesting?
It is because it could have wider ramifications beyond gaming when it comes to emulating Windows
software here.
But I think it should be clear, it's not about trying to bring the Windows world to Linux.
They address this in the talk.
They're just trying to ease emulation.
So where that crossover does happen, it works on Linux as good and rock solid as a Linux
application could.
But what it seems has happened is they've kind of expanded to a wider set of what they
call pain points of Linux gaming, including device bring up, solving file system issues,
improving performance in other areas of the system.
They have a team looking at some of the scheduling stuff that maybe could be optimized in future
kernel releases as well.
So all of this stuff works better.
And you've got to think, if a game plays a little bit better because of some performance
improvements in the system and in the vial system, well, then a lot of other things are
going to work better, too.
Probably even your web browser is going to work better, right?
So this could have this could have a lot of nice improvements for Linux users that are
regular desktop users, not even playing video games.
Absolutely.
And, you know, it's just nice sign of this healthy continued collaboration, right?
Like it wasn't just that Proton happened and it was a big dump throw, you know, stuff thrown
over the wall, pushed out there and then kind of left.
It's been actively developed.
And now we're in that rich stage of more advanced secondary problems and smoothing that can
happen like these changes.
With this, what Valve has decided to invest their resources and money into instead of
Steam boxes, one hundred percent OK with that, right?
Way better decision.
And I wonder if that wasn't the calculation because the Steam boxes seem like they're
gone, right?
They do.
Yeah.
Linux gaming is more exciting than ever.
And some of this could land in 5.11.
So thank you to Collabora.
Thank you to Valve and the kernel developers who help integrate this stuff.
Man, am I stoked about that.
Now, another thing, just a quick one here that we talked about a little while ago is
after GNOME Shell 3.3.8, that's the end of the three series.
But I don't know if you recall this part.
You might.
The solution is instead of going to GNOME 4, which is what we've expected forever since
it was.
I mean, we're on three now.
We were on GNOME 2 and then we got GNOME 3 and then we thought we'd get GNOME 4.
And now what we're getting is GNOME 40.
And it looks like we actually have some dates now attached to GNOME 40.
Buckle up.
Yeah, it's slated for release on March 24th, 2021.
And you know, actually, they've simplified the development cycle along with the version
change there, because there will no longer be four development milestones released before
you get to beta, only three with an alpha, a beta and a release candidate.
Huh.
Is that what you say?
Yeah.
I actually think they're going to get some nice efficiency out of that.
And it solves like all these weird like considerations.
And we talked about the logic in a previous show.
But it means the final release of GNOME 40 is set for March 24th, which is just in time.
March 24th, 2021, of course, which is just in time for Ubuntu 21.04, which is due for
release on April 22nd and Fedora 34, which is due for release on April 27th.
Interesting.
Yeah, you know, I hope this goes well.
And I always it seems boring, but I always like to see some of these, you know, development
improvements.
Investing in the process itself, I think, is another sign of a healthy project that's
trying to enable better development.
Tyler, you point out that also lines up nicely with some other important releases.
Yes.
So with the new versioning, it means that GNOME 42 is going to line up with Ubuntu 22.04,
which means that the next Ubuntu LTS will have a desktop that is the answer to life,
the universe and everything.
GNOME Shell 42 better be a real winner, you know, right?
Fingers crossed.
Yeah.
I know.
So that's when you hear these large numbers coming at you in the near future.
That's what's going on.
We knew it was coming.
It's going to be all right.
Just prepare yourself.
Now, anybody want to take the over under on how many years they're trying to work themselves
out of this crazy numbering convention?
Maybe once they get to 100.
Yeah, that's a natural point right there.
Yeah.
Then they start at Roman numerals.
GNOME Shell X.
Yeah.
Oh, this is going to get confusing.
Linode.com slash unplugged.
Go there to get a $100 60 day credit towards a new account and you go there to support
the show.
Linode is our cloud server provider and because the price is so great, it makes it possible
for a small team to have killer infrastructure.
We have just kick butt fast systems that would have just required crazy expensive systems
back in the rack and stack at day.
And so much planning and development, we don't have time for that.
Great point.
Great point.
One of the things that as a Linux user I love about Linode is they've got like all the distros
you'd want.
The Alpines, Arch, recent CentOS releases, Debian releases.
Of course, they have Fedora 33 on there and other Fedora releases, same with OpenSUSE
and Ubuntu.
You choose.
And they also have pre-built systems if that's your style.
Yeah, right.
Depending on like if you're doing a stack script or an image, is you can actually swap
out the distro for the pre-built thing you want.
Oh, that's neat.
If you want to use Debian instead of OpenSUSE, so you just choose that and then generate
it.
It's the one you're more comfortable with.
Yeah.
They started in 2003 as one of the first companies in cloud computing before AWS because they
saw what Linux could do.
As Linux users, and that kind of speaks to me too, is that I really saw what Linux could
do when I was in IT.
And I pivoted from the Windows line of things over to the Linux line of things.
And it's because I saw where this was going.
And Linode was like way ahead of the game, way before AWS.
And they're independently owned too.
So they didn't have to go get a bunch of VC funding, which just to go crazy, hire like
nuts, build out all this infrastructure, get all this debt and then sell yourself.
Instead, they built it up themselves and they own it.
And they're dedicated to offering the best virtualized cloud computing out there.
If it runs on Linux, it runs on Linode.
So I want to encourage you to take advantage of our $100 60-day credit.
You go to linode.com slash unplugged, you support the show, you get a $100 60-day credit
towards a new account.
Well, isn't that kind of nice?
Go to linode.com slash unplugged.
Thank you to Linode for sponsoring the unplugged program.
And thank you to everybody who goes to our sponsor page, lets them know you heard about
it here and tries out their offers, linode.com slash unplugged.
So I teased it at the beginning of the show, but there is a platform that is super interesting
that I always thought would be really great if it came to Linux.
And then I got an email about the Windows calculator getting ported over to Linux, like
the open source.
And I thought, well, how does this work?
And what did it take to get this Uno platform on Linux?
Because one of its tricks is it's not like an electron based setup.
What it is, is native applications on each destination hosts OS.
And I figured to get that to work on Linux, that must have been quite the journey.
So I had their CTO from the Uno platform come on the show.
So I'm Jerome, I'm the CTO at Uno platform.
And Jerome and I went through a couple of things like what it took to get Uno over here.
We talked about his Linux setup a little bit, the feedback he got from the Linux community,
the technology stack that they used, the reaction to choosing snap packages and how they handled
that feedback as a company that was new to the Linux community, that's all in there.
So I started with Jerome by congratulating him on the Uno platform and the big release
that I think was more than a year in the making for Linux.
Yeah, thank you.
It was an amazing one, a great response from the community.
Good, good.
Well, so I'm pretty new to the Uno platform and I was doing a little digging around and
I saw the first commit was by you on May 7th, 2018.
And now here we are in October of 2020 and the Windows calculator has been essentially
ported to Linux using the Uno platform and that caught my attention.
So can you explain to me what the Uno platform is?
Sure.
So the Uno platform is developer tooling and framework that allows for developers that
know about C-Sharp and XAML.
So the main Windows development toolkit that's for Windows developers to basically take their
code and port it over to iOS, Android, WebAssembly, Mac OS, Windows 7 in some cases, and Linux.
So that's a lot of platforms to target, but that's the basic idea.
And we want to make sure that people can reuse their skills that they have mostly on Windows,
but now with the interest of Linux being able to target one platform and then have it run
over to the others without changing much.
Well, it seems like there's been a dozen or more promises over the years of a single code
base.
Yes.
But like a lot of times the downside seems to be generally it may be one or two things,
potentially performance, but often you sacrifice what I would say like a native UI experience.
So as Linux users we'll often kind of get left out in that scenario.
Does the Uno platform address that differently?
Uno platforms were originally built for iOS and Android.
And there's always two sets of people, there's the ones that want to have the same UI everywhere
and there are other people that do want to have close to the platform and have some tweaks
around to be able to run on those devices.
So let's say that if you are on iOS, you want to have the iOS UI and Android UI to have
the Android UI specific for that one.
The problem is that in some of the frameworks that are doing this, React Native is kind
of close to that, for instance, is that you only can do that.
And then if you want to do some custom drawing, then it gets difficult.
So what we did with the Uno platform and we took what Microsoft has been doing for a while
with the XAML tooling and extended it to be able to do what is called look less control.
So let's say if you want to create a button, then in your markup or whatever that you're
using, then you create your button and then underneath you can style it to use whatever
the platform provides or your own style if you want to.
So if you're running on iOS, you're going to have your native button or toggle switch
or checkbox or whatnot.
Or you can change that style of that button that you've put in your code and then it can
render to whatever your fancy designers are going to be wanting to have, like a new video
button or whatever.
So that's the kind of things, the two ways to render.
I see.
So and that happens at build time of the project?
It renders out each native UI?
No, it really is at runtime.
You can actually switch.
We have a demo somewhere that shows that you can basically have a button and then you can
change the style of the button or the checkbox or whatnot at runtime so you can data bind
it to change it, change it visually so that it looks the way you want to.
So it's not really useful to change that style at runtime, but you can have a default style
if you want to for one specific page and then for another page you can have something else.
So that's the kind of things that happens.
And on the Linux side, does that target, say, like a single toolkit like GTK or Qt?
Yeah, so that's where I'm talking about.
There's a second way to look at that.
So the first way is we're using what the native primitives of the platforms are able to provide
us.
So let's say the ability to draw a combo box or a rectangle, something like that, but using
the platform primitives.
So we're instructing iOS or Android to draw a rectangle the way a native Android and iOS
application would do.
And then when we're going to the other platforms, people are asking us, I want to be able to
draw by the pixel.
So some of those users, not all of them.
So I want to draw by the pixel.
So what we said is, okay, so let's build a by the pixel render or backend rendering system
that allows us to take the same thing that we're doing on the other platforms that are
not specific to the platform.
So let's say if you want to render a button that has specific corners, a text inside,
that is the same everywhere, but we're going to be using Skia.
So the rendering engine that Chrome uses to render itself, we're using this to render
the applications on Linux for now.
Oh, fascinating.
But that doesn't mean that we're going to stay there.
It's one of the rendering methods that we're using.
So for instance, and that means for that matter, that's your application for now, let's say
the calculator, the Windows calculator, we put it over.
That one is really not using any of the GTK primitives to render a button or text or something
like that.
It's really drawing a canvas and pixel one by one.
So that's what's happening right now.
But we have the ability to change that and use another thing.
So let's say if we were to be having someone that says, well, I really want to have a GTK
rendering backend or a cube rendering backend or any kind of rendering backend that would
make sense, then it's possible to do that and actually use those controls there.
So it's an effort to do that and we're not there yet.
But the point was to be able to say, well, we're able to run that kind of UI natively
if you will, because we're rendering every pixel, but it's not an Electron app, for instance.
It really is an application running as a GTK shell.
We're actually using a GTK shell.
The window itself is built upon GTK.
Ah, very good.
And I think maybe that's one of the key differentiators here, isn't it?
You can take advantage of, it sounds like Skia, which is part of Chrome, but that doesn't
mean we're using Electron here.
No, no, no, no.
Not at all.
Not at all.
Yeah.
That's really fascinating.
So I wanted to zoom out a little bit.
This is relatively new for the Uno platform.
This is kind of, it's, and also porting the Windows calculator, which is pretty, like
that's the current Windows 10 calculator.
That's pretty great.
It is.
And that's a great tech demo.
So what were the challenges coming over to Linux?
And before you answer that, I'm also curious, why now?
Why, why put the effort into supporting Linux now in October of, well, I'm sure you started
sooner, but why now?
We actually did start sooner.
It's actually a year old of effort because we had a few technical challenges to make
sure that it's not the Linux support itself.
It was all about making sure that the.NET platform was running properly and on Linux.
And many of those things have been evolving the last year, but most of the tech challenges
for us was on Uno itself, to restructure it properly so that it actually supports all
the platforms at once.
And what happens then is that for us, adding the Skia backend support was akin to modifying
the WebAssembly support.
So the WebAssembly support for Uno shares, I think it was something like close to 90%
of the code is the same as the one that is used for the Skia rendering backend.
So it's very, very close.
Fascinating.
Okay.
I think really kind of my last question is, what scope of applications do you see the
Uno platform being the right solution for?
What scale of applications?
The first commit that you see publicly on the Uno platform, the GitHub, the open source
repo is dating from 2018, but it actually started in 2013.
So it's been a while that we've been developing this.
And most of the applications that we have been doing on iOS and Android are actually
consumer grade applications and they're actually quite big.
So we're talking movie theater, movie theater, drugstores, there's a natural geographic application
that is used for people that are non-native speakers, English speakers to learn English.
So that kind of new large application that are interesting.
But now that we've expanded that with the web and with Mac OS and Linux, we're seeing
people that are getting interested into making a lot larger application like line of business
applications.
The ones that have ugly interfaces sometimes or have nice interfaces, but lots of screens
to show.
So that's the kind of thing that we're looking at and we're making lots of progress for that.
And for the Linux part specifically, that's where it gets interesting.
A lot of people have been asking us, well, I want to be able to run on Linux specifically
because I want to do IoT or I want to do very specific things with my Linux only server
that runs something for my research project or whatever, and I cannot run something else.
So that's the kind of thing that we're seeing.
But they know about C-sharp and they want to make that application run over or they
want to target both the web and the Linux because they want to have something that deploys
very easily and don't want to bother with any kind of stores.
So that's the kind of story that we're seeing there.
And adding Linux support for it is, and I've been doing Linux for, I started on Linux on
the first Red Hat release that was there in early 20, I think it was 1999 something.
So it dates back.
So it's kind of a dear heart for me.
It's been a while.
And so getting all that running, can you circle back to Linux after all this time?
It's really nice to see all those people getting interested into having applications running
there.
I bet.
Well, now I have to ask, do you have a current Linux box?
And if so, what's the setup?
I'm running mainly on Windows for now.
I actually have multiple things.
So I have a mix of Linux boxes that are running for IoT stuff that I have on my machine.
My machine is a Windows 10, but I have multiple WSL setups that are installed there so I can
test with all the different distros there.
I have an Ubuntu machine that's actually a Raspberry Pi running on it, plus a bunch
of other stuff with build machines for the calculators specifically.
So they're running on Ubuntu servers.
So lots of things.
That sounds like a pretty typical developer setup.
There's always a range of machines.
Exactly.
Plus a Mac.
Because I'm doing iOS stuff.
Sure.
It's interesting to hear WSL getting a workout.
I think kind of how Microsoft intended it to be used.
So that's fascinating.
Yes.
Yes.
And with regards to developers, it's all about expanding horizons.
And I see Mac OS users, they want to go and use Windows.
They don't want to be left out with their own tooling that they were Unix-like.
So they're using WSL for that.
There are other users that are just plain Windows users, but they have fancy tooling
that comes from Linux and they can use it that way without having to install it or maintain
the Linux box because maybe that's not their main way to develop that.
Or plain just Linux users that say, well, I have a Windows box and I want to do anything
with it, just gaming.
But I like my tooling so I can use that there.
So that's the kind of things.
Jerome, you're sort of sitting in a fascinating position as a developer.
Sounds like you've been in the Linux community in one form or another for a very, very long
time.
You've seen the transformation that Microsoft is making.
Uno Platform relies on some fundamental Microsoft technologies.
Also, I think you guys have a relationship to some degree with Canonical.
This is being distributed as a snap package.
This is almost a unicorn position in a sense, but I think one that's going to become a lot
more common.
I don't know, maybe you're not the first to this little, this quadfecta that we have here,
but it seems like this is maybe the new reality and from where you're sitting as a longtime
Linux user, I'm curious on your thoughts of where we're at right now with all this.
To be very honest, the last couple of years, let's say three or four years, I didn't follow
all the details about the packaging stories and I discovered that there's quite a few
new ones and IU snapped in one way or another.
But I stayed on the RPM and APT for a very long time, so that was my way of deploying
applications without any store.
There's always multiple ways to do things in Linux.
There's always.
But what surprised me is the community's response to snap specifically and the fact that it's
not so there's the technology itself, but there's the fact that it's also all about
having something with a centralized way of doing things.
It's not about canonical or anything like that.
It's just, I want to be able to install my things by myself.
I don't want someone to spy on me or maybe tentatively spy on me because that's not the
case for the calculator, but let's say, and so that's the kind of things that it's all
about choice.
And seeing that I said, well, I'm going to try to do a nap image of the calculator.
So there's an app image of the calculator now.
You're saying you got a lot of feedback.
I take it.
I did.
I got a lot of feedback and I read all of it, kind of skim through because there's snarky
comments and so skimming, but anyways, the interesting part is that knowing about the
preferences of people and what's available, I see snap as being a very easy commodity
way of installing things.
Same thing as a flat pack would be the same way.
But the idea is that people that are new to that space and using Linux for better or worse,
they're accustomed to installing application in a simple way from a user interface.
And I reckon that people that are the same ones that are going to be installing ArcLinux
or that kind of distribution that there's no UI and you install everything by the command
line and knowing all the options by heart, they don't want to have that kind of things
and that makes sense.
So that's why being able to have a wide variety of ways to install packages is important.
Would you say that the use of snaps is more controversial than say the use of mono or
anything into that regard from the Microsoft side?
It seems like it was pretty strong feedback and maybe I also wonder if it wasn't for your
longtime Linux experience that helped you convert that into actionable items versus
like, oh gosh, we've upset everybody.
No, no, no.
Not at all.
Not at all.
And I mean, to be honest on that part, because we've been introducing the Microsoft side
of it in many ways.
So let's say people have been, so I'm going to show you the wide range of responses that
we got.
On the iOS community, oh, this is C-sharp, this is not a native application, or it actually
is, but it looks different, it's not the same or it's not objective C code, so I'm not going
to use it.
So that's the iOS part.
On Android, they say, oh, that's not the kind of application that I want.
And it's having people that are developing things because they want to go faster.
They say, oh, the UI looks like iOS, I don't want it.
So that's the kind of response that we can also get from that one.
Then on the WebAssembly side, we say, oh, WebAssembly, that's not good.
I mean, it's something that looks, it's not JavaScript, so it sucks.
So I'm not going to use it.
That's the kind of responses that we get from communities because you're kind of an outsider
way of looking at that.
And that's fine.
It's all about adjusting how we present things, and I was pretty sure we were going to get
some kind of feedback in one way or another, and snap being one, and that's fine.
So we are adjusting for that and adding other ways to do that.
And now from the part with Microsoft specifically, I mean, Canonical, they have a relationship,
but that's not Microsoft pushing there.
Microsoft is specifically for WSL, they're providing something to enable Linux to work
there and happens to be that Canonical was one of the first to do that, but that's pretty
much it.
Now, for the calculator part, I mean, there's no Microsoft at all.
That's just Uno Platform, that we did that on our own.
So there's no pushing of any kind of agenda coming from Microsoft or any way.
Right.
It just makes a great demo.
It does.
It does.
And we're not done yet.
There's a lot of things that need to be worked out, like the fact that you cannot use the
keyboard keys to type in the calculator for now, because we haven't had added the keystroke
support for now.
So that's the kind of thing that is going to evolve.
And we've seen from the announcement people saying, well, that's Microsoft, they're going
to invade the Linux space and they're going to extinguish.
No, it's not Microsoft.
It's just Uno Platform.
We like the tech, we like Linux, and we're going there.
And the calculator is open source.
Exactly.
Exactly.
So the last point on the Snap thing is, my thought about it always is, is that it seems
to me having a central software repository that is ran by a company that you can interface
with, right?
You can have a relationship with people at Canonical.
I think that is worth something for people that want to distribute software on the Linux
platform.
And that's generally my answer to all the Snap hate, is you have to understand the larger
ecosystem.
Yeah, it makes a lot of sense.
It makes a lot of sense.
And it must not be the same, the only way to distribute software.
And that's why being able to distribute as any kind of other distribution mechanism has
to be available and supported in some ways.
That's why AppImage is amazing because you just pack everything in one package and then
it runs without installing anything.
So that's pretty good.
But for people that want to discover the interface, if my application is only distributed on GitHub,
how do I go and find it?
It's quite difficult to get there.
On the other end, if you're publishing something on Snap and like Apple, they don't want you
to distribute any kind of very specific application because the local laws prevent you from publishing
your application there.
Maybe you don't want to abide by that.
So there's a balance to get somewhere.
For us, it was about being able to be published on a store that shows the applications there.
And for people that don't know much about Linux or the kid that got a Raspberry Pi
at Christmas and then wants to install something and then just happens up to have Ubuntu running
there and then just click through and then just the applications get there.
And then they end up learning about Linux afterwards.
That's the kind of scenario that I'm looking at, not the high-end tech user that knows
how to change anything on their platform by heart.
Right.
We're really kind of the future.
And tip of the hat to you for taking that feedback and rolling with it and then taking
action on it and making it available in more ways and targeting what looks like a future
generation of developers.
Jerome, I'm pretty excited about it and I'll be keeping an eye on the platform.
Thanks for joining us.
Yeah, of course.
Thank you.
Let's do a little housekeeping, Mr. Payne.
Let's do it.
I encourage you all to join the Luplug this Sunday and perhaps into the future because
something very fun is beginning to happen over there.
They got something special brewing and there's talks, there's recordings, but also another
JB Bugathon on November 22nd at noon Pacific in the JB Mumble Room in the lobby.
There's a new release of Jellyfin in the works and the developers have reached out in our
Matrix Bugathon chat and asked if we would help test it and the Luplug has stepped up
to the challenge.
And if you'd like to help test the next release of Jellyfin, you have some time.
It's November 22nd as we record this.
Hey, that's great.
I mean, I'm a Jellyfin user myself and it's already doing well and this could only make
it better.
And I've been thinking about switching more and more.
It's really nice.
Yeah, just minimal does what you need.
Not a lot of fuss.
But there could be some talks coming up in there.
There's all kinds of stuff in the works.
So check it out.
Luplug.
Also, I want to mention, if you haven't yet, you might consider grabbing the All Shows
feed for Jupiter Broadcasting.
Get all the stuff coming out.
Wes has now joined me on Linux Action News.
First episode is out and we're changing just a few things up.
I'd love to have you check it out.
Not much, just a couple of tweaks here and there.
So go check out Linux Action News if you haven't for a little bit because we're trying to make
it a little fresh with Wes on there.
A little fresh, but with everything you love.
Fresh with Wes.
Fresh with Wes.
So check that out.
If you're on the All Shows RSS feed, you're going to get stuff like that already.
Just shows up.
Yeah.
So search for that.
There's also a link at JupiterBroadcasting.com and we'd love to have you get all of the
shows.
All right, Wes, I think that's all the housekeeping for this week.
Nice and nice today.
Let's get into some feedback.
We have three emails that came into the show.
How about I'll take the first one?
You want to do that?
Let's do it.
Okay.
Wes says, falling for Fedora says, hey, Chris and Wes, long time Ubuntu user, but after
listening to your show and after listening to about four months of this, I decided to
give Fedora a go.
Oh, interesting.
It was also kind of sped up by the timing of a new ThinkPad T14 purchase with Renoir
graphics.
What do you think, Wes?
You know what I want to call it?
I want to call it Rainier graphics, but let's just go with that.
Only you and I would get that reference.
He said, I needed kernel 5.6 or above, so I have to say I'm really impressed with Fedora
32, and now I have to decide if I'm going to upgrade to 33 or maybe switch and try Pop
OS.
Hey, welcome to my struggle right now.
It's bad because I am in that phase where I'm trying to do apt on a DNF box, and I'm
doing DNF on an app box.
You don't know what you're doing.
Oh, it's just, yeah, it really is a struggle, which this is totally my doing, Wes, but it's
because I put pop theme on all of them.
You know?
Yeah, you can't tell what system I'm on.
Yeah.
I've just really done myself in.
I really have been happy with Fedora 33.
Are you still running it?
Yeah.
Yeah?
I've been really, really, really happy with it.
There's something just super solid about it, and I really like it, but I also really
have been happy with Pop, so you just got to try them both out and see what works for
you.
Too many good choices.
That's a nice problem.
Yeah.
He's also going to give Leno to try.
Hey, that's great.
Just signed up with our link.
Yeah, I'm going to put NextCloud on there.
He says, thanks from New Zealand.
That is pretty great.
Thanks, Brett, for giving us an update.
Good luck on picking your distribution.
The nice thing is, is you just have too many good options now.
Yeah, right, and Fedora is definitely one of them.
All right.
You want to take Adrian's?
Adrian writes in, hello there, Chris and Wes.
I've been a casual Linux user since 2005, but I've always used a Debian or Ubuntu-based
distro.
I've become familiar with apt and really not feeling up to learning a new package manager.
Okay, maybe that's a bad excuse, I know.
But lately, Ubuntu has been acting oddly on my current laptop, Firefox performance, blank
screen after resuming from hibernation, other weird display problems.
So I finally decided to give Fedora a spin last week, and I have not had any of the issues
since.
Huh.
Displays are performing as expected.
Suspend works great.
And like you, I find the default setup fairly sparse, but also I like that I can slowly
make the customizations that I want as I want them, and maybe figure out what, if any, extensions
are causing me problems.
I mean, that is it right there, right, is it's with Fedora, it's I kind of build it
up to the desktop environment I want and with, and to a degree with Ubuntu stock, I kind
of build it down a little bit, but I actually really like their default.
So I almost feel like I need to channel my inner poppy here and say, you know, hang on,
we need to be fair.
All distros will exhibit problems after you've used them for a while.
That's true.
Fedora is not immune from this particular problem.
Right.
Well, you install a new setup while you get a new setup.
But I also totally appreciate, you know, when you're of the opinion, like, I'd like to jump
to something else, start fresh and just see what it's like, and there's absolutely nothing
wrong with that.
That's one of the great things we can do in Linux, and I think you're going to really
enjoy it.
So give it a spin, see what you think, and maybe report back after a little bit of usage,
Adrian.
I'd be curious to know how it goes.
Yeah.
Interesting theme there.
And not planned.
Stefan writes in, I know this is a question often asked and hard to answer.
I've been a Linux user since the mid-90s with Slackware.
I tried most of the distros at one time or another, and currently I'm running a Gentoo
system.
Oh, wow.
The thing is, I'm kind of tired of having to compile everything.
An honest Gentoo user.
Yes.
I know.
That's how I felt, too.
I'm kind of tired of having to compile everything for a little gain in speed.
I switched to Gentoo from Angera, which was great, but wasn't a fan of the rolling updates.
So I'd use Ubuntu, but I don't want to go back to a Debian-style system.
I use my system to play Steam and good old, or, sorry, GOG games, some minor Python development,
and every once in a while some C and C++.
Also I use a lot of ham radio.
So I've got some power to spare on this machine, and I've used that to dedicate that to Jellyfinner
Plex I'm still deciding.
I'm looking at the new and shining.
I'm thinking maybe I should go with OpenSUSE or elementary these days.
I'm kind of a fan of KDE5 Plasma.
Are there any other distros you would suggest?
Thanks for the help.
Been a listener for many years on and off.
Glad you're still around.
Keep up the good work.
Well, I'm glad you're still around, too, Stefan.
I kind of feel like you should, I don't normally say this.
Uh-oh.
Going rogue.
I think he should go OpenSUSE Plasma.
You didn't think?
No.
You did not.
I was just going to say you should try Fedora 33 since everyone else is loving it.
Yeah.
Okay.
Keep going.
Well, there is a Plasma spin of Fedora 33.
Indeed.
I think it's worth mentioning, you could totally give that a go, Stefan.
Consider that.
But, you know, he said in here that he's used Linux in Slackware.
Put in his time.
If you go over to OpenSUSE as a former Slackware user, you will, I think, notice some lineage
there.
I think there'll be some comfort there.
And they have a killer Plasma release.
And then I'm going to say this, too.
If you have made Gen 2 work for you, then you're okay with a distro that does things
a little differently.
In OpenSUSE, it does things a little differently, but once you've used it for six months, you
wrap your head around it.
Yeah.
And I think Stefan would be up for a challenge like that.
And it really hits that sweet spot of you can get one that's semi-rolling, or you can
get one that has stable releases, and you can pick and choose.
So I think that would be a good candidate for you.
All kinds of neat stuff with the open build service and really interesting technical foundations
for sure.
Absolutely.
And, you know, I'm a big fan of elementary.
I put it on my family's computers, but you have that Ubuntu base there, which you said
earlier, not a big fan of the Debian bases.
I think your options are to seriously consider OpenSUSE with Plasma, or maybe give the old
Fedora Plasma spin a try, just for fun.
I will talk about, you know, you mentioned Steam and GOG, and I don't have extensive
OpenSUSE experience here, but I will say it has never been easier to get gaming going
on Fedora.
There is a flat pack that has a ton of the stuff you need for Steam.
You can, with one click, add the NVIDIA driver repo now if you need in Software Center, and
you have the latest and greatest NVIDIA driver.
You get a very fresh and current kernel, which I know is also something you're interested
in.
So consider all of that, all those options.
I don't know if the story is quite the same on OpenSUSE when it comes to gaming.
Python development, you're going to be fine.
Ham radio wise, you're going to be fine.
Jellyfin or Plex, you're going to be fine either way.
Maybe give Jellyfin a go though, and if Jellyfin doesn't work for you, then consider Plex.
It's a good way to do it.
If you're doing mostly just LAN streaming too, you probably don't need to worry about
Plex.
They also play decently together too.
I have two going, and I point them at the same backing media storage on the file system,
and that works great.
Ah, a Westpane Media Pro tip right there.
I want to thank our Unplugged Core contributors.
You can become a member at unpluggedcore.com, become a core contributor to this show, and
keep the show independent for as long as this show is on the air, but you also help reduce
the ad load needed to make the show profitable, and we can be picky about who comes on, which
is massive from a content creator standpoint, but you also get a couple of perks as a thank
you.
You get access to two feeds.
I would probably just grab one of them.
One is the limited ad version of the show, same full production with all of Joe's work
gone into the mix and the edit.
There's just limited ads in that one, or a second live feed, which is like the exact
opposite.
All our screw ups, the stuff that we would maybe have cut from the show for time before
the mix, everything, full pre and post shows that happen well before we hit record in the
main recorder, all of that is in a feed that's available to our members as well.
And we also, and I don't normally say this, I should be though, because we work our butt
off on this one, we try to get that full live feed out as soon as we can after the show.
I mean, there's just limits in how fast you can encode and upload large files and it takes
us a little bit to get the description written up, but usually within a half hour of us going
off air, within that window of time, maybe an hour, the live full version is available.
So if you like to get it as fresh as possible right after the show with no delay for editing
and publishing.
Or maybe I usually like to show up live, but you missed it.
Yeah.
Perfect.
That's why we've made that feed available, because we're always talking about the live
show in the main show.
I mean, we're here live.
Yeah.
So we wanted to make that available to our core contributors as well, unpluggedcore.com.
Now a pick this week, I told you about this one earlier, but I don't know if you had a
chance to try it, Wes, because I just told you about it like two days ago.
It's called Newsflash and you'll have to forgive the cliche term, but it is applicable.
It is a quote, modern, end quote, feed reader designed for the GNOME desktop.
It looks pretty nice.
You know, I installed it this morning and I just opened it up right now.
Yeah.
Okay.
So can you tell me a little bit more?
So it says it's supposed to integrate with an existing feed reader service.
What all can this actually do?
So this is the probably most important feature for me in a desktop RSS feed reader.
I consume tons and tons of feeds for the different shows, tons and tons of feeds.
And I was way back in the day, I was a fresh RSS and a tiny, tiny RSS guy.
And I even was a Google, Google Reader.
Remember Google Reader guy?
Yes.
Yes.
And I needed something more robust.
And Feedly has actually added a lot of compelling features, including a bot that helps me sort
news for various shows and whatnot.
And they have a training algorithm where I can train it for the type of stories that
I like.
Figures out what you like.
Yeah.
And I can view in raw mode and filtered mode and all that kind of stuff that I just, for
the amount of news that is consumed for this show, Linux action news and unfilter, I needed
a tool for it.
And so I ended up using Feedly, but I never was really happy with Feedly being a web app.
I would like to have a desktop date of application, something I can sort of just leave open and
flip over to when I have a couple of minutes, something that maybe takes advantage of my
dark mode properly, integrates in with my GTK theme.
And that's where Newsflash came in.
As I hooked it up, there's several options.
Feedly is one of many options that you can connect it to for syncing, including some
self-hosted solutions.
I hooked it up to my Feedly account.
I pulled down all of my feeds, and it has a functionality that I just, I really love.
And that is this situation where you get an article that only has maybe like an image
and the title and maybe a one-paragraph description of the story, and then you have to go to the
website for the rest.
For the full thing.
Yeah, yeah.
Well, man, I'm trying to tear through stuff and read stuff and get an idea if the story
is good enough.
And I need more than just the headline if I'm going to make that call.
And this has a one-button click where it makes a best effort to go out to the website and
get the rest of the content of the article, but it displays it in line like it was always
meant to be formatted for the feed.
So it's a bit of a reader view that looks really good.
Oh, that's what this little book icon is.
Right.
You hit that, and it'll go retrieve it for you and display it in line.
And I just love that.
And then, of course, it syncs back what you've read and whatnot and supports the latest GTK
design ideas.
So all the latest menu standards and the CSD and all of that.
So it's a nice GNOME desktop app, and it's on Flathub, and I imagine it's other places
as well.
I wouldn't be surprised if this feels like maybe one of those things that was built for
maybe elementary OS maybe.
I'm not sure.
I haven't looked in the...
It is simple, clean, and functional.
Yeah.
And it's on Flathub, so it's just one click away.
So it's news flash, one word, and we'll have a link to that in the show notes.
So I'd like to hear your thoughts on it, Wes.
You give it a go for a little bit and let me know what you think.
Sounds like we've got some IRC folks using it too.
Oh yeah?
Oh.
Linbo or LinMob, you've used it before?
Yes, I'm actively using it.
I'm using it with a self-hosted Miniflux instance.
Miniflux is one of those self-hostable RSS readers.
And I can report that news flash also works on the PinePhone.
Awesome.
And it's likely going to work on the Librem 5 too.
Oh, so it is designed to scale all the way down.
That's so cool.
Oh man, we live in an interesting time for Linux users, I really have to say.
Cool.
Well, thanks for the direct report there.
I've been using it just for, I don't know, half a week.
I really like it.
And I still can use Feedly, you know, and everything's synced up, so I really appreciate
it.
I'll definitely give it a go.
You know, Wes, I encourage everyone to join us live.
We do this show at noon Pacific, 3 p.m. Eastern over at jblife.tv.
You can get that converted to your local time at jupiterbroadcasting.com slash calendar.
See you next week.
Same bad time, same bad station.
Also check out our sponsor, A Cloud Guru, on social media.
Just find A Cloud Guru at YouTube, Twitter, or Facebook by going to any of those slash
A Cloud Guru and you'll find him on there.
Easy.
And I mentioned it earlier, but do check out Linux Action News if you haven't for a little
bit.
Wes has joined me now cooking up something really great for this week's episode.
And I don't know, I'm happy.
I'm really happy with the way it turned out.
We didn't really know because we had to kind of ask ourselves what we want to tweak about
it.
But I'm really happy with what we landed on.
It's mostly the same.
A little different.
Yeah.
Check it out.
It's linuxactionnews.com for that.
Links to everything we talked about, that's on our website at linuxunplugged slash 378
where you can also get subscribed.
You can find the mumble room, the chat info.
All of that is linked up at the top of linuxunplugged.com.
Thanks so much for joining us on this week's episode of the Unplugged program.
We'll see you back here next Tuesday.
Well, speaking of the virtual lug, I wanted to pick Mini-Mech's brain because last week
you mentioned to me that you were going to try recording the luplug.
Did you give it a go?
How'd it turn out?
So Chris, honestly, I think we are really up into something here.
So we had our first recorded luplug session.
What we technically do, in fact, in MumbleList, we create just a recording room and then go
in there and anyone who wants to record, records it.
So we have multiple copies of the recording and then someone prepares a topic.
In that case, it was me.
We talked about shortcuts, mouse buttons and mouse gestures and then we had like a discussion
for about 45 minutes and then it was really, really, really, really cool.
And now we were so happy about the result that we decided that we want to do that like
once a month and during our weekly meetings, we can discuss a topic and the one who proposed
a topic that is accepted by the others can prepare a talk and can also be host of the
topic in that recorded luplug session.
So like we can earn ourselves a little podcast experience after listening to the master.
Now we can try ourselves, you see.
Now we also have like people like Computer Kid that offered his help for editing.
And the last question would be how we publish all these recordings, but we can talk about
that afterwards.
Because while we have recordings, we could do something like a monthly RSS feed and publish
our recordings.
Yeah, totally.
Isn't that a great possibility for the JB community just to give you also some feedback
to participate and yeah, do some stuff.
We are really up into something here.
I'm really happy.
That's really exciting.
I would, yeah, let's definitely talk more about like an RSS feed.
And you know, something I've always fantasized about is revamping the JB live FM stream to
have more community content on it and more current content when we're not actually live,
but programming to some degree.
That's always like when I have time for 20% project kind of thing.
That's when I want to do that.
But we could definitely set up an RSS feed a lot sooner than that.
So we'll start rubbing our brain noodles together on that one.
I bet we can figure something out.
Really kind of neat thing to watch it grow.
That's really cool.
That'll be powered by mumble.
