WEBVTT

00:00.000 --> 00:01.880
So we've been watching these videos on the pre-show

00:01.880 --> 00:03.440
before we actually started recording.

00:03.440 --> 00:04.440
The pre-pre-show.

00:04.440 --> 00:07.960
And I realized I just totally wrecked my YouTube algorithm.

00:07.960 --> 00:09.440
There's been this phenomenon where

00:09.440 --> 00:11.860
it seems like YouTube has certain types of videos

00:11.860 --> 00:14.240
they really want me to watch and other types of videos

00:14.240 --> 00:16.000
that they just completely forget.

00:16.000 --> 00:19.440
So the other day on YouTube TV at home,

00:19.440 --> 00:23.800
my wife brought up one of these like ASMR, rainy cabin

00:23.800 --> 00:26.800
background kind of music videos.

00:26.800 --> 00:28.440
Now when we're going through YouTube,

00:28.440 --> 00:31.200
we have like three rows of these videos.

00:31.200 --> 00:34.120
Watch it one time, and there's three rows of these.

00:34.120 --> 00:35.360
Have you experienced this?

00:35.360 --> 00:35.880
Yes, I have.

00:35.880 --> 00:38.440
You almost need just a separate throwaway YouTube account just

00:38.440 --> 00:40.000
for browsing random interests and then

00:40.000 --> 00:41.360
the one you carefully prune.

00:41.360 --> 00:43.480
Isn't the algorithm supposed to do this for us?

00:43.480 --> 00:47.840
Yeah, I feel like there's some big YouTube agenda, Wes.

00:47.840 --> 00:49.760
We've got to fight back against the machine.

00:49.760 --> 00:50.760
Big ASMR.

00:50.760 --> 01:02.760
Hello, friends, and welcome to episode 379

01:02.760 --> 01:04.720
of your weekly Linux talk show.

01:04.720 --> 01:07.200
This episode is brought to you by Cloud Guru, the leader

01:07.200 --> 01:08.120
in hands-on learning.

01:08.120 --> 01:10.240
The only way to learn a new skill is by doing.

01:10.240 --> 01:12.520
That's why ACG provides hands-on labs, cloud

01:12.520 --> 01:14.280
servers, and much more.

01:14.280 --> 01:16.920
Get your hands cloudy at acloudguru.com.

01:16.920 --> 01:18.040
My name is Chris.

01:18.040 --> 01:19.400
My name is Wes.

01:19.400 --> 01:25.240
And this is episode 379 of The People's Podcast, really.

01:25.240 --> 01:27.200
Let's talk about what this really is.

01:27.200 --> 01:28.800
This is a podcast for The People,

01:28.800 --> 01:30.920
and it's a special edition because right now we're

01:30.920 --> 01:33.520
joined by very special people.

01:33.520 --> 01:36.840
And let's start with Mr. Drew.

01:36.840 --> 01:38.280
Welcome back to the show, Drew.

01:38.280 --> 01:39.900
Oh my god, it's been so long.

01:39.900 --> 01:40.960
I missed you guys.

01:40.960 --> 01:41.460
I know.

01:41.460 --> 01:41.960
We missed you.

01:41.960 --> 01:43.240
Do you remember how to podcast?

01:43.240 --> 01:44.760
I think so.

01:44.760 --> 01:46.000
I guess we'll find out.

01:46.000 --> 01:48.720
I mean, yeah, this is the big test right now, live.

01:48.720 --> 01:51.800
We're doing this on a Sunday, which is unusual.

01:51.800 --> 01:53.060
Feels wrong.

01:53.060 --> 01:55.400
And Drew brought the vodka.

01:55.400 --> 01:58.960
So now that Drew's back, we're drinking.

01:58.960 --> 02:00.000
Drinking with Drew.

02:00.000 --> 02:02.140
And we're recording this a little bit early.

02:02.140 --> 02:03.360
We normally do it on a Tuesday, but we're

02:03.360 --> 02:04.460
doing it on Sunday this week, which

02:04.460 --> 02:06.000
means something else special.

02:06.000 --> 02:08.680
There's a bunch of really great people in our virtual lug

02:08.680 --> 02:10.520
that are normally here for Sunday for Luplug,

02:10.520 --> 02:12.680
but now they're here for the show.

02:12.680 --> 02:14.520
Time appropriate greetings, Mumble Room.

02:14.520 --> 02:15.020
Hello.

02:15.020 --> 02:15.520
Hello.

02:15.520 --> 02:16.020
Hello.

02:16.020 --> 02:16.520
Hello.

02:16.520 --> 02:17.020
Hello.

02:17.020 --> 02:18.200
Hello.

02:18.200 --> 02:19.040
Hello.

02:19.040 --> 02:20.440
I mean, it's a tighter crowd.

02:20.440 --> 02:22.440
I don't think we have nearly as many people watching live,

02:22.440 --> 02:23.320
but we have a handful.

02:23.320 --> 02:24.240
But they're vocal.

02:24.240 --> 02:25.960
And we have a great Mumble Room turnout,

02:25.960 --> 02:29.240
and some familiar friends and some new friends.

02:29.240 --> 02:30.880
Grim, welcome on to Linux Unplugged.

02:30.880 --> 02:32.300
I'm going to give away your secret.

02:32.300 --> 02:34.680
Grim is the Pigeon developer.

02:34.680 --> 02:36.000
You all remember Pigeon, right?

02:36.000 --> 02:37.040
Some of us still use Pigeon.

02:37.040 --> 02:37.440
Sure do.

02:37.440 --> 02:38.120
Love it.

02:38.120 --> 02:39.680
And Grim's joining us for the first time.

02:39.680 --> 02:41.960
Hey, Grim, welcome back to the, or welcome to Linux Unplugged.

02:41.960 --> 02:43.040
Hi, thanks for having me.

02:43.040 --> 02:44.880
I finally was able to make one of these times,

02:44.880 --> 02:46.240
just randomly sell your tweets.

02:46.240 --> 02:47.920
I was like, well, might as well show up.

02:47.920 --> 02:48.600
I'm glad you did.

02:48.600 --> 02:50.480
I almost said welcome back, because you and I

02:50.480 --> 02:52.440
have had conversations outside the show.

02:52.440 --> 02:53.920
But this is the first time you've been on the show.

02:53.920 --> 02:55.120
So I'm glad to have you here.

02:55.120 --> 02:57.680
And welcome to a weird Sunday edition.

02:57.680 --> 03:01.320
And then also, West Tex Jeff, who

03:01.320 --> 03:04.480
has been following the shows for a million years,

03:04.480 --> 03:07.000
he and I have shook hands dozens of times.

03:07.000 --> 03:08.840
I mean, we've met up in Texas several times.

03:08.840 --> 03:11.520
He was at Linux Academy headquarters once,

03:11.520 --> 03:13.280
and we got to show him around a little bit.

03:13.280 --> 03:14.720
He's finally joining us on the Mumble Room

03:14.720 --> 03:15.720
for the first time, too.

03:15.720 --> 03:16.560
Welcome aboard.

03:16.560 --> 03:17.600
Hey, can you hear me?

03:17.600 --> 03:18.840
I've never tried this before.

03:18.840 --> 03:19.640
It works, man.

03:19.640 --> 03:20.120
You got it.

03:20.120 --> 03:21.400
You got it going.

03:21.400 --> 03:22.600
Awesome.

03:22.600 --> 03:23.480
I'm glad you're here.

03:23.480 --> 03:24.240
I missed you, man.

03:24.240 --> 03:26.520
I can't wait till we start festing again.

03:26.520 --> 03:27.400
I know.

03:27.400 --> 03:28.040
Amen.

03:28.040 --> 03:30.440
I got one of those automatic, like you were doing this

03:30.440 --> 03:32.880
a year ago photos, or it was like a little more

03:32.880 --> 03:35.600
than a year ago, and it was Wes and I in Boston.

03:35.600 --> 03:36.680
Those were the days.

03:36.680 --> 03:39.440
I was like, oh, yeah, that used to be a thing we did.

03:39.440 --> 03:40.680
It'll happen again.

03:40.680 --> 03:41.920
It will happen again.

03:41.920 --> 03:43.640
But in the meantime, a lot of people

03:43.640 --> 03:46.040
are shifting virtual for those events.

03:46.040 --> 03:49.920
And Arch is one of them, ArchConf 2020.

03:49.920 --> 03:53.120
And it's kind of a special one because this year marks

03:53.120 --> 03:57.040
18 years since the first official release of Arch Linux.

03:57.040 --> 03:58.760
Wow, that is a long time.

03:58.760 --> 03:59.640
I know.

03:59.640 --> 04:03.360
And they organized this whole event using open source tools.

04:03.360 --> 04:04.880
We'll link to a bunch of their talks.

04:04.880 --> 04:06.440
They released them online.

04:06.440 --> 04:08.320
But I went through and watched a few of them,

04:08.320 --> 04:12.360
and they talk about how they loosely organized on IRC.

04:12.360 --> 04:14.120
And then they used Etherpad, which

04:14.120 --> 04:15.640
is that nice collaboration tool.

04:15.640 --> 04:16.400
Indeed.

04:16.400 --> 04:18.240
Yeah, they used Etherpad for a lot

04:18.240 --> 04:20.880
of the written organization.

04:20.880 --> 04:22.880
And then they held organization meetings

04:22.880 --> 04:25.680
over Jitsi or Mumble, which is just so cool.

04:25.680 --> 04:26.800
Those are all great tools.

04:26.800 --> 04:29.220
Yeah, those are all great tools to build an event like this.

04:29.220 --> 04:31.400
And it actually looks like ArchConf 2020

04:31.400 --> 04:33.000
went pretty good for them.

04:33.000 --> 04:35.640
And they had multiple streams, and they got lots of questions

04:35.640 --> 04:36.240
in.

04:36.240 --> 04:38.080
But you know me, Wes.

04:38.080 --> 04:39.600
I winged us a couple of clips.

04:39.600 --> 04:40.400
Oh, you.

04:40.400 --> 04:41.760
I don't even tell you about this.

04:41.760 --> 04:42.680
Sneaky clipper.

04:42.680 --> 04:43.200
I know.

04:43.200 --> 04:45.760
I snuck these in because I just thought it'd be fun

04:45.760 --> 04:46.760
to cover a couple things.

04:46.760 --> 04:48.840
So I got three clips, really quick ones.

04:48.840 --> 04:51.400
The first one here is from GregKH,

04:51.400 --> 04:52.640
and it's just short and sweet.

04:52.640 --> 04:56.240
GregKH is a happy, well, obviously Linus' number two

04:56.240 --> 04:57.000
kernel maintainer.

04:57.000 --> 04:59.640
He's a happy Arch Linux user, and so he

04:59.640 --> 05:02.040
prerecorded a welcome message to the conference.

05:02.040 --> 05:02.760
Hi.

05:02.760 --> 05:07.040
This is Greg Crow Hartman, and welcome to ArchConf 2020.

05:07.040 --> 05:08.960
As a longtime Arch Linux user, I'm

05:08.960 --> 05:10.800
really happy to see this conference happen,

05:10.800 --> 05:12.800
even when we're all stuck at home.

05:12.800 --> 05:14.160
Thanks to all the Arch developers

05:14.160 --> 05:15.880
for maintaining such a great system

05:15.880 --> 05:17.640
that I rely on every day.

05:17.640 --> 05:18.960
Enjoy the conference.

05:18.960 --> 05:20.760
I don't know why, but it just tickles me

05:20.760 --> 05:21.920
that Greg's an Arch user.

05:21.920 --> 05:22.760
Right.

05:22.760 --> 05:24.680
This is so great.

05:24.680 --> 05:28.560
And then Alan McRae, he did an early history of Arch talk.

05:28.560 --> 05:30.480
We'll have the full talk link because there's

05:30.480 --> 05:34.480
a lot of details, including some of the minor developments,

05:34.480 --> 05:38.280
some of the more significant political developments,

05:38.280 --> 05:41.040
like when Pac-Man came along, too, technical developments.

05:41.040 --> 05:42.600
But I captured a bit for us.

05:42.600 --> 05:48.800
So in the beginning, there was crux, and it was good.

05:48.800 --> 05:52.200
Highlights being it's simple package build scripts,

05:52.200 --> 05:57.240
simple configuration, utilities, but there

05:57.240 --> 06:00.160
was no dependency tracking.

06:00.160 --> 06:04.880
So the founder of Arch Linux, Judd, wrote Pac-Man,

06:04.880 --> 06:07.800
and it essentially spawned a distribution.

06:07.800 --> 06:12.360
So beginning in 2002, Pac-Man 1.1 was released,

06:12.360 --> 06:16.400
and then Arch Linux 0.1, codenamed Homer,

06:16.400 --> 06:18.920
was released not far after.

06:18.920 --> 06:20.600
Good quote from the release notes

06:20.600 --> 06:22.640
is the bad news is that you don't get

06:22.640 --> 06:26.520
a pretty interactive installer, so some things have not

06:26.520 --> 06:28.360
changed.

06:28.360 --> 06:30.160
The big selling points at the time

06:30.160 --> 06:33.720
were the I-686 optimization, when

06:33.720 --> 06:37.560
most other distributions were using I-386.

06:37.560 --> 06:41.160
And install once, continuously update,

06:41.160 --> 06:44.040
never have to reinstall policy.

06:44.040 --> 06:45.320
And it being simple.

06:45.320 --> 06:50.360
Now, simple was defined in terms of the packaging

06:50.360 --> 06:54.000
and the tools for administrating the distribution,

06:54.000 --> 06:58.400
not in terms of being simple to use, necessarily.

06:58.400 --> 07:01.880
Alan McRae is the developer, well, of a lot of Arch,

07:01.880 --> 07:03.000
actually.

07:03.000 --> 07:04.680
He maintains the tool chain that you

07:04.680 --> 07:08.160
use to build Arch, like binutils, the GCC packages,

07:08.160 --> 07:12.720
GLibc, Linux API headers, all of its dependencies.

07:12.720 --> 07:13.840
I've never used any of those.

07:13.840 --> 07:15.720
No, no, never.

07:15.720 --> 07:21.920
Package config, you know, those kinds of things make.

07:21.920 --> 07:23.520
So he's got an interesting perspective.

07:23.520 --> 07:26.160
We'll have a link to the entire video in there.

07:26.160 --> 07:29.040
But then further in, there is discussion

07:29.040 --> 07:31.040
about the future of Arch.

07:31.040 --> 07:33.640
They talk about some of the culture changes

07:33.640 --> 07:35.800
that they think need to happen, and then they

07:35.800 --> 07:37.480
talk about some of the tech changes

07:37.480 --> 07:39.560
that they think probably should happen.

07:39.560 --> 07:43.360
And one that caught my attention is faster package turnaround

07:43.360 --> 07:45.600
using new automated technology.

07:45.600 --> 07:49.720
Let's talk about actual future improvements.

07:49.720 --> 07:52.480
One major thing I want to talk about,

07:52.480 --> 07:54.400
and this is also the first bullet point,

07:54.400 --> 07:57.720
is accelerate delayed package updates.

07:57.720 --> 08:01.520
What I mean by that is timely package updates

08:01.520 --> 08:02.960
are our core value.

08:02.960 --> 08:05.320
We are a rolling distro, and users

08:05.320 --> 08:08.120
are expect that our packages are always up to date

08:08.120 --> 08:09.680
and we are rolling fast.

08:09.680 --> 08:13.080
This is really our core value.

08:13.080 --> 08:16.680
Now, some of you may ask why we need to accelerate

08:16.680 --> 08:18.280
and what I mean by that.

08:18.280 --> 08:21.360
The only thing I mean by that is that right now we

08:21.360 --> 08:26.280
don't really have a central way of detecting upstream updates.

08:26.280 --> 08:29.480
So basically, it's a per package maintainer effort

08:29.480 --> 08:33.160
to somehow keep track of upstream sources.

08:33.160 --> 08:34.800
In some areas, it works great.

08:34.800 --> 08:38.840
In some areas, it actually doesn't work out that well.

08:38.840 --> 08:44.880
And sometimes it takes weeks or months and multiple releases

08:44.880 --> 08:50.400
until a user flags a package as out of date and on Arch web.

08:50.400 --> 08:52.240
And then we finally roll an update

08:52.240 --> 08:57.040
because a package maintainer was not really aware maybe of that.

08:57.040 --> 08:59.760
And I don't think this is a people problem,

08:59.760 --> 09:01.800
so we should not start yelling at people

09:01.800 --> 09:04.320
while you're probably keeping track.

09:04.320 --> 09:06.560
But I think this is more like a tooling problem.

09:06.560 --> 09:08.760
We should solve it with technology.

09:08.760 --> 09:11.840
So I've been also lately playing around and toying

09:11.840 --> 09:15.920
with something we call ourselves Sandcrawler.

09:15.920 --> 09:18.960
So this is also something I will raise in the future,

09:18.960 --> 09:22.320
having something technologically integrated

09:22.320 --> 09:25.960
in Arch web which is able to automatically flag

09:25.960 --> 09:28.120
packages as out of date.

09:28.120 --> 09:32.000
And this will also accelerate at the end delayed package

09:32.000 --> 09:35.800
updates, one of our core responsibilities.

09:35.800 --> 09:40.320
Core responsibility, core value, you hear that over and over

09:40.320 --> 09:40.840
again there.

09:40.840 --> 09:42.920
I think that's interesting.

09:42.920 --> 09:45.960
And then also that they want to address this as a technology

09:45.960 --> 09:47.520
problem, not a people problem.

09:47.520 --> 09:48.680
Yeah, I like that approach.

09:48.680 --> 09:50.120
If we can just automate this, that

09:50.120 --> 09:52.880
means there won't be continued people failures.

09:52.880 --> 09:55.160
And I think all of us know that oftentimes these projects

09:55.160 --> 09:57.400
update a lot, or maybe they don't update for years

09:57.400 --> 09:58.760
and then suddenly update.

09:58.760 --> 10:00.880
And if you maintain more than a handful of packages,

10:00.880 --> 10:02.520
that's a lot to keep up with.

10:02.520 --> 10:06.240
There's also talks on Linux memory management at scale,

10:06.240 --> 10:10.240
GamerOS, which is an Arch Linux based gaming OS.

10:10.240 --> 10:14.680
There is a talk about matrix and how to host your matrix

10:14.680 --> 10:16.840
server on Arch.

10:16.840 --> 10:18.480
That's pretty cool.

10:18.480 --> 10:21.920
Packaging Rust applications, rolling your own security team

10:21.920 --> 10:26.160
for fun and profit, not at all it says.

10:26.160 --> 10:27.960
There's a lot of good ones on here.

10:27.960 --> 10:31.600
Oh, one that I'm absolutely going to go back and watch

10:31.600 --> 10:34.640
that I missed is the Arch Linux team Q&A.

10:34.640 --> 10:35.760
I'm really impressed.

10:35.760 --> 10:37.600
They pulled off a really good live event

10:37.600 --> 10:40.200
and the videos got turned around pretty dang quick.

10:40.200 --> 10:41.400
Yeah, I'm impressed with that.

10:41.400 --> 10:42.840
Especially if you haven't done this before,

10:42.840 --> 10:43.960
there's a lot of things that can go wrong.

10:43.960 --> 10:46.280
And in this case, a lot of things that went right.

10:46.280 --> 10:48.160
When we talk about firmwares, a lot of times

10:48.160 --> 10:49.820
you'll hear people talking about the effort

10:49.820 --> 10:52.840
to free the Intel firmware from the management engine

10:52.840 --> 10:55.320
and a lot of the stuff around Intel CPUs.

10:55.320 --> 10:59.760
But the conversation hasn't really covered the AMD CPU side

10:59.760 --> 11:01.000
too much.

11:01.000 --> 11:03.960
And not only are the Ryzen chips just totally dominating

11:03.960 --> 11:06.400
performance, but they seem to be of a lot of interest

11:06.400 --> 11:07.200
to Linux users.

11:07.200 --> 11:12.160
So Ferotics has an article about Project X, which apparently

11:12.160 --> 11:16.080
is someone at Google, Rob Minich?

11:16.080 --> 11:16.920
Ron Minich?

11:16.920 --> 11:19.960
Minich, yeah, who has been one of the original developers

11:19.960 --> 11:21.480
of Core Boot and Linux BIOS in the past

11:21.480 --> 11:23.560
has engaged in this Project X, which

11:23.560 --> 11:27.400
is trying to provide a pure open source support

11:27.400 --> 11:31.480
environment on AMD's Zen platforms.

11:31.480 --> 11:33.960
Yeah, Project X is about X-sizing.

11:33.960 --> 11:36.600
Hey, that's the X. X-sizing binary blobs

11:36.600 --> 11:39.680
from the x86 part of Zen CPUs.

11:39.680 --> 11:41.560
This open source AMD Zen support is

11:41.560 --> 11:46.200
being worked on both for Core Boot and the downstream OrBoot.

11:46.200 --> 11:49.120
That's written in Rust.

11:49.120 --> 11:50.520
I'm sorry, what did you say?

11:50.520 --> 11:52.320
Because I didn't catch that, Wes.

11:52.320 --> 11:55.240
Did you say it was written in Rust?

11:55.240 --> 12:07.080
It's not really all just about that, though.

12:07.080 --> 12:10.240
At OSFC 2020, there was some talks

12:10.240 --> 12:12.360
going on about the open source AMD support,

12:12.360 --> 12:14.360
and that's where we got some of this information.

12:14.360 --> 12:16.080
AMD's system management architect

12:16.080 --> 12:17.520
also said that they'll be talking

12:17.520 --> 12:21.760
about the company's work on their open source BMC firmware

12:21.760 --> 12:25.200
support for their platforms as well.

12:25.200 --> 12:27.320
Yeah, that's the baseboard management controller.

12:27.320 --> 12:29.440
So you know, folks like Facebook and others

12:29.440 --> 12:34.240
using open BMC to run their big fancy racks and servers.

12:34.240 --> 12:36.000
And we have a link to that.

12:36.000 --> 12:37.000
It takes place.

12:37.000 --> 12:38.480
Oh, it hasn't taken place yet.

12:38.480 --> 12:39.980
No, open source firmware conference

12:39.980 --> 12:42.160
coming up at the start of December 1st through the 3rd,

12:42.160 --> 12:42.760
2020.

12:42.760 --> 12:44.880
So we will be getting more information, you're telling me?

12:44.880 --> 12:45.400
Indeed.

12:45.400 --> 12:47.080
Oh, well, you know what I'm going to do?

12:47.080 --> 12:50.160
I'm going to keep an ear ball out for information

12:50.160 --> 12:51.560
that we can clip.

12:51.560 --> 12:53.880
If there's something in there about, I mean, whoa.

12:53.880 --> 12:54.600
I mean, whoa.

12:54.600 --> 12:56.960
Think about it here just for a hot second.

12:56.960 --> 13:01.080
A future where you have a totally, totally open Ryzen

13:01.080 --> 13:05.120
system with drivers built into your kernel.

13:05.120 --> 13:05.640
Right?

13:05.640 --> 13:06.760
I mean, when you think about it too,

13:06.760 --> 13:08.160
there was so long where there just

13:08.160 --> 13:11.080
didn't seem like much hope going on in the core boot area.

13:11.080 --> 13:13.040
And recently, there's been a lot more momentum.

13:13.040 --> 13:14.440
So I'm excited to see this, and I'm

13:14.440 --> 13:16.680
really excited to learn more once these talks are out.

13:16.680 --> 13:22.480
Linode.com slash unplugged, go there to get a $100 60-day

13:22.480 --> 13:24.200
credit towards a new account.

13:24.200 --> 13:25.720
Linode is our server provider.

13:25.720 --> 13:28.200
That's where we deploy our systems.

13:28.200 --> 13:31.000
Whenever we have something from back-end infrastructure

13:31.000 --> 13:34.280
to a tool to something we want to try out for the show,

13:34.280 --> 13:35.720
we're always using Linode.

13:35.720 --> 13:37.320
I just recently was experimenting

13:37.320 --> 13:39.800
with setting up a new VPN server for myself

13:39.800 --> 13:43.400
because I'm messing around with bonding LTE connections.

13:43.400 --> 13:45.520
I was actually talking to Wes about this too.

13:45.520 --> 13:48.880
And there's a really, really comprehensive set

13:48.880 --> 13:50.760
of documentation I discovered on Linode.

13:50.760 --> 13:53.440
And they are completely OK with giving me information

13:53.440 --> 13:56.960
on how to replace the image on a Linode

13:56.960 --> 13:58.840
with my own custom distribution.

13:58.840 --> 14:01.720
I followed their official documentation

14:01.720 --> 14:04.360
on how to re-flash a Linode to my own custom Linux

14:04.360 --> 14:05.120
OS for this.

14:05.120 --> 14:05.840
Isn't that something?

14:05.840 --> 14:07.240
I think it really shows they've been around too.

14:07.240 --> 14:08.880
They didn't just make the top 10 features you

14:08.880 --> 14:09.880
need to be a hosting provider.

14:09.880 --> 14:11.120
They've been in the game a long time,

14:11.120 --> 14:13.520
and they know what actual power tools users like you

14:13.520 --> 14:14.040
might need.

14:14.040 --> 14:15.600
They're Linux users themselves.

14:15.600 --> 14:17.680
And so unlike entry-level hosting services

14:17.680 --> 14:19.960
that will just lock you into this box,

14:19.960 --> 14:22.040
Linode gives you a full back end, access

14:22.040 --> 14:24.440
to anything you want to customize, anything

14:24.440 --> 14:26.160
you need to control your server.

14:26.160 --> 14:28.720
And they also give you that same level of access to things like

14:28.720 --> 14:29.440
DNS.

14:29.440 --> 14:31.320
They have S3-compatible object storage.

14:31.320 --> 14:32.560
They have node balancers.

14:32.560 --> 14:34.560
They started, like Wes was saying, a long time ago,

14:34.560 --> 14:37.840
in 2003, as one of the first companies in cloud computing.

14:37.840 --> 14:39.240
I've followed them for a long time.

14:39.240 --> 14:41.520
They often go to a lot of the same events that I go to.

14:41.520 --> 14:43.020
So I've seen them at Linux Fest.

14:43.020 --> 14:45.720
And they've been a sponsor of a lot of open source projects.

14:45.720 --> 14:47.280
So of course, I've known about them.

14:47.280 --> 14:48.880
But about two years ago, I started

14:48.880 --> 14:50.040
using them very seriously.

14:50.040 --> 14:52.200
And really, just as of a few months ago,

14:52.200 --> 14:54.080
I've gone all in for my business, too,

14:54.080 --> 14:56.760
because I really trust what Linode does here.

14:56.760 --> 14:58.400
They're an independently owned company.

14:58.400 --> 15:00.320
They've been around for a really long time,

15:00.320 --> 15:01.600
and they're not going anywhere.

15:01.600 --> 15:03.760
They've got 11 data centers worldwide.

15:03.760 --> 15:05.360
It's really easy to get started.

15:05.360 --> 15:07.040
It's only $5 a month.

15:07.040 --> 15:09.500
But you could play with a lot more, like the object storage.

15:09.500 --> 15:11.840
Maybe you want to make a super fast website for yourself,

15:11.840 --> 15:14.880
a resume or portfolio, or maybe just a blog.

15:14.880 --> 15:16.400
$5 a month gets you started.

15:16.400 --> 15:19.000
But when you go to linode.com slash unplugged,

15:19.000 --> 15:20.680
you get a $100 credit.

15:20.680 --> 15:22.060
You could really experiment.

15:22.060 --> 15:23.600
You could really test it and really see

15:23.600 --> 15:24.920
what I'm talking about.

15:24.920 --> 15:27.940
Also, keep an eye out for Linode's new Linux security

15:27.940 --> 15:29.720
series with HackerSploit.

15:29.720 --> 15:32.000
All the episodes are available on demand.

15:32.000 --> 15:34.420
And they go into detail on a lot of the basics

15:34.420 --> 15:37.960
around Linux security you need to know for either on-premises

15:37.960 --> 15:40.400
hosting or for a Linode system.

15:40.400 --> 15:42.240
It's like just good fundamentals.

15:42.240 --> 15:43.620
And it's something they worked with.

15:43.620 --> 15:46.080
HackerSploit is an individual who's well-known on YouTube.

15:46.080 --> 15:47.880
He covers a lot of, his name is Alexis,

15:47.880 --> 15:49.880
he covers a lot of security stuff.

15:49.880 --> 15:54.000
And he's done an SSH security essentials, securing Apache,

15:54.000 --> 15:59.140
securing NGINX, a complete guide to UFW,

15:59.140 --> 16:00.640
how to work with sudo, and maybe some

16:00.640 --> 16:03.340
of the more advanced things you can do with sudo.

16:03.340 --> 16:05.280
He's done guides for all of that.

16:05.280 --> 16:07.600
And you can check that out on Linode's blog.

16:07.600 --> 16:08.840
That's something worth just checking out,

16:08.840 --> 16:11.100
because it's good to know just how to do this stuff

16:11.100 --> 16:12.560
and implement it correctly.

16:12.560 --> 16:15.120
But you can learn all of this with $100 credit.

16:15.120 --> 16:17.120
This is a great opportunity to learn, too.

16:17.120 --> 16:18.920
Linode.com slash unplugged.

16:18.920 --> 16:20.920
Go there, get that $100 60-day credit,

16:20.920 --> 16:22.360
and you support the show.

16:22.360 --> 16:24.720
Linode.com slash unplugged.

16:24.720 --> 16:29.680
Do you remember when we talked about Linux

16:29.680 --> 16:32.280
mint breaking the Chromium snap?

16:32.280 --> 16:34.880
Just the whole experience was real bad for the end user.

16:34.880 --> 16:38.800
Somehow that was actually last June, June 30th or so,

16:38.800 --> 16:41.400
episode 360 of this year program.

16:41.400 --> 16:43.200
Explain the logic to me here, Drew, because to me,

16:43.200 --> 16:44.800
it seems like this is something they should have fixed

16:44.800 --> 16:46.080
before they broke it in the first place.

16:46.080 --> 16:48.800
And I know I could sit here and I could give them accolades

16:48.800 --> 16:51.480
for building their own version of Chromium and packaging it

16:51.480 --> 16:53.560
up and bundling in the IPTV player.

16:53.560 --> 16:55.280
But from where I sit, it seems like this

16:55.280 --> 16:57.920
should have been done, maybe the old saying,

16:57.920 --> 17:01.920
you fix the barn door before the horses come home and not after.

17:01.920 --> 17:02.840
You're right.

17:02.840 --> 17:05.720
I was not on board with their decision

17:05.720 --> 17:10.160
to just completely rip out snaps and make it devilishly hard

17:10.160 --> 17:13.720
to get them running again if you needed stuff that was snapped.

17:13.720 --> 17:15.640
I thought it was a bad decision.

17:15.640 --> 17:17.280
I still think it was a bad decision.

17:17.280 --> 17:20.080
And this is a little bit too little too late.

17:20.080 --> 17:23.240
I do like what the mint team does in general,

17:23.240 --> 17:25.680
but that was not their finest hour.

17:25.680 --> 17:27.640
Now, I know you're a big mint user there, Wes.

17:27.640 --> 17:28.720
I know you use it on all your system.

17:28.720 --> 17:29.760
You've used it for years.

17:29.760 --> 17:31.360
I run it right now on your laptop.

17:31.360 --> 17:33.840
You know, actually, I have used it a fair amount.

17:33.840 --> 17:36.400
I think it's still running on at least one of my family's

17:36.400 --> 17:37.000
computers.

17:37.000 --> 17:39.480
And most recently, actually since June

17:39.480 --> 17:42.800
and since we've played around a little bit with the 20 release,

17:42.800 --> 17:46.200
I was using it as a gaming PC just to try things out.

17:46.200 --> 17:46.720
Really?

17:46.720 --> 17:47.200
Yeah.

17:47.200 --> 17:48.720
So I have been using it.

17:48.720 --> 17:50.960
I did find it interesting they have had to allocate some

17:50.960 --> 17:52.040
resources here.

17:52.040 --> 17:53.280
So they weren't doing no work.

17:53.280 --> 17:56.840
They write that they've set up a new Ryzen 9 3900 CPU setup,

17:56.840 --> 18:00.200
128 gigs of RAM and NVMe disks just to get

18:00.200 --> 18:02.360
the build times under an hour.

18:02.360 --> 18:05.800
So not trivial, and they do thank folks for their patience.

18:05.800 --> 18:07.100
So I think they acknowledged, too,

18:07.100 --> 18:10.000
that it has probably been longer than anyone would like.

18:10.000 --> 18:10.880
Yeah, OK.

18:10.880 --> 18:13.920
I mean, what's all this hoopla around this IPTV player

18:13.920 --> 18:16.800
where people are saying they're wasting resources on that, too?

18:16.800 --> 18:17.920
What's the deal with that?

18:17.920 --> 18:19.240
I think it's just a little odd.

18:19.240 --> 18:21.960
Folks thought, you know, Clem taking time out

18:21.960 --> 18:24.760
to work on this IPTV player and sort of talk about it

18:24.760 --> 18:26.880
in a casual way where it's not clear if it's really

18:26.880 --> 18:30.120
going to get continued or if it'll be included in Mint.

18:30.120 --> 18:32.520
No problems with it existing, but it

18:32.520 --> 18:34.560
felt like a weird part to be part of the monthly Mint

18:34.560 --> 18:35.280
update.

18:35.280 --> 18:37.480
Don't let this happen to you.

18:37.480 --> 18:40.140
I think you just became our Mint correspondent,

18:40.140 --> 18:42.720
because you're a big Mint user.

18:42.720 --> 18:45.020
I shouldn't poke fun, because I know people that use it,

18:45.020 --> 18:45.760
and they love it.

18:45.760 --> 18:48.200
And I actually really respect what Clem and his team do.

18:48.200 --> 18:49.560
So I need to make that disclosure.

18:49.560 --> 18:51.740
But sometimes I just got to have a little fun at it,

18:51.740 --> 18:55.920
because this was a problem that didn't need to happen.

18:55.920 --> 18:59.740
You could have even punted this action for one release

18:59.740 --> 19:02.080
while you worked on this and then rolled in your solution

19:02.080 --> 19:05.120
to the next release and just eat the snapped version

19:05.120 --> 19:06.640
for one release.

19:06.640 --> 19:09.160
But it felt like emotions got involved here.

19:09.160 --> 19:11.200
It was a reaction without much planning.

19:11.200 --> 19:16.640
But I have to say, I'm not receiving the feedback.

19:16.640 --> 19:18.280
Clem and his team are receiving.

19:18.280 --> 19:22.140
Maybe their users have messaged to him very clearly

19:22.140 --> 19:23.880
they don't want snaps.

19:23.880 --> 19:26.080
It's not outside the realm of possibility.

19:26.080 --> 19:31.480
We had that chat with the Uno platform last week,

19:31.480 --> 19:34.840
and they released this tool to take Windows applications

19:34.840 --> 19:36.920
and build native versions for Linux.

19:36.920 --> 19:39.520
And the number one feedback they got from the Linux community

19:39.520 --> 19:41.280
was, don't use Snap.

19:41.280 --> 19:42.240
Isn't that something?

19:42.240 --> 19:44.360
And so it is possible that the Mint team was just

19:44.360 --> 19:46.640
receiving a lot of feedback saying, don't use Snap.

19:46.640 --> 19:47.600
Snap, snap back.

19:47.600 --> 19:52.760
And this is an interesting realization

19:52.760 --> 19:56.720
of what we think is just a squeaky wheel minority,

19:56.720 --> 19:59.000
but it turns out to have real world ramifications.

19:59.000 --> 20:01.720
So you've got this larger and larger group

20:01.720 --> 20:05.360
of probably more sophisticated Linux users

20:05.360 --> 20:08.280
that don't like Snap packages for various reasons.

20:08.280 --> 20:10.640
And they seem to advocate and try

20:10.640 --> 20:13.320
to persuade companies that are developing and deploying

20:13.320 --> 20:16.540
snaps to use other packaging formats.

20:16.540 --> 20:19.560
And you could see how a company like Adobe comes along

20:19.560 --> 20:22.080
and say they want to snap up Photoshop,

20:22.080 --> 20:25.120
and they release Photoshop, and they get several thousand

20:25.120 --> 20:28.040
people telling them, hey, idiots, don't use this.

20:28.040 --> 20:28.880
Use App Image.

20:28.880 --> 20:29.560
Don't use this.

20:29.560 --> 20:30.800
Use Flatpak.

20:30.800 --> 20:33.400
Each company is going to receive that feedback differently,

20:33.400 --> 20:35.440
and they're going to process that differently.

20:35.440 --> 20:37.840
And do they have developers on staff there,

20:37.840 --> 20:40.560
or folks in management who understand the Linux ecosystem?

20:40.560 --> 20:41.240
Yeah, maybe.

20:41.240 --> 20:47.360
I have to be frank with you is I don't see any indication

20:47.360 --> 20:51.800
from Canonical that they recognize that this is an issue

20:51.800 --> 20:53.720
and that they're even beginning to address it.

20:53.720 --> 20:55.840
I think they have written it off as, well,

20:55.840 --> 20:57.600
the people that always told us Launchpad

20:57.600 --> 21:00.040
needs to be open source, the people that always were giving

21:00.040 --> 21:02.740
us a hard time for Upstart, the people who hated Unity,

21:02.740 --> 21:05.240
now look at all these people using Unity.

21:05.240 --> 21:08.000
I think this, over the years, this mentality

21:08.000 --> 21:10.840
has developed where they just have created a thick skin,

21:10.840 --> 21:13.040
and they don't listen to all these detractors.

21:13.040 --> 21:15.740
Well, I think they also don't necessarily feel

21:15.740 --> 21:17.040
like they're designing Snap.

21:17.040 --> 21:19.640
They make it Snap for the Linux desktop users who don't know

21:19.640 --> 21:20.760
what package managers are.

21:20.760 --> 21:22.720
So there's sort of like just two different camps not

21:22.720 --> 21:23.600
talking to each other.

21:23.600 --> 21:24.120
Right.

21:24.120 --> 21:26.220
The issue is I can tell you that I

21:26.220 --> 21:27.880
have been told in confidence, and there's

21:27.880 --> 21:29.960
other instances which I can point to publicly,

21:29.960 --> 21:32.200
but I have been told more so in confidence

21:32.200 --> 21:35.440
that it is a item of feedback that the companies are

21:35.440 --> 21:36.120
struggling with.

21:36.120 --> 21:37.760
Like, you know how this works.

21:37.760 --> 21:39.420
For anybody that works in a business that

21:39.420 --> 21:42.080
puts anything out publicly, negative feedback

21:42.080 --> 21:43.440
gets a lot of attention.

21:43.440 --> 21:47.000
It gets in the Slack thread, and people are discussing it,

21:47.000 --> 21:48.840
and then the boss sees it, and he's

21:48.840 --> 21:50.560
got to get somebody on it to address it.

21:50.560 --> 21:52.680
It becomes this snowball.

21:52.680 --> 21:54.080
And I am telling you, I have heard

21:54.080 --> 21:55.960
from multiple developers in confidence,

21:55.960 --> 21:58.440
and I have heard from some developers on the record

21:58.440 --> 22:00.400
that this is an issue for them when they package

22:00.400 --> 22:01.960
their application as Snaps.

22:01.960 --> 22:04.040
And the problem is that Snaps are

22:04.040 --> 22:06.560
very attractive from a corporate standpoint.

22:06.560 --> 22:08.680
You're a business, and you can have a relationship

22:08.680 --> 22:09.360
with Canonical.

22:09.360 --> 22:10.780
You can do a business-to-business

22:10.780 --> 22:13.640
relationship, and you can distribute your application

22:13.640 --> 22:16.760
and package it in a single outlet that

22:16.760 --> 22:19.440
is very simple to install on almost all

22:19.440 --> 22:21.000
the major distributions out there.

22:21.000 --> 22:23.800
It's extremely attractive from a developer standpoint,

22:23.800 --> 22:26.120
and I actually can appreciate the value

22:26.120 --> 22:29.080
that Canonical brings to this process.

22:29.080 --> 22:30.880
But the people who are Flatpacker app

22:30.880 --> 22:33.840
images advocates, they couldn't care less

22:33.840 --> 22:36.280
about the business-to-business relationship.

22:36.280 --> 22:38.920
They could give two craps about it.

22:38.920 --> 22:41.680
And it really has shown me with these conversations

22:41.680 --> 22:44.080
that I've had, and with the conversation we had last week

22:44.080 --> 22:46.160
with the UNO platform, and what we were just

22:46.160 --> 22:51.440
talking about with Mint, it seems that using Snaps

22:51.440 --> 22:55.040
has become a liability.

22:55.040 --> 22:57.360
And I don't think Canonical is addressing it.

22:57.360 --> 23:00.520
I don't think they are fully appreciating the scope of it.

23:00.520 --> 23:03.400
And the worst part is, I think they're probably

23:03.400 --> 23:05.800
about eight months too late in addressing it,

23:05.800 --> 23:07.280
and the momentum is there now.

23:07.280 --> 23:10.200
And there's really nothing they can do about it at this point.

23:10.200 --> 23:13.000
And it is unfortunate, because what I see developing here,

23:13.000 --> 23:15.520
and I don't have any pleasure in saying this,

23:15.520 --> 23:17.840
because I'm personal friends with Poppy and Wimpy,

23:17.840 --> 23:19.560
and I don't like saying this, but I

23:19.560 --> 23:20.920
have to be honest with you.

23:20.920 --> 23:23.960
What I see developing here is a Betamax situation,

23:23.960 --> 23:26.240
where there is a lot of technological advantages

23:26.240 --> 23:27.020
to a Snap.

23:27.020 --> 23:29.380
There's a lot of business advantages to a Snap.

23:29.380 --> 23:31.560
There's a distribution advantage to a Snap.

23:31.560 --> 23:34.280
There's a lot of upsides, but it still

23:34.280 --> 23:36.040
isn't the one that wins out.

23:36.040 --> 23:39.560
And I think Canonical is too late to address it.

23:39.560 --> 23:41.600
And I wish I could share with you some of the stories

23:41.600 --> 23:43.920
that I have heard via email from developers.

23:43.920 --> 23:46.000
So you're just going to have to take my word for it.

23:46.000 --> 23:48.200
I have no motivation to say this otherwise,

23:48.200 --> 23:49.920
and I don't feel like it's being addressed.

23:49.920 --> 23:52.280
And here we see Mint now, and I've come on the air,

23:52.280 --> 23:54.400
and I've said, they're wrong for doing it this way.

23:54.400 --> 23:57.320
But for all I know, because I haven't heard from that team,

23:57.320 --> 23:59.240
they don't communicate with the media.

23:59.240 --> 24:02.920
For all I know, they have gotten pushback from their user base,

24:02.920 --> 24:04.640
and that's why they've taken this action.

24:04.640 --> 24:07.320
But either way, they seem to be on the way

24:07.320 --> 24:08.560
of fixing and addressing it.

24:08.560 --> 24:11.060
But like you said, I think it's too little too late.

24:11.060 --> 24:12.640
I think you're right in a lot of ways.

24:12.640 --> 24:17.000
But one thing that I really see is a parallel to the way

24:17.000 --> 24:19.080
that Pulse Audio rolled out.

24:19.080 --> 24:23.280
It wasn't ready, and people started shipping it.

24:23.280 --> 24:27.360
In the same vein, Snap I still don't think is quite ready.

24:27.360 --> 24:29.640
And Ubuntu is shipping it by default,

24:29.640 --> 24:32.320
and even pushing people towards using it for things

24:32.320 --> 24:35.640
like Chromium and other software that sometimes they

24:35.640 --> 24:38.280
can only get as a Snap.

24:38.280 --> 24:40.480
And the unfortunate thing here is

24:40.480 --> 24:43.440
it's going to be the same thing that we saw with Pulse Audio,

24:43.440 --> 24:45.180
where people were like, oh, I hate this.

24:45.180 --> 24:46.440
It doesn't work right.

24:46.440 --> 24:50.800
And even though it's 10 years later,

24:50.800 --> 24:53.960
and Pulse Audio works great, people still

24:53.960 --> 24:58.680
have that same bitter taste from when they first used it,

24:58.680 --> 25:01.040
and it wasn't perfect.

25:01.040 --> 25:07.080
So even if Ubuntu and Canonical fixes it tomorrow,

25:07.080 --> 25:08.840
you're right, it's eight months too late.

25:08.840 --> 25:11.840
They pushed it too soon, and we're never

25:11.840 --> 25:17.840
going to quite get that feeling out where people just

25:17.840 --> 25:21.040
don't like it because they had a bad experience before.

25:21.040 --> 25:24.040
And there's also the central app store aspect

25:24.040 --> 25:25.560
that seems to be unappealing.

25:25.560 --> 25:27.520
Yeah, I mean, there's lots of stuff

25:27.520 --> 25:31.760
to talk about there about why it's not perfect,

25:31.760 --> 25:34.440
and it could have been so good.

25:34.440 --> 25:36.880
They could have taken a few cues from Flatpak.

25:36.880 --> 25:39.440
They could have done it their way

25:39.440 --> 25:43.160
and really tweaked out the bugs to where fonts worked correctly,

25:43.160 --> 25:46.480
where they don't take forever to load, all of that

25:46.480 --> 25:49.820
before actually starting pushing it into the operating system

25:49.820 --> 25:50.320
itself.

25:50.320 --> 25:51.240
But yeah, that's fair.

25:51.240 --> 25:53.120
I can see part of what you're saying there.

25:53.120 --> 25:56.840
I don't know if the font stuff and the theme stuff,

25:56.840 --> 25:59.360
I mean, it definitely registers for us,

25:59.360 --> 26:04.560
but in average user deployments, corporate deployments,

26:04.560 --> 26:07.240
educational deployments, I think they're

26:07.240 --> 26:09.280
pretty used to applications just looking like crap.

26:09.280 --> 26:10.680
I don't think that was an issue.

26:10.680 --> 26:12.520
I think it just came down to two problems,

26:12.520 --> 26:14.600
and they're on the way to fix one of them.

26:14.600 --> 26:18.200
Problem number one is load time.

26:18.200 --> 26:21.860
Problem number two is the centralized app store,

26:21.860 --> 26:24.560
and that's where AppImage and Flatpak are

26:24.560 --> 26:27.120
considered superior by some.

26:27.120 --> 26:30.400
I will note it doesn't seem to be by developers generally.

26:30.400 --> 26:34.200
It is by end users who prefer to consume the application

26:34.200 --> 26:36.640
in the way they like and deploy it,

26:36.640 --> 26:39.280
or it is projects who want to host their own repositories,

26:39.280 --> 26:40.800
like elementary OS.

26:40.800 --> 26:44.040
But application start time may be

26:44.040 --> 26:45.880
on the path to getting fixed.

26:45.880 --> 26:48.200
My understanding is that future snaps

26:48.200 --> 26:50.680
may be using LZO compression, which

26:50.680 --> 26:53.760
means the snap file sizes themselves will be larger,

26:53.760 --> 26:56.640
but the opening time and the CPU load required

26:56.640 --> 26:58.640
to open those snaps will be reduced.

26:58.640 --> 27:00.680
Faster to actually get the application up into memory

27:00.680 --> 27:01.400
and start it.

27:01.400 --> 27:03.880
Yeah, so that could be good, but it

27:03.880 --> 27:06.000
would have been, I don't know, it's

27:06.000 --> 27:08.840
a hard technical challenge, so easy for me to say,

27:08.840 --> 27:10.920
but would have been good, like I was saying,

27:10.920 --> 27:13.880
eight, nine months ago at the beginning of 2020,

27:13.880 --> 27:16.200
not towards the end of 2020.

27:16.200 --> 27:20.440
And I worry that the reputational damage is done,

27:20.440 --> 27:25.040
not in terms of what businesses or developers will perceive,

27:25.040 --> 27:27.360
like companies like Adobe who may be someday

27:27.360 --> 27:29.920
looking to actually launch applications on Linux.

27:29.920 --> 27:33.440
I don't think these issues are going to surface for them.

27:33.440 --> 27:35.040
The way it will surface for them,

27:35.040 --> 27:38.240
based on the feedback in the conversations I've been having,

27:38.240 --> 27:41.720
is once they launch, they get this tidal wave

27:41.720 --> 27:45.120
of negative feedback about how they've chosen to package.

27:45.120 --> 27:47.280
And it kind of sucks for Canonical,

27:47.280 --> 27:49.760
because in some cases, Canonical nurse

27:49.760 --> 27:52.160
maids these companies in the Linux community.

27:52.160 --> 27:54.440
They're playing the role of host,

27:54.440 --> 27:56.040
and they're kind of introducing them

27:56.040 --> 28:00.120
on how to target for Linux, what to say, how to message,

28:00.120 --> 28:01.440
how to work with Linux.

28:01.440 --> 28:04.000
Please, help here, we'll help you make these apps for Linux.

28:04.000 --> 28:06.360
And then you just get bit when you step in the pool.

28:06.360 --> 28:08.640
Yeah, and then they release, and everybody's like, no, no, no,

28:08.640 --> 28:09.720
no, no, no, we don't like snaps.

28:09.720 --> 28:12.240
And then that company is forced to kind of distance themselves

28:12.240 --> 28:14.600
from that, and Canonical has invested all this time

28:14.600 --> 28:16.600
in getting the application actually over to Linux

28:16.600 --> 28:17.440
with them.

28:17.440 --> 28:20.920
And so it's kind of a lose-lose situation for both Canonical

28:20.920 --> 28:22.560
and for the developer.

28:22.560 --> 28:24.920
And I just feel like there has to be something

28:24.920 --> 28:28.080
that could be done there, or it's just simply not

28:28.080 --> 28:29.600
going to get addressed.

28:29.600 --> 28:31.640
And it is what it is.

28:31.640 --> 28:33.920
But it is something that I've been watching,

28:33.920 --> 28:35.440
and kind of as the year develops,

28:35.440 --> 28:37.880
getting a little concerned about because I

28:37.880 --> 28:39.640
think it has a lot of nice advantages,

28:39.640 --> 28:43.600
especially on the server side, and especially for developers.

28:43.600 --> 28:46.080
But for that, we'll just have to wait

28:46.080 --> 28:50.280
and see how things develop, you know, moving right along.

28:50.280 --> 28:54.560
So I wanted to get everyone's take on Starlink.

28:54.560 --> 28:56.480
I'm getting kind of excited about it here

28:56.480 --> 29:01.880
because it is in open beta in the Pacific Northwest.

29:01.880 --> 29:05.120
If you're in Washington state and a few other areas

29:05.120 --> 29:09.560
around us, you can actually get in on the Starlink beta.

29:09.560 --> 29:12.480
And when technologies like this start to roll around,

29:12.480 --> 29:14.520
one of the first things I wonder about

29:14.520 --> 29:17.240
is, what's the Linux support story going to be?

29:17.240 --> 29:20.160
I'm sure Starlink runs this whole thing on Linux, right?

29:20.160 --> 29:23.000
I'm like, I'm sure SpaceX is deploying these things running

29:23.000 --> 29:23.680
Linux.

29:23.680 --> 29:24.720
Satellites are running Linux.

29:24.720 --> 29:26.520
The systems that are launching it are running Linux.

29:26.520 --> 29:29.160
Seems like a darn good bet, at least from what we know.

29:29.160 --> 29:30.280
Yeah.

29:30.280 --> 29:32.400
But the question is, where will we

29:32.400 --> 29:37.040
be in terms of support for Linux as, like, end users

29:37.040 --> 29:39.040
on the Starlink network?

29:39.040 --> 29:42.160
And it looks like some of the early data from the beta

29:42.160 --> 29:43.960
testers is pretty positive.

29:43.960 --> 29:46.320
I mean, you've got to remember, this is beta,

29:46.320 --> 29:49.040
so it's not even final grade production here.

29:49.040 --> 29:52.600
But people are getting pretty good ping times

29:52.600 --> 29:55.840
in the 20s to 40s milliseconds.

29:55.840 --> 29:58.520
They're getting pretty good bandwidth, much better

29:58.520 --> 30:02.000
than you'd get on an average cellular connection.

30:02.000 --> 30:04.000
In some cases, 160 megabits.

30:04.000 --> 30:06.040
In other cases, more like 40 megabits.

30:06.040 --> 30:08.120
It all kind of depends, it seems.

30:08.120 --> 30:09.960
It's getting really close.

30:09.960 --> 30:11.880
And I just kind of wanted to take the temperature

30:11.880 --> 30:14.640
of the room and ask people what they think about.

30:14.640 --> 30:17.640
Because I'm obviously looking forward to it as a way

30:17.640 --> 30:20.160
to kind of expand my remote connectivity.

30:20.160 --> 30:21.660
Yeah, you're only a little excited.

30:21.660 --> 30:25.120
But I think remote users, like mobile users like myself,

30:25.120 --> 30:27.840
are going to be one of the later users that they get to.

30:27.840 --> 30:29.600
Colonel, I know you and I have talked about this a little bit

30:29.600 --> 30:30.840
during the Leplug.

30:30.840 --> 30:32.680
What are your current thoughts on it?

30:32.680 --> 30:34.720
I think it's going to be interesting to see

30:34.720 --> 30:38.960
what happens as they roll it out of beta.

30:38.960 --> 30:42.920
Because I know for certain types of cellular technologies,

30:42.920 --> 30:45.880
when they initially set it up as a beta network,

30:45.880 --> 30:47.040
everything worked great.

30:47.040 --> 30:49.720
Once they got the load on the network,

30:49.720 --> 30:53.920
things were still working, but not as good as in beta.

30:53.920 --> 30:55.520
So I think it'll be interesting to see

30:55.520 --> 30:58.120
what happens when it becomes a nationwide,

30:58.120 --> 31:02.680
as well as when it becomes a more commonplace thing

31:02.680 --> 31:04.320
for people to be using.

31:04.320 --> 31:08.160
And how they handle that load, as well as

31:08.160 --> 31:10.280
what are the privacy implications of this.

31:10.280 --> 31:12.520
Because it is a SAT network.

31:12.520 --> 31:15.280
So unlike a traditional SAT network,

31:15.280 --> 31:18.920
which broadcasts to a large area on the ground,

31:18.920 --> 31:20.800
my understanding with Starlink is

31:20.800 --> 31:24.240
that it's a lot of small satellites broadcasting

31:24.240 --> 31:25.560
to smaller areas.

31:25.560 --> 31:27.360
So is there any kind of tracking involved,

31:27.360 --> 31:29.040
just like there is with cell phones?

31:29.040 --> 31:34.400
Are they going to do any kind of blocks like some home ISPs do?

31:34.400 --> 31:36.360
It's also going to be interesting to see,

31:36.360 --> 31:37.840
especially because a lot of people

31:37.840 --> 31:40.560
are going to be looking at this for RV usage, what kind

31:40.560 --> 31:44.080
of power usage does the receiver use?

31:44.080 --> 31:46.040
And so I think there's a lot of questions

31:46.040 --> 31:48.880
that we won't really know until it either gets out

31:48.880 --> 31:51.840
of beta or becomes much more widely adopted.

31:51.840 --> 31:55.040
I think that the biggest insights we've gotten so far

31:55.040 --> 31:58.040
is an article over on Ars Technica.

31:58.040 --> 32:01.600
They worked with an individual known as wandering coder.

32:01.600 --> 32:03.160
So he's already speaking to me.

32:03.160 --> 32:03.840
Interesting.

32:03.840 --> 32:05.600
And he tested it out in a few locations,

32:05.600 --> 32:08.280
including some heavily covered tree areas and some that

32:08.280 --> 32:09.840
were more open to the sky.

32:09.840 --> 32:14.520
And at one point, he got 120 megabits download and an upload

32:14.520 --> 32:18.640
of 12 megabits with an average latency of 37 milliseconds.

32:18.640 --> 32:20.760
That's fantastic for satellite internet.

32:20.760 --> 32:23.400
That is absolutely fantastic.

32:23.400 --> 32:27.240
And he did move his item around for these tests.

32:27.240 --> 32:29.760
The beta for Starlink right now strongly

32:29.760 --> 32:32.960
encourages you to only use it at the registered location.

32:32.960 --> 32:35.160
So that's why I say I think maybe it'll

32:35.160 --> 32:38.000
be a little bit until individuals like myself

32:38.000 --> 32:39.520
are using it on their buses.

32:39.520 --> 32:40.320
Right.

32:40.320 --> 32:42.960
These are lower satellites that are constantly

32:42.960 --> 32:43.920
moving and switching.

32:43.920 --> 32:45.800
So if you already have to keep track of that

32:45.800 --> 32:47.320
and you're driving your RV around,

32:47.320 --> 32:48.480
that's a lot of moving parts.

32:48.480 --> 32:49.520
But here's a little comparison.

32:49.520 --> 32:51.640
So in some of the tests that they talked about here

32:51.640 --> 32:55.400
on Ars Technica, they were getting like an average

32:55.400 --> 32:57.680
when you look at it, maybe like a 42 milliseconds,

32:57.680 --> 32:59.680
let's say, latency.

32:59.680 --> 33:01.640
42 milliseconds latency is not as good

33:01.640 --> 33:04.640
as you're going to get on a nice high speed home broadband

33:04.640 --> 33:05.800
connection.

33:05.800 --> 33:10.360
But compared to VistaStat or VistaStat or HughesNet,

33:10.360 --> 33:14.680
you're looking at like a 600 millisecond difference.

33:14.680 --> 33:17.920
HughesNet is in the same testing area,

33:17.920 --> 33:20.800
has a latency of 728 millisecond.

33:20.800 --> 33:24.120
And VistaStat has 643 milliseconds.

33:24.120 --> 33:25.360
I think that's the biggest win.

33:25.360 --> 33:27.440
I mean, Starlink may also be faster in terms of throughput,

33:27.440 --> 33:29.120
but you can get some decent throughput

33:29.120 --> 33:31.440
if the latency isn't a problem on some existing satellite

33:31.440 --> 33:31.920
providers.

33:31.920 --> 33:34.920
But just because Starlink is so much closer to you,

33:34.920 --> 33:38.320
orbiting just closer to the Earth, latency is a huge win.

33:38.320 --> 33:40.680
I could see businesses using this as a backup connection

33:40.680 --> 33:41.180
too.

33:41.180 --> 33:44.000
Maybe they have their faster gigabit broadband.

33:44.000 --> 33:45.880
They have fiber, but it goes out.

33:45.880 --> 33:47.400
You had internet issues this weekend.

33:47.400 --> 33:48.040
I did.

33:48.040 --> 33:53.080
And if we were doing some sort of live television production

33:53.080 --> 33:54.680
and you were in a home studio, it

33:54.680 --> 33:58.040
may be worth your money to have a backup like that.

33:58.040 --> 33:58.680
Oh, I like it.

33:58.680 --> 33:59.440
A second backup.

33:59.440 --> 34:00.280
I've got LTE.

34:00.280 --> 34:01.080
I've got Starlink.

34:01.080 --> 34:03.960
And hey, don't forget, Amazon's getting in this game too.

34:03.960 --> 34:06.300
So I think there'll be some competitors to Starlink

34:06.300 --> 34:07.740
that will have to take into account too.

34:07.740 --> 34:09.500
Whatever happened to those Google balloons?

34:09.500 --> 34:11.400
I think, did they bail on that?

34:11.400 --> 34:12.000
I can't remember.

34:12.000 --> 34:13.640
Or Facebook had a project too.

34:13.640 --> 34:17.640
But I could see a future where LTE and 5G cover

34:17.640 --> 34:20.920
a lot of nomadic digital workers.

34:20.920 --> 34:24.840
And then when you settle down in a spot for a day or so,

34:24.840 --> 34:27.760
you can turn on Starlink and you get, hopefully,

34:27.760 --> 34:30.240
an unlimited higher speed connection.

34:30.240 --> 34:32.400
I think for that, the people who haven't already

34:32.400 --> 34:34.560
been served by fast broadband internet,

34:34.560 --> 34:35.800
it's going to be huge for them.

34:35.800 --> 34:36.300
Yeah.

34:36.300 --> 34:40.680
Hey, let's do a little housekeeping.

34:40.680 --> 34:42.280
If you haven't yet, you should consider

34:42.280 --> 34:47.200
joining the Luplug every Sunday at noon Pacific, 3 PM Eastern,

34:47.200 --> 34:48.520
in our Mumble Room.

34:48.520 --> 34:51.120
You can get information on how to set up Mumble.

34:51.120 --> 34:54.080
Just go to linuxunplug.com slash mumble.

34:54.080 --> 34:56.480
We have a really brief guide there as well as

34:56.480 --> 34:58.160
an extended guide.

34:58.160 --> 35:00.880
The thing is, you never know when we're going to show up.

35:00.880 --> 35:03.260
This Sunday, we just kind of popped in and said, hey, guys,

35:03.260 --> 35:04.440
we have a show to do.

35:04.440 --> 35:05.600
Can you join us?

35:05.600 --> 35:08.280
And now the Luplug is here doing the show on a Sunday.

35:08.280 --> 35:10.800
And we're going to do it next Sunday too.

35:10.800 --> 35:11.280
What?

35:11.280 --> 35:12.760
Yeah, I haven't told anybody yet.

35:12.760 --> 35:15.400
But I'm going to be out and about that Tuesday.

35:15.400 --> 35:17.440
And the timing is going to be really tight.

35:17.440 --> 35:19.760
So we're going to record next week's Linux

35:19.760 --> 35:21.960
Unplugged on Sunday as well.

35:21.960 --> 35:22.680
So join us.

35:22.680 --> 35:24.380
And you can start out in the virtual Lug

35:24.380 --> 35:25.640
because we come in a little bit later.

35:25.640 --> 35:26.920
So there's still some Lug time.

35:26.920 --> 35:30.920
But on November 15, we'll do the show live over jblive.tv,

35:30.920 --> 35:33.720
noon Pacific, 3 PM Eastern.

35:33.720 --> 35:39.000
And then the Sunday after that, November 22 in the Luplug,

35:39.000 --> 35:41.880
it's the Bugathon for Jellyfin 10.7.

35:41.880 --> 35:44.040
Oh, now that's a reason to join.

35:44.040 --> 35:45.720
Yeah, and you can help test Jellyfin

35:45.720 --> 35:48.720
and make it the best release ever with the virtual Lug.

35:48.720 --> 35:50.880
So that's all happening in the Mumble Room.

35:50.880 --> 35:53.320
Plus, it's that same Mumble configuration

35:53.320 --> 35:55.400
to join the show if you ever get the chance.

35:55.400 --> 35:56.800
And then you're just good to go.

35:56.800 --> 35:59.040
I also want to mention that Jupiter Broadcasting has

35:59.040 --> 36:01.480
an all shows feed where you can subscribe to that.

36:01.480 --> 36:02.980
And you just get every show we put out.

36:02.980 --> 36:03.940
Oh, that's like every show?

36:03.940 --> 36:05.240
Yeah, did you know Coda Radio's back?

36:05.240 --> 36:05.740
What?

36:05.740 --> 36:06.280
That's right.

36:06.280 --> 36:09.560
Linux Action News Now features a brand new co-host,

36:09.560 --> 36:11.200
a sharp young fella named Wes Payne.

36:11.200 --> 36:11.960
Hey, that's me.

36:11.960 --> 36:13.000
That's you.

36:13.000 --> 36:15.420
All that and this show and more, like self-hosted

36:15.420 --> 36:18.620
in the all shows feed, plus anything new we come up with.

36:18.620 --> 36:20.240
So consider that if you haven't already

36:20.240 --> 36:22.920
subscribed to the Jupiter Broadcasting all shows feed.

36:22.920 --> 36:25.800
You just search for it in your pod catcher of choice

36:25.800 --> 36:28.480
or find a link at JupiterBroadcasting.com.

36:28.480 --> 36:33.240
And that, Wes Payne, is all of the housekeeping.

36:33.240 --> 36:36.040
We wanted to talk about our favorite Linux desktop tweaks,

36:36.040 --> 36:38.960
which is going to include apps and command line

36:38.960 --> 36:43.560
tools, things that we use or deploy or leverage

36:43.560 --> 36:45.200
or take advantage of.

36:45.200 --> 36:46.280
Or come on, one more.

36:46.280 --> 36:49.080
What's one more?

36:49.080 --> 36:49.840
Leverage.

36:49.840 --> 36:51.960
I already said leverage.

36:51.960 --> 36:54.600
Come on, give me a good one.

36:54.600 --> 36:56.640
Nope, said deploy.

36:56.640 --> 36:57.480
Utilize.

36:57.480 --> 36:58.400
Yeah, utilize.

36:58.400 --> 36:59.200
You got it, Wes.

36:59.200 --> 36:59.920
Good job.

36:59.920 --> 37:01.320
Good job.

37:01.320 --> 37:02.960
I thought we weren't going to get that.

37:02.960 --> 37:05.680
First thing on the list, command line dictionary.

37:05.680 --> 37:07.600
Yeah.

37:07.600 --> 37:08.520
Yeah, we should have.

37:08.520 --> 37:09.720
Yeah, so these are just different things

37:09.720 --> 37:11.320
that we've collected over the years, some of which we've

37:11.320 --> 37:14.600
told you about on past shows, some of which are brand new.

37:14.600 --> 37:16.920
So I'll start with a couple here,

37:16.920 --> 37:19.240
one that I have absolutely talked about before

37:19.240 --> 37:21.800
on the show, but is such a game changer

37:21.800 --> 37:25.060
that I continue to use it day to day on every distribution

37:25.060 --> 37:26.240
that I set up.

37:26.240 --> 37:28.880
And I think you should try it if you haven't yet,

37:28.880 --> 37:31.200
unless you don't like speed, unless maybe you prefer

37:31.200 --> 37:32.840
your web browser to be slow.

37:32.840 --> 37:34.460
But if you like your web browser fast,

37:34.460 --> 37:37.480
check out Profile Sync Demon.

37:37.480 --> 37:40.280
It's essentially just symlinks your browser profile

37:40.280 --> 37:41.480
into a RAM disk.

37:41.480 --> 37:43.000
But it handles the synchronization

37:43.000 --> 37:45.560
from the RAM disk back to your actual profile

37:45.560 --> 37:47.000
on your disk for you.

37:47.000 --> 37:50.180
And it makes the browser so much faster.

37:50.180 --> 37:51.880
It never has to wait for your disk.

37:51.880 --> 37:53.240
And I know what you're thinking.

37:53.240 --> 37:57.240
You're thinking, Chris, I have me one of these fast PCIe MVME

37:57.240 --> 37:58.080
disk, man.

37:58.080 --> 38:00.080
It gets like one of them gigabits a second.

38:00.080 --> 38:00.780
It's real nice.

38:00.780 --> 38:02.160
It's got the gigabytes.

38:02.160 --> 38:02.980
I do too.

38:02.980 --> 38:05.000
And I'm telling you, it's still faster

38:05.000 --> 38:06.880
when you use Profile Sync Demon.

38:06.880 --> 38:07.960
It's great.

38:07.960 --> 38:10.640
It makes the UI more responsive.

38:10.640 --> 38:12.760
Because if you're hitting your bookmarks menu,

38:12.760 --> 38:13.880
it's got to check the disk.

38:13.880 --> 38:16.840
It just loads instant, fricking, taneously.

38:16.840 --> 38:18.580
And it makes web pages work better.

38:18.580 --> 38:20.400
It makes everything faster.

38:20.400 --> 38:23.200
And if you've got more than 16 gigs of RAM in your system,

38:23.200 --> 38:26.800
you've got enough to polish off a few hundred megabytes

38:26.800 --> 38:27.440
for this thing.

38:27.440 --> 38:28.600
So this is like when you're not yet

38:28.600 --> 38:31.680
ready to run your whole OS from RAM, like a starter step?

38:31.680 --> 38:32.960
Are you going to do that?

38:32.960 --> 38:33.880
Is that one of yours?

38:33.880 --> 38:35.640
No, no.

38:35.640 --> 38:36.280
Yeah.

38:36.280 --> 38:37.280
I mean, I could definitely see why

38:37.280 --> 38:39.080
you'd want to run the entire system from RAM,

38:39.080 --> 38:40.360
to be honest with you.

38:40.360 --> 38:43.160
But the nice thing about this is like even on my laptop,

38:43.160 --> 38:45.960
where I've got 16 gigs, this is running in the background.

38:45.960 --> 38:47.080
I never think about it.

38:47.080 --> 38:48.360
It just works super solid.

38:48.360 --> 38:49.980
It just works, which is what you need

38:49.980 --> 38:51.480
if you're going to be trusting all your browsing with it.

38:51.480 --> 38:51.720
Yeah.

38:51.720 --> 38:54.560
And you can set it up with one of them system D units

38:54.560 --> 38:57.240
and have it run under your own account.

38:57.240 --> 38:59.760
And I'll have a link for that information in the show notes.

38:59.760 --> 39:01.920
Now, I want to tell you about a new tool that I use.

39:01.920 --> 39:06.120
It's going to kind of pair with another tip I have that

39:06.120 --> 39:08.200
is like a first world tip.

39:08.200 --> 39:09.200
I'm going to admit that.

39:09.200 --> 39:11.520
But I'll start with a tool that I have recently

39:11.520 --> 39:15.960
started using called, very simply, GPU Viewer.

39:15.960 --> 39:19.960
And I'm going to warn you, it's not the prettiest app.

39:19.960 --> 39:22.080
But it is a graphical application

39:22.080 --> 39:23.520
to give you front end information

39:23.520 --> 39:25.480
to a bunch of under the hood apps,

39:25.480 --> 39:30.760
like GLX Info, Vulkan Info, CLI Info, ES2 Info.

39:30.760 --> 39:34.700
And what it does is it builds you a really nice media info

39:34.700 --> 39:38.300
style list of information about your graphics card,

39:38.300 --> 39:41.680
your driver, any of those kinds of details, even your CPU

39:41.680 --> 39:45.280
information, your OpenCL support, your OpenGL support,

39:45.280 --> 39:46.880
your Vulkan support.

39:46.880 --> 39:48.280
So if you're trying to figure out

39:48.280 --> 39:50.140
what your deal is with Steam games

39:50.140 --> 39:52.800
or with any kind of performance issue,

39:52.800 --> 39:54.320
this gives you everything you need

39:54.320 --> 39:56.640
to know about your graphics card.

39:56.640 --> 39:59.880
And where it comes in supes crazy handy

39:59.880 --> 40:02.920
is my next kind of first worldy tip here

40:02.920 --> 40:07.280
is if you've got an Intel graphics laptop

40:07.280 --> 40:10.520
and you want to be a little foolish with your money,

40:10.520 --> 40:12.000
I do, I do.

40:12.000 --> 40:17.440
I really still today recommend an eGPU.

40:17.440 --> 40:18.680
Use it as a dock.

40:18.680 --> 40:20.120
It's such a thing of beauty.

40:20.120 --> 40:22.360
You guys know I've talked about this before on the show.

40:22.360 --> 40:24.520
And I'm here to tell you that this is still the setup

40:24.520 --> 40:27.080
I'm using, and it's still working really well for me.

40:27.080 --> 40:28.800
After, what has it been, a year or more

40:28.800 --> 40:30.120
since we've talked about it on the show?

40:30.120 --> 40:33.040
Yeah, you were just showing me your new setup in the RV.

40:33.040 --> 40:33.560
It was fancy.

40:33.560 --> 40:34.680
Yeah, I got a new stand.

40:34.680 --> 40:35.720
So I've got the laptop.

40:35.720 --> 40:37.720
It's even closer to me, and it's a little higher,

40:37.720 --> 40:39.160
so that way I sit up better.

40:39.160 --> 40:42.360
And I've got a little mini Clacky keyboard

40:42.360 --> 40:43.700
that I ordered online after getting

40:43.700 --> 40:44.820
one of those little tester kits.

40:44.820 --> 40:48.060
I did the whole thing, and it's this little compact keyboard.

40:48.060 --> 40:49.680
I've got a Bluetooth mouse.

40:49.680 --> 40:51.640
I've got a game controller.

40:51.640 --> 40:55.120
I've got my wireless headphones that we reviewed on the show,

40:55.120 --> 40:57.120
still using those too.

40:57.120 --> 41:00.760
Another great Linux tool is those wireless Corsair

41:00.760 --> 41:03.080
headphones that use RF instead of Bluetooth.

41:03.080 --> 41:05.160
And of course, I got a couple of other things

41:05.160 --> 41:08.560
plugged in, like a phone and watch charging cable.

41:08.560 --> 41:13.520
All of that, though, is all of it is plugged into the eGPU.

41:13.520 --> 41:15.640
And one, oh, and power, of course.

41:15.640 --> 41:16.200
Of course.

41:16.200 --> 41:17.160
Power, of course.

41:17.160 --> 41:21.560
One cable comes from the eGPU into the laptop.

41:21.560 --> 41:23.040
One cable.

41:23.040 --> 41:26.440
And I don't know exactly why, but now I

41:26.440 --> 41:30.680
seem to be able to unplug and plug in the eGPU

41:30.680 --> 41:32.460
without my OS freezing.

41:32.460 --> 41:36.600
So I can just come and go as I please, at least as soon as,

41:36.600 --> 41:39.160
I mean, Fedora 33, it hasn't been a problem yet.

41:39.160 --> 41:40.660
So maybe it's a newer kernel thing.

41:40.660 --> 41:43.000
Maybe it's because I don't use it as the dedicated GPU.

41:43.000 --> 41:45.480
I kind of use it more as an on-demand GPU.

41:45.480 --> 41:47.240
But man, does that work well for me.

41:47.240 --> 41:47.960
That is so slick.

41:47.960 --> 41:51.140
I have all my peripherals set up there, all the wires,

41:51.140 --> 41:53.240
all that stuff go into the eGPU box.

41:53.240 --> 41:56.440
One Thunderbolt 3 cable comes to my laptop.

41:56.440 --> 42:00.440
And then the way I use the GPU is as an environment variable

42:00.440 --> 42:02.700
before I launch the application or the Steam game.

42:02.700 --> 42:05.200
And there's guides on how to do this.

42:05.200 --> 42:08.160
I use an environment variable to say which GPU

42:08.160 --> 42:10.080
I want the application on.

42:10.080 --> 42:13.920
And so I essentially have an on-demand AMD GPU.

42:13.920 --> 42:16.400
And since it's an open source driver,

42:16.400 --> 42:17.800
there's no repercussions.

42:17.800 --> 42:21.000
Like if I do an NVIDIA card in that eGPU,

42:21.000 --> 42:23.160
then I always have the NVIDIA driver.

42:23.160 --> 42:25.560
And I always have the NVIDIA management software

42:25.560 --> 42:28.600
and admin stuff, whatever that application is.

42:28.600 --> 42:30.600
I always have that stuff on my box.

42:30.600 --> 42:32.500
And we have looked.

42:32.500 --> 42:35.820
And it does look for the NVIDIA GPU.

42:35.820 --> 42:37.400
And it can sometimes even freak out

42:37.400 --> 42:40.000
looking for the NVIDIA GPU when it's missing.

42:40.000 --> 42:42.360
And it will create a bunch of errors in your log.

42:42.360 --> 42:44.000
You can see it happening when you run journal.

42:44.000 --> 42:44.640
Not what you need.

42:44.640 --> 42:46.720
And you also don't have to be disabling and re-enabling it

42:46.720 --> 42:47.960
or handling any of that.

42:47.960 --> 42:49.880
Which was the workaround we came up with is

42:49.880 --> 42:53.080
different essentially grub entries

42:53.080 --> 42:55.760
that disabled or enabled the NVIDIA card.

42:55.760 --> 42:58.560
But because it's an AMD graphics card,

42:58.560 --> 43:02.000
and it takes up 10% of the kernel code apparently,

43:02.000 --> 43:05.040
but the kernel driver is built in,

43:05.040 --> 43:06.800
it just works when it's there.

43:06.800 --> 43:08.960
And it is fine when it's not there.

43:08.960 --> 43:10.280
Like it just doesn't care.

43:10.280 --> 43:14.660
And so I switch between an Intel graphics and an AMD graphics.

43:14.660 --> 43:18.320
And I have all of my laptop cords going into that eGPU.

43:18.320 --> 43:20.600
And it's such a nice experience.

43:20.600 --> 43:22.600
It's like over a year since we talked about it.

43:22.600 --> 43:24.400
And I was actually showing Wes a picture of my setup

43:24.400 --> 43:24.960
this morning.

43:24.960 --> 43:26.520
I'm still loving it that much.

43:26.520 --> 43:29.840
And so GPU viewer makes it even easier

43:29.840 --> 43:31.000
to kind of get information.

43:31.000 --> 43:32.720
Is the system seeing my GPU?

43:32.720 --> 43:35.160
What is the information it does detect about it?

43:35.160 --> 43:36.080
All of that's in there.

43:36.080 --> 43:37.720
And I really like it.

43:37.720 --> 43:38.400
OK.

43:38.400 --> 43:39.720
I have just a couple more.

43:39.720 --> 43:40.080
You ready?

43:40.080 --> 43:40.840
Yeah, almost.

43:40.840 --> 43:41.680
OK.

43:41.680 --> 43:45.480
This one you can probably guess is for unfilter mostly.

43:45.480 --> 43:48.080
But it's just really handy if you.

43:48.080 --> 43:49.680
There's a couple other tools to do this.

43:49.680 --> 43:51.360
But there's nothing simpler.

43:51.360 --> 43:53.600
If you just want to trim the ends of a video,

43:53.600 --> 43:55.360
maybe you took something on your phone,

43:55.360 --> 43:56.560
you've copied it over to your machine,

43:56.560 --> 43:58.680
and you want to just trim it up a little bit,

43:58.680 --> 44:01.520
there is a GTK application that's kind of new.

44:01.520 --> 44:05.080
It's on Flat Hub and other places called, simply,

44:05.080 --> 44:06.200
Video Trimmer.

44:06.200 --> 44:09.080
And it lets you just cut out a fragment of video.

44:09.080 --> 44:12.280
You give it a start and end timestamp.

44:12.280 --> 44:13.780
And it will cut it.

44:13.780 --> 44:16.760
The video is never re-encoded.

44:16.760 --> 44:19.000
So the process is super fast.

44:19.000 --> 44:21.200
And it doesn't reduce the video quality.

44:21.200 --> 44:23.240
And that's the number one thing I like about it,

44:23.240 --> 44:25.520
is it is designed to not re-encode video.

44:25.520 --> 44:27.200
And you know, that's kind of a big deal.

44:27.200 --> 44:28.320
It is.

44:28.320 --> 44:32.720
The UI is a little tricky when you have an hour-long video.

44:32.720 --> 44:34.720
But if you're working with a three-minute video

44:34.720 --> 44:37.280
you took on your cell phone, or if you did a screen cap

44:37.280 --> 44:39.120
and you want to cut off just the beginning

44:39.120 --> 44:42.440
and the end of the screen cap, it's super great for that.

44:42.440 --> 44:44.920
And it's a really straightforward UI.

44:44.920 --> 44:47.560
And it's crazy easy to get installed as a Flat Hub.

44:47.560 --> 44:51.280
You mean I don't have to do this manually with ffmpeg anymore?

44:51.280 --> 44:53.480
AvidMux is my other favorite way to do it.

44:53.480 --> 44:58.000
But this makes AvidMux's UI look like it's from 1992.

44:58.000 --> 44:59.760
And I noticed you haven't mentioned this yet.

44:59.760 --> 45:00.260
What?

45:00.260 --> 45:01.840
It's written in Rust.

45:01.840 --> 45:02.340
No!

45:02.340 --> 45:02.840
No!

45:02.840 --> 45:03.340
No!

45:03.340 --> 45:03.840
No!

45:03.840 --> 45:04.340
No!

45:04.340 --> 45:04.840
No!

45:04.840 --> 45:05.340
No!

45:05.340 --> 45:05.840
No!

45:05.840 --> 45:06.340
No!

45:06.340 --> 45:06.840
No!

45:06.840 --> 45:07.340
No!

45:07.340 --> 45:07.840
No!

45:07.840 --> 45:08.340
No!

45:08.340 --> 45:08.840
No!

45:08.840 --> 45:09.340
No!

45:09.340 --> 45:09.840
No!

45:09.840 --> 45:10.340
No!

45:10.340 --> 45:10.840
No!

45:10.840 --> 45:11.340
No!

45:11.340 --> 45:11.840
No!

45:11.840 --> 45:12.340
No!

45:12.340 --> 45:12.840
No!

45:12.840 --> 45:13.340
No!

45:13.340 --> 45:13.840
No!

45:13.840 --> 45:14.340
No!

45:14.340 --> 45:14.840
No!

45:14.840 --> 45:15.340
No!

45:15.340 --> 45:18.240
Those are some good advice from a long time Linux user.

45:18.240 --> 45:21.240
Come over here, sit by my fire for a moment,

45:21.240 --> 45:23.280
I'd like to tell you a story.

45:23.280 --> 45:25.680
Stay a while and listen.

45:25.680 --> 45:29.160
I highly recommend, if you're a GTK desktop-er,

45:29.160 --> 45:30.600
give POPtHeem a try.

45:30.600 --> 45:32.800
Go all in and get all of the packages.

45:32.800 --> 45:33.940
Get the ICIM theme.

45:33.940 --> 45:35.040
Get the cursor theme.

45:35.040 --> 45:36.200
Get the GTK theme.

45:36.200 --> 45:37.740
You don't have to do the auto-titling.

45:37.740 --> 45:39.560
Give POPt THEM a try.

45:39.560 --> 45:43.080
They've put a lot of thought into what

45:43.080 --> 45:48.200
be highlighted so that way your attention is drawn to the right part of the UI at the right time.

45:48.200 --> 45:54.840
Open save dialogue boxes, pop-up boxes, they've put a lot of effort into that. And I've been using

45:54.840 --> 46:01.560
it on pop, but I've also been using it on Fedora 33, which is wicked cool. And I have noticed over

46:01.560 --> 46:06.760
the last few weeks that they have put sort of emphasis on like what should be the default and

46:06.760 --> 46:11.320
what you click on if you don't want the default. And that kind of stuff is really nice. If you're

46:11.320 --> 46:16.920
a plasma pal, I really want to suggest that you stick with Breeze, but give Breeze Dark a try.

46:17.480 --> 46:23.720
Breeze just keeps getting better and better. And Breeze Dark, it kind of makes you not see some of

46:23.720 --> 46:30.280
the unused white space that's in some of the plasma applications. And so not only do I find it just

46:30.280 --> 46:36.760
simply easier on the eyeballs, but I also think it kind of, for lack of a better word, kind of

46:36.760 --> 46:45.320
papers over some of the UI gaps and spaces that sort of drive me nuts sometimes. And the dark

46:45.320 --> 46:49.160
theme makes that all real nice, kind of makes it smooth, and you don't notice that kind of stuff.

46:49.160 --> 46:54.120
So GTKers, I just got to say, even if you just do it for a week, give the pop theme a try.

46:54.120 --> 47:01.720
And plasma pals, go Breeze, but go Breeze Hard and go Breeze Dark. That's my sage longtime desktop

47:01.720 --> 47:06.360
advice. I've got a million other things, but I feel like I've been talking for like five hours. So

47:06.360 --> 47:09.880
Wes, why don't you give us some of your favorite apps, tweaks, tools?

47:09.880 --> 47:15.000
I've been finding myself in the command line more and more these days. So mine mostly focus on

47:15.720 --> 47:19.720
how do you make life a little bit better while you're there. One tool I've been using more often

47:19.720 --> 47:27.240
is FZF, a command line fuzzy finder. And this is just great. It's a general purpose command line

47:27.240 --> 47:32.600
fuzzy finder. And it can use with basically anything, a list, files, command processes,

47:32.600 --> 47:37.320
history, host names. So let's say you want to SSH to a box. Once you've got this installed and set

47:37.320 --> 47:41.960
up, you also add a star star and hit tab. And then this thing goes and looks through all your

47:41.960 --> 47:46.840
SSH configurations, stuff like that, finds hosts that exists, offers right there with a really

47:46.840 --> 47:51.320
slick curses interface that drops right down and lets you find it. One thing I didn't even realize

47:51.320 --> 47:55.960
until looking over the main page again was it integrates with kill. So I'm trying to kill dash

47:55.960 --> 48:01.320
nine something. Yes, there's tons of ways to find it. But you just hit tab and it pops an interactive

48:01.320 --> 48:05.880
environment right there in your terminal where you can browse through hit enter process is gone.

48:05.880 --> 48:12.200
That's super nice that that for kill right there is a winner. So that's the command line fuzzy

48:12.200 --> 48:17.560
finder FZF. How have I not heard of this before? I don't know. You know, I think it's actually

48:17.560 --> 48:21.960
pretty popular. I don't think it's been a pick here, although it's definitely elsewhere around

48:21.960 --> 48:26.200
the Linux ecosystem. If you haven't tried it, I think it's worth a shot. And it slots into pretty

48:26.200 --> 48:29.480
much all the shells they've got, you know, it's easy to install, they've got a little script that

48:29.480 --> 48:34.920
will add it and customize your config so that it works nicely. It's great. Does it work with the

48:34.920 --> 48:41.240
best show? Yes, it does. This has got to be one of your picks. It is. Yes. So I've been using a Mac

48:41.240 --> 48:45.320
a little more for work as we've talked about. That's been that's been totally fine. Not what

48:45.320 --> 48:49.720
this is about. But I had been using that as an opportunity to play with CSH more because that's

48:49.720 --> 48:55.160
now the default shell over there in OSX. How is the SH? Not bad. You know, I like it. It's a good

48:55.160 --> 48:59.560
shell. There's a lot of neat stuff. Certainly, you know, better than bash as you might say.

49:00.840 --> 49:07.000
But I'm back on fish. Yeah, it's no fish, right? Fish is just so easy. And it does so many of these

49:07.000 --> 49:13.240
things that I might otherwise want to customize or pull in or configure that fish just does for me.

49:13.240 --> 49:17.800
And I love that there's things that I don't need to save and I don't need to automate or they're

49:17.800 --> 49:21.960
just not worth the time of doing it. But fish bridges that gap. So if I'm going to go back to

49:21.960 --> 49:25.560
a project and I'm in that folder again after three months, well, the build commands are just

49:25.560 --> 49:30.680
right there in fishes memory. That is exactly what it is, is you go into an environment you

49:30.680 --> 49:35.800
haven't been there in weeks or months, you kind of kind of remember the command you ran, but you

49:35.800 --> 49:40.920
don't quite know what it was or what the flags were. And you start to type what you do remember

49:40.920 --> 49:47.320
and fish auto completes the frickin rest. It's just it's so great. And there's other ways to

49:47.320 --> 49:50.520
crack this too, right? Doesn't it? But I guess you don't have to use fish if you don't want to change

49:50.520 --> 49:53.960
your whole shell. Yeah, there are things you know, FCF can help with some of this stuff. And then

49:53.960 --> 49:58.440
there are a bunch of tools that I had been using in past installations, just around helping you get

49:58.440 --> 50:02.040
around your file system. If you have common activities, common locations, you go for certain

50:02.040 --> 50:07.160
workloads. There's all kinds of nice tools, things like auto jump or jump or smart CD is another one

50:07.160 --> 50:13.000
that I've used. All this can be pretty handy if for some reason you just can't use fish. I saw

50:13.000 --> 50:18.040
you had a you had an entry in here in the doc for the Chromecast lifestyle, which I don't know if

50:18.040 --> 50:22.360
we fully added you for but you are like you are a hardcore caster. If I'm not watching it, like on

50:22.360 --> 50:26.920
my laptop, on my phone, then it's definitely going on my Chromecast. That's the primary method. I

50:26.920 --> 50:30.840
watch basically everything. But that's how you get like everything on your television. And so having

50:30.840 --> 50:37.080
some tools to make that easier, definitely necessary. To start with just MK Chromecast.

50:37.080 --> 50:40.440
That's a pretty popular application. It just lets you it integrates in and handles all the trans

50:40.440 --> 50:44.760
coding, figuring things out plays really nicely with pulse audio, adds a device and then anything

50:44.760 --> 50:50.040
you select to output there just shows up on your Chromecast. Oh, that's cool. If you're using Chrome,

50:50.040 --> 50:53.320
you can just cast from inside Chrome. And that works pretty darn decently. But if there's other

50:53.320 --> 50:57.800
application stuff you're doing on the desktop that isn't in a browser, this is the way to do it.

50:57.800 --> 51:02.520
Could you do a full video that way? You know, I don't know if it can you can play the video file.

51:02.520 --> 51:05.640
So that's pretty easy. I'm not sure about, you know, for streaming, you have to do a little more.

51:05.640 --> 51:09.400
Yeah, why don't just play the file in? Okay. And so that's where the next two picks come in.

51:09.400 --> 51:15.160
So that was MK Chromecast. All right, what do you got next? Cat, which has previously been a pick

51:15.160 --> 51:20.280
on the shelf cast all the things and this guy is just great. You throw any file at it pretty much

51:20.280 --> 51:23.880
it will figure out if it needs to transcode it spins up a little server automatically locally

51:23.880 --> 51:30.680
to play it on the Chromecast and sends it right over. C-A-T-T. C-A-T-T. Yeah, I recall that that

51:30.680 --> 51:34.360
is really nice that it spins up the server that the Chromecast is expecting. Right. And it has

51:34.360 --> 51:38.360
good support like you've got multiple devices or you know, like an audio Google, whatever they're

51:38.360 --> 51:45.720
called now. I forget the names. Mini, no. HomePod. Yeah. Google version of HomePod. It also integrates

51:45.720 --> 51:50.360
with YouTube DL if you've got that around so you can just say like, hey, cast this link to a YouTube

51:50.360 --> 51:56.440
URL and it'll figure it out for you. Nice. The one thing it's not as great though is kind of controlling

51:56.440 --> 52:01.720
you can control it but it's not as intuitive as I like. So there's another program called cast now

52:01.720 --> 52:06.440
and that's my last little Chromecast utility. This can also stream it's not quite as good so I don't

52:06.440 --> 52:10.280
use it for that I just use it as a little heads up display in the terminal it'll figure out what's

52:10.280 --> 52:13.560
playing it shows you a little menu of you know what is that currently casting and then you can

52:13.560 --> 52:18.920
just spacebar to pause you can adjust the volume you can seek. Whoa whoa whoa whoa so this is like

52:18.920 --> 52:24.600
a remote control in the command line? Yep. Oh my gosh that's cool that is so neat and you put in

52:24.600 --> 52:28.520
a drop down terminal that's the way to go. Right you just have it available whenever you want.

52:29.640 --> 52:33.160
That's cast now we'll have links to all of this at linuxunplug.com

52:33.160 --> 52:39.400
slash 379 huh and and so can you but you don't use that to send any files you just use that to

52:39.400 --> 52:43.720
manage whatever is playing. Yeah it can do that and I used to use that in the past but I've found cat

52:43.720 --> 52:49.720
is more actively maintained and just does a better job of it. Okay now can you help me with this one

52:49.720 --> 52:55.800
because I know that you got a web browser but that's not good enough and you got vim and that's

52:55.800 --> 53:00.440
not good enough but if I could somehow take vim and put it in my web browser maybe then I could

53:00.440 --> 53:05.720
have the perfect browsing experience so what do you have for me? Well why don't you try Tridactyl.

53:05.720 --> 53:13.000
Tridactyl really? A vim-like interface for Firefox. Okay so you can move around the browser using vim

53:13.000 --> 53:17.000
commands and whatnot? Yes and there's also vimparator previously there was Pentadactyl which

53:17.000 --> 53:21.000
is where the name Tridactyl comes from so there's there's some chrome options here as well if you're

53:21.000 --> 53:25.640
not using Firefox but if you wanted to be a little more efficient and you're just really hooked on

53:25.640 --> 53:31.080
vim like some of us you can take it to the next level. Do you actually have this set up right now

53:31.080 --> 53:34.760
can you do this? I don't have it on this system but on my main web browsing machine at home yeah

53:34.760 --> 53:39.800
because it's just so easy like if I want to close a tab you hit d then the tab is gone and if you've

53:39.800 --> 53:45.480
already got these sort of like built-in muscle memory from using vi in the command line all the

53:45.480 --> 53:51.000
time and you know I turn those settings on I use it when we edit show notes and code emd I use it in

53:51.000 --> 53:56.920
my uh in my ides for work it's just a natural extension and I don't know I don't go crazy with

53:56.920 --> 54:00.920
it you can like make you know use it to select text on the page and find stuff and all that

54:00.920 --> 54:04.920
I just use the sort of basic navigations moving between tabs stuff like that on your home computer

54:04.920 --> 54:11.000
yeah on your mint box well you know you gotta customize mint you gotta make it yours okay drew

54:11.000 --> 54:15.640
I know you've got a few desktop tweaks and apps that you like to use uh and I want to hear them

54:15.640 --> 54:22.920
yeah I do so my first one is more of a tip it's use your damn home slash dot local directory

54:24.680 --> 54:30.360
I got so sick of cluttering up my root folder I was like there's got to be a better way so yeah

54:30.360 --> 54:37.160
turns out there's a dot local folder usually it has uh just like a single folder in there share

54:37.160 --> 54:42.440
and then it's got like your applications overrides your fonts that you've installed locally stuff

54:42.440 --> 54:48.680
like that but you can do tons of stuff in there and in fact most distros that I've used recently

54:48.680 --> 54:55.480
have home slash dot local slash bin in your default path so that is a perfect place to put

54:55.480 --> 54:59.560
all of your little scripts and things like that that's a great one that's good all the rust

54:59.560 --> 55:07.640
applications you just download exactly yeah what did you say Wes that's a good one though because

55:07.640 --> 55:13.400
that dot local is just sitting there it's yours for the using yeah and I even use it for um you

55:13.400 --> 55:21.800
know I use nextcloud and anytime I switch to a different desktop like I go to Ubuntu or Pop or

55:21.800 --> 55:27.000
Fedora or whatever I just resync all my stuff and I do a home slash dot local slash config and then

55:27.000 --> 55:33.080
I symlink from there into my real config folder and that way I can keep all of my config stuff

55:33.080 --> 55:39.320
all sorted out and and synced the one-stop shop yeah and so use that folder use it for

55:39.960 --> 55:47.160
so many things because why not and it keeps your home folder clean so my second thing is just for

55:47.160 --> 55:55.320
Debian people or Debian adjacent like Ubuntu or Pop and that is the Liquorix kernel I find it

55:55.320 --> 56:03.640
really quite snappy and it just feels more like a really smooth desktop experience so for those

56:03.640 --> 56:09.240
maybe like not familiar this is like a specially tuned like desktop focused kernel yeah exactly

56:09.640 --> 56:13.880
I started looking at it because I was looking for something that was a little better for pro

56:13.880 --> 56:19.560
audio than just the regular low latency kernel but once I started using it I was like wow you

56:19.560 --> 56:25.560
know everything feels more responsive and now it's like the first thing I install as soon as I

56:25.560 --> 56:31.960
am on a Debian system so oh okay just Debian though well and Ubuntu anything Debian based

56:31.960 --> 56:37.800
man I want it for Fedora yeah no it's it's not available for Fedora but it's built on the Zen

56:37.800 --> 56:42.920
patch set so if that gives you any indication of kind of what they're doing under the hood there

56:42.920 --> 56:50.280
but I do have something for Fedora users and this one is really really cool it is

56:50.280 --> 56:57.640
pipewire nightly it is a repo in copper that gives you the latest and greatest unstable goodness

56:57.640 --> 57:03.640
oh you're speaking our language yeah it's for adventurous people but I'm using it I'm actually

57:03.640 --> 57:10.520
using it right now and it is handling all of my pulse all of my jack and in the latest builds

57:10.520 --> 57:16.520
and in the latest builds it even supports flat pack yeah and that's actually kind of useful in

57:16.520 --> 57:21.320
a way that I hadn't appreciated before can you describe what that means which part the the flat

57:21.320 --> 57:26.680
pack support yeah flat pack supporting pipewire and like the screenshot you sent us okay so

57:27.400 --> 57:34.760
previously flat pack would not talk to the pulse server that pipewire is spinning up

57:34.760 --> 57:42.520
so what they ended up doing and by they I mean wim tamans is they're spinning up a second pulse

57:42.520 --> 57:50.040
server just for flat pack applications that then routes audio back in so I can spin up something

57:50.040 --> 57:54.840
in flat pack and I can route it to a jack application I can just run it straight as a pulse

57:55.720 --> 58:02.520
straight to my system I can do whatever I want to with any flat pack apps just like I would a

58:02.520 --> 58:07.480
normal regular app on my desktop that's great that's how we'd want it yeah now it is still a

58:07.480 --> 58:13.560
little buggy I have had it where if I've got like Spotify running for hours it'll start stuttering

58:13.560 --> 58:20.040
after a little while but closing it and reopening it respawns a server and it's fine after that

58:20.920 --> 58:26.680
so again for adventurous users but it's really coming along great that's good news I know what

58:26.680 --> 58:33.240
I'm installing after the show and then I'm really glad you put this last one in here because I think

58:33.240 --> 58:37.880
as Firefox if you're using Firefox this seems like a must-do yeah well especially if you're

58:37.880 --> 58:45.400
using the default ad way to theme it is a essentially a CSS hack that will turn your

58:45.400 --> 58:52.520
Firefox into something that looks truly GNOME native it's super simple to install you can

58:52.520 --> 58:58.280
configure it in the about config menu instead of like having to you know hack on the actual

58:58.280 --> 59:05.560
config files themselves and it just looks really nice yeah I like that it supports the ESR release

59:05.560 --> 59:12.760
as well yeah there's really no way to state how nice and it just makes Firefox look native it

59:12.760 --> 59:18.280
looks nice and it makes it look like a GTK application that even looks good on on plasma as

59:18.280 --> 59:23.880
well I just think I really really wish this is how Firefox just natively looked on Linux

59:23.880 --> 59:30.440
right it's super nice it's great it's clean it looks like like it's belongs on the Linux desktop

59:30.440 --> 59:34.600
so I'll have a link to that that's a really good one and it's one that I need to set up

59:34.600 --> 59:38.120
I just realized when I saw that link in there it's like oh I don't have that installed right now

59:39.800 --> 59:44.200
so that's what I'm gonna do thank you Drew those are good ones and we'll have links to

59:44.200 --> 59:51.960
all of Drew's all of Wes's and mine in the show notes and then if you're in the mobile room and

59:51.960 --> 59:56.360
you want to share with us you want to share one with us let's do it in the post show you know

59:56.360 --> 01:00:01.880
let's sneak them in there that's what it's there for that's right well thanks to a cloud group

01:00:01.880 --> 01:00:07.080
sponsoring this here episode of the unplugged program they have a python 3 scripting course

01:00:07.080 --> 01:00:11.480
for system administrators that will have linked in the show notes it's pretty nice you develop

01:00:11.480 --> 01:00:16.360
the skills you need to write effective powerful scripts and create command line tools using

01:00:16.360 --> 01:00:21.240
you guessed it python 3 but beyond the language itself you'll go through the full development

01:00:21.240 --> 01:00:25.960
process including project setup planning and automated testing to build two different command

01:00:25.960 --> 01:00:30.600
line tools and more it's pretty great we'll have a link in the show notes if you want to check it

01:00:30.600 --> 01:00:36.280
out python 3 scripting for system administrators at a cloud guru go to cloud guru.com or use the

01:00:36.280 --> 01:00:45.960
link in our show notes let's do a little bit of feedback Mr. Payne we got some on YouTube DL and

01:00:45.960 --> 01:00:52.840
Hans wrote in and this is a really long email Wes but he essentially thought that when we

01:00:52.840 --> 01:00:59.960
touched on the YouTube DL issue that we probably could have given more GitLab love you know given

01:00:59.960 --> 01:01:05.400
a little more attention to GitLab he's been self-hosting on GitTia and he's running it out

01:01:05.400 --> 01:01:11.960
of his living room that's great and he and then he just mirrors his repositories to both GitHub

01:01:11.960 --> 01:01:17.480
and GitLab very nice which is a pretty interesting approach and I kind of think we touched on a

01:01:17.480 --> 01:01:21.320
little bit that's why I didn't like specifically mention GitLab I think we just kind of mentioned

01:01:22.760 --> 01:01:26.840
various self-hosting tools and that maybe some of these projects are going to have to consider that

01:01:26.840 --> 01:01:30.280
yeah and what's the right setup how do you maybe take advantage of some of the GitHub

01:01:30.280 --> 01:01:34.440
discovery factor community building factor but also make sure that well if they decide to do

01:01:34.440 --> 01:01:38.920
what they want to do or can do at any time you've still got your project all the resources necessary

01:01:38.920 --> 01:01:43.800
to continue development yeah and we also speculated about some other reasons beyond like DMCA

01:01:43.800 --> 01:01:48.600
takedowns that might motivate projects into doing that do you want to take the free IPA feedback

01:01:48.600 --> 01:01:53.880
because we asked people what their thoughts were on running Active Directory now that both Fedora

01:01:53.880 --> 01:01:58.280
and Ubuntu have built-in support in their installers to join an Active Directory domain

01:01:58.280 --> 01:02:02.520
I started thinking this might be a decent homeland solution but I don't really want to deploy

01:02:02.520 --> 01:02:06.680
windows and so we asked people to write in with their experience using free tools

01:02:06.680 --> 01:02:10.680
Matthias wrote in in the latest look you had mentioned wanting to set up Active Directory or

01:02:10.680 --> 01:02:16.360
free IPA I have been using free IPA in my house and home lab for a little more than a year and

01:02:16.360 --> 01:02:23.000
I love it you can use it to manage the SSH keys shells users groups and SSL certs all from one

01:02:23.000 --> 01:02:29.400
pretty UI that looks and uses the same UI framework as cockpit which hey that looks pretty nice oh

01:02:29.400 --> 01:02:35.240
really that is very nice actually I note that also it's possible to manage several other aspects

01:02:35.240 --> 01:02:40.920
besides just your desktop login but other single sign-on aspects of a network that's kind of nice

01:02:40.920 --> 01:02:44.600
and setting up LDAP for things like Nextcloud and GitLab seems to work too

01:02:45.240 --> 01:02:51.000
I don't know I looked at free IPA and it looked like a hell of a project Wes you and I have

01:02:51.000 --> 01:02:57.160
thought about doing it and we just I don't know we haven't quite been motivated to pull the trigger

01:02:57.160 --> 01:03:00.920
on it and maybe it's because our login system has been working just fine the way we do it

01:03:00.920 --> 01:03:05.080
we kind of have a standard system here at the studio we have our own systems for our own machines

01:03:05.080 --> 01:03:09.400
well it's a lot you know there's a lot of moving parts there's a lot going on and a lot for us to

01:03:09.400 --> 01:03:13.400
learn so I think if we do we need to you know dedicate some time to it but we're also maybe

01:03:13.400 --> 01:03:17.960
interested in some some minimal smaller what's the you know what's the barebone system that gets us

01:03:17.960 --> 01:03:22.360
some of those advantages but that we actually have an understanding of yeah I don't really

01:03:22.360 --> 01:03:27.800
need to become an active director or LDAP administrator I don't want to no Patrick wrote

01:03:27.800 --> 01:03:33.080
in about Zenitol which looks like it's spelled like it's some sort of medication but he says

01:03:33.080 --> 01:03:38.040
it's a sugar-free gum yeah right exactly he says he's a developer at a small engineering embedded

01:03:38.040 --> 01:03:42.440
systems company about five people or so so he handles all the IT for everybody and he said he

01:03:42.440 --> 01:03:47.640
wanted to share his experience they have a 15 year old Windows 2003 AD server and they moved it to

01:03:47.640 --> 01:03:52.200
something Linux based he's been using Zenitol as their AD server for about a year now and he's been

01:03:52.200 --> 01:03:57.320
pretty happy with it he says has a good web UI for managing services users and groups unfortunately

01:03:57.320 --> 01:04:01.480
you do need the Windows admin tools on a Windows machine if you want to do anything complicated

01:04:01.480 --> 01:04:05.720
with group policy but he says he doesn't have a need for that we don't we would not have it no

01:04:05.720 --> 01:04:10.680
definitely not and he says we have a mix of Windows and Linux clients both work great I

01:04:10.680 --> 01:04:14.600
renamed our domain in the process and migrated the Windows clients to the new domain turned out to be

01:04:14.600 --> 01:04:19.320
super easy it was a little more annoying to get my Ubuntu 20.04 system connected but it wasn't too

01:04:19.320 --> 01:04:23.400
bad it's nice to be able to just log into my workstation using the same login I use everywhere

01:04:23.400 --> 01:04:29.480
else in the office yeah I bet and now it's even easier in 2010 it's built into Ubiquity he says

01:04:29.480 --> 01:04:33.800
I've never used any other LDAP server so I can't really compare but I imagine using Active Directory

01:04:33.800 --> 01:04:39.240
server and in a Linux all Linux shop probably isn't worth it I would assume the Linux domain

01:04:39.240 --> 01:04:43.000
servers would be better integrated it'd be definitely nice to join an AD domain to the

01:04:43.000 --> 01:04:47.160
installer but using the installer but hopefully they make it easy to join to an existing computer

01:04:47.160 --> 01:04:56.600
too when I was trained as a Windows administrator back in the late 90s I was shocked when I came

01:04:56.600 --> 01:05:01.800
to Linux and discovered there wasn't a central authentication system just by default out of the

01:05:01.800 --> 01:05:06.760
box right because in the Windows land you just get domain controllers in Active Directory that

01:05:06.760 --> 01:05:10.920
just is part of the Windows server package got the big old yeah right that's part of it in Linux you

01:05:10.920 --> 01:05:16.520
have to roll it yourself and so that's why Zenitol and FreeIPA are I think kind of a more compelling

01:05:16.520 --> 01:05:23.000
solution to someone like myself because I come from a background where I actually have rolled

01:05:23.000 --> 01:05:28.360
all of these components myself I did one major install for a company that doesn't exist anymore

01:05:28.360 --> 01:05:33.080
but it was a it was a meal on demand delivery company and the entire back end infrastructure

01:05:33.640 --> 01:05:41.400
was on Linux it was using LDAP and we did have Windows machines that joined the Samba powered

01:05:41.400 --> 01:05:47.000
domain and we use that central LDAP for web authentication for internet authentication

01:05:47.000 --> 01:05:51.560
for email authentication I mean I for a short period you know for a couple of years I was

01:05:51.560 --> 01:05:55.880
really living the dream there but I've just never really been compelled since then but if I could

01:05:55.880 --> 01:06:00.680
throw together something in a container or a virtual machine and then go to a web UI and

01:06:00.680 --> 01:06:05.080
kind of just have a decent like cockpit style web UI just enough to like yeah manage whatever

01:06:05.080 --> 01:06:11.480
shared system users we might need that might not be so bad I could see doing that I could see that

01:06:11.480 --> 01:06:16.200
uh before we go on I want to thank our unplugged core contributors unpluggedcore.com the core

01:06:16.200 --> 01:06:22.120
contributors keep unplugged independent as long as we can we'll keep doing this show independently

01:06:22.120 --> 01:06:27.560
and you also help reduce the ad load needed to make the show profitable and we're not unplugged

01:06:27.560 --> 01:06:31.560
that's right and you know what else it really means is when we don't have a sponsor like you

01:06:31.560 --> 01:06:36.520
know maybe maybe stuff goes bad and we don't get a sponsor for a little bit the core contributors

01:06:36.520 --> 01:06:40.920
can keep the base cost of the show covered so we can still get it edited produced and when you

01:06:40.920 --> 01:06:45.880
become a core contributor you get access to two feeds one feed is a limited ad feed same full

01:06:45.880 --> 01:06:52.920
production all of the mix the editing just limited ads and then there's feed two which is the full

01:06:52.920 --> 01:06:57.320
uncut live stream has the pre-show that never got recorded the one where we were playing videos

01:06:57.320 --> 01:07:02.280
the post show all of our screw-ups the restarts the mistakes doesn't bleep anything if we swear

01:07:02.280 --> 01:07:06.840
there's nothing like that it's all just raw full transparency for our core contributors it's

01:07:06.840 --> 01:07:12.040
available as a second feed and it's like an extra show and in this case where we're recording early

01:07:12.040 --> 01:07:17.320
well they get the show several days before the final release hey isn't that nice so there's

01:07:17.320 --> 01:07:21.960
those perks too you get it as pretty much as soon as we're done which which can be an advantage

01:07:21.960 --> 01:07:28.760
sometimes thank you to our core contributors unplugged core dot com well mr pain i think

01:07:28.760 --> 01:07:31.720
that's everything we have for today we don't i don't think we really need to do any picks we

01:07:31.720 --> 01:07:36.040
have picks but i don't think we just did a whole bunch of pain we sure did we just did like 20,000

01:07:36.040 --> 01:07:40.440
picks i know i know and i can hear joe and i hear going you're going on too long you got to stop i

01:07:40.440 --> 01:07:43.560
can hear him you know that's not what he sounds like at all but in my head that's what he sounds

01:07:43.560 --> 01:07:51.160
like this see you next week same bad time same bad station this time it'll be sunday uh a little

01:07:51.160 --> 01:07:55.000
after noon join the virtual lug hang out with them for a bit and then when wes and i are done

01:07:55.000 --> 01:07:59.160
with linux action news we'll hop on the live stream that's perfect you just warm up with the

01:07:59.160 --> 01:08:03.400
lug get chatting get ready to share your linux opinions and then we'll be there live linux

01:08:03.400 --> 01:08:11.160
unplugged jblive.tv noon 30 pacific maybe one o'clock i don't know sometimes you got a snack

01:08:11.160 --> 01:08:15.960
you know the news the news you don't rush the news so when we're we're not starting till we're

01:08:15.960 --> 01:08:19.720
done with the news that's just the reality we'd love to have you join us next sunday we're just

01:08:19.720 --> 01:08:24.600
doing these two out of order then we're back to our regular tuesday time slot you of course can

01:08:24.600 --> 01:08:28.520
just subscribe and just get the show when we release it and just don't worry about it that's

01:08:28.520 --> 01:08:33.880
at linuxunplug.com subscribe links to everything we talked about today linux unplugged 379 and

01:08:33.880 --> 01:08:40.600
your feedback at slash contact and one last time that mumble info is linuxunplug.com mumble thanks

01:08:40.600 --> 01:08:54.440
for joining us see you back here next tuesday

01:09:10.600 --> 01:09:20.440
so

01:09:20.920 --> 01:09:26.360
this is one of those episodes where next time i reload a machine i'll be going back to the

01:09:26.360 --> 01:09:30.840
website and like remember what did west say what did drew say i'll be clicking on your links so

01:09:30.840 --> 01:09:36.040
that's how you chose this topic yeah i do that i have there's like certain shows i go back to

01:09:36.040 --> 01:09:39.160
the show notes myself after i set up a new rig that's why next week we're going over to how

01:09:39.160 --> 01:09:46.120
to install large okay no no i don't think so no i'm i'm pretty happy with fedora these days and

01:09:46.120 --> 01:09:50.680
really the ubuntu's keep killing it too it's it's it's a hard task for a distro to get me to move

01:09:50.680 --> 01:09:56.840
off that and when i do it it tends to be mangero these days like i got my three you know i'm a

01:09:56.840 --> 01:10:01.960
multi-distro man i've got i've got commitment issues to a single distro but i can live a three

01:10:01.960 --> 01:10:06.040
distro lifestyle and i can live it pretty happily on the right balance that's right well i'll tell

01:10:06.040 --> 01:10:09.640
you what i've been playing with lately that would be really helpful for you is ansible

01:10:10.360 --> 01:10:16.760
just ansible all of your initial setup and just run a script and you're back where you started

01:10:16.760 --> 01:10:22.440
but on you know a new os i don't i don't know me known ansibles but i know me that i know some

01:10:22.440 --> 01:10:26.600
ansibles but i don't know me ansibles you know what i mean yeah what i'm saying is i need to

01:10:26.600 --> 01:10:32.600
know me some ansibles because i've got these raspberry pies that um you know sd card could pop

01:10:32.600 --> 01:10:37.640
uh usb disk could pop i could have to just swap it out and swap it in with a new raspberry pi and

01:10:37.640 --> 01:10:43.240
it'd be really great in that kind of environment to just redeploy everything to it and not go back

01:10:43.240 --> 01:10:46.760
and reset up the os and custom install the packages and custom configure you don't want

01:10:46.760 --> 01:10:53.160
to install docker compose another time on that and tweak the ssh config as i do all the changes

01:10:53.160 --> 01:10:58.920
i make i should just get it set up once and then deploy well between alex and myself i'm willing

01:10:58.920 --> 01:11:03.400
to bet we could get you something get you something rolling it turns out if you try hard enough you can

