So this is no joke, Wes.
Did you see that the XKCD form got owned?
A leak?
Oh, watch out.
Watch out, Wes.
It's no good.
I mean, XKCD, the site's OK.
But the user form, which has a pretty sizable amount
of accounts, like 562,000 accounts, was compromised.
Oh, boy, yeah.
Email, IP, and password hashes.
This was pointed out by the one and only Troy Hunt.
And I guess it actually occurred two months back.
Yeah.
You know, happens to all of us.
Happens to the best of us.
They did, of course, have a little comic to go with it.
That's pretty great.
There's a How Hacking Works by XKCD.
Very relevant right now.
Hello, friends, and welcome into Linux Unplugged,
your weekly Linux talk show.
This is episode 317.
My name is Chris.
My name is Wes.
Hello, Wes.
Good to be connected with you from afar.
I'm on the road today.
It's impressive.
But nevertheless, we've got a huge show.
We do.
Actually, I think it's really kind of,
it might be too much show for a remote episode.
We'll find out if we pull it off.
Well, stop messing around, gosh.
Well, you know, Wes, I decided to take a little trip, which
I'll tell you all about here in a little bit.
And it turned out to be very fruitful.
Not only did we get to go hang out with the one and only Wendell
Wilson from Level One Techs, but I just
got back from the Red Hat Tower, too.
So we'll tell you about that and help
us get through all of the community news
and a bunch of big stuff that's launching next week.
Of course, we've got our Mumble Room.
Time appropriate greetings, Virtual Lug.
Hello.
Hello.
Hello.
Hello.
Hello.
Hello.
Hi.
Oh, hi.
And also, we got Cheesy and Drew here,
helping us break it all down, too.
Hello, gentlemen.
Hey, guys.
Hey, nice to have you there.
Boy, we got a packed Mumble Room today.
So that's pretty great.
Alex, you're graciously hosting me today,
and you're in the Mumble Room.
That's wonderful.
Yeah.
Howdy.
Howdy over there.
Alex has the ultimate podcast set up right now
because I kicked him out of his office to host him,
and he's rocking it like a pro podcaster
right now on the couch.
Soup's comfortable.
I see how it is.
Now that we've launched self-hosted,
you're like just gone all pro now.
He's got a microphone stand that's designed just
to be right next to him.
He's got this comfortable spot with the dog,
and he's been hosting me since Thursday.
We came down.
I came down from Seattle.
He came and picked me up from the airport,
and it's been quite the adventure.
So we have a lot to talk about today.
But we should probably start with some community news
as we like to do, some big things going on
in the community, starting off with the news around exFAT.
So by now, you've likely heard that Microsoft
has given their blessing for the exFAT file system
to not only land in the Linux kernel,
but to also become part of that wider OIN Linux system
definition.
So it's big news.
And the information has been pretty extensive.
Like, everybody's really covered this.
We got the story down.
But the short version is code's not out,
but it's a policy change.
And surprise, surprise, a driver has existed for quite a while,
although it's proprietary.
But it started popping up in 2013.
That code was never actually released under a free license
because patent issues remained.
So no real serious efforts to upstream it
went into the mainline kernel.
It just never really happened.
But LWN, Jonathan Colbert, has a really good article
that we'll link to that talks about part of the background
here about this kernel driver that's kind of getting
beaten into shape now.
Yeah, that's right.
Way back in July, a developer posted
that he'd transformed the code into something that maybe could
be upstreamed, but didn't know what else needed to happen
to make that possible.
And the ensuing discussion made it clear
that the patent issues were still a showstopper.
And I mean, can you blame them with those things outstanding?
I wouldn't want it in my kernel.
Yeah, right.
Although, they may actually have something out of this, right?
Now that Microsoft's given their blessing,
maybe those patent issues aren't such a big deal.
Maybe we're going to get a driver sooner than later.
Yeah, I mean, it seems like with Greg KH agreeing
that it could be part of the staging tree,
I think it's going to happen one way or another.
Yeah, it has all things a bit of drama around this.
Some people think it's too shoddy of work.
Other people think that they should start over clean.
But it looks like it's headed towards the staging tree,
where it will be tested.
And people will determine if it's usable or not.
It's coming faster than I think we anticipated.
Thank goodness, too.
I mean, I just remember a couple of weeks ago,
you were finding out that this didn't work so well
under Linux.
And maybe all the future Crises out there,
they can just forget about this little problem.
Yeah, you're right.
I popped in my SD card from my Canon camera a couple of weeks
ago, took some pictures from the old Sprint Skis that we had,
and thought, oh, I'll just grab these really quick
and share them with everybody.
And realized that out of the box, my Fedora desktop
could not read an exFAT formatted SD card.
And of course, that's a very, very common format
for external disks and for SD storage on cameras.
Yeah, you know, Chris, Joe and I covered this a little bit
on Linux Action News 121.
That you did.
And as always, thank you for filling in on that.
You're always great, Wes, on Linux Action News.
So check that out.
The guys go into a bit of detail there.
And incidentally, for those of you that don't remember,
in 2014, it was reported that Microsoft makes anywhere
from $5 to $15 per Android device that's
shipped with an exFAT driver.
So that's a huge chunk of change.
That's crazy.
That's crazy.
I know.
It's so much money.
And they say no more further patent litigation is in the works.
They're done with that.
Done.
Woo-hoo.
The Wayland future is near.
And there's some great news coming out
of a Google Summer of Code project
Michael Eberle over on Ferronix has a write-up about Wayland
Pipe, which will provide network-transparent Wayland
proxy for running native Wayland programs or games
over a network similar to x11's x40 over SSH capabilities.
How great is this?
It all started when student developer Manuel Stogel got
paired up with Google Summer of Code
and funded to work on this.
And it's now successfully working
for Wayland games and applications.
You can go give it a try right now if you like.
It also supports some handy features
like compression, multi-threaded optimizations,
and hardware acceleration in some cases.
I have one reaction to this, which is finally.
Yeah, it's one of those things that's kind of outstanding.
Everyone working on Wayland is like, yeah, yeah,
we'll get to it.
We'll solve it.
So far, no one's complained about it too much.
In theory, we can do it.
There's nothing stopping us.
We just haven't.
And I guess, I mean, now that's true.
Yeah.
Yeah, while Google Summer of Code has ended,
the project is going to go on, hopefully.
Some further code cleanup, potentially some refactoring,
some protocol extension.
There's a really, really kind of comprehensive breakdown
we have linked in the show notes.
We'll give you a couple of highlights.
Unlike the original X protocol, only part of the data
is needed to display an application transferred
over the network for the application
because the connection is done at the compositor level.
So large chunks of information can just
be data that the compositor needs
to draw the application and associated file descriptors.
There is side channel information
you could include in there that talks about the position
and all of that kind of information
that the display manager needs to display it on the other end.
They just need a communications channel between them.
And in this case, they can use SSH.
Yeah, Waypipe even includes some handy little wrappers too.
So you can just sort of run Waypipe,
point it at another server.
It'll handle all the little SSH details,
and you just get a remote Wayland connection.
Yeah, that's really nice.
And some of the small tweaking is
done to just sort of make things a little more network
transportable.
For instance, they'll strip out certain kinds
of advertising capability messages
that will often be associated with graphics cards
or whatnot that advertise what their capabilities are.
Instead, that can be done once, and then it
can be edited out from the transmission over the network.
Yeah, the developer has a very impressive and detailed blog
post up that we'll have linked in the show notes.
Yeah, check it out.
Linuxunplugged.com slash 317.
I'm really, really hopeful about this
while it was a Google Summer of Code project, which,
side note, some really good stuff coming out of Google
Summer of Code this year.
Anyways, Waypipe also supports a bunch of quality of life
features, including, like Wes said,
that wrapper, hardware accelerated video encoding,
awesome, transfer compression, and a method
to reconnect to applications if your connection,
like your SSH connection, drops.
It'll support reconnecting and resuming the applications.
Really excited about this.
And of course, it can proxy programs
that render images using OpenGL.
So like we mentioned, there is a capability here
that you could even stream something
as complex as a game over the network with reasonable results
if your bandwidth is sufficient.
That's crazy.
Doesn't this really kind of solve
the number one concern people usually
bring up about switching to Wayland is X11 forwarding?
Yeah, we're getting there.
More and more of these just keep getting knocked down,
sometimes surprisingly quickly, like in this case.
And before long, well, the Wayland future will be here.
The only one left now is NVIDIA, right?
Yeah.
I mean, I know there's initial work on that.
Yeah, that stings.
That does sting.
Because I've been rocking Wayland still.
Since that weekend with Wayland, I
haven't gone back on my ThinkPad.
I'm still using it.
I'm hooked on the Smooth.
Once I see it, I can't go back.
We talked to Wendell about that, too, a little bit.
We'll get to that.
But let's talk about something huge happening next week.
A major version of Gnome Shell, I'm sorry,
Gnome Shell is coming out, Gnome Shell 3.34.
And Joey over at OMG Ubuntu has a write-up of some of the top
things that are in there.
But we'll just cover a couple of these.
And then we're going to go deep on some performance work that
really moves the needle.
But from a general user improvement,
there's a few things in here that are nice in Gnome 3.4,
which is scheduled to land next Tuesday,
should everything go as planned.
Now, the new version makes it much easier
to create app folders in that application overview.
Right there, when you have all of the apps that come up,
you can now, from in there, kind of like on a mobile device,
you can drag icons on top of each other.
It creates a folder.
It makes it nice to organize that.
And then, like in the Ubuntu doc, I believe,
haven't tested this yet, but I believe those folders will then
also work in the doc, which I think
that's a really cool thing.
Oh, that's very nice.
It's also much easier to preview backgrounds.
You don't actually have to set them, you know?
You can also set an image as the desktop background,
lock screen background, or both with the handy new popover
menu.
And you're no longer limited to picking a wallpaper
from the top level JPEG folders in your pictures folder.
Just click the Add Picture button
and pick a file anywhere on your system.
I mean, come on, about time.
Hallelujah.
It's truly 2019.
I can now choose my own pictures folder, which is nice,
because I like to organize my pictures folder.
I don't like having everything just
in the root of my freaking pictures folder.
So I am surprisingly stoked about this feature.
Well, another thing you might like
is an improved Sysprof tool for profiling your system.
It's got a redesigned UI, new data sources,
and integration with core GNOME platform libraries,
including GTK and Mudder.
So maybe now you can measure just how smooth it is.
Joey's got a killer screenshot of this.
Like, this looks like a real tool, doesn't it?
Yeah, I mean, if I didn't already have NetData,
I might really, really want this.
Hmm, hmm, yeah.
No, actually, the deep hooks right into GNOME,
this seems like super handy.
It wasn't as useful before, but now I
think I'll definitely be using it on systems that have GNOME.
Yeah.
I am also delighted to see improvements
coming to GNOME boxes.
That's the virtual and remote machine manager.
Some nice changes in the 3.34 release.
For instance, the new Box Assistant
has an improved workflow to make it super quick
to get machines up and running.
And there's a new option.
I don't know what this is, Alex, but it's
called the 3D acceleration.
Is it now optional setting?
Do you think they're talking about pass-through?
I don't know.
VirtualBox has had a 3D acceleration thing for a while.
Maybe it's related to that, but we can hope.
Could just be a different kind of driver.
I think it's more likely related to VertIO 3D
acceleration, which is available for some Linux distributions.
Right.
That would make sense.
I feel like GNOME boxes would be the perfect project
to make a PCI pass through a couple of checkboxes
and a dropdown to choose the PCI device you want to pass through.
It would unleash so much virtualization power.
It's a whole new level, right?
Like, that would actually be very accessible to people in a way
that it's just not right now.
Yeah, yeah.
Well, there is some good news.
There is an open issue for that on the GNOME GitLab.
Yeah, maybe it'll result in something.
That would be wonderful.
We've seen a lot of performance improvements
landing in the most current releases of GNOME.
Talk about a great meme, because the meme is now like, oh, yeah,
every release has performance improvements.
This one, though, is so significant.
We're seeing last-minute inclusion,
although it's been tested.
But GNOME 3.4 is expected to release in just a few days
as we record this.
So squeezing this mutterfix in at the last moment
is a big deal.
And it has a big impact for those
that are running GNOME on X11 with the NVIDIA proprietary
graphics driver.
Yeah, that's right.
Canonical's been hard at work, in particular,
Daniel von Wut over there.
And you may know him from his many GNOME performance
optimizations that we're very happy with.
Well, over the past two years, he's
been toying with a particular NVIDIA fix.
It's basically the removal of GLX-threaded swap weight
handling for the NVIDIA binary driver.
And it ended up stalling both the CPU and the GPU.
And it's just not serving its intended performance use cases
with the current state of mutters code.
The issue it was originally designed to address
around unthrottled rendering, well, that's
just been addressed in a separate patch
and done in a different way earlier this summer.
So just in time for 3.34.
If you've been fighting with this,
if you've noticed that you're an NVIDIA binary user, hey,
it's a great time to be using GNOME.
Yeah, and that's not the only performance
fix that came from Canonical's Daniel von Wut.
We've got to get him on the show,
because he has done the people's work recently.
He's also landed another fix that
will be performance improving for everyone
that has a mouse cursor.
So if you use GNOME Shell with a mouse,
this performance improvement applies to you.
That's me.
That's me.
It also has a fun name, geometric picking.
And yeah, it's about cursor movement and avoiding OpenGL
or using the GPU for color picking operations.
That logic is now being done on the CPU without OpenGL,
but it turns out it's actually more efficient this way
and is able to cause a measurable drop in CPU usage
when moving the mouse.
And I don't want something that simple to be taxed on my system.
So by not using the GPU, they're saving CPU cycles.
You know, I imagine they were shuffling data off over
to the GPU in this case.
And if it's faster to just do it with the CPU,
then bother to go out, get the data,
send it to the GPU, and bring it back.
Well, that might be a win.
I guess so.
I guess so.
They write on the bug tracker, this new approach also
dramatically reduces the number of picking paint cycles
required for cursor movements since the pickability
of an entire screen is calculated and cached.
That's smart.
Interesting.
Stuff like this is so, so great.
So these are like core infrastructure things
that we need to see improved in Gnome.
It's interesting too, right?
This is kind of exactly the stuff
we were hoping for when Canonical adopted Gnome
as their default desktop.
And it's really been coming true.
100%, 100% true.
Good point.
And kind of along these same lines,
Gwadek just wrapped up the Gnome conference.
And Cassidy, who is, is it the Chief Experience Officer?
Cassidy, is that what the X stands for?
He's joining us today.
Yeah.
Hello, Cassidy.
Thank you for being here.
You had a talk on the need for a free desktop dark style
preference.
Now, you're not in this talk.
You're not advocating dark style, dark theme,
all the things.
But what you are saying is, hey, maybe dark theming
is an accessibility thing.
Yeah, basically over the last year,
we've seen all these other platforms adopting dark styles.
And they've done it in a really similar way.
And so I've been kind of watching this happen.
And I've been listening to developers and users
talk about the issues with dark styles.
And so this proposal is basically a way
that we could support this on free desktop OSes,
like Gnome-based OSes, or KDE-based, or elementary OS.
But in a way that's easy for developers to implement
and doesn't really break everything.
Yeah, you had a great example.
You'll have a link to your video in there.
You talk about, well, what if that one day you're
in a dark conference room, and you want to take notes,
and you want to flip your screen over to dark mode for that day?
Or what if you're starting to have a headache come on,
and you've got to finish something up,
and you just want to flip your system
to dark mode for a little bit?
And then there's also the overwhelming evidence
that all of the other desktop and mobile vendors
are implementing dark mode support,
and including web browsers.
So it's here, really.
And we don't want to be necessarily left out.
But you're not saying everybody go off and do it your own way.
You're saying we should come up with a free desktop.org
standard.
However, you are saying it in a time
when there's a bit of pushback on theming in general.
So I'm curious, how's it being received?
How did the bird of the feather session go afterwards?
How's the overall reception to this idea
that we should accommodate this?
So the BoF, the birds of a feather session,
actually went really well.
It seems like about a year ago, when I first
started bringing this idea up, there was a lot of pushback.
Because this idea of ripping the style sheet out
from under apps and putting a different theme on them,
there was a lot of pushback from app developers.
But when we talk about it from doing it at a specification
level where it's expected, an expected feature
of the platform, and when other platforms are doing it
in a really similar way, it seems like the conversation
shifted.
And people are just kind of like, yeah, let's just do it.
And what was cool is we actually combined the birds
of a feather session with the GTK one,
because there wasn't actually that much
to discuss in our separate one for the dark style.
And that meant we got the insight
of very experienced GTK developers,
and we got a whole room of a few dozen people
to kind of think about this and think about a way forward.
So there's already work going into GTK 4 to help support
this, some new APIs.
So it's exciting to see it already moving forward.
I also noted, and I'm not sure if this was a product of Guadec
or if it just happened around the same time,
but it seems like there's been some kind of agreement
that vendor themes are going to stick around,
and now we need to figure out how to properly do them.
Did you see this?
Yeah, and I was actually involved quite a bit in this.
It's actually all intertwined with the different style
sheets that are user style sheets, dark styles,
and then downstream vendors like Ubuntu or Pop!
OS, or even elementary to a certain degree.
We're going to exist forever, and there's
different arguments from different camps of we really
think that the system should have a certain style that
matches our hardware and fits in with our brand.
And I think a year ago, again, we
had that whole theming discussion,
and then this year, it's a little bit
of a more mature discussion, I think,
about it of, OK, we've kind of heard the extremes.
Let's come to the middle and agree on something
on some way forward.
And so basically, the way we're moving forward,
it seems like within Gnome, is a more publicized and supported
styling API, I guess, with publicly exposed CSS variables
in the GTK style sheet so that app developers can
use semantic variables or variables that
are guaranteed to be supported.
And then themes like Pop!
OS or Ubuntu, they can actually make
sure they support those different variables as well.
So it's kind of an in-between of it's not
ripping the entire style sheet out from under apps.
It's more like, hey, it's compatible
with these different variables.
And so I think we'll see some really interesting things
in Yaru moving forward and in Pop! OS
moving forward with this.
It's essentially letting the applications know, hey,
I'm set up to display this way.
I look this way right now.
And they can choose to implement that or not.
And if they do, they can implement it
in a way that they know is consistent with their UI
design.
Yeah, and it's from multiple angles, too.
So it's like, applications can say,
can use those variables to create custom styled widgets.
But then the vendors themselves can use those variables
to create their own style sheet that's compatible with Adueda.
So you get less breakage.
Adueda is how you're supposed to say it?
Oh, man, I've been way off.
I have no idea if that's how you're supposed to say it.
That's just how I say it.
So no one knows.
Wow.
You've probably been around people pronouncing it.
So you probably got it close.
I say Aduadia.
So what do I know?
It might be like Advaita or something.
I don't know.
Could we just go with gnome theme?
The built-in, yeah, the shell theme.
Of course, then we'll debate on how you say gnome or gnome.
Exactly.
And there's varying ideas there, too.
There's no winning.
Well, good talk.
Everybody on the team watched it.
We liked it.
We have it linked in the show notes.
I think it's a great approach to this.
I'm obviously, I skew on the side of dark theming
all of the things, because I just
find it a strain on my eyes after about five, six hours
of using the computer to have everything so bright.
But I don't want to go overboard.
And I really like the balance you're
striking with it, Cassidy.
I think you really have a great approach.
And I'm willing to bet that's going to translate into pretty
good support in elementary OS.
So some of these things you're talking about in your talk,
are you moving ahead with them in elementary OS?
We're kind of waiting to see.
So the way Free Desktop works is they really
like to have two independent implementations
before they call it a Free Desktop spec.
Because otherwise, it's just only one project
just kind of pushing Free Desktop.
So I think we're going to wait to see how it's done in GTK
specifically and engage the developers there.
And then we'll help expose it in elementary OS
and work with Gnome as well to help expose it.
So I think the elementary implementation in Gnome
counts as two separate implementations.
And then we'll work on officially standardizing
the spec.
Really curious to see where this goes.
I like that it seems like it's, like you said, it's been a year.
So it's not happening super fast.
But at the same time, it feels like if it does happen,
it'll be really set.
And it'll stick.
And that's a rarity.
So that's really good to see.
So keep up the good work, sir.
Thank you.
Thank you.
And thank you for stopping by.
Mr. Payne, what do you say?
Should we sashay into the housekeeping?
Oh, yes, we must.
All right, well, let's kick off the housekeeping this week
with announcements.
September's free courses for the Linux Academy community
members is now available.
Couple of things that Al has cranked the free handle on
that caught my attention.
The Microsoft SQL Server on Linux Quick Start guide.
Heck, yeah.
Oh, yeah, right.
Maybe you're interested in self-hosting something
like Bitwarden.
That seems like a great guide.
Exactly.
Network routing fundamentals.
You want to get your wire guard on?
You're going to need to know that one.
And along those same lines, Linux networking
and troubleshooting.
And a Git, Quick Start, and core OS essentials,
plus a lot more.
All free now for Linux community members
for the month of September.
You just go create an account.
Get a community member account, and then
you can go take that Mastering System D class too.
That's a good one there, Al.
You got a good list this month.
Thanks.
I'm really hoping to help people kind of get their journey
into Linux Kickstarted.
Now, speaking of journeys, let's talk about Texas Cyber Summit.
We have the Be New track, which sounds pretty killer.
We've got a birthday party.
So where do you want to start with the Texas Cyber Summit?
I think I'd like to kick off with the Be New track.
And the concept is really what I've been,
I'm going to say preaching, because I
think I get on my high horse every once
in a while about tackling new things
and not being afraid of it.
The number one feedback that I get to people
where they don't go to conferences is they say,
well, I'm not ready yet.
I'm not at that part of my career.
And I can't stress enough that at the time
that you are starting out, that you're looking to find something
new or looking to get into the tech sector,
that's the perfect time to start going to conferences.
Because you can learn more than just what you can see in a book
or what you can see in a forum.
You can see what people are actually doing with the tech.
So we've built a whole track around, hey,
you want to learn Docker?
Cool.
Let's do it with not just doing DevOps,
but let's learn it with DevSecOps.
Let's put security first and foremost in your learning
process.
You've heard about capturing the flag,
but you don't feel you know enough to do it?
Then come to our Capture the Flag.
Purvey.com has decided to sponsor that for us.
And they will have mentors at the table teaching you
not just how to capture that flag,
but what your thought process should
be when you're actually approaching password cracking
or whatever it is that you have to do to be
able to capture that flag.
So I'm really excited.
Yeah, that seems like the most valuable part is you're
learning how to think, too.
So then you can take that, and you can apply that
to future situations.
And if you understand that kind of stuff, you're employable.
Because technology is always changing.
There's always more to learn.
It's about learning how to think about the problem.
I think the major thing that people can walk away with
is not just being able to say, hey, I
went to this conference, but to say,
hey, I went to this conference, I participated in the event,
and I hands-on was able to build X,
or I was able to win this competition.
That's something that you can put on a resume,
because it shows practical hands-on knowledge.
Now, Texas Cyber Summit is coming up.
It's just around the corner.
So I want to get you the dates, because the crew's going.
A lot of us are going to be there, so we'd love to see you.
So it's October 10th through the 12th
at the Grand Hyatt in San Antonio, Texas.
So if you can make it, we'd love to see you there,
because we're going to have a big presence.
And we're also going to have an unofficial Hacker Family
dinner and a birthday party, too, Elle.
It's going to be my birthday.
And I can't think of anybody who I'd
like to share it more with in our community.
So come by, have some Texas-style barbecue and some cake.
It's going to be a great time the day
before the conference starts.
That's amazing.
We'll be at the Two Brothers barbecue.
I'll be there.
The details, meetup.com slash Jupiter broadcasting.
I can't believe it's finally happening, Elle.
It's like actually happening, Texas Cyber Summit.
I feel like I've been preparing for months,
so I hope that everyone loves the event.
I'm pretty sure you and I have been talking about it
since January, at least.
So it's been a long time, and you've probably
been thinking about it even longer than that.
So we'd love to see you there.
And it's a great chance to get started
and just see what the state of the cybersecurity industry
as it is now, quite an industry, where it's at.
So all those details, linuxunplug.com slash 317.
Well, that's the housekeeping.
Now let's talk a little bit about some great tips
that I got from Wendell.
So for our self-hosted show, self-hosted.show,
for episode two, we're going to have Wendell on.
And the topic of the episode is why you should actually
self-host in the first place, and fairly enough,
when you shouldn't self-host.
And Wendell has a super cool approach to this.
So we went down to his studio in Lexington, Kentucky.
And I got to start the story at the very beginning.
I have to give a shout out to Alex.
He's taking care of all of the trip details, the room booking.
He's letting me bum internet here at his house.
He cooked a sandwich, or his wife cooked a sandwich.
It's been good.
It's been really good.
So thank you, Alex.
It's been wonderful.
And I flew in last week.
Did I get in Thursday, I think?
I got in, I don't know.
You know, I think I got in Thursday.
I think Thursday.
Yeah, you and the wife picked me up at the airport.
And we got right to dinner, which was good.
You know me, I like to eat.
And then the next day, we took a drive
from Raleigh, North Carolina to Lexington, Kentucky,
which was about 10 hours, 10 or so hours.
But it's a drive through the mountains.
We got to drive on what's called the Tale of the Dragon.
We got to take Blue Ridge Parkway, which are,
they look like they should be in an episode of Top Gear.
They look like they should be in car commercial roads.
That's really something.
I've never had road jelly before,
but I am so envious of the roads around here.
It was a lot of driving, though.
And Alex did more than the majority of it,
so I appreciate that.
When we got in, we got in on Saturday.
And Alex had to stay in a quality
in a hotel, which I will say, the first one was pretty good,
of decent quality.
However, I did have this weird, over-softened bedsheet
situation, where there was this weird residue on my bedsheets
that felt almost a little moist.
That was hard.
This is an awkward silence.
It was a little weird.
It was a little hard.
But I powered through like the pro traveler that I am.
And we got down, and we met Wendell at his studio
and spent the entire day with him.
He was just really gracious.
And you know what's really nice is you get to meet people,
and they're legitimately what they are on camera.
And that doesn't happen very often.
But Wendell is a fountain of information.
Alex, do you want to share the story?
Of course, because we're sitting around the studio,
there is all kinds of hardware.
There's probably not a system in there
with less than 16 cores.
I mean, we're talking Tesla video cards.
We're talking just all kinds of great stuff.
And so as one does, when you're in the presence
of such hardware, we start benchmarking.
I never really used the Forerunix benchmark suite
before.
And Wendell just busts it out and says, oh, look,
this machine can compile a kernel in, what, 20 seconds,
12 seconds?
He showed us a system that it compiled so fast
that I believe the test suite had to do further tests
because it figured it was an error that had compiled
the kernel so fast.
Yeah, it was pretty great.
He had two 2-terabyte NVMe boot drives in RAID 0.
Yeah.
And then, of course, he had a massive CPU in there.
I can't even remember how many cores it had.
It might have been 24 cores.
I don't know.
He just casually threw out, oh, this one has a Thread Ripper,
but this one has a 3900X.
Oh, there's another Thread Ripper over there.
What really impressed me is because, of course,
as soon as we busted out the Forerunix test suite,
I start geeking out.
Because you guys know how much I love that freaking thing.
So we're talking about it.
And, of course, Alex is discovering it.
And we're like, well, Alex, let's run it on your systems.
So Alex remotes in, and he's got a server here
with a bunch of cores and a couple of Xeons in it.
And he's got a desktop.
And you go to town, and Alex discovered the same Wendell
rabbit hole, which I now find myself in, which is so funny.
So tell them first what you discovered,
and then I have something I have to admit.
So I ran this benchmarking suite on a dual Xeon system.
And I was able to compile a kernel, I think,
in 64 seconds, which was a good deal slower than his Ryzen
system in front of me, but it seemed pretty good.
So then I thought, OK, let's break out the i7-8700K.
Let's see what this can do, expecting a really good result.
126.
Horrible.
So I was quite disappointed by that.
What's great about Wendell, too, just a side note,
is you can rattle off the parts.
And before the benchmark finishes,
he'll tell you what number you should expect.
And then when you didn't get the number that you expected,
he knew what the problem was from afar.
He just said to me, what motherboard is it?
And I said, oh, it's a Z370 Tai Chi ASRock motherboard.
And he goes, ah, you haven't enabled
this setting in your BIOS.
I get home, lo and behold, I enable that setting,
and I knock 25 seconds off.
Amazing.
He knew exactly what setting it was,
where it was in the BIOS, right off the top of his head
with that particular hardware combination.
So I couldn't resist but start talking
to him about the general performance and smoothness
of the Linux desktop.
He has a video that's coming out on his Level 1 Linux channel,
probably by the time this episode is posted.
And we chat a little bit further about this with him
in his video.
And he has a pretty good idea of what
it would take to get the Linux desktop a little more
responsive.
And I agree with him completely.
And he gave me a couple of tips that I've heard over the years.
But when you combine them all together,
really do make a pretty sizable performance difference.
So I wanted to share them with you guys,
so that way you could go down the same rabbit hole.
Because I did these things and realized
there was a lot more area for optimization and improvement.
And now I've been spending my free time in the evenings,
locked away in my room, tweaking my laptop.
And so I want you all to experience this, too.
First of all, take a little time.
Don't run it forever.
But if you're on GNOME, install the CPU FREQ extension,
just for a little bit.
It's a little slow.
It's a little clunky.
It's got a pop-up banner thingy, not a pop-up.
It's got a splash thingy while it loads.
But it gives you such a good wealth of information,
including a simple way to turn on turbo boost, which
on some machines is off by default.
So that's A with right there, A number one.
You can increase performance by turning on turbo boost.
CPU FREQ will also tell you what things
you need in order to control your governor.
Most Linux boxes are not in a performance mode,
so you'll get some throttling.
And in this, you can also do things
like turn off some of the cores.
So this morning, I was in a long meeting,
didn't have my power plug, so I just
turned off four of my CPU cores.
Additionally, it'll tell you if there's
a couple of low-hanging fruit performance
items on your Linux box that you need to resolve.
For myself, this is interesting because Wendell
brought this up, IRQ Balance, which
is a service that it looks like it's designed for performance.
In fact, if you read most things online,
most people say install IRQ Balance for performance,
because it's a little piece of software outside the kernel
that looks at your load and your tasks
and will do some workload splitting up
amongst your CPU cores.
I mean, that sounds like a good thing, right?
Turns out, eh, not so much.
It's kind of conservative in how it actually manages things.
And the logic in sorting all of that out
puts overhead in there, and it actually
can be one of the things that can make your machine a little
more leggy.
So this is something that this application
will flag, the CPU FREQ, CPU-F-R-E-Q, like frequency.
It also puts a little item up in your Gnome Shell toolbar
that tells you what frequency your processors are running at,
which is something that you can use to see if you're getting
the full peak performance that your CPU is capable of.
Before I made some of these changes, I wasn't.
By stock, Wes, you probably aren't either,
because some of these settings will be the same for you.
So you install that.
It'll tell you if you have IRQ Balance messing up
your performance.
It'll tell you if your CPU is being throttled.
You can do things like turn off your cores,
turn on turbo boost. So if it's a one catch-all application,
it's like the first thing Wendell was installing
on his machine, because he set up a Fedora box
while we were there for some testing.
And the first thing he installed was CPU frequency.
Do you remember the drill that he installed the CPU cooler
with?
And then he didn't.
So he wanted to get as close as he
could to replicating Alex's home setup.
And he basically has every machine iteration.
So he grabs an MV&E drive and a CPU and walks up to a machine
and just takes a screwdriver and screws the CPU and cooler
in, pops the MV&E in, gets to work.
It was great, because you're having a conversation
with Wendell.
And it goes like this, hmm, I wonder
how that would work.
And then he says, well, let's go test it.
So that's what we did on several things.
Every time.
Yeah.
That was pretty fun.
So I have links to that in the show notes.
If you're on a T480, there's an additional step
you need to take.
Or if you're on, actually, it's not just a T480.
There's several ThinkPad laptops,
including a lot of the X series, like the X280, the XC16,
the T580 is also, the ThinkPad Anniversary Edition even,
a couple of E series, the Dell XPS 9365 and 9370 series,
and the Microsoft Service Books are all
suffering from aggressive, naughty CPU throttling,
where they're actually even cranking down
the wattage of the CPU.
Initially, it's 44 watts when you're plugged in.
And then when you're on battery, it hard
limits it to 29 watts.
And you can't ever go above that, even
for turbo boosting.
And it actually resets to that every five seconds.
Yikes.
Yeah, and it's every 30 seconds when you're on battery.
And it's a value from the driver and the embedded controller
that are getting passed back and forth.
And it represents itself in essentially limiting
your overall CPU burstiness.
Your machine might run slightly cooler.
Your battery life might be slightly better.
But if you're plugged in or you have great battery life already,
this isn't really a concern for you.
So there's a fix you can run.
And I'll have that linked to the show notes.
And it sets up a system de-service that essentially
turns this off.
It's still safe, but you can use it at your own risk.
But it was fun talking to him about this stuff,
because he talks about it in kind of a holistic way.
He talks about how it's all these different components that
kind of need somebody to come in like an orchestrator
and fix it all up.
You know, you need somebody who's working at the compositor
level, at the graphic stack level, at the kernel level,
and at the audio stack level, and at the scheduling level.
All of these things need to be kind of working together
to really get the kind of performance
that we want on Linux.
But you do have the means to make some of these tweaks
yourself, since it's Linux after all,
and get the performance closer there than you do by stock.
And I don't know.
You look at some of these settings,
and you think to yourself, why are we
doing this out of the box on desktop distributions, things
like IRQ balance?
Maybe there's reasons, but I don't know what they are.
Yeah, and I'm sure much of it is legacy changes
in architecture that just haven't bubbled up
all the way through the different layers.
And Linux is deployed on so many different types of systems,
especially maybe older or low-end systems,
that I imagine it's a hard thing to get just right.
But if more of us start experimenting with it,
maybe we can change that.
Yeah.
I love the idea, though, of maybe one day,
some Skunk Works project turns into this big project
where people put money into funding development on all
of these little rough edges to make Linux audio just
a little bit smoother, to make performance mode a little bit
easier to achieve.
There is a project out there.
I think, oh, I always forget this,
but there's a project out there that's
made by a group that changes some of this for you.
They're a gaming company.
I don't know if you guys know who I'm talking about.
They have a game mode for Linux.
You guys familiar with this?
I actually have it installed on my system.
All right, maybe you can make me look it up.
Game mode for Linux.
And it is a project that's attempted, yeah,
by Farrell Interactive.
That's who.
You guys are probably familiar with Farrell Interactive.
They have a project right now called Game Mode for Linux,
which optimized Linux's performance
for on-demand gaming.
And it essentially changes a lot of these things.
That's what I'm talking about, your CPU governor, your IO
priority, and it even goes a little bit further
in some cases.
It'll put your GPU, if it's an AMD or NVIDIA,
in performance mode.
It'll inhibit your screen saver.
It can change the kernel scheduler.
So it can go even further.
Yeah.
This looks great.
No, I totally missed this one.
Yeah, this is something that's been around.
I've been watching for a little bit.
They have different installation methods
for different distributions.
So you could play around with it.
They got stuff for Ubuntu, Arch, Fedora, Gen 2,
or you could build it yourself.
I've been running it for a little bit on my laptop.
You activate it, and you go play some No Man's Sky.
It works great.
I'm sitting here gaming on Wayland,
playing No Man's Sky under Proton with an eGPU all day
long.
That's wonderful.
It's made a big difference.
It's a noticeable game of difference.
And I, on my setup, haven't noticed any stability impacts.
One of the other amazing tools that Wendell threw
into my toolkit this weekend is i7z.
This allowed me to look at the CPU frequencies
and the different C states of my processors
as well whilst I was running benchmarks.
And I find this is going to be an excellent new tool
in my toolkit alongside something like S2E, which
is another tool that lets you do a similar thing.
Yeah, we've covered S2E on a previous Linux Unplugged
pick, I believe.
It's pretty great.
So we'll have a link to CPU frack.
We'll have a link to i7z and also ThrottleD
if you're on one of those laptops that's
impacted by that built-in throttling,
which is really kind of a bug that's really a shame
that Lenovo hasn't fixed a firmware update.
So it's kind of on them.
You know, I saw a little update in a Lenovo forum recently.
It sounds like they're working on it, but nothing concrete yet.
All right.
One thing I'd like to mention about ThrottleD
before we move on is the undervolting section
can be pretty important when you're
trying to really get those thermal levels down.
I went through and did that today
and noticed some real improvements.
But you do kind of have to know what you're doing
and test conservatively as you start activating that feature.
What are you using to monitor your thermals?
ThrottleD actually has a built-in utility
that you can launch on the command line
with the dash dash monitor flag.
And it will show you exactly what's causing any limits.
No way.
Really?
I got to try that.
That is so great.
Thanks, Drew.
That's a really handy way to kind of see some.
I've been using CPU frack, and that's a lot.
It's verbose, it's gooey.
And I don't plan to keep the extension around forever.
So that's awesome.
Yeah, I find between Tuned and ThrottleD,
once ThrottleD is configured properly,
I'm getting some good performance
with better thermals.
That's a win-win.
So check out the links in the show notes
if this has got your interest piqued.
And be sure to keep an eye on selfhosted.show.
Episode one comes out on September 12th.
And then episode two comes out with Wendell
on why to self-host, and then we kick off
a whole series of episodes.
We had a good chat with Wendell.
We talked a little bit about his home setup, his Linux
background, his server setup that he
has there in the studio, what he chooses to cloud
host versus what he doesn't trust in the cloud.
Really good conversation coming up in self-hosted episode
number two.
And that's at selfhosted.show.
They all start shipping on September 12th,
and it follows fortnightly after that.
Selfhosted.show slash subscribe for the RSS feed.
Really was a great trip.
Alex, thank you so much for the fun drives, for the trip,
for scheduling all the details so I could just show up
and get the work done and not have
to worry about all the individual itty-bitties.
Thank you very much, sir.
It was a pleasure having you.
I mean, the farts aside.
Now also, Cheesy's been doing some work.
He set up a new gallery that has all of the photos
from a lot of these events we've been talking
about over the last few weeks, including Red Hat Summit,
Linux Fest, Northwest, our sprint for Self Hosted,
the trip that Alex and I just took to go see Wendell,
all of that at a new site, jupyter.gallery.
What's some of the magic here, Cheesy?
What's on the back end to make all this happen?
Well, I mean, obviously it's self-hosted
with a little assistance from my buddy Wes over there.
But yeah, it's Lychee, I believe is how you guys pronounce it.
Essentially, all I've done is set it up through Docker.
And I got it set up on a Linode.
And just kind of messing around with it this weekend.
I looked at various other options, other choices
out there, other pieces of software and self-hosted
routes.
But this was really the most attractive to me.
So that's why I ended up choosing Lychee.
And it seems to be doing pretty well so far.
We'll see.
Right now, obviously, everything's been posted
in September of 2019.
But as we progress through, those dates will be fixed.
And everything will be in order from here on out.
So looking forward to it.
It's a great way for us to catalog our photos.
And I encourage any of the listeners out there,
if you have photos from any of these events
that you see there, please get them over to me.
Cheeze at Jupyter Broadcasting.
I'll get them posted into these galleries.
Because really, the whole part of this is showing our community.
And I want our community to share their photos with us
so we can enjoy them as well.
I'm sure there are some great shots of myself, or Chris,
or some other great candids out there
that we just haven't seen yet.
Maybe we can get one of those Noah photos
in there of him in his bathing suit.
Oh, my gosh.
Oh, my gosh.
Those might be too hot for the internet.
I got a couple of those.
And so there you go.
It's nice looking back at the LinuxFest Northwest pictures,
just remembering how long that line was
that you had to go to the front for for your brands.
Oh, yeah.
Yeah, that's right.
Yeah, good times.
Good times.
And that's really what the gallery is about,
is to capture those moments.
And so I encourage any of the community members
out there that have photos to share, please get them to me.
And I'll make sure to get them uploaded into the gallery.
And yeah, looking forward to seeing it grow.
Jupyter.gallery for that.
And the software, the open source software
that's the gallery management software,
is L-Y-C-H-E-E, if you want to check that out.
And yeah, it's fun having all the pictures in one spot.
So go see that.
It's pretty great.
It is.
And we had some emails come into the show.
I thought this was a really good one.
So I wanted to read it on the show.
And then lucky us, ladies and gentlemen, Mr. Drew DeVore,
still in the house, hasn't evacuated yet.
And he's here to answer your technical audio questions.
He's just perfect for this one.
I know.
He really is.
So JT wrote in.
He says, I've read on a few different blogs and message
boards that the audio systems in Linux
are not up to professional standards.
I know we don't have any DAWs, that's
Digital Audio Workstations, as fully baked to say Pro Tools.
But is that the result of an inferior audio system
or just the typical Linux problems
we always face when it comes to proprietary applications?
Is there something lacking in ALSA, Jack, or Pulse Audio stack
that I'm not aware of?
Or is there something that we obviously
can do in pro audio production, given
that we have Arduer and Reaper and Audacity,
that people just are missing?
Thank you very much, JT.
Well, Drew, I thought this would be a great question for you
to answer, since your day job is audio engineering on Linux.
That's right.
So audio production in Linux definitely is not fault free.
There are plenty of issues with it,
probably the most visible one being that the ALSA, Jack,
and Pulse stacks, when you put them all together,
it's really complex.
And it hopefully will get streamlined down
with Pipewire in the future.
But for the moment, it's still pretty hairy
to try to work with it on a daily basis.
Once you understand it, you can work around
a lot of those issues.
But it does take some deep diving.
Now, as far as software, with things like Bitwig and Reaper
and VST producers starting to target Linux,
I think the tide is starting to shift.
And hopefully, we'll see more pro level
software coming our way.
But honestly, for now, I can do 90% of what
I need to do all in Linux.
There are still a couple of things that I run in Wine.
But even that works just fine so long
as the application is compatible with Wine,
and even some Wine VSTs that I can run directly
through a compatibility layer.
Right, and those Wine VSTs and things
that you're running through an app compatibility layer
are actually, it's possible to bring them up in Reaper.
So it's like in the Linux editing application you're
using, you can summon these Wine plugins.
Right, they just masquerade as a Linux VST,
and they're just kind of piped through Wine
to get them into the application.
So will we ever see things like Audition or Pro Tools
or the other big boys coming to Linux?
I don't know.
I kind of doubt it.
But Reaper is really, really good.
I consider it professional quality.
So realistically, I don't know if we need everything
to come to Linux so long as we have
enough things of high enough quality
that we can get the work done.
And I'd say we're most of the way there.
Yeah, and Wes, you've done some deep diving into Jack.
And once you learn the system, there
are a lot of powerful things you can do from not just audio
processing and routing, but real time monitoring
and all kinds of stuff that are really
useful in a professional audio workstation.
Oh, yeah.
I mean, you definitely have to invest.
And really, I think a lot of areas were lacking.
I mean, you've been using Reaper a bit more.
You've also introduced me and shown me some stuff
over on the Mac side that can do some similar audio routing
capabilities.
And it doesn't expose to you the same level of detail,
but it also has a much simpler default and easy
to use sort of settings.
And Drew, you were helping us out learning Reaper better.
And there's a lot of stuff you've
got to go tweak and configure to make it look competitive,
to make it sort of as nice of an editor.
You can get there.
You just have to be willing to invest the time.
Yes, that's right.
And I would say that I like Jack better than anything
on Windows or Mac that I've played with.
But yeah, you've got to learn a lot more
to really expose those features and take use of them.
And once you do, you have a whole new tool set
to work with.
And that's the part I'm struggling with,
is I'm in that point right now where specifically with Reaper,
like Jack is clicking with me more.
And I get it.
But Reaper is a big shift from what
I'm used to in proprietary world editors.
But I can already tell that once I have it set up and working,
it's just as powerful, if not more powerful,
than what I've used in the past on the proprietary side.
This isn't totally fair.
But I've jokingly said to the guys behind the scenes
that Reaper has a $60 UI and a $5,000 functionality.
And the UI, thankfully, is themable.
So you can get far if you just know a couple of websites
to go to to set things up properly.
Drew, what's the number one one you always told me to go to
for my Reaper stuff?
Stash.reaper.fm.
And it's also worth noting that not only can you theme it,
you can configure just about everything in the workstation
as well.
So you can put things in different places.
You can add different things to your toolbars.
The whole thing is just fully extensible,
which I know I sound like an ad for Reaper right now.
But it's the one thing that lets me do my job on Linux
all day, every day.
Now, when you make a really good product
and you make it available for Linux as a native binary,
and you update it frequently, and you've been doing it
for years on Linux, and you only charge $60 for personal use,
you buy loyalty that $60 could never afford you.
We're just such huge fans of it.
The thing is, and I think, JT, this is what you're noticing,
because I suffered from this as well,
is there is a lot of hard lessons
you've got to learn when you're doing production on Linux.
PulseAudio is going to fail you a few times.
Jack's going to be complicated.
You've got to learn a really weird UI in Reaper.
And these paper cuts add up to a really frustrating experience,
especially when you're used to being really proficient
at a particular job.
And then you move to do that same job on another platform,
and you are no longer proficient.
You actively seek out all of the things that are not your fault
as to why it's bad, because you're frustrated.
You're suffering.
And so a lot of times what you see is people go to their blog,
their Twitter account, their podcast,
and they'll do a kind of a rant and rave
when they're in the midst of that.
And then you fast forward like a year later.
Like, we're nearly two years into this transition now.
And it's so smoothed out that it's just table stakes now.
Everything.
This show is being streamed live on Linux.
All of our hosts are connecting in over Linux remotely.
I mean, I'm in Raleigh, North Carolina,
and I'm using all Linux to do this right now.
It's being recorded on Linux.
It gets edited on Linux.
It's the whole thing from top to bottom of what
I feel like are some of the best podcasts on Linux in the world
is all produced and done every single day on Linux.
It's totally capable.
It's just once you get it all figured out
and it's no longer a frustrating topic,
you just don't talk about it as much because it's old news.
Yeah.
And that's why it's doubly hard.
I mean, if you're trying to learn
how to do a bunch of audio production work on Linux,
you have to learn two things at the same time.
And all the tools and examples are
targeting those other platforms.
And experts are already used to assembling their own tools
in this domain.
So they just go tune their references and get to work.
And the rest of us are left wondering
how they make it all happen.
Yeah.
And the other thing that can be, there's
a creative element to this too.
And if what you're doing is like you want to make music
and you just want to have a creative expression
and you're mashing your face against your tools,
it's really kind of an impedance mismatch.
You want to creatively express.
You don't want to go do a deep dive and learn.
So what I have found is for me to really learn a new tool,
it has to be a project that I'm starting fresh with.
Fresh project, maybe it's not under a massive deadline.
So I can learn the tool as I learn the project.
And that's the best way to make a transition.
And I am applying that very logic to Reaper.
There's a new project we're working on.
And I'm going to use Reaper for it.
I'm going to make myself use Reaper.
And I'll learn it that way.
Oh, that makes me happy.
I know.
It's great, isn't it?
It is fun because we get to geek out.
We're all geeking out on different Linux audio tricks
now.
So it's just something to consider.
And if you get frustrated, I have something
to help you Zen out.
It's called ZFrag.
We got two app picks this week, and this first one's silly.
But it's so awesome.
If you've switched to Linux from Windows
and you've missed defragging your hard drive, well, friends,
I've got a fake application for you.
It's a fake DOS display of defragging your hard drive.
There's an interactive version and an automated version
where it just sits there and does a fake DOS-style defrag
for all day, every day.
That's all it does.
Oh, man, there's an automated?
I missed that.
I'm just sitting here in the studio.
I've been doing it while you've been blabbing on
about Reaper this whole time.
It's very relaxing.
I love, too, that if you're doing it, it measures you, too.
So it shows you how far you've completed and then
the elapsed time.
And we can all maybe make it a race
if you're feeling a little too relaxed.
Our Windows and Mac-using friends aren't left out, too.
There is a download for them as well.
Yeah, you just kind of find the auto defrag mode
and then just sit back and enjoy the show.
It's a little bit of nostalgia.
Well, you just need then a little hard drive
seeking sound effect, you know, as it's
moving all the stuff around.
That's sort of perfect.
So check out ZFrag.
The URL is not friendly for air.
So you're just going to have to get it from the show notes.
And then Cheesy coming in with old Mesh Room, which
looks like some high-end stuff.
This is really cool.
And it's open source.
Yeah, so Mesh Room.
And I just started getting into photogrammetry,
which is basically where you use photos to help you determine
distances and depths.
And you can use it for mapping and those sorts of things.
But you could also, say, use it if you
wanted to take a bunch of photos of your boss
and create a bobblehead of his head.
Sorry, what?
Yeah, exactly.
Oh, oh, we do want to do that.
So I was just looking at some different photogrammetry tools
to do this with.
And I came across this one.
Mesh Room is produced by Alice Vision.
They also have another application.
And it looks like they support Windows and Linux.
So sorry, Mac folks.
But you should take a look at it if you're into photogrammetry.
If you're not into it, maybe you have a 3D printer
and you want to do something different.
And you could go to some statue in your town
and take a ton of photos of it and use this Mesh Room
to put it all together and 3D print an object for yourself.
Oh, man.
Now I'm never going to hear the end of it from Alex.
This whole week he's been trying to get
me to get a 3D printer.
Now it's my excuse.
There's life before 3D printing, a life after.
Well, you just have to find space in the rig for it, I guess.
I think I could fit it.
Because I'm sitting next to Alex's right now
in his studio here.
And now I understand why when he's on the post show,
you can hear his printer.
Because it's within arm's reach of the microphone.
It's pretty cool.
I think that would totally fit in the RV, too.
There's really no excuse.
I could put that in a storage bay.
I could have a 3D printer in a storage bay,
like a replicator bay.
You could 3D print some storage for your 3D printer.
Totally.
That would be nice.
I like it.
Yeah, some meta boxes.
That's what I'll call them.
All right, well, before we get out of here,
just a couple of bits of business.
Everything's over at linuxunplugged.com.
Of course, check out the self-hosted show.
A couple of other things to check out.
Go listen to our friends over at Ubuntu Podcast.
They're not here this week, but they're still great.
So we'll give them a plug.
Of course, TechSnap with Mr. Wes Payne and Jim Salter
from Ars Technica.
Check out TechSnap.
Better than ever, you guys are killing TechSnap.
So if you haven't listened to TechSnap for a while,
go grab that.
And of course, go listen to Choose Linux with both Drew
and Ell on it.
And Joe, he's on there.
Great show.
Always some fun distributions you guys are trying out.
Do you want to give any teasing for the one that's
coming up this week, since you guys are likely in the know?
Sure.
So we're going to be talking about Slackl.
That's a distribution based on Slackl.
It's based on Slackware and Salix.
Sorry, Drew.
It sounds like you're saying Slackl.
That doesn't make any sense.
I'm sorry, Drew.
That's what you get when Drew drinks.
That's the name of the distro.
Oh, OK.
So it's based on Slackware, huh?
Yeah.
Cool.
I'll definitely check that out.
I always do.
So there's that.
And also, I'm going to give one more plug because I'm
feeling generous today.
You've got to go check out UserAir.
And then tweet, myself and at Joe Resington,
top or bottom bunk after you listen to UserAir.
I've got to know.
All right.
That's all the plugging I have.
Thank you so much for joining us.
I'm at Chris LAS.
He's at Westpane.
The network is at Jupiter Signal.
Be sure to check out selfhosted.show next week.
And we will see you next Tuesday.
Bye-bye.
Cassidy, so welcome.
You just got back a little bit ago from Guadic.
Thanks for making it on the show, man.
Guadic was incredible.
It was my second year this year.
And we were in Greece on the beach.
Oh, it's hard to beat that.
Yeah, it was so good.
So Guadic, is it just for Gnomies?
Is it worth somebody like myself going?
I think it's worth anybody who uses Gnome or uses
stuff that's based on Gnome.
I mean, other than Gnome, I think
uses stuff that's based on Gnome.
Elementary is trying to go there every year now.
And we're not strictly Gnome-based,
but we work with Gnome on stuff.
So it's just a lot of really cool people
building a lot of really cool stuff
and sharing what they're working on.
How big of a presence is Endless there?
They're always there.
I don't know.
I think there's a handful of people there always.
Man, I wish they'd have it somewhere
where it would be a little bit easier for me to get to.
And I'd totally go.
I think that does sound like it'd be nice.
So next year, the two intense, so they
bid for the location every year.
One of the bids is for Mexico.
I forget what city, but it's somewhere in Mexico,
which is a little closer for me to get to.
Yeah, I could probably make the one in Mexico.
That sounds really fun.
Yeah, that does sound great.
I mean, if it has to be in a nice location
with great weather, I mean, that's OK, I guess.
We'll rough it?
No, we have to.
Well, I'm really glad you've enjoyed it.
It does seem like it's pretty important for elementary
to be there.
Because like you said, you don't use Gnome Shell.
Gnome Shell, I'm trying to say Gnome this episode.
But you do use a lot of the stack, like a lot of the stack,
don't you?
Yeah, we use basically all the underlying stuff,
just a different UI.
So it's really important that things like GTK and GLib
are being developed not just with Gnome in mind,
but with these other downstreams like XFCE and elementary.
I got a funny, just anecdotal story for you.
Not that it really matters, but I just
thought it was interesting.
I decided to reinstall my wife's XPS 13 from Kubuntu,
which had been great.
But just some things had collected over time,
and I thought, let's do a fresh install.
And I put her on the latest elementary.
It's even got the new login, which looks really slick.
And she felt like I upgraded her whole computer.
She felt like it was a more professional, elegant
experience.
She really took to it a lot more than I thought she would.
So it's two of my family now in elementary OS.
You're next.
You know what?
I could see it.
I could definitely see it.
Yeah, well, and I run it myself, and I'm also a supporter.
So I think JB is definitely covering the elementary aspect
with private machines, that's for sure.
There you go.
Yeah, we do.
We love it.
Well, I'm glad you made it.
Thanks for coming today.
Yeah, absolutely.
I also just got back from somewhere kind of neat.
Just a little bit before the show,
Alex arranged a tour of Red Hat Tour.
He works at Red Hat on OpenShift as part of his day job
over there.
And so we called him up and said,
hey, I'd like to give this podcaster guy a tour of Red Hat
Tower in downtown Raleigh.
And after some back and forth, as happens with PR departments
and whatnot, they arranged it for us.
I got to go there.
And let me tell you, this office is
decked out with glass gates.
And they have a badge culture.
I mean, the security around this place is top notch.
There is a real culture around everybody badges in.
Even if somebody holds the door open for you, you still badge in.
Well, you don't want stragglers.
Come on.
You get your picture printed on your guest badge.
But a beautiful office.
Not only just high quality interior stuff,
but beautiful displays, glass artwork, huge open windows,
interesting different kind of workspaces,
and of course, cafeterias and snacks.
Lots of snacks.
Lots of snacks.
But there was one thing that Alex had his eyes on,
like 10 minutes after we got there.
And this is part of that sandwich that they made for me
earlier.
What is it, Alex?
What is this?
He goes and he buys a sauce from the cafeteria.
It's so funny, because if you get the sauce anywhere else,
you've got to pay an arm and a leg.
I've got to deal with the cafeteria guy.
He sells me a big pot of Chipotle gourmets for $10.
They get a hookup here.
So they got the food system, which is all sort of discount
or subsidized, however you want to put it.
But Wes, get ready for this perk.
Are you ready for this?
Ooh, tell me, tell me.
They've got a post office.
No, just like right there?
In the building.
You go up to it.
You give them something you need to ship.
They'll weigh it.
They'll box it.
They'll ship it.
And then the cost of the postage is subsidized.
No.
Yes.
How does that make sense?
That's incredible.
I tell you what, that's a serious perk.
It's almost making me want to send mail.
I know.
You know how I hate sending mail.
But I mean, come on, right?
That seems pretty serious.
That seems legitimate.
So I was pleasantly surprised with my tour.
It's a corporate office space, but it's
one with a lot of accoutrements, a lot of nice accoutrements.
I was really impressed.
It's a pretty nice place to work, it seems.
And you have one of the best views of downtown Raleigh
from this red hat tower.
It even has a red hat.
And happy to report, they are so on point with the branding.
You know the new red hat logo?
They've even updated the signs in the parking garage.
