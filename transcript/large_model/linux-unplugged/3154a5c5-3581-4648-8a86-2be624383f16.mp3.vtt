WEBVTT

00:00.000 --> 00:10.840
Well, I think we're having ourselves an emergency podcast right now.

00:10.840 --> 00:12.760
This is like thrown together.

00:12.760 --> 00:18.280
We gotta like just really slam this one out because I got called into jury duty tomorrow.

00:18.280 --> 00:20.280
You know, you've got to help out the state here, Chris.

00:20.280 --> 00:23.400
You know, Wes, somebody's got to go in and pet the bald eagles.

00:23.400 --> 00:26.480
It does make me feel comfortable that you're the one making the decisions.

00:26.480 --> 00:27.480
Oh, yeah?

00:27.480 --> 00:29.480
Are you sure about that?

00:29.480 --> 00:34.080
I got a whole line I think I'm going to go in there and give a speech about what I think

00:34.080 --> 00:37.000
should be a user voted type of justice.

00:37.000 --> 00:46.760
Think that'll get me on the old board?

00:46.760 --> 00:51.680
Hello friends and welcome into the old unplugged program where we're celebrating user created

00:51.680 --> 00:52.680
software.

00:52.680 --> 00:53.680
My name is Chris.

00:53.680 --> 00:54.680
My name is Wes.

00:54.680 --> 00:55.680
Hello Wes.

00:55.680 --> 01:02.040
Here we are on a Monday, no live stream, no mumble room by ourselves.

01:02.040 --> 01:04.080
Well we've brought in a little backup.

01:04.080 --> 01:09.360
You might say some of our favorite friends, Mr. Cheese Bacon and the Drew of Doom.

01:09.360 --> 01:10.360
Hello gentlemen.

01:10.360 --> 01:11.360
Hello guys.

01:11.360 --> 01:13.200
Drew, it's been a while since you've been on the show.

01:13.200 --> 01:14.200
Glad to have you on there.

01:14.200 --> 01:15.440
Been loving the Choose Linux.

01:15.440 --> 01:16.440
Of course.

01:16.440 --> 01:18.800
So and Fridays with Drew on Linux Headlines.

01:18.800 --> 01:20.800
Yeah, but you guys know I missed you over here.

01:20.800 --> 01:22.840
I just couldn't stay away.

01:22.840 --> 01:26.240
Oh Drew, I know you're lying.

01:26.240 --> 01:27.240
I know you're lying.

01:27.240 --> 01:30.360
You're just helping us out because we really did get ourselves in a bit of a situation

01:30.360 --> 01:31.440
this week.

01:31.440 --> 01:34.880
So I apologize if you were planning to make it live and we weren't there.

01:34.880 --> 01:36.360
We'll try to do something.

01:36.360 --> 01:40.000
We'll try to do something for the live stream, but I don't know what.

01:40.000 --> 01:43.560
Since it's kind of a special edition, we thought we should do something we haven't done for

01:43.560 --> 01:45.200
a couple of weeks.

01:45.200 --> 01:47.040
Something we wanted to stay accountable for.

01:47.040 --> 01:49.160
And so Wes, are you ready sir?

01:49.160 --> 01:50.600
I am standing by.

01:50.600 --> 01:54.720
All right, ladies and gentlemen, it's time to check in on the Arch server.

01:54.720 --> 02:00.760
So if you will recall, we replaced a FreeNAS box with a Fedora box, which seemed like a

02:00.760 --> 02:02.100
ridiculous decision.

02:02.100 --> 02:03.400
Level one insanity.

02:03.400 --> 02:07.320
So then we thought, well, what could we do that would be even more unreasonable?

02:07.320 --> 02:10.500
So we replaced that Fedora box with an Arch box.

02:10.500 --> 02:15.680
Now this system is responsible for a bunch of media storage that's critical to our operation,

02:15.680 --> 02:20.520
as well as several applications, more than several, that run in containers that are vital

02:20.520 --> 02:22.060
to our day-to-day operation.

02:22.060 --> 02:27.020
So we thought, what better way to take care of a box like this than to update it live

02:27.020 --> 02:29.000
right here on the show.

02:29.000 --> 02:30.760
Mr. Wes Payne, are you SSHed in right now?

02:30.760 --> 02:32.560
Oh yes, we're ready to go.

02:32.560 --> 02:33.720
All right, kick it off Wes.

02:33.720 --> 02:37.840
Oh, some new kernels, upgraded WireGuard, new system D version.

02:37.840 --> 02:38.840
This is a good one.

02:38.840 --> 02:39.840
Oh God.

02:39.840 --> 02:40.840
All right.

02:40.840 --> 02:47.800
And I kind of love Arch, downloading like 1.6 gigs of software for a net upgrade size

02:47.800 --> 02:49.980
of two megs.

02:49.980 --> 02:51.480
That is really great.

02:51.480 --> 02:53.720
I always love it when a package manager does that.

02:53.720 --> 03:00.000
Well, coming up on the show today, we're going to have a bit of a theme on the episode.

03:00.000 --> 03:04.760
After we get done upgrading our rolling server, we're going to read a blog by Richard Brown,

03:04.760 --> 03:13.880
the former OpenSUSE Chairman, who has a really deep take on the fundamental way we maintain

03:13.880 --> 03:21.080
and distribute software in the Linux community, and he's advocating for micro rolling servers.

03:21.080 --> 03:24.800
We'll tell you about that and what we think about that idea.

03:24.800 --> 03:30.920
Plus, we've got some software towards the end of the show that is fundamentally designed

03:30.920 --> 03:35.480
to help you recover from major system issues like a bad update.

03:35.480 --> 03:36.780
It's called Timeshift.

03:36.780 --> 03:38.560
It's a beloved piece of software on Linux Mint.

03:38.560 --> 03:41.000
We discovered it during our Linux Mint review.

03:41.000 --> 03:44.600
Now we've extracted it from Linux Mint, because you can put it on any distro, and we're going

03:44.600 --> 03:46.680
to focus just on that recovery method.

03:46.680 --> 03:50.480
Plus, we've got feedback and pics, but right now we're going to check in on that Archbox.

03:50.480 --> 03:52.680
Okay, how are we doing, Wes?

03:52.680 --> 03:53.760
Downloads going?

03:53.760 --> 03:54.760
Downloads going.

03:54.760 --> 03:57.360
It's always a little nerve-wracking when you see the step, you're getting rid of all your

03:57.360 --> 04:00.800
old DKMS modules, and you just have to hope they come back.

04:00.800 --> 04:06.520
All right, Wes, well, we'll check back in on that in just a little bit.

04:06.520 --> 04:12.360
In the meantime, let's talk about something from the no-crap department in the news.

04:12.360 --> 04:18.000
Google is publicly shaming Samsung for making unnecessary changes to Linux kernel code.

04:18.000 --> 04:20.040
Now, how about this one?

04:20.040 --> 04:23.360
This is coming from Google's Project Zero department.

04:23.360 --> 04:28.480
They write that Samsung is creating a more vulnerable Android ecosystem by adding its

04:28.480 --> 04:33.920
own downstream custom drivers for direct hardware access to Android's Linux kernel.

04:33.920 --> 04:36.000
Yeah, this is really no good.

04:36.000 --> 04:40.680
Notice that the Linux kernel has, as they put it, a few sharp edges, and these changes

04:40.680 --> 04:44.160
that are being implemented by Samsung and other vendors, they're not being reviewed

04:44.160 --> 04:48.400
at all by upstream kernel developers, so that means no one outside of that organization

04:48.400 --> 04:49.960
is checking them.

04:49.960 --> 04:53.960
The researchers actually found a similar mistake in the Android kernel of the Galaxy A50, and

04:53.960 --> 04:57.920
that unreviewed custom driver added security bugs related to memory corruption, which that's

04:57.920 --> 04:58.920
no good.

04:58.920 --> 04:59.920
No.

04:59.920 --> 05:03.240
Can we just sit here and just acknowledge the obvious?

05:03.240 --> 05:07.120
It is absolutely no surprise that when a vendor is adding their own patches that is not being

05:07.120 --> 05:10.960
peer reviewed by the rest of the community, that there is vulnerabilities in there that

05:10.960 --> 05:12.200
they did not catch.

05:12.200 --> 05:19.160
It seems obvious on its face, and that somebody in Samsung's position clearly, someone in

05:19.160 --> 05:24.560
that organization must have at least acknowledged the risk that they were assuming by taking

05:24.560 --> 05:25.560
this action.

05:25.560 --> 05:30.000
And as an organization, they must have chosen to either ignore that individual or actively

05:30.000 --> 05:31.000
ignore the risk.

05:31.000 --> 05:34.880
It does get a little more complicated, I guess some of these are really mitigations or intended

05:34.880 --> 05:37.240
mitigations for other security issues.

05:37.240 --> 05:41.000
In this case, the bug affected the company's process authenticator security subsystem.

05:41.000 --> 05:42.000
Oh.

05:42.000 --> 05:46.960
Yeah, they describe it as a moderate security issue, but from the Google engineers at Project

05:46.960 --> 05:50.800
Zero perspective, a lot of these things, they're just not necessary, and so rather than being

05:50.800 --> 05:53.560
a mitigation, they just introduce more attack surface.

05:53.560 --> 05:57.540
Not only are they not necessary, because there are some facilities in Android that enable

05:57.540 --> 06:03.200
some of this same exact functionality, but at the end of the day, some of these are enabling

06:03.200 --> 06:04.760
arbitrary code execution.

06:04.760 --> 06:08.200
Fundamentally, they're enabling arbitrary code execution.

06:08.200 --> 06:13.280
And that's even on Android 10 devices, which is just such a shame.

06:13.280 --> 06:16.080
You think you're getting yourself a secure device by getting the latest and greatest

06:16.080 --> 06:20.360
version of Android, and they've bolted on these custom fixes so that way they can add

06:20.360 --> 06:21.360
value.

06:21.360 --> 06:22.360
Yeah, it is a shame.

06:22.360 --> 06:23.360
I'm not having it.

06:23.360 --> 06:27.400
And Google's been doing a lot of good engineering effort to make Android more secure.

06:27.400 --> 06:28.440
Why throw that away?

06:28.440 --> 06:30.320
It seems so obvious.

06:30.320 --> 06:34.360
That's why I find it frustrating that it still continues to happen.

06:34.360 --> 06:37.200
I understand that there are other options out there.

06:37.200 --> 06:41.280
This doesn't condemn all Android devices, but Samsung is such an important player in

06:41.280 --> 06:42.280
this space.

06:42.280 --> 06:45.240
You'd really rather see it that way.

06:45.240 --> 06:46.240
I know it's a big organization.

06:46.240 --> 06:49.920
They have many departments, but you'd think that at least to have some experience knowing

06:49.920 --> 06:52.400
you kind of work upstream with the kernel community.

06:52.400 --> 06:53.400
That's just what you should do.

06:53.400 --> 06:58.760
It's also kind of awkward that their partner, Google, is calling them out publicly.

06:58.760 --> 07:00.880
It's sort of weird, Wes.

07:00.880 --> 07:01.880
You know what I mean?

07:01.880 --> 07:05.580
All right, Wes, your break is now over.

07:05.580 --> 07:07.840
Let's check in on that Archbox.

07:07.840 --> 07:08.840
Upgrade complete.

07:08.840 --> 07:11.240
I mean, I don't see any errors.

07:11.240 --> 07:13.160
You ready for the reboot?

07:13.160 --> 07:14.160
Let's do it.

07:14.160 --> 07:16.480
There's only one way to find out what these things are.

07:16.480 --> 07:18.520
All right.

07:18.520 --> 07:19.520
It reboots so fast.

07:19.520 --> 07:21.320
It almost makes me feel nervous.

07:21.320 --> 07:23.360
It's gone.

07:23.360 --> 07:25.840
And then it takes so long to get through the bios.

07:25.840 --> 07:30.360
Do you think that maybe you should have installed time shift first?

07:30.360 --> 07:32.640
We do have a series of snapshots on there.

07:32.640 --> 07:36.000
Yes, and I did see it taking those snapshots, so that's good.

07:36.000 --> 07:40.720
And I'll remind everybody that our philosophy with this rolling Archbox has truly been keep

07:40.720 --> 07:46.240
that base install of Arch absolutely as thin and lightweight and minimal as possible.

07:46.240 --> 07:51.720
That thing's really designed to do one thing, mount ZFS storage and run containers.

07:51.720 --> 07:52.720
That's our philosophy with this.

07:52.720 --> 07:59.600
So we're hoping that this ultra minimal approach to an Arch deployment is a safer bet than

07:59.600 --> 08:02.480
something that's really built up.

08:02.480 --> 08:03.480
We'll see.

08:03.480 --> 08:06.700
We're going to find out because at the end of the day, you're still updating fundamental

08:06.700 --> 08:07.700
packages.

08:07.700 --> 08:08.700
Right.

08:08.700 --> 08:10.880
There's a lot of change and we do have to upgrade more often.

08:10.880 --> 08:14.520
But the flip side of that is I feel like I understand the system a little bit better.

08:14.520 --> 08:15.520
That's true.

08:15.520 --> 08:18.160
I think you and I both stay more current on what that thing's doing.

08:18.160 --> 08:24.560
Well, let's let's shift gears into Richard Brown's post, which was titled regular release

08:24.560 --> 08:28.040
distributions are wrong.

08:28.040 --> 08:31.700
We're going to pull a few bits from this because it's pretty thought provoking and we'll link

08:31.700 --> 08:33.100
you to read the rest.

08:33.100 --> 08:36.060
As we record right now, I think the site might be having some troubles.

08:36.060 --> 08:40.320
So we'll try to include both a link to the source site and maybe an archive.org version.

08:40.320 --> 08:41.320
That's what we had to use.

08:41.320 --> 08:46.320
When you want to start with this one, Wes, you think maybe there's so much to including

08:46.320 --> 08:47.800
his setup here.

08:47.800 --> 08:51.160
What do you say we start with his bit in here about regular and LTS releases and how they

08:51.160 --> 08:52.520
mean well?

08:52.520 --> 08:56.260
And this is, I think, a point that we could discuss as a group here.

08:56.260 --> 09:00.460
He writes, the open source world is made up of thousands, if not millions of discrete

09:00.460 --> 09:03.420
free software and open source projects.

09:03.420 --> 09:08.600
And Linux distributions exist to take all of that often chaotic, ever evolving software

09:08.600 --> 09:13.240
and condense it into a single consumable format that is then put into very real world work

09:13.240 --> 09:14.840
by its users.

09:14.840 --> 09:19.120
The traditional mindset for distribution builders is that the regular release gives a nice,

09:19.120 --> 09:23.780
predictable, planable schedule in which a team can carefully select appropriate software

09:23.780 --> 09:26.240
from various upstream projects.

09:26.240 --> 09:31.160
The maintenance often comes in the form of making minimal changes, seeking only to address

09:31.160 --> 09:36.520
specific security issues or customer requests, taking great care not to break the systems

09:36.520 --> 09:37.960
that are currently in use.

09:37.960 --> 09:38.960
Right.

09:38.960 --> 09:41.640
So this is really an example of a classic LTS system.

09:41.640 --> 09:43.840
And often, I mean, that can be appreciated.

09:43.840 --> 09:47.080
You don't always want the rug pulled out from underneath you and having to adapt to constant

09:47.080 --> 09:50.200
changes, especially if it's software that you're not super familiar with, or you didn't

09:50.200 --> 09:51.720
really need the new features.

09:51.720 --> 09:52.720
That wasn't your concern.

09:52.720 --> 09:54.360
You just wanted the software to keep working.

09:54.360 --> 09:56.560
Yeah, sometimes it's required by a commercial vendor.

09:56.560 --> 09:57.560
Yeah.

09:57.560 --> 10:00.580
And you want a reliable service, especially for something like a server.

10:00.580 --> 10:02.720
But it is a little more complicated than that.

10:02.720 --> 10:06.300
Because I mean, especially here on Unplugged, we want the new stuff, you know, we're always

10:06.300 --> 10:07.920
talking about the shiny new features.

10:07.920 --> 10:12.000
And so the downside of an LTS often is that you don't have that or you have to do some

10:12.000 --> 10:16.120
really, really terrible workaround or build stuff from source to get it extra.

10:16.120 --> 10:17.840
And that doesn't always work.

10:17.840 --> 10:22.640
When we've talked about rolling releases versus traditional, we've often identified that there

10:22.640 --> 10:27.020
is a type of user that wants access to current software, either to stay current with their

10:27.020 --> 10:32.280
peers or to stay current with somebody they're working with in industry or because they like

10:32.280 --> 10:33.280
to follow software.

10:33.280 --> 10:36.040
Maybe a tool you need for your work, and it's important that you get the new features as

10:36.040 --> 10:37.240
quickly as possible.

10:37.240 --> 10:38.240
Yeah.

10:38.240 --> 10:42.280
And that's really the nature of what we consider change in a Linux distribution that Richard

10:42.280 --> 10:44.880
Brown is calling into question here.

10:44.880 --> 10:47.800
He continues, is this change too risky?

10:47.800 --> 10:48.800
It's a common question.

10:48.800 --> 10:53.380
And quite often, highly desired features take years to deliver in regular releases.

10:53.380 --> 10:55.640
Because the answer is yes.

10:55.640 --> 11:00.160
This often means avoiding updating software to entirely new versions, but instead, opting

11:00.160 --> 11:07.200
to backport the smallest necessary amounts of code and merging them with much often older

11:07.200 --> 11:10.440
versions already in the regular release.

11:10.440 --> 11:15.680
We usually call these things patches, updates, maintenance, updates, security, updates.

11:15.680 --> 11:18.480
Richard suggests, though, that we're really avoiding referring to them what they what

11:18.480 --> 11:19.480
they really are.

11:19.480 --> 11:20.480
Freaking software.

11:20.480 --> 11:24.240
Okay, so weird, unholy hybrid of things that were never meant to be.

11:24.240 --> 11:26.860
Yeah, hybrid software, you could would be a little more charitable.

11:26.860 --> 11:30.040
But what it is, he says, no matter how skilled the engineers are, that are that are doing

11:30.040 --> 11:34.920
the work, no matter how great the processes or testing are around their backporting, fundamentally,

11:34.920 --> 11:41.800
the result is a hybrid mixed together combination of old and new software, which was never originally

11:41.800 --> 11:43.880
intended to work together.

11:43.880 --> 11:49.560
In the process of trying to avoid risk, backports instead introduce entirely new vectors for

11:49.560 --> 11:51.200
bugs to appear.

11:51.200 --> 11:54.240
Okay, let's sit with this for a second, guys.

11:54.240 --> 11:59.640
He's saying essentially that when you have a regular stable release, and you start backporting

11:59.640 --> 12:04.680
fixes, you may be solving one security issue, but you could be opening up a whole series

12:04.680 --> 12:05.680
of bugs.

12:05.680 --> 12:08.840
And I'm no software developer, but it does make sense that if you're taking two bits

12:08.840 --> 12:14.740
of code that are very close together, but not intended to work together, it could create

12:14.740 --> 12:16.160
other possible issues.

12:16.160 --> 12:17.840
It certainly depends on the specifics, right?

12:17.840 --> 12:21.940
But you can imagine simple changes that are just change the default config option or something.

12:21.940 --> 12:25.800
But depending on how how far the software has progressed, you're basically having a

12:25.800 --> 12:27.560
totally separate fork.

12:27.560 --> 12:31.740
And to make certain security fixes, it might mean significant re architecture or touching

12:31.740 --> 12:35.840
a large swath of the code base, because it's changed, and you can't just apply the fix

12:35.840 --> 12:37.800
that gets applied to the head of the branch, right?

12:37.800 --> 12:38.800
Right.

12:38.800 --> 12:43.080
And I think a lot of times we'll charitably call these a regression, always a regression.

12:43.080 --> 12:46.800
And we continue to do it as a as a model of delivering software.

12:46.800 --> 12:48.760
It's not just Linux distributions.

12:48.760 --> 12:54.000
For example, you have Firefox 73, that came out last week, and version 68 DSR, or whatever

12:54.000 --> 12:55.160
it was also came out.

12:55.160 --> 12:58.820
Well, clearly, they're taking some bug fixes and security issues, and they're backporting

12:58.820 --> 13:02.920
it from the current version of Firefox to that old branch.

13:02.920 --> 13:06.320
And it's so common that we don't even talk about this process anymore, because it's just

13:06.320 --> 13:07.320
how you do it.

13:07.320 --> 13:08.320
It's just normal.

13:08.320 --> 13:09.320
Yeah.

13:09.320 --> 13:11.700
But he's kind of calling that entire thing into question.

13:11.700 --> 13:17.400
And I think if you narrow the scope, which he is here to just servers, and how server

13:17.400 --> 13:23.280
software and open source software is distributed, his argument starts to make sense.

13:23.280 --> 13:26.960
When you consider and he writes, the more people involved in working on something, the

13:26.960 --> 13:29.640
more eyeballs looking at the code, the better.

13:29.640 --> 13:31.120
That's a fundamental truth.

13:31.120 --> 13:36.560
And yet, when you think about it, it also means you have handfuls of people contributing

13:36.560 --> 13:40.920
software at different paces, at different schedules, updating all different aspects

13:40.920 --> 13:49.520
of a system at all different interests, commitments, timelines, motivations, etc.

13:49.520 --> 13:52.480
And it's it's a massive spectrum.

13:52.480 --> 13:57.900
And perhaps in this reality, when software is developed in this way, we're kind of fooling

13:57.900 --> 13:59.440
ourselves a little bit here.

13:59.440 --> 14:03.320
And that if we could build a system where we could continue to just stay current with

14:03.320 --> 14:10.480
the latest stuff, like all like the way Linus considers bug, security issues, bug fixes,

14:10.480 --> 14:12.280
just everything's a bug fix.

14:12.280 --> 14:13.280
Everything's a fix.

14:13.280 --> 14:16.720
And we have seen this this attitude more prevalent on all kinds of systems, right?

14:16.720 --> 14:20.320
I mean, with some, some would say some a lot of the DevOps philosophy.

14:20.320 --> 14:23.080
And if you think about the flip side, have you ever gone, you know, you waited a couple

14:23.080 --> 14:26.200
LTS is maybe I mean, I was personally involved with 1204 to 1604.

14:26.200 --> 14:29.400
That was part of the system D change.

14:29.400 --> 14:30.400
It was a nightmare.

14:30.400 --> 14:33.380
I mean, there were just so many changes to the system.

14:33.380 --> 14:36.920
And you've got to imagine in some sense, if developers have been given a little more time

14:36.920 --> 14:41.720
to get used to those, adapt during the process, in the end, it might be smoother.

14:41.720 --> 14:45.280
My wife's clinics workstation is on 1604.

14:45.280 --> 14:48.580
And a lot of the repos don't work anymore.

14:48.580 --> 14:50.100
So the updates are failing.

14:50.100 --> 14:53.720
And I guess it doesn't that version doesn't auto clean the boot partition.

14:53.720 --> 14:54.720
I thought it did.

14:54.720 --> 14:56.160
But her boot partition filled up again.

14:56.160 --> 14:58.320
So then it stopped updating for a minute.

14:58.320 --> 15:00.160
It's really getting decrepit.

15:00.160 --> 15:02.720
And the software on that thing is it's just still running unity seven, right?

15:02.720 --> 15:05.920
I mean, it's really feeling old.

15:05.920 --> 15:07.180
But it works for her.

15:07.180 --> 15:09.840
But it's clear that the rest of the software world has moved on.

15:09.840 --> 15:13.760
Drew, since you're our special guest, I wanted to kind of get your take on this from your

15:13.760 --> 15:16.120
sys admin days.

15:16.120 --> 15:22.040
Obviously the rolling argument falls down when you start talking about server deployments.

15:22.040 --> 15:27.400
But Richard goes on to make the argument here that, well, you solve that by creating micro

15:27.400 --> 15:31.720
server OSs that just do one thing, much like our Archbox.

15:31.720 --> 15:33.400
He's got a point.

15:33.400 --> 15:39.240
But I do think the argument does fall down quite a bit here in 2020.

15:39.240 --> 15:44.120
Three years ago, I think this would have been a much stronger argument.

15:44.120 --> 15:51.920
But nowadays, with the prevalence of containers and snaps and flat packs and app images, I

15:51.920 --> 15:56.120
am less inclined to go the way he's going.

15:56.120 --> 15:59.100
I was a rolling user for a long, long time.

15:59.100 --> 16:05.360
But with the advent of, you could almost say containerized applications and containers

16:05.360 --> 16:12.080
themselves, I don't see this as something that's strictly necessary anymore, especially

16:12.080 --> 16:13.960
in server software.

16:13.960 --> 16:19.600
How many people are deploying things on bare metal anymore?

16:19.600 --> 16:25.240
Just about everybody is using Kubernetes and Docker, and increasingly, even enterprise

16:25.240 --> 16:28.200
level stuff is moving that direction.

16:28.200 --> 16:35.900
So to me, the ability to have a very stable base that's been quality assured by the team

16:35.900 --> 16:42.200
who put it together, and then stack software on top of that, that is rolling, that's based

16:42.200 --> 16:44.280
in a container.

16:44.280 --> 16:49.920
Why do I need the base system to be rolling at this point?

16:49.920 --> 16:52.120
You flip the argument around is what you've done here.

16:52.120 --> 16:53.120
Yeah, exactly.

16:53.120 --> 16:58.200
It's just not something that I buy anymore.

16:58.200 --> 17:04.760
I would rather have in production, a system that I know is dependable and has a solid

17:04.760 --> 17:12.240
team doing the security patches like Ubuntu or like Red Hat, and is putting together a

17:12.240 --> 17:21.280
product that I know I can rely on, and gets really good, tested, quality assured updates.

17:21.280 --> 17:27.800
And I don't feel like I get that level of quality assurance testing, whatever you want

17:27.800 --> 17:31.040
to call it, in a rolling distro.

17:31.040 --> 17:38.000
It just doesn't feel rock solid and bulletproof like some of these others do.

17:38.000 --> 17:43.320
I think to buy his argument, you have to accept that the distributions are not providing a

17:43.320 --> 17:49.220
ton of value, that they're mostly providing organizational and smoothing of rough edges.

17:49.220 --> 17:52.880
And then when they backport, they're kind of slamming the software together.

17:52.880 --> 17:55.360
That's sort of what he's implying.

17:55.360 --> 18:00.080
And he may be in a better position than I, having been the OpenSUSE chairman and being

18:00.080 --> 18:04.680
involved with OpenSUSE forever, he may know better than me.

18:04.680 --> 18:08.420
But I feel like it's a little uncharitable to distributions, I feel like that's sort

18:08.420 --> 18:11.600
of underselling what they do.

18:11.600 --> 18:15.600
But I think I might agree with his fundamental argument.

18:15.600 --> 18:18.440
I might see it the opposite way Drew does.

18:18.440 --> 18:19.440
What about you, Wes?

18:19.440 --> 18:20.440
It is complicated.

18:20.440 --> 18:25.440
A little more data, I think, would be useful because there's a lot of philosophy in this,

18:25.440 --> 18:29.040
and rightfully so, and well-made questions and arguments.

18:29.040 --> 18:32.800
But do we see that many problems of regressions in patches, security patches?

18:32.800 --> 18:37.400
Is this burden of maintaining these really that big of an issue?

18:37.400 --> 18:42.880
It seems like, at least from Drew and many other admins that I've talked to, LTS is appreciated

18:42.880 --> 18:45.720
and they have security compliance in play.

18:45.720 --> 18:50.200
If that was a major problem, then they would probably consider moving to a rolling distribution,

18:50.200 --> 18:51.200
right?

18:51.200 --> 18:54.480
Okay, so there's a bit of philosophy in here, like you just said.

18:54.480 --> 18:58.500
And I think we should touch on that for a second.

18:58.500 --> 19:01.880
And she's put on your philosophy hat for this question.

19:01.880 --> 19:07.160
Imagine if all of the open source developer time that is used to backport to old releases

19:07.160 --> 19:12.020
was spent working on new stuff, like we took X amount of time and dedicated it to new stuff.

19:12.020 --> 19:13.020
That is part of his argument.

19:13.020 --> 19:18.040
He writes, a small handful of committed volunteers and those that are employees of companies

19:18.040 --> 19:20.200
selling commercial regular releases.

19:20.200 --> 19:25.440
These are limited resources that are often siloed with only time and resources to work

19:25.440 --> 19:31.100
on very specific distributions with their specific backports and patches that are often

19:31.100 --> 19:34.380
hard to even be reused by other communities.

19:34.380 --> 19:36.900
I think he's got a fair point for better for worse.

19:36.900 --> 19:38.360
That is true.

19:38.360 --> 19:42.240
What if all of a sudden we had all that time back and it was all just new stuff?

19:42.240 --> 19:45.680
I feel like we probably would be further along in some areas.

19:45.680 --> 19:51.720
Yeah, I mean, I think that we would be further along in some areas if we were progressive

19:51.720 --> 19:58.520
about it and we continued to take that time from doing all these backports and ensuring

19:58.520 --> 20:04.760
that these LTSs were secure and moving forward with software would probably fast track us

20:04.760 --> 20:12.220
to create, just evolve the software in itself and create new and interesting software.

20:12.220 --> 20:19.520
But in that same vein, I think that you could say that that also introduces bugs and potential

20:19.520 --> 20:21.020
security vulnerabilities.

20:21.020 --> 20:24.820
So it's damned if you do, damned if you don't, right?

20:24.820 --> 20:31.320
So I kind of align with Drew and what he says and with an LTS, I mean, it is long term support

20:31.320 --> 20:34.160
and you expect that.

20:34.160 --> 20:39.320
But if you had this additional time and you could use that time to further the software

20:39.320 --> 20:44.500
along and create new and interesting software, I mean, you have that opportunity as well.

20:44.500 --> 20:53.240
So it's really, this whole article is really more of a philosophical article in and of

20:53.240 --> 20:58.420
itself, I believe, and is really an opinionated piece.

20:58.420 --> 21:03.580
I do agree with a lot of what he says, but there's part of me that thinks that there

21:03.580 --> 21:10.180
are LTSs for a reason and between these LTS releases, that gives your sysadmin and your

21:10.180 --> 21:13.540
developers time to come up to speed with the latest technology.

21:13.540 --> 21:18.740
So when do you have a lull so that your devs can get up to speed with this new technology

21:18.740 --> 21:20.780
if you're creating the technology so fast?

21:20.780 --> 21:21.940
Okay, so that's a great point.

21:21.940 --> 21:25.700
They got to have an opportunity to learn, which, okay, all right.

21:25.700 --> 21:29.320
But in some ways, Wes, couldn't you argue that perhaps rolling at least at some level

21:29.320 --> 21:30.700
could be easier to understand?

21:30.700 --> 21:31.700
Right.

21:31.700 --> 21:32.700
It's all about cadence, right?

21:32.700 --> 21:36.420
I mean, a rolling is just a lot of little tiny releases.

21:36.420 --> 21:38.120
And so you can learn these changes.

21:38.120 --> 21:43.140
There's less to learn when you have constant changes instead of one big heap of changes.

21:43.140 --> 21:44.140
Right.

21:44.140 --> 21:47.540
You're maybe updating a dozen packages versus a thousand packages.

21:47.540 --> 21:50.780
And there's maybe three changes for each package versus 200 changes.

21:50.780 --> 21:51.780
Right.

21:51.780 --> 21:53.860
And I think a bit from maybe a development angle as well.

21:53.860 --> 21:56.260
And that's just, you know, minimizes your pain as long as you're doing it sometime.

21:56.260 --> 21:57.540
And you might not update every day.

21:57.540 --> 22:01.260
It might be that you update every week or every two weeks so that you're aware of those

22:01.260 --> 22:02.260
changes.

22:02.260 --> 22:05.580
But having a smaller change set to go diff and look back through when you're trying to

22:05.580 --> 22:08.720
debug something or figure out why something won't compile anymore.

22:08.720 --> 22:09.720
That's really nice.

22:09.720 --> 22:10.720
Hmm.

22:10.720 --> 22:13.100
So where does this leave us really?

22:13.100 --> 22:15.700
I think there's one way to find out.

22:15.700 --> 22:18.660
We could check on how our server is doing and that could be the ultimate answer.

22:18.660 --> 22:20.820
I was hoping you weren't going to say that.

22:20.820 --> 22:21.820
Has it back up yet?

22:21.820 --> 22:22.820
All right.

22:22.820 --> 22:23.820
Well, it rebooted.

22:23.820 --> 22:24.820
No problem.

22:24.820 --> 22:25.820
It didn't load the ZFS module.

22:25.820 --> 22:26.820
You're kidding me.

22:26.820 --> 22:27.820
I know.

22:27.820 --> 22:28.820
No.

22:28.820 --> 22:29.820
No.

22:29.820 --> 22:33.300
So no containers were running, no ZFS file systems mounted.

22:33.300 --> 22:36.580
I'm currently rebuilding the DKMS modules.

22:36.580 --> 22:38.540
We'll see if that just, you know.

22:38.540 --> 22:40.160
Oh, that is sometimes a thing.

22:40.160 --> 22:41.160
But usually not.

22:41.160 --> 22:42.160
We have not had that problem.

22:42.160 --> 22:43.160
It's working.

22:43.160 --> 22:44.160
Hmm.

22:44.160 --> 22:45.160
Hmm.

22:45.160 --> 22:47.300
Well, I think that proves it right there.

22:47.300 --> 22:50.460
I think Cheese and Drew are right.

22:50.460 --> 22:53.700
You guys got that one because, I mean, we'll see.

22:53.700 --> 22:55.580
It's probably not a big deal.

22:55.580 --> 23:00.420
I guess that's a fair part of the conversation is every now and then these things happen.

23:00.420 --> 23:06.420
I suppose if this was a real honest to legit revenue generating piece of equipment, we'd

23:06.420 --> 23:10.660
probably have the storage on like an iSCSI device.

23:10.660 --> 23:15.060
And it wouldn't be directly attached to this one host where we're using a ZFS kernel module

23:15.060 --> 23:16.060
to mount it.

23:16.060 --> 23:17.060
Right.

23:17.060 --> 23:19.780
You'd be on another host that's running the disk that has it mounted or we'd be iSCSIing

23:19.780 --> 23:21.700
it and mounting it that way over iSCSI.

23:21.700 --> 23:22.940
And there's also other things.

23:22.940 --> 23:27.260
I'm sure we could have detected this problem before we rebooted or adjusted some parameters

23:27.260 --> 23:28.260
to ensure that.

23:28.260 --> 23:29.900
However, good on us.

23:29.900 --> 23:32.980
We're going ButterFS on the root so that way at least the host system gets up and you can

23:32.980 --> 23:33.980
troubleshoot.

23:33.980 --> 23:34.980
Right.

23:34.980 --> 23:35.980
That's really been working very well.

23:35.980 --> 23:36.980
You were able to SSH in.

23:36.980 --> 23:37.980
Yeah, no problem.

23:37.980 --> 23:38.980
Came up rebooted normally.

23:38.980 --> 23:42.940
I think one of our belt and suspenders approach to arch, it really was, is get snapshots,

23:42.940 --> 23:46.340
which we're not going to bother with in this case because it's probably a pretty easy fix,

23:46.340 --> 23:50.220
but also give yourself a way to get in when the system doesn't work right.

23:50.220 --> 23:51.940
And the snapshots here do mitigate a lot.

23:51.940 --> 23:52.940
I mean, we're not going to use them.

23:52.940 --> 23:55.340
I'd rather just sort of roll forward in this case.

23:55.340 --> 23:59.260
But right, if we we wouldn't do this unless we had an allocated at least some kind of

23:59.260 --> 24:00.260
maintenance window.

24:00.260 --> 24:03.020
And with snapshots, it means, OK, it didn't work.

24:03.020 --> 24:04.020
Try it again later.

24:04.020 --> 24:05.020
Roll it back.

24:05.020 --> 24:07.020
And then it's you don't have to miss that window.

24:07.020 --> 24:10.660
We've done some offline, I mean, off air, I should say upgrades to it, too.

24:10.660 --> 24:13.580
So this we haven't only been upgrading it on the show.

24:13.580 --> 24:19.300
And so it's been probably a dozen times, maybe half a I mean, I know I've probably done a

24:19.300 --> 24:23.380
half a dozen times and you've probably done another handful of times and it hasn't had

24:23.380 --> 24:24.380
an issue.

24:24.380 --> 24:27.420
But I'm pretty glad that when we did, we got it on the show because this is how this is

24:27.420 --> 24:29.420
this is the real world.

24:29.420 --> 24:32.220
And these are the things you need when you hear why you don't why you shouldn't run arch

24:32.220 --> 24:33.220
on the server.

24:33.220 --> 24:36.220
It's like, well, if you don't want to deal with this, if you don't know how to reinstall

24:36.220 --> 24:38.900
a DKMS module, which is just a Pac-Man command.

24:38.900 --> 24:42.620
But, you know, if that if that goes over your head, then it's not the right OS for you.

24:42.620 --> 24:47.460
I didn't even read the arch blog before doing this, which I probably should have.

24:47.460 --> 24:51.180
Well, there was that whole I had a game show music countdown play.

24:51.180 --> 24:52.180
Yeah.

24:52.180 --> 24:56.420
Well, I mean, I think that this is the the perfect type of system to test this this idea

24:56.420 --> 25:02.180
on the right, because it's not like Equifax is database server or something, right?

25:02.180 --> 25:03.180
It's right.

25:03.180 --> 25:06.100
You know, this personal server that they were using some podcasts, right?

25:06.100 --> 25:09.540
And it might it might, you know, disrupt a little bit of a file storage thing.

25:09.540 --> 25:13.200
But you always have your ZFS pool that you can reattach to.

25:13.200 --> 25:17.320
So it's not like theoretically anything is really lost, right?

25:17.320 --> 25:22.460
Like you've got some containers you might have to rebuild and and you've got, you know,

25:22.460 --> 25:25.540
let's say if you change the host from arch to something else, you might have to rebuild

25:25.540 --> 25:28.220
those containers and reattach to your ZFS pool.

25:28.220 --> 25:32.540
But other than that, you still have a security net there that you don't have to worry about

25:32.540 --> 25:35.100
the system actually breaking and falling into pieces.

25:35.100 --> 25:40.780
So there is one aspect of this conversation that I think he nails before we completely

25:40.780 --> 25:41.900
move on.

25:41.900 --> 25:47.420
And that is treating the server a little bit different than we traditionally have with

25:47.420 --> 25:49.140
old school Linux.

25:49.140 --> 25:53.000
In old school Linux, you got these DVDs or CD-ROMs or whatever, and there was like six

25:53.000 --> 25:58.100
disks and you would do this whole install, it would be you install kinds of packages

25:58.100 --> 26:00.840
just in case you ever needed to install another kind of package.

26:00.840 --> 26:05.820
And it was assumed that you'd have all these different things in a distribution that was

26:05.820 --> 26:10.180
much larger than it actually needed to be if that was only doing one job and one job

26:10.180 --> 26:11.180
only.

26:11.180 --> 26:13.140
You made a big standalone multipurpose machine.

26:13.140 --> 26:14.140
Yes.

26:14.140 --> 26:18.300
And even if you installed just a mail server on it still had all this other stuff.

26:18.300 --> 26:19.460
That has shifted.

26:19.460 --> 26:25.060
And the idea of one server one function in the world of VMs and containers is very, very

26:25.060 --> 26:27.480
affordable and very attainable.

26:27.480 --> 26:32.360
And I do think that is the way to just really solid server systems in the future is one

26:32.360 --> 26:36.300
micro install instance that only has the bare minimum of what it needs to run a container

26:36.300 --> 26:37.300
or a VM.

26:37.300 --> 26:41.440
And in that VM, it's again, it's an absolute bare minimum install only needs what it has

26:41.440 --> 26:42.440
to have.

26:42.440 --> 26:46.140
And you're only maintaining that small set of packages.

26:46.140 --> 26:50.400
And that's why there's so much room for all these different flavors of Linux.

26:50.400 --> 26:54.940
From openSUSE, a micro OS to Alpine to the rel core stuff now.

26:54.940 --> 26:58.980
Yeah, there's even unikernels where the programming language, they don't even have a regular kernel.

26:58.980 --> 26:59.980
It's all just that.

26:59.980 --> 27:00.980
Yeah.

27:00.980 --> 27:02.460
And in the meantime, the rest of the world will just keep on using Ubuntu.

27:02.460 --> 27:09.940
Well, and he's also spot on about atomic style updating.

27:09.940 --> 27:14.300
He mentions micro OS, which is the openSUSE version.

27:14.300 --> 27:19.100
But the whole idea of transactional updates is fantastic.

27:19.100 --> 27:24.620
It's something that I've really taken a liking to not just in servers, but also on the desktop

27:24.620 --> 27:29.880
with things like silver blue, which I think could be the future of how we do a lot of

27:29.880 --> 27:34.120
things having an immutable base, which is read only.

27:34.120 --> 27:37.740
And then you can layer stuff on top, including containers.

27:37.740 --> 27:39.120
That's really what it's built for.

27:39.120 --> 27:45.420
And it really feels like the next generation of server computing, especially, maybe desktop,

27:45.420 --> 27:47.460
I don't know, I'm back and forth on that.

27:47.460 --> 27:55.020
But for servers, yeah, it's the ability to roll back without having to deal with things

27:55.020 --> 27:58.060
like snapshots because they're baked in.

27:58.060 --> 27:59.060
It's fantastic.

27:59.060 --> 28:00.060
I agree.

28:00.060 --> 28:02.460
That's why we're going to talk about time shift today.

28:02.460 --> 28:06.020
So that way, folks that are listening can implement this on their desktop or laptop

28:06.020 --> 28:10.100
or even your server in a way that's really straightforward, just using rsync.

28:10.100 --> 28:15.660
Or if you have butterfs, it uses native butterfs snapshots, because these snapshots are really

28:15.660 --> 28:16.820
great functionality.

28:16.820 --> 28:23.540
We decided to install it on our recording system here that has an awesome jack setup.

28:23.540 --> 28:25.320
It's a lot.

28:25.320 --> 28:32.540
But amazingly, we are able to expose all 32 inputs and outputs from our mixer to jack.

28:32.540 --> 28:38.340
And so we can wire the mixer in jack and then send it to Reaper for recording and pipe it

28:38.340 --> 28:43.180
out to our remote guests in the mumble room with virtual syncs and whatever you call it.

28:43.180 --> 28:44.180
It's just flexible.

28:44.180 --> 28:49.740
And it's awesome, however, you could see how an audio package could come along and break

28:49.740 --> 28:52.100
the whole thing and we would not be able to record.

28:52.100 --> 28:53.100
We're really dependent on it now.

28:53.100 --> 28:57.000
Yeah, there's like there's PPAs involved in a lot of specific configuration.

28:57.000 --> 28:58.280
It's delicate.

28:58.280 --> 29:03.140
So we thought, Jesus, this is a perfect candidate, perfect.

29:03.140 --> 29:08.220
So Wes, he laid his hands on the machine and he blessed it with time shift.

29:08.220 --> 29:11.140
And we're going to tell you how that went in just a moment.

29:11.140 --> 29:16.260
But first, just some quick housekeeping, just a few items of note.

29:16.260 --> 29:21.860
If you haven't had a chance, go check out Linux Headlines, linuxheadlines.show every

29:21.860 --> 29:23.980
weekday in three minutes or less.

29:23.980 --> 29:25.860
What's going on in the world of Linux?

29:25.860 --> 29:32.240
I do Mondays, Drew does Tuesdays, I do Wednesdays, Wes does Thursdays and then Drew's back to

29:32.240 --> 29:33.240
wrap us up on Fridays.

29:33.240 --> 29:37.500
So we just sort of shifted around so that way not one of us completely burns out.

29:37.500 --> 29:43.040
But what's really cool, behind the scenes, we have a dedicated staffer to doing research,

29:43.040 --> 29:45.380
to collecting stories, to verifying them.

29:45.380 --> 29:48.580
But we also bounce it around the team before it publishes.

29:48.580 --> 29:53.060
And then we do a peer review before we actually release the MP3 file.

29:53.060 --> 29:58.180
So in that three minutes, you are getting super tight, accurate, condensed information

29:58.180 --> 30:02.940
with the hype removed, with all of our different perspectives on it, regardless of who's hosting

30:02.940 --> 30:03.940
it.

30:03.940 --> 30:05.180
Really proud of that work.

30:05.180 --> 30:07.860
LinuxHeadlines.show, and of course, one went out today.

30:07.860 --> 30:10.900
It's a great way to just, when you're going down the road, why not just start out with

30:10.900 --> 30:13.740
a three minute show and then get into whatever you're going to listen to.

30:13.740 --> 30:16.380
That's really great.

30:16.380 --> 30:21.100
Also Jupiterbroadcasting.com slash Telegram, just going great.

30:21.100 --> 30:22.100
Yeah, come join the party.

30:22.100 --> 30:24.140
I think I owe the whole Telegram group a beer now.

30:24.140 --> 30:25.700
I'm not sure how we're all going to get in one place.

30:25.700 --> 30:27.140
I think I need to give them tacos.

30:27.140 --> 30:28.140
It's PBRs.

30:28.140 --> 30:29.380
It's going to be a good night though.

30:29.380 --> 30:30.820
Not going to be on PBRs.

30:30.820 --> 30:32.420
Don't work tacos in there.

30:32.420 --> 30:33.420
Everybody wants tacos now.

30:33.420 --> 30:34.580
We're not doing tacos again.

30:34.580 --> 30:36.020
At least that's on you.

30:36.020 --> 30:38.940
You want to bring the tacos, you're the taco guy.

30:38.940 --> 30:40.060
I'll be the PBR guy.

30:40.060 --> 30:41.060
You'll be the taco guy.

30:41.060 --> 30:42.060
Dude, this is sounding great actually.

30:42.060 --> 30:45.420
Now we just need a place.

30:45.420 --> 30:51.420
Also, if you haven't checked out my side thing, Chris Lastcast, me and Brent, we're launching

30:51.420 --> 30:52.420
an empire over there.

30:52.420 --> 30:55.660
No, actually, I just decided when we were talking about the burnout stuff to do a little

30:55.660 --> 31:00.100
creative outlet, and I've kind of been keeping it going.

31:00.100 --> 31:01.100
Brent talked me into it.

31:01.100 --> 31:04.580
I sat down and I did a thing about how I created myself a little note challenge.

31:04.580 --> 31:06.060
I got my notes right here.

31:06.060 --> 31:07.060
I'm sticking to it so far.

31:07.060 --> 31:08.460
You have a lovely notebook there.

31:08.460 --> 31:10.300
So Brent and I checked that out, chrislast.com.

31:10.300 --> 31:14.380
That just went up this morning as we record because we're doing this one a little early.

31:14.380 --> 31:19.620
Hopefully, things will be back to our regularly scheduled program next week, Tuesday at noon

31:19.620 --> 31:23.660
Pacific, but since I'm at jury duty, we don't really know.

31:23.660 --> 31:25.640
We don't really know until I just go.

31:25.640 --> 31:26.640
So I go tomorrow.

31:26.640 --> 31:30.220
If we're not live, we'll try to figure out another time.

31:30.220 --> 31:31.500
We'll do like a late night lup party.

31:31.500 --> 31:32.500
Oh, that could be fun.

31:32.500 --> 31:33.500
We'll do that.

31:33.500 --> 31:34.500
We'll come.

31:34.500 --> 31:35.500
We'll do some pizza.

31:35.500 --> 31:36.500
We'll watch a movie.

31:36.500 --> 31:37.500
We'll watch Revolution OS.

31:37.500 --> 31:38.500
We could really do this.

31:38.500 --> 31:39.500
Yeah, I'm down.

31:39.500 --> 31:42.500
We could grab some clips, watch Revolution OS, have some pizza, and then go record a

31:42.500 --> 31:43.500
lup.

31:43.500 --> 31:46.780
I mean, if you've got to do jury duty, you might as well chill out and make it fun.

31:46.780 --> 31:47.780
We'll figure out something.

31:47.780 --> 31:49.980
It might be kind of a weird one, but we'll figure it out.

31:49.980 --> 31:54.580
We won't leave you hanging, at least hopefully.

31:54.580 --> 31:58.780
Anyways, that is our housekeeping for today.

31:58.780 --> 32:00.100
Let's talk about time shift.

32:00.100 --> 32:02.020
Before we do, I've got an Arch update.

32:02.020 --> 32:07.740
Yeah, it turns out the latest kernel that we just downloaded, not yet supported by ZFS

32:07.740 --> 32:08.740
on Linux.

32:08.740 --> 32:15.100
There's another GPL only symbol change that has not yet been fixed.

32:15.100 --> 32:18.460
So revert, go back.

32:18.460 --> 32:19.460
Back in time.

32:19.460 --> 32:20.460
Very good.

32:20.460 --> 32:21.460
Very good.

32:21.460 --> 32:24.460
Well, that shouldn't be too hard of a fix.

32:24.460 --> 32:26.420
You think you'll have it done before the end of the show?

32:26.420 --> 32:27.420
Oh, yeah.

32:27.420 --> 32:28.420
You think so?

32:28.420 --> 32:29.420
I'm going to do it right now.

32:29.420 --> 32:30.420
Okay.

32:30.420 --> 32:31.420
I mean, that thing does take a while to reboot.

32:31.420 --> 32:36.300
So time shift is a Linux application that provides functionality similar to Windows

32:36.300 --> 32:40.120
Restore or maybe Time Machine on Mac OS.

32:40.120 --> 32:45.020
It protects your system by taking incremental snapshots of the file system at regular intervals.

32:45.020 --> 32:51.900
Now, these snapshots can be restored later to undo the changes, and we'll use rsync with

32:51.900 --> 32:55.980
hard links on a system that doesn't have butterfess.

32:55.980 --> 32:58.700
And the nice thing about those hard links is common files that are shared between the

32:58.700 --> 33:03.560
snapshots will just be hard linked, and then you don't have duplicates, and it saves space.

33:03.560 --> 33:07.740
Each snapshot is a full system backup that you can actually go browse with a file manager.

33:07.740 --> 33:09.960
But here's what's also really cool.

33:09.960 --> 33:16.100
In butterfess mode, snapshots are taken using built-in butterfess file system features,

33:16.100 --> 33:17.540
which is really cool.

33:17.540 --> 33:21.580
Now, I think the one thing that might surprise people is if I recall when we were setting

33:21.580 --> 33:24.700
this up, Wes, by default, it doesn't back up user data.

33:24.700 --> 33:27.500
Yeah, and that's actually intentional.

33:27.500 --> 33:30.020
It's designed to just try to keep the system safe.

33:30.020 --> 33:33.740
And so if you break something in your system, you don't also want to lose all the latest

33:33.740 --> 33:34.920
Excel files you were working on, right?

33:34.920 --> 33:37.860
You want those to stay, and so the idea is with time shift, you can just roll that right

33:37.860 --> 33:38.860
back.

33:38.860 --> 33:39.860
All those Excel files.

33:39.860 --> 33:40.860
That's your example?

33:40.860 --> 33:41.860
I don't know.

33:41.860 --> 33:46.260
I like your picture of the typical Mint user right now in your head.

33:46.260 --> 33:47.260
That's what that was.

33:47.260 --> 33:48.260
Yeah.

33:48.260 --> 33:49.260
Hey, spreadsheets.

33:49.260 --> 33:50.260
All right.

33:50.260 --> 33:51.260
Okay.

33:51.260 --> 33:54.740
Well, that actually makes a lot of sense because a lot of times you'll have maybe your most

33:54.740 --> 33:59.460
personal or important stuff in some public cloud storage with the permission set to public,

33:59.460 --> 34:03.140
or you'll have them in Dropbox with a single encryption, or you'll throw them on sync thing

34:03.140 --> 34:07.420
that isn't actually syncing because it's always breaking on you, and they won't actually be

34:07.420 --> 34:09.420
only in your home directory.

34:09.420 --> 34:12.000
Come on.

34:12.000 --> 34:13.180
That's how it goes, right?

34:13.180 --> 34:14.440
That's how it works.

34:14.440 --> 34:15.440
But you could add it.

34:15.440 --> 34:18.460
It's just a matter of going in the configuration and adding it to backup.

34:18.460 --> 34:19.460
Yeah, absolutely.

34:19.460 --> 34:20.460
So you could do it.

34:20.460 --> 34:21.460
We did not, though.

34:21.460 --> 34:23.060
We just had it focused on the system, and we wanted to...

34:23.060 --> 34:24.060
I did add a few.

34:24.060 --> 34:25.060
Oh, yeah.

34:25.060 --> 34:29.060
Well, I did add some of the files in that we don't ever really change, but just some

34:29.060 --> 34:31.620
like handy binaries that aren't stored in the usual system.

34:31.620 --> 34:32.620
Oh, yeah.

34:32.620 --> 34:33.620
Okay.

34:33.620 --> 34:36.060
And then, of course, we actually excluded the recordings themselves.

34:36.060 --> 34:37.060
Absolutely.

34:37.060 --> 34:38.680
We don't need to back those up into a snapshot.

34:38.680 --> 34:43.020
We just really want to restore the configuration state so we can record again.

34:43.020 --> 34:44.380
That's really the main thing.

34:44.380 --> 34:48.860
And because we have committed ourselves to keeping these systems fairly up to date, we

34:48.860 --> 34:53.620
don't do it like every day, but, you know, about once a month we upgrade all these boxes.

34:53.620 --> 34:58.260
And so we do want to have an escape hatch just in case something goes wrong.

34:58.260 --> 35:02.140
Snapshots can be restored by just either using the GUI, which is nice.

35:02.140 --> 35:04.020
It comes with a GTK GUI.

35:04.020 --> 35:07.620
Or you could boot into another live environment, and you can restore using a live environment

35:07.620 --> 35:08.900
too, as long as you can access it.

35:08.900 --> 35:10.340
Yeah, really mess things up.

35:10.340 --> 35:11.700
So I'm going to pull it up.

35:11.700 --> 35:13.060
Let's take a look at it right here.

35:13.060 --> 35:15.340
Yeah, it was very easy to get started with.

35:15.340 --> 35:16.340
I'm going to...

35:16.340 --> 35:21.420
And, of course, what really put us onto this was the people that were writing in when they

35:21.420 --> 35:25.900
were explaining why they use Mint talked about how Timeshift had saved their bacon a couple

35:25.900 --> 35:26.900
of times.

35:26.900 --> 35:30.020
And it's nice because when you go in here, you can look at individual snapshots.

35:30.020 --> 35:32.740
It has a big green badge saying that it's active.

35:32.740 --> 35:36.780
It gives you a big number on how much available storage you have and how many snapshots have

35:36.780 --> 35:37.780
occurred.

35:37.780 --> 35:40.340
All just clearly listed right here.

35:40.340 --> 35:42.140
And you didn't have to set anything up.

35:42.140 --> 35:43.700
That's just how it shows up.

35:43.700 --> 35:47.380
And it will automatically set up cron jobs for you to make sure it takes those snapshots

35:47.380 --> 35:48.380
on time.

35:48.380 --> 35:49.380
Yeah.

35:49.380 --> 35:53.180
So that was the thing is when people wrote in there, like, you really got to go use this

35:53.180 --> 35:55.380
because it really makes this simple.

35:55.380 --> 35:56.380
And now I can see it.

35:56.380 --> 35:59.820
I can really appreciate it because it's so simple.

35:59.820 --> 36:02.980
You can right click right there and you have mark for deletion.

36:02.980 --> 36:03.980
You can do file management.

36:03.980 --> 36:08.980
You can browse the files or it's one click to just restore that entire snapshot.

36:08.980 --> 36:10.060
And you can have a field in here.

36:10.060 --> 36:13.220
So if you want to go back in later and say, okay, I'm taking a snapshot.

36:13.220 --> 36:14.220
You can add comments.

36:14.220 --> 36:18.100
So you could say this is our pre-upgrade snapshot, you know, and I can leave a little note here.

36:18.100 --> 36:21.540
So if you showed up to record tech snap and something wasn't working, you could go in

36:21.540 --> 36:22.860
there and say, oh, Chris did that upgrade.

36:22.860 --> 36:23.860
Yeah.

36:23.860 --> 36:24.860
That's really nice for multi user systems.

36:24.860 --> 36:25.860
Mm hmm.

36:25.860 --> 36:29.660
So I had something happen the other day and I thought, oh, Jack, it broke.

36:29.660 --> 36:32.300
It finally, it finally broke on us.

36:32.300 --> 36:36.180
And I got ahold of you and we troubleshot it for a little bit and ended up like just

36:36.180 --> 36:38.620
having to like restart pulse or something.

36:38.620 --> 36:42.760
But it was at that moment, I was thinking to myself, hmm, I really need to get going

36:42.760 --> 36:44.020
on this recording.

36:44.020 --> 36:48.420
So I wonder if we, if we had a snapshot system is so a time shift kind of came on our radar.

36:48.420 --> 36:50.820
I thought this is going to be a perfect solution.

36:50.820 --> 36:56.180
So we loaded it here and um, I don't, I don't see any reason why we're going to stop using

36:56.180 --> 36:57.180
it.

36:57.180 --> 36:59.100
I think we'll just keep using it on our production Kubuntu system.

36:59.100 --> 37:01.720
Oh no, now it's XFCE.

37:01.720 --> 37:04.220
It's a Kubuntu install with XFCE.

37:04.220 --> 37:11.020
I'm curious though, um, you, you can schedule this in like a cron job so that you can dump,

37:11.020 --> 37:16.260
uh, maybe have like three backups, dump the oldest, create a new one sort of scenario.

37:16.260 --> 37:17.260
Yeah.

37:17.260 --> 37:19.660
It has, um, some retention configuration set up already.

37:19.660 --> 37:22.760
So you sort of choose like how often you want and how many you want to keep and it'll do

37:22.760 --> 37:25.780
all the, all the updating and rolling for you.

37:25.780 --> 37:26.780
Yeah.

37:26.780 --> 37:30.420
And it gives you a nice GUI for going and setting the location for adjusting the cron

37:30.420 --> 37:32.340
schedule so you don't have to be a cron expert.

37:32.340 --> 37:33.340
Yeah.

37:33.340 --> 37:36.060
I'm looking at the GUI now and the GUI looks actually fantastic.

37:36.060 --> 37:40.040
Uh, it really does look like a quality piece of software.

37:40.040 --> 37:44.140
There is, um, one issue you may run into, which we did, uh, as I was trying to add a

37:44.140 --> 37:46.060
couple extra things in the home directory.

37:46.060 --> 37:50.340
There is a nice little filters part, so you can sort of add, excludes or include files

37:50.340 --> 37:54.460
specifically, uh, on sort of regex style patterns.

37:54.460 --> 37:59.260
That doesn't really work in the GUI, uh, turns out any rule and what you add stuff, but that

37:59.260 --> 38:01.460
never doesn't make it to the config file.

38:01.460 --> 38:02.460
There is an issue open.

38:02.460 --> 38:06.740
It seems to just be a recent regression in the latest release and thankfully the config

38:06.740 --> 38:08.380
file is just like a simple JSON file.

38:08.380 --> 38:10.540
So you can, there's already some filters in there.

38:10.540 --> 38:11.540
You can see how it is.

38:11.540 --> 38:13.380
Just got to copy and modify a couple of lines.

38:13.380 --> 38:18.460
I'm close to calling this a, I must load for any system where you are really serious about

38:18.460 --> 38:22.900
needing to get back up and running or a family member, if you deploy a Linux box for a friend

38:22.900 --> 38:23.900
or family member.

38:23.900 --> 38:26.700
The nice thing about it was that, especially because of the R sync support, you know, we

38:26.700 --> 38:30.380
didn't have to do, when we set up the server with snapper and stuff, we spent a while considering

38:30.380 --> 38:31.900
like how are we going to do this file system layout?

38:31.900 --> 38:36.340
What's the right thing with time shift, just installed the PPA, got it going.

38:36.340 --> 38:37.340
And that was it.

38:37.340 --> 38:39.660
We spent 20 minutes of just playing with it and now we haven't thought about it.

38:39.660 --> 38:40.660
We have all these snapshots.

38:40.660 --> 38:41.660
Yeah.

38:41.660 --> 38:42.660
And I love our sync.

38:42.660 --> 38:43.660
You know, that's good.

38:43.660 --> 38:46.980
If you use the butter FS support, there is a couple of requirements on how you have things

38:46.980 --> 38:51.100
laid out, but they're totally reasonable, but just worth checking before you use the

38:51.100 --> 38:52.100
butter FS support.

38:52.100 --> 38:55.860
Well, Brent just joined us, Brent, have you had a chance to look at time shift?

38:55.860 --> 38:56.860
You got any thoughts on it?

38:56.860 --> 38:57.860
Yeah.

38:57.860 --> 38:59.420
You know, I've seen time shift.

38:59.420 --> 39:03.520
The first time I saw it was in Linux mint, I don't know, a few years ago and that got

39:03.520 --> 39:09.100
me kind of excited about it because of the our sync backend and I'm a huge, huge fan

39:09.100 --> 39:13.020
of our sync because of its, you know, robustness.

39:13.020 --> 39:17.300
But also because I know like a tool like this, I love seeing our sync in the backend because

39:17.300 --> 39:23.220
I know that if for any reason time shift stops working the way I want it to, I understand

39:23.220 --> 39:28.460
what's happening on the sort of on the bottom end, you know, so I can use tools I'm familiar

39:28.460 --> 39:32.540
with to diagnose something that's going wrong with the backups if that ever happens.

39:32.540 --> 39:34.340
So that is some pretty good peace of mind.

39:34.340 --> 39:35.460
Yeah, that's a great point.

39:35.460 --> 39:37.460
It's not some magical special backup format.

39:37.460 --> 39:39.900
It's just directories or butter fs snapshots.

39:39.900 --> 39:40.900
Mm hmm.

39:40.900 --> 39:44.620
Now it looks like reading around on their website that you'll get unpredictable results

39:44.620 --> 39:46.740
if you're pointing at containers and stuff like that.

39:46.740 --> 39:50.780
So beware, this is more for like a workstation snapshot.

39:50.780 --> 39:51.780
That's the ideal use case.

39:51.780 --> 39:52.780
I think.

39:52.780 --> 39:53.780
Yeah, this looks really cool.

39:53.780 --> 39:59.240
I haven't had any experience with this project yet, but one thing I'm wondering is if they'll

39:59.240 --> 40:04.740
integrate ZFS snapshots at some point, I think that would be super, super cool.

40:04.740 --> 40:09.900
I saw someone on their GitHub offering to start working on ZFS support and then contribute

40:09.900 --> 40:10.900
it back.

40:10.900 --> 40:12.660
So that could be in the works.

40:12.660 --> 40:15.060
I agree, especially with 2004 shipping ZFS.

40:15.060 --> 40:16.980
I would love to see that.

40:16.980 --> 40:21.760
Now, Mr. Payne, we do have some feedback to get to, including one from Troy about new

40:21.760 --> 40:23.500
users and Linux Mint.

40:23.500 --> 40:26.180
He writes, Chris, I've been listening to your show since the Linux action show days

40:26.180 --> 40:28.580
when Brian was around and I love the shows.

40:28.580 --> 40:29.580
Love the work.

40:29.580 --> 40:30.580
Keep it up.

40:30.580 --> 40:34.540
I was just listening to episode 339 of the Mint Mindset and I just wanted to give some

40:34.540 --> 40:35.540
feedback.

40:35.540 --> 40:38.980
I know with your background that the show is probably focused more towards the geek

40:38.980 --> 40:42.580
community than the average operating system consumer.

40:42.580 --> 40:46.540
Most people in your sphere of influence are programmers or inspired by the bells and whistles

40:46.540 --> 40:47.660
that people seem to love.

40:47.660 --> 40:49.060
Now, come on now.

40:49.060 --> 40:50.060
He's that Troy.

40:50.060 --> 40:51.060
OK.

40:51.060 --> 40:52.060
He's probably right.

40:52.060 --> 40:53.060
He's probably right, actually.

40:53.060 --> 40:54.060
Most.

40:54.060 --> 40:55.060
Yeah, OK.

40:55.060 --> 40:56.060
Well, OK.

40:56.060 --> 40:57.060
Go on.

40:57.060 --> 40:58.060
Continuing on.

40:58.060 --> 41:00.140
I don't think he was accusing me, but he's probably right.

41:00.140 --> 41:01.680
I mean, we do like the shiny.

41:01.680 --> 41:02.680
He goes on.

41:02.680 --> 41:04.780
Well, I work for a computer service shop in our area.

41:04.780 --> 41:09.160
We make most of our money supporting the various bugs that occur in Windows computers and doing

41:09.160 --> 41:10.900
virus cleanups and so forth.

41:10.900 --> 41:16.820
However, we've gotten more and more requests from customers, both businesses and home users

41:16.820 --> 41:21.640
about purchasing computers or upgrading their computers to Linux.

41:21.640 --> 41:26.420
And after trying a large variety of distributions myself and trying with different customers,

41:26.420 --> 41:30.980
I have to say that the feedback they give us about Linux Mint is how similar it is to

41:30.980 --> 41:32.220
Windows 7.

41:32.220 --> 41:33.940
And they love it.

41:33.940 --> 41:34.940
They love it.

41:34.940 --> 41:37.820
Linux Mint is not only easy to use, but it looks sexy as hell.

41:37.820 --> 41:40.700
It also allows for geek and power users to get things done as well.

41:40.700 --> 41:46.820
I met several people, including myself, who run Linux Mint web servers.

41:46.820 --> 41:47.820
So there you go.

41:47.820 --> 41:48.820
All right.

41:48.820 --> 41:52.780
Last bit aside, which frankly scares me a little, I think the point of like this is

41:52.780 --> 41:53.780
working for users.

41:53.780 --> 41:54.780
They like it.

41:54.780 --> 41:56.300
It's an easy transition.

41:56.300 --> 41:57.300
It's important.

41:57.300 --> 41:58.300
I agree.

41:58.300 --> 42:01.860
Um, I guess what matters the most right there, I know there's nothing really else to say

42:01.860 --> 42:02.860
about it.

42:02.860 --> 42:06.340
He says, I guess he writes up, I guess I'm saying don't always look at everything from

42:06.340 --> 42:09.820
such a high level since most computer users are just average consumers.

42:09.820 --> 42:12.060
They want to use it and get their daily tasks done.

42:12.060 --> 42:13.460
I think we agree with that, actually.

42:13.460 --> 42:17.960
And I think that's a lot of times where we've even wondered if Linux is the right answer.

42:17.960 --> 42:24.900
And I think elementary OS and Mint are telling us, yes, I would also wonder, Troy, if you

42:24.900 --> 42:29.260
had a chance, I'd be curious to know what the feedback would be for something like Ubuntu

42:29.260 --> 42:31.700
Mate 20.04 when it comes out.

42:31.700 --> 42:35.680
Maybe try slapping that on a few machines because I recently gave the daily ISO a go

42:35.680 --> 42:41.500
for Mate 1.24 and it is looking real good.

42:41.500 --> 42:46.980
And it's not Cinnamon, I'll grant, Cinnamon does have that Windows 7 vibe going, but it

42:46.980 --> 42:53.420
still has that traditional paradigm and 20.04 will be supported for a long time and it seemed

42:53.420 --> 42:54.940
really good.

42:54.940 --> 42:58.260
Daniel writes in with a question we've gotten a couple of times.

42:58.260 --> 43:00.220
It's about these ThinkPad T480s.

43:00.220 --> 43:06.260
He says, in episode 323, you mentioned a shim is being developed for the T480 fingerprint

43:06.260 --> 43:07.260
reader.

43:07.260 --> 43:10.440
This was back in October and it seems that the official drivers were released for almost

43:10.440 --> 43:14.460
everything bad except the T480 and a few other models.

43:14.460 --> 43:19.300
As far as I know, there's no official development going on for the fingerprint reader, but maybe

43:19.300 --> 43:22.620
you could get an update on this because if there is, I'd like to know or if it's been

43:22.620 --> 43:23.620
abandoned.

43:23.620 --> 43:24.620
Thanks in advance, Daniel.

43:24.620 --> 43:28.660
Unfortunately, I don't have any updates on official support.

43:28.660 --> 43:33.260
There was a project over on GitHub to reverse engineer the protocol and add support that

43:33.260 --> 43:34.260
way.

43:34.260 --> 43:38.660
They made some progress, I guess, on the specific model that's on this ThinkPad.

43:38.660 --> 43:43.860
It will initialize and the LEDs work, but scan doesn't work and unfortunately, at least

43:43.860 --> 43:46.540
on the master branch, the last commit was like a year ago.

43:46.540 --> 43:47.540
Oof.

43:47.540 --> 43:50.460
Oh, see, I kind of heard a rumor it was in development, but I bet it was that.

43:50.460 --> 43:51.460
Here's hoping though.

43:51.460 --> 43:53.260
Oh, well, just a couple of more.

43:53.260 --> 43:56.460
One more from Jason and this one is so cool.

43:56.460 --> 44:00.180
I had no idea, so I'm so glad he wrote it and he says, not sure if y'all heard of this,

44:00.180 --> 44:06.140
but there is a community plugin for Cockpit called Cockpit ZFS Manager.

44:06.140 --> 44:11.100
He says it's a great plugin to help those that are used to a GUI style of managing ZFS

44:11.100 --> 44:14.700
from FreeNAS, but are moving over to ZFS on Linux.

44:14.700 --> 44:18.660
It's still in the alpha beta stage for the developer and requires Cockpit 201 or greater

44:18.660 --> 44:21.300
and Samba because it can also do some Sambasheer stuff.

44:21.300 --> 44:22.780
I think we're going to have to give it a try.

44:22.780 --> 44:23.780
This does sound pretty cool.

44:23.780 --> 44:27.540
He says, maybe the JV community could show the developer some love.

44:27.540 --> 44:28.660
I agree.

44:28.660 --> 44:32.540
I think that would be really cool and he says, love all the shows.

44:32.540 --> 44:34.420
Hopefully one day I'll find time to join in live.

44:34.420 --> 44:36.780
Well, hopefully that, hopefully it wasn't going to be this Tuesday because we're not

44:36.780 --> 44:37.780
here.

44:37.780 --> 44:40.140
I'm in the courthouse.

44:40.140 --> 44:41.140
That is really neat.

44:41.140 --> 44:43.180
I didn't actually need it, but now I want it.

44:43.180 --> 44:44.180
Right?

44:44.180 --> 44:48.580
I mean, just thinking back on our fake names there, Cockpit was one of our favorite parts

44:48.580 --> 44:52.940
about using Fedora on that system and having ZFS support would have been perfect.

44:52.940 --> 44:56.700
And you know what was great about that is we totally had no intention of even really

44:56.700 --> 45:00.540
trying out Cockpit much, but we kept getting little notes from the audience saying, hey,

45:00.540 --> 45:01.540
you should try out Cockpit.

45:01.540 --> 45:02.540
Hey, let's check it out.

45:02.540 --> 45:03.820
And they were so right.

45:03.820 --> 45:06.180
Will writes in with our last one and it's a shorty.

45:06.180 --> 45:07.300
It's a prediction for the show.

45:07.300 --> 45:10.740
He says, follow up prediction for Wes's Bcash prediction.

45:10.740 --> 45:16.920
If BcashFS does make it upstream in 2020, Jupiter Broadcasting will be using it in production

45:16.920 --> 45:18.860
before the end of the year.

45:18.860 --> 45:19.860
I think that's pretty solid.

45:19.860 --> 45:20.860
Seems right to me.

45:20.860 --> 45:23.460
I mean, I'm absolutely putting it on my laptop for sure.

45:23.460 --> 45:25.460
And I use that for production.

45:25.460 --> 45:28.340
So I mean, come on, how great would that be?

45:28.340 --> 45:29.340
I've just said it too many times.

45:29.340 --> 45:30.900
I have to install it once it's there.

45:30.900 --> 45:35.220
Bcash for the root file system, ZFS for the data, ButterFS for my home.

45:35.220 --> 45:36.340
I'm a happy guy.

45:36.340 --> 45:37.860
That's like a perfect setup for me.

45:37.860 --> 45:38.860
I'm all about that.

45:38.860 --> 45:41.820
It's all about seeing how many different file systems you can use at once.

45:41.820 --> 45:45.780
I mean, that's the great thing about Linux, right?

45:45.780 --> 45:47.860
It's all about choice, Wes.

45:47.860 --> 45:54.940
Okay, we have a really cool app pick for you that I'm going to let Wes pick or tell you

45:54.940 --> 45:58.900
about because he found this pick and he wants to geek out hard on it.

45:58.900 --> 45:59.900
It is pretty neat.

45:59.900 --> 46:00.900
Yeah, okay.

46:00.900 --> 46:05.060
You've probably heard of JQ, the handy little command line tool for manipulating JSON, making

46:05.060 --> 46:07.820
JSON queries, that sort of thing, right?

46:07.820 --> 46:09.260
It works really well.

46:09.260 --> 46:14.500
But a lot of the time, at least on the Linux command line, you don't always have JSON.

46:14.500 --> 46:19.340
I mean, we do have the Unix philosophy, so you have this text output, but I'm sure we've

46:19.340 --> 46:24.060
all been in the experience of, okay, I just want to grab the IP address field and now

46:24.060 --> 46:30.000
I have to like grep and awk and cut and it just gets to be kind of a mess.

46:30.000 --> 46:32.660
It's almost a little embarrassing too when you think about things like PowerShell where

46:32.660 --> 46:35.020
they do have a lot more structured output.

46:35.020 --> 46:36.660
I was going to mention that, yeah.

46:36.660 --> 46:38.580
So I mean, we're not there yet.

46:38.580 --> 46:44.300
Some tools, I learned this today, IP route 2, the new IP command, that has a dash J flag

46:44.300 --> 46:47.200
and it'll output JSON for you right there, so boom.

46:47.200 --> 46:52.860
Some of this is handled, some newer tooling does have integrated JSON support.

46:52.860 --> 46:56.420
But for everything else that doesn't, there's JC.

46:56.420 --> 46:58.020
It has a whole bunch of built-in support.

46:58.020 --> 47:03.500
So if you have a handy, classic Unix tool, you just bypass that as a command line option.

47:03.500 --> 47:07.460
It'll ingest the output, it already knows how to parse it, and then give you JSON right

47:07.460 --> 47:08.460
out.

47:08.460 --> 47:09.460
Whoa.

47:09.460 --> 47:10.460
Okay.

47:10.460 --> 47:11.460
That is legitimately geeky cool.

47:11.460 --> 47:14.980
I mean, it's definitely a hack, but I think it's better than everyone rolling their own

47:14.980 --> 47:16.300
little parsers all the time.

47:16.300 --> 47:21.620
We can at least here have a sort of semi-standardized community to make sure they work well.

47:21.620 --> 47:24.780
Check out the link in the show notes if you want to visualize what Wes is talking about

47:24.780 --> 47:27.220
because they have some example outputs on there.

47:27.220 --> 47:30.420
This is one of those where people hear about this and they're like, huh, okay.

47:30.420 --> 47:34.000
And then one day they'll need it and they'll be like, what episode was it you guys talked

47:34.000 --> 47:39.020
about that had that JSON thing that now I need for some weird arbitrary reason that

47:39.020 --> 47:41.280
I never expected I would need?

47:41.280 --> 47:42.280
It's episode 341.

47:42.280 --> 47:47.660
So you can get those links at linuxunplug.com slash 341.

47:47.660 --> 47:52.600
If you'd like to send us a pic or send us some feedback like we just read, linuxunplug.com

47:52.600 --> 47:54.340
slash contact.

47:54.340 --> 47:55.340
Please do.

47:55.340 --> 47:56.860
I really liked that one.

47:56.860 --> 47:57.860
That was pretty good.

47:57.860 --> 48:01.020
And we'll have links to Timeshift and Richard's article and all the other things we talked

48:01.020 --> 48:02.580
about in those show notes too.

48:02.580 --> 48:06.300
And of course, those are found in your podcast catcher of choice.

48:06.300 --> 48:09.580
And if you haven't enjoyed our chapter markers yet, why not take a look?

48:09.580 --> 48:10.580
Yeah, give it a try.

48:10.580 --> 48:11.580
It's pretty nice.

48:11.580 --> 48:16.260
And it's also very easy to jump back to a topic if you ever need to.

48:16.260 --> 48:17.920
So those chapter markers are great.

48:17.920 --> 48:21.740
And we thank our great editors like Joe and Drew for making those possible.

48:21.740 --> 48:22.740
Thank you, Drew.

48:22.740 --> 48:23.740
You're very welcome.

48:23.740 --> 48:26.140
And of course, Joe, but he's not here.

48:26.140 --> 48:27.140
I don't think Joe.

48:27.140 --> 48:28.140
Come on.

48:28.140 --> 48:30.140
Gotta give him a hard time.

48:30.140 --> 48:31.140
All right.

48:31.140 --> 48:35.360
Well, hopefully everything will be back to our regularly scheduled Linux Unplugged program

48:35.360 --> 48:38.580
on our regular Tuesday day at noon Pacific.

48:38.580 --> 48:41.780
You can get that converted over at JupiterBroadcasting.com slash calendar.

48:41.780 --> 48:42.900
I'm at Chris Ellis.

48:42.900 --> 48:43.900
He's at Westpane.

48:43.900 --> 48:44.900
The show is at Linux Unplugged.

48:44.900 --> 49:11.660
See you next Tuesday.

49:14.900 --> 49:24.940
OK, I think I could use some advice kind of on topic, too, with what we've been talking

49:24.940 --> 49:25.940
about.

49:25.940 --> 49:26.940
Lay it on us.

49:26.940 --> 49:31.460
So I've got access for a limited time to Hedia's clinic machine.

49:31.460 --> 49:36.140
Like I said, this run, I think it's 1604, it's got to be.

49:36.140 --> 49:37.880
What do I do with this thing?

49:37.880 --> 49:42.540
Do I attempt to, say, replace like all of the repos that it's like the Telegram, PPA,

49:42.540 --> 49:45.380
the Chrome repo, there's several that aren't working.

49:45.380 --> 49:49.780
Do I spend the time to get all that working again, if it's even possible on 1604, and

49:49.780 --> 49:54.020
then just update it and she just stays on 1604 for a little bit longer?

49:54.020 --> 49:56.820
Or do I try to bring her up to 1804?

49:56.820 --> 50:01.740
Or do I just wait and just skip this window of opportunity and just take her straight

50:01.740 --> 50:04.620
to 2004 in maybe a month or two?

50:04.620 --> 50:06.220
Well, but the thing is, I don't...

50:06.220 --> 50:07.220
Can you wait that long?

50:07.220 --> 50:08.580
I don't know if I'll get access to it again.

50:08.580 --> 50:09.580
How risky is it?

50:09.580 --> 50:10.580
But what's it do?

50:10.580 --> 50:11.740
What's the use case for it?

50:11.740 --> 50:14.380
So what's it do and how risky is it are both really good questions.

50:14.380 --> 50:23.140
So what's it do right now is essentially just information input to web applications or some

50:23.140 --> 50:25.220
light printing and scanning.

50:25.220 --> 50:26.700
It doesn't do a lot.

50:26.700 --> 50:32.340
So it's been perfectly fine on 1604 with Unity 7 and all of that for ages.

50:32.340 --> 50:36.580
I think 1604 was a new release when I put it on there, which is crazy.

50:36.580 --> 50:37.580
Right.

50:37.580 --> 50:38.580
Wow.

50:38.580 --> 50:42.700
I haven't really been super motivated to throw it on the latest and greatest because they

50:42.700 --> 50:45.420
like Unity and it works.

50:45.420 --> 50:51.020
But things like Chrome and Telegram are yelling at her that they're going to stop working

50:51.020 --> 50:53.420
because they haven't been upgraded in so long.

50:53.420 --> 50:55.380
And those are kind of essential to the workflow.

50:55.380 --> 50:57.160
I know you guys have been playing with 2004.

50:57.160 --> 51:02.060
How crazy would it be to put her on like a development release considering we're kind

51:02.060 --> 51:03.420
of close?

51:03.420 --> 51:05.700
Is that out there and too wild?

51:05.700 --> 51:10.660
I don't know if I have like a really authoritative opinion on it yet, but my initial impressions

51:10.660 --> 51:15.740
have been the 2004 is close to daily drivable, if not there already.

51:15.740 --> 51:18.440
It seems like it's been pretty solid.

51:18.440 --> 51:22.060
But I've been mostly using the Maute version.

51:22.060 --> 51:27.940
So I don't know about the Gnome shell side of it, but I've heard from others that it's

51:27.940 --> 51:28.940
solid.

51:28.940 --> 51:33.580
My inclination would be to go ahead and document what all they have installed on there and

51:33.580 --> 51:40.980
actually use and then take them to like 1804 Maute.

51:40.980 --> 51:46.780
And when 2004 Maute comes around, it should be, if you find another upgrade window, it

51:46.780 --> 51:50.300
should be pretty easy to roll them up to 2004.

51:50.300 --> 51:51.900
But if I don't, no big deal.

51:51.900 --> 51:54.020
They're on 1804 and it's going to be supported for a while.

51:54.020 --> 51:55.020
Yeah, exactly.

51:55.020 --> 51:56.580
And I'd go ahead and enable live patch too.

51:56.580 --> 51:57.580
Yeah.

51:57.580 --> 51:58.580
Okay.

51:58.580 --> 51:59.580
Yeah, that's pretty solid, I think.

51:59.580 --> 52:01.060
And maybe make a backup before you get started.

52:01.060 --> 52:02.180
Put time shift on there.

52:02.180 --> 52:03.180
Seriously.

52:03.180 --> 52:04.180
Put time shift on there.

52:04.180 --> 52:05.740
I'm going to write a note.

52:05.740 --> 52:08.260
That's actually a really good use of it for her.

52:08.260 --> 52:12.420
That's a perfect use case example is this is a front office computer that they want

52:12.420 --> 52:15.940
to book appointments on and scan information into.

52:15.940 --> 52:19.220
And I've got to keep it up to date because it needs to be secure.

52:19.220 --> 52:20.700
But we can't have a break either.

52:20.700 --> 52:24.740
And that GUI, assuming they can at least get to the desktop, that GUI is totally usable

52:24.740 --> 52:25.740
by them.

52:25.740 --> 52:26.740
Yeah, it's very intuitive.

52:26.740 --> 52:33.620
I think that would be a much easier transition from Unity than, say, GNOME or even XFCE

52:33.620 --> 52:35.140
or Cinnamon.

52:35.140 --> 52:40.660
It's going to feel a little different, but not so much that they can't find what they

52:40.660 --> 52:41.660
need.

52:41.660 --> 52:42.660
Yeah, I could use that mutiny layout too.

52:42.660 --> 52:43.660
Yeah, could do.

52:43.660 --> 52:44.660
That pre-configured layout.

52:44.660 --> 52:45.660
Oh, that might be really nice.

52:45.660 --> 52:58.820
Thanks, guys.

