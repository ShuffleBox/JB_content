Well, this is gonna be a fun episode
because Brent's in studio.
Hello, Brent.
Oh, hello.
Nice to see you here.
Oh, so nice seeing you too.
We're getting ready to go down to Portland
for a Clear Linux event.
We are.
And enjoying ourselves pineapple cider.
I think we're just warming up at this point
for the trip, you know?
Yeah, that's right.
We're warming up for the show,
and then after the show,
we'll be like ready to go to Portland, yeah.
We're gonna need somebody to drive us, but.
Anybody, anybody?
I'm excited to have you here, Brent.
Thank you.
It's great to be back in studio,
typically the way it's worked previously
is a year's gap between that.
But now we're looking at,
this is, well, I haven't even been home
since the last time I've been here, so.
No, we were on the Friday stream
and I was like, Brent, come back, come back.
It's funny, because the whole story
is really captured in that Friday stream.
It really is, and I hesitated, I have to say.
But you called, you were here, you're here though.
You gotta pull those things off
when you get to get the chance.
When you get an opportunity.
Yeah, of course.
I'm glad you did.
We went out and bought brats.
Brats, they were at the front of line.
As they should be.
This is Linux Unplugged, episode 302 for May 21st, 2019.
Welcome into Linux Unplugged, your weekly Linux talk show.
My name is Chris.
And my name is Brent.
Hey there, Brent.
Well, hello.
Great to have you here.
That's good mean.
You already knew that though.
Aw, you know.
Well, you picked a good episode,
because we have, I don't know, man.
We have like staggering community news this week.
You and I were out and about when this news came in.
I was like, whoa, whoa, we're adding that to the show.
It's just breaking today as we're going on the air.
But there's also just some really great future stuff
that we're gonna talk about with Cassidy
from Elementary OS.
Couple of important things in housekeeping
I wanna talk to you guys about and get your feedback.
And then, after all of that, we're going Team Silverblue.
It's kind of like a Red Hat arc we've been having.
You know, we started with Fedora's release,
then we went to Red Hat Summit and Rell,
and now we're ending it with a look at Silverblue,
because Drew's joining us too.
Hello, Drew.
Hello, hello.
Drew took the plunge.
He's been rocking Silverblue for the past week and change
and been taking copious notes.
So he'll be joining us later on in the show
to chat about that.
Of course, Mr. Bacon's here too.
Hello, Cheesy.
Hey, guys.
How's it going?
Oh, good, good.
And hello, Alex.
Good to see you here as well.
I'm excited to get into the news this week.
Yes, there's a lot to...
So very quickly, I will say hello to the mumble room
to our virtual lug time.
Appropriate greetings to y'all.
Hello.
Hello.
Hi, there.
Hello, Bruce and Byte and Cassidy and Mini Mac
and Nerd Burner and the others that will join us
that never get called out as they filter in later
in the show because they're running late.
But a future hello to you.
Now, let's start with, I think,
what is probably the news that sort of shocked me
the most this week, and that is the Antergos project
has announced it's coming to an end.
Don't say it.
It's true.
Come on.
Yeah, this is really, really sad
because I know a lot of folks in our audience run it.
I ran it for a while.
They say over their run since they've been tracking,
which is about 2014, they had 931,439 unique downloads.
Today, they are announcing the end of the project
for existing Antergos users.
There's no need to worry.
They'll continue to receive updates directly from Arch,
and soon, Antergos will release an update
that will remove some of their specific repos
from your machine.
You are a daily Antergos driver.
You use it every single day.
I really am, and part of that reason is from JB
and all the recommendations that were coming in from that,
and I've loved it.
I've really loved it, and what I appreciated about Antergos,
or Antargos as it was called,
is that it made the whole process
of going through Arch really simple,
and so with seeing that go away,
I know there's some alternatives,
but with seeing that go away,
it makes me wonder a lot of questions.
I know, it's not that Manjaro isn't great,
and you do wonder if maybe the Manjaro competition here
is a bit of this.
They say they ran out of time.
Maybe there was too many options.
The thing that I really liked about it over other options
is it was essentially mainline Arch
with a couple of small changes,
like a couple of icon packages and whatnot
from their own repository,
but it was a great way to get a fairly base Arch desktop
with Gnome or Plasma or any desktop you really wanted.
They gave you an option right there,
and it was really, it was just,
gosh, it's good.
I mean, we're talking about it like it's gone.
I guess it'll still work for a little while.
Do we know a little bit more about what the main reason was
for the Switch or the decision, I suppose?
Only what they posted.
Dustin, Alex, and Gatsu posted on a blog over here about it,
and they talk about just,
if you've been paying attention to the project,
and I kind of noticed this myself,
like they really haven't been doing much recently,
and it's because they've been running out of time.
Right.
Yeah, well, time is a precious thing,
and sometimes it's a good thing
when you can decide that a project needs to switch
and to do it gracefully
instead of just kind of letting it die for a long time.
So I hope that this is accepted by the community
in a nice way,
and that the alternatives for current users,
if I'm gonna stay on this system,
which I love and I've had for a few years,
I hope it doesn't just degrade.
Does seem like a classy way to handle it, right, Cheez?
Oh, yeah, definitely.
And it seems like the way that they've kind of,
they're shutting down the project,
and they're pulling these packages,
but they're still leaving you a desktop to work from.
I mean, they're gracefully bowing out,
and they state that it really began as just a project,
a summer project seven years ago,
and grew into what it is.
And as people grow older and their time is more valuable,
they move on to other things.
So I'm very thankful that they've bowed out
the way that they have,
and they've allowed anyone to step up and take the plate,
and fork it and keep going with any of their hard work
that they've provided us.
Alex, does this mean we can't really trust
these small-time distributions?
Like, we have to stick with our Ubuntu,
Debian, Fedora world, and there are open SUSEs out there,
and things like Antigros or other small projects
are just too risky?
They just seem to come and go every couple of years.
They made it a few years.
I mean, to give them some credit, they did make it a while,
but at the end of the day,
it's like another small distro that's distro fading.
That's the nature of human effort though, isn't it?
Is that, like Chi said, as you grow older,
your time becomes more valuable,
and priorities change and everything changes in your life.
However, if we look at Google, right?
They like changing stuff, don't they?
And they're not a small-time thing.
So I'm not necessarily certain
that your assertion is accurate.
It might be fair in this case though.
However, another thing I'd like to say is that
installing Arch isn't that difficult.
So the value proposition of what Antergos
brought to the table was, I mean, I used it a lot.
So back in 2013, 14 sort of time,
I did a computer science masters,
and as part of that, I did a Linux desktop comparison
as part of my dissertation.
And I used the heck out of Antergos,
and I'm reveling in that pronunciation.
Might as well get it out while we can,
cause it's gonna be gone.
I used the heck out of it.
It was one of the most vanilla Linux distro
kind of presentations of multiple different
desktop environments that was out there at the time.
It really fulfilled that niche for me at that point,
very, very well, and I'm sad to see it go,
but at the same time I recognize
that nothing lasts forever.
Well said, and I agree also with Brent's point
about if they have to do it,
doing it in a graceful manner is the best way to do it.
Keep users' expectations.
They could've stretched the thing out for a year.
I mean, this could've taken them a year
to come clean about it. Or let it rot,
and just disappear without having an official path.
Your pride could get in the way
of coming clean on that kind of stuff.
What I appreciate about a small project like this
is just taking some risks to try to get it going,
and then okay, if it's not gonna work after a few years,
that's okay, we can be all right with that.
I think both you and Alex are convincing me
that it's worth the attempt.
Even if in the end you get four or six years in,
or three years in, and it distro fades.
In the meantime, if they're doing something innovative,
it's worth the attempt.
And I think I completely agree with that.
I'm glad they tried.
Yeah, did not all distributions start
with two guys in a living room,
or are a few people just trying to put some ideas together?
Well, Apple started out of a garage, didn't it?
You know, that's the famous one.
I thought they all did.
Yeah, I think that's the rumor.
They all do.
Hey, you know what?
Technically JB did, so.
All right, don't we all need garages?
Yeah, we do.
All right, so that's probably
the most upsetting news of the week.
So let's talk about something
that I'm excited about for the future.
And I made this a prediction on this show,
so I'm very thrilled that this is happening, obviously.
That's my bias up front.
But dark mode, all the things.
Not by force, but give the user option.
And I thought Cassidy nailed it in a post
that they posted on their Medium blog
about OS-wide dark styles.
And this is actually a,
this is a pretty complicated topic.
I was reading through your post, Cassidy,
and I was reading the part you touch on
and hear about research, and you say,
"'In my time contributing to elementary and GNOME,
I've become familiar with pleas from users
to implement official support for arbitrary themes.
While that itself is a large, controversial topic,
I've been working over the past few years
to better understand the why behind these requests.
In addition to listening to folks across the elementary,
pop OS, and GNOME issue trackers,
as well as social media, in-person hackfests,
meetups, and conferences,
I also decided to conduct a study
to see if I could identify patterns in the data
over 1,500 users of various OSes,
environments like Android, GNOME, Ubuntu, Mac OS,
and dozens more were participating in the survey,
which gave me a decent look into this group of users.
In summary, I found an overwhelming majority,
88% of respondents,
said they sometimes or always use a dark style
when given the choice,
and 81% of that group are using dark modes
to address factors outside their device,
like getting headaches, combining that with eye strain,
or just working in a dark office."
This research you did here seems fairly extensive, Cassidy.
Thanks, yeah.
Maybe a little obsessive about it,
but it's really important to get it right, I think.
It's really easy to say,
you know, of course you can use a dark theme today.
You just switch out your GTK theme,
and, you know, if apps are broken, they're broken.
Yeah, why doesn't a dark theme solve this?
Because, you know what, Cassidy,
I can install ArcDark,
and I can go tick a box in GNOME tweaks,
and I'm off to the races.
Yeah, and especially on platforms like elementary OS,
where we have developers
doing much more interesting custom styles,
that doesn't really work.
First of all, those developers
are targeting a specific style sheet,
like the elementary style sheet,
or in the case of GNOME apps, more commonly now,
they're targeting Adwaita for their custom styling.
And so when you, basically,
you're ripping the style sheet out from under that app
and replacing it with something that's inverted,
unless they've tested against that specific style sheet,
it's not gonna go well.
Yeah, the app doesn't know that you've just done that.
It's unaware that it's now on a dark canvas, right?
Exactly, and there's, of course,
there's APIs you can manually look at,
well, what is the background color?
What is the foreground color?
Does the theme end in dash dark?
Which is, all of those hacks exist in apps in GNOME today,
but they're hacks, they're not really a,
they don't really solve this issue in an elegant way,
and they also don't solve it for other toolkits
or big popular apps like Chrome and Firefox,
which today don't support dark mode on Linux,
but they do on Mac OS and on Windows now.
It seems like we also have a more comprehensive problem
we're just on the verge of, Android Q, Android 10,
big parts of their feature focus there
is their new dark mode, which also interestingly enough,
if you turn on battery saver now in Android Q,
it automatically turns on dark mode,
so there does seem to be maybe some power saving benefits,
especially if you have an OLED screen.
But like I say, it's more comprehensive than that.
So it's the applications, it's the system dialogues,
but in the future, it also could be the web browser
and the web page.
The website could be, I'm not sure
what the right terminology to use here,
because this hasn't really happened yet,
but the web browser and the website could communicate
to know if they're both using a dark theme
and display the dark theme by default
if your desktop is in dark mode.
Like it seems like it's a full stack issue
from the OS dialogues all the way up to the applications
and what the applications themselves are rendering.
So it has to be a solution
that is bigger than elementary OS, I think.
Do you agree?
Exactly, and that's why I published this post
and ended this study,
not just from the elementary perspective,
but from the known perspective and the cross desktop,
the free desktop perspective.
We had been working, I'd been working,
I guess I said in the post, you know,
kind of secretly for months on this, on a prototype
for supporting a dark mode in elementary OS.
But what I kept running into is it really doesn't work
unless it's a cross desktop effort.
You know, you can hack it on,
you can bolt it on on a GTK desktop like elementary OS,
but as soon as you open Firefox
and your web pages are all white, it really sucks.
Yeah, it's a blast of white in the face.
Yeah, and it's actually implemented today
on Mac OS now in Safari.
Their dark mode actually propagates out to the websites
and on Chrome, I believe Chrome Canary,
maybe Chrome Daily on Android, on Android Q,
you can enable it.
So you have, it follows your system-wide dark mode.
So it's sooner than later then.
Yeah, and as of Firefox 67,
it's also supported on Mac OS and Windows,
and there's a buried setting you can go change on Linux
to force it as well.
So it's happening across the entire industry.
It's not even just Linux, it's the entire industry
that's really shifting to say, you know what?
Dark style preference is really an accessibility feature.
It's something that users expect
and it's something that they're catering to.
Yeah, it just means I really nailed that prediction.
It's so great.
So moving from beyond that, it also seems like
if it's say a free desktop.org standard type thing,
then there is still a room for a distribution like yourself
that's building a whole platform
to still provide a lot of value
that's outside the standard potentially,
like really good documentation for developers
on how to use your whole toolkit in dark mode.
Those kinds of areas,
integration with your own applications,
with the app center, there's areas that
once there's a standard, you could kind of build
on top of it.
Exactly, so cross platform across toolkit,
there's just the baseline of, hey, this app
or this user has requested the app to use a dark style.
And that's just, that's it, that's where that ends.
But then on the distribution side,
there's things like making sure
that all of the included apps support this dark style,
that third-party developers are heavily encouraged
to support it, that you give them hints
on how color works differently in a dark style.
Maybe they use slightly desaturated colors
because it's less harsh against a darker background.
All of those types of issues are things
where we can step in as a distribution
and really make the experience really great.
Yeah, I could totally see that.
And I could see where you and Island Montreal OS
in particular would really exceed at that area.
So it seems like I've seen the prototype screenshots
which we'll have linked in the show notes
and it looks really good.
Now it's sort of like convince everybody else, right?
It looks like you're planning to go to Guadec
and try to get people talking about this.
Yeah, so I have a session at Guadec,
the free desktop dark style preference,
birds of a feather session, which is a mouthful.
Yeah.
But we're hoping to get people both within Gnome proper
and also just interested app developers
and free desktop people together in a room
to kind of hammer out the actual technical side of it.
I have basically an example specification
that could be adopted,
but it's not necessarily a cross desktop specification.
So I've also been reaching out to people from KDE
and XFCE and other desktops to see,
hey, if we were to do this cross desktop,
how would be, what would be a way
that we're all comfortable with?
And also keeping in mind technologies like Flatpak
where the way an app interacts with their system
is slightly different.
You can't just read and write to system settings
the same way you can with native non-containerized apps.
So there's a whole lot of pieces that have to come together,
but I really was, I'm really trying to show people,
hey, this is a thing we need to do.
It's an accessibility issue.
It's also something that users are gonna expect
more and more as other platforms are all adopting it.
Absolutely.
I'm really glad that you're reaching out too
to the other projects, because, you know,
obviously you're very GTK focused,
but the project has done a really good job in my opinion
of visiting the different camps
and sort of staying friendly with the entire community
and not really tribling down.
And so, you know, like your recent decision with Flatpak,
I know for a fact that people from elementary
attended a lot of canonical events
to get all the information to participate
in both sides of the discussion fully.
Like I witnessed that firsthand.
And I think you guys did that really well.
You have a great reputation for design.
So it seems like too, you're a project
that's already respected in this design area.
So you're positioned really well
from a design standpoint too,
like people respect your opinions on this stuff.
So I really think you got a shot here, Cassidy.
Yeah, I hope, I mean, we're always a fan of a co-operatition,
I guess is what we call it, where, you know,
we think we have the best desktop obviously,
cause we made it and we wouldn't be making it
if we didn't think it was the best.
But we're gonna work with everyone else
to help them, you know, realize their visions too.
And if there's shared effort,
it's gonna make everyone better.
Well, Cassidy, keep us posted on how it goes.
And if you wanna check out the post, go do so.
And is there a way for elementary OS users right now
to try out any of this?
Not super easily slash officially,
but if you do go to github.com slash elementary,
there's a projects tab there.
And one of those projects is called Dark Style Preference.
And you can kind of track the work there.
There's a bunch of in-progress branches
that might support this feature.
So if you get your hands dirty and start compiling stuff,
you can kind of see what's going on.
What do you think of this kind of thing, Cheese?
Because I know as a professional design application user,
your day-to-day applications,
almost all of them for years now have been dark themed.
Plus you just have the overall design differences
between designing for a web that's dark versus light,
applications, curious to get your perspectives on this.
Yeah, I mean, I think dark theming everything
is definitely happening.
It's gonna happen a lot sooner rather than later.
But I would say too that there is something to be said
about dark text on a white background too.
I mean, there is a reason that books are printed
the way they are.
But I really like what Cassidy's done here,
the research that he's done,
and providing this back to the community.
And I think it's something that is really something
that needs to be focused on going forward in future distros,
is that UI and UX done top-notch.
And that's to me is what elementary has seemed to have done
over the years.
And for them to iterate on that and put a dark theme,
I mean, I think it's just, it's gonna be great.
My body is ready.
Yeah, I'm ready to have it.
Cassidy, I would say I've been waiting for this for years,
doing all the photography stuff that I do.
The worst thing I experience
is doing a whole bunch of photography,
getting in the zone and then opening a webpage
or a spreadsheet and just bam.
But what I realized is that it changes my,
the ways my eyes adjust to the colors
and things on the monitor.
And so it takes me a little while for that to come back.
And it's sort of frustrating.
My mom says the same thing.
My mom is a professional graphic artist.
And one of the reasons she's very, very particular
about having her background one solid color
is because it does that same thing to her eyes.
It messes with her perception of it.
Yeah, absolutely.
But when an application comes and hits you in the face,
you don't really have a choice, do you?
Yeah, so hopefully we can get applications on board
and get desktop environments on board and fix that problem.
I just want it because I'm sitting in dark rooms
all the time.
Yeah, right.
Well, I think you're gonna see that 88% support
just be out there through everybody.
Well, that's pretty neat.
I'm looking forward to see where that goes.
I love the ideas as it's, you know,
here's a working example,
but also let's make this a free desktop standard.
It's cross toolkit.
I think it's brilliant.
And a link to information in the show notes.
I wanna move forward now to WireGuard.
Love it, love it, love it.
It's really great.
WireGuard is a beautiful novel VPN technology
that we've been talking about and texting up
for a little bit now.
We've covered a little bit in this show,
but it's great because it's a VPN as fast as it takes
to bring up a network interface on your box.
However, it does require you do some command line fiddling
and nothing too bad, you know.
If your old humble podcaster here can do it,
you can probably do it if you follow some directions,
but you won't need to very soon.
Native WireGuard support is coming in Network Manager 1.16.
It has landed and it is beautiful.
So Network Manager just provides a defacto standard API
for configuring networking on the host.
The other thing that's really nice about this
is you get a lot of other features besides
just a basic WireGuard tunnel setup.
You get some DNS configuration and firewall D,
which is set up in a consistent manner.
So your traffic's getting routed properly.
Your name resolution is getting routed properly
and it's all done from the nice, comfortable GUI
of Network Manager.
This to me feels like such a gift.
I've been interested in WireGuard for a long time,
which I think probably everybody should be.
But I, unlike the Wes, I don't have the technical skills
necessarily to feel really cozy about it.
I've read it over and over and over
and I've wanted to implement this,
but just haven't quite felt comfy about it.
And I'm really hoping this makes the difference.
I was hoping I could point you at the last episode
of TechSnap because Jim and Wes did a fantastic job
breaking down some of the stigma around WireGuard.
So maybe Brent, have a listen to that
and maybe you'll feel like you don't need to be quite
so much of a command line ninja to pull it off.
Yeah, I've been getting a lot of good feedback
about that last episode of TechSnap.
If you haven't checked out TechSnap recently,
that might be a good one to go catch
because I've gotten several comments
saying it was a pretty good one.
Do you agree, Alex?
Yep, I do.
Jim in particular just has this great way
of breaking down, he's like the new version of Alan.
He breaks down a complex topic and distills it
to the points you actually need to understand
and then communicates it in a simple way.
Yeah, it was great meeting Jim at LinuxFest Northwest.
Okay, so we've been talking a little bit
about Project Stadia and I think the big takeaway
from all of the Linux media coverage was,
well, it could be good for Linux.
It could be good for Linux because it's gonna be
using Falcon and the servers are gonna be running Linux,
right, that's been the coverage and it was a gamble.
We weren't sure if that was the case.
Well, this week, we've gotten some evidence
that it is very much the case.
Now again, anecdotal, but this seems like strong evidence
that Stadia, which is Google's game streaming platform
that runs Linux, will benefit desktop Linux gaming
and here's perhaps why.
At GDC 2019, in one of the developer sessions,
up on stage was a developer from id Software
who was responsible for porting Doom,
because why not, you know, it's the acid test, right?
Porting Doom over to Stadia and he talks about
the base setup they did to get ready to do the porting
and I think some of this setup might sound familiar.
As I mentioned before, we had gotten Doom 2016
running on vanilla Ubuntu.
We actually used this as a stepping stone
to get onto Stadia itself and it's an easy approach
for you to take to start experimenting
with the various technologies involved.
We always recommend that you simply engage
with Google directly, but this is an easy way
to evaluate technologies if that is preferred.
What we did is we developed our own spec
in which we took, for the software side of things,
we took a vanilla Ubuntu 1804 image
with Clang 6 as the compile tool chain.
You'll want to develop against Vulkan, Pulse Audio,
and then for the hardware you can use,
sorry, for the hardware you can build a box
comprising an Intel processor with eight threads,
an AMD Vega 10 GPU with eight gigs of VRAM,
eight to 16 gigs of system memory,
and an SSD-like storage device.
Not too surprising because there's been
a lot of speculation, but that detail there
that the GPU they're targeting is the AMD Vega
is also very exciting because it's just likely
to just battle test the hell out of that software stack,
and that has a lot of good ramifications
for desktop Linux too.
That seems like a good indication
that at least for some folks, they're demoing or testing,
they're gonna use Linux to try it out,
and if that means they have to get their build on Linux,
it's not gonna be that big of a leap
to go from that to fixing it up and shipping it.
It is a leap, I grant that.
They're not moving mountains to make that happen.
Like they've already ported it and got it working on Stadia,
and they must have it at least somewhat reliable on Linux.
So to just then go, well, now let's package it up
and sell it on Steam, that doesn't seem crazy.
That seems reasonable.
So I think this could actually,
I think the Stadia crap, if it's successful,
I'm sorry, I think the Stadia project, if it's successful,
could be really good for desktop Linux.
Not that that's all I care about.
I don't know, anybody wanna push back
and tell me I'm being crazy there?
But I think that's a good sign, right?
We can't trust Google for this thing
to stick around, though, can we?
I know, I know, but even if it sticks around
for three years, you're gonna have, what,
a dozen different game makers try to get their games
to work on Linux?
Well, that's true.
And Vulkan, too, and the AMD Vega graphics stack.
And maybe that's what's needed
to just break that barrier of entry
or the thought that there's this uphill climb to take on.
This seems really crazy.
I'm just trying to picture explaining the story
to a 10-year version of me, like 10 years ago,
trying to explain the story,
and his mind would just be like, what, no,
this isn't possible.
I thought you were gonna say 10 years in the future
when everything's running on Linux.
Oh, yeah, of course, of course.
It's the air of the Linux desktop, Brent.
Oh, I'm feeling it every year, every year.
The bell's getting some use today, guys.
It's been a while.
I definitely think that there's an issue.
There's a deal there, too, with the reliability,
like Alex said, of Stadia being around
in another seven years, and then you've got gamers
that invested multiple hours into a game,
and Google kills its service.
That's gonna upset a lot of people.
That's no different to a PlayStation game now, though.
I have progress on GTA 5 on the PlayStation
that I've literally had to bring across the ocean with me
so I wouldn't lose it.
It's the same vendor lock-in.
True.
The thing that I think is really going to be good about it
is it's going to get more people using Vulkan.
Even if Google goes away once people start targeting Vulkan
and say, well, this isn't too much different
from, say, DirectX and its cross-platform,
maybe we'll see much more adoption of Vulkan,
not just if this project leaves, but forever more.
Well, that's my point, Drew, is if they get two,
three years down the road with this thing,
then dev shops will set up a tool chain
and a software workflow based around this technology stack,
and they're gonna be all in.
They're not gonna, like if Stadia goes away,
they're not gonna be like, well, throw away
all these computers.
Best case scenario is the next Xbox or PlayStation
is based around Vulkan because of this.
I wouldn't be too surprised if the next console
uses streaming in a heavy way.
Maybe like all backwards compatibility
is via streaming or something like that.
I could definitely see that.
You could see them just virtualizing those things
and then streaming it.
I feel like Sony has already talked about that
with the PlayStation 5.
I'm not 100% on that, but I do feel like I read that
somewhere.
Okay, that wouldn't surprise me.
All right, well, some important things
in housekeeping this week.
So we're rolling out a Joe Rez original
for the background music.
You like this?
I'm grooving already.
I'm dancing in this west chair here.
Yeah, I know, right?
You can tell it's kind of a Joe original, too.
It's great.
I love it.
So I have tried to put together,
although I have failed miserably.
I'll see if I can put one in the show notes.
I've been doing PC part picker.
You ever done this before?
I don't know what this is.
Really?
Oh, it's really kind of cool.
You should check it out.
So you go through here and people will spec out
different PC builds and they'll save them.
And so I went in and I built a Ryzen AMD build
for my son Dylan.
I'm thinking after school, after school gets out,
in the summer we do a little build project
and do an AMD system top to bottom to replace his laptop.
That's an amazing learning opportunity for him, I think.
Yeah, last week I was asking about laptops,
but then I thought about it more.
It's like a desktop is really what he needs.
And so I was wondering if the audience had any suggestions,
if they wanted to send me some PC part picker links
at Chris LAS or hit me up on Telegram at Chris LAS.
And there's the Jupyter broadcasting Telegram link
at the top of the JB website.
I got a couple different builds I've done.
It's like around 800 bucks,
so it's not like the cheapest machine.
I'll try to get a link to it in the show notes
so people can review it and tell me what I've done wrong.
Cause I think like the one thing is like,
I'm not sure about the storage or the RAM.
That's tricky, but it's all AMD top to bottom
and it looks like it'd be Linux compatible.
And it's just going to be a gaming rig for him, right?
Yeah, I mean, it's his desktop,
so he'll do schoolwork too, but mostly it's for gaming.
Right, so, and you've got the 2600, 2600X?
Oh yeah, you can see it.
Can you see it there in the link
that I put in the show notes?
I don't think that it's in the link,
but there are some stats, some specs that you put in there.
That's a pretty good setup.
I would bump the RAM to 16.
I did, so I, well actually I bumped it to 32
and I put a Radeon RX 580 in there.
And then I put a 930 gig Samsung
and then I put a one terabyte spinning rust
for like large, long-term game storage and stuff.
That much storage, why wouldn't you just wait
till it got cheaper in a year or two
and then upgrade it?
Maybe, yeah.
You can get a one terabyte SSD for about 90 to $100 now.
And I know a spinning rust is half that price,
but an SSD versus a spinning rust
is a heck of a difference to usability, isn't it?
Yeah, oh yeah.
Well, I had an SSD in there for his OS drive.
You're right, OneDrive.
Anyways, I'd like to get people's part lists,
get their own suggestions,
and then I'm gonna, I'll follow up on the show
and I'll build it.
It's gonna be a lot of fun.
Be Dylan's first home-built Linux rig?
No.
No.
For what it's worth.
Yeah, he doesn't know yet.
This is almost exactly my computer,
except I've got 16 gigs.
And I've got three SSDs in there
instead of one big one.
How's the GNU slash Linux compatibility?
Perfect.
Perfect, those are bold words, Drew.
Perfect.
Those are, cause I'm looking for zero IT overhead here.
I'm gonna put elementary OS on it,
and then I'm just gonna let them run it for years again.
Well, so the thing about an AMD GPU these days
is it's built into the kernel.
So there's nothing proprietary to install,
so it just works.
It's fabulous.
That's what I was thinking.
And it does.
It just works.
Mm-hmm.
All right, well, I'll follow up.
And I'll let you know what the audience suggests too.
I'd like a range.
I'd say that the max is 1500.
So, and that'd be really high end,
but I'd like to see a range of devices people recommend.
And Linux compatibility is top.
And then gaming.
And you know, Samsung, for their SSDs,
they even have a utility to upgrade the firmware
in Linux from the CLI.
All right, so that's my personal thing in housekeeping.
Moving on, we were just talking
about free desktop standards.
The guys are gonna have a much deeper conversation
in user error.show.
Even, you know what,
just not even for the free desktop standard stuff.
Just go there.
It is such a good show.
It is such a good show.
It's hosted by Joe Rezington, Alan Pope, and Daniel Foray.
And I love it.
It's my, like, as soon as it's out,
I listen to it immediately.
Episode 66 comes out this Friday.
Then the show that is one train wreck after another,
it's the Friday stream.
This is a way for you to come say hi,
hang out with us, and meet us.
We wanna do more things with our community.
We wanted an opportunity to stream and do live chats,
have people join us.
Brent, you've been joining every episode?
I think so far? Ever since the start,
even from various pubs near you.
Yep, yep.
Yeah, that's right.
That's right.
That's when we got the,
was that when we heard the squirrel story?
That was Andrew's.
No, squirrel was what?
Was that last week? Okay, okay.
If you listen to the Friday stream,
you know why Brent's here right now already.
That's what it is.
It's like there's a lot going on.
We have a big crew.
And it's a chance to hear from people
that are often in this show in a different context.
If that interests you at all,
come check out the Friday stream, fridaystream.com.
What I love too is a giant mash of ideas
that otherwise on certain other shows
don't have the space for, which is really great.
Yeah, you know, you've seen behind the curtain
of some of the stuff we're playing with.
We've got some ideas.
Just around the corner,
Texas Linux Fest, May 31st to June 1st.
Cheesy Alex and I will be at Texas Linux Fest
along with Elle.
Come say hi to us.
We have a meetup too down there, like a dinner.
Yep, come get some barbecue.
Meetup.com slash Jupiter Broadcasting
as well as information about
our next Kubernetes study group over there.
And I'm gonna just say this.
I don't know if, don't tell them I told you this, okay?
If you become a Community Edition member
over at Linux Academy,
there may be an opportunity to upgrade that account
at a really good deal.
I'm gonna put that out there.
It's kind of a secret.
I don't wanna say anything.
And they've recently added the Community Edition
to the Linux Academy mobile app.
So you can grab the mobile app
and get access to the free community content.
Now that's the content that Elle and I curate
every single month.
And there's a lot of really good stuff
that she and I have been putting in there.
She's got a good head for what should go in there, really.
So it's more like I say, good idea Elle.
That's really my involvement.
Um,
but she's good at it.
And that's available now for free.
And the app's free.
You can get into the Community Edition for free.
And then if you decide to get,
you know, upgrade to like all of the stuff,
there might be a promo in there.
I can't say.
This is so great.
I would totally grab this.
Like for example, when I took the train down here.
Yes.
You can do it on your mobile
instead of having to take out something like the laptop.
You can also cache the videos offline and stuff.
So.
Now you're talking.
Yeah, if you want.
For us out of country travelers.
It's nice, isn't it?
It is.
Go check it out.
We'll have links in the show notes.
And that my friends is the housekeeping.
So Silverblue is an interesting beast.
And it promises, I would say,
what seemed like an impossible stable workstation, Drew.
And so that's why we've been talking about it
behind the scenes.
Seems like it could have, you know,
long-term great use in the studio.
There could be all kinds of production purposes
for an OS like Silverblue.
Is there like a newbie way you could explain
what the draw is to Silverblue above regular Fedora?
Okay.
So Silverblue is following on the heels of Project Atomic.
And I love the idea of immutable file systems
where basically your root is mounted read-only.
So anytime that you go to do an upgrade,
it builds a whole image and then you reboot into that image.
That's kind of the high level view of
this is what Silverblue is doing
and this is how it remains stable.
And the advantage to that would be something goes haywire,
you could boot back into the previous image
and you're exactly right back where you left off.
Correct.
So if an upgrade goes horribly wrong,
you just reboot and in your boot menu,
just drop back to the last version,
boot up, you're right where you were
before you did that upgrade.
No need to go in and do an LVM snapshot rollback
or anything like that.
You're just, you're right there with minimal downtime
trying to fix the issue.
I have a layman's question about this.
If you're updating just like, let's say one piece of salt,
you get a new, I don't know,
a new version of Audacity coming in and you update,
does that mean you have to do a reboot every time
or how does that work out?
Depends on how you installed it.
So the whole thing is it's trying to push people
into using flat packs more for their standard applications
rather than installing directly into the OS.
If you have Audacity installed as a flat pack,
which yes, there is a flat pack for it,
then no, it just upgrades automatically in the background,
no need to reboot or anything.
However, if you're using RPM OS tree to slip that
into the image, then yes, you would need to reboot
for every application update.
Is the idea a clear wall between your base operating system
and your applications?
In fact, so much so, I think by default,
doesn't Silverblue even lack DNF?
It does lack DNF and you're not going to put it on
the base image.
Oh, really? No.
Really, okay.
If you want to use DNF to say search for package
because RPM dash OS tree does not have a search feature
that I found yet.
Womp, womp.
What you do is you use this thing called toolbox
and toolbox is really, really cool.
What you do is you use the toolbox command
to create an OCI container,
which then has a full Fedora 30 base image.
It's a minimal image, but it's a base image
as an OCI container that you then enter into that toolbox
and you can do things like install DNF,
install applications, including graphical applications,
and it does have by default access to your home directory,
which is great.
So you can do something like install Audacity in a toolbox,
launch it there, and then you can do your DNF upgrades
in that OCI container and have your stable base
stay the same.
In theory, could you also install your own versions of,
you can install FFmpeg and other things
in that same toolbox and Audacity could see it?
Like VST plugins, could you stash those in there?
Yes.
Now, that's kind of where it fell down for me though,
is I thought, okay, well, what if I make an audio container?
It has all of my audio stuff.
It has my VSTs. Right, right, sure.
It has LinVST to let me use my Windows only VSTs.
It's got wine in there.
It's ready to go.
I got everything set up.
I got Reaper installed.
It launched.
I had the graphical interface and no connection
to the audio system.
You can't see any of the sound devices.
Right, sad trombone there.
So that didn't last long.
And this was after I put it on bare metal
because I wanted to play with it.
I wanted to see how well it worked on bare metal.
And it works great except for those little fringe cases.
Now, it's clearly meant for developers, right,
for people who want to, say, launch this OCI container
with Python version whatever and program against that
because they know that that's what they have on their server
and they want to do their testing
in this particular container.
And then they want to see what happens when they upgrade it.
That's the sort of use case that they're really targeting.
General workstation use cases, it can be done.
But you've got to really be aware of what you're doing,
the fact that you're adding complexity to your upgrade
mechanisms because, say, you need to upgrade something
in an OCI container.
Well, you'll have to go into that container,
do the DNF upgrade from the command line, all of that.
So there's a lot more complexity that you're adding on top.
Per toolbox, you have to do that per container slash toolbox.
OK, so that could get to be a little much after a while.
It can.
But that's the trade-off for having
such a super stable base.
Now, you can go the other direction
and just do things in rpm-ostree and add them to the base image.
The problem you might face, which the developers are really
upfront about this, is if you add too much on top in their hybrid
application layer, you could end up
with a system that does not properly upgrade when
it comes time for Fedora 31.
And you don't really know until you've crossed a threshold.
Right.
It's never going to tell you, oh, hey, by the way,
your system is.
Yeah.
This particular library.
That sounds pretty risky to me.
Yeah.
Right.
So daily driver, not for me yet.
But I think if they keep working on it
and Toolbox gains more functionality
to be able to tie into maybe GNOME
software or something along those lines
where it can be more useful to supplant the hybrid application
layer, I think it has a real shot
at being an excellent workstation for regular users
and not just devs.
Interesting.
Now, putting on your IT hat, you must see some use cases too
as like enterprise-grade workstations.
I wonder, is it usable now for enterprise,
or would it require changes on the Silverblue team's part
to make it usable?
So here's the nice thing.
You can point the RPM-OS tree upgrade path wherever you want.
So say you're in an enterprise, and you've
deployed a bunch of these workstations,
even in VDI or something like that,
and you publish a new image with some upgrades
or some new applications for your employees
to take and use, what you can do is
you can point all of those at your image
locally on your servers and have them pull it.
And once they reboot, they're in that new image,
and they're working, and it's on a new image
that you've already tested and put it through its paces
and said, yes, this is ready for my employees
to use, which limits downtime for individual people
and issues that they might have.
That's really a huge benefit to something like this,
where you've got the stable base that is bit for bit
the same across deployments.
And it's also the same reason why
Debian and NixOS and other distributions
are targeting build reproducibility
is for this exact kind of thing.
Now, I think that it could be made better.
They could build some tooling around it
to tie into, say, LDAP, where you can automatically
spin up an instance in a VDI cluster
that people could log into.
Right, maybe some central storage,
like maybe make some provisions for quickly
mounting some NFS storage.
Exactly.
I think if they can really get that going,
then that would be a game changer for enterprise.
Yeah, you could really see the beauty in a VDI
or even just standard workstation setup,
where you combine it with LDAP for the authentication.
So that way you're not having to keep updating password files
and things like that.
It's all centralized.
Oh, man.
God, that would be a dream.
Well, I used to use a Citrix desktop, which
was a Windows-based system VDI thing.
And the applications on there were
delivered via a container.
So a lot of this stuff is already done in the Windows
space, bizarrely.
Yeah, any other thoughts on it, Drew?
I mean, this seems like it was a worthwhile experiment,
but ultimately, you're not sticking with it.
Right.
I'm not going to stick with it, just
because my particular workflow, working with media,
is not a use case that really is part of their spec.
And I don't expect it to be.
But right now, it does not work for me for what I need to do.
If I were wearing a sysadmin hat,
things would be different.
I would love this.
Yeah, that's what I was just thinking.
For what I'm doing, it doesn't quite fit the bill.
Now, speaking of the sysadmins again, though,
just to bring it back a little bit,
if they could put some tooling in that really ties this
together, you could start supplanting things
like Chef and Puppet for broad system control,
where that can be baked into the image,
and you don't need to run as many scripts
across multiple machines.
I could see that's where they're going.
It could still be really early days.
I mean, it's only been called Silverblue for a few months.
That's very true.
Yeah.
I think Atomic might have been a better name.
But hey, you know what?
We'll move on.
We'll move on from that.
Well, Drew, thank you for the roundup.
I've been very, very curious about it.
So I'm glad you had a chance to do a deep dive on that.
That was fascinating.
And I think we'll keep watching it and seeing
if there isn't a time, maybe an opportunity down the road,
to use it in something.
I could also really see it as just being a great host
for containers and VMs on the server.
That's another area beyond the workstation,
where it just seems like it could be a killer system.
We've got CoreOS for that one.
Don't forget.
That's true.
That's true.
CoreOS is really sort of the story there now.
And that's sort of when things changed.
And we went to Silverblue, really,
was after CoreOS came along.
Alex, I want to give you all of the credit
for one of the picks this week.
I did not even have it in my list.
I'd never even seen it until you suggested it to me.
Full disclosure, audience, prepare yourselves.
Get ready.
I have to tell something to Brent in private.
So just give me a moment.
I'm sorry.
You won't be able to hear this.
The cone of silence.
Ooh.
Hey, Brent.
Yeah, Chris?
They can't hear us, so don't worry about it.
I am.
So I got a really good app pick this week.
Really?
Where'd you find it?
It was Alex told me about it.
The issue is, though, it's on an Electron app.
It's a what?
It's an Electron app.
You think I should tell them about it?
You know, that's a little risky, I think.
All right, you got my back on this?
I'm with you.
All right.
The cone of silence.
All right, well, sorry.
We're back now.
The app pick this week is called MineTime.
It's a calendar for the 21st century.
And it's, I think, the best calendar application
I've ever used.
Alex, how the hell did you find this?
And why didn't you tell me about this sooner?
I hate you.
I had to try and find a way to get calendars for work
and at home in sync, because Android's just rolled out
a new feature, or it's just been presented to me
a new feature that you can have different profiles
on your device for work and home.
So it installs Gmail and the Calendar app
on your Android device into a container.
The downside of that is it means that I can no longer
see my home calendar and my work calendar in the same place.
Right.
So I was looking for a way to try and synchronize things
with Nextcloud, with CalDAV, to try and get it all in one
place again.
And I just searched for Linux CalDAV calendar,
and this MineTime thing came up.
And I've been searching for the longest time
for an iCal replacement.
I think the Apple Calendar application is possibly
my favorite way of just viewing events.
The UI is clean.
Adding new events is simple.
And it's just really customizable.
I can tell it that I want 15 hours viewable in a day,
for example.
And it just basically looks like a polished version
in Electron of Apple's iCal.
It also is a fairly snappy Electron application.
I wasn't 100% sure it was even Electron.
It wasn't smelling real bad or anything like that.
It didn't have a code stink.
It launched pretty good, doesn't use a ton of memory.
And sure enough, if it doesn't work great
with the different hosted calendars I have.
And I've really been recently struggling with this
because Linux Academy uses Google Apps.
I have my own personal stuff.
And I have the JB stuff.
And it's been a real struggle for me
because I don't really like Lightning.
I don't like the way Evolution does it.
I haven't really taken to any particular calendaring
application.
And so what I've been doing like a monster
is I've been just natifying the Google Calendar
for different calendars and just having
three different natifier applications running
on my desktop like a caveman, right?
I mean, this is horrible, think about this.
So I could have those different calendar stuff.
And then Alex comes around with this mindtime.ai application.
And Bob's your uncle.
I've got it all in one application.
But here's another thing it does,
which you did not even tell me about, but is quite impressive,
is it gives you a fascinating analysis of how
you spend your time and who you spend your meetings with,
who initiates the meetings.
That might be dangerous.
Oh, yeah.
Boy, is it sometimes fuel for a righteous fire
that I can have, let me tell you.
But it's so great because now I have
visuals of how much of my time per week is spent in meetings.
And it's, let's just say, vindicating.
Let's just put it that way.
And it tells you who the worst offenders
are for scheduling meetings.
So my boss is right at the top of the list.
Yeah, yeah.
Mindtime also has, like, they call an assistant.
But a lot of other really nice calendar applications
have this, where it just understands natural language.
So you just say, go to Portland with Brent on Wednesday.
And it processes all of that.
It says, well, he must mean the next Wednesday.
And he must mean Brent from his contacts.
And so it just figures all of that out
and then puts it on your calendar
right at the right time.
And you can just do a brain dump right into a text field.
You mean in English?
Yeah.
Isn't that right?
Yeah, the computer has to adapt to you.
And then it also provides some smart scheduling,
which is really, really nice.
It'll try to analyze your schedule.
And it'll look at other people's schedules.
And it'll make group scheduling simple and easier
and recommend the times that have worked best for you
in the past.
It's a nice, it's an electron application, like I said.
But that means it is also cross-platform.
And it's probably one of the better electron applications
that I've seen.
Could I highlight their data policy?
Yes, please.
As a research project, Mindtime is
financed by ETH Zurich, a Swiss innovation agency.
We take data protection seriously.
We will never sell your data.
These technologies are developed and released for free
and can be used by everybody for non-commercial purposes.
That's pretty clear, don't you?
Thank you, Alex.
Yeah, I think that's a good thing to point out.
So Alex, I was literally, last evening,
I was literally looking for something like this
because I'm sharing a few calendars with some people who
only do the Googles and stuff like that.
And it's almost like you were listening into my mind
and you've solved my problem for me in about 15 hours.
So kudos to you.
I was looking recently, and this did not come up.
Well, you're not looking in the right places.
Just need to ask Alex.
It's fairly new, right?
So I don't know when it exactly was released,
but it's a new entrance into the 21st century calendar
landscape.
Well, check out Mindtime.
We will have a link in the show notes, as always,
at linuxunplug.com slash 302 or in your podcast player.
Now, since we did an Electron application,
I want to clear the decks with a good old classic desktop
Linux application.
The good stuff just keeps on getting better.
Now, if you've been rocking a rolling release Linux distro,
you may already be enjoying this goodness.
But if you are on Ubuntu 18.04 or 19.04,
it turns out you may be running a slightly older
version of Quake that is the world's best
drop-down terminal.
Have you had the pleasure of a drop-down terminal?
Oh, I have.
So I am an old Quake game user.
Yes, yes.
So I was first familiar with the drop-down terminals
where its origin.
That's where it's from.
And it was great.
That's why I keep it to the tilde key, too.
That's why I still use the tilde key.
Classic.
One tilde key away from a terminal.
Man, it's so brilliant.
Well, Quake has, and something I have not
been able to really enjoy until I just went ahead
and slapped a PPA on my system, Quake
has added a bunch of great features.
And one of them that I just want to take a moment
and highlight recently, if you're using an older version,
first of all, you need to upgrade.
Second of all, split terminal functionality.
Now, let me take a moment here and tell you
about how this will change your life.
So you got a tilde key.
You're one tilde key away.
Boom, your terminal drops down, right?
So now you can split this sucker horizontally, vertically,
however you want it.
Let me tell you how I do it.
So I've got one large terminal on the left-hand side.
That's my free terminal, always available.
As soon as I need to do something, I got a terminal.
And then on the right side, the right half
of the drop-down terminal, I've got
three different terminal areas.
They're all vertical breaks on this horizontal panel.
And in there are all of those weird esoteric command line
applications that I need to run that I
go start on the command line for some reason
that I don't really need them until the time comes.
So I just go run them manually.
And then I like to watch their output on the command line
because that's how I get feedback
of what they're doing.
I stash those in the different panes.
And they're just why I always have the left-hand side always
available.
So I'm always a tilde key away from getting immediate feedback
on what my Usenet application is doing
or what that command line torrent application is doing
or any of that kind of stuff.
So I find that to be so useful just to have that.
And then one tilde key, and it's all gone.
And I'm right back to what I'm doing.
I just think it's great.
So Guake if you're on GNOME and Uake if you're on Plasma.
And they both are just fantastic.
And is this propagating to Uake?
I think Uake already has it, although I
don't remember for sure.
Because that's what I use daily.
And if not, if someone in the community in IRC
would just put a feature request there.
Open that thing up.
And then in the post show, you should tell us.
Well, maybe I will.
Because Uake's great too.
But now that I'm an XFCE user, I've been using Guake again.
You like that?
It's part of what makes the perfect XFCE desktop is
ULauncher and Guake.
You add those two applications, and you're 90% of the way
there.
Then you add the Arc theme to XFCE.
And then you're good.
You just sit back and wait for Cassidy and team
to make elementary OS and dark theme a thing.
They're going to do it.
Come on.
We're working on it.
I had a real XFCE problem today, Chris.
I'm so used to 10, 12 hours of battery life
that I just stopped packing my charger.
And I turned up at the office.
And nobody had a USB-C charger.
First world problem, eh?
And the value of this is negative.
You know what?
I really, really appreciate the battery life.
In fact, Brent is sitting here in the living room
at the studio.
And I'm like, Brent, watch this.
Watch this, Brent.
And I open up the laptop.
And boom.
You see how fast?
Did it wake up fast or what?
I was impressed.
It almost like it knew you were going to open the lid
and it woke itself up.
And that was after it had been there for like a day
and a half.
Just pow.
It's instant.
XFCE to the rescue.
It's impressive.
It took you.
You asked me.
You said, so how's it going?
And what don't you like about using XFCE right now?
And it took me.
I sat there and I thought about it for a minute.
And I realized what I'm not in love with right now
is the window management.
I did figure out how to stop applications that bring
a browser tab up from moving the browser from, say,
the first virtual to the fourth virtual desktop.
I figured out how to fix that.
But if anybody in the audience has tips on scripts
I can run that would restore my applications to their
positions and also restore my window screen layouts,
I'm still having the issue from time to time.
When I wake up from sleep, my windows are completely
jumbled, even though I've put everything
in the right display ports, I've made sure
like the primary displays and the right display
port and all of that, I still get things that move around.
Because I've got one regular monitor,
one 16 by nine regular monitor,
and then two vertical monitors.
And XFCE just has a hell of a time with that sometimes.
Sounds like you want to try out i3 next, Chris.
That is something I'm actually considering doing.
A lot of people have been recommending that to me.
It's definitely something I'm starting to consider
much more seriously right now.
I'm just still like in the XFCE zone.
But I gotta be honest, because I was so judgmental
about XFCE and discounted it for a long time,
I've now decided that, well, alright,
I need to also give i3 a shot,
because I've been sort of behaving the same way with i3.
So I'm getting there.
But in the meantime, if people have scripts
or hacks they have to like restore window layouts
and screen layouts for XFCE, let me know.
Because one of the things I'm really enjoying
is I can go find like a stack exchange post
or whatever from like two years ago,
and it's still applicable.
It's still applicable, it's the best thing ever.
It's so nice.
Like it just makes so much more of the documentation
online actually applicable,
because like XFCE for the last four years
has basically not changed much.
So if I find something from like the last four years,
I'm pretty much good.
It's a persistent documentation.
It's like what Windows users get.
It's true.
But in Windows, it's just because nothing changes.
Yeah, well, yeah, because it's super boring,
nothing changes, yeah, and nobody upgrades.
But it's the same thing.
All right, well, if anybody has,
this has been the Help Chris episode really.
If anybody, don't you think, help me build a PC for my son
and help me fix XFCE.
It's not that I3 wouldn't work for me either, I think.
So it may happen.
You know, some of these pics are helping me with problems
I didn't even realize I had.
Oh, yeah?
Are you trying to wake out already?
Yeah, I have to say, I haven't figured it out yet, so.
What if you right click in the middle of the terminal?
Oh, hey, now, that seems too obvious.
So go over there and drop that terminal down.
So I'm a control tilde, just saying.
Oh, yeah, well.
Because I got nothing on the right click.
Plasma already assigned something
to the tilde by default.
Really, nothing?
No, not even like adjust your profile?
Oh, split left, right, split top, bottom.
You just got to know where to right click.
Yeah, there you go.
Yeah, I figured.
That's how all Plasma software is.
It already does.
You just got to find it.
Well, it's all a learning journey, right?
Especially with Plasma.
Yeah.
All right, Brent, well, thanks for filling in
on Mr. Paint's seat.
Thanks for being here.
This is a great seat.
And we have missed Mr. West.
Yeah, we have.
Hey, Wes, how are you doing out there in Barcelona?
Bubble worries.
What was that?
Bubble worries.
Oh, bubble worries, OK.
Yeah, he's out in Barcelona right now at Kubicon with Elle.
So I'm sure they're doing OK.
I think it's like 3 AM there right now.
I would imagine they're partying at this point.
I hope they're sleeping, to be honest with you.
Because they've got to get back here,
and they've got to get back on mic.
So anyways, this show will be live next Tuesday.
I think Mr. Paint will be back, assuming he's not
too jet-lagged.
You can get it converted to your local time
at jupitabroadcasting.com calendar.
LinuxUnplugged.com for our website.
See you next Tuesday.
I'll talk to you then.
Holy smokes! Look at this, Wes Payne on the remote line. Wes, I can't believe you're here.
Shocker.
Hey buddy, so how are you feeling? Give me just like the quick elevator review
of how Kubicons gone so far.
It's like the most boring rave I've ever been to.
Really? Wow. Well, can I ask you something? Do you think,
do you feel like it's something that regular people would want to go to?
Could anybody do it, Wes? Could anybody be like you and go to Kubicons?
It turns out if you try hard enough, you can.
Well, there you go. Wes, thank you so much for being here. See you later, buddy.
But we'll, but we'll raise.
Yeah. See you later.
So nice to hear from him.
Yeah, it really was.
Good guy.
What a champ showing up at 3 AM, huh?
I know.
He's so dedicated.
All right. Let's go pick our title. JBtitles.com. So Bruce, are you, are you still over there?
Are you still 3D printing?
I sure am. The lizards are still squealing.
Oh, they really are.
Screaming salamanders.
That is funny. Yeah. So if you, if you hear something in the background,
when Bruce talks, it sounds like a thousand salamanders being strangled.
He's 3D printing what right now, Bruce?
So I've got this show thing coming up. So I'm printing things that I hope will be
interesting to people. So right now I'm doing a, what's called a self-watering flower pot.
Oh, that is right. That is so cool. How is this self-watering flower pot?
This one's pretty basic. It's just, it's got a, an inner cone, basically with a perforated cone
inside that you plant the plant in that goes inside a bigger reservoir thing that you can water from
the side that, you know, you can fill it with water without having to pour it right in the dirt.
It's supposed to just draw water up as it needs it.
And Bruce, can we get a clean salamander screaming sound here? Just an open mic.
Yeah. It truly sounds like a torture chamber there for a second. Did you hear that?
Well, it's the sound of the stepper motor singing. So actually some people use the,
they use like, you just, you know how you had the people who did the floppy drives
doing songs and stuff like that? So they do, they could do the same thing with 3D printers.
They can program the three motors on them to do harmonies and stuff like that.
So if I was ever like torturing lizards in the background while doing a show,
I could just say I was 3D printing and people wouldn't know any better.
What kind of 3D printer is it?
It's actually interesting that I've been looking for, I've had a little one for a while and 3D
prints are typically, you know, fairly expensive, usually over four figures to get one. And I walked
into a computer store and found this guy, which is a pretty standard size for 3D printers, which is
a 20 by 20 centimeter bed. And it was only 300 and some odd dollars.
And then do you load everything onto an SD card or a USB thumb and pop that sucker in there? Or
is it actually hooked up to a machine?
This particular one can do both.
How are you doing it though?
I'm doing it from the computer and that's because I want to be able to click on the screen and move
the head around for things like if I want to move the head out of the way for taking things off the
bed or stuff like that.
I've never installed GNU slash Linux.
Is that working on GNU slash Linux?
Absolutely. I wouldn't do it if it didn't.
I love that answer.
Hey, Bruce, I have a quick question for you. Have you discovered OctoPrint yet?
I know about it. I haven't gone to that level yet, but it's probably in my future. I have a
couple of other... I have a RepRap 3D printer, which just needs a new part that belongs to the
makerspace that I'm part of. And another little guy that's only 100 by 100 millimeter that I think
I probably will end up putting Octopi on when we get our physical makerspace set up.
And Bruce, I have a question as well. How many salamanders do you have to feed it per hour
to get to the output that you're looking for?
It's measured by millimeters of PLA, so it depends on what you're printing.
Of course, right, obviously. Well, it's really exciting here that you're setting up a makerspace.
How far along is that?
Well, a lot of the preparation is done. It's just a matter of... We've got a local space that's
probably about 15,000 square feet that we're dealing with the current owner that is probably
going to give us a sweet deal on it because it's community based and that sort of thing.
So we're probably within a week or two of getting the signature and then moving in.
It's going to be fantastic.
Congratulations. Will you please keep us updated? That's really awesome.
I love to follow that kind of stuff. Can I ask where you are?
Barrie, Ontario, which is an hour north of Toronto and three hours south east of Brent.
Yeah.
Oh, that's a nice reference. So I have given some talks at a makerspace in Sudbury and I would...
And actually when I was in Cranbrook recently at the coworking space, I was doing the podcasting
out of, they were saying, hey, we're just putting up a makerspace. So this is an area that I'm
pretty interested in. And so with my having travels through Barrie often,
I would love to come see this space once you get it up and running.
I've been thinking for a while and I've kind of put it out there a couple of times in the
chat room and stuff is that I think JB would do well with having some sort of a maker kind of
podcast. But of course, another thing on your plate is not... I mean, I would love to be part
of it, but time and stuff like that. I'm the kind of guy who can talk, but I've got four kids and
a makerspace to do, but I would like to be part of it. It might be something we can put together.
Well, we'll talk more. Let's keep talking and yeah, maybe we'll get Brent out there
sometime. He can be our on the scene reporter and maybe we'll get going. Maybe something
will get rolling because I do want to do a makers podcast in the future. Well,
good luck Bruce and make sure those salamanders meet their doom.
I'm keeping this puppy running as fast as often as I can.
Bruce, I would say hit me up in like Telegram or something, but I'd love to come down and
take a few photos for you if you need that kind of thing. I'll get you some extra assets.
Yeah, media and promotion and all that kind of stuff is definitely valuable.
Yeah, no kidding. It's a great idea, Brent.
