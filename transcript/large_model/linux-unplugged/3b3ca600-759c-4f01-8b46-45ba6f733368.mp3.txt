I do have a pre-show topic that I thought maybe we could talk about.
Have you guys, anybody in here been to Microsoft's website recently today?
Because they got a new page up we can talk about.
Why Microsoft is better than Linux.
Microsoft versus Linux.
Not Windows versus Red Hat Enterprise, Linux, no no, Microsoft versus Linux.
Have you seen this?
It's a comparison page.
Awesome.
What's the page?
Microsoft.com?
No, why Microsoft.com.
Go to why Microsoft.com.
How great.
Look at this.
Did you know that Windows has a lower total cost of ownership?
Greater flexibility.
Did you know that being closed source gives you greater flexibility with Windows?
And you can have the sequel edge when you're using Windows.
And here's a good one.
So they got the Microsoft column on the left and the Linux column on the right.
Under the Microsoft column, you need to be future proofed for the cloud with Microsoft.
Again, not Windows, which I think is fascinating.
With Microsoft, you're not just choosing a single solution provider, you're choosing
a trusted business solution provider and IT advisor.
IASS and PASS are available on Azure.
Office 365 enables great productivity in the cloud and Ubuntu CentOS and SUSE Linux enterprise
servers are all supported as clients on the Azure cloud platform.
But under the Linux column, clear roadmap to the cloud question mark?
Will your Linux provider be able to support your entire infrastructure in the cloud if
the time comes?
Okay.
What does that even mean?
Like, what are they even talking about right there?
The best is that they're saying that Google Apps is an untried service, but you should
use Office 365 instead.
Which is newer.
It's newer than Google Docs.
Oh, man.
I think they've actually got a section on security threats in that.
We don't want to try out Google.
Okay.
Found the other guy, but I found him.
Okay.
Security threats on this?
This is hilarious.
I know.
Let's talk about the security threats.
Oh, wow.
All right.
So, in the security, Microsoft has a proven security development lifecycle.
We've made security a top priority with our security development lifecycle, also, by the
way, called SDL.
Hmm.
I feel like SDL has been taken by something else.
Customers also have direct access to the SDL under a Creative Commons license.
Wow.
Oh, man.
Now, under the Linux column for security threats, persistent threats and dedicated attackers
can slow your projects and put your IT environment at risk with Linux projects.
What does that even mean?
Oh, man.
Do you think this is in response to Munich, the French gendarmerie, to lose the UK announcement
about open document format?
Do you think they realize they've got a fight on their hands now?
Well, I do find it to be particularly interesting that they're not trying to push Windows.
They're trying to push everything Microsoft has to offer.
All the things, yeah.
All the things.
That's one thing.
Like how focused we are, because all the things are now one thing.
I just hope that the BS marketing speak they use in these comparisons doesn't appeal to
people outside of Microsoft, because if it does, then that really sucks.
Right?
Yeah.
Any of these statements that have any value under the Linux column apply just as much
to Windows as it does to Linux.
I know.
Yeah.
But they've got a page there to compare themselves with Google.
I mean, they're just asking for a beating here, aren't they?
They do.
And the best part is, it's like, is Google reliable?
We are.
We are.
Microsoft versus Google.
We don't think they're reliable.
Microsoft.
Is this story made even further by Microsoft?
Okay, here we go.
I actually do wonder that.
Privacy, security, and compliance.
You can trust.
Now Google is riskier for the enterprise with a focus on advertising and a lack of clarity
around data governance policies.
Google apps are riskier for enterprise.
I would say that's the one bullet point I agree with, because Google just recently kind
of got caught with their hand in the cookie jar when it came to monitoring students' docs
for advertising, and they had to pull back on that.
So Microsoft now gets to lean on that kind of stuff.
Yeah, I don't know.
What about their comparison with Open Office?
They have Open Office on here?
Look at this.
Yes, they do.
They say, there's like a quote from a company that says something like, we used to use Open
Office, but we switched back to Microsoft Office.
You could practically hear the sigh of relief right after we switched back.
Oh my god.
That quote is over two years old.
That quote, we covered that two years ago on the Linux Action Show in a video.
And this same one where they said it was cumbersome, that was also from that same video.
Inefficient, if they're referencing the UI, is absolute BS.
Every time I'm forced to use Microsoft Office and I don't know where something is, there's
no logical way to find it, whereas in Libre Office, you just find the category and it's
there.
They are comparing it to Open Office, which who the heck knows how many years old that
is.
You guys, last time I checked, Open Office doesn't have the ribbon, so screw you.
All right, let's see.
No ribbon, no business.
Wait, someone should actually get a copy of this web page, because you know they're going
to take it down at some point.
Yeah, you know what I like too?
This is the biggest admittance that they're screwed, is right on their Microsoft versus
Linux page, right there on the right hand side.
Second link, speed up PHP performance.
Now this is, how telling is that?
But on their this is why we're better page, they have to give you right there front and
center a link on optimizing something that out of the box just works great on Linux.
Everything could use optimization, but I think that's extremely telling right there.
And PHP isn't a language that sort of cutting edge stuff is going to be deployed on these.
It's not a scale anyway.
You're not driving a ton of clicks by advertising your PHP support.
No.
And the companies they're using as examples aren't really good like big tech related companies
either.
It's interesting.
I don't know.
Yeah, yeah.
That how we compare those should really be list of companies that are eating our lunch.
Welcome to Linux Unplugged, your weekly Linux talk show that just hit the one year mark.
Without missing a beat, I'm a little excited.
My name is Chris.
And my name is Matt.
And at episode 52, if I am doing my math right and it's easy math because we've never skipped
a week one year mark right here, buddy, we just landed on it.
It's like just fell right into our laps.
That's crazy.
It feels like it's been like three months maybe at most.
Yeah.
And I think this actually what this teaches me is that I am just not very good at time
perception because I am also like at the same time, I'm like, you know what?
It kind of feels like it's been really like you said, like three months.
And then the other time it feels like, well, okay, I can't remember a time when we haven't
been doing this show.
True.
Now that's true.
Now I could say that of last, but yeah, definitely with this show, it doesn't feel like it's
been that long.
Yeah.
Yeah.
You know what?
That's what it is.
It's in perspective of the Linux action show.
Yeah.
Definitely.
I know.
Yeah.
I'm a con says, it says every time a show hits a landmark, it makes me feel like I'm
around you guys for too long.
That's true.
I'm a con.
It's your warning sign.
It's time to take a breather.
No, I'm just kidding.
Don't take a breather.
We've got a great episode today.
Frederick from the Crux Project is going to join us and talk about Crux Linux here in just
a little bit.
And we've also gotten some great emails in from the audience following up on some topics
that we covered on Sunday's Linux action show.
So I want to start with that because the first one was one that I was kind of talking out
my butt during the show and I knew we were going to get some feedback.
In fact, I was kind of hoping for some feedback and Odin wrote in and he delivered.
It's in regards to Copper, the Fedora project we talked about.
Odin says, from my understanding, the new Fedora Copper service is not really similar
to the AUR.
Instead, it's more like a PPA competitor.
Unlike the AUR, which is a single repository that allows users to download build scripts,
Copper is a build service that allows users to create personal repositories and upload
their source packages.
The Copper service builds the source packages and makes them available through each separate
repository.
Users who want to use Copper repositories need to add each new repository separately
to their system using DNF, which is the future yum replacement.
For example, I've had problems installing Google Chrome on Fedora 21 because it depends
on a legacy version of LibCrypt, which is no longer supported in Fedora 21.
But there's a Copper for that, so after running some DNF commands, he enables the repo, then
he installs that compatible library, and Bob's your uncle.
He's good to go.
He says it's kind of like a PPA, but with a central repository.
Interesting.
I could work with that.
Right?
I could work with that.
Yeah.
I think maybe the system I would prefer is the AUR in-hole, because I like the fact that
there's a voting system there, a comment system there.
I like the selection.
Copper obviously didn't have the same selection.
The other bit of feedback we got is that Copper has some of the same legal constraints that
Fedora as a whole has, since they're building those packages and whatnot.
So there's going to be certain things there that maybe, like for example, popcorn time
would show up in the AUR, but maybe isn't going to show up in the Copper repos, perhaps?
I don't know.
I don't know.
That's bizarre.
I'll bring in the mumble room.
Hello, virtual lug.
Anybody in here a Fedora user and familiar with Copper?
Have we gotten anything wrong?
Are we egregious?
No.
Okay.
Good.
Apparently not.
No.
I think that means no.
Apparently you nailed it.
Yeah.
I think so.
That's good.
That's a good sign.
That means we're not leading people astray, Matt.
All right.
That's it.
Next email.
Let's get to the next email.
It comes in from Michael, and Michael writes into the show.
I mean, you can write in too by going to JupiterBroadcasting.com, clicking contact, Linux
unplugged features, contact from the Linux unplugged form, and also from the Linux action
show.
We get so much email to both shows that we try to collect it all in one place.
So Michael writes in about emails and email clients.
He says, hi guys.
Huge fan of the show.
When I was using Outlook, I was crazy about the integration with a really decent calendar
feature.
My question is, with all of the talk about viable Linux calendar apps and with the availability
of LibreOffice, why haven't we seen an email client or calendar from them?
It doesn't make any sense.
And I think it's time for one.
I could surely use it.
Keep up the great work, and thanks, Michael.
So Matt, do you think we have a...
This is the third week in a row, which is crazy to me that we've gotten people commenting
about productivity apps like calendar and email under Linux.
And do you think the LibreOffice project should be making a calendar?
I think it's overdue.
I think the problem is, and this is very true in the Linux world in general, is that everybody's
kind of focused on the projects they're passionate about, and the end users basically gets to
come along for the ride.
That sounds terrible to say, but that's been my general experience.
And I'm not speaking to distros.
I'm speaking to specific applications.
So I look at the Evolution project, or I'm looking at various things you can do to Thunderbird
to PIM it up, if you will.
And it always feels janky, I guess, at the end of the day.
And because you go to other platforms, and you've got a stupid amount of choice.
It's just ridiculous.
That's true.
But if it's like, you're pretty much going to end up going web-based.
You just are.
There really is no other alternative.
I mean, truly.
I've been using Evolution with some success, and then I have also been trying out Lightning
on Thunderbird.
But you're right.
It does feel a little janky.
Oh, Evolution.
Yeah, Evolution.
Well, yeah.
I mean, so what I've been using more so is the Evolution data server backend, which then
populates my GNOME calendar.
I don't actually use Evolution that much.
And then I have my Lightning calendar subscribed to the same calendars that my GNOME data servers
subscribe to.
But that means I have two different programs checking the same calendar feeds.
It's not super elegant, but at least they're referencing the same source.
So there was a blog post about the future of Thunderbird posted on July 31st.
And they say, so current update, which is good news for any Thunderbird users, guess
what?
Thunderbird usage is growing.
They say we have a strong core team and expect to remain relevant on the internet for the
foreseeable future.
And that Thunderbird, they recognize, is mission-critical to tens of millions of users.
Here's where they want to go in the near term.
Thunderbird should be a full-featured desktop personal information management system incorporating
messaging, calendar, and contacts.
We need to incorporate the calendar component, Lightning by default, and drastically improve
contact management.
We should be actively promoting open internet standards in messaging, calendar, and contacts
through implementation.
So they also apparently see the need to integrate calendars into Thunderbird.
I don't know, Matt.
I don't know.
I feel like Thunderbird needs to stick to email and just focus on email.
I think when you plug in Lightning into Thunderbird, it feels janky.
But I think that the Lightning idea and the app itself is actually just worlds better
than Evolution.
Evolution just feels like a trip back to the 90s.
I can't even deal with it.
And I used to use it a lot.
I mean, I've spent years with it, and I hate it with a passion.
But I'd say Lightning's a great idea.
I like the idea.
I don't really want to blend it in with current Thunderbird.
It just doesn't fit well enough.
But that being said, it's usable.
It's not horrible.
And if you have some sort of web-based calendar or have something that you can sync up with
a calendar, whatever.
As long as they get it right.
It's doable.
They've got to get it right.
Because if they screw it up, Matt, my Thunder, if they ruin my Thunderbird, what am I going
to do, Matt?
What am I going to do?
That's true.
And if you have the option to take kind of an opera approach and disable something you
don't want in it, problem solved.
I don't want a calendar.
I just want email.
Make it go away.
Poof.
Gone.
Problem solved.
I agree with Evolution.
Like, strip out all the task stuff.
Because the task implementation in Evolution is just god-awful.
Like, please burn it alive sort of thing.
Honestly, Evolution just should be calendar and mail.
And that's it.
Yeah.
Yeah.
As long as you don't implement the exchange backend, it's less painful.
The exchange backend will make you want to punch things.
It's horrible.
Yes.
Oh my goodness.
All right.
I think we're probably done talking about Thunderbird.
We have one more email to get to.
I mean, you guys can still, you can send in your feedback.
We'll read it.
If this is a topic people are obviously interested in, Andreas writes in, he says, hello, Chris
and Matt.
I've been watching almost all of the JB shows for a year now.
This is great content.
I have a DigitalOcean droplet serving up Django.
It's a Django project.
One of the things I want to do is some kind of virtual meeting, sometimes part of a group.
Oh, we have a little echo back there.
Sometimes it's part of a group.
Or, you know, he wants to single to multiple people sometimes.
Maybe just a single person.
And also maybe have an embeddable IRC client.
It could be video or audio.
So he says, here's the requirements.
He needs to be able to run on a DigitalOcean droplet and a way to send out audio or video.
He wants to be able to serve anything from the droplet, not any third-party host.
So like no Google services, no Twitch.tv.
And the video is just one way, or the audio.
So he only needs to be able to send it out, doesn't need to be able to receive anything
from them, except for IRC.
So he wanted to know if we had any recommendations for virtual meetings, things that he could
do to broadcast something to multiple people, all hosted on his own system.
I was thinking, IRC, you could host your own IRC server.
I would not.
I would say go on to GeekShed or go on to FreeNode and just grab a room.
You can make it a private room, but don't bother with that.
For the broadcasting, I don't know, maybe somebody has a better idea.
I was thinking IceCast.
Just do an audio IceCast stream because he wants to be able to embed the player on the
website and you could use HTML5 audio, heyo, to stream IceCast right in the browser.
It wouldn't be video, but you would get audio though.
That's about the best I could come up with.
I mean, really, because he's not wanting to utilize other tools and services, that definitely
limits my ideas.
Well, chatroom points out WebRTC might be a solution here too, PalavaTV, P-A-L-A-V-A-T-V,
browser-to-browser video conferencing.
WebRTC might be able to solve this too.
Anybody in the Mumba room have any software suggestions for something to do self-hosted
video conferences?
I don't think so.
They're bubkissed today.
They're bubkissed.
They're just coming up nothing.
Yeah.
There is one called Appear.in.
Okay.
Is that a WebRTC one?
Yes.
Yes.
That makes sense.
That makes sense.
That's probably your best bet right now.
And the nice thing about WebRTC is if they even have a semi-modern browser, you're not
going to have to have them install a plug-in or something.
If you're using a system that requires a plug-in, you're almost dead in the water right there.
So you know what?
WebRTC is probably actually the really sensible approach.
So Andreas, look into WebRTC solutions.
We actually did an episode of Linux Action Show a ways back.
There's a few.
Check out meet.jitzi.si or G-I-T-I dot S-I.
There's a couple of different options out there, and we'll try to collect a few links.
And oh, it would be a good time to say, if you're listening to this after the fact and
you're like, oh man, there's one the guys need to know about, please go over to linuxactionshow.reddit.com,
find the feedback thread for this episode, and drop a link in there.
And I'll try to remember to collect all of those, and we'll cover them in a future episode,
maybe episode 52.
So our buddy Mike there was talking about how he was hosting this, or I'm sorry, it
was Andreas, over on DigitalOcean Droplist.
So why don't I just take a minute here and tell you about DigitalOcean, because guess
what?
I rock DigitalOcean Droplets like a boss.
Over at digitalocean.com, we've got a brand new promo code for the month of August, which
is blowing my mind, Unplugged August.
Unplugged August, all lowercase, go over to digitalocean.com.
Let me tell you about DigitalOcean.
DigitalOcean is a simple cloud hosting provider dedicated to offering the most intuitive and
easy way to spin up a cloud server.
Now if you're a boss, you can probably do this in under 55 seconds, like myself.
But you know, for most of you, maybe it's your first time, you're new, you can spin
up a cloud server in less than 55 seconds, and pricey plans start at only $5 per month.
That gets you 512 megabytes of RAM, a 20 gigabyte SSD, one CPU, and a terabyte of transfer.
Their pricing plans are so straightforward and simple, too, that as you go up, you get
more bandwidth, you get more CPU, more storage, et cetera, et cetera.
And when you use that promo code, Unplugged August, you're going to get that $10 credit.
So if you grab the $5 rig, like I've been using forever now, you grab that $5 rig, you
can try it for two months for free when you use the promo code Unplugged August.
And DigitalOcean has data center locations in New York, San Francisco, Singapore, Amsterdam,
and a brand new one in London.
Their interface is so simple.
Their control panel is super intuitive, but extremely powerful.
And then you're like, hey, you know what?
I need more power.
I need more power.
Well, guess what?
Boom, they got you covered, straightforward API available.
You can replicate a lot of the functions on a much larger scale.
Automate that ass, son.
Go out there with that straightforward API.
And if you go over to DigitalOcean right now, I want you to go over there and click on the
features tab and take a look at the control panel.
So they have the droplet management system.
They have the DNS system built into.
They also have snapshots, two-factor authentication, an HTML5 console written in Go.
You can resize and deploy applications with one click like Ruby on Rails, WordPress, GitLab,
all of that.
Boom.
Send it all there.
It's all running on top of a Linux box, sitting on these SSDs, so you get that super fast
I.O. connected to tier one bandwidth.
I mean, it's a really great offering, DigitalOcean.com.
And you can try it out for two months for free.
They also have some hourly pricing structures available.
So if you want to just try something out for some testing, you can do that.
I tell you what.
I've got a BitTorrent sync system over there working flawlessly.
Really unbelievable reliability.
I've now got an own Cloud 7 instance over there, and I don't know if I want to give
it out just yet.
I might eventually, but I've got a great domain name for it because some of the new TLDs that
are out there.
So now every time I SSH into my new DigitalOcean droplet with this new TLD, it makes me giggle.
I love it.
Go over to DigitalOcean.com.
Use the promo code unpluggedaugust when you check it out.
Grab yourself something, and you'll get it for two months for free.
And since DigitalOcean is so cool, if you forgot, because maybe it's late, I'll forgive
you.
You forgot to use the promo code.
Bro, it happens.
It's okay.
DigitalOcean's got you covered.
You can go retroactively apply that promo code if you forgot.
DigitalOcean.com, unpluggedaugust when you check out.
That lets them know, too, that you really do appreciate them keeping us on the air.
DigitalOcean.com, huge thanks to those guys for sponsoring Linux Unplugged.
Okay, Matt.
Well, Fredrik joins us from the Crux Project.
Fredrik, it's great to have you on the show.
How long have you been with the Crux Project?
What's your background there?
Well, I started using Crux in, I think, about 2004, 2005, and I was the one who started,
I guess, the port that is now Crux 3.0 and 3.1 for x86-64.
So I think I started that in 2008 or something like that, perhaps.
Quite a while, then.
Quite a while.
Very good.
Well, I really appreciate you being here.
We had a chance to look at Crux on Sunday, and the thing that really sort of stood out
to both Matt and I is when you have a distribution that has a lineage of Crux, I think something
that people have a hard time really wrapping their brains around is this isn't based on
something else, is it?
This Crux is an OG Linux distribution, and do you feel like maybe that makes Crux stand
out from the crowd a little bit more?
Yeah, I suppose so.
I use quite a few distributions at work and on different platforms, so it's not like Debian
or not like CentOS or Red Hat or anything like that.
So I think if you need to compare it to anything, it's probably more like Slackware or just
Linux from scratch.
Okay.
Well, I'm going to jump ahead a little bit because what you kind of touched on is probably
one of the number one questions we had sent to the show.
So we let the folks know that you'd be on the show, and if they had any questions, to
send them in.
And we got a bunch of questions into the show, and a lot of them were the same one.
So I guess I want to start there because you kind of just touched on, is a lot of people
wanted to hear where you felt, just in your opinion, Crux fits in, like I can say, compared
to Arch.
I think a lot of people wanted to know Crux versus Arch.
What would you say Crux's strengths are, say, over Arch?
Well, actually, I've never used Arch in my life, so perhaps I'm not the right person
to answer that question, but as far as I can understand, just by looking very not really
in depth on Arch, I guess it's pretty similar.
But yeah, I'm not really comfortable making a comparison.
That's fine.
I think a lot of people see that it's sort of a set up from scratch kind of scenario
that I think a lot of people see a similarity there.
I think your comparison more to Slackware, perhaps, is more apt.
And do you consider Crux to be competing with the Ubuntu's and the Debian's out there?
Are there similar use cases there, or is Crux not really competing in that kind of way?
No, we're not really competing with anyone, and we don't really look to compete either.
If you like Crux, if you think it fits your philosophy and how you use your computer,
that's great.
We like it.
Success isn't measured in user base size.
No, no, no, not at all.
Even if it was, if everyone else left Crux tomorrow, I'd still run it, and I'd still
maintain it.
Do you guys have a rough estimation of the user base size of Crux?
No, not really.
We don't really distribute the ISO from the Crux site itself, so it's only mirrors, and
that's pretty hard to really count, I guess.
Perhaps the best way to really get a count is to monitor the rsync usage from ports 3,
but I asked a few days ago and it didn't really get a response, so I'm not really sure how
many we are.
But I guess it's probably less than 10,000, more than 200.
Yeah, that's probably a pretty safe guess.
Wimpy, you were a former Crux maintainer.
Now you work with the Arch Project.
Did you want to share your insights on some of the similarities between the projects?
Yeah, there are some similarities.
You mentioned on Sunday that Arch, the original Arch developer, Judd Vinnette, was inspired
by Crux, and it was the inspiration that led to him developing Arch.
In that respect, there are some similarities.
I was a Crux maintainer from January 2002 to December 2003, so that was Crux 0.9 era,
and I was a bit shocked to learn I used to be the KDE maintainer for Crux, which I blanked
out of my memory, but in terms of the similarities, if you look at Arch Linux before the system
D switchover when it still used rc.conf, configuring Crux is very similar to how you used to set
up Arch.
The other similarity is, of course, it's a ports type system, which effectively the AUR
is like a ports tree, if you like.
If you actually go and look at the PKG files on Crux, and then go and look at a PKG build
file for Arch Linux, you can clearly see that Arch was heavily influenced by Crux, because
there's fewer functions in Crux, but they are almost identical, and I've even heard
rumors that you can take packages from Crux and build them on Arch without having to change
anything.
Yeah, you could do that, you need to change a few variables and stuff like that, but it's
really simple to just move it over to Crux, if you like.
That underscores it.
So that kind of brings me to the next, probably most common question.
This is not really controversial, but I suppose some people consider it to be, but Otter was
the first to ask.
He says, I noticed there's no system D package in the repos, and there's no system D page
on the Wiki.
Do you have any issues with system D as a distribution, like some of the same problems
some of the other source-based distros have?
Or what are your thoughts on that?
Because I know the BSD init script style system is sort of an important identity point for
Crux, isn't it?
Yeah, I guess so.
Our init scripts to boot the system is perhaps a couple of lines, perhaps 80 lines, I haven't
really counted.
And it's really simple, you can easily see everything that happens, you can change anything
if you like.
So we haven't really, yeah, we don't think system D really fits with our philosophy.
I'm not really personally interested in it.
The only contact we have with it is the merger of Udev to system D, and that has been a bit
of a headache for us, and I guess it's made us a bit worried on what to do from here.
Frederick, since you've been working with Crux since 2008, have there been any surprise
Crux use case scenarios where you'll bump in and find, oh, this embedded device is using
Crux?
Or this company has Crux deployed on their servers that sort of surprised you that you
never even knew about until one day it just sort of fell in your lap?
Yeah, I guess one or two years ago we had a guy asking for support on a really old Crux
distribution.
I can't really remember the use case, but it turned out he was the boss of a company
that used Crux for data recovery, forensic data recovery on hard drives.
So that was a bit of a shock, actually.
Cool.
That's a good one.
BitPuffin, you wanted to share some thoughts on system D and what kind of drove you to
Crux?
Yeah.
Well, basically I really liked the way Arch used to be configured, and when they switched
to system D it all kind of became magic, and I didn't really feel comfortable with that.
So I switched to Crux, and I actually like most of it more anyway.
So it was kind of what drove me there, but then I just liked everything more.
Yeah, I could see how Crux could be a refuge for a lot of folks that are not super happy
with system D. To me, I would feel as a distribution not implementing system D, I would feel like
it is looming over me, like I'm becoming surrounded, and that it's, I don't know, it seems like
it's just going to become more and more intertwined with every other distribution out there.
Yeah, absolutely.
It could be an uphill battle, Frederik.
Yeah, really.
I think we're the only other distribution, other than Gensu that use Udeb, the fork of
Udeb.
But I guess we'll see in a few years how things look.
Yeah, you know what, it might turn out to be a really good long-term bet, actually.
You never know, right?
Crazier things have happened.
Did you have any Crux myths or common misconceptions you wanted to address or anything kind of
like that?
I know that sometimes some of the underrepresented distributions sort of misconceptions can kind
of crop up over time, so I always like to give the floor to a guest to have a chance
to pop some of those rumor bubbles if there are any.
I'm not really sure.
We're quite a close community, not close, but tight community, so I don't really think
many people have any misconceptions on what Crux is.
The one I would give you, the one I would shoot at you is, and I think it's actually
a good thing, is I think the common misconception is that people are little curmudgeons over
in Cruxland.
And I think really what it is is it's actually just a sense of pragmatism about what functionally
works for this group of people, and it's not about setting up a fence where the neckbeards
can hang out.
It's about just creating a very simple distribution that works, that doesn't have a lot of extra
stuff built around it that gets in the way, and it is extremely practical.
Is that essentially my sense, right, Fredrik?
Yeah, I think so.
I do need to shave, but we've had some users mailing to the mailing list asking for a gnome
or why doesn't this work on Crux, how do I get Steam to work, things like that, and you
can get it to work, but you just need to spend a lot of time building everything because
we don't want to do it, so, especially with that, you could do it, but yeah, I guess we
like to keep it simple.
Very well, and as you should, because I think that's what's particularly appealing about
it.
Well, Fredrik, if you don't mind, if you want to stick around, we're going to talk about
Crux.
We had the folks in the room kick the tires, and we're all kind of going into this knowing
that it's not a distro for everybody, but now, that said, Mumble Room, feel free to
speak your mind, and Fredrik, you feel free to respond to anything you want.
We'll talk about the community's reaction.
We have a virtual review lug, if you will, a strike team that goes in and tactically
assesses distribution.
That sounds ridiculous.
That sounds scary.
You know, we call them Linux Team Six.
Oh, my God.
Oh, wow.
I'm sorry.
Too soon.
Too soon.
All right, but before we jump into that, I'll thank our next sponsor, because Linux Academy
has just recently rolled out some brand new stuff, so this is a great time to mention
Linux Academy.
Head over there to check them out, linuxacademy.com.
In fact, go to linuxacademy.com slash unplugged.
That'll get you the Summer of Learning discount.
That's right, up to 33%.
That makes it $50 a quarter.
They just rolled out brand new stuff, an entire new course called OpenStack Essentials.
It's 100% complete, and it's up on Linux Academy right now.
Go over to linuxacademy.com and take the tour.
See their new AWS-certified SysOps Administration prep course?
It's really come together, and it's packed with over 14 hours of content.
Now, what is Linux Academy?
Think of it this way.
A group of extremely passionate Linux users who had an educational background, and then
the other side of the group had a development background that came together and said, we
need to create a platform for other Linux users to learn and expand their skill set.
So here's what they did.
They set up a system that's all based around step-by-step video courses with downloadable
comprehensive study guides.
Each course, when you're required, it comes with its own server.
They spin up on demand.
You can run seven-plus of the available Linux distributions they have.
They automatically adapt the courseware to match that distribution.
This is a great way, if you need to switch distros to learn how another one is done,
or if you've been primarily a Red Hat guy and now you're working on an Ubuntu box, go
get yourself up to speed, linuxacademy.com slash unplugged.
You can keep track of your progress as you go, too, so you'll see exactly how long it's
going to take you, so you'll know exactly how much time you need to budget.
You can come back later on and check it out, see where you're at, test yourself, keep up
to date, and they've got a community, too, that'll help kind of give you that incentive
if you choose to engage.
You can remain a loner.
That's fine.
That's my approach, but if you'd like to go in there and tell people and talk to people
about where you're getting stuck, help people kind of, get people to kind of help you move
along and sort of, it's like when I went to a gym, I would have, I would have a gym buddy
that would kind of encourage me to keep going.
The community can be that same kind of thing.
So go check out all of the intercourse where they're adding all of the time.
If you want to mess around with AWS, too, this is a great opportunity because they'll
spin up the AWS instances as you need them.
They've also been doing some live streaming with Q&A so you can ask the instructor questions,
and I think one of the things that I've enjoyed hearing a lot from our audience is when they're
learning and they really get excited about the topic and they're really starting to,
you know, it's really scratching that itch, but they need to step away for a while.
They're taking these comprehensive study guides because they're in video, PDF, and audio,
and they're downloading them offline and consuming them when they're in the shower, when they're
in the car, and they're always able to learn.
This is a great way to get your skill set up, to help you become a little more employable,
or land that next contract, or check that box off on the review, or just intellectually
stimulate yourself, linuxacademy.com slash unplugged.
Go take advantage of the Summer of Learning discount because you know what, summer's not
going to last forever, linuxacademy.com slash unplugged.
And a really big thank you to Linux Academy for being so damn awesome and supporting the
Linux Unplugged show, linuxacademy.com slash unplugged.
Okay, Mumble Room, so you guys got to do what Matt and I did for last Sunday.
You got to try out Crux.
I'm really kind of looking forward to it now.
I know we have a wide range of experience here.
Wimpy, obviously, as a former Crux maintainer, didn't have a hard time.
But Josh, I know that when you started to dig into it you realized it might be a little
more than you were willing to bite off, right?
Yeah, so first a disclaimer, I am completely spoiled by binary packages.
I refuse to compile anything unless I absolutely have to.
It's like a pride thing, is that what you're saying?
No, it's more of a time thing.
I don't have time to compile everything.
I understand some people have really high-end computers and they could compile stuff in
freaking milliseconds.
But Josh is on a Celeron, he's got, no, I'm kidding.
No, not quite.
When I looked at Crux and I came to the realization that I needed to compile my kernel and figure
out all the modules I needed, and I disclaimer, they do have a really good set of defaults,
that immediately turned me off.
But here is why I think you should use Crux, plain and simple, and that's their port system.
It would be insane if you're using Arch and you want something more source-based where
you want to control every little bit of source that goes into your system, Crux is for you.
And if you want to make sure that there isn't any unnecessary garbage that's getting thrown
in your system, the port system is just so flexible.
And from what I've seen, there is a lot of ports maintainers.
You have a core team and you have a lot of experienced individuals that maintain an extensive
amount of ports.
And you could easily enable different port sections such as Contrib, which is the most
experienced port maintainers from what I've seen.
And that opens up a huge variety of software.
That's good to know.
Now BitPuffin, you say there may be a solution for Josh who wants binary packages, right?
Yeah, so me and another fellow Cruxer named ProLogic are working on an open-source service
for maintaining port collections and stuff.
And it will also provide automatic builds so you get binary packages.
And there's actually a binary package manager in Crux called PackageGet, like PortGet, but
for binary packages basically.
So that might help a bit.
That's very true.
And so you've got some solutions.
It seems like every time I dig into something, Frederick, when it comes to Crux too, it sounds
a lot of times like the portions of the community just sort of spontaneously come together and
fill in gaps.
Like isn't that how PackageGet kind of also originally was materialized is by community
participation and it's like, okay, we as a community want to fix this thing, let's all
get together.
And that's really cool.
Yeah, I think most of the Crux system you see today actually was built by the community.
Crux was started by Pär Lidén and he was pretty much alone maintaining it for a number
of years before the community stepped in and joined up.
So PortGet, tools like that are mostly developed from scratch by the community.
So I guess so.
We have an ARM fork because somebody noticed that they wanted to put Crux on ARM, so that
was created.
And yeah.
Fair enough.
I guess so.
Yeah.
Wimpy, you know, you touched on it.
Maybe it was in the pre-show, Josh was like, yeah, boy, when I found out I had to compile
my kernel.
Wimpy, do you have some wisdom when it comes to building the kernel under Crux?
Not wisdom.
I mean, obviously, you read the Crux page and it makes it very clear that they use the
words experienced Linux users.
So I see this and I think, right, brilliant, let's get a large glass of whiskey, roll our
sleeves up and get stuck in.
So the install, I found very similar to Arch, if you've installed Arch since they got rid
of the menu based installer, Crux and Arch are very similar.
And I would say that installing Crux is as easy, in quotes, as installing Arch, although...
But you have to compile the majority of the stuff.
Well, the install, everything comes from binaries except the kernel.
So my critique would be that as part of the install, stick a kernel on that's pre-built
with the defaults because the defaults are very good.
And then for the tinkerers and tweakers, you can then...
Couldn't you grab the live cities kernel image from the live cities slash bot?
You could.
Yeah.
I didn't think...
The live city kernel, it's built with modules and stuff like that.
It might be a bit tricky to move over.
I'm not really sure it's simpler, but...
But I would actually...
I actually think building the kernel is the easiest part of the Crux install because you
just go into the kernel source directory, make menu config, choose your options, make
all...
Make module install and then copy the image over and then edit the grub.
The hard part is editing Lilo and moving the VMZ image over.
But because the source code is already on the ISO, it's not like...
For me, when it comes time to...
For me, building a kernel from scratch is you use links to go to kernel.org, you download
the freaking source code, you extract the freaking source code, then you go into that
new directory that you've just extracted and then you make menu config.
For me, the fact that the folder was already there and extracted made it easy.
It doesn't seem that hard to me.
Yes, there's the man who's got a Bonobo Extreme with a sexy CPU.
I'm on a seven-year-old laptop.
It's not how difficult it is, it's how long it takes.
Okay, all right.
Fair enough.
That's the real thing.
How long it takes.
It's like, I have other stuff I need to do.
And I get it, once you're up and running with it, it's potentially just as easy as running
an Arch install, if not easier, but it's the time you have to initially take into it might
not be appealing to some individuals.
Now hold on.
BitPuff and...
Oh, go ahead, Fredrik.
Yeah, and if you notice you need something that's not really provided by the community,
it might be a bit of a pain in the ass.
Sorry.
Well, I mean...
Like Steam, for example.
We have had a few people who got it running, but it is a lot of work and you need to install
half the internet for libraries and stuff like that.
So yeah, you could do it, but perhaps it's not really the distribution you want if you
need to do that.
Well, there's that.
But it sounds like what BitPuffin is saying is that the port system might actually have
a solution for some folks.
BitPuffin?
Yeah.
So you could theoretically make a port that builds the kernel and stuff for you, and I
think people have attempted maintaining that in the past, just that they probably maybe
left or something, or very probably knows that they've been...
But it's technically possible.
Yeah.
Okay.
Well, all right.
That makes sense.
I've been dancing around this question the whole time, wimpy.
I really want to know, as a former Crux maintainer, but it gives you a bit of a bias, I'm sure,
but I'm really curious.
I know you dove into it more recently again.
What was it like going back and what were your impressions?
I was really surprised how little has changed in the last 10 or 12 years.
Is that good?
Well, I think it is.
I've got some notes here and towards the end I explain why I think it's a good thing.
But yeah, the package system, the way it's distributed, the way it's installed, the fact
you have to compile the kernel as part of the install, the package tools, PRT-GET even
or PKG-GET, I forget, PRT-GET, it's all as it was when there's no dependencies in the
base package system, which is just how I remember it.
But it was this compiling stuff from source that ultimately reminded me why it was I left
Crux in the first place.
And that was because I'd been using Crux for two years and what I realized was that I hadn't
actually used my Linux workstations for anything productive whatsoever.
I just spent two years compiling stuff, tinkering and configuring my system, but not actually
using it, which is sort of bad, but it's also good because I learned an awful lot during
those two years and I owe the project a debt of gratitude because I learned about all of
the file systems, I learned about compiling kernels, I learned about loading modules and
when to choose to make kernel modules and when to build them into the kernel.
And this was all invaluable skills that have served me well to this day.
So there is a place for Crux to exist and I couldn't see myself using it now as my main
operating system, but for people that are out there that have installed Debian or Ubuntu
or Mint and then want to learn a bit more about how Linux works, then you can graduate
to maybe a Debian net install, text-based installer and then install all of your packages
and compile it and build it and then migrate to Arch Linux and then migrate to Crux, which
will give you an even deeper understanding of how you put together a Linux operating
system and then you can go for something like Linux from scratch to really learn how the
boot manager talks to the kernel, talks to the init process and round off your understanding
about how it will work.
So there's a place for Crux and without Crux there probably wouldn't have been an Arch
Linux.
So it's pretty great.
Whimby, let me ask you this then.
I mean I noticed, I like your graduation scale of ways like stepping up your learning, starting
with net install of Debian and stepping up there, but there's the elephant in the room
in your step there is it seems like it might be possible to take Crux out of that step
and insert Gentoo and have the same effect.
Do you feel like you have a clear differentiator in your mind where Crux is strongly differentiating
from Gentoo and why you might choose one over the other?
Yeah, I think you could say that Gentoo helps you a little bit more along than Crux does.
The package system eBuilds are a little bit more flexible and more mature as well.
I mean some of the things I ran into installing the system was footprint errors, which was
frustrating because installing a lot of packages takes a long time.
You can't rely on it to complete automatically in the background because you get footprint
errors that you have to then go to and sort out.
True, yeah, I guess regarding the footprint errors, I really do think we need to improve
that bit.
You could have new footprint errors or you could have missing and of course new.
It just might be because you installed CUPS or whatever and some crucial packages are
built with the printer support and you get a new library file and yeah, you get an error.
It's not really pretty at the moment but yeah, we could improve that and we probably will.
Yeah, I mean those things happen and it's an ongoing process.
I know some other folks in the mumble room had a chance to kick the tires.
Anybody else want to chime in with their thoughts about Crux?
I can see Wimpy's point as a learning tool.
It's a very humbling experience.
With every time I want to try and do something, I have to think a little bit but I don't see
a whole lot of, and I might get my head bit off for saying this, I didn't see a whole
lot of practical purpose for it.
Yeah, I guess that's a fair point I think.
You could use it.
I use it at home, at work, pretty much everywhere but yeah, you can find another tool that perhaps
does the job better.
Yeah, and I kind of like that attitude of the project.
It's like, hey, that's fine and I think Kernel Linux, I think you and I kind of fall in the
same camp where it's like, yeah, this tool isn't the right one for my box, hello, but
I think there are some boxes that tool fits quite well and like Joe Prager in the chat
room says that Crux has been his main workstation for almost a decade now.
For some folks, it does happen to fit that.
So Noah, were you able to get it installed or did you kind of read through the documentation
and hit some road bumps and stop there?
First I tried installing it on VirtualBox and that turned out to be a huge mistake.
I guess the way that the Kernel compiles, I understand that I guess it's a little bit
different if you're going to do it on a VirtualBox.
What I ended up doing is I bought one of those Chrome boxes from Best Buy for like 150 bucks,
I ended up installing it on that.
And yeah, I got it installed so everything worked okay, it was kind of what somebody
else said it already but it was one of those things that like after a couple hours of every
time I wanted to do something, going out and compiling all it, I just kind of was like,
well, that was Crux.
Yeah, I understand, but BitPuff, you say, hey, to me that means I know just about where
every file is on my system.
I can go in and fix anything I need to, right?
Yeah, and like when things go wrong, we just know how to fix them and we don't like having
to refer to a wiki and look for workarounds and stuff.
Is it a bit of a ticker aspect?
Not so much a ticker, it's just more like we have, it looks like a more close relationship
to the system.
I understand that.
In Arch, you might not know what everything does because it just magically configures
stuff but here we kind of do a lot of things on our own so we know how to fix things.
You are one with your file system.
Yeah.
Yeah, no, I get that.
I actually, I also don't feel like, you know, I don't think like, I think sometimes we're
always trying to look for like, and this comes back from like the 80s, like computers are
useful tools that have practical reasons to use them all the time and sometimes it's okay
to say, you know what, I have a computer over here and I like to tinker a little bit with
the OS.
I like to be a little bit of a hobbyist and I can also get my work, and I kind of feel
like that's for me, that's where Arch fits.
It's like it's very serious and gets work done but I can also tinker with it.
Do you feel it fits in there, Noah?
Yeah, I was just going to, you hit on something important.
I love that mentality and I think here's what bothered me specifically, Crux, and Arch falls
into this too.
I feel like I find myself in a monkey see, monkey do situation where I'm doing stuff
to get things done but I don't necessarily understand what I'm doing and I feel like
when I ask for help, everyone wants to give me the answer to how to get the job done but
nobody wants to explain why it is I'm executing the commands I'm executing.
Hmm.
Yeah, I get that can also, that can be a symptom of a wiki.
You know, because it's just there, you just kind of fall into this copy paste syndrome.
Right.
That makes sense.
And then you do, so maybe you're not learning if you're doing that.
I think you're always learning something, right?
Like even if, even if I know what, what commands to execute to get something done, even if
I don't understand what those commands are doing, I'm still learning something.
But there are, there are multiple times I was like, I wonder what exactly that's doing.
That's like, that's really interesting and I just feel, I mean, it's not that it's anyone's
job to explain it to me, but it would have been, it'd be nice if there was more explanation
to what each of those commands do.
Yeah, I do.
Yeah, I agree.
Well, like one thing about the community that I find kind of different also is like with
what you're saying.
Like in Arch, I definitely feel like people are just like, Oh, you know, you just do this.
But in the Crux IRC, for example, I feel like they are much more pedagogical, but of course
we could probably be better than we currently are, but I still feel like there was a big
difference from Arch to Crux in how friendly people are with helping new people.
Yeah.
Yeah.
I mean, Arch does kind of have a bad rep for that.
All right.
Last call for Crux thoughts before we move on to our next topic.
This has been a fascinating, I actually, in some ways, I think you guys are lining up
exactly with kind of where I fell on it on Sunday.
Matt, do you have any thoughts before we wrap up?
I think that's really it.
I think that the meat and potatoes of it, it comes down to that you can actually, you
know, learn how Linux works, understand what's going on and go beyond merely reading a Wiki.
That if you have a community with Crux that you can actually ask, why is it, why am I
doing this specifically as Noah pointed out?
That's really cool because in most other distributions, you are basically just copying and pasting.
So I think it's a great learning tool.
I think that's what I see it as.
It's a great way to understand what your end result's going to be.
If I do this, this happens, but I had to do this to get there.
Oh, that's cool.
Yeah.
Yeah.
Yeah.
Very well said.
All right, Mumble Room.
Go ahead.
Go ahead.
Last call for any thoughts.
I think if you're eyeballing Gentoo and you have the time or like Matt said, the urge
to learn, try out Crux first.
That's the one thing I have to say.
Very nice.
All right.
Well, I've got something that's been floating around the web and seems to have really resonated
with a lot of Linux users, long time Linux users and new Linux users that I want to bounce
around with you guys and get your take on it.
So first let's stop and thank Ting.
Go over to linux.ting.com, linux.ting.com, think about that for a second.
First of all, we've got a mobile carrier to create a URL that has Linux in it.
So go to linux.ting.com to rock it, to thank them for supporting Linux Unplugged.
Now what is Ting?
Ting is mobile that makes sense.
My mobile service provider and Matt's mobile service provider.
And here's what Matt and I love about it.
No contract.
That means no ETF.
Don't ever worry about that.
You don't have to deal with it.
Plus, it's pricing structure is so simple.
It's a flat $6 a month.
Okay.
$6 a month.
Then any taxes the man's going to put on that because the man be taxing.
But then it's just your usage, minutes, messages, megabytes.
They add them up.
Whatever bucket you fall into, that's what you pay.
That's how all mobile companies should be.
It's so unbelievable.
It seems impossible, but it's legit.
That's how Ting works.
In fact, if you go over to Ting, they have the savings calculator.
Pop that savings calculator.
Put your usage in there.
Not what they're scamming you out of.
Not the amounts they're getting you to pay.
Oh, well, you might use a thousand minutes, right?
You better pay a thousand minutes every single month.
Oh, actually, it turns out I only use 500 minutes.
Well, I'm in a two-year contract.
No, no, no.
Go over to linux.ting.com.
Click the savings calculator.
Put your actual usage in there, and then get ready for this.
Look at the savings, and then I've got good news.
Ting has an early termination relief program.
They'll pay up to $75 per line that you have to cancel.
Then you're like, Chris, not good enough, buddy, because I got this phone, and this
phone don't work on the Ting network.
I got you covered.
Actually, Ting's got you covered.
They have a swap program.
You can bring your smartphone over to Ting, and they'll swap it for a Ting-ready device.
If you've got an AT&T, Verizon, or T-Mobes device, bring that over to Ting, and take
advantage of their swap program, and they're going to hook you up.
And then you're taking advantage of the Ting control panel.
Then you're only paying for what you've used.
Then you've got no-hold customer service at 1855-TING-FTW, where a real person answers
the phone.
You've got hotspot.
You've got tethering, picture messaging, caller ID, all built into every single plan, and
you only pay for your usage.
That's what's so awesome about Ting.
And when you combine it with devices like the Nexus 5, hello, you can go get an awesome
smartphone that you straight-up, legit own, and then go put it on a network where there's
no contract, no early termination fee, and you're paying for your usage.
Linux.ting.com will take $25 off your first device, $25 off your first device if you're
going to bring a device.
They'll give you a $25 service credit, and if you're like me, that's going to pay for
more than your first month.
Linux.ting.com.
Linux.ting.com.
And a really big thank you to Ting for sponsoring the Linux Unplugged show.
Matt and I are here to tell you, the Ting service rocks.
And Matt, I don't know if you've traveled outside of Washington much because, you know,
I don't think you have since we haven't missed a week of shows.
I don't think you have.
I was going to say, the big secret is I never leave the house.
Yeah.
So, but that was great because I'm pretty much always here at the studio or I'm at the
house and I'm on Wi-Fi.
So, I save a ton of money that way, and if you out there are in a similar situation,
there is ridiculous savings to be had, but even if you do end up on the road and use
a fair amount of data or minutes, there's still savings to be had.
If you can take advantage of Wi-Fi, then it really gets blitz nuts.
I'll tell you though, Matt, since you don't travel much, I was very happy to report that
when we were down in Portland, I was getting LTE coverage like a boss everywhere I went.
Nice.
So, yeah, I felt like I was actually living in 2014.
It was pretty cool.
Well, and what's weird here recently is I've always had good coverage in the house, actually.
I have a Verizon phone and I have a Ting phone, and, you know, they're both different companies
doing their thing, but I've noticed that Ting always got better coverage.
What was interesting is recently, and I don't know what happened, I got more bars.
Boom!
I don't know what...
More bars, yeah.
I don't know if they...
Well, they're firing up LTE...
Did they turn on a power?
No, yeah, they are.
Yeah, all over it.
So, they're...
It just totally destroyed Verizon.
Yeah, there has been a big rollout for the last...
So, this is the other thing, too, about the coverage.
The coverage, the entire coverage map has changed in the last year and it's still continuing
to change, too.
It's really kind of neat.
They're really making an investment in that.
Okay, I wanted to bounce around a topic with you in the mumble room.
It's a piece that was over on fosforce.com and it's been making the rounds.
Every news outlet I follow to collect news for these shows has been carrying this piece.
And the title is, you've probably heard about it, When Linux Was Perfect Enough.
All right, I'm not going to quibble about the title.
I'm not a huge fan of it, but okay, whatever.
So, here it is.
The other day, this is...
I'm going to summarize it for you.
This is from Christine Hall and she writes, the other day, my colleague, friend, and sometimes
partner in crime, Ken Starks, published an article here on Fosforce on one of his favorite
gripes, that things didn't work right in Linux.
This time, he was complaining about the font issue in Mint when using KDE.
This is nothing new for Ken.
In the past, he's written other articles about broken aspects of various Linux distros that
never seem to get quite fixed and his contention is these small bugs, which remain unfixed
release after release, are largely responsible for desktop Linux failures to take hold with
the general public.
Now, here's the thing, she says, he might be right.
For Christmas, I bought my roommate a new second generation Nexus 7 tablet running Android,
an OS built around the Linux kernel.
It just worked out of the box with no tweaking necessary.
During the last seven months, she's used it for hours daily and as far as I know, she's
never found any glitches that require fixing.
I point this out because Linux is all but taken over the tablet and phone end of the
computing spectrum.
Alba makes plenty of money with the iPhone and iPad, but that's due to their high prices.
In market share, they lag far behind Android devices.
And Microsoft has proven that Windows is not unbeatable anymore.
It's not the giant it once was.
Even with massive money spent on television ads and conspicuous product placement in nearly
every scripted drama on CBS, mobile devices running Windows remain a mere asterisk when
looking at market share.
Today's average computer users, and I loathe to use the word consumers, want to get things
done on their computers without having to delve under the hood to fix things.
This is understandable and isn't unlike the average automobile owner who just want to
drive their cars without knowing or caring how it works.
Just as most drivers take their cars to the shop for repair to solve mechanical and computer
related issues, most computer users take their device to the shop with no concern about whether
the problem is hardware or software related.
They just want the damn thing to work.
Back in 2002, I installed GNU Linux for the first time.
At that time, like most Americans, I was tethered to a dial-up connection.
And she goes on to talk about all of the little hardware problems that she had but didn't
care about.
You know, sound card didn't work, scanners didn't work.
But gone finally was the blue screen of death and that nearly daily crash that was business
as usual with Windows.
Unfortunately, gone were a lot of my peripherals that used to just work.
But I didn't mind.
I was free of Microsoft and I was using a different operating system that made me feel
like some sort of computer genius.
My point is that back in those days, none of these flaws mattered.
Most of us were already used to having to fiddle with configuration files and such.
Even using IBM compatible computers running Microsoft products, you still had problems.
Like most users in those days, I'd cut my teeth on command line DOS machines where printers
had to be configured separately for each and every program and where the ability to write
a succinct autoexec.bat was necessary.
But that's not who's using computers today.
Today computer users just want the computer to work without problems out of the box.
They don't want to have to figure out why Hulu or Netflix doesn't work or why their
fonts display properly in some applications but not others.
These days, that includes me.
While I'm happy I have enough skills to usually fix a bug that made in the past, while I'm
glad I have the skills to usually fix a bug that made past developers of Mint and Fedora,
I just assume not be able to deal with it at all.
I have work I have to get done and when I'm not working, I want to be wasting my time
with friends on Facebook, not getting aggravated with my computer.
So she's making the point, what she's trying to say here is Linux's amount of tweaking
it takes to work sometimes was okay five years ago or so, back when all computers were like
that.
But a lot of computers, when you look at Chromebooks and iPads and MacBooks, have moved forward
where that tweaking and that stuff just doesn't really happen at all anymore on those.
And it's no longer acceptable that Linux is still requiring that amount of configuration.
Matt, on its face, do you think the premise is roughly accurate?
Not only is it accurate, but her source actually, unlike us who talk a lot, actually is in the
trenches putting Linux and computers in front of people that can't afford them.
So I mean, he really knows what he's talking about, literally, at the base level.
Ken does.
Yeah, Ken does.
Exactly.
And I used to be one of those guys that actually swap people out and stuff like that, but nothing
like he does.
So he's seen this and loving Linux and he's seen this on a daily basis.
And he's right.
I mean, at the end of the day, there are certain paper cuts that exist on the most polished
Linux desktop that can frustrate people to a certain extent.
That being said, I've been a big supporter of the idea that with a proper support system
in place, this would not be a problem.
I've seen various companies attempt this, Linspire, Zombo, various, various attempts
all failures, but the idea was sound.
Provide that Apple-like experience.
Here's the rub.
As soon as you point to anything that basically has the word A in it, like Apple, or has any
other non-Linux flavor to it or doesn't require you to get your hands dirty, a lot of Linux
people get really butt-hurt and really upset by that.
And I never really understood what the big deal was.
First of all, how many of them have actually experienced what Ken's talking about or what
she's talking about specifically, the author of the article.
It's interesting.
I think that we're going to have to really noodle that over.
Let me toss this to Faith.
Faith says the problem here is that there's not enough pre-installed Linux machines.
Faith, do you think it's not a fair comparison because a lot of people buy a machine and
a lot of stuff is already set up for them?
What do you think?
Well, I just think the issue is a little bit more complex.
It's not any one thing.
And for some people that need, like you said, Hulu or Netflix, that's going to be an issue.
But I've done installs for my friends and family.
And for example, I don't think anybody I've installed Linux for, they've used Hulu or
Netflix on their computer.
They have it on their set-top box.
So that hasn't been an issue, but they never would have used Linux if it wasn't for me.
Because even if you have a perfect distro where you never have to get your hands dirty,
you still have to get your hands dirty to get the distro on the computer.
And it's just there are companies that sell pre-installed Linux, but you have to already
know what Linux is and go find them.
Colonel Linux, you've got your ears on.
You've moved a lot of users over to desktop Linux.
But when you do it, you're probably maybe smoothing over a few rough edges, even if
it's just somebody setting up creating user accounts, maybe adding the printer.
What's your take on this article, Colonel Linux?
Right.
No.
So I agree completely.
And I want to echo what Faith said.
I think the biggest problem is, I watched, and I was ragging on this in the mumble room
I think a couple days ago, but I was in Best Buy and this lady comes in and she's sitting
there and she goes, yeah, I need to buy a new computer.
And so I was looking at one of those MacBooks, so they go over, well, what do you do?
Well, I checked my Gmail and I like to watch YouTube videos.
Oh, and I like to go on Facebook.
And I'm like, that's a Linux user right there.
That could be a Linux user.
And the only reason she's not a Linux user is because there's no computer she can pick
up in this brick and mortar store other than a Chromebook that has Linux installed.
But when I was listening to you read that article, one of the things that stood out
to me is how many of those problems are not Linux's fault.
For example, Netflix.
Yes, we don't have Netflix.
Yes, it's a hack together solution.
What are we supposed to do about it?
If Netflix won't, if the market share doesn't dictate enough users for Netflix to make the
necessary changes to support Linux, what are we as Linux users supposed to do about that?
Well, okay, so, I mean, you mentioned the Chromebook.
That's the elephant in the room, I think.
I think the Chromebook is successful Linux in a sense.
I think the Chromebook represents what a company that takes Linux and consumerizes it and ships
it on the desktop, just like the Android is also that.
See, the thing is, is that Linux itself is just a general technology.
And what I think we sometimes forget is we are the ones electing to implement this general
technology as a purpose workstation, right?
And it's not necessarily, we are taking something that's not necessarily an end product and
forming it into an end product, and it's not like we're doing it on billions of dollars
of budgets like the folks at Google are doing when they're making Chrome OS.
So I think when you look at it from that standpoint, it's not a fair measurement to completely
compare it to a commercial offering.
And I think we need companies like System76 to come in and say, here it is as a product.
I've always said, I think one of the important roles that System76 plays is they productize
Linux because it isn't just, here's the ISO, or here's the DVD, or here's the box set.
We've tried that.
It doesn't work.
It's really got to be kind of an end-to-end consumer solution.
And right now, it's kind of Android and Chrome OS as far as Linux goes at a large scale.
So here's my...
Yeah.
Oh, I'm sorry.
No, go ahead.
No, so here's my question to you.
So Chrome OS is technically Linux under the hood, and I can get to a root shell.
So why can't I install GNOME 3 on, what is it, Gen 2 that it's based off of?
Yeah, probably.
Well, you know...
Gen 2 is the build system, it's just used as the staging builds.
That's what I'm getting at.
Yeah.
It's almost an...
I guess what I'm getting at is it's almost unfair to call Chrome OS Linux because, yes,
it uses a Linux kernel, but it's really not, I mean, it's not even...
Android is actually even closer to Linux than Chrome OS is, isn't it?
I don't know.
No.
No.
I think Chrome's closer.
No.
Yeah.
I think it's an Ubuntu workstation to bootstrap the Gen 2 bootstages in a CH root.
I don't even look at it like that.
When you run a binary on Chrome OS, that's a native Linux binary.
If you did a PSAX, you'd actually see a Linux binary process.
When you run an application on Android, most of the time you're running it inside a Java
virtual machine.
That could be just as easily running on top of a Mac inside a JVM, right?
If they ported Dalvik over to Windows, you could run that same app.
If you had all of the APIs available to you.
So it's not a Linux app, right?
But on Chrome OS, those are native Linux processes.
That's why I think Chrome OS is more of a true Linux in a sense.
It's a funky distinction, really.
Chrome OS kind of takes a lot of the zeal that people have out of the whole Linux topic
because you get to run a web browser and that's about it.
Yeah, I think what Christine Hall and what Ken are touching on is it's definitely worth
us taking it in.
We need people out there thinking about this.
I've got a story that we'll cover on Sunday's Linux Action Show that really does demonstrate
that when you take somebody, like what Colonel Linux aka NOAA is doing, where you go out
to a client or you go out to a company or you offer a service and you productize it,
it does work and it is usable.
That's like the last mile essentially is that piece that takes the most work.
I think as Chrome OS continues to show success and as Microsoft continues to sort of focus
on trying to create some sort of amazing synergy across all of their devices and all of the
UIs and as Apple continues to eventually move towards iOS and they armify their desktop,
there is going to be people watching Chrome OS and go, you know, I could do that.
I could make it even more like an actual computer and I could do that.
Maybe it's HP one day, right?
We don't know.
One of these companies could have something in the skunkworks for all we know and all
of a sudden, boom, they bust out a new laptop and it's like Chrome OS only it's maybe based
on Gnome 3 or something.
Who knows?
I think what the future holds is Linux is going to have an answer for somebody who wants
to bring something to market and maybe what we see today isn't even what we'll have in
five years.
So I'm not too worried about it and in the meantime, as long as I can keep building my
desktop, I'm happy.
All right.
We'll wrap it at that.
Go ahead.
You can close it out.
I would have to say that I'm not much of an Ubuntu guy, but I would really wish that Canonical
stopped focusing on the mobile so much and go out back to the desktop a little bit and
actually gave us a real Linux desktop that people can buy and people can look forward
to buying on the shelves instead of only looking towards the phone as if the mobile was the
only future that we have.
We have a lot of desktops, a lot of laptops, they're not selling anywhere.
Preach it, brother.
Preach it, brother.
Hold those thoughts because that's actually going to... I have a topic I want to cover
in the post show that'll sort of underscore what Heaven's just said and I think what Wimpy
wants to touch on too.
So I'll wrap us up with this.
We'd love to hear your feedback.
Go over to JupiterBroadcast.com, click the contact link, send in your emails, choose Linux
Unplugged from the drop down.
We'd love to read them.
LinuxActionShow.Reddit.com.
We have feedback threads for every single episode.
That's also a great place.
You can also leave any stories you think we should cover, vote things up or down, give
us your insights, LinuxActionShow.Reddit.com.
Last but not least, you've heard from our mumble room.
You can be part of that.
If you'd like to comment on these stories, if you're an observer of Linux and things
like that, join our virtual lunch, go over to jblive.tv.
We do this show on Tuesdays, 2 p.m. Pacific and if you go into our chat room, you can
do bang mumble, that's the exclamation mark, bang mumble and it'll give you our mumble
server address and it's an open room.
Our mods just check your mics, make sure you're gonna pass the audio checks and then you can
join us and comment on these stories.
We'd love to hear from you.
JupiterBroadcasting.com slash calendar will also have that in your time appropriate time
zone.
The robots do that, Matt.
We got robots just on standby.
That's how much skills we got here, I think.
Something like that.
All right.
Well, we'll wrap it up right there.
Thank you everyone for joining us this week on Linux Unplugged.
Be sure to join us on Sunday for a great Linux Action Show.
That's coming up and then we'll be right back here next Tuesday.
Matt, have a great week and make sure, I'll make sure I have some Coca-Cola for you on
Sunday because that was a disaster last time.
That was unforgivable.
All right, everyone.
Thanks so much for tuning this week's episode of Linux Unplugged.
See you right back here next week.
You know what I realized is out of context, it sounds like I'm talking about like the
kind of Coke you snort.
I'll get you some more Coke, Matt.
This makes sure the mirror's actually been wiped off this time.
That's the biggest issue I have.
I mean, I can't stand it when there's like snot.
Sorry about that.
That's terrible.
Yeah, blame that on the kids, Matt.
I blame that on the kids.
All right.
So there was a story I wanted to talk about in the post show.
Everybody go to JBtitles.com when we talk about this and vote real quick.
But I don't know if you guys saw this, but the Times of India today ran a story talking
about massive gross that Ubuntu is seeing in India.
And it's not Ubuntu Touch.
It's Ubuntu on the desktop.
The Linux-based operating system grew 50% year over year in – oh, look at that nice
full-screen pop-up Times of India.
That's so classy.
50% year over year, Canonical, the company behind Ubuntu, has partnered with Dell and
HP to bundle the OS.
Enterprises have been moving more to the cloud.
They've not commented.
And as more enterprises move to the cloud, they'd like to have the same operating system
on the desktop and on the server.
This is according to Greyhound Research's CEO.
And online directory service just dials among early adopters of Ubuntu, has 4,500 desktops
running Ubuntu currently.
And I say it because they have a web-based app.
It works real nice.
So here you go.
India.
Ubuntu is exploding in India.
And I guess what my point is, I guess what I get all upset about, and maybe I'm just
totally wrong.
I admit that I could be wrong on this.
But damn, it seems like Ubuntu just has like some kind of crazy-ass inertia right now.
And more and more people and governments and countries are adopting it.
Right at the time, they're like, oh, mobile, over here, look at this, over here.
Like they're getting like, oh yeah, 50% year over year growth in India.
In India.
That's huge, right?
That's fundamentally huge.
Yeah, I mean, I think my big concern is that I do feel like that they constantly are – they
fall into the PC is dying mindset.
Okay, yes, mathematically, statistically, if you pound numbers hard enough, technically
speaking, there's a big decline.
No question about that.
Well, actually, just recently, actually tablet sales are down.
Apple's tablet sales are down.
Tablet sales are down and PC sales are up right now.
Well then there you go.
The numbers would be yes.
So yeah, that totally kind of makes the point.
You can't get caught into these trends.
I mean, at the end of the day, people need to do things on their computers.
I've tried doing things on a tablet.
I can't stand it.
I can't actually get work done on a tablet.
But I can on a computer.
I'm weird.
I like a keyboard and mouse.
I'm strange.
So –
Am I wrong in the – my general sense of it is like they're like Luke Skywalker and
like somebody on the radio is like stay on target, stay on target, Luke, stay on target.
And then at the last stretch, they veered off target and like now it's just – now
despite that, they're still seeing adoption.
Well, here's what's happening.
Luke Skywalker's on target doing his thing.
And here comes Han Solo on the big mobile phone, yeehaw, you know, and he does whatever
the hell he does.
He gets all the credit.
You got it, kid.
Josh, you think I got it wrong, Josh?
Yeah.
I mean, most of these governments are, you know, deploying large bounds of LTSs.
You know, it's not like they're going to be putting the bleeding edge 14.10 unicorns
on there or something.
So you think it doesn't matter?
No.
I mean, that still matters.
A lot of the work that's being done for mobile is going to occur during the times between
LTSs.
So by the time an LTS lands, it's theoretically going to be stable and unit D8 should by then
have landed an LTS and if not, then they'll just be supporting unit D7.
Where that argument falls down is that presupposes that they can afford about a two to five year
window where not a lot of improvements are made on the desktop.
And I mean, you just look at that article we just read, Linux is trapped in this uncanny
valley where we're like good CG, but we're not yet convincing CG.
And every time we release a new movie, we're finally like, yeah, man, that CG was good.
And then you see the next movie and you're like, oh yeah, that CG was way better than
the last movie.
That's where desktop Linux is at.
We're in the uncanny valley where we just can't quite seem to nail it.
And I would argue the last, last thing we need to do is dial it back and put it on the
back burner for a couple of years while we focus on a completely unproven platform that's
completely already dominated by massive multinational companies.
Well, I'd just like to also point out, they may not work on the desktop for a couple of
years.
How long did XP go in use without it being worked on?
But that's not fair though, because no, that's not fair because Microsoft continued to release
service packs.
They made fundamental changes in SP3 to Windows XP.
I mean, so they've continued to release, they've continued to release Internet Explorer, Windows
Media, DirectX, all of these things over the lifespan of Windows XP got updates that added
fundamental new functionality to the operating system.
Right, but Ubuntu is doing the same thing for, I mean, Canonical is doing the same thing
for Ubuntu.
They released hardware enablement stacks for new kernels and new drivers and such, and
they keep deploying new versions.
You're comparing a finished product to something that's not good enough.
The Ubuntu desktop is not good enough.
It's not good enough.
XP at the time was good enough for the market.
I think that's subjective.
Right.
Yeah.
No, no, no, no, no, it's not.
It's subjective to who?
The millions of people that are not buying Ubuntu-based machines?
That's who it's subjective to.
I mean, look at the sales.
The sales bear it out.
It's subjective to only us because we're the ones willing to tolerate the pain.
I think as a community, we fail to recognize the severity of the problem, and I think this
plays into the mass sales of MacBooks and Mac OS X, is we are blind to it.
We recognize it's kind of there, but we don't see it.
It's that, again, I go back to Uncanny Valley, to us, it looks good, but you show it to somebody
else.
You're like, man, that looks like horrible CG.
I've had people who think that Linux looks great, but they think it's too expensive or
too hard to set it up, but if there was a company that just took Chromebooks and System
76 dialed it and just turned it into a Linux machine and then they sold it as a product,
that would bring in a ton of people.
Yeah, I mean-
Well, since the proposed argument here is that we aren't objective because we're using
it, but everyone that I've- every single person I've installed Ubuntu on, and I always
installed Ubuntu with Unity, none of them have hated it or thought it was bad.
They just never knew it existed.
Yeah, but you could make that same argument if you gave them a MacBook Air.
I definitely would make the same argument, too, it's just they can't afford that.
They probably have a Mac if they could afford it.
Yeah, I think part of the mistake is we almost should really stop comparing it to Windows
in a sense because I think people who have decided to make the Switch aren't necessarily
shopping to other Windows machines.
If you're making the Switch away from Windows, by right now, by default, you're almost just
going to the Mac.
There's also a really weird fundamental thing here.
Tablets are tablets, PCs are PCs, mainframes are fucking mainframes.
They don't go anywhere.
They're still around from like 40, 50 years-
Yeah, they're their own technology branch.
Yeah, true.
That's a great point.
Little desktops or little friggin' mobile things, that's their own niche.
They're not gonna replace desktops.
Desktops are here for pretty much the end until we, I don't know, 120 years from now.
I guess the core issue, back to Josh's point that I take the most problem with is this,
I go back to this problem that I've talked about a million times, but we've had two huge
windows of opportunity for desktop Linux, specifically for Ubuntu, more so than any
other distribution.
One was Windows Vista, which they blew it by that's when they switched to Unity, and
the second one is Windows 8, which we've now blown it by just kind of sitting and putting
the desktop on the back burner.
And maybe for some of you, and this is no judgey, I mean, legitimate, maybe for some
of you, Ubuntu truly has solved all of the little niggles that bother you, and it's fine.
You're very fortunate.
For me, when I use Ubuntu, it starts to feel very dated.
It feels very old.
There's things about it that should have been addressed a long time ago.
There's little things that shouldn't be like that anymore.
And it, to me, I sit there and I see a desktop that's been neglected, and I can't see past
that neglection when I use Unity and when I use Ubuntu.
All I can see is the neglection.
Now if you don't see that neglection, that's great for you, but it is a reality because
they're obviously focused on other things, and isn't this just, God damn it, the wrong
time to lose your focus on the ball?
It's coming right into the mitt.
You can make the perfect catch.
Well, and to reiterate what you were saying, I want to expand on that.
Take the software center, you know, that thing that has not been updated since I can't even
remember how long.
The comical part of it is, is they, when Canonical actually went and did this whole thing, they
got people from Linspire who did the original software center, which, by the way, in 5.0,
was way cleaner and way, way, way, way easier to use than it is in Ubuntu.
It was one click to install software.
Granted, bad, bad, bad permissions.
It was admin.
It was evil.
It was terrible.
I get that.
But the point is, is the end user didn't care, and yet, and now they managed to actually
take those developers, apparently make them make a crappier product, and then, okay, we're
done.
Let's make a phone.
I mean, what the hell were they smoking?
I don't understand that.
I mean, to this day, it infuriates me when I show, when I see the software center.
I just want to, I just want to punch my screen.
I hate it.
Well, and it's systemic of like a failure to complete, like, like they almost get there
and then they never bust it.
Like so, for example, like they get so.
Well, how the hell is it production?
They get so close to something good, and then they say, oh, we're not making any money off
the software center.
Instead of making the software center great, they just kind of bail and say, well, that
was our path to revenue.
That didn't pan out.
It's a bloated bag of stuff.
I'm not going to say on the air.
I mean, it's horrible.
So, you know, I can't understand.
I mean, let me put it this way.
I can run it faster in the most bloated browser possible.
I can run it like IE6 faster than I can, and it is better on the web.
All right.
Well, that's why I hate you, but when people know our perspectives of why I don't trust
them anymore or dislike them, yeah, so the same way, too, about everything that you said
about Ubuntu.
Like, that's why I run Gnome 3 on Arch, but I just don't think that perspective that they're
not doing enough is inherent in the average consumer that these companies and governments
are catering to.
Right.
So for enterprise and governments is not necessarily as important.
Let's be honest.
They're not.
They do a good job there.
They do a good job for enterprise.
Generally speaking.
Yeah.
If you need a calendar, if you need email, it's not as important.
It doesn't matter as much.
It just got to work.
Yeah.
That's why XP worked for them.
Yeah.
Oh, God.
Okay.
You know?
Yeah.
So if we all hate Ubuntu, then what do we go to?
What's the next solution that we can hand out to people?
I would say the outrage comes from the fact that people don't hate it.
The outrage comes from the fact that people want it fixed.
Yeah.
That's it.
That's my problem is that I like the Ubuntu core.
I do.
I like the base.
I like Ubuntu.
Even Unity, with all its faults, is great.
I can get over so much of all the things because they do a lot of nice things that I notice.
When I boot into it, it's like, oh, hey, things that I would normally like to tweak are just
done.
And look at what happened when Steam was announced.
You could see how it was important for Valve to have a company to reach out to canonical
and say, hey, we want to work with you guys.
We're going to use this.
And hey, how does this work?
How does this work in your kernel?
Can you do hardware enablement?
These kind of things, these back and forths.
Having a company behind a widely used desktop product is beneficial because that's how the
industry works.
Right?
I don't think you could ever have Arch be the number one distro on desktops because
there's not a company for the rest of the business world to interface with.
There's not a CEO that goes up on stage and announces features and gets everyone's attention.
So you need a canonical.
You do.
And I think going even further than that, I would point out the fact that I realize wholeheartedly
that Ubuntu, there's certain things you're just not going to be able to just magically
fix.
I get that.
But some of the things that are wrong with it are so stupid obvious.
It makes my brain hurt.
If you know an app sucks, first of all, for the love of Pete, fix your stupid bug reporting
system.
Get a grip.
We're not all developers.
I don't want to sit there and spit out a buttload of text about stuff, half of which I'm not
going to read.
Look, make it stupid easy.
When I crash something on any other operating system, God, just get a grip, guys.
There's just little things they can fix.
That's an example of negligence.
That's a perfect, like the app report thing, how is that still a thing after all this time?
How is that still a thing?
It's negligence.
Especially when it doesn't tell you.
Yeah.
There's been an error when it doesn't tell you what it is.
Go after yourself.
We want them to succeed, but they just freaking aren't doing it, right?
My favorite.
We're pissed off that they're not doing it.
They should.
My favorite one was, there's a new version of your proprietary graphics driver.
Okay.
Well, let's install that.
Oh, now I don't have any picture.
Now I'm in a shell.
Now what do I do?
Oh, I'd look it up on the internet, except I don't have internet, because I have no picture.
Is that really the fault of Ubuntu and not the fault specifically about the developers
of said driver?
Well, they're the ones that pushed it out to me.
That's the problem.
Yeah, the end user, all they know is there's a driver, and it's newer than what's there,
and they might want to play their games better, so why don't I click to install it?
Oh, now I don't have a picture.
Well, and that was probably a function of the tool, right?
The tool shouldn't have completed the installation if there was a mistake.
Exactly.
Let's do it again if you haven't updated.
