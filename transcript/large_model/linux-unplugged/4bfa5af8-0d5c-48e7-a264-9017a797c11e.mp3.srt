1
00:00:00,000 --> 00:00:03,540
I think I've made an interesting discovery regarding the Raspberry Pi 4 that I haven't

2
00:00:03,540 --> 00:00:05,860
seen a lot of people talking about.

3
00:00:05,860 --> 00:00:12,140
You know how they announced at the launch of the Pi 4 that it didn't yet support USB

4
00:00:12,140 --> 00:00:13,140
direct boot?

5
00:00:13,140 --> 00:00:15,020
Right, a lot of people have been waiting for that.

6
00:00:15,020 --> 00:00:18,540
Turns out it appears to be just a Raspbian kernel issue.

7
00:00:18,540 --> 00:00:21,620
It's not actually a hardware issue with the Raspberry Pi 4.

8
00:00:21,620 --> 00:00:22,620
No.

9
00:00:22,620 --> 00:00:28,900
Yeah, I just got Ubuntu 2004 flashed to a USB SSD and I have the SD card in there simply

10
00:00:28,900 --> 00:00:35,100
for boot and I have the SSD still plugged in and it's now booting and running entirely,

11
00:00:35,100 --> 00:00:38,540
the entire OS, from the SSD.

12
00:00:38,540 --> 00:00:40,980
I think I have to leave the SD card in there for boot.

13
00:00:40,980 --> 00:00:42,500
I should try pulling it out and see what happens.

14
00:00:42,500 --> 00:00:43,500
We've got some homework.

15
00:00:43,500 --> 00:00:47,060
Yeah, yeah, but it's been really interesting because I was going through this entire process

16
00:00:47,060 --> 00:00:51,260
of trying to figure out how to get the Pi 4 to run off of an external disk because the

17
00:00:51,260 --> 00:00:52,260
SD cards are so slow.

18
00:00:52,260 --> 00:00:53,260
So slow.

19
00:00:53,260 --> 00:00:54,260
So slow.

20
00:00:54,260 --> 00:00:58,520
And so I was looking at this and I started thinking, reading between the lines of what

21
00:00:58,520 --> 00:01:04,560
these people are talking about in these patches, it seems like I could just reboot and try

22
00:01:04,560 --> 00:01:05,560
it.

23
00:01:05,560 --> 00:01:09,860
And so I changed a couple of disk labels, reboot, and boom, there I was running the

24
00:01:09,860 --> 00:01:11,900
whole thing off of a USB disk.

25
00:01:11,900 --> 00:01:18,700
And I found a form thread where somebody else had announced that they had the same revelation

26
00:01:18,700 --> 00:01:23,480
that I just had because people are coming across this and in there they say, yeah, it's

27
00:01:23,480 --> 00:01:24,940
just a Raspbian kernel bug.

28
00:01:24,940 --> 00:01:28,060
I haven't found verification of that, but they say it's actually totally capable of

29
00:01:28,060 --> 00:01:29,060
doing it hardware-wise.

30
00:01:29,060 --> 00:01:40,260
I had no idea.

31
00:01:40,260 --> 00:01:44,740
Hello friends and welcome into Linux Unplugged episode 347.

32
00:01:44,740 --> 00:01:45,740
My name is Chris.

33
00:01:45,740 --> 00:01:46,740
My name is Wes.

34
00:01:46,740 --> 00:01:47,740
Hello, Wes.

35
00:01:47,740 --> 00:01:48,740
Hello.

36
00:01:48,740 --> 00:01:49,740
Looking sharp today.

37
00:01:49,740 --> 00:01:50,740
Nice to see you.

38
00:01:50,740 --> 00:01:51,740
I like that hat.

39
00:01:51,740 --> 00:01:53,020
You know, you got to try to dress up when you have the chance during quarantine.

40
00:01:53,020 --> 00:01:54,020
That's right.

41
00:01:54,020 --> 00:02:01,020
Listen, we have a show for you that has been many, many, many years in the making.

42
00:02:01,020 --> 00:02:03,940
I am very excited about today's community news.

43
00:02:03,940 --> 00:02:09,900
Plus we have another batch of fantastic community feedback as well as some early adventures

44
00:02:09,900 --> 00:02:17,900
in Ubuntu 2004 LTS on the Raspberry Pi 4 running from an actual proper SSD performance glory.

45
00:02:17,900 --> 00:02:23,140
I'll tell you about that in a little bit, but before we go any further, we got to say

46
00:02:23,140 --> 00:02:24,980
a big hearty hello to Mr. Bacon.

47
00:02:24,980 --> 00:02:25,980
Hey Cheezy.

48
00:02:25,980 --> 00:02:27,660
Hey Chris, Wes, and the Antinets.

49
00:02:27,660 --> 00:02:28,660
How y'all doing?

50
00:02:28,660 --> 00:02:30,380
Oh, we're doing all right.

51
00:02:30,380 --> 00:02:31,380
You holding in down there?

52
00:02:31,380 --> 00:02:32,380
Oh, I'm holding in, man.

53
00:02:32,380 --> 00:02:33,380
Just hanging out.

54
00:02:33,380 --> 00:02:37,660
I just picture you just like chilling, really, like anybody's going to handle this is going

55
00:02:37,660 --> 00:02:38,660
to be Mr. Bacon.

56
00:02:38,660 --> 00:02:44,060
Well, the only thing I'm missing is like actually being able to buy a brisket to smoke one,

57
00:02:44,060 --> 00:02:45,060
you know?

58
00:02:45,060 --> 00:02:46,060
Yeah, I agree.

59
00:02:46,060 --> 00:02:47,060
But other than that, I'm holding in pretty good.

60
00:02:47,060 --> 00:02:50,480
As long as you are stocked up on them brats.

61
00:02:50,480 --> 00:02:55,060
Also a big time appropriate greetings to a massive virtual log.

62
00:02:55,060 --> 00:02:59,060
Hello Mumble Room.

63
00:02:59,060 --> 00:03:01,480
Is this a record?

64
00:03:01,480 --> 00:03:03,100
I think we're breaking a record right now.

65
00:03:03,100 --> 00:03:05,540
We have 40 people in the Mumble Room.

66
00:03:05,540 --> 00:03:07,900
It's absolutely bananas.

67
00:03:07,900 --> 00:03:11,740
I would sit here and give a shout out to everybody, but I think that would take too long.

68
00:03:11,740 --> 00:03:16,500
I just want to make a specific mention that I think it's so awesome that those of you

69
00:03:16,500 --> 00:03:19,980
who can are showing up it's it's such a huge sign of direct report and I want to

70
00:03:19,980 --> 00:03:23,460
say a special shout out to Philip from manager who will be chatting with a

71
00:03:23,460 --> 00:03:26,820
little bit more hello Philip good to have you here today hello I'm happy to

72
00:03:26,820 --> 00:03:30,700
be here as well I am happy to talk about your news in just a short bit so before

73
00:03:30,700 --> 00:03:34,820
we get to that I want to mention my adventures with the Raspberry Pi 4 I I

74
00:03:34,820 --> 00:03:39,520
I have decided to yet again purchase another Raspberry Pi 4 I think this is

75
00:03:39,520 --> 00:03:44,560
my fourth now that's fitting I'm very happy with them and I just enough

76
00:03:44,560 --> 00:03:47,700
machine I really like the fact that I have three of them running and like

77
00:03:47,700 --> 00:03:51,420
collectively I think they take like 50 watts of power collectively maybe and

78
00:03:51,420 --> 00:03:55,460
that's with the switch and the router on the same meter it's like all of it with

79
00:03:55,460 --> 00:04:00,460
the full networking infrastructure it's it's how it's wonderful and for me be

80
00:04:00,460 --> 00:04:04,100
running off battery that really matters and so I just kind of scale out

81
00:04:04,100 --> 00:04:07,100
horizontally with these raspberry pies instead of getting one really big

82
00:04:07,100 --> 00:04:12,220
powerful box but the key thing that has really driven me crazy is SD card

83
00:04:12,220 --> 00:04:16,300
performance and then there's another thing that I I have lived with but not

84
00:04:16,300 --> 00:04:20,380
have not have been thrilled about can you guess what that might be you know me

85
00:04:20,380 --> 00:04:24,140
what's my key what am I complaining about with my Raspberry Pi 4 right now

86
00:04:24,140 --> 00:04:29,540
Raspbian yeah I mean I love the project I'm very grateful for it but just

87
00:04:29,540 --> 00:04:33,700
different enough right it doesn't always fit with your sys admin instincts

88
00:04:33,700 --> 00:04:37,660
exactly kind of feels I don't know it's consumer grade mean cheese is that the

89
00:04:37,660 --> 00:04:42,780
wrong way to put it it just doesn't seem like it's a server OS no I don't feel

90
00:04:42,780 --> 00:04:47,500
that it is but I feel that it's supposed to be an entry-level OS you know I think

91
00:04:47,500 --> 00:04:52,500
in with the Raspberry Pi you know from their conception they've been kind of

92
00:04:52,500 --> 00:04:59,140
entry-level devices for tinkers and and I think that the the OS they ship is is

93
00:04:59,140 --> 00:05:02,740
what we should expect them to ship you know yeah and they've done a great job

94
00:05:02,740 --> 00:05:07,620
with it but it is it is quite different you know their own config tool which

95
00:05:07,620 --> 00:05:11,740
is nice helps out a lot with a lot of things but but yeah it's it definitely

96
00:05:11,740 --> 00:05:17,060
feels consumer consumery to me and I had some weird breakage recently where it's

97
00:05:17,060 --> 00:05:21,300
complaining that my time zone data file has missing lines and that my Linux

98
00:05:21,300 --> 00:05:26,540
image packages are empty I have done nothing with this device it is a minimal

99
00:05:26,540 --> 00:05:29,980
Raspbian install that I've just kept up to date about once a month and then

100
00:05:29,980 --> 00:05:34,380
everything else is in containers there's nothing installed on the base OS and it

101
00:05:34,380 --> 00:05:36,620
broke on me I mean it just sort of suggests some of the problems from

102
00:05:36,620 --> 00:05:40,500
running a smaller distribution sort of customizing things versus just you know

103
00:05:40,500 --> 00:05:43,620
one of the big ones that's really well tested and perhaps it is something at

104
00:05:43,620 --> 00:05:48,420
some point I did maybe experimenting with WireGuard or something yeah and

105
00:05:48,420 --> 00:05:53,940
that is that is also why it's maybe not the best OS for me because those are not

106
00:05:53,940 --> 00:05:58,220
the mistakes I might make on Ubuntu I wouldn't make that mistake necessarily

107
00:05:58,220 --> 00:06:01,500
on Arch but because I'm just not as familiar with a Debian base these days

108
00:06:01,500 --> 00:06:06,300
I'm more familiar with Arch and some to some lesser extent Ubuntu right you're

109
00:06:06,300 --> 00:06:09,900
not installing Raspbian or Debian on any of your other systems right exactly

110
00:06:09,900 --> 00:06:13,740
exactly and so when the opportunity came around when Canonical made the

111
00:06:13,740 --> 00:06:16,440
announcement that they were making the Raspberry Pi like a full featured

112
00:06:16,440 --> 00:06:21,000
platform I was like all right well when 2004 gets close I'm gonna give it a go

113
00:06:21,000 --> 00:06:24,980
and so I think we should emphasize that because instead you're migrating away

114
00:06:24,980 --> 00:06:28,780
from a custom build operating system for the hardware that should be like a great

115
00:06:28,780 --> 00:06:33,780
match to a LTS release that hasn't even been released yet yeah I mean I'm not

116
00:06:33,780 --> 00:06:39,740
throwing this in production yet but I probably will if it all goes well and so

117
00:06:39,740 --> 00:06:46,020
I downloaded the Raspberry Pi image the current daily used gnome disk to your

118
00:06:46,020 --> 00:06:49,460
and wimpy suggestion to restore it quote-unquote it works pretty darn well

119
00:06:49,460 --> 00:06:53,100
now it does and I like seeing the transfer speed and it's nice not having

120
00:06:53,100 --> 00:06:57,340
to install anything extra it's just right there and I popped that SD card

121
00:06:57,340 --> 00:07:01,620
into the Raspberry Pi 4 and it is about what I expected because I've actually

122
00:07:01,620 --> 00:07:05,500
tried I've tried to get other versions of Ubuntu on the Pi 4 working before

123
00:07:05,500 --> 00:07:09,340
although everything works all the hardware works everything's detected

124
00:07:09,340 --> 00:07:15,620
that's wonderful the only problem was it was on that dang SD card and I want it

125
00:07:15,620 --> 00:07:20,660
on something much faster there's a lot of ways you could you can crack this

126
00:07:20,660 --> 00:07:26,420
including hats that give you SATA interfaces oh yeah I don't know if

127
00:07:26,420 --> 00:07:32,740
they're over USB or not I assume and as well as USB 3 adapters that plug

128
00:07:32,740 --> 00:07:37,740
directly into an MV and eDrive so it's just like raw MV me or whatever into a

129
00:07:37,740 --> 00:07:43,300
USB port and it looks ridiculous yeah I mean it must work well but I like to

130
00:07:43,300 --> 00:07:47,340
have my Raspberry Pi is nice and tight I got them in flirt cases they're velcro

131
00:07:47,340 --> 00:07:52,180
to the inside wall of my booth seat like it's all nice and tidy I have everything

132
00:07:52,180 --> 00:07:56,180
labeled you know it's like my one space where I've been able to really have a

133
00:07:56,180 --> 00:08:03,100
little craftsmanship and so I got one of those Samsung SSDs that must be just an

134
00:08:03,100 --> 00:08:09,500
MV me in the little enclosure and it's just a USB C port no power that goes to

135
00:08:09,500 --> 00:08:16,700
USB 3 port on the Raspberry Pi I wrote the same image that I wrote to the SD

136
00:08:16,700 --> 00:08:23,780
card I wrote that same image to the SSD I booted off the SD card first checked

137
00:08:23,780 --> 00:08:26,700
things out didn't update anything but I did change the default password

138
00:08:26,700 --> 00:08:32,180
generated an SSH key I eventually changed the hostname as a test then I

139
00:08:32,180 --> 00:08:37,860
plugged in the SSD that I just written the same image file to change to disk

140
00:08:37,860 --> 00:08:42,900
label I'll put the link to that in the show notes rebooted the box and the

141
00:08:42,900 --> 00:08:47,980
Raspberry Pi 4 from that point forward runs off of the SSD and it's fantastic

142
00:08:47,980 --> 00:08:53,660
and every operations faster yes it's USB 3 but that is something a limitation

143
00:08:53,660 --> 00:08:56,260
because of the type of workload these things are doing I'm willing to take

144
00:08:56,260 --> 00:09:00,180
mostly the applications I run they load up and RAM and then they only write to

145
00:09:00,180 --> 00:09:04,220
disk when they're logging I mean you could tell immediately just SSH out of

146
00:09:04,220 --> 00:09:08,780
the box that all right this feels like a regular system like an x86 box right

147
00:09:08,780 --> 00:09:12,160
that was my first thought is oh this feels like an x86 machine which is

148
00:09:12,160 --> 00:09:16,460
probably old thinking now obviously is but it's incredible when you look at the

149
00:09:16,460 --> 00:09:20,420
size of these things the power draw the only the only part it really fell down

150
00:09:20,420 --> 00:09:24,020
is I tried to go next level and I know this was a risk I didn't even know if

151
00:09:24,020 --> 00:09:27,860
would be possible so I'm not disappointed that it didn't work out but

152
00:09:27,860 --> 00:09:32,420
I thought to myself okay the ultimate setup I'll run my home assistant

153
00:09:32,420 --> 00:09:37,020
appliance in a VM on a Raspberry Pi 4 because this thing's fast you know it's

154
00:09:37,020 --> 00:09:40,100
fast it's legitimately fast so we could do that right that's got KVM on there

155
00:09:40,100 --> 00:09:45,260
yeah you got KVM for ARM Raspberry Pi CPUs are designed in a modern era surely

156
00:09:45,260 --> 00:09:51,340
they must have some VT and VTD type analogy and they're built into their

157
00:09:51,340 --> 00:09:54,920
CPU that makes virtualization so damn great on the Intel platform this should

158
00:09:54,920 --> 00:09:59,220
be a no-brainer get KVM installed I even get a remote vert manager from my

159
00:09:59,220 --> 00:10:03,620
laptop connected to it I'm setting up VMs I'm importing disk files it's

160
00:10:03,620 --> 00:10:11,940
looking really good power it up and it is unbearably slow things that when

161
00:10:11,940 --> 00:10:15,420
you're running off a native disk would happen so fast you could barely see them

162
00:10:15,420 --> 00:10:18,860
go across the screen we're happening at what would you say like a minute or two

163
00:10:18,860 --> 00:10:23,620
oh yeah yeah even though we weren't trying to emulate x86 we were just

164
00:10:23,620 --> 00:10:29,700
trying to run an ARM OS in an ARM VM still was so slow I don't know maybe I

165
00:10:29,700 --> 00:10:34,580
set something up wrong you can tell it's kind of on the you know edge here we had

166
00:10:34,580 --> 00:10:37,420
to hunt for some solutions of other people actually trying to do the same

167
00:10:37,420 --> 00:10:40,620
thing and you've got to carefully select a lot of the virtual machine parameters

168
00:10:40,620 --> 00:10:43,460
that it's actually going to start booting correctly yeah don't make it a

169
00:10:43,460 --> 00:10:47,940
SATA CD-ROM make sure it's a SCSI CD-ROM otherwise it won't boot and don't try to

170
00:10:47,940 --> 00:10:51,220
make it a spice remote viewer if you're using virtual manager because then it

171
00:10:51,220 --> 00:10:54,860
won't boot in fact don't even bother with graphics a serial console just go

172
00:10:54,860 --> 00:10:58,740
serial console or it's not gonna work if you follow these things you will get a

173
00:10:58,740 --> 00:11:05,460
ARM Ubuntu VM inside KVM running on the Raspberry Pi 4 it will just be so slow

174
00:11:05,460 --> 00:11:08,660
that it's unusable and maybe I did something wrong but I don't I had I had

175
00:11:08,660 --> 00:11:12,420
you take a look at it too and you didn't see anything it was a very good reminder

176
00:11:12,420 --> 00:11:15,620
of just all the little differences when you're running on a totally different

177
00:11:15,620 --> 00:11:19,420
platform so and the reason why I wanted to do this is I was only going to run a

178
00:11:19,420 --> 00:11:24,980
single VM I just wanted to have that snapshot capability so I could have a

179
00:11:24,980 --> 00:11:30,020
several layers of protection and also make it crazy super portable it's just

180
00:11:30,020 --> 00:11:33,300
nice to have right it's a pattern that's worked well over an x86 world and these

181
00:11:33,300 --> 00:11:37,700
pi 4s are just so cookie cutter the same that I could just move it over to

182
00:11:37,700 --> 00:11:41,020
another one powered up and everything's the same it's it's even simpler than

183
00:11:41,020 --> 00:11:44,900
like from I could buy I could probably buy a Raspberry Pi 4 in five or six

184
00:11:44,900 --> 00:11:48,060
years even because look how long some of the older players around you can't say

185
00:11:48,060 --> 00:11:52,940
that for like a Dell mini form factor PC or a NUC unless you go maybe on eBay

186
00:11:52,940 --> 00:11:57,900
maybe get lucky but these are like exactly to go yeah right you have your

187
00:11:57,900 --> 00:12:03,380
little Raspberry Pi VM image available gosh that was the dream so instead I

188
00:12:03,380 --> 00:12:06,620
will just dedicate the entire pie to the task which means I will continue to

189
00:12:06,620 --> 00:12:11,220
scale out horizontally I'm curious if anyone in the audience is maybe given to

190
00:12:11,220 --> 00:12:17,380
try know some things we're missing yeah I will say that canonical is making a

191
00:12:17,380 --> 00:12:22,340
smart decision doing this because it is a first-class experience now on the pi

192
00:12:22,340 --> 00:12:27,340
4 and it's it's great I think I'm as much as I appreciate Raspbian I think

193
00:12:27,340 --> 00:12:30,260
I'm probably done with it and I'm just for my comfort level and my knowledge

194
00:12:30,260 --> 00:12:34,300
level and just because I actually for some crazy reason to decide to use these

195
00:12:34,300 --> 00:12:37,740
as servers and not necessarily as desktop devices or devices I'm I'm not

196
00:12:37,740 --> 00:12:40,660
trying to configure the GPIO pins and I'm not trying to do all the things that

197
00:12:40,660 --> 00:12:45,340
raspy config does I just want something to run containers and so it does that

198
00:12:45,340 --> 00:12:50,340
for me so I'll just I'll just put LTS on there I could I could maybe do home

199
00:12:50,340 --> 00:12:53,820
assistant in container but I kind of want experience with the whole right

200
00:12:53,820 --> 00:12:56,900
you want the whole stack Alex has been talking me into that on self hosted so

201
00:12:56,900 --> 00:12:59,560
that's how I got down this hole you're just trying to find the laziest way to

202
00:12:59,560 --> 00:13:03,220
run containers that you can that's the real he convinced me that I got to try

203
00:13:03,220 --> 00:13:06,500
out the whole stack because I'm missing out on part of the overall thing and

204
00:13:06,500 --> 00:13:10,540
he's right he made his whole case and it's self-hosted and I was like I

205
00:13:10,540 --> 00:13:12,740
thought maybe he was wrong so then I listened back to the episode I was like

206
00:13:12,740 --> 00:13:18,900
damn it he's right this is the arm 64 version of Ubuntu right yeah 64 bit it

207
00:13:18,900 --> 00:13:21,820
was a four bit it was really nice seeing it over on their you know CD image

208
00:13:21,820 --> 00:13:26,180
server and daily pre-installed yeah here these ready-to-go daily images for the

209
00:13:26,180 --> 00:13:31,280
raspberry pi 4 yeah that's great Chris I was wondering about the hardware if you

210
00:13:31,280 --> 00:13:35,820
feel like you have enough personal experience now to speak to what you

211
00:13:35,820 --> 00:13:39,340
think might be the longevity of these boards I know some of the older ones

212
00:13:39,340 --> 00:13:43,160
just keep kicking but do you feel like you have heard enough in the community

213
00:13:43,160 --> 00:13:46,220
or have enough experience to speak to that at all I don't think I've heard of

214
00:13:46,220 --> 00:13:53,020
many failing I'm sure it happens I have at least three running 24-7 training

215
00:13:53,020 --> 00:13:55,980
maybe I even have yeah I think it's just three right now running 24-7

216
00:13:55,980 --> 00:13:59,980
definitely helps there's like no moving parts right so yeah and two of them are

217
00:13:59,980 --> 00:14:05,820
under pretty consistent high load I have one home assistant pie that's also

218
00:14:05,820 --> 00:14:09,220
running four or five other containers including ones that are constantly doing

219
00:14:09,220 --> 00:14:13,220
network diagnostics and logging that and visualizing that logging and then I

220
00:14:13,220 --> 00:14:17,180
have another pie that's running shinobi full-time and that's bringing in four or

221
00:14:17,180 --> 00:14:25,940
five yeah five camera streams into shinobi as RTMP and then in recording

222
00:14:25,940 --> 00:14:30,100
those pass-through recording but recording those to a USB disk

223
00:14:30,100 --> 00:14:34,340
simultaneously and then I have an I have another one that's just a network

224
00:14:34,340 --> 00:14:39,540
appliance that does my DNS my DHCP and runs pie hole and that one's probably my

225
00:14:39,540 --> 00:14:44,300
lowest usage but all three of them are required for my home network to function

226
00:14:44,300 --> 00:14:49,700
properly and I never have to mess with them I mean they just run 24-7 inside

227
00:14:49,700 --> 00:14:52,300
that little seat you know what I'm talking about the dinette there where

228
00:14:52,300 --> 00:14:56,260
it's just a it's a it's an enclosed seat and I've it opens up and it's hollow and

229
00:14:56,260 --> 00:15:00,980
I've put them in there so it's not even vented properly and it seems to be

230
00:15:00,980 --> 00:15:05,180
working great and part of the really nice thing for me is they're really

231
00:15:05,180 --> 00:15:08,180
they're really low power and eventually I'll be able to power them entirely off

232
00:15:08,180 --> 00:15:13,500
of DC so there's other advantages there may be more robust hardware in fact

233
00:15:13,500 --> 00:15:16,540
there's even more robust arm hardware Jesus just talked me into getting the

234
00:15:16,540 --> 00:15:21,820
pine rock 64 Pro which is I know anything about that thing really other

235
00:15:21,820 --> 00:15:24,820
than just what we read in the news I've never run one production either but it

236
00:15:24,820 --> 00:15:28,820
sounds like it's a hell of a board and so putting that into production too soon

237
00:15:28,820 --> 00:15:31,740
I'm trying other stuff but part of the thing I love about it is they're so

238
00:15:31,740 --> 00:15:35,060
swappable right and you've and we would talked a little bit about the value of

239
00:15:35,060 --> 00:15:37,540
having an operating system that sort of standardized across things and now

240
00:15:37,540 --> 00:15:40,300
you've got a standard platform too so you just have the fewest number of

241
00:15:40,300 --> 00:15:46,060
variables that you can yeah yeah so I'm gonna so I'm gonna try it out run it for

242
00:15:46,060 --> 00:15:50,380
a while and then I'll do my final thoughts in our Ubuntu 2004 review as

243
00:15:50,380 --> 00:15:53,580
part of that can I make a little late impromptu prediction here yeah I think

244
00:15:53,580 --> 00:15:58,980
you get two more pies before the end of the year I love them I really do in fact

245
00:15:58,980 --> 00:16:02,220
I want another one just for tinkering since all the ones I do have I end up

246
00:16:02,220 --> 00:16:07,100
putting in production so I want one just to mess around too you know all right

247
00:16:07,100 --> 00:16:09,420
well let's get into the community news we just have a couple of items and

248
00:16:09,420 --> 00:16:14,140
they're both just super super great news we start this week with the announcement

249
00:16:14,140 --> 00:16:23,380
of Linux kernel 5.6 which includes WireGuard 1.00 in the kernel

250
00:16:30,540 --> 00:16:36,540
I love that sound cool that's great I am so elated to announce this Wes and I

251
00:16:36,540 --> 00:16:41,980
have been explaining covering and introducing WireGuard over and over

252
00:16:41,980 --> 00:16:47,900
again since June of 2016 if you can believe it that's how long we've been

253
00:16:47,900 --> 00:16:52,180
talking about it on this show some of these things are really just long

254
00:16:52,180 --> 00:16:57,180
processes some things get integrated really fast but I think it's great that

255
00:16:57,180 --> 00:16:59,540
we've been following for that long because we've really documented the

256
00:16:59,540 --> 00:17:03,420
entire history of this project really wasn't that one of your predictions as

257
00:17:03,420 --> 00:17:07,740
well and the person must have been I believe having a WireGuard in the

258
00:17:07,740 --> 00:17:12,260
kernel was one of your predictions too this is so great it's so it's so great

259
00:17:12,260 --> 00:17:16,080
so you can check it out if you want to hear our early early coverage I actually

260
00:17:16,080 --> 00:17:19,220
did listen to it I meant to before the show started it's Linux unplugged comm

261
00:17:19,220 --> 00:17:24,380
slash 151 and here we are at episode 347 and it's almost like a new beginning now

262
00:17:24,380 --> 00:17:27,900
you know now that it's in the kernel it's gonna be deployed future embedded

263
00:17:27,900 --> 00:17:30,900
devices can start to take advantage of it there's other things in here though

264
00:17:30,900 --> 00:17:34,660
that are pretty neat you did a little bit of a West deep dive and found a few

265
00:17:34,660 --> 00:17:39,140
things I imagined that popped out at you I noticed one of the things I noticed

266
00:17:39,140 --> 00:17:41,820
was some nice performance improvements for butter FS for those that are using

267
00:17:41,820 --> 00:17:45,820
it including a smarter way to handle SSD trim yeah right before that was totally

268
00:17:45,820 --> 00:17:48,420
synchronous so you're writing and you have to wait for the trim operation if

269
00:17:48,420 --> 00:17:51,700
you've enabled it of course to succeed now that's asynchronous and gets

270
00:17:51,700 --> 00:17:56,300
handled in the background which should speed things up and I noticed came from

271
00:17:56,300 --> 00:18:00,260
Facebook so looks like they're still using butter FS over there huh and that

272
00:18:00,260 --> 00:18:04,620
wasn't the only file system to get some improvements f2FS that flash focused

273
00:18:04,620 --> 00:18:07,980
file system that's getting an experimental compression support which

274
00:18:07,980 --> 00:18:13,140
should speed things up and help improve the longevity of the of the SSDs and our

275
00:18:13,140 --> 00:18:16,420
favorite ext4 is even getting some performance work to improve things like

276
00:18:16,420 --> 00:18:21,060
database workloads which is really nice to see and it seems even XFS got a few

277
00:18:21,060 --> 00:18:24,980
32-bit fixes yeah it was kind of a little laggard there I know we like to

278
00:18:24,980 --> 00:18:29,820
talk a good XFS game here but it's finally ready for the future oh man and

279
00:18:29,820 --> 00:18:33,920
it seems there's some networking stuff in there as well right yeah multipath

280
00:18:33,920 --> 00:18:37,300
TCP support is finally making its way mainstream there's been out of tree

281
00:18:37,300 --> 00:18:40,500
support for a long time oh it's actually in yeah I don't know if it's everything

282
00:18:40,500 --> 00:18:43,460
but it's sort of the first batch of stuff that's gonna make it really start

283
00:18:43,460 --> 00:18:48,540
to work which is good because that iOS platform has had it for ages yeah yeah

284
00:18:48,540 --> 00:18:52,140
so you'll see that it is as a user facing feature on iOS it's implemented

285
00:18:52,140 --> 00:18:57,260
as as supplementing bad Wi-Fi with LTE something the phone will prompt you hey

286
00:18:57,260 --> 00:19:00,620
you know I can I can use both connections right and it's just protocol

287
00:19:00,620 --> 00:19:03,060
support built right into the protocol so that all this makes sense you don't have

288
00:19:03,060 --> 00:19:07,500
you know janky reconnect reconnections it's all understood yeah some stuff were

289
00:19:07,500 --> 00:19:10,300
a little slow on but some stuff we're like ahead of the curve on yeah there's

290
00:19:10,300 --> 00:19:14,040
a new some new changes a new scheduler so to help fight that buffer boat problem

291
00:19:14,040 --> 00:19:17,180
so you see stuff for you know devices as well as servers which really speaks to

292
00:19:17,180 --> 00:19:22,380
all the crazy ways that Linux is used one thing I know even though I don't use

293
00:19:22,380 --> 00:19:26,740
this very much you know virtual box that that Oracle product if you've ever used

294
00:19:26,740 --> 00:19:29,620
run a Linux VM inside one of the first things you have to go do is go get there

295
00:19:29,620 --> 00:19:33,020
get the you know the extension CD so it has all the nice support and features

296
00:19:33,020 --> 00:19:36,540
whatever right go to the Oracle website and download it and they make you sign

297
00:19:36,540 --> 00:19:39,580
you know agree to some license and all this horrible stuff yeah there are now

298
00:19:39,580 --> 00:19:43,460
there's now open source versions of that in the kernel we should make one in

299
00:19:43,460 --> 00:19:47,620
Linux VMs on virtual box a lot simpler yeah especially setting up those shared

300
00:19:47,620 --> 00:19:51,140
folders it looks like so that's really nice and before you get too excited no

301
00:19:51,140 --> 00:19:54,940
this work was not contributed by Oracle you can thank the community for this no

302
00:19:54,940 --> 00:20:02,340
I might not surprised I was surprised to see USB for support landing in kernel

303
00:20:02,340 --> 00:20:06,140
five six I I can't believe how far I don't know if any USB for device on the

304
00:20:06,140 --> 00:20:08,780
market yet yeah they're coming soon there's a couple of things in the works

305
00:20:08,780 --> 00:20:11,820
I've been able to find but it was the specification was little finalized I

306
00:20:11,820 --> 00:20:16,900
think back in September 2019 so it does help that it's basically just Thunder

307
00:20:16,900 --> 00:20:21,180
bolt 3 turned into a USB standard but sure but it has come along with some

308
00:20:21,180 --> 00:20:24,340
nice cleanup too for the existing Thunderbolt code in the kernel so that's

309
00:20:24,340 --> 00:20:26,900
good you know what else we're getting as well

310
00:20:26,900 --> 00:20:33,460
ex fat native in the kernel this is the release this is the release and it's not

311
00:20:33,460 --> 00:20:40,460
the Samsung written ex fat driver but it is ex fat so Brent another hallelujah we

312
00:20:40,460 --> 00:20:44,100
can actually read SD cards from cameras now that's great yeah you know that's

313
00:20:44,100 --> 00:20:48,200
only that's only a Canon problem I don't have trouble with that I'm I know listen

314
00:20:48,200 --> 00:20:52,020
to this guy listen I literally I literally solved this problem for my

315
00:20:52,020 --> 00:20:57,780
brother like three days ago wow it feels like the ex fat it's funny so

316
00:20:57,780 --> 00:21:02,060
that's an example wire guards is 2016 ex fat feels like it was what like middle

317
00:21:02,060 --> 00:21:05,260
of last year we talked about that and boom it's already there looks like

318
00:21:05,260 --> 00:21:08,780
actually it looks like it'll be in five seven oh so it's not quite they're not

319
00:21:08,780 --> 00:21:13,820
quite there but it has been emerged into the VFS next repository so it's coming

320
00:21:13,820 --> 00:21:17,940
so there could be okay so it could be very soon okay all right well you know

321
00:21:17,940 --> 00:21:23,220
what don't get my hopes up juice don't get my hopes up well that's a pretty

322
00:21:23,220 --> 00:21:28,900
solid release the only thing that is like kind of a come on about this

323
00:21:28,900 --> 00:21:35,240
release is that I just deployed Ubuntu 2004 and it's using kernel 5 4 which is

324
00:21:35,240 --> 00:21:38,620
fine it's fine and they're back porting wire guard right that's a thing yeah

325
00:21:38,620 --> 00:21:43,740
yeah back back ported to 2004 and then Debbie and Buster and then there's also

326
00:21:43,740 --> 00:21:48,980
by a different back port to five five dot four LTS release so it's all over

327
00:21:48,980 --> 00:21:51,820
the place all right you don't have an excuse not to be running wire guard

328
00:21:51,820 --> 00:21:56,380
frankly I think it's pretty freaking fantastic that it's 2020 and there's

329
00:21:56,380 --> 00:22:01,060
still things landing in the Linux kernel that we get excited about and this is

330
00:22:01,060 --> 00:22:05,940
something that you don't get on Windows and Mac OS like we we know about

331
00:22:05,940 --> 00:22:09,980
features sometimes years in advance you can plan for that you can start to build

332
00:22:09,980 --> 00:22:14,020
for that and you and I are already using wire guard nearly on the daily and it's

333
00:22:14,020 --> 00:22:17,020
you know it's something that we because we were able to follow this you're able

334
00:22:17,020 --> 00:22:19,140
to see the state of the technology you're able to read the mailing list

335
00:22:19,140 --> 00:22:22,900
sometimes you can get started ahead of the curve and it just gives you such an

336
00:22:22,900 --> 00:22:26,540
advantage the proprietary platforms don't have because yeah it's handy for a

337
00:22:26,540 --> 00:22:30,340
couple of podcasters here sure but imagine if you are building this at

338
00:22:30,340 --> 00:22:34,380
scale for an enterprise and you you could maybe already have a year two

339
00:22:34,380 --> 00:22:39,180
years experience with this tool as it lands and I just can't emphasize how

340
00:22:39,180 --> 00:22:44,020
freaking grateful we should be for that insight it is I think maybe reflective

341
00:22:44,020 --> 00:22:48,060
to know things get tend to get done in Linux it's definitely not always ready

342
00:22:48,060 --> 00:22:50,820
for everything right there are still a lot of enterprise use cases where by the

343
00:22:50,820 --> 00:22:53,740
nature of wire guard you're gonna have to roll some of the stuff like user and

344
00:22:53,740 --> 00:22:57,740
key management by yourself but that's also a great thing because it means you

345
00:22:57,740 --> 00:23:01,740
can totally take this rock-solid minimal secure technology in the kernel and

346
00:23:01,740 --> 00:23:05,500
build it into whatever you need and we're seeing tools almost every week

347
00:23:05,500 --> 00:23:10,720
now to help manage wire guard I just saw some crazy one that sets up a whole like

348
00:23:10,720 --> 00:23:15,780
home or small office network with a intranet and a wire guard page that

349
00:23:15,780 --> 00:23:19,020
generates the keys for you and gives you the QR codes to make it super easy for

350
00:23:19,020 --> 00:23:22,900
users to just scan with their iPhone or Android phone and set up wire guard and

351
00:23:22,900 --> 00:23:25,900
I think now that it's actually mainland we'll probably see even more of those

352
00:23:25,900 --> 00:23:29,820
yeah all right well let's shift gears and talk about some big news coming out

353
00:23:29,820 --> 00:23:33,540
of Manjaro felt welcome back to the show it sounds like we're gonna see some new

354
00:23:33,540 --> 00:23:37,700
hardware very soon preloaded with Manjaro on it what's the details exactly we

355
00:23:37,700 --> 00:23:44,300
launched our Intel laptop now with our partner Tuxedo and the new laptop is

356
00:23:44,300 --> 00:23:49,020
pretty slick yeah congratulations first of all and I noticed you said it's Intel

357
00:23:49,020 --> 00:23:54,220
for now so it sounds like an AMD version is also in talks yes I can even give you

358
00:23:54,220 --> 00:23:58,740
some details for that later on no problem is that oh interesting so I'm

359
00:23:58,740 --> 00:24:03,220
looking at it right now the Manjaro infinity book pro 15 it's got a really

360
00:24:03,220 --> 00:24:09,140
really slick I guess back to the to the to the top of the screen talk a little

361
00:24:09,140 --> 00:24:11,780
bit about that did you guys work with them to design this thing from like

362
00:24:11,780 --> 00:24:17,980
colors and logos and stuff like that well the logos and colors we designed

363
00:24:17,980 --> 00:24:24,040
together so yes the red version we already saw at the last export they did

364
00:24:24,040 --> 00:24:31,980
so we choose that model cause a red pops yeah and yes we we decided to make it

365
00:24:31,980 --> 00:24:37,860
like the logo from us and logo from them and join them together and decided also

366
00:24:37,860 --> 00:24:43,980
that we have to Manjaro super key and so on so it's really designed for the

367
00:24:43,980 --> 00:24:48,120
laptop the OS and the other way around as well well yeah that sounds like a

368
00:24:48,120 --> 00:24:52,100
real partnership yeah it's a tell me kind of big picture here is this is this

369
00:24:52,100 --> 00:24:55,540
kind of like a premiere Manjaro experience if I get this it's kind of

370
00:24:55,540 --> 00:24:59,620
like maybe gonna be eventually or is already like the best of the best well

371
00:24:59,620 --> 00:25:04,140
to see you has their own deployment system called Faye full automated

372
00:25:04,140 --> 00:25:10,200
installer and we managed to get Manjaro into that and yes we have to special

373
00:25:10,200 --> 00:25:16,140
wallpaper for it and the logos and the battery life and so on is optimized by

374
00:25:16,140 --> 00:25:20,500
Manjaro we have patched the kernel a little bit to make this machine really

375
00:25:20,500 --> 00:25:25,940
good working with it so yeah you will have a premiere Manjaro feeling when you

376
00:25:25,940 --> 00:25:29,620
have it and you can load it up with pretty premiere hardware to up to 64

377
00:25:29,620 --> 00:25:35,580
gigabytes of RAM you can get with a core i7 that has eight threads and up to 4.9

378
00:25:35,580 --> 00:25:41,900
gigahertz per core oh boy oh my gosh that's amazing and in a really nice

379
00:25:41,900 --> 00:25:45,540
looking machine so about how big and heavy is this thing if that's kind of

380
00:25:45,540 --> 00:25:48,140
hard to tell here on the site it doesn't look like it's too thick though it looks

381
00:25:48,140 --> 00:25:58,700
fairly thin yes person it's 1.6 kilograms heavy and it has an 15.6 inch

382
00:25:58,700 --> 00:26:05,460
monitor and it's matte no glare so you can even use it in the Sun and look at

383
00:26:05,460 --> 00:26:10,660
all those ports on the side I even see Ethernet there I see yes yeah we have

384
00:26:10,660 --> 00:26:14,300
either net we have also the new Thunderbolt 3 including this report and

385
00:26:14,300 --> 00:26:17,540
you can even hook up an external graphics card if you fancy for that oh I

386
00:26:17,540 --> 00:26:21,460
do fancy I do fancy that so you must have one of these right you must have

387
00:26:21,460 --> 00:26:24,940
gotten a test unit or got to try one out for a little bit or maybe even keep one

388
00:26:24,940 --> 00:26:29,580
tell me about that burns has one I have a different machine after MD machine so

389
00:26:29,580 --> 00:26:34,620
he's doing I'm doing the other one so we have to split it up of course somebody's

390
00:26:34,620 --> 00:26:38,740
got to take the AMD one I understand so what's next then so next is to watch for

391
00:26:38,740 --> 00:26:43,340
the AMD release do we have a kind of like a rough expectation to set for that

392
00:26:43,340 --> 00:26:49,500
it would be May if everything works at best based on the current situations and

393
00:26:49,500 --> 00:26:54,140
so on well congratulations I think this is this is not only kind of like a

394
00:26:54,140 --> 00:26:59,860
milestone for the project but it's also such a great service for new fans of the

395
00:26:59,860 --> 00:27:03,140
distribution especially people that are already in the market for a laptop

396
00:27:03,140 --> 00:27:06,420
they've heard so much about mangero maybe they've even you know seen

397
00:27:06,420 --> 00:27:09,020
something from Linus tech tips or something like that and they can get if

398
00:27:09,020 --> 00:27:12,380
they can get a complete package like this and it just looks like a great I

399
00:27:12,380 --> 00:27:15,220
mean I just love the design of it just looks like a great combination and a

400
00:27:15,220 --> 00:27:18,460
great partnership so congratulations Philip it's great I just think it's

401
00:27:18,460 --> 00:27:23,980
wonderful and maybe maybe a desktop someday in the future in hand hand we

402
00:27:23,980 --> 00:27:27,140
are working with a different partner on that as well so let's see what the

403
00:27:27,140 --> 00:27:31,380
future brings I find that fascinating I really I really do I mean I wonder if

404
00:27:31,380 --> 00:27:35,780
we'll see other distributions taking this up to also I seem to notice that

405
00:27:35,780 --> 00:27:40,280
there was a announcement around mangero arm is there a new update to that I see

406
00:27:40,280 --> 00:27:43,500
now too that there's 80 plus mirrors worldwide for the project that's

407
00:27:43,500 --> 00:27:48,860
fantastic yeah we bumped it up cause with the next Pinebook Pro we will be a

408
00:27:48,860 --> 00:27:55,420
stock image so we need some coverage so we decided to move our distribution from

409
00:27:55,420 --> 00:28:00,100
their infrastructure to our infrastructure and the sad news for the

410
00:28:00,100 --> 00:28:05,400
32-bit versions it's now a third-party distribution from mangero we have to

411
00:28:05,400 --> 00:28:11,700
find a new home for that so if people still fancy about 32-bit versions we can

412
00:28:11,700 --> 00:28:17,460
help us out to form the new team if it's still something we should go for yeah

413
00:28:17,460 --> 00:28:19,780
it seems fair you got it you got us you got to be careful you spend your

414
00:28:19,780 --> 00:28:23,300
resources I think I'm getting myself a Pinebook Pro and I think I'm putting

415
00:28:23,300 --> 00:28:26,940
manager I think that's the thing that's gonna happen you should definitely and I

416
00:28:26,940 --> 00:28:31,400
will say that I recently updated my mirrors list on my Pinebook which is

417
00:28:31,400 --> 00:28:37,400
running Manjaro already so and thankfully we have a nice group of

418
00:28:37,400 --> 00:28:41,860
listeners that you know directed me to that as soon as it happened so I was

419
00:28:41,860 --> 00:28:45,660
able to jump on that and fix get my mirrors fixed on my Pinebook oh good I

420
00:28:45,660 --> 00:28:50,060
I want one with manager up reloaded talk about the easiest way to run arch right

421
00:28:50,060 --> 00:28:54,060
just like ready to go you've got Manjaro going you've got this great ecosystem of

422
00:28:54,060 --> 00:28:56,820
available and up-to-date software I don't know if I ever thought I'd see it

423
00:28:56,820 --> 00:29:00,220
especially at the price points that's what's I mean with the Pinebook Pro

424
00:29:00,220 --> 00:29:02,740
that's what's so mind-blowing is the price points well and from my

425
00:29:02,740 --> 00:29:07,180
understanding all of the packages that are in the Manjaro repositories are also

426
00:29:07,180 --> 00:29:12,540
compiled for arm 64 so it makes it really easy to grab like you said all

427
00:29:12,540 --> 00:29:17,260
the cutting-edge software that you could want is it's already there hmm well that

428
00:29:17,260 --> 00:29:20,860
is a really maturing it's just what a what a good day to be a Linux user is

429
00:29:20,860 --> 00:29:24,980
it's nice to see so Phil thank you for joining us keep up the great work and I

430
00:29:24,980 --> 00:29:28,540
look forward to seeing that AMD laptop land to oh boy mm-hmm that's gonna be

431
00:29:28,540 --> 00:29:31,860
great do you want some details for that machine or not yeah if you got if you

432
00:29:31,860 --> 00:29:35,300
ready to share members I wasn't sure if you meant our fare you want to tell me

433
00:29:35,300 --> 00:29:40,980
off air but yeah if you want to me on air absolutely so we have it for a

434
00:29:40,980 --> 00:29:46,740
business line so it has a really great battery life so Winston's from tuxedo

435
00:29:46,740 --> 00:29:54,380
even popped it out to 25 hours in what what that's insane yeah it has a great

436
00:29:54,380 --> 00:30:00,180
91 watts per hour battery in it so it's more like the laptop is more battery

437
00:30:00,180 --> 00:30:07,940
than the laptop so she won't though how big is the screen the big it's 15.6 inch

438
00:30:07,940 --> 00:30:12,500
so it's a similar to the Intel based one and you have an rise in five three

439
00:30:12,500 --> 00:30:17,980
thousand five hundred you and a bigger eight and you can pop in up to 32

440
00:30:17,980 --> 00:30:27,740
gigabyte of RAM so yeah and probably no early word on rough price range at this

441
00:30:27,740 --> 00:30:40,180
point oh yes it's under 850 stop it stop it no oh oh boy oh boy see 2020 is gonna

442
00:30:40,180 --> 00:30:43,460
get better it's gonna get better everybody here this right here it's

443
00:30:43,460 --> 00:30:49,980
gonna get better oh man hmm man that's really great I'm really excited about

444
00:30:49,980 --> 00:30:55,180
that I kind of a kind of feel like that might be a perfect machine for me it is

445
00:30:55,180 --> 00:30:59,980
more for business like so if you if you want to casual gaming or something doom

446
00:30:59,980 --> 00:31:04,900
runs well and other games as well cause the vega graphics aid is also good for

447
00:31:04,900 --> 00:31:09,500
gaming and that's more for the business because it's that price range but I

448
00:31:09,500 --> 00:31:14,340
think with that price range and the horsepower it has it works also for

449
00:31:14,340 --> 00:31:19,660
gaming and coding and stuff like that so we will see how we go with that very

450
00:31:19,660 --> 00:31:23,660
cool no you go s got your next laptop picked out for you okay then you're

451
00:31:23,660 --> 00:31:29,060
welcome mine too probably I have a pine book for like my lightweight Chrome OS

452
00:31:29,060 --> 00:31:33,440
type tests I'll have myself a nice managerial AMD laptop we better go in

453
00:31:33,440 --> 00:31:40,060
for a bulk order yeah that'd be great kill me and well when it when it lands

454
00:31:40,060 --> 00:31:43,340
Philip you are you have a standing invitation to come on the show and tell

455
00:31:43,340 --> 00:31:48,220
us all about it okay sure we'll do and maybe ship out some test samples out to

456
00:31:48,220 --> 00:31:51,700
you so you can have it first hand and test it out would love to do that would

457
00:31:51,700 --> 00:31:54,980
love to run through the paces and give it a good review well I mean a good

458
00:31:54,980 --> 00:31:59,260
review honest review yeah give it a full go on the review because I tell you what

459
00:31:59,260 --> 00:32:04,020
it's got to be in that sweet spot for folks really I mean I just saw a video

460
00:32:04,020 --> 00:32:08,500
recently just going over some of the benefits of the new AMD laptop platform

461
00:32:08,500 --> 00:32:12,340
and the battery life is mind-blowing the performance is far beyond what you're

462
00:32:12,340 --> 00:32:17,460
getting on the Intel chips it's like AMD is finally there on the laptop in a big

463
00:32:17,460 --> 00:32:21,620
way so I'm very looking forward to laptops based around that platform I

464
00:32:21,620 --> 00:32:26,900
think it's gonna be fantastic so very good all right felt well would love to

465
00:32:26,900 --> 00:32:30,260
get a review love to give it a good go and let everybody know what we think and

466
00:32:30,260 --> 00:32:34,900
in the meantime let's do ourselves a little housekeeping here on the old show

467
00:32:34,900 --> 00:32:39,380
now mr. Payne got a couple of things we need to announce number one haven't

468
00:32:39,380 --> 00:32:44,420
mentioned user air for a long time error dot show slash 88 they go over the

469
00:32:44,420 --> 00:32:49,660
details that the guys think make a distro great things that make them wince

470
00:32:49,660 --> 00:32:54,340
which oh man I was driving when Pope he was describing what makes him wins and I

471
00:32:54,340 --> 00:32:58,940
was like twisting and turning in my seat and there's a bunch of other great

472
00:32:58,940 --> 00:33:01,460
things in there too like they just got some posture syndrome taking great

473
00:33:01,460 --> 00:33:06,740
photos etc user air is my favorite show to listen to when I'm on my way to work

474
00:33:06,740 --> 00:33:11,100
it just makes me smile my whole way and I get here I'm just in a great mood plus

475
00:33:11,100 --> 00:33:14,300
they don't mention that thing that everyone else is talking about so it's

476
00:33:14,300 --> 00:33:18,100
perfect entertainment right there's that too which you didn't say also do you

477
00:33:18,100 --> 00:33:21,500
know we're live because a lot of people are here and they're here rocking it

478
00:33:21,500 --> 00:33:27,140
live that's so awesome the virtual lug has has never been bigger it's okay it's

479
00:33:27,140 --> 00:33:30,100
huge and we'd love to have you here too you don't have to be even in the

480
00:33:30,100 --> 00:33:33,180
mother we can just watch live or join us in the chatroom it's a great way to get

481
00:33:33,180 --> 00:33:36,900
some extra show now if you want to know when we're gonna be live you can get it

482
00:33:36,900 --> 00:33:40,500
converted to your local time via robots at Jupiter broadcasting comm slash

483
00:33:40,500 --> 00:33:46,460
calendar we'd stream at jblive TV pow pow also I think we should get that

484
00:33:46,460 --> 00:33:51,620
telegram group over 2,000 we can do it we're around 1700 now but I think we

485
00:33:51,620 --> 00:33:55,780
should do it because now is the great great opportunity because telegram just

486
00:33:55,780 --> 00:34:00,460
enabled folders at least on mobile so you can put a lot of these group chats

487
00:34:00,460 --> 00:34:05,380
into folders and then you can just dip in when it's time to do that so between

488
00:34:05,380 --> 00:34:10,620
pinned chats and folders telegrams arrive for me now so they can have some

489
00:34:10,620 --> 00:34:13,140
more notice I won't say actually they can have some notification stuff they

490
00:34:13,140 --> 00:34:16,700
could clean up they could clean that up but now with folders it makes it so much

491
00:34:16,700 --> 00:34:19,820
cleaner to just jump in to get with just what you want so why not celebrate that

492
00:34:19,820 --> 00:34:23,500
by going to Jupiter broadcasting comm slash telegram join us in the chat it

493
00:34:23,500 --> 00:34:26,900
goes all the time it's persistent there's always fascinating stuff going on

494
00:34:26,900 --> 00:34:29,820
I mean a little bit too much sometimes I can't keep up with it but they're easy I

495
00:34:29,820 --> 00:34:34,100
mean here's the reality there's a universe that is going all the time

496
00:34:34,100 --> 00:34:40,620
you're not a participant of now I think you owe it to yourself and the entire

497
00:34:40,620 --> 00:34:43,700
human race to participate in every universe you can participate in I mean I

498
00:34:43,700 --> 00:34:47,060
think that's just it just behooves you to do that I don't I can't come up with

499
00:34:47,060 --> 00:34:50,260
any other reason Jupiter broadcasting comm slash telegram we miss you come

500
00:34:50,260 --> 00:34:55,060
join us yes now apparently cheese we get apparently we got telegram oh great so I

501
00:34:55,060 --> 00:34:58,500
just make that big pitch for telegram and now apparently there's been some

502
00:34:58,500 --> 00:35:06,500
telegram spam now listen you got folders don't mind the spammers cheese is doing a

503
00:35:06,500 --> 00:35:10,940
great job that's true that's true and we got a bot in that there thing now which

504
00:35:10,940 --> 00:35:14,620
everybody else has now for some reason anyways it's great Jupiter broadcasting

505
00:35:14,620 --> 00:35:19,220
comm slash telegram if you get a weird sketchy looking telegram that maybe is

506
00:35:19,220 --> 00:35:23,980
from just just pretend like it's not you know the internet rules apply yeah

507
00:35:23,980 --> 00:35:28,460
profile picture is a pretty pretty lady or something like that yeah just watch

508
00:35:28,460 --> 00:35:32,900
out yeah watch out let us let us know and we'll deal with them hmm there you

509
00:35:32,900 --> 00:35:36,940
go there you go that's a good idea cheese will cheese will bring down the

510
00:35:36,940 --> 00:35:45,340
Kraken chief telegram it's a cheese and Kraken all right thank you cheese

511
00:35:45,340 --> 00:35:49,540
appreciate I appreciate I appreciate you bringing the Kraken all right that's it

512
00:35:49,540 --> 00:35:54,380
that's all we got for you today I felt like there was something else in the

513
00:35:54,380 --> 00:35:57,580
housekeeping so I was stalling a little bit there at the end but I just got

514
00:35:57,580 --> 00:36:01,580
nothing they just got nothing let's do some feedback we got we got a bunch of

515
00:36:01,580 --> 00:36:05,940
that we should get into here we wanted to pick it up from last week by the way

516
00:36:05,940 --> 00:36:11,740
links to the Ubuntu 2004 LTS daily build for the Raspberry Pi 4 will be linked in

517
00:36:11,740 --> 00:36:13,900
the show notes should have mentioned that earlier I don't know why that was

518
00:36:13,900 --> 00:36:17,220
that's just difficult for me to find so I'm glad to have found it yeah now let's

519
00:36:17,220 --> 00:36:21,980
talk about switching from arch to free BSD this comes from John think about

520
00:36:21,980 --> 00:36:25,740
this Wes you're ready get ready to noodle on this I just wanted to throw my

521
00:36:25,740 --> 00:36:30,380
two cents in for your arch server I would be interested to see it replaced

522
00:36:30,380 --> 00:36:34,780
by a free BSD server I have heard some solid things about free BSD including

523
00:36:34,780 --> 00:36:39,680
positive reviews you all provided about BS at the BSD event you all tended wow

524
00:36:39,680 --> 00:36:45,300
that was like three years ago John dang he says I myself have really not made

525
00:36:45,300 --> 00:36:50,420
any sort of exploration into free BSD yet but I would be interested to hear

526
00:36:50,420 --> 00:36:53,820
and learn about the side of the OS familiarities it may be a solid

527
00:36:53,820 --> 00:36:56,580
discussion for an episode of the relationship between Linux and BSD

528
00:36:56,580 --> 00:37:02,460
communities as well now I had like two waves of thought there's a lot going on

529
00:37:02,460 --> 00:37:06,820
with this one now one of the reasons we went from free NAS to Linux was

530
00:37:06,820 --> 00:37:09,240
intentionally to move our server environment is something we're more

531
00:37:09,240 --> 00:37:12,860
familiar with which is exactly what I'm doing again with the Raspberry Pis and

532
00:37:12,860 --> 00:37:16,380
moving right I just I'm a more efficient admin and if it's not a detriment to

533
00:37:16,380 --> 00:37:20,500
move to that platform for me if it's both a good platform and I'm better at

534
00:37:20,500 --> 00:37:26,560
using it that sounds like a win however when I first read that that wasn't my

535
00:37:26,560 --> 00:37:32,260
line of thinking my line of thinking was free BSD on a Linux show what and I

536
00:37:32,260 --> 00:37:36,500
realized why not in fact then I started thinking now we're not doing this but I

537
00:37:36,500 --> 00:37:40,500
started thinking should I even be open to the idea of putting Windows Server on

538
00:37:40,500 --> 00:37:45,660
there like that never even crossed your mind did it no but like how far do you

539
00:37:45,660 --> 00:37:52,420
go with this and to be to be a legitimate critic of Linux we have to be

540
00:37:52,420 --> 00:37:56,540
willing to have an open mind about trying other things so that way we can

541
00:37:56,540 --> 00:38:01,060
genuinely compare two things right otherwise we're just going off things we

542
00:38:01,060 --> 00:38:04,980
read on the internet or comments or assumptions or old things we've tried

543
00:38:04,980 --> 00:38:07,980
years ago that maybe aren't current anymore it's no good pretending Linux is

544
00:38:07,980 --> 00:38:10,420
the best if it's not so then when I went down that line of thinking I thought

545
00:38:10,420 --> 00:38:15,900
well then maybe switching to free BSD on the old server isn't so crazy I mean we

546
00:38:15,900 --> 00:38:19,900
know it has a great ZFS support and it's a use case right it's a it's a server

547
00:38:19,900 --> 00:38:24,340
operating system we're running it as a server and that hardware was specifically

548
00:38:24,340 --> 00:38:28,060
purchased to run free and we know it runs yeah and to do that I checked it

549
00:38:28,060 --> 00:38:32,260
against BSD compatibility so we know it's a totally BSD compatible box I

550
00:38:32,260 --> 00:38:36,780
think it would be a really interesting experiment and I think it would be

551
00:38:36,780 --> 00:38:40,020
unique because part of the additional problems with running free nas was that

552
00:38:40,020 --> 00:38:44,020
we didn't be not understanding BSD that well and not understanding green as that

553
00:38:44,020 --> 00:38:46,460
well frankly we didn't know how those systems were interacting what we could

554
00:38:46,460 --> 00:38:49,660
tweak on the command line on the system level versus in the gooey in the app

555
00:38:49,660 --> 00:38:53,980
level so if we started from scratch and use the excellent handbook there might

556
00:38:53,980 --> 00:38:57,100
be a way to actually understand the system better and feel a little more

557
00:38:57,100 --> 00:39:01,380
comfortable man managing it the only thing about it is I don't feel like

558
00:39:01,380 --> 00:39:05,220
we're done with the arch experiment yet like part of what makes it a valid test

559
00:39:05,220 --> 00:39:12,420
is a prolonged use of arch as a server platform because anybody could do it for

560
00:39:12,420 --> 00:39:14,780
six months yeah I think we're actually do for some

561
00:39:14,780 --> 00:39:20,900
updates yeah I think we are too I know I know but I think we're good now right

562
00:39:20,900 --> 00:39:26,980
yeah it'll be fine you should and so what I almost feel like the answer to

563
00:39:26,980 --> 00:39:30,540
there should be like the next time we need to stand something up maybe we

564
00:39:30,540 --> 00:39:36,900
should do it on free BSD but these days what we would end up doing is what can

565
00:39:36,900 --> 00:39:42,340
you run you can't run a Linux container on free BSD can you well that's kind of

566
00:39:42,340 --> 00:39:47,380
boring I get what they do it in free NAS but they do it using beehive which is

567
00:39:47,380 --> 00:39:52,900
their virtualizer let me find a play with yeah I don't know if it doesn't run

568
00:39:52,900 --> 00:39:56,940
Linux containers I'm kind of out that might be it I mean actually wouldn't I

569
00:39:56,940 --> 00:40:01,260
wouldn't mind actually if a really if we really had all the time in the world

570
00:40:01,260 --> 00:40:06,260
what I'd like to do is stand up the entire infrastructure but do it with VMs

571
00:40:06,260 --> 00:40:10,780
or do it the non container route whatever we determine that be and and

572
00:40:10,780 --> 00:40:14,100
then comparing contrast the management the time well we could start playing

573
00:40:14,100 --> 00:40:19,620
with some jails you know yeah that just sounds like something that would be

574
00:40:19,620 --> 00:40:23,540
limited return on results like at the end of the day are all of us gonna

575
00:40:23,540 --> 00:40:28,780
switch to BSD no but I do like the angle of you know we appreciate a lot of open

576
00:40:28,780 --> 00:40:32,500
source technology and previous days out there doing a lot of good for the world

577
00:40:32,500 --> 00:40:37,220
very true I and I think it is worth trying I think it's worth staying

578
00:40:37,220 --> 00:40:42,540
current both from a skill standpoint but also just as somebody who's into

579
00:40:42,540 --> 00:40:46,220
technology well and I kind of think of it as the way with ZFS to you know pays

580
00:40:46,220 --> 00:40:50,780
to investigate the the less popular tools are not always open but sometimes

581
00:40:50,780 --> 00:40:55,500
you discover like ZFS some real gems that outperform a lot of the more

582
00:40:55,500 --> 00:40:59,340
mainstream options so if free BSD works really well for your use case it might

583
00:40:59,340 --> 00:41:03,460
be a step up against your competitors or against doing it another way okay all

584
00:41:03,460 --> 00:41:09,820
right artsful lodger in the chat room is linking a wiki page for free BSD

585
00:41:09,820 --> 00:41:15,140
about running Docker on free BSD it seems like it's possible however it

586
00:41:15,140 --> 00:41:19,160
currently says dockers currently broken we're working on a fix and then they

587
00:41:19,160 --> 00:41:23,980
linked the bug but it says its limits are 64-bit Linux compatibility subsystem

588
00:41:23,980 --> 00:41:27,420
will impact some Linux ABI containers so you have to be saying okay yeah it seems

589
00:41:27,420 --> 00:41:30,820
like it actually wouldn't they get the bug fixed whatever that bug whatever

590
00:41:30,820 --> 00:41:36,660
okay I suppose it depends on what that bug is I'm looking at the bug right now

591
00:41:36,660 --> 00:41:41,380
but it does look like they want they want to integrate Docker into free BSD

592
00:41:41,380 --> 00:41:46,380
well that's kind of it's kind of wild that's kind of wild right but great

593
00:41:46,380 --> 00:41:50,060
great I mean that I was kind of joking but that is actually kind of a

594
00:41:50,060 --> 00:41:54,580
consideration is being able to run your applications that you've right I mean

595
00:41:54,580 --> 00:41:58,500
they were they were first with the containerization technology in many ways

596
00:41:58,500 --> 00:42:02,480
yeah and to their credit way before WSL they had their own version of it run in

597
00:42:02,480 --> 00:42:06,360
Linux programs right you said it that's amazing they really were kind of a head

598
00:42:06,360 --> 00:42:11,020
on that a lot of things a lot of things huh yeah yeah so I think it is worth

599
00:42:11,020 --> 00:42:14,180
experimenting I don't know if it's worth or like what we're doing with arch right

600
00:42:14,180 --> 00:42:17,580
all the all the work we did to set up those ZFS snapshots and stuff mm-hmm

601
00:42:17,580 --> 00:42:23,020
easy peasy and BSD one mm-hmm I don't think it's worth throwing out the arch

602
00:42:23,020 --> 00:42:26,820
experiment because I think we need to continue it for a little bit longer in

603
00:42:26,820 --> 00:42:29,180
the fact that we haven't updated in a little bit so good because that's gonna

604
00:42:29,180 --> 00:42:31,980
happen every now and then like we need to so I think we got to live that for a

605
00:42:31,980 --> 00:42:36,220
little bit longer but I wouldn't be opposed to a future project using BSD as

606
00:42:36,220 --> 00:42:39,180
the host maybe you'll be running it on one of your raspberry pies be a good

607
00:42:39,180 --> 00:42:43,980
excuse to talk Alan the coming back on the show Paul writes in and has some

608
00:42:43,980 --> 00:42:48,100
good news about the raspberry pi forces even though I bought my raspberry pi 4

609
00:42:48,100 --> 00:42:53,980
after Christmas because I didn't get one as a gift oh I believe it has the USB C

610
00:42:53,980 --> 00:42:57,140
fix that everyone is just now talking about remember when it originally shipped

611
00:42:57,140 --> 00:43:00,580
there was a bit of a problem where if you had one of them e USB C chargers

612
00:43:00,580 --> 00:43:04,100
that's a little bit smarter it would actually not properly charge I think it

613
00:43:04,100 --> 00:43:06,980
would get like detected as like a display adapter or something right they

614
00:43:06,980 --> 00:43:10,300
used some non-standard setup in the USB port that needed to get fixed on the

615
00:43:10,300 --> 00:43:14,300
pieboard side yeah but Paul says it looks like the fix is in Wes he says

616
00:43:14,300 --> 00:43:20,660
when you cat proc CPU info it comes back with what appears to be a updated

617
00:43:20,660 --> 00:43:25,140
revision and he has a picture of the old one and looks like he's right they moved

618
00:43:25,140 --> 00:43:28,140
the voltage switch location yeah I'm gonna link in the show notes if you want

619
00:43:28,140 --> 00:43:30,860
to go see what the difference is what they look like on the actual physical

620
00:43:30,860 --> 00:43:33,960
board huh and I think this matters because we'd already heard that it had

621
00:43:33,960 --> 00:43:37,340
been fixed upstream but with you know supply lines how long does that take to

622
00:43:37,340 --> 00:43:40,180
filter down into what you're gonna buy on the shelf today and it sounds like if

623
00:43:40,180 --> 00:43:44,340
you gotta go go get a pie you'll get the new one hmm I wonder if mine is through

624
00:43:44,340 --> 00:43:46,980
the one that we were playing with today cuz that's a I just ordered that from

625
00:43:46,980 --> 00:43:52,380
Amazon last week so it could be I just bought I see when I buy a raspberry pie

626
00:43:52,380 --> 00:43:57,420
because I buy a lot of them I just buy it with a with a dedicated power adapter

627
00:43:57,420 --> 00:44:01,900
because I like I like my raspberry pies to have a power switch so my power

628
00:44:01,900 --> 00:44:06,020
adapters that I buy on Amazon for the Raspberry Pi include a little interrupt

629
00:44:06,020 --> 00:44:11,100
power switch so that's how I prefer to do it but this one's one revision behind

630
00:44:11,100 --> 00:44:15,700
so maybe there's maybe so you just hang it see that's what I thought is I

631
00:44:15,700 --> 00:44:19,340
thought that they would probably they would probably have a whole stock

632
00:44:19,340 --> 00:44:24,620
wherever I bought it from I uh I don't mind I bought it with a dedicated power

633
00:44:24,620 --> 00:44:28,140
adapter but I would like to see it fixed speaking of the pie for Jason writes in

634
00:44:28,140 --> 00:44:30,260
he says I've been playing with the pie and I just wanted to share with you my

635
00:44:30,260 --> 00:44:33,500
recent project based on the recent pie for discussions I've purchased the

636
00:44:33,500 --> 00:44:39,780
following geek worm x2 or I'm sorry x828 for my pie for I don't know what an x28

637
00:44:39,780 --> 00:44:44,660
it is do you know what you want to Google that he says I had some oh the

638
00:44:44,660 --> 00:44:48,780
next line gives us some context I had some spare SSDs laying around this is a

639
00:44:48,780 --> 00:44:54,460
backup ZFS node for my main ZFS server that's brilliant brilliant especially

640
00:44:54,460 --> 00:44:59,860
now with the dedicated bus for Ethernet instead of yeah to replicate the ZFS

641
00:44:59,860 --> 00:45:04,060
data storage and snapshots I'm using Jim's s-noid six noid or however you

642
00:45:04,060 --> 00:45:08,060
pronounce it okay thank you you would know Jim from tech snap and ours

643
00:45:08,060 --> 00:45:12,660
technica it says it works wonders very fast and that's just it it's simple and

644
00:45:12,660 --> 00:45:16,940
it's reliable I can very easily fail over to this and keep serving my VMs

645
00:45:16,940 --> 00:45:23,420
while I repair my main ZFS server I have a stack of this pi 4 4 512 gigabyte

646
00:45:23,420 --> 00:45:28,340
SSDs 2 mirrored and a terabyte total storage all in it's great

647
00:45:28,340 --> 00:45:34,340
says I run a boon to 1910 across the board on my edge device is Debian and my

648
00:45:34,340 --> 00:45:40,100
edge device is VY OS yeah the network focused which is based on Debian exactly

649
00:45:40,100 --> 00:45:43,860
so that's awesome you put a link to that x828 adapter in the show notes so thank

650
00:45:43,860 --> 00:45:47,700
you for doing that one other pleasant little note Jim Sanoid tool has now been

651
00:45:47,700 --> 00:45:52,420
packaged in Debian so it's easier than ever to get yeah can we just stop for a

652
00:45:52,420 --> 00:46:01,620
second and talk about that so you buy this $30 computer you if any and and

653
00:46:01,620 --> 00:46:08,260
this is if you want to do it fancy you buy this $37 raspberry pi NAS SATA

654
00:46:08,260 --> 00:46:15,540
adapter stack which has one two three four SATA ports on it that you then

655
00:46:15,540 --> 00:46:19,860
stack and it comes with all the parts I literally stack it and screw it down to

656
00:46:19,860 --> 00:46:25,900
the top of raspberry pi 4 and then you load it with this Debian based OS and

657
00:46:25,900 --> 00:46:33,700
this little sub $100 setup can be a full ZFS replication node that can keep a VM

658
00:46:33,700 --> 00:46:39,820
cluster online Wow guess arms really here the thing is obviously the hardware is a

659
00:46:39,820 --> 00:46:43,220
fundamental enabler here but that hardware would be nowhere without the

660
00:46:43,220 --> 00:46:47,140
free software that makes all this possible there is a thousand different

661
00:46:47,140 --> 00:46:49,820
free product software projects coming together to make something like that

662
00:46:49,820 --> 00:46:55,740
happen and there are thousands of people all over the world that are super

663
00:46:55,740 --> 00:47:00,260
hyper focused on their one area of open source maybe an area that doesn't even

664
00:47:00,260 --> 00:47:05,220
get that much recognition doesn't get that much attention and they're all just

665
00:47:05,220 --> 00:47:09,500
sitting there working away year after year and now here we are where something

666
00:47:09,500 --> 00:47:15,660
like this is possible where a consumer board for 40 bucks and then a stack add

667
00:47:15,660 --> 00:47:21,980
on board for another 40 bucks can run an enterprise grade OS and keep a VM

668
00:47:21,980 --> 00:47:25,340
system online it's just it's really remarkable so we'll put links that so I

669
00:47:25,340 --> 00:47:29,220
woof woof if you have some other raspberry pi projects you want to get

670
00:47:29,220 --> 00:47:35,420
started I talk about a lot of the different containers I run on my

671
00:47:35,420 --> 00:47:41,200
raspberry pi like renteo or renteo it's a open source simple markdown knowledge

672
00:47:41,200 --> 00:47:45,260
base for home you just you just save markdown files in a directory and then

673
00:47:45,260 --> 00:47:49,260
it renders them nice on a website I mean and to set that up for myself so that's

674
00:47:49,260 --> 00:47:53,820
how I do my home documentation I love smoke ping there are different projects

675
00:47:53,820 --> 00:47:56,460
that replace it but I think nothing's as good as smoke ping that's something I

676
00:47:56,460 --> 00:48:00,900
run from a raspberry pi I've have a bunch of others that I cover in self

677
00:48:00,900 --> 00:48:04,340
hosted three really early in the show's run I just went through a lot of this

678
00:48:04,340 --> 00:48:10,580
all of that stuff that I talked about in October of 2019 I'm still using and

679
00:48:10,580 --> 00:48:13,620
still happy with so the setup is still valid I've just added to it which I'll

680
00:48:13,620 --> 00:48:20,180
cover at some point self hosted show slash three for that episode I also just

681
00:48:20,180 --> 00:48:23,900
realized that in there I talk about my favorite travel router that supports

682
00:48:23,900 --> 00:48:28,620
WireGuard so speaking of WireGuard boom built right into there that was a good

683
00:48:28,620 --> 00:48:31,980
email I like talking I'm enjoying the raspberry pi chat these days as you can

684
00:48:31,980 --> 00:48:36,460
probably tell Jason finishes with some thoughts on network performance he says

685
00:48:36,460 --> 00:48:40,340
I have to say in my initial testing of the pi 4 the dedicated 1 gigabit NIC is

686
00:48:40,340 --> 00:48:45,540
well worth the upgrade I initially had 6 terabyte drive connected and moved over

687
00:48:45,540 --> 00:48:51,380
5 terabytes in 13 hours it cranks and it saturated that connection at 1.5

688
00:48:51,380 --> 00:48:56,020
gigabits at time my main server runs on a 10 gigabit back end and I've spent the

689
00:48:56,020 --> 00:49:00,380
past three weeks converting away from VMware to KVM I've been a longtime

690
00:49:00,380 --> 00:49:05,300
VMware user and a user of VMware at work but since running KVM I am much happier

691
00:49:05,300 --> 00:49:10,300
and it seems much faster I won't be going back at this time open v-switch is

692
00:49:10,300 --> 00:49:15,340
next on my to-do list oh yeah open v-switch would be really cool right in

693
00:49:15,340 --> 00:49:17,940
Jason when you do that let us know how that goes it sounds like Jason's having a

694
00:49:17,940 --> 00:49:23,780
lot of fun with his home web I love it there's a now there's a follow-up is

695
00:49:23,780 --> 00:49:26,700
this a follow-up to a conversation we had about the downsides of Jason in the

696
00:49:26,700 --> 00:49:30,180
show do you want to take this one yeah easy or writes in about episode 341

697
00:49:30,180 --> 00:49:34,700
where we talked about that tool I was really fond of called JC which wraps

698
00:49:34,700 --> 00:49:40,020
existing shell commands and converts their output to Jason there was also a

699
00:49:40,020 --> 00:49:43,220
follow-on blog that sort of described that we need to bring the Unix

700
00:49:43,220 --> 00:49:46,580
philosophy to the 21st century we talk a lot about PowerShell in reference to how

701
00:49:46,580 --> 00:49:51,700
it has you know fancy objects and not just raw unstructured text and that

702
00:49:51,700 --> 00:49:54,860
blog sort of explored the idea of well maybe maybe Jason is something that

703
00:49:54,860 --> 00:50:00,260
Linux could start adopting he's not sure that that's really the right way he

704
00:50:00,260 --> 00:50:04,100
writes about the bringing the Unix philosophy to the 21st century blog and

705
00:50:04,100 --> 00:50:08,940
the JSON tool from the last podcast I posted a reply to the blog with I like

706
00:50:08,940 --> 00:50:14,900
the JC tool very much and it makes sense for JSON usage but remember Unix tools

707
00:50:14,900 --> 00:50:20,820
have been tested time and time again JSON is great for REST API calls but in

708
00:50:20,820 --> 00:50:25,260
a shell environment I worry could provide some challenges text format is

709
00:50:25,260 --> 00:50:29,340
fundamental through any file system and the ability to read and write data in

710
00:50:29,340 --> 00:50:34,260
text requires very little the text way does not require additional tooling or

711
00:50:34,260 --> 00:50:38,340
programs and just about anything can read or write I agreed that having an

712
00:50:38,340 --> 00:50:42,140
additional output for JSON will increase the flexibility but I also

713
00:50:42,140 --> 00:50:46,580
think it will introduce complexity to the technology isn't all data in the

714
00:50:46,580 --> 00:50:50,900
form of text anyway wouldn't JSON create complexity to edit is read more

715
00:50:50,900 --> 00:50:55,180
critical than writing or editing files don't get me wrong I do believe there

716
00:50:55,180 --> 00:50:58,660
should be improvements but the questions of moving forward are more significant

717
00:50:58,660 --> 00:51:04,260
than just converting data to JSON hmm I think the fact that we just got a

718
00:51:04,260 --> 00:51:09,780
machine running over a tech serial console this morning may be coloring my

719
00:51:09,780 --> 00:51:13,740
perspective on this but I kind of see where it's coming from it's like text is

720
00:51:13,740 --> 00:51:21,460
just so simple and universal although I mean JSON's really just text right I

721
00:51:21,460 --> 00:51:25,460
mean I think it's pretty easy to edit and work with there's a lot of tooling

722
00:51:25,460 --> 00:51:29,540
around that I will say so for like the power of shell for instance that's got

723
00:51:29,540 --> 00:51:33,100
the whole dotnet system backing it you know it has it's much richer objects and

724
00:51:33,100 --> 00:51:36,700
this this JSON support it's kind of sort of just ad hoc with schemas and

725
00:51:36,700 --> 00:51:40,140
specifications and all kinds of relationships yeah it's a bigger ecosystem

726
00:51:40,140 --> 00:51:44,700
on the power shell site it's like it's born of that right designed in I will

727
00:51:44,700 --> 00:51:48,700
say however I don't support changing things where we should do this in a

728
00:51:48,700 --> 00:51:52,300
non-breaking way where we add JSON support and that I think just there's

729
00:51:52,300 --> 00:51:55,500
not that much overhead to it right if suddenly there's a flag or an additional

730
00:51:55,500 --> 00:51:59,780
text file sitting under proc that has the JSON version what's the harm I

731
00:51:59,780 --> 00:52:03,580
think that's it that's it right there that should be pretty low overhead right

732
00:52:03,580 --> 00:52:06,580
and that's probably where maybe JC the tool will find a sweet spot because

733
00:52:06,580 --> 00:52:10,620
it's sort of just at the very end of the stack where it's got parsers for a lot

734
00:52:10,620 --> 00:52:13,500
of you know core utils and other programs so if we maintain a large

735
00:52:13,500 --> 00:52:15,900
program of that or there's some way to sort of work that into the project

736
00:52:15,900 --> 00:52:19,260
eventually maybe we'll just end up with JSON and all the places we need it did

737
00:52:19,260 --> 00:52:24,860
you see wimpy wrote this massive bash script oh yeah that's I mean that's like

738
00:52:24,860 --> 00:52:28,620
peak bash script right there isn't that it's nice to see I mean it looks like

739
00:52:28,620 --> 00:52:33,020
some well-written bash it immediately reminded me of why I would never want to

740
00:52:33,020 --> 00:52:38,380
write a tool that large with bash that's pretty cool the Ubuntu podcast is back

741
00:52:38,380 --> 00:52:42,220
mentioned for those guys they're back there we were editing it for them but I

742
00:52:42,220 --> 00:52:46,500
think they've got a new guy now and they launched a new season and that's exciting

743
00:52:46,500 --> 00:52:53,260
I know I as somebody who feels like my week isn't quite right without the

744
00:52:53,260 --> 00:52:56,380
Ubuntu podcast in there like I've been feeling been trying to find something

745
00:52:56,380 --> 00:52:59,820
for the end of my week content and when there's not a user and there's not a

746
00:52:59,820 --> 00:53:02,940
text have to listen to what is a guy to do I think it sounds like a good week

747
00:53:02,940 --> 00:53:08,380
to get some curry and put on the podcast so let's talk about my favorite topic

748
00:53:08,380 --> 00:53:12,060
bulletproof Linux which always seems to really resonate with the audience and we

749
00:53:12,060 --> 00:53:15,140
have tried to build a bulletproof arch server and so it reignited the

750
00:53:15,140 --> 00:53:19,740
conversation and George wrote in on thoughts on episode 341 of the program

751
00:53:19,740 --> 00:53:24,900
where we talked about time shift he says time shift is great it also shows that

752
00:53:24,900 --> 00:53:29,620
Linux mint teeth the Linux mint team is focused on adding important user facing

753
00:53:29,620 --> 00:53:34,260
features it's worth noting that time shift is donation where I don't know if

754
00:53:34,260 --> 00:53:39,220
mint is paying developer Tony George but I didn't hear you guys recommending

755
00:53:39,220 --> 00:53:43,260
donating I have donated good point absolutely something we should probably

756
00:53:43,260 --> 00:53:46,980
keep an eye out for more I don't think we've made a good habit of that so I

757
00:53:46,980 --> 00:53:50,580
think George makes a good point there he says testing time shift I tested it but

758
00:53:50,580 --> 00:53:53,980
I have not yet had the kind of system failure from which it would provide a

759
00:53:53,980 --> 00:53:57,940
critical restore perhaps you guys could try it on something important like that

760
00:53:57,940 --> 00:54:03,900
arch server or where we have it implemented in a graphical way is here

761
00:54:03,900 --> 00:54:08,140
on our Reaper machine it's just such an important machine so we put it on there

762
00:54:08,140 --> 00:54:11,660
but I it's just been running we did do a little bit of testing although we

763
00:54:11,660 --> 00:54:16,580
removed some non-critical files rather than critical files yeah that's true

764
00:54:16,580 --> 00:54:20,620
that's true so as long as it just function the same way in the test it

765
00:54:20,620 --> 00:54:24,140
should be working I love the people right and I'd love getting people's

766
00:54:24,140 --> 00:54:27,460
feedback and ideas on how they bulletproof their Linux install different

767
00:54:27,460 --> 00:54:31,220
snapshot techniques or like I was trying with a VM like what are your solutions

768
00:54:31,220 --> 00:54:36,740
that is a topic there's something there about getting a server but also I think

769
00:54:36,740 --> 00:54:42,300
just as important a workstation that is guaranteed dialed in ready to go every

770
00:54:42,300 --> 00:54:45,260
time you sit down at the machine you move the mouse cursor the screen comes

771
00:54:45,260 --> 00:54:51,900
on it functions every single time every time always I love that and you have a

772
00:54:51,900 --> 00:54:56,580
very clear rescue path if for some reason it doesn't function like that I'd

773
00:54:56,580 --> 00:55:01,060
love people's ideas on that Linux unplug calm slash contact Cameron wrote in

774
00:55:01,060 --> 00:55:06,460
about time shift as well and he had time shift saved his save his bacon to

775
00:55:06,460 --> 00:55:09,340
preface this I am a novice and was monkeying around trying to create a

776
00:55:09,340 --> 00:55:12,500
script that resulted in me messing with permissions I shouldn't have hey we've

777
00:55:12,500 --> 00:55:16,460
all been there that's kind of the fun of Linux right and I accidentally deleted

778
00:55:16,460 --> 00:55:22,020
slash bin so I use time shift and it restored without issue so maybe that

779
00:55:22,020 --> 00:55:25,620
gives you a little bit of some clarification Cameron does run into some

780
00:55:25,620 --> 00:55:29,180
problems here though because you can use it to back up the system and you can

781
00:55:29,180 --> 00:55:33,500
have it include user directory stuff if you want to but there's no mechanism for

782
00:55:33,500 --> 00:55:36,940
separating those out at the time you want to go and roll it back so Cameron

783
00:55:36,940 --> 00:55:41,020
was kind of wondering are there ways to run two instances of time shift I'm not

784
00:55:41,020 --> 00:55:44,100
sure I've not tried that but that probably wouldn't be the route I would

785
00:55:44,100 --> 00:55:47,740
go I think I would leave time shift just for the system stuff and then use some

786
00:55:47,740 --> 00:55:51,900
other backup tools for your user data man all of this changes with 2004 this

787
00:55:51,900 --> 00:55:58,780
entire conversation is different now in just weeks like every time I install a

788
00:55:58,780 --> 00:56:02,700
package on my ThinkPad I have a snapshot of my system I have tons of snapshots I

789
00:56:02,700 --> 00:56:07,260
don't do anything it just it's there I can revert we've tried it it works it

790
00:56:07,260 --> 00:56:11,220
really changes the game on on how to get these systems more bulletproof our new

791
00:56:11,220 --> 00:56:16,540
answer is just install 20 24 on ZFS and there you go it's not there yet right

792
00:56:16,540 --> 00:56:22,820
because first of all one copy is no copy but second of all there's other pieces

793
00:56:22,820 --> 00:56:26,340
that need to be done it's not a complete implementation yet but he says it's still

794
00:56:26,340 --> 00:56:31,840
new we are getting to a point where between universal package formats

795
00:56:31,840 --> 00:56:37,420
snapshots and tools like butterfess and ZFS yeah there will be a time where

796
00:56:37,420 --> 00:56:41,900
maybe all you have to do is just install the dang distro and you're bulletproof

797
00:56:41,900 --> 00:56:47,020
you're not there yet so there's still some wiggle room but if the baseline is

798
00:56:47,020 --> 00:56:51,380
your OS has built-in snapshots and every major change invokes a snapshot pretty

799
00:56:51,380 --> 00:56:54,820
good baseline pretty good and I'd love to see other distributions start doing I

800
00:56:54,820 --> 00:56:58,740
know I know openSUSE it does I know yeah why did it take us so long yeah all

801
00:56:58,740 --> 00:57:03,320
right so Ryan says well forget all that stuff for the love of Linus will you

802
00:57:03,320 --> 00:57:06,660
please try out Nix OS I don't know if you ever heard it I don't think I've

803
00:57:06,660 --> 00:57:10,500
heard you guys discuss Nix OS I imagine Wes would be particularly interested in

804
00:57:10,500 --> 00:57:14,660
this distro as it uses a completely functional declarative build language

805
00:57:14,660 --> 00:57:19,300
for configuration all of the configuration is done in a single file

806
00:57:19,300 --> 00:57:24,420
or in a set of files you import into a single file and then the configuration

807
00:57:24,420 --> 00:57:28,300
is run through a build system determine what packages users etc files and other

808
00:57:28,300 --> 00:57:32,060
configuration should be generated to match the configuration that you've

809
00:57:32,060 --> 00:57:38,140
declared then a new snapshot of the OS is generated and can be switched into

810
00:57:38,140 --> 00:57:42,540
immediately for testing or just set up to boot in the grub menu the next time

811
00:57:42,540 --> 00:57:46,820
you reboot all previous configurations sit and grub until purged there's

812
00:57:46,820 --> 00:57:51,700
something very cool about having my entire configuration all contained in a

813
00:57:51,700 --> 00:57:56,340
single file I don't have to do less and grep to my get my way around Etsy I

814
00:57:56,340 --> 00:58:01,420
don't have to remember which format if it was a YAML was a JSON I just I think

815
00:58:01,420 --> 00:58:04,140
that is a fairly that like all that stuff is ticking my box he says there is

816
00:58:04,140 --> 00:58:08,780
far more to Nix OS than just that it looks like they have their own container

817
00:58:08,780 --> 00:58:13,060
management system but also they have robust support for talker as well it's

818
00:58:13,060 --> 00:58:18,700
definitely a strong contender for any future servers I might deploy all right

819
00:58:18,700 --> 00:58:24,660
Ryan I admit that actually has me more interested than free BSD yeah I started

820
00:58:24,660 --> 00:58:28,340
this thinking for you should try out free BSD but you're you know behind the

821
00:58:28,340 --> 00:58:32,180
scenes you and I've been talking about this for over a year it just hasn't

822
00:58:32,180 --> 00:58:36,180
really come up and I don't think we've had the perfect use case although the

823
00:58:36,180 --> 00:58:40,100
way Ryan just described it it does seem like it because right also sounds like

824
00:58:40,100 --> 00:58:43,580
backups will be some super simple with the you know on the one file anybody in

825
00:58:43,580 --> 00:58:49,340
the mumble room a Nix OS user or tried it out yeah I just set up Nix OS server

826
00:58:49,340 --> 00:58:55,580
running on digital ocean awesome there's a Nix OS infect script out there that

827
00:58:55,580 --> 00:59:03,500
just next to us on any digital ocean droplet and I'm currently running a ton

828
00:59:03,500 --> 00:59:08,020
of things on it you know mumble I'm running my own matrix server like it's

829
00:59:08,020 --> 00:59:11,220
really great sounds like there's a lot of things really that are pretty nice

830
00:59:11,220 --> 00:59:13,900
about it but what do you think is probably like the greatest thing that

831
00:59:13,900 --> 00:59:16,860
made you say all right I'm running an unsupported OS because I love it this

832
00:59:16,860 --> 00:59:21,500
much what was that what was that thing main thing is I can basically just blow

833
00:59:21,500 --> 00:59:28,940
away my entire droplet and have it back up with the same configuration in a few

834
00:59:28,940 --> 00:59:31,940
minutes yeah that declarative configuration where everything users

835
00:59:31,940 --> 00:59:35,340
everything and it sounds it's nice to see it integrated right I mean people

836
00:59:35,340 --> 00:59:37,620
are already doing that with configuration things like ansible or

837
00:59:37,620 --> 00:59:41,580
chef but you have to hack it on top right you got to go then like basically

838
00:59:41,580 --> 00:59:44,060
compiles down to a bunch of apt commands that you do or writes out all these

839
00:59:44,060 --> 00:59:47,860
files having it at the OS sounds pretty clean seems like it'd be really great

840
00:59:47,860 --> 00:59:53,140
for hosting providers you'd have like different different Nix base you know

841
00:59:53,140 --> 00:59:57,380
one-click deployments that all right just easy to document and store hmm you

842
00:59:57,380 --> 01:00:02,140
know there's also the canoe project has keeks I believe it's pronounced GUI X

843
01:00:02,140 --> 01:00:08,600
which is inspired by Nix but uses a uses scheme which is a lisp variant instead

844
01:00:08,600 --> 01:00:12,660
of the Nix OS language that it uses which hey that interests me a lot

845
01:00:12,660 --> 01:00:17,700
anybody got Nix of us working on a Raspberry Pi 4 cuz I mean how does this

846
01:00:17,700 --> 01:00:23,060
not seem like a especially if you're doing everything in containers like you

847
01:00:23,060 --> 01:00:28,740
really just want a super solid base OS and something that I love this idea that

848
01:00:28,740 --> 01:00:32,420
you could actually jump into a test snapshot before you reboot that blows my

849
01:00:32,420 --> 01:00:35,860
mind I mean what kind of what are they doing kexec magic they're like how is

850
01:00:35,860 --> 01:00:41,500
that possible how can they do that blows my mind like that's that's solid and the

851
01:00:41,500 --> 01:00:45,340
idea that I just do the configuration one spot and then I just save that and

852
01:00:45,340 --> 01:00:49,100
back that up somewhere and then just use that to deploy a new system peaks my

853
01:00:49,100 --> 01:00:55,300
interest really does I do see in open over on github open issue for Raspberry

854
01:00:55,300 --> 01:00:59,380
Pi 4 support and on their wiki they mentioned the Raspberry Pi 3 so maybe

855
01:00:59,380 --> 01:01:02,460
it's just a matter of time huh we should put this on our list of semi to-do

856
01:01:02,460 --> 01:01:07,300
soons I think right now we're deep in 2004 land but as that and then we'll

857
01:01:07,300 --> 01:01:11,260
probably have a new fedora pretty close after that but as that kind of cycle

858
01:01:11,260 --> 01:01:14,580
fades maybe there'll be a summer low in distribution releases and this will be

859
01:01:14,580 --> 01:01:18,700
the yeah I like it some fun summer projects with Nick's OS you know when we

860
01:01:18,700 --> 01:01:20,820
do it we should really go all out because we've been wanting to do it for

861
01:01:20,820 --> 01:01:23,720
a long time and maybe I then they'll have Raspberry Pi 4 support too yeah it

862
01:01:23,720 --> 01:01:26,740
looks like it's just starting to come online supported by the packaging system

863
01:01:26,740 --> 01:01:30,180
it's just sort of experimental maybe not well tested just yet sounds like it has

864
01:01:30,180 --> 01:01:33,500
good potential though so summer might just be perfect I think we have to do

865
01:01:33,500 --> 01:01:35,740
it let's try to remember that because I think that'd be really great well thank

866
01:01:35,740 --> 01:01:40,020
you everybody for sending that stuff in I like that we started at FreeBSD and we

867
01:01:40,020 --> 01:01:43,700
ended at Nick's OS it doesn't take FreeBSD off the table it just means we

868
01:01:43,700 --> 01:01:48,100
have multiple fun projects now we found something even more niche to play with

869
01:01:48,100 --> 01:01:52,580
all right we'd love to have you hang out live we do it every single Tuesday over

870
01:01:52,580 --> 01:01:56,380
jblive.tv it starts at noon Pacific but you can get it converted at Jupiter

871
01:01:56,380 --> 01:02:00,540
broadcasting comm slash calendar check out my personal site Chris last comm for

872
01:02:00,540 --> 01:02:04,620
my new projects and ways to get ahold of me get more Westpain at tech snap dot

873
01:02:04,620 --> 01:02:10,140
systems and also at Westpain and I just I don't know it's too easy that's why well

874
01:02:10,140 --> 01:02:13,500
honestly because if I was you I'd lead with the last name or the middle name

875
01:02:13,500 --> 01:02:16,700
with the last name just the middle name last name lead with that you know that I

876
01:02:16,700 --> 01:02:22,620
do use that and it was taken on Twitter oh okay okay yeah that's fair play then

877
01:02:22,620 --> 01:02:25,820
it's fair play what are you gonna do right anyways thanks so much for to this

878
01:02:25,820 --> 01:02:29,340
week's episode of the unplugged program and we'll see you right back here next

879
01:02:29,340 --> 01:02:35,660
Tuesday

880
01:02:59,340 --> 01:03:10,020
Something that we didn't sneak into the conversation there, but Cheese was telling me about last

881
01:03:10,020 --> 01:03:11,020
week is Armbian.

882
01:03:11,020 --> 01:03:12,940
Yeah, Armbian's great, man.

883
01:03:12,940 --> 01:03:17,460
If you got another board that may not be a Raspberry Pi, because I don't think any of

884
01:03:17,460 --> 01:03:27,980
the PIs are supported, so an Orange Pi, a Pine board, Odroid, etc, etc, check out Armbian.

885
01:03:27,980 --> 01:03:29,540
Armbian's freaking awesome.

886
01:03:29,540 --> 01:03:32,900
I think that's what I'll do when I get the new Pine board.

887
01:03:32,900 --> 01:03:34,460
I'll put Armbian on there.

888
01:03:34,460 --> 01:03:35,460
Armbian.

889
01:03:35,460 --> 01:03:40,500
Yeah, well, and then, you know, you got to think, too, you're going to have a PCIe slot

890
01:03:40,500 --> 01:03:43,540
with that Pine board, so should be able to do that.

891
01:03:43,540 --> 01:03:44,540
Oh, that's so cool.

892
01:03:44,540 --> 01:03:48,300
You know, because your bottleneck right now really is the USB 3.0 right on the Pi.

893
01:03:48,300 --> 01:03:49,700
I know, you're going to wreck everything for me.

894
01:03:49,700 --> 01:03:50,700
You know this.

895
01:03:50,700 --> 01:03:54,780
I'm going to realize the extreme performance difference and the minimal power increase,

896
01:03:54,780 --> 01:03:57,060
and I'm going to just redo the whole thing now on Pine boards.

897
01:03:57,060 --> 01:04:01,540
Well, maybe you just put your, you know, your little personal NAS Shinobi storage or something

898
01:04:01,540 --> 01:04:04,380
on a Pine board and then keep the PIs around for other things.

899
01:04:04,380 --> 01:04:05,380
Yeah, maybe.

900
01:04:05,380 --> 01:04:06,380
Yeah.

901
01:04:06,380 --> 01:04:10,820
Or we'll just have to go to your eBay page right here.

902
01:04:10,820 --> 01:04:12,980
Previously loved Raspberry Pi 4.

903
01:04:12,980 --> 01:04:14,980
You can sign them, maybe?

904
01:04:14,980 --> 01:04:16,540
Yeah, there you go.

905
01:04:16,540 --> 01:04:18,060
Yeah, you would want it.

906
01:04:18,060 --> 01:04:19,060
I think that would decrease the value.

907
01:04:19,060 --> 01:04:22,220
But if I do it, I'll do it with those silver paint markers, you guys are going to be real

908
01:04:22,220 --> 01:04:23,220
fancy.

909
01:04:23,220 --> 01:04:27,580
Yeah, you're going to be real fancy.

910
01:04:27,580 --> 01:04:28,580
Yeah.

911
01:04:28,580 --> 01:04:29,580
Yeah.

912
01:04:29,580 --> 01:04:30,580
Yeah.

913
01:04:30,580 --> 01:04:31,580
Yeah.

914
01:04:31,580 --> 01:04:32,580
Yeah.

915
01:04:32,580 --> 01:04:33,580
Yeah.

916
01:04:33,580 --> 01:04:34,580
Yeah.

917
01:04:34,580 --> 01:04:35,580
Yeah.

