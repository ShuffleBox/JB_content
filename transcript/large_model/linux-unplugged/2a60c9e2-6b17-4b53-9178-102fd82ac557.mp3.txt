You know, just after we finished our poll and decided we're going to go with Seuss for our server,
it seems there may be a new Lizard contender that snuck up on the market.
I mean, I don't know yet. There's been no official announcement.
But it seems that there's been something like 79 hits to the Apple repos from a new distribution called Seuss Liberty.
An untested, unannounced RAL rebuild from Seuss?
Yeah, that sounds exactly like something we'd use.
Wouldn't that be a hell of a story if Seuss had just said, hey, you know what we're going to do?
We're going to switch over to RAL or we're going to start shipping our own CentOS
traditional clone thing after years of competing.
My only question is, will they enable ButterFS?
Hello friends and welcome back to your weekly Linux talk show. My name is Chris. My name is Wes.
Hello, Wes. This episode is brought to you by the all new Cloud Guru.
They are the leader in learning for the cloud, Linux and other modern tech skills.
Hundreds of courses, thousands of hands on labs. Get certified, get hired at a cloudguru.com.
Coming up on the show this week.
Well, we went and did it. We loaded your weekly Linux talk show full of goodies this week.
I mean, it is packed.
We're going to sneak in our first look at Ubuntu 21.10.
Both Wes and I took an alternative route and we went with one of the flavors this release.
So we'll tell you what's in the main release and then our impressions of a couple of the flavors we tried out.
Then a little bit after that, our buddy Wimpy is going to jump in and tell us about his project that blew up on the Internet today.
Like dominated hacker news was on Reddit.
And it's going to change your life if you work with virtual machines on your desktop.
So we'll cover that.
And then we're going to round out the show with some really good emails.
Some people are going to ask us the tough questions in the feedback section.
Of course, we got pics and all that kind of stuff.
So before we go any further, before we get into any of that, let's say time appropriate greetings to our virtual hug.
Hello, mumble room.
Hello. Hello.
I was being attacked by a fly in the studio when I was trying to say hello to you, just flew right into my face.
I'm under attack here.
It's just a very small mumble room member.
I think it's that contingent within Microsoft that still hates Linux.
You know, they they have set out to sabotage the show because they didn't want us to tell the people this week that the biggest feature of Windows 11, as far as the Internet is concerned, is WSL.
Like it was a pretty low key Windows 11 launch.
And it really, truly seems like the key takeaway for Windows 11 for a lot of the average users out there is, hey, did you know there's this thing called the Windows subsystem for Linux?
And hey, did you know it can now run GUI apps?
I get the sense like the rest of the world just figured this out in the last few weeks.
I don't know if you guys have been following this conversation online, but it sounds like not only has this been a massive realization by the user base of Windows, but this week Microsoft is announcing they're making it a lot easier to get WSL going on Windows as well.
And it's about darn time, if you ask me.
I mean, going forward, no longer will WSL just be a nebulous component that you really have to dig around for to find and enable it, hope that you can enable it, given the permissions and version that you have.
No, now running Linux on your Windows box will just be an app store click away.
OK, ironically, of course, I'd like it reversed.
I'd like to install a well-performing Windows subsystem on my Linux desktop and I'd like it just to be one click away.
That sounds a lot more appealing.
That's what I want, like a Microsoft version of Wine that was officially licensed, ran really fast, but, yeah, oh, well, we don't have that now.
That would be nice, though.
It sure would.
But for the moment, having WSL in the Windows app store means Microsoft can update WSL independently from Windows, at least.
I know, you know, if you weren't on kind of the insider editions or keeping up with Windows, which I honestly don't know that many people who do that, it's kind of annoying to get the latest and greatest WSL changes if you weren't, like, really involved with it.
So they say that this change will allow WSL users to, quote, get the latest WSL updates and features faster and without needing to modify your Windows version.
That's legitimately pretty nice.
I recall when we wanted to try out WSLG, it was like this process of going through this arcane different phase of updates and joining this different ring of the Windows development program and all this stuff that just felt kind of ridiculous.
Literally hours of just updates and rebooting until we could finally give this thing a go.
And it really strikes me as you can put anything in an app store now because this is the Linux subsystem and it's just an app store app.
And of course, really what it's doing, right, is it's installing some user land tools and it's running some new tools that they've developed on the back end to just set up the subsystem.
That's really what it's doing.
It's not like it's downloading the subsystem from the wind.
Well, maybe it is in part.
But you're right. I mean, there are there's work on a lot of different areas here, right?
There had already been background work to make the installation easier and add a bunch of hooks so that it's possible to have it in a more seamless environment and Windows kernel features.
I mean, there's just a lot of underlying OS features.
It's not like all of that is being installed via the app store.
But the idea is clever and updating that user land stuff quicker seems pretty nice compared to the experience and process we had to go through in the past.
Hayden Barnes points out on Twitter that along with all of that and having WSL G now actually bundled with WSL, which is a big thing, they're also shipping a new version of the Linux kernel and and he makes specific attention to this.
There's a lot of fixes for ARM 64 WSL.
Interesting there.
It's appropriate that you mentioned Hayden.
It's interesting hearing you talk about, you know, this new version of WSL, or rather, the culmination of it landing in Windows 11 and the way that it's changing the delivery and all the rest of it and in the latest releases of Windows 10, because when Hayden and I were working on this stuff for some considerable time, so we knew all of this was coming, and you were just talking there about graphical applications, for example, I don't think it's too cheeky to talk about that.
To say that that was an initiative that we started inside Canonical that Microsoft weren't actually interested in when we tabled it as something that our users were interested in.
Really?
Yeah.
So initially, we were doing that.
And then Microsoft approached us and said, actually, stop what you're doing.
We've got this.
So we handed that on to them, and it evolved, and that's how, because, you know, it's interesting to me that, you know, Microsoft, not just shipping, you know, a Linux kernel when you enable WSL, but also a Wayland display server.
Yeah, and they're making upstream patches to free RDP to pipe it all together.
Indeed.
Yeah, that's fascinating to see that. So it started as a bit of a Canonical Skunkworks project to deliver this, and then Microsoft got wind of the idea and thought, well, if we're going to do it, we're going to do it at the plumbing level.
Indeed.
And, you know, a lot of this, this all, this all comes back to JB at the end of the day, because you had Hayden on a number of times when he was working on originally, was it WLinux?
And then,
Yeah, WLinux.
Yeah, and he was on here, you know, talking about all of that. And that's how I came to know of Hayden. And then when I was at Canonical, and I was running a number of the, you know, the teams around the desktop, I was sort of asked, well, we need to have more skin in the game here.
So I was like, well, I know who Hayden is. So I just phoned him and said, do you want a job? And, you know, we brought Hayden in. And he basically made a lot, a lot of what you're seeing now is, you know, obviously, a lot of engineering work has been done by Canonical, but Hayden, behind the scenes was pulling strings, and, you know, working very hard to make all of this happen. And it's nice to see all of that hard work happen. And we didn't just hire Hayden, we hired other people from
you know, Penguin and WLinux, and what have you as well.
That's a whole circle, isn't it? That's
Well, I appreciate those insights. And it's, it's remarkable to just to see all of the Windows users out there that are realizing this is a thing. And we've had a few people find the show recently, because they are checking out what this is. And that's been interesting to get their perspectives on this transition. And I wonder, I wonder long term where it's all going. But it's so far, it's, it's led to people finding the show and wanting to learn more about Linux. And I don't know how many people but it's a, you know, it's
it's probably been probably, you know, half a dozen.
I wish I could reveal the numbers. But you know, through publishing Ubuntu in the Microsoft App Store, you know, I don't have sight of this anymore. But there was a time where I could see what the number of installations of Ubuntu were on Windows. And to say it's significant is a massive understatement.
It's only just getting easier now, right? So we're at the start of that curve.
Indeed, yeah, I think we're an inflection point of that rising even more. So that's one way in which new people are going to discover this podcast, another Linux podcasts. And also, you know, with Valve and the Steam Deck, you know, there's a number of things going on right now that will popularize Linux. And also you mentioned WSL is in the App Store, as is Ubuntu effectively in the App Store.
And those were metrics that we had sight of. And what was fascinating to us was, is that Ubuntu is the number one developer tool in the Microsoft App Store.
Are they included in the developer category? And it's at the top of that. Yeah. Oh, wow. Huh. I love that. Do you think it'd be VS Code or something? Maybe it is now. I don't know. But wow. I mean, it just shows you there is strong demand there. And of course, there must be.
Microsoft wouldn't be putting this much wood behind this particular arrow unless there was clear demand from their user base, right? I mean, they're not stupid. In fact, they have metrics of all kinds of things from their platform, right?
Right. But also, you know, just look at the rise of Mac OS's popularity. I mean, I know years ago, you know, we've talked about on this show, sort of lamenting the number of, you know, bright, shiny Apple logos in a sea of developers open source conferences. Well, there's a reason why, you know, it's decent hardware, it's a nice user experience. And ultimately, it's Unix underneath, which is close enough to what people are developing on and deploying to that it's useful to them.
So you know, WSL is in part an answer to that. And I've seen people say, Oh, Windows 11 looks and feels a lot like Mac OS. Well, more so from a developer point of view, because, you know, with one command, you've got, you know, open to user space at your fingertips, which is what developers want.
Which is also why they've invested significantly in building an open source Windows terminal that they keep adding features to add a pretty good clip, especially for Microsoft, you know, a pretty good clip for their pace. And I think you've nailed it. It's hard for us to recall now, but when it was in the earlier days of Mac OS, Apple rather emphasize the fact that it was Unix under the hood.
They made it really clear that everybody understood. In fact, when they would announce a new version of Mac OS, they would make it clear that they had synced to this version of free BSD user land tools. That was like a feature on the box. Yeah, not so much these days. They've broken through that, you know, mindshare barrier now that they need to talk about it.
Right. I think this is also why we see Google making the Linux user land and applications and graphical applications workable on Chrome as well as they recognize that same user might want a Chromebook. Yeah, I know all of that's powered by technology that comes out canonical as well, because that's all LexD sitting behind that, which is, you know, a canonical sponsored project.
That's very true. Speaking of canonical sponsored projects, I'm glad you're here because Wes and I want to share a little bit about Ubuntu 2110 this week, as we like to do, because by the time most people are listening to this, it'll either be out the next day or they'll be listening to this on the day that Ubuntu 2110 shipped.
So it's pretty exciting to talk about this, especially with a new LTS not too far off in the horizon. And we were a little mixed on how to review this particular release because a big aspect of a typical Ubuntu release has been the desktop environment.
But this time around, for integration purposes, canonical chose to stick with GNOME 40, which we've already been using. We've talked about too much already, frankly. Exactly. And what canonical did, and they'll do this sometimes and I find it interesting, is they included the 41 versions from GNOME of like calendar system monitoring disk.
So you get some newer apps, plus their whole Yaru theme and and customizations like the persistent dock, which boy has GNOME 40 been missing that. I've been trying this entire time since GNOME 40 has been out to just live with having my dock only available in the overview.
But it feels slower and like a downgrade in usability. And so that was, I think, one of the things that kept canonical on 40s. They wanted to get this working and it does seem to be working quite well now. So that's there.
You've also got a really, really nice polished Yaru theme. And maybe you could talk about this a bit too, because this is the same theme that's in Mate, which, spoiler, is the edition I tried.
I'll talk more about that. But Yaru feels really well done now. It feels very, very polished, so much so that I actually opted to keep the light theme, which I never do anymore because I find dark themes kind of paper over some of the issues with theming.
But the light theme in Yaru is so spot on, I kept it.
The Yaru team need their due praise because they've been working on this for, well, since the 17.10 release now. That's when that team came together and it's entirely community driven. And they've adapted and refined the way that they've worked.
So, you know, there was, we always have these, you know, controversies within, you know, the desktop Linux space, but there was that whole don't think my apps thing and all the rest of it. And, you know, the Yaru team's response to that was, well, let's actually rebase against Adwaiter and just add the coloring and hinting and everything that makes Yaru distinctively Ubuntu.
So they did that through, you know, icons and artwork and the palette choices and all the rest of it. But they've tried to maintain absolute compatibility with Adwaiter in that journey. So it is compatible and it looks amazing and it looks like Ubuntu.
And yeah, I was very fortunate to be able to work with that team quite extensively last cycle in order to bring Yaru to the Mate desktop. And they were extremely helpful. I had the benefit of meeting them through my time at Canonical.
We had a sprint in London, where we brought that whole team together in the Canonical offices in London for a week. And we threw them in a room with me and Popey and the Ubuntu design team and the brand team.
And over the course of that week, that new Yaru look was kind of created and it was fantastic. And they've been knocking it out ever since and more power to them.
It really just using that theme, it makes the case for theming. Altera, you wanted to, I'm sorry on the pronunciation, but you wanted to jump in a note on compatibility with Yaru, I suppose.
Yes, just a small correction. I mean, from my perspective, the Yaru team has also been really helpful and has been engaging with upstream to make things more compatible.
But at no point can we say that Yaru is Adwaiter compatible or anything is Adwaiter compatible because there are still known issues that both parties know that can severely break an application as of now.
For example, the dark mode in Ubuntu, like the applications don't actually yet know that the system will be darker and so you will end up with gray on gray or black on black text.
That's very rare that that happens though. And you're quite right to point out that technically there is no discrete API to denote how the application is being themed with regards to dark themes.
Or more complicated, a mixture of light and dark, which is that's the heritage of Ubuntu theming. Those original Ayatana themes, those light and dark ambience and radiance themes, they were a mixture of light and dark.
And that was a theming nightmare because it was mixing dark bits and light bits, so it was neither one thing nor the other.
When I was working with the Yaru team, when I started that whole process of creating a Yaru theme for Mate, I was going to have three themes. I was going to have the light theme, the dark theme, and the mixed theme.
One of the guys, Frederick, in Yaru said, don't do this. There are hard lessons we've learned. Just have a light theme and a dark theme. Don't do the mixed theme.
And I was so entrenched in the mixed theme because that's what Ubuntu had done for so long. I was like, no, I'm totally having the mixed theme.
But then when I actually started working two weeks in, I sent him a message. I was like, you know, you were dead right. I'm just doing light and dark. We're not going to do the mixed thing. It's an absolute nightmare.
Yeah, I'm encouraged that I do feel like we are going to get to a common understanding. Maybe the temperatures come down a little bit in the conversation. We'll see.
But still, we're all kind of waiting on pins and needles. Is that what they're saying? Seeing where it goes. We'll have to wait and see.
This edition of Ubuntu also includes all the bits and bobs necessary for Wayland and the Nvidia proprietary graphics driver to work together.
That's really nice to see that land before the LTS.
Definitely.
And did you see, too, that the pipewire bits are included but not on by default? They're still using pulse audio. That's good to see. It's like there now.
Yeah, not moving too fast in some folks eyes anyway. But yeah, you know, the progression continues, which is which is great.
And hopefully if you're interested, like, I mean, at least you've got some bits there.
And I assume you're pleased to see the NF tables is now the default back end for the firewall.
Of course. I mean, NF tables for life, bro.
There's all the little things in here, too, like this is the version that ships with Firefox as a snap by default, and it also is the version that has QEMU 6.0.
So we're going to talk about some QEMU magic later in the show, and you're going to need the 6.0 release.
So if you just want to do that with Ubuntu, that might be enough reason for you to upgrade right there.
So I want to give you a take on Ubuntu proper itself, and I want to give you my take on Ubuntu Monte.
And I also just for fun, I tried out the new Flutter installer, which is still in early days mode, but it is available in the Canary build of the ISO.
And you can try out the new installer if you like. And it's simple. It's clean. It's quick.
You'd have no idea that it's a Flutter application. It's quick to use.
The install itself took forever, like I thought it froze several times at like different phases and stages. Oh, no.
Like step one, it was there for, I don't know, 45 minutes. And then step five, it was at for like another 30 minutes or something like that.
Oh, you're talking over an hour to get this distribution installed?
Yeah. You know, it's early days. It's early, right?
And it's also just a bit ironic because they've made specific improvements to the compression in 2110 for the package archive to improve install time.
So it's just sort of ironic that it was like the forever install.
But the traditional Ubiquiti installer that you're likely going to use is totally fine. It's totally quick.
It actually goes really quick. But I wanted to try it and I can see where they're going. It's simple.
It's clean. There's really nothing more to say at this point, but they've already made pretty good progress on it.
So it's coming along. I decided to go with the Ubuntu Mate flavor in part because I've already been using GDOM 40 for quite a while.
But also, it just sort of lines up with the timing where you get all the goodies from 2104, like QEMU 6 and the newer kernel and the stuff for Wayland and NVIDIA graphics.
And you also get Mate Desktop 1.26, which just shipped a little while ago and has a bunch of control center improvements in it.
And a bunch of Wayland application support in itself has been improved, like the system monitor and the terminal.
A lot of components of the desktop are just Wayland compatible now because you got new powers like the ability to format drives and the whole extensions with actions and stuff.
There's just a lot that has landed. Marco's had a few tweaks.
The window compositor that restores minimize windows to their original position much more reliably.
That's just little bugs like that used to drive me crazy.
Like that kind of stuff's been cleaned up. And so I thought, boy, this just seems like the right time with 2110 out now.
And this new version of Mate Desktop 1.26, like bring the two good things together and give it a go.
And it's looking so great, Wimpy, the software boutique, you know, that comes up, the welcome screen.
It's still the best out of any desktop environment or distribution.
It's so clean and smooth now to queue up all the desktop apps I want to get up and going.
And I know it just seems like a small thing because it's just like the difference of me doing one long apt install command versus checking some boxes.
But the process of going through the list and the welcome screen and kind of being like, hmm, hmm, handbrake.
Will I will I need handbrake? Yeah, you know, I think I might need handbrake. All right. I will get that.
And then combined with the heavy lifting of the theme, because the theme is so clean and professional.
Combined with that traditional desktop metaphor, it is the absolute best representation I have ever seen of that classic GNOME 2 style desktop,
because it's still functional like you expect, but it looks modern with that new theme.
And then, of course, all the under the hood goodies.
It's just if you're not a GNOME desktop shell fan or a plasma shell fan, but you like the GTK ecosystem.
I think you guys nailed it with this release. Well, thank you very much for the kind words.
I know you have an eye for details, so it's pleasing to hear you cite the way that it looks.
That was the lion's share of the work we did last cycle, as I said just earlier, you know, bringing that Uru theme to Mate,
which was more than just, you know, changing the color of the accents and bringing it over because there's a small matter of the fact that, you know,
Mate uses a different window manager from GNOME. So I think I spent about six weeks writing the window manager implementation from scratch,
you know, because it didn't exist. Things like, you know, the title bars and where the maximize and minimize icons are, all of that stuff.
I lifted and shifted the whole thing and went back and was reading, you know, reminding myself how to do this stuff because I hadn't done it in such a long time.
And also uplifting it, ridding it of ping files and moving it all over to SVGs and scalable assets.
Even going in and patching the window manager so that when you do side by side tiling, if you've ever done that, you know, you do super left on one window,
super right on the other and you get side by side tiling, making sure that all of those lighting hints are there,
also throwing away all of the curved window header borders and using straight lined up so they actually connect directly and they're pixel perfect aligned.
And I had tons of fun doing that. I absolutely loved it. And I'm very, very happy with the result. I'm looking at it now.
I've got mumble tiled next to a brave browser and I'm just looking at the scene between them and I'm just reminding myself, yeah, I did that.
And I had a lot of fun making it was good. Well, I'll tell you why it changes the game for me a little bit is in the past.
If I were going to load up a desktop environment for my son, he likes it to look new and modern because he equates that with having a good,
fast computer is his desktop looks high, you know, he takes after his dad. And so if I sit him down in front of a desktop environment because, you know,
he'll see computers I'm working on and it's it's an older metaphor with an older theme.
He'll actually make fun of me like, Dad, what is this old thing you're using?
And like same with my wife, if I wanted to give her a new laptop and I gave her a desktop environment that didn't look modern,
she'd think, oh, I gave her a cheap computer is how she'd look at it.
But what these changes have done is they make a look just as clean and professional and high end as any other desktop environment.
It's just a metaphor that remains understandable and appealing to people who have used a computer before.
But it's it also makes it an intensely pragmatic flavor because there's so many workloads where maybe I need a VM of Ubuntu.
Maybe I'm a developer and I need a little bit of a desktop environment and I don't need a lot.
Or maybe I'm using Ubuntu now for utilitarian reasons.
I find a bunch to be very practical for whatever thing I might be doing.
Mate makes so much sense in those in those situations because now there's really no compromise.
You get your GTK apps. They look great. They have a good theme.
And you also get a desktop environment that feels completely, completely modern.
Like it's just it's a great OS for people who just need a very utilitarian desktop environment and don't want to feel like they're making a compromise.
I just really can't understate or I guess overstate how important this is, this visual change.
Yeah, I'm very happy with it. I thought I was happy with the continuation of the ambience and radiance stuff until I started working on this with the Euro team.
And it has well, I just love it much more.
But as you say, Mate is utilitarian. Don't expect lots of eye candy and slick animations with easing functions and any of that.
You don't get that. Windows get painted to the screen immediately.
When you minimize, they go away immediately. When you tile things left and right, they tile immediately.
If you are a tiling window manager user or a sudo title like I am, there are key binds, which I use all the time now to just line the windows up and tile the windows by hand.
It doesn't do, you know, the automated tiling that you get in, you know, tiling managers.
But if you want a tiling look and you just want a couple of key presses to reflow your desktop, that's all possible.
And recently in my other office, I've got an ultra wide screen monitor.
And so I mentioned earlier, you know, you can press super left and right to tile one side or the other.
But if you keep pressing super left and right, it will actually proportionally resize that window to the width of the screen available.
And if you've got an ultra wide, this is manner from heaven because you can open two windows and you can align those two windows and give one of the windows like, you know, 75 percent of the screen and the other 25 percent in just a few key presses.
So utilitarian, designed to get out of your way, keyboard centric.
That's what it's all about. But it's not fancy.
It's very much your Mercedes G-Wagen, not your Pagani Zonda.
Linode.com slash unplugged. Go there to get $100 in 60 day credit on a new account and you support the show.
Linode is how I host everything.
And if you're like me, you're probably the tech person in your social group, in your family or at your workplace.
And like me, you have to watch your friends, family and coworkers use different technologies that spy and track them.
And they have no control over and are often almost always closed source and frequently have some outrageous monthly per user cost to in the business space.
Well, why not use Linode's $100 credit to set something up for them that's an alternative?
This could be an opportunity for you to one click deploy a Jitsi server, get everything set up using that $100 credit.
And then one day suggests that everyone use that to me and demonstrate how you can replace expensive,
closed spying technologies with free open source stacks that are under your control and cost less.
That's the power of that $100 credit is you could begin to change things,
maybe show somebody how you could use next cloud to replace Dropbox, maybe deploy a GitLab.
They have lots of one click applications and I'm not suggesting they're always for you.
Maybe you could help somebody out who's stuck.
There's a lot of ways besides just building something for yourself, learning and trying technologies,
you're just getting a good understanding of Linode with that $100.
You could use it to actually impact somebody's life and get them off something like Zoom.
That's one I love to hit because Jitsi is so great and it's so straightforward to get up and going.
You know, they've got 11 data centers around the world to choose from.
So there's probably a Linode data center near you or where you're going to be working.
So you're going to get fantastic performance.
They are their own ISP.
So, you know, they've got a great connection to the Internet.
It's about as good as it gets right there.
And they're 30 to 50 percent cheaper than the major hypervisor duopolies out there, I'd say.
That's what they are, right?
They want to suck you into their platform and have you use that stuff indefinitely.
So that way they can just take a little bit off the top from you every single month.
It's crazy.
That's why when Linode comes in with such great value, such great performance,
and the total DIY solutions or the total one-click deployment solutions,
then they back it with the best customer service in the business.
So you get good performance, great flexibility, easy management,
and if you ever need it, the best customer service in the business.
That's checking a lot of boxes.
That's why I say go use that $100 and just see what we've been talking about.
Linode.com slash unplugged.
While you were off galavanting with Mate, I decided to give Kubuntu 2110 a try.
Now, while we talk a lot about the latest and greatest Plasma,
with Kubuntu 2110 you're getting Plasma Desktop 5.22.
Yeah, that's a little bit old, but it's really not that old.
It's just from June 2021, and it really was a great release.
We'll have a link in the show notes if you're curious about all the goodies that you get with 5.22.
But it's just a solid modern Plasma desktop.
Now, maybe you don't want to do Wayland.
It is there, but it's not the default.
Personally, at that stage, without some of the more recent Wayland fixes,
that's probably what I'd do.
But in any case, it's just a great Plasma with a few updated apps that you probably want,
like LanteDoc has been updated to the new 0.10 release,
which has a bunch of modern features just from August.
And you get the latest bug fix release from Krita 4.4.8.
Now, there are a couple of downsides.
The beta had a bug where Electron apps would crash on launch,
but it seems like that's been ironed out now.
And there's still no ZFS on root option in the installer with Kubuntu.
So if you want that, you're going to have to do it by hand.
I don't mind that, though, for the desktops, you know, with ZFS.
That's fine, because in most cases, it feels like for me right now,
I'm just not ready to make one disk dedicated to ZFS.
I don't know.
Yeah, you know, I mean, it's all still experimental anyway.
True, true.
And if you're not ready for experimental things, you kind of might like Kubuntu as well,
because for the moment, Firefox 92 is still the default browser
using the native deb package from the Ubuntu archive.
I thought that was interesting.
So the different flavors may go a different direction when it comes to the Firefox snap,
and Kubuntu has decided to go with the deb from the repo.
Also, I guess I knew this, but forgot to mention that it's staying in the repository.
So in theory, if you don't like this change, you could remove the snap
and then just apt install from the repository.
Yeah, exactly.
That's not too bad.
Well, and you know, too, Wes, 5.22 isn't really that bad.
I'm on a pretty up-to-date neon box, as of, I think, the weekend,
and this is 5.22.5.
That's really, if it's 5.22.0 or somewhere in one of the sub-releases, that's totally fine.
It's going to be a great release.
Kubuntu, I think, has picked up in popularity recently amongst several in our audience
because I've been seeing a lot more discussion about it in our Telegram group,
and I think people are, I don't know, they're feeling the plasma love.
So we'll have to maybe swap, and you'll pick a flavor that's not Kubuntu next time,
and maybe I'll pick the Kubuntu flavor or something.
We'll change it up for the LTS.
Yeah, you know, it was a little tricky because we'd talked a lot about
some of the more recent plasma improvements.
There's just so much going on over there right now.
Yeah.
It kind of struck me that the theme of 2110,
and, you know, this is just kind of how it goes sometimes with a bunch of releases,
was just, it's not going to really enter into my life.
You know, I've enjoyed using it.
It's a nice, pretty well modern, I mean, 5.13 kernel.
You know, it's a great environment,
but putting all the stuff we've talked about together,
I think it really does just make me super excited for the next LTS.
Like, there's been some recent improvements that'll get picked up,
not all of them, but a good number.
And what we've got right now is already just so solid.
Yeah.
I think 2204 is just going to be a release that will enter into a lot of the machines,
either in my life or like the people I support's lives.
Yeah, I could see that.
You could see it building towards that, can't you?
And Michael Larble did some benchmarks,
and he shows that in terms of gaming performance
and especially on systems with AMD GPUs and that are using Vulkan,
there is some significant performance improvements over previous releases.
And he benchmarked like several versions going back quite a ways into Ubuntu's history,
and 2110 is like the best performing of the batch in almost all of the benchmarks.
Well, the official release for Ubuntu 2110, now that we've got you excited about it,
should be out Thursday, October 14th, 2021.
Let us know how it goes for you, LinuxUnplugged.com.
I want to say thank you to our show members at UnpluggedCore.com.
Some of the best bits are available to our members,
like our pre-pre-shows and our post-post-shows,
the stuff that doesn't actually make it into the show.
When we pause for a moment and reorganize,
you get to hear that little production meeting live.
That's what we'll call it.
All of that's in a feed for you if you're a member.
Also, we have the limited ad feed,
which is a nice tight production of the show, all the same edits,
the audio production after Joe's had time to go over it,
but just limited ads, which means it's a little bit shorter run.
So if you got like a shorter commute or something like that,
it could be a great option for you.
It's just a way of saying thank you for supporting independent content.
We appreciate it.
UnpluggedCore.com.
Go get our screw-ups,
and then write in about it at LinuxUnplugged.com.
Actually, I want to mention the Matrix community.
The spaces are going strong.
There is a self-hosted space over there,
or what if that's the right term?
But you can get in there and we can talk, run a home assistant.
Need to get more home assistant users in there.
I got some big home assistant projects I need to pick people's brains.
Join me in our Matrix community.
Details at LinuxUnplugged.com slash Matrix.
You can also join the Luplug every single Sunday.
Like-minded folks just hanging out talking about Linux, you know?
What could be better than that?
Like, the other stuff going on in the world, that doesn't matter.
You got more in common than you don't,
and you celebrate that every Sunday.
LinuxUnplugged.com slash Mumble for our Mumble server info.
It's noon Pacific, but you can get your time at JupiterBroadcasting.com slash calendar.
That's all over there, and then you hang out in there,
and then your Mumble client's all good to go.
You come in here, you know, you start chatting with us.
You never know somebody like Wimpy out there hears you on a show.
They end up contacting you.
You get a job.
At that job, you start brewing up something like WSLG.
Microsoft gets wind of it.
Next thing you know, now Windows users have graphical apps.
You're welcome, everybody.
I'm hiring.
Slim AI are hiring.
We're a cloud-native GitOps for containers organization.
If you know anything about Golang, containers, CICD,
then send your CV to jobs at slim.ai.
Very good.
So let's talk about QuickMU.
The Internet was on fire with this.
In fact, if you go over to Hacker News and you look at the most discussed Linux story of the week,
it is QuickMU, a tool that Wimpy has built to quickly create and run optimized Windows, Mac OS,
and Linux desktop virtual machines.
And once you got it installed, to say it's easy is an understatement.
I'm talking like very simple one or two commands, you download an ISO,
the second command, it's up and running, and you've got a nice virtual environment.
Talk me through this a little bit, Wimpy.
What was the genesis of this and what are you hoping to solve?
The genesis of this was a shonky shell script that Popey and I created when we were working at Canonical.
And the idea was we wanted to create VMs of Linux desktop distributions really quickly,
and we wanted to carry those virtual machines around with us on USB thumbsticks or USB drives.
So the very first versions of this, which never got published,
you would type QuickMU and just give it a path to an ISO image of a Linux distro,
and it would start that distro in the most optimized way it could based on interrogating your host,
and then you could install it.
And once you've done an install, your key to running that VM again was just QuickMU and point it at the ISO.
It knew it had been installed and it would start the disk image.
So that was the very first origins, a way to quickly create optimized Linux VMs.
And so then recently you've decided to release it as a standalone project,
and it seems expand its capabilities and expand the operating systems it supports too.
I mean, I notice Windows and Mac OS are on this list.
Yeah, so about a year ago, I revisited this.
We were approaching the LTS release for 2004, and there was a big community movement around QA and testing.
So I decided at that point to dust QuickMU off and turn it into an actual project and put it on GitHub.
And I did a number of live streams where I refined this tool,
and its purpose at that point was it was absolutely targeted at people who wanted to QA and test Ubuntu distributions,
specifically those development daily releases so that they could participate in that testing endeavor.
So that's sort of where it gained some traction.
But then also at around that time, Popey created a step called Sosumi.
And if you're not familiar with that, Sosumi is a way to run Mac OS in a snap.
And then Diddle Danny, who's an Ubuntu and SnapBraft contributor,
augmented that idea and created a snap called Clouds, which is a way to run Windows at that time, Windows 10 inside a snap.
And at that time, I put a little bit of effort in from what I'd learned from making QuickMU
to push some improvements to Sosumi and also ingest some of what they'd done.
And there the project sat for about a year.
And I've been using it on a daily basis for a year to test virtual machines, and it was working fine.
But then, well, a couple of things happened.
A few weeks ago, a friend of mine, Yannick, is creating his first mobile application using Flutter.
And he was saying, well, I can't create my Flutter app on Mac OS because I don't have a Mac and I can't test it either.
So I then improved the Mac OS support to really optimize the Mac OS experience so that he could develop and test his app.
And then a few days later, Windows 11 was unveiled and I thought, well, what's another challenge?
I should probably end because, of course, there's some additional requirements there like TPM.
Right.
And Danny had done some work to get TPM to work.
So we were sort of trading what we'd learned.
And I baked all of that in.
So within a couple of days of Windows 11 coming out, QuickMU is now in a place where it can create very easily Linux Mac OS and Windows containers.
And they are as optimized as is possible.
Does it download the Windows ISO from Microsoft?
Yes.
Oh, man, that's great. And the Mac images from Apple?
Indeed. Yes. So there's there's two components. There's QuickGet.
So you only need to run two commands to create the container.
I'm sorry. I work in a container organization.
I say containers all the time to create the VM.
So you say QuickGet Windows 11.
It will download Windows 11, the ISO, create the VM configuration and tell you how to launch it.
And all of the optimizations have been done for you automatically.
So you can now run Windows 11 in a VM.
Right.
Or you can say QuickGet Mac OS Catalina and it will download Catalina, create the VM configuration and tell you what you need to do to run it.
And it's just two commands and it works the same with Ubuntu.
You can QuickGet Ubuntu Marte impish to download the latest version and create a config and run it.
And it does all of that for you.
It's super simple to create all of the VMs that you need.
And Mark, you had a note on the GUI for this entire thing to this whole operation.
Well, that might be a bit grandiose, but I've started working on a GUI in Flutter, which I've got up on GitHub.
Oh, really? I mean, I thought when you said I don't know why, because I'm a nerd, I guess.
But when you said GUI, like, oh, maybe Mark had some thoughts on the command line interface because the command line interface is quite simple.
But a GUI would really take this thing to the next level.
Well, Martin did something really nice, which is that if you put in an invalid command, it gives you the list of all the valid arguments.
So all I really do is I scrape those and put them in a nice form.
So it shows you the list of the list of OS's it supports and then the list of versions for that OS and then gives you a list of the ones which you've got ready to run and lets you start and stop them.
That's about it at the moment.
That is really neat. This whole tool is actually very clever.
So I, I, of course, tried it. And because I'm already on the system here, I'm on as an Ubuntu box already.
And so it was very, very quick to get started. But it's also not that difficult on any other distro.
And it is remarkable that really this all these pieces haven't been put together before because it's all there.
Right. You can all of these installers are available online.
We know a lot of this now, but it really hasn't been brought together like this.
And what I really appreciate, Wimpy, is that it's just using tools that are native to Linux, right?
It's not some it's not like virtual box where I have to go get some application that some third party tool and install it.
It's just it's taking advantage of the plumbing built into Linux and it's using QMU to do this.
It's not like some weird third party tool. It's just you brought everything together in a slick way.
Yeah, that's my only complaint. There's no Oracle license design.
I mean, yes, this is simply a wrapper around QMU or QEMU.
I don't know what the correct pronunciation is. Maybe if the IRC channel for Jupiter broadcasting could let me know.
I've been criticized for both. I don't know which is. But yes, it's just using QMU.
And there's an awful lot of capability built in there.
And I suppose one of the things I was trying to get away from is I used to use virtual box and every time I created a virtual box machine,
I would have to remove the floppy drive because I didn't want that and change the chipset on the CPU and change the 3D acceleration.
And I was basically wasting time building my virtual computer.
Now, that's fine because I know how to build an actual computer.
So I understood what I needed to do in order to build this virtual computer.
But you shouldn't need to know that stuff. You should just need to know.
I want to run Windows 11, run Windows 11 for me and computers can be made to do clever things,
intelligent things, just figure out the right way to run Windows 11 on my machine or tell me, actually, you're out of luck.
You don't meet the minimum requirements to do this. We're going to stop here.
That's a pretty high bar to set. And you kind of tease there, you know, supporting non Linux operating systems.
It's impressive that that works. I mean, do you have things like video acceleration on Mac OS?
In Mac OS, no, because so there are a number of technologies available for virtual machines when they're hosted on Linux.
Virtio is the big one. Many people have heard of that.
It's a way to accelerate disk access for your virtual disks or your virtual network devices or your virtual display devices.
There's a whole host of things that virtio encompasses now.
And there's another protocol called Spice, which is the way you can share content and devices between the host and the guest.
And there's also Virgil, which is a way to hand off some of the acceleration to the host GPU.
So you get decent, not native, but you get decent hardware acceleration.
So QuickMU just figures all of that stuff out for you. It knows what your machine is capable of and optimizes for the best case that your machine can do.
But this is not where I'm stopping. The next stop on the road is going to be PCI pass through of GPUs, but in the same easy way.
So you will just be able to say this is my GPU and it will do the right thing for you. That'd be great. And give you native performance.
I assume you saw Wendell's suggestion about maybe hooking up looking glass to this as well. I mean, that's pretty out there, but could be neat.
Yeah, I think that's an obvious destination, right?
I've been trying to get the underpinnings right by avoiding the PCI pass through stuff, right? Because it's all tractable, it's doable, but I didn't want to go there quickly.
And also, it turns out having a project that trends on Hacker News, lots of bug reports and also lots of pull requests, both are good in equal measure.
So I still haven't caught up on all of the improvements from all of that. So I'm just spending a week incorporating all of these improvements, fixing all of those rough edges.
And probably in two weeks from now, I'm going to start looking at how do we do PCI pass through in the best way that that could be done.
And then, of course, how do we expose that to people like Mark, who are making graphical user interfaces because Mark has first mover advantage, but he's not the only person making a graphical UI for QuickMU.
Competition.
It's like a whole alternative ecosystem that's bringing up here and no more libvert XML for me. Yay.
It just seems like it already is. Honestly, I'd like that life changing level, like Jack was saying in the chat room, like it is, if you work with VMs a lot, it is great.
But if there was a way to bring PCI pass through and looking glass to the masses in a comprehensive package like this, I have a sense that could take this thing to sort of an entirely other level that the very few tools reach that kind of level.
Like it's going to be extremely impressive to bring all that together. And I can understand wanting to take your time to get there.
Yeah, we've got the underpinnings right. But that's that's the next major milestone for the project.
I appreciate that, too, because one thing that's great about this project, as someone who occasionally dabbles with QMU command lines manually, it's almost like a documentation resource for how to do all of these things directly with QMU because the documentation out there on the Internet can be quite confusing depending on what version you're running.
So that this is all happening with bash and standard Linux tools and that it's still readable. That's a huge accomplishment.
Well, whereas there's also one other feature that isn't documented, which is when you run QMU to run a VM, it puts a shell script in the virtual machine directory of all of the arguments that the last run required.
So you've actually got a full shell script as like documentary evidence of how to create the optimized virtual machine you just ran.
I want to take a moment to mention that our friends at a Cloud Guru have a course on mastering the Linux kernel.
It's a standalone course, but you can actually combine it with a part of a learning path that prepares you for LPIC 2.
So you'll learn how the Linux kernel provides an interface between hardware and software.
Of course, you're going to compile a kernel from start to finish. The course covers the kernel runtime management troubleshooting when that does happen.
And importantly, adding and removing modules and modifying those modules on boot, which is really kind of the next level stuff.
And it's really useful to have their helping hand. We'll have a link in the show notes or you can go to a cloud guru dot com and search for the Linux kernel and you'll find it there a cloud guru dot com.
Well, I think it might be time for some feedback. Ruben writes in. Hey Chris and Wes, regarding Chris's computer troubles, I have a suggestion.
Was a NUC or NUC like box considered at all? There are some interesting options available now with energy efficient AMD Ryzen CPUs like the ASUS PN50 or PN51.
These NUC like devices share a lot of advantages that you might have with laptops in terms of efficiency, DC power input and portability.
There's also some other advantages like better cooling options sometimes and perhaps better performance.
Plus, you're not paying for the keyboard or screen or battery that are connected to the device that you might not use.
Of course, they're not standalone, so you'll still have to have a monitor keyboard if you need that.
But these NUC like things can hold an NVMe drive and a two point five inch SATA drive simultaneously.
So disk space won't be a problem. Those are great devices for the home server use, especially the nomads out there that are looking for something low power.
And I was trending that way strongly. We were just talking about this in the members pre-show.
And that was probably the direction I was going to go when it came time to replace my Raspberry Pi's.
If you're not a self-hosted listener, I should probably recap just super quickly at home, which for me is Lady Joob's, my RV.
I have, depending on my load, two to three Raspberry Pi's running.
One Raspberry Pi that just runs a ton of jobs, just has a ton of different containers on there running.
Home Assistant, Plex and Sync thing and a ping monitor and whatever else I'm messing with.
Like right now it's an MQTT servers on there and a Visual Studio Web Editor is running on there.
Like, you know, just stuff I use around the home that I want available to me offline.
I've kind of recreated some of my essential Internet services running on this Raspberry Pi.
And I have another Raspberry Pi that runs PiHole and that's a separate box.
I like to have that separate from my server so I can reboot my DHCP and DNS stay up.
And so that PiHole plays a key role for me in blocking excessive ads on the Internet because I'm on an LTE connection.
So if I can block them there, then I save the transfer on the LTE.
And then I have a third Raspberry Pi that is sometimes off depending on if I'm trying to save power.
Because even just one Pi makes a difference.
And that's running an open source tool called Shinobi.
At least I think it's open source.
And Shinobi, it's a home camera monitoring solution where I have several cameras throughout LadyJuice, like six,
that stream into this box and record to MP4s on an external SSD.
And I turn that off sometimes when I want to save power.
And what I would like to do is ultimately take everything all these Pis are doing and transition it to one NUC.
And that was the direction I was going or a rise in box.
I was just kind of waiting for the right box and I've gotten some great suggestions.
And I love when people send in ideas because it helps me stay apprised of the different developments in this area.
Yeah, right.
The audience finds the strangest gadgets I would have totally missed.
Yeah, we really do appreciate when you send them in.
Even if I'm not looking to buy one right now, I like to stay informed.
So thank you for everybody who sent in a bunch of cool ones and keep sending them in temporarily.
And I change my mind all the time.
But what I'm thinking my move is for my home server and I'll talk more about this on self-hosted is.
I'll likely end up in six months or so with an M1 Mac Mini running Asahi Linux,
which is likely just going to be Arch Linux running all of these containers on one box
because we're going to end up with an M1 for testing Linux purposes anyways.
We'll test Linux compatibility for a while so we can report on that for you guys.
And none of our production tools require Mac OS.
In fact, I think it would be a downgrade at this point if we were to use Mac OS.
So we have no real use for the Mac as a Mac.
So I'll probably end up transitioning to a home Linux box that will just run headless.
So I actually don't even doesn't even impact me if they never get GPU acceleration working.
Can I just say I like it that, you know, while we're transitioning the studio server away from our chair,
you're thinking about setting up a new home or server.
I just I just like that.
I probably would go arch, you know, for a while on a new platform, but I could see eventually transitioning over.
I think the project plans to try to make it work with several different distributions.
It's going to be, I imagine, at first an installer that helps make sure everything's set up with their bootloader
and the partitioning you'll need in the five partition and resize Mac OS.
And then it's going to walk you through installing a Linux.
And for right now, it's going to be arch because that's what they're working with.
But I think eventually that'll expand out and other distros will incorporate all the code they're upstreaming.
And I want to be there to observe that.
And so I'm going to end up with an M1 just to kind of capture that.
And it seems like a pretty good job for it would be a low power server because even under maximum load
with the GPU and the CPU max, it's 33 watts or something like that in that range.
That's great for somebody that's running off of solar and battery.
So right now I'm kind of trending that direction, but we'll see.
I may change my mind because ultimately what I'd really like to do is an x86 box with five or six, probably six internal SSDs running Proxmox
and then running different OSes in Proxmox with the containers inside there.
So I don't think the M1 is going to be a long term solution for me, but it'll be one while we're exploring it and stuff like that.
Justin writes in and he's thinking maybe the industry is actually kind of at risk by going to all in on the Raspberry Pi.
He says, I love the show because it's like finding my people.
But one thing I've been wondering lately is, are we blind to the industry just going all in on the Raspberry Pi?
More and more products we see today are featuring it at the core with now, especially with the compute module.
Isn't it dangerous to have one company control the supply and the project roadmap?
Aren't there other ARM boards that we could potentially be using as the base for some of these products?
What do you think, Wes? Are we creating a monoculture with the Raspberry Pi?
I mean, it does kind of highlight the weird world of ARM, at least if you're used to the x86 ecosystem.
There certainly are a whole bunch of other really neat and I think in many people's eyes better boards out there if you're interested in this stuff.
But Raspberry Pi does have the mindshare.
So, you know, it kind of depends on how much of a project you're looking for and if you're interested in learning enough about the OS to deal with those differences,
because it's not quite as easy all the time to port those things as we'd like.
Yeah, mindshare, which equals an ecosystem of developers and users who are testing it.
It means an ecosystem of free software projects that are constantly making sure they have Raspberry Pi compatibility.
Or even just to have an image at all to install. I mean, are you going to be willing to build your own or modify one for a different machine if you had to?
And I think a lot of people who are opting to use a low power ARM device to control their, you know, to be the core of their device,
performance isn't the number one objective.
You know, it's an objective, but it's not the number one objective or else they'd be probably going with an entirely different architecture.
That's something we have to keep in mind, too.
And when you look at the totality of the market, I don't think we're at any risk of a Raspberry Pi monopoly by any stretch of the imagination.
But when you do look at like the niche product and project market, I can kind of see where Justin's coming from and where he's going with this.
But I would maintain that the ARM ecosystem has brought this on itself by being the Wild West of different bootloaders and graphics drivers and blobs
of all the different combinations of hardware setups they've had over the years and not working proactively upstream with the Linux kernel.
It's led the people building products around these devices to look for something that's sane, consistent and predictable.
And as a result, they've gravitated towards the Raspberry Pi.
Well, speaking about frustrating platforms, Hunter writes in asking about the MacBook hate.
Hey, I've only been listening for a month or so and I love your shows, but I was just wondering why does there seem to be so much dislike for the Mac ecosystem or just specifically MacBook Pros?
Are we given that? Maybe we have. I bet what happens is we have shorthand like, well, we'll groan about something the Mac does because we as like a collective community realize that's all that makes it hard to repair or we realize it makes it unique to the Mac ecosystem.
So it's hard for Linux to work with it. And so we'll groan about something.
And if you don't have the full context, it sounds like we're just slamming the MacBook, I think. Right. Do you think maybe that's what's going on?
Yeah. And I'm not quite sure if Hunter is asking about us specifically or the wider sort of community, because, I mean, you know, I think there's a lot of confusion in some parts of the Linux ecosystem because a lot of us recognize that, you know, some of those MacBooks, they're really nice machines.
They just when you if you get used to them, if you put up with Mac OS, they're really pleasant to use. But at the same time, we're frustrated because at least the most recent ones haven't been a good experience for Linux users.
I want the hardware. Don't really want the software. And so I'm conflicted about it.
Plus, I think there's still a pretty good contingent in the Linux world that used to be on Mac before the rise of Linux.
In a funny way, too, it almost seems like it's going to be more sustainable to have Linux working on Apple's new totally proprietary architecture than when they had Intel MacBooks.
Like, I think a lot of us in the Linux community thought when Apple switched to Intel, this was such a great opportunity for us to get Apple hardware and run our preferred operating system on there.
Here comes boot camp. It's a new world. Oh, boy.
Right. Exactly. And for a while you could get there. But when the era of the touch bar came out and they switched over to their new controllers for the hard drive with the T1 and T2 chips, et cetera, like we kind of got locked out for a while.
And it kind of was unfortunate.
And I think for a bit, the MacBooks were not necessarily a competitive product either, especially remember they just stagnated for a while there.
Yeah, 2016, 2017, 2018 era, not very competitive. Clearly, the situation's changing.
That wasn't Mac's fault, that was Apple's fault though. I mean, this is Intel has been, well, it's Intel that has stagnated for seven years.
Well, I would also say that some of this is Apple's fault because they refuse to consider another supplier for their x86 chips.
Like in the time frame that Intel has been remarkably uncompetitive, AMD has done great work with the Ryzen, the Zen architecture is becoming the Ryzen CPUs, the Ryzen APUs and all these other things.
It's not like they don't have an existing relationship with AMD because all their pro equipment ships with AMD Radeon GPUs.
So why didn't they do that?
I honestly think it's because they figured that if they're going to switch suppliers, they might as well take the opportunity to rationalize their entire supply chain and their their platform development.
And they already had the big custom, very custom architecture platform that they built for the iOS devices.
Why not bring that over to the Mac?
It's just the x86 users were kind of left hanging in the wind in the meantime while they were building out that transition, which undoubtedly has gone way smoother than I think anybody could have predicted. You got to give Apple credit there.
Well, it was five years in the making.
Right. But that five years means that it sucked for MacBook users like the butterfly keyboard should never have gone out.
They should have rolled that back after the first MacBook Air that went out with it.
They sat with that butterfly keyboard for way too long.
Like there was a lot of institutional decisions they made there during that transition that made the Mac a less competitive platform.
But I think that situation is changing there.
And I am very, very impressed by the progress the Asahi Linux team is making.
They now have a usable Linux desktop actually booting.
It doesn't have full GPU acceleration.
But Alyssa Rosenwig tweeted that the performance is better than on some ARM systems that do have native GPU acceleration because the software CPU acceleration is just so damn fast.
We have more coverage of that in Linux action news.
But I don't know. So I think, Hunter, you may have been picking up on some of our frustrations with choices Apple has made in the past.
But we have a policy here on the show that you use whatever works best for you.
And if you opt to be interested in Linux and you're using a Mac, we still consider you a Linux user and we're glad you're listening, whatever you're using.
I just got myself an iPhone 13.
Of course, I'm on the upgrade program.
But please, no Plan 9.
No.
So, you know, like Wimpy, Wimpy talked me into it.
I got the iPhone 13, you know, and I just choose the tool that works for me.
For me, Android isn't the right mobile operating system, but it is for a lot of you out there.
And that's great.
And there's a lot of great options for you.
So that's how I kind of look at it now.
And I don't have any hate for anybody that wants to wants to use the laptop or OS that works best for them.
Wes, you found a great pick.
It's one that we should mention more often on the show.
Well, yeah. OK, maybe you're getting some exciting new hardware.
You want to see how Linux runs on it.
What better than the Pharaonic test suite, which is just released version ten point six point one.
Yeah, this is really just an excuse for us to mention the Pharaonic test suite because it is a tool that Wes and I use consistently behind the scenes to get a feel for how things perform.
You know, we test out even like our VPS and stuff.
I mean, we really use this thing everywhere all the time.
And the Michael and team over there just keep cranking out a really, really useful tool.
And and yeah, don't worry, Wes.
They've added support for your new OS of choice.
Windows 11. Dang it.
I tease. I'm just trying to trigger everybody now over operating systems.
But anyways, tip of that to larval in the team.
Pharaonic test suite is a real gem.
And if you've ever been reading a Pharaonic article and you've seen those bar graphs, that's that's how he generated it.
And you can do the same.
And it's surprising the amount of things it covers.
If you're on the social medias, you might as well follow us.
Right. We're not saying things that are going to upset you, at least at Linux unplugged.
The network is at Jupiter signal.
In fact, did you know this pro tip here?
There's a whole bunch of other shows like Linux action news and self-hosted and Coder radio over at Jupiter broadcasting dot com.
And you can get an all shows feed and you just get all of them and get all the shows and they're all good.
Hey, don't forget, occasionally there's even an extra.
Yeah, that's true. There was recently it's like seven or eight years ago.
I figured out what I was doing, you know, and so like we got Coder radio, we got Linux unplugged.
Right. And they're like around the same age.
So I figured out, OK, this is how I do a show now.
And so they're good shows and self-hosted like, you know, we take all those lessons and we made self-hosting.
Now it's been going for a couple of years.
It's a good lineup. All shows feed.
You know, it's not going to not going to do you wrong.
That's over at Jupiter broadcasting dot com.
And if you're missing Linux action news, well, you're missing out on all the cool stuff going on.
But we'd love to have you join us, hang out with us, catch the full live stream.
Everything we do it every Tuesday right here at 12 p.m.
Pacific, 3 p.m. Eastern. See you next week.
Same bad time, same bad station.
And of course, links to everything we talked about today, like QuickMU, all of that stuff.
Linux unplugged dot com slash four to seven.
While you're there, you can check out our matrix info.
Join us in that chat room.
Now, that's a place where it's really pretty great.
You know, it's a nice tight knit community.
It's like all the Internet's at its best.
So it's that size right there.
That's a Linux unplugged dot com slash matrix. Love to have you in there.
But mostly we just want to say thank you for joining us.
We appreciate you consuming this show however you choose to do it.
We really do.
Thank you so much for joining us on this week's episode of the unplugged program.
And we will see you right back here next Tuesday.
All right, y'all head over and let's start voting.
It is time for us to pick the title of this here show.
Get that over there at that.
Now get that browser over there quick now.
Absolutely.
JB titles dot com.
Everybody go vote.
Did you see that there was a big change at the Alma Linux OS Foundation today?
I think I think the news came out today.
The CEO and founder of Cloud Linux was the chair of the board for Alma Linux.
And he is stepping down and it's all been planned.
It's intentional.
He's stepping down to make room for a community member to run the chair of the board of directors for the Alma Linux OS Foundation or member of the board or whatever.
You know, I'm getting the terms wrong probably because this stuff all sounds like bureaucracy to me.
But it's important for the governance of a distribution.
And one of the things I asked Jack about last week is like, so how does this work exactly?
And this is just one less Cloud Linux employee being involved with the governance of Alma Linux and opening it up to a member of the community.
It's like a continuation of what they've been working on.
But this is a pretty big one, right?
Because this is like the CEO of Cloud Linux.
He's been investing in this project for a decade internally.
They make it public.
They put all the work into getting the structure, the foundation, the legal work, everything all figured out.
And then he gives control away.
When do you actually ever see that happening?
Very rarely.
Right.
I mean, don't forget there's still some aspects that impact the business, too.
And now you have to kind of trust that this foundation that's set up is going to run this project that you're basing some of your business on in a good way.
It's interesting that we're now in October.
The deadline for traditional CentOS is the end of December.
Things are still moving and shaking.
We're still seeing things shake out.
And in a way, it's kind of amazing to see how fast the enterprise Linux community can move.
Right? Right? Isn't it funny?
Like they're just hustling.
