Wester is a conspiracy afoot it appears that office 365 one drive looks at user agents to determine performance
This is breaking news on the r slash Linux subreddit, which everyone knows is the Bastion
CNN level style reporting here, but this is something to consider from tornado. He says a few weeks
I've been running Linux mint 18.1. I got on my lappy. I'm still in school. I started a new project
We have a project where we use one drive on an office 365 when he uses Firefox 52 and goes online
He gets it in compatibility mode. Sadly enough. He said I experienced a lot of performance issues with that
He says I have a desktop running Windows 10 in the same Firefox 52 web browser
I tried working on the document and I see no I see if the problem is this but it does not there was no problem
I began thinking about trying a few different things
So he began switching the user agent under his mint install to make it look like he was running on Windows NT 6.1
64-bit version of Windows but still Firefox gecko and after changing the user agent
He says the performance problems were resolved the UI of one drive worked flawlessly
The only thing the user the only thing that was changed was the user agent in the user agent was the OS
He left all the version stuff of Firefox the same
He thought maybe it was a random occurrence. So then he changed it back to the regular agent problem comes back
Have we discovered a massive controversy here Wes or do you think it could just be a
Testing thing like wow, we didn't test that one very well. So we'll put it in compatibility mode
I am inclined to think that you should more often attribute things
Two bugs rather than malice. Yes, I would imagine so in this case
Yeah, especially in a case like this where I wouldn't expect Microsoft to do that
I wouldn't expect Microsoft to put a ton of resources into researching and testing the Linux side of things
So they dad just this should work, but we haven't tested it. So slap compatibility on there
That doesn't pretty boss. All right, darn it conspiracy busted right here on the unplugged program
This is Linux unplugged episode
189 for March 21st
2017
Welcome to Linux unplugged your weekly Linux talk show that's alive and strong. My name is Chris. My name is Wes. Hello, Wes
Hello, sir. You know what Wes today is a great day. We have so many fun topics to cover
Yeah for me personally, there's some great ones in here too. But I know for some of the other projects the shows just talked about
in the past we got some great updates and then and
Then I am I am really excited
We have a we have a great attendance in the in the virtual lug today
And I know one of the main topics we're gonna get into later in the show
I don't want to say too much because I don't want them to yeah quiet now
I don't want them to spoil it but we have we have a really great conversational topic about long-term future desktop like
Stuff that's sort of an elephant in the room kind of stuff that we're going to be talking about
We'll also get an update from I key on that what the solace project is up to some new code has been pushed and I got
A few questions, but obviously obviously we're gonna start with a bunch of updates that are totally totally rockin
So mr. West we've been supplied with are these are these a
Are these an ale technically or are these consider a cider? It's a wheat ale. Oh, it's a wheat ale
Okay, so wait us to help us to help
grease the wheels of Linux unplugged
West has supplied us with a passion fruit kicker. Oh, yeah a wheat ale with passion fruit built-in
So that is that is that that'll be what we're drinking along here. Here you go. Cheers. Cheers
Yes, cheers to 189. Yeah, and a Linux and to our mumble room. Oh speaking of that mumble room
Let's bring them in time appropriate greetings a virtual lug
Hello
I am very excited a little bit of late-breaking news as we go into the show today
Those of us that run Kodi are going to be very very excited by this news
It looks like a proper Netflix plug-in could be coming to Kodi soon
What in fact if you're on Kodi Android you can get your hands on it already
so this is um
This is not a sanctioned thing
I'm gonna just get that big big caveat out of the way
But after years and years a user of using different workarounds
There is now sort of this legit Kodi native Netflix plug-in add-on being developed
It's it's open-source. So that's kind of a big deal right there. Just this plug-in itself being open-source is nice
Because it not only does it mean
Maybe we could get off our Android Cody, but it could also do from architecture. Yeah, exactly
So it's interesting because it's based on Cody's input stream binary add-on extension
Which can serve as an input stream for Cody's video player, which is new since Cody 17, which has been a massive update
The add-on it enables playback of the DRM protected content
Without having to break the DRM distribution chain that Netflix uses to encrypt its video stream
Now I think that's important because it means that Netflix might be content
Pretending like this doesn't exist because you're not you're not doing anything improperly. You're not busting the DRM
It only works with Kodi built for Android, but it should be possible to port it to Linux
Right, like as long as it's not enabling workflows that break your user agreement or make it really easy to make it easy to pirate
Yes, exactly. Then maybe they will just uh-huh. So this slide it is up on uh, it is up on uh,
This is a messed up post. The Kodi 18 isn't anyways, it says a pre-rec is Kodi 18
But the Ferronix post is the pre-rec is Kodi 17. I would guess it's 17 since 18 isn't
A downloadable thing right now
But uh for me using the NVIDIA shield android tv and having Kodi on there and it I right now
I use Kodi to also play Plex media because I I yes, right I find um
I find that every now and then when I back up something
There's like a flaw in the file that I don't catch until I've tried to watch it and um the standard Plex player
Just dies
When oh, I hit it hits it, you know a couple of drop frames or drop audio files
When oh, I hit it hits it, you know a couple of drop frames or drop audio package just dies
Kodi will just and then keep going
Go right. Um
And it's faster too. And the plus you get all the other benefits of Kodi. You don't have to leave Kodi
So now I can add one more thing to that
exactly that that's where I would change things for me is I could go from
You know before I have to rely on things like a chromecast or maybe it's built into a smart tv or I have a third
Party device if it could all just be right in my Kodi appliance
It really would make it more of an appliance to me because I do I mean or the people that
Use it in my life and a lot of us use Netflix. Mm-hmm
Yeah, otherwise you're always jumping out of Kodi to go watch exactly eventually now, uh, we have mr
Colonel linux joining us this week and he he and I did like this, uh, accidental versus like cheap android tv box versus
The nvidia shield which is kind of on the higher end
I've since bought two more nvidia shields since that review. I really like the product, but I wanted to check in with you
Colonel linux. Are you still using uh?
Are you still using that android tv reviewed ages ago or if you all have you rolled all back to the western digital lives?
Nope, so I have uh still in the house the majority of the um
Of the media players are still the western digital tv lives the box you're talking about is the matricom
uh m a t r i c it's like 99 bucks, right
Yeah, it's a little cheaper than that and I have the I have the q2 which comes with the the built-in ir
Connector as well as wired ethernet. Um, and so far i've had not I have not had any problems
I'm still using that the the q2 downstairs in my shop where so basically every day when i'm working on something
I just have it kind of up playing some media
Um, and I really really like it. They're only I only have two hits
I found once I tried to take it with me to the lake and the western digitals are all 12 volt dc
So you you know living in an rv you can understand why that's amazing and the the q2 is is five volts
So I have to use a either an ac inverter. I'd have to use like a voltage step down transformer
Transformer, um, and then uh, the other thing I don't like about it is there's no there's no the western digitals are very square
So they mount very nicely to the wall and the the g2 is or the q2 is kind of a i'm surprised
How many boxes do that? Yeah, that's weird, right? That is uh, that is a thing
They do they they do make they make a bracket for uh, the roku and I was I was planning on using that
But you know the fact that you have android means that it works with netflix means it works with cody
Yes means, you know and and the ability to to be that flexible is actually worth overcoming some of the other shortcomings
That's how that's that's exactly been my takeaway. I key. I saw you in there saying
Can you explain a little bit of that I mean I saw a lot of that it seemed like you were going
Using a player I just use my web browser like a man explain yourself. Oh, yeah. I mean that's pretty much it
I like that I do this massive characterization. Yeah, that's about right
Yeah, I have youtube and I have netflix in the browser. I mean what else do I need?
Well, I think I don't have downloads
I think for I think for me and you know
I think one of the reasons I talk about cody more is when I when I moved into lady jubes
I made this huge shift into consuming a lot of my video content via the television instead of on my my desktop
Yeah, and it's a totally different experience for me. Like it is a legit way
For my my fiance and I to sit down right, especially when you're sharing it with yeah
And the family too like it is it has become like our primary way of we don't have television
We barely get any where i'm at right now. I get decent reception, but usually I don't hardly have any reception
Um, so for me, it's I I yeah, obviously if i'm at my desk i'm using chrome. Yeah, i'm not using cody
I'm using chrome, but if i'm on the if i'm on my tv
I want something that is
Appliance level reliable and fast and cody's the only one that delivers that and it has you know
Like it integrates well if you want to tie in like an ir remote or other things that will be feel first class
In the tv. Yeah system. Yeah. Yeah. Yeah. I mean right now I have it all tied in with the echo, which is right
Yeah, there you go. Yeah something don't don't tell noah, but I just walk in I tell it to turn on the tv
And it just does all that stuff
Um, all right. Well, let's move on because I know not everybody cares about cody and just next one
I just wanted to take a moment. There's two pieces of kind of
I don't know if malware is the right term
It's not because the first one's ransomware and the other one's an exploit
But I just thought both these stories were interesting. Uh, and so I wanted to throw them together really quick first. I love this
Um, there's new ransomware out written in python and it's called
Kirk ransomware. Yeah, it's kirk ransomware
Um, and it's the first ransomware really that uses the are you familiar with this mono monero?
Monero, uh payments. It's like an alternative. It's an alternative to bitcoin
What kind of big crap what oh, yeah, okay. It's an open source cryptocurrency created in april 2014
Yeah, I don't know why i've never heard of it. No, I haven't heard it about either
Yeah, but i'm sure
But you know what? I i'm gonna read on but I have I have a little bit of bacon about this
I I kind of I kind of suspect something
Yeah, so it is uh, it's written in python
So it seems like it could probably be moved over to linux and you know screw up your home directory if you're not careful
Um, but there was one little bit of tidbit that I liked about it
It is not knowing how it's being distributed. So don't worry. This is not like a this is not something
That's like a big deal. I just some of the details are interesting. Um
Um, it masquerades as a network stress testing tool called low orbital ion cannon, which we've heard of before. Absolutely
So what happens is people go out and they look for like I want to do a network stress test
Or I want to just be a dick to somebody and they go get low orbital ion cannon thinking that well
This is the python script that does it turns out no actually it encrypts your home directory
um
The kirk ransomware will then generate an aes password that will require the user to
Put in um the unlock key to decrypt the files, but this is the best part. This is the best part of all of it
The decrypter tool
Do you have a guess what it's called? It's called kirk ransomware. What do you suppose the decrypter tool is called?
Really hoping for something with con or spock one of those two. It's spock. The decrypter is called spock. Yeah
Yeah, you run the spock decrypter and they supply that to the victim once the payment's made
Nice, and I mean the live long and prosper thing after yeah, that's nice. That's nice
They got a screenshot of that. I really some production quality like, you know, they wanted the appearance to be nice here
It's me. It's it's
It's I think a promotion for the cryptocurrency. Yeah, I think somebody created this what?
Like why not con like yeah
Well, I guess spock is saving the day right because con would be destroying your files and spock is rescuing
Yeah
So if it didn't if it like fake decrypted and just deleted them then it would be con
I really feel like this is a promotion for a cryptocurrency
Like hey, how do we get some movement in the market? You know what we do? We get people to have to go buy some
Yeah, I don't know. Yeah, not only does to get the name out there, but about six moneros
That's not true, but i'm mining moneros right now, dude
Now kirk will ruin your plans. So maybe we should like create a fix for this
Ransomware that will maybe that will be called con the fix for the man's rent
Right, right. I think I think or the ransomware should have been called the wrath of con
um
All right, then just one other thing just to follow from a story. We covered recently that cia vault 7
well, it turns out now that with some of the
I
It's funny because wikileaks has been getting a hard time for releasing code that that makes us more vulnerable
But I wish they would have released more code so we could have built better tools to detect where cia tools are being used
But there have been some people uh sabana virus companies that have taken some of the wikileaks releases
And generated pattern recognition to detect the tools and stuff like that. So there is some stuff that's coming out
um
And there's this one a simple command allows the cia to commandeer
318 different models of cisco switches
The bug relies on a telnet protocol
Yeah relies on the telnet protocol
um, and uh, yeah over three three hundred and eighteen switches. All right, what's the command?
Yeah, right. Um, I don't know because all they say is the bug resides in the cisco cluster management protocol
Which uses the telnet protocol to deliver signals and commands on the internal network
So I don't I don't ours is not really giving you the command here in the article
Uh, I just thought I thought you know
Just wanted to follow up on the vault 7 stuff and also include it maybe with the with the star trek malware
Or i'm, sorry ransomware. Oh, that's beautiful. Yeah, or horrible. Yeah
now william, I see you're you're back in the room and your your timing couldn't be more perfect because there is
One big update on a project that you've gotten me really excited about and that is bcash fs
I think a new version has shipped and lots of stuff's been going on
I think the biggest milestone has been that all of the breaking on disk format changes are landing like all that stuff's getting out of
The way that should be over now in theory
But there's also some other big features that have rolled out
Where do you where should we start when we're talking about the new bcash fs?
I think the most interesting thing is the on disk encryption stuff that we're doing. Yes
The cache fs that's great because you build that right into the file system
And so now you'll have competition in that space and I think what's even better is that not only do you get encryption?
But you also get verification
So that someone can't just come along and write bytes to the underlying file system and corrupt your data without you knowing about it
Because with something like dm crypt you just get encryption. It doesn't actually check to see if what you wrote is authentic
Okay, I hadn't even thought of that
Uh, and then also, uh, can you tell me about the wonders of the new backup super blocks?
I mean that just brings it up in the line with the butter of fs and zfsd, right?
So you get a bunch of super blocks distributed across the file system
That way in case one of them gets corrupted you still have backups to go back to
Because before I think on the version that i'm using on my laptop you just have one super block
So the moment that one thing gets corrupted you lose everything
So is this uh, is this new in node format?
Is this one of the larger sort of practical changes in the new in the new release?
It's not necessarily interesting to end users, but it is a little bit more compact and it does allow him to um,
Add more features to the file system over time. So I think it's actually a good thing
Oh, and also I like this line being able to fit all of your metadata in ram smiley face
Yes, that is that is very a lot of them are just small underlying changes that make it more performant
User space fsdk. That seems kind of nice. Yeah, that just is yeah
Actually having the fsdk already done before it's even integrated into linux is probably a huge selling point because neither zfs or butter
Fs had that. How do you feel about the file system migration stuff?
So apparently it works flawlessly i've never tested it
I actually am not using the new version yet. I'm still on the old disk format
I mean like somebody wants to bail on butter fs because it's garbage or somebody wants to upgrade from extended four
Or somebody wants to purge zfs from their life. Hello
Fantastic because it'll take any file system
It'll build an image and then you can rewrite that image over once you verify the image is correct
Obviously, this means that you're going to store the data twice
So you're using less than 50 of your file system currently. Yeah, that's right
But it is nice if you have a fairly small amount of data and you want to migrate your root fs over or something
And you could you could also oh, yeah. Okay. So, um, could you could you actually boot from from a bcash fs file system?
Yeah, i'm booting my laptop, but i'm running the whole thing on the
Oh, I thought that wasn't a thing partition the efi partition has to be readable by the efi. Okay, so it's fat 32
Yeah, um, but otherwise it's all bcash
Uh, it's built right into the kernel. Unfortunately, that doesn't work
You have to build his linux tree, right? Uh, I maintain my own with the most stable patch set
He actually just keeps it at like the base 49 and just keeps adding patches on top
But I merge in the stable versions every now and then as soon as they come out
So i've just been keeping with that. It's a fairly up-to-date kernel. Like it's still 49. It's not 410 or you know
The rc but he pushes it forward every now and then so kent's assertion here is that uh,
Raid one and raid 10 are raid one and raid 10
Potentially work. It's not very well tested as my understanding and i'm not 100 sure the recovery code is even in place
And then so it'll distribute the blocks across multiple disks. Uh-huh
Uh, but beyond that i'm not really sure how well you'd be able to recover your data stuff went bad
I know it is doing checksumming. So it is aware of disk errors
I'm, just not sure what the replication code does in the case of seeing an error on one
Disc if it copies the crank over from the other disk, right? Yeah, but it's not
An error on one disk if it copies the crank over from the other graph, right? Yeah, what is the tooling like around the?
Replication support like I you know, i'm familiar with like zfs send obviously is that is it in line?
Well, that's different right? Okay, that's sending and receiving uh file system images more or less or compression
Okay, this is different than this. This is the raid levels. This would be like, you know running mirrored mode in cfs
I think eventually he's going to grow send receive support
I just don't think that's a major feature major milestone on his plate right now, right?
Man, this is sounding like an awesome freaking this is sounding like my future linux file system right here
Yeah
It'll be really interesting to watch as it uh gets closer to being ready to be upstreamed
I think someone said deduplication in the chat room. No, there's no deduplication yet
I assume that will also be something that's pretty trivially possible at some point
I think the hardest thing is going to be getting snapshot support. Oh, yeah. Why is that?
Oh, just given the structure of the file system using b-trees. It's fairly hard to do snapshots correctly
Oh, okay. I think at butterfs. It's actually fairly complicated logic
I was gonna because that was gonna be my next question is it seems like that was something that butterfs sort of rolled out with is
Is this?
Is this not a format sorry, is it not a copy-on-write file system? It's a copy-on-write file system then didn't
Normally, well copy the attitude do it is yeah copy you copy it and then just stop
Sorry, you just stop writing where it was writing you write somewhere else sort of
I know that's a gross oversimplification. That's a gross oversimplification and I don't think those are the underlying issues
Okay with doing snapshotting. Well, hmm
You know what? I I would love to know more about that. Maybe yeah
The hardest part i'm not necessarily very familiar with the topic, but I think the hardest part is actually
Purging old snapshot data. Oh interesting keeping ref counts correctly and those sorts of things and then rebalancing the b-tree. Hmm
This is uh, this is this is this is a project we've been watching now for I don't know
I mean feels like it's been it's been a little while now. Uh, it's been going
Yeah, he announced it. I think in august or june and you've been that time frame somewhere in the summer
You've been running it for how long?
I've been running it since he announced it basically
And I haven't reformatted once love it dude. I will say there's probably a bit of corrupted stuff on there. Oh, just a little
Wow, it seems to be running. Okay still I think one of the nicest things is the tail the long tail latency is fairly low
So all your operations perform incredibly quickly when you're just trying to do small accesses. Oh, man, that's nice
Yeah, random performance is very good. Assuming that the underlying device is also decent right like a modern ssd or something
Yeah, which is what you want
Yeah, because the problem with butter fs i've noticed is you get a lot of hangs doing certain operations
Every now and then like it'll just go to sleep for a second and come back. Yeah
Um, especially this is better with that especially under different
There's some conditions where that seems to be worse too with butter fs. Yeah. Oh, yeah, it seems
It's not a well understood thing. It's a very complex code base
So maybe if I grab edge cases where you can run into really long tails
And bcash does as much as it can to not run into those long tails for reason rights
I see so it tries to avoid doing most of the work in the critical path
So if I get this kernel and the synchronous path, maybe if I compile that wire guard module, too
I can just be the ultimate kernel hipster. So you're just going to switch to gen 2 got my wire guard
Nice
Living in the in the future you do
Like william's like yeah, that's my setup. What disk are you using william? I'm using xms
Oh, yeah, that's right. That's why you're one of my favorites
We got to do an episode on that. Yes, we do. We can do an episode. I can show you nixos in production
Awesome. Yeah, write that down. I think I think I think I want to do that. Let's talk to know about it
We'll figure it out. Okay. Yeah, cool. All right
Well, uh, let's uh, let's talk about solace here in just a moment
But first first I would like to say a big thank you to linux academy
I I am so I am so happy with the growth linux academy has seen and and the pickup there again
And the partnerships they're establishing now
it's one of those things where if you signed up like a year ago like every single week something new and
Just constantly improving
It is so so valuable
Uh, but if you're new to it, I would I would encourage you to get started at linuxacademy.com
Unplugged you get a seven-day free trial that is going to get you acquainted with like the essentials of this platform
It's it's a platform to learn about linux. It's a platform to advance your career and go into a new field
It's a it's a platform to double down on the area that you work in
It is
So well built because it was designed by linux enthusiasts linux educators and developers who came together and said, all right
How can we advance linux?
And I had this conversation with their ceo before they were even a sponsor when we just started flirting about
It's okay. What are you feeling it out feeling it out? Just no, that's that's that's that's a whole different
Hold on. Hold on to a different picture. We were we were just kind of talking just talking at first and uh,
He said, you know where we watched jb, uh, but I don't understand how you make any money at it
I said, well, we don't make very much. It's like yeah
well
We think we might have a way to advocate linux make money and actually improve the workforce in a way that it was like
A tool that was never available when you were in the workforce like oh, yeah, sure anthony. Yeah, that'll happen
And you know what a couple of years later now it is unbelievable what they've accomplished
Self-paced in-depth video courses on every linux cloud and devops topic and they're not afraid to branch out into areas that you need
it's
Very impressive hands-on scenario-based labs give you experience on real servers instructor mentoring. That means an actual human being
That knows what they're talking about an instructor that will work with you and you need help
That's that's phenomenal for the type of course where they're covering. This is unique to the linux academy
They have lab servers that spin up on demand as you need them a course scheduler for your busy schedule
I would like you to go check them out at linuxacademy.com
Unplugged that supports the show and from there you can sign up for a free seven-day trial
well, the other thing that's nice is even when life gets busy like
Say it's the holidays right and life is super busy
They have nuggets that can be just a few minutes long where you can just go in and get a little value that week
They have availability planners that can build courseware for your busy schedule
And on top of all of that
You can just log in and just get snapshots of what your progress is out
So you can kind of just keep track of how you're doing you get time estimations for every major topic
You want to learn python? You want to learn ruby? You want to learn php?
It's going to take you six hours four hours seven hours. It's like quantifiable. Yep. It's great
Like you I know I I don't know how to wrap my head around learning ruby
I know how to wrap my head around six hours where you have to go find all the documents then do it
Oh, this is all just right there
Right
Have an idea of how long it's going to take and for me taking it down from i'm going to learn this
Nebulous topic that is is massively broad and there's so many different opinions taking it from something like that to
I'm going to spend six hours and learn a thing is so much more mode
It's like I have so much more motivation to do that because it's a clearly definable object to that same point
You can just browse through right? Like maybe I want to learn ruby by looking you can see all the stuff
You'll do after going through their resources. You'll have an idea like okay. Yes
I'll be able to accomplish my goal after six hours. Absolutely linuxacademy.com
Unplugged go there to keep us going support the show
Let them know you heard about it here and then sign up for a free seven-day trial
And by the way, the community rocks because it's stacked full of jupiter broadcasting members. They fork like the study cards and stuff
So that way they get even better over time
It's nice and they've got downloadable guides you can take with you and lessen audio personal notebooks tools that help you study
Ios and android apps as well linuxacademy.com
Thanks linux academy for sponsoring the unplugged program
So mr. Aiki joins us again, which is it's always a it's always a nice pleasure. So thanks for being here ike
I appreciate it because I know it's not like the middle of it's not like the afternoon over there like it is here
So I always really do appreciate it's about nine o'clock. Well 20 to 10 now
I I I don't i'm grokking from what's happened that you probably don't sleep much anyways
Because it looks like a lot's been going on with solace. It got uh mate matea
1.18. I got new linux kernel coming in got a new budget coming in. Tell me what's going on over there
Uh, yeah, basically all that stuff
And lots of new apps too or updates
Yeah, I mean matea 1.18 went in I think it was the day after or maybe even two days after i'm not even sure now
Uh, we got that into solace got that tested very quickly and out to people
No breakages was very very happy with that. Congrats. Uh, we got the lib input support as well. So that's very nice. That's great
Oh, yeah, so now people will have less touchpad problems. Really that's super nice
Yeah, so there's been bugs about that on the tracker long standing issues, but upstream solved them
So we have those in one of our changes from solace that actually landed for this release cycle
Was the action icon support within mate notification daemon. Oh nice
It's a trivial little change, but it just allows you to have icons instead of just plain text on there
Yeah, and some applications like rhythm box express more actions when icons are available
So it's uh, it's a more natural use of things like media players
So we was happy to get something in at least into that release
And we got four point nine point sixteen kernel, I believe we're on now
Uh, we're following the lts tree for now until we got a clear boot manager integrated and then we can have switchable kernels
How is that going?
That's actually gone really well
So the last bit of stuff that I was doing there was basically implementing proper name spacing on the efi system partition
Uh, so the decision was made to namespace under the efi directory
So for solace it would be slash efi slash com dot solace project and then all of our files will live in there
And we're going to want to add things like uh, firmer update support in there using the fw upd project
and i've
Pretty much finished the grub 2 support for legacy booting
So I need to test that on the laptop, but once that's done, it's pretty much close to a 2.0
And then that will be deployed first as a suicide test. So remind me, uh, yeah
I mean, I mean it seems like you're going to be uh aside from clear linux won't you be?
Won't won't you be the only other distro that's shipping? Uh, that is the bootloader
Yes, well, it's not the bootloader itself. The idea is explain it to me because I barely understand so explain it to me. Yeah, so
so
basically want to have a
Safe and bulletproof approach to booting and the management of kernels themselves, right?
We've broken it down a few weeks ago, and I thought it was actually a pretty brilliant idea
Uh, it's it's an intel project, right?
Yeah, so basically bootloader tools you can kind of trust them. Not always
When it comes to things like case sensitivity it matters to linux. It doesn't matter to fat 32
So simple things like that if you was to go and rename some of your directories to some cranky mixed case names
And then if you started to use things like a gummy boot or boot control
You're going to run into problems where you can no longer install or update because it's trying to create new name directories that already exist
So it started out of those problems and having
Having a way of updating to a new kernel and retaining the last kernel without having to have
Lots of meta packages depending on new versions of those packages to push the updates because you don't want to end up where you've got
47 different kernels on your system and no way to garbage collect them
So I had to implement a policy whereby it knows if a kernel is booted, which is very simple
That's just a system d job to run the tool, right?
It then needs to know what the new default kernel is. It needs to know about different types of kernels
And when to kill an old kernel
So basically everything lives in user lib kernel and once once you call the tool everything happens in a single atomic
Atomic operation if you can't continue it's going to bail and it will try its absolute best
Not to murder your system. This is really an attempt to get as close as possible to bulletproof kernel updates, right?
Yeah, that's the thing. So sometimes I mean we've all been there. You've updated kernel you boot to the new kernel
You boot to the new kernel at crap, you know, it's completely trashed now if you're using solace or even arts linux
You know yourself the way the kernel updates work
Your last kernel is gone
It's just completely gone now. You're on the new kernel. You've had the carpet ripped out from underneath your feet
And all the kernel modules are gone. You've got a reboot
So it's all those things now distributions like ubuntu
They use meta packages to depend on the new package they put out, right?
Right, but then you still have all those old packages. You still have the complexity of it
You still have poor maintenance of the esp itself where you have something like slash vm linux
How do you jewel boot with that?
It's it's just not really good
I mean we've jewel booted for years with legacy boot purely because we all maintain our own separate boot trees
Um, we get away with that, right?
When you start having a boot partition you start to get conflicts when you've got an esp
You're almost certainly screwed. So, you know, you need to be able to jewel boot
You need to be able to have bulletproof updates and always always always do the right thing
So if something does go wrong, you can just boot back to the old kernel
That's going to be a great way to make sure you know feeling comfortable with updates especially kernel updates
Yeah, I mean imagine look at the just look at the hoops that mint goes through to avoid kernel updates
I would much rather just know that I could boot right back into my last configuration if I need to
And yeah, I mean that's kind of the main thing now the problem you have like, um, if you use system deep boot
You know, it's basically the same as gummy boot, right?
Yeah, and solus a long time ago forked gummy boot when we had the whole fiasco of system d. Oh really swallowing
uh gummy boot
And my reasons there was the whole distro side of it not the actual boot side of it
It was things like the case sensitivity because it's actually a case of case ignorance
Because linux cares fat does not care, but if you try and create two files uppercase and lowercase
Linux is going to scream
But fat again doesn't care it would just fail to create the file because it already exists linux doesn't know it exists
So because of problems like this and basically upstream system d didn't care at the time or being able to upgrade from
Gummy boot 49. I think it was to the first system debut again
They didn't want to implement that logic and I wasn't particularly happy
So that's why my fork came about but the stuff that went into that that that approach to the esp and the maintenance of it
That's what clear boot manager now does anyway
Yeah
So I can now drop a fork I can adopt system debut
And I can have cbm manage all these things the nicer bits that it does
Is it automatically generates and maintains the loader entries on the esp?
So you probably seem like the loader entries star.com files that you have
What cbm does is it will emerge the upstream command line files, which is on a per kernel basis
So we could have like linux and linux lts. We have a default command line in those
Yeah, you can have etc command line files as well, which are then merged into it
It will dynamically find the root partition and put the root equals part into there as well
So you don't have to go looking for block id stuff anymore. Yes. I hate that
You know the pain with that and one of the nicest things it actually does
At the moment, it's limited to draco, but it can actually find out if you're running an encrypted root fs
And put in the lux uuid in there for you
Which i've had problems with that with grub and if you're manually creating entries with something like system debut
It's very very hard to get all those things consistent
So it does all of this stuff for you create entries just so you're safe all the time
Pop up bless you see kernel linux when I say
I feel like solace is a is a different distribution. Even if it might be a smaller distribution
I you know, I think it's something you can't know as a regular end user
Maybe you can tell by certain external properties of a project, but there's no way to really know
Unless you listen to these shows I suppose like the heads behind these projects like ike that's you're obviously
Solving you're solving a problem there with with clear root manager that red hat's trying to solve the canonical is trying to solve
and This seems to be a very very very obvious way to do it after you explain it's like that makes sense
That's of course, that's how we should do it
Like this seems like and I really like the the using of prior art
Maybe that isn't well known but seen, you know seeing that diamond in the rough. I'm like this
This is something that everyone can benefit from that. Yeah, that takes a lot. Yeah
I mean a lot of my projects now have been trying to focus on making them distro agnostic
So while clear bit manager obviously started out with clear linux to a large extent
So you don't have this benefit anymore of you know, having these um, these meta packages and these new dependencies been introduced
You don't have that. You have a static file system contents. There's atomically written to this
This is what you have to work with
So the idea was to turn the update mechanism into the delivery mechanism
So you'll have like these user lib code that you can use to do that
And then you'll have a bunch of other things that you can do that you can do that you can do that
Update mechanism into the delivery mechanism. So you'll have like these user lib kernel files that turn up
The only thing that really changes there is the sim link. So you'd have like default lts or default kvm
Those point to the newest kernel. So there's no
There's none of this trying to figure out by the release number or the version
Which is the newest thing because I did that in the past. It doesn't work very well
So it looks at the sim link what whatever's the newest one is the default one
Which should be your basically your head or your tip kernel. Hmm
And it took a while to get that right. But once it started getting fleshed out
It's like this clearly could be used in other places damn
So I set about making that agnostic and i've been trying to do that with a lot of my projects. Yeah, you have I agree
I you know, and I don't I don't agree. Everybody always takes it up
Sometimes somebody else somebody else just creates the same idea and uh, but it's a start to try to have less of that
now you think arch would actually uh would be
Would it be open to something like this because I I mean arch is the perfect candidate
I agree. They've got a very similar process to the way that solace does it?
You know like you you have this kernel package
And then you have this danger of you're removing a live kernel and live modules from the system
Yeah, and that's just incredibly dangerous and it's got to lead it's got to be the number module breakage
It's got to be got to be the number one rolling cause rolling break
Yeah, I mean my usb no longer works because these modules are buggered off, right?
I can no longer use my speakers or you have all these problems
But yeah, something like this would be very easy for them and it's a very fixed scheme
so you'd have like a user lib kernel and then you'd have like a
Kernel dash com dot solace project blah blah blah each one has a a namespace I configure time
So you customize it for your distro the the branding stuff that's put into the loader files
That's just taken from the os release file. So it's all standardized stuff
Uh, one of my rules when i'm creating anything and you'll see this even in solace or any other projects I do
Not a lot of what I do is original or new
It's just doing something in a sensible way
I'm, not necessarily inventing anything new because again, this is using the existing technology. It's just trying to
Trying to make it sane
Basically, hmm, you know, I feel like uh, well, I guess I'll ask you this question
Do you think the success of the clear boot manager might be dependent on the success of clear linux?
Um, do you think it stands on its own because to me it feels like it stands on its own
Well, I mean it's not one
I mean i'm not going to talk about the success or whatever of clear linux because obviously i'm not in capacity to do that
Right
But clear bit manager itself while it started out as just a solution for clearing is something that quit very quickly
Became obvious. It had to be agnostic
And you know, that's something that's maintained in my own namespace up on github
quite deliberately
and at some stage, I probably will change the name as well because
It was at the time. It was like, okay. What's a generic descriptive name? All right clear bit manager
Yeah, I actually I really like it. I think it's actually I think it I think it's very good
I we're going to get it adopted very very soon in solar. So over the next week
I mean i'm on vacation at the moment, but i'm going to be finishing this up over the next
Six weeks along with the other solace bits, you know how vacations work. You just go mad at projects
So i'll get that finished up tested once that's in
We can just throw that straight into solace and then immediately everyone is then on
I mean, it's it's been an issue like for over a year in solace
People like I update and then my windows entries are gone because what actually happens there
Is your ntfs and f80 modules have disappeared?
And because it's the first time it's trying to load them using os prober. It tries to mount the file systems
It can't do them because the modules are gone. So you lose windows from grub
And those are the sort of usability problems we've had or i've stuck in my headphones. They're no longer working yet
Sorry, you're gonna have to reboot, you know, the whole thing sounds it sounds like it sounds like a really great solution
and I can't wait for solace to ship it because
That's it's an example of something that solace is willing to do that
I just don't think ubuntu is going to do right now or fedora is going to do right now
Um, I maybe I could tell but I think once solace proves it
I think I could see them doing it
But I the reason why I mentioned that is because it takes me back to the conversation that noah and I had
months ago where he felt like he was kind of writing off solace because
It was some sort of boutique. It was esoteric in a sense and my my point was is it might be slightly boutique at the moment
But it is it is in that position where it's it's you guys are the right size and have the right temperament to
Implement sweeping changes like this that people that are playing it a little bit safer are not willing to make and the issue is
If you're always living in the little bit safer zone of linux
You kind of miss out on some of the best stuff that's being
That's happening and you kind of something you kind of miss out on some of the new solutions to solve the problems like
This is gonna this could potentially one day
Legitimately lead to bulletproof kernel updates on arch and solace and other distributions. That's a big deal
That's a really big deal. And if you're hanging out on ubuntu
And it's fine
But you're gonna miss it until it until it trickles down years down the road and that's totally fine and legitimate for a lot of
People but for some of us
You want that now if you're not riding that solace wave or you're not on the arch system or you're not want to insert distro
X right, whatever you're gonna miss it and I and I think you guys are in a really great position to do that
You guys are in a really great position because you've got a good size user base
So it matters these things matter and you have to be careful
You have to contemplate very carefully about this
But you're also not at the size where it's so so large
That 200 people lose their job if everything falls apart. And so I mean that's the thing
we we don't have to play it safe and
One of the things that we have that the other projects done and it's not me blowing smoke up my own arse here, right?
We're one of the very very few independent projects that
is not
Commercial viability is not an aspect in any decision
And that's something that we have that none of the other independent projects have
Because even though they might be independent and they might be you know, they might be 501c or whatever
They still have interests to consider
Whereas we are fully independent. We can go make changes
And there isn't a board to satisfy there are no shareholders there to get again frightened by the changes
And so we can go in and make the changes that nobody else is willing or able to make
And then you know
They can say that we've done it. Well, it's all right
And then it might change their thinking as well and that's one of the things that's it goes back to again
Like, you know, how do you measure success if we get people to rethink how they've been doing these things?
You know, we're the disruptor at the moment when it comes to linux
We've chosen desktop linux and we're going to disrupt and make people reconsider the way things have been going on for the last 10
20 years whatever
So if we can only just do that then we've already succeeded
I like I like that how you phrase that especially given how much we talk about fedora
As playing kind of a similar role of pushing the edge, but from a very you know red hat comes, you know
It's a very traditional enterprise perspective
Uh, so I like that that solace can come from a very different place and innovate in the same. That's a super good point
No, were you were you about to jump in there? Yeah, i'm just gonna say so I think I think saying I wrote
Um solace off might be a slight mischaracterization
So I I think I think that um
I think that really what I was trying to get at was that it's great to have
Uh people that are idealists like ike and I think it's great to have
Projects that have to stop you there because i'm not an idealist. I'm very pragmatic
If you're pragmatic though, why why exclude java java is you know, java is a very needed thing
And there are a lot of apple. It would nobody likes java
I don't like java, but the reality is I need java to do half of the things I do during the day
Uh, well the last time that we tried to use it
The last time we tried to use solace. Yeah, java was not working properly and simple help didn't work properly. Oh
Simple, right. I remember. I mean, well anyway, but just electron app and it's not even java. No, it's not electron
Here's the thing we can go on. I mean there there I I can pick it apart piece by piece, right?
We can I could go out and say there's a you know
Like we could go back to the minicom thing. I need to be able to use, you know serial communication
But that my overall point is that you're making you make decisions with the project that say
We're not going to do x because I have a belief system of y and that's a good thing
And I think you should be commended for it. I don't think I don't think you can necessarily say that um,
That that we're on the same level playing field as somebody like a bantu who says here are the requirements of xyz users
Here's what they want to be able to do
Let's accommodate that and make what compromises we need to make to make that distribution useful to those people. Sure
Yeah, all right
But what am I doing then if i'm not making compromises for users and addressing real world needs?
To look at and reevaluate problems that have existed for a very long time and lex and i'm already looking at how our
Distribution, would you characterize it? I'm saying they're doing it wrong. Yeah, I am saying that they're doing it wrong
How do I add software to your distribution without compiling it from source?
Install it from the repos if we don't have it request it flat pack will be the future method
Okay
What if they're okay? Well, right? What how do I do it right now?
If it's not in the repos and I don't want to compile it from source, but I just want to install the software
How do I get it then request it? Okay, you have to install it from source
I just want to install the software. How do I get it then request it? Okay, you have a book tracker
And in fact, we redid the requirements after that last how should we say?
mild fiasco
We've redid the requirements because I basically said the same as everyone else the requirements were complete bullshit
We know they were bullshit, right?
But we hadn't had a discussion about it until that point they've been read
But you still have a gatekeeper you still have ultimately you still have a person that decides this can be right
But that's no different to debian or abuntu. You still have to request a package that's not there. That's not entirely true
Right, but somebody else has had to package it. How is it different from solace when somebody has to package it?
Could I not package it myself on abuntu?
Yes, but
I can't do that around in a circle from what you've just said
You said if it's not on solace and you know, I I would then have to package it
That's a bad thing on solace, but you're then allowed to package it on a bun too
What i'm saying what i'm saying is it what i'm saying is
That as an if I was a software you could make your own you could make your own custom
I could make my own ppa. I could just make a dead file
If you want ppa support and solace ask me and i'll set it up i'm not an augur off in the distance
If there is demand for it, I will happily do these things there has to be an actual demand
But I guess my my my my I guess my overall point is the fact that we're having this discussion now
Rather like you didn't you didn't see that people would want to add
A software and if you didn't have your own method you wouldn't have included ppa that that's something that
After we've already had the discussion of it being a boutique or not boutique distribution
Now we're having the discussion of how we're going to maybe include ppas
And so if we go back to the core problem here, it's about software availability, right?
The thing is if you want something like ppas, you also need people willing to maintain those ppas
You know, you can't just say
Because i'm wasting money i'm pissing money in the wind if I do that, right? It doesn't help anyone
We've got to a point now where we have people coming through and I think so far we had something like 15,000 patches
With multiple revisions come through to solace from the community. We're at a point now where our tooling is in place
Where we're switching our infrastructure over. There's actually an open bug for this to allow community maintainers for packages within solace
So that that in itself isn't really a problem
There has to be people willing to package those things our packaging is very very very simple
I made our policies very very simple for those to do that now
Yes, the software isn't completely there at the moment, but then again, we're not exactly an old project
So there are going to always be things that you want and aren't there yet
If you want them ask us someone's going to put it in it might even be us now because people from the community are doing it
It takes time to build things up
But it takes even longer to build them up properly and that's what we've been doing
So you say that you're so would you say your position has changed from the last time?
We had a conversation where you said that part of your part of your part of your methodology was to exclude software that you didn't think was
appropriate or well maintained
I've been more lax on it. Yes, right because first of all, we had a policy that's basically come through
From the evolve os days and you have certain protective policies in place because at the time, you know your capabilities
You know your size and you know your your technology at the time our tooling very much sucked
And we didn't even have white package or soul build back then
So there are certain things we basically said absolutely no way in hell are going in because it's going to cause us grief down the road
We've now got to a point where white package soul built all of these tools exist
And it's very very very trivial for anyone to just sit there and package something. It's a yaml file
You know, we've got a troop builder. You don't need to install a ton of dependencies on the system. It's very very easy
So it's allowed me to be more lax on them. Did I take too long in doing the policy?
Probably but the the conversation wasn't properly had we saw how it went someone went and bitched on reddit
That's that's not how you do things. You know people normally know i'm very upfront, you know
I'll be very blunt about things but go and whingeing behind me back on reddit
It's not going to do anyone any favors
Raise it up with me and we'll fix it. I would respectfully i'd respectfully disagree with the characterization there as well
You know, it's one thing to you know
To me complaining on reddit is simply going to reddit before taking any other action and right but I hadn't seen it
This is this is the point if it didn't go to me, how was I going to know here?
But so where on the solace site does it tell me that I need to direct solace project.com?
There's a tracker link in the bottom
But my point is that he attempted to go through what you know based on based on his
Based on the time constraints that he had he went through to try to submit an issue to you guys
He got formal communication back from the solace project
Maybe maybe you had or had not seen it
But how is he supposed to know that you know?
What i'm saying is like if I submit something to canonical
I don't wait for mark to come back and say
Hey, you know i'd say did mark personally review this when I submit something to system 76. I don't make sure that well
You're making a very unfair comparison there, right?
We are not the size of canonical. We do not have 700 employees fine fine compare it to altus
I have five. I have five the lead developer personally review every single issue that comes through our company
I delegate out to other people and I would expect that a customer wouldn't expect me to review every single issue as well
So I think that I think that I think that just because that you didn't personally see it to then and then after he took
Steps to submit it to you and then was rejected and after that process completed then went on reddit and said here was my experience
I think to characterize that as complaining, you know, that might be a bit unfair to him
Right, but what i'm saying, right long story short is could have complained then say look let's look at the policy
Nobody then said let's look at the policy and i've said we took too long in fixing the policy
But we did put a policy in place. It wasn't the right way to go around it
And that's all it comes down to I I suppose and that's a matter of opinion at the same time
I also don't think it's necessarily appropriate to expect your users to uh
To suggest policy revisions to to the project because you know like to for to a large example
As a user if a software company or software project doesn't meet my needs or isn't willing to work with me at some point
I just say okay. That's the direction they want to go. I'll go a different direction. That's fine. Hmm
All right, look everyone's entitled to their own opinion
But we are talking about someone who did provide a patch right and that incur that it does infer not just a user
Right. So let's get that one out of the way. That is a contributor and a developer
Yes, they had a bad experience, but that was the policy at the time
Yeah, and at the time the policy said no this thing can't go in well
Which was fair because the policy that then said this thing is basically dead. It's abandoned, right?
Then we did revise the policy afterwards. Yes
It wasn't exactly a great experience the way it turned out and I don't think anyone wanted to turn out that way
Me and that particular guy spoke and read it afterwards and we said we said it didn't really need to go this way
Right and and I followed that conversation one minor correction to chat room is reminding me
It wasn't uh, it wasn't simple, uh note that I had problems with it was simple help
Uh, and which which heavily relies on java just one minor correction. So yeah, we've only got open jdk at the moment
I guess we do like the oracle jdk. So I just want to might be part of it
I just want to step in here for a second and just say, you know when I uh, when I think about this
uh, I think what I what I what I do take away is, uh
Almost every time he comes on the show he's evolved in a way that's logical and and understandable on a position
Uh, like you know, he just sprinkles and you know things like flat pack bombs and things like that in his conversation generally
But that's a huge that is a huge change from where you started originally on this show and I
as someone who also um
Tries to allow myself to change my mind on things and just you know get get into something and then decide to change it
Because I feel like if I don't evolve my position that i'm not taking in new information. I'm not taking in new input
I'm not considering all of my possibilities if I just stay really fast and on a particular course
so I
I guess I I I look at this and I think we'll we'll
Screw all of this crap. Let's move forward and just get flat packs. Like if this i'm i'm sick
I am so sick of this conversation
Let's get flat packs up in here and you know what i'll install the three programs
I need that aren't in the repo at this point
Maybe two at this point that aren't in the repo from flat packs. I'm good. I'm good
But it comes down to a simple thing. It's it's
The solo started off very very very very tiny. It was basically just me
Originally making something for myself. It grew a lot quicker than I expected
You know, it's it's had problems. It's had growing pains
And every so often, you know, we go through this new expansion right now
We're right on the edge of one and you always know when it's coming because you can feel the tension
We have this kind of debates as well. God, do I know what you mean? They do happen, right?
And at the moment we're on the verge of expanding again. It's like an exponential growth. We do it every few months, right?
And the the problem we have right now and it's it's basically a meme solace has no software, right?
And yes, it's valid
But the thing is we're willing to look at ourselves and say right this thing isn't being done, right?
We could do it better. So in terms of maintenance load and core software availability
We're basically moving all of our infrastructure into fabricator, which is the dev.solaceproject.com
What that'll allow us to do is allow people within the community to own a git repo within solace
Which corresponds directly to a package. They'll be able to publish it directly to the unstable repo
Obviously we'll have checks and stuff. Don't worry about that
But for the core repo, we're going to go from just a few gatekeepers and that kind of is the problem here
Isn't it? It's gatekeepers, which is what noah said, right?
We'll go from just having a few select few to a basically this tick list
Of what is okay to go in and we've even got a two distro role if it's in two mainstream distros, you know
It goes in
Interesting for sure. Yeah, because it was it was it was so anal but it protected us during growth
So then we'll have this checklist. It's there's a few things that it basically says, you know
Like if it's introducing huge stack complexity
Whoever said getting this half the fun never
Whoa, whoa kaira. Sorry over eager kaira was very excited about you
Huge stack that was really scary
That was one of the scariest things ever happened on this show actually
Yeah, if it introduces like really large complexity, um, like something like plasma then someone would have to maintain it because yeah
Okay, we can't do it ourselves. That's very logical outside of the core applications. We're we're gonna back flat pack
We're gonna help get them hosted, you know
Like and we've done the the gl validation for the the open gl driver support nvidia and stuff
So there will be choice. It's not all completely there now
But if you look at it the the last year or so
We've been building that engine that core part of solus and defining what solus actually is, right?
Now it's the time when we say let's flesh it out
Let's legitimize ourselves as a distro and that's where we're at now. So we've been a project we've
Focused on the os aspect for it for a very long time
And now it's about legitimizing ourselves as a distro as a larger player within the scene
And yeah, we're going to want the community to help us do that
You know, it's like kaira says getting there is half the fun and we're watching
Just like people are watching last go through a a transition, uh, you know
we watch solus in some sense go through a transition and uh, I
I don't know. I so I find that all to be I find I find everything from from flat packs to clear boot manager
To the latest mate all to be extremely interesting development. So thank you for coming on
I'll say one last thing before I go now
A lot of things I say are a lot of things I say about solace. I'm not saying in a blanket statement way
solace is for
Some people it's not for everyone. It's the same as for budgie. It's for some people
It's not for everyone when i've complained about things like valor before it's
It's good for certain jobs. It's not good for everything, right?
Use the right tool for the job
We need to stop being so religious and trying to blanket apply these things to every given situation
Solace is not trying to dominate every market
It is trying to go for the home and give users a good experience
That does not mean we're going on satellites and we're going on servers or raspberry pies
We've a given focus if it doesn't work for you. That's great
We work on projects that go on over distributions to work with us on those things. Hmm. I like that boy
That's a great philosophy. I got one question for you
Uh bungee 11. What am I getting it?
Bungee 11. What's this shit? I know budgie. What is it? Should be right, right? Yeah, we're doing 10.3 first
Because we have some issues with
I don't want it. Yeah, it's old. It's crusty. It's
It's well refined it works good. It's stable well
Apart from all who wants those don't even get started on the alt. Okay. Okay
So budgie 11 we're looking to have that basically in next quarter and we're we're right on there to going into next quarter now
And we will be one in testing on that and i'm gonna i'm gonna try and see if we can do some kind of
Unstable testing images so you can just download them and give them a go
Don't know how that's going to be working yet
But yeah, I mean that'd be kind of cool if you can just get like unstable builds of budgie and try it out
Yeah, I think that'll be and maybe submit a few times. It's gonna be a few months. Yeah, very good. Very good
Yeah, all right kind of stay tuned. Well, thank you very much, sir
Thank you for taking the time and like kairos is getting there is half the journey and half the fun
I know that i'm coming i'm gonna go but texas you're about to find out you know what dylan my son
That my my drive down to texas lands right on the spring break. Yeah, so he's gonna he's gonna go with us
He'll be there the whole trip. It's gonna be a ton of fun
Uh, and you know what i'm gonna do i'm gonna use my ting my fi i'll have a cdma and gsm
My fi go to linux.ting.com to sign up you get a twenty five dollar dollar discount if you sign up or
If you're bringing advice
They give you twenty five dollars in service credit now your average ting bill twenty three dollars
Can you believe that I heard an ad for a network the other day
It was just 23 or no actually it was 22. It was just 22
22 for the entire line that's before your usage
That's before that 22 just to add in a line a line 22 ting is six dollars
Gsm and cdma six dollars
22 just for the line, you know, it's six dollars and you pay for what you use minutes messages megabytes
You add them up whatever you use. That's what you pay
It's really easy to keep track of too because they got apps for your mobile device and they have a totally killer website
They also have really good customer service if you need to talk to a human being and get some actual support from a geek
Ting's ting's got that they have cdma and gsm
So you can either bring a device or pick whatever works best for you
I'm mentioning that because that's huge for me right now because most of my trip i'll be on gsm
But there will definitely absolutely without question be times where I need a cdma network and that's what's so great about ting
I got the tools to keep control. I can turn them off when i'm done. That's something else
I think that is maybe overlooked because there's no contract. There's no really termination fee
You can turn the line on for two months and turn it off
I got this little tracker that I was i've been thinking about putting in the rig again so people can track the trip
Well, I i'm like I use that once a year
Am I seriously gonna go get a contract or i'm sorry. It's not a an agreement
Am I gonna for for something to use once a year? No, that's ridiculous
I'll put it on the cdma network. I'll pay it for one month and then i'm done
I can use these devices like the tools they are linux.ting.com go there check them out
And you know what since we had a little random kyra
Let's go get an app pick from kyra because they otherwise that's just like we got
Hanging kyras, so we got to get this in here. Whoever said getting there is half the fun never flew economy
Oh, i'm kyra and this is the ting app of the week take the rv kyra
Tripcase
Tripcase aims to take the trouble out of travel. If they don't already have a slogan
They're welcome to use that one
The first time you try tripcase, it might blow your mind when you get a travel email confirmation
Just forward it to trips at tripcase.com. That's it. All the relevant details of your trip are now on your phone
If there's a change in your itinerary if your flight is delayed or the gate changes
You'll be among the first to know tripcase can send you a push notification of changes if you give it the okay
It's about more than air travel though tripcase can help you plan your trip on the ground too
See details on your hotel check-in and out as part of your itinerary
See what the weather is like at your destination with a 10-day forecast. Is that perfect or what?
Tripcase has detailed maps of many airports, which is super handy
Especially if you have time to kill before you fly out
All right, decide what you want to do while you're visiting by pinning attractions appointments and stuff. You want to see on a map
You can even get driving directions or book a ride with uber with a couple of caps
Damn dude two cases free in the apple app store and in the google play store. All right links are directly below. Thanks. Kyra
Thanks for watching subscribe to ting on youtube and get the latest app of the week episodes quick unboxings reviews and much more
until next time
Linux.ting.com
It's mobile that makes sense. Thank you to ting for sponsoring the unplugged program
Now let's roll into a few more updates just really quick
First one I like a lot here. This is a big one for the beard serious sam fusion 2017 is rolling into public beta
He says this is a great game. You ever played any serious sam. Oh, yeah, I have not
Oh, actually, that's not true. I've played one. I've played one of the serious sam
also, there's going to be vr support and the other thing that's really big is
Vulcan support. In fact core team is bringing vulcan to their linux ports. This is another big publisher
That's going to be using vulcan. Awesome. Yeah, man. This is this is a huge deal actually. Uh, so
It's in beta right now 64 bit vulcan multi-threaded rendering
Totally new save system all of that buzzwords, man
All the buzzwords buzzwords I love also while we're in the sort of media consumption category
This is no longer a valve update, but so we'll close the valve section. Goodbye. Um,
mozilla has proposed obsidian
Obsidian
Do you know what obsidian is? I don't well besides being obviously what the original user. Hold on. Hold on a second
Hold on west. I got you got this. We can't gotta get out of the I gotta get these out of my pajamas
But I feel like we can't go any further
I feel like I would be negligent. Yes, you would in my duties as a host of the show
define obsidian
Obsidian a hard dark glass-like volcanic rock formed by the rapid
solidification of lava without crystallization
Obviously, I think the irc is right though. We can't forget about the obsidian order. Uh, you know, yes, right, right
The obsidian order is uh, one of my favorite uh groups of uh spies that are directly modeled after our own cia
Which is pretty frightening. So obsidian has been published as a possible pro proposal from mozilla as the next web gl
technology
Yeah as a as something, you know, you probably stay hip to this
but the kronos group has been getting ready for web gl next
And they've been looking for for new proposals on the on the next version of web gl and guess who one of the first
to submit a proposal was
mozilla foundation
Uh, they say this is a draft proposal for the new gpu api for the web called obsidian
It's a low level api that provides maximum feature set for the gpu to web applications. The api is designed for web assembly
Web assembly
Modern gpus and multi-threaded environments now web assembly just recently shipped in firefox as a default feature
It's kind of a big deal also shipping in chrome's latest I think version 53 and it's in web kits development builds
but not in any uh, like safari or anything, uh
Now mozilla already has a prototype that's been built into servo which provides a metal like api in web idl for javascript backed by
Vulcan
Yeah, so this this is this this is a big deal this obsidian thing could work out to for my reasons
I'm glad mozilla is still around. Yeah. Yeah, because otherwise
Who knows who would be pushing this agenda? Yeah, exactly
Now I also wonder why we're in the media section
And I know we have we have a big conversation still to get into but I wanted to talk about this really quick
Because I think this is going to be one of those things that silently passes in the night, but it has long-term ramifications
Uh at midnight on march 20th
2017
Dolby's last relevant patent on dolby digital
expired
So we're talking ac3 here
So if you have ac3 audio in any television show you've ever captured any television show or movie you've ever downloaded
Um, in fact some cameras record an ac3 audio all digital television is a it's mandatory actually for digital television
a lot of internet streams actually come in ac3 that are high fidelity netflix can use ac3 to give you a
Like a surround sound
Yeah, uh, and if you take out all references to dolby and any dolby properties, you can now ship ac3 technically
This is this is huge. It's out of patent now
yeah, and uh, you can find out more at ac3 the number three freedom day.org and uh, if you
First of all, if you've ever played for the fluendo media pack like I have a couple of times you were paying for ac3
That's going to go away. Now. That's just you can just be included in the in the distro now, I would assume
um
And it also means that most live tv content can now be legally decoded
Most recorded tv content from like a pvr legally decoded videos from dvd or blu-ray the audio can be legally decoded now
um
some camcorders and uh
Mostly netflix and maybe hulu that uses ac3 in their streams. I'm not sure
And maybe amazon anybody that offers but you see it a lot it established. Oh, yeah, man. Yeah, it's all over the place
So pretty much all of the videos I play back on my media box
Probably have ac3 audio
Almost all of them
So that's a big deal
And again, you can you can find a link in the show notes if if you want to check it out
I I it's funny because it's one of those things where one day you don't even notice it, right? It's just eventually
Distros will start. Well, it's been it's been six months. I haven't sued anybody like to get let's just include it
And then just all of a sudden you're just legally playing files. You didn't even realize
Right. It's like it used to it used to be
back
Back in my day
We we couldn't even play mp3 files or mp4 files. You couldn't even play an h264 file, right?
And and and now the kids today
They're just they're just randomly playing mp3 files or randomly playing h264 files
And now their ac3 is just gonna work like nothing. They didn't they didn't buy a codec back
They didn't have to extract it put into a dot folder
Right kids today. Yeah, there was no, you know sketchy. Ooh, uh g-streamer bad ugly. Ah,
Right. Yes. Oh my god. Oh, oh, man. All right
So there's a topic that i've been wanting to discuss and i'm really glad that noah's here because I think he's going to be
Uh somebody that's going to chime in on this. Uh, but before we go I got it
I gotta think I gotta do this because I even just recently
Just recently spun up a digital ocean droplet tried out an open source project
Did a little hmm and ha and and then just destroyed the droplet and probably in two hours
I was done a digital ocean dot com go there and use our promo code do unplug to support the show
This is a great way to get a linux rig with a crazy great 40 gigabyte connection all ssd storage
Kvm for the virtualizer with data centers in new york, san franc, singapore, afghan, london, toronto, germany and dimension b
They got them everywhere. You have a great control panel. That's really easy to use super intuitive
If you're a total noob that does barely kind of understands what a server is
Maybe you've never even heard the team the term uh vps before or a droplet
You're gonna be able to use this if you've been setting up virtual servers for a decade
You're gonna be able to use this and best it this is like do you use the api because i'm oh, yeah
Oh, yeah, totally. Oh, man. I
That's me throwing a piece of paper around because i'm so excited about the api
For me, I use it every single day multiple times a day. What kind of things do you use it for?
Well, I what my favorite part about one you can just use it like I mean i've used my own scripts
But because it's so easy a ton of community stuff like vagrant, right vagrant has a have a writer
Basically any scripting component they probably have a like drop in digital ocean
Just you spin up a droplet you run your code there done couple of open source projects
I've checked out have a button on their website that uses the api and you click the button and then it
It just connects to your account and spins up a droplet with the whole stack
I'm going to lts docker a container with I mean, it's just like one button and you have the whole thing
And I feel like 2017 is up there right like even before some of the more maybe quote-unquote enterprise providers
You'll get a dio plug-in before you're going to get one
Yeah, and and you know part of that too is they have incredible pricing
So it starts at five dollars a month, but you can pay hourly too, which is nuts
And then on top they've layered on these incredible services that are integrated right into the dashboard
they're part of the api their their first class like load balancers block storage high ram systems like it's it's
Every move they have made has been really smart
And it's I think why they've just rocketed to the top digital ocean.com use our promo code dio unplug that lets them know
You heard about it here, which means they keep us going
But also it gives you a ten dollar credit try out the five dollar rig or my favorite
The three cents an hour rig with a ten dollar credit
It really makes it there's there's several projects you could try with that digital ocean.com
Give it a go build your back end infrastructure your future website your personal blog
Or just toy around and learn more at digital ocean.com dio unplugged is the promo code you use
After you sign up
Let's do a little elephant in the room discussion
There is uh, there is a real serious reality
It's not something that we're totally shy of but there's a real serious reality that for desktop linux to be relevant and be successful
Long term, we're just going to have to have a whole crap ton of web apps universal apps. Maybe some are web assembly some are electron
just
A desktop full of them simple node slack
skype
everyday business tools
Web applications now and it's just going to there's everybody has their pet favorites. It's just going to increase right?
Um, and I thought I thought this was kind of an interesting blog post about uh setting a just a let's just embrace this
And set a dot web app file standard. So it's a file type
Dot web app and it's a free desktop specification
And if you use something like natafire, which we're going to talk about a little bit more here in a second
This would be a way to just make a real simple. Here's the way here's the dot file the dot web app
This is where you create this how you create the menu structure for it
This is the icon all this stuff like it's like it's it's like a known standard
And in part part of what I read this is like, oh geez, this is this is not the direction. I want things to go
so
but then I thought about it it's like
You have tools like natafire you have people that are distributing their entire applications and electron like n1
Yeah is one that I still use today. I mean how many people use uh, adam or visual studio totally every day. Absolutely
and in some ways
This is critical for future expansion of the desktop I think for linux because it it's platform neutralizing
Uh, but we all are like intimately aware of what the problems are many of them are closed source completely closed source
Many of them require some sort of backend infrastructure, which is also closed source
And in some cases has pervasive user tracking that violates your privacy and all of them so far
Seem to have a performance overhead when compared to native applications that is less than ideal
um, and so these are like obvious
Problems with that web applications, but then like at the same part the same time the advocate of me says
Yeah, but screw all that stuff. I want linux to be the successful prominent desktop platform one day
um
And you know there are some advantages
As time goes on I start to suspect that
Once again, we're never going to agree on a on a universal packaging format. There's going to be app images and flat packs and snaps
And we're never going to have a universal packaging format. It's never going to really be something that all distros support
It's never going to happen, but you know what is universal the web
so
Why not bypass all this bullshit?
All this crap that the linux community can't get their shit together around and just deliver a web app
plus
large industrial vendors like adobe and autocad and others
especially with things
Like mozilla's initiative around webgl next
There could be like legitimate performance possibilities in an electron app in a web app
And and they could just bypass dot exe they can bypass dmgs. They can bypass flat packs
Here's the web app. Here's you can download for these different systems. Here's the web app
It almost and then plus the other benefit would be of course that it's available to a shit ton more developers and and people can target
Many platforms so it's much easier to carve out some revenue because you can get a couple of cheapo mac users to pay
You can get a few ten tens of thousands of windows users and a few linux enthusiasts to pay
And so you're not tied to one platform to make your money
So when microsoft finally kills the desktop and makes it just a linux based os and apple makes ios for the desktop
You you're not completely screwed. So
You're not completely screwed. So you've diversified your income sources
So it's obvious for developers too because you bypass distribution standards you bypass app stores you bypass packaging issues you bypass dependent on a platform
It's a it mean like if i'm adobe and i'm going to commit the next 15 years of development to something
It almost seems like a foregone conclusion
Which means as linux users we have to accept that our future is going to be tied to back-end services that require monthly payments
Invade our privacy and web applications that don't run as fast as they should even though we now have these badass kit car
Style systems with an entirely open source platform
And we're running these closed source applications connected to closed source backends that run like shit
Is this a reality that we have to face and is there some sort of middle in here that i'm not seeing
What do you think wes and i'm gonna and after that i'm gonna i'd love to toss it around the chat room
I'd like joe's in here. I'd love to toss it to joe. See what he thinks kernel linux is in here
I'd like to get his thoughts, but i'll let you start. I think there's a lot of things they're tied together
Uh, especially especially the proprietary aspect. Um
We're gonna have proprietary software. We do already either way
I think there's a there's a legitimate case that's frequently made on this network that we do want that that we want that as part
Of our success whether whether or not an individual linux user wants that or not may be different right? We all have opinions there
um
I think there is a good case that you know that we are tied to these backend services. But again
When you get google drive integration in files on gnome
That's the same thing, right?
Like you're still tied to proprietary service what the front end there doesn't really matter good point where I see it from the development side
I agree. Like there's some things that it makes sense for and some not uh, i'm running hyper.is or it's like the term
It's a terminal written in electron. I don't know if that makes sense. It's pretty snappy honestly terminal
Yes, I mean a generic, you know, you can run whatever shell you want in it. Really? Yeah
Here's a here's a shell. It feels very snappy. I've I only just installed it looks good
It's in an app image. It does let you then right you have the full html if you want
My mind is spinning right now and that's on the edge for me
I don't know if that makes sense, right?
And I wouldn't I wouldn't necessarily do like a tiny little app, right?
You don't need a full chrome thing just to draw a little bit
But on the flip side if you've spent your career developing interactive web apps, you're using d3 you're using other things
Are you really going to go spend your time learning gtk? No, maybe qt
I think qt has the strongest case right in terms of cross-platform availability
But what where where electron shines is because it's javascript and it's web and that is reach and if you're a developer with limited time
You're not excited about linux or windows or mac you're excited about the product you're making right?
But okay, so let me ask joe this so joe
What about the users though?
Because like one of the reasons I switched to linux is because I was sick of bad performance on other systems
One of the reasons I switched to linux is because I want a transparency of code
One of the reasons I switched to linux is because I wanted long-term visibility of where a project was going
And what's the point of having a gpl kernel and gpl user land tools in a gpl desktop environment?
If i'm running a closed source application, is this is this a compromise too far joe?
Well, I think it's not a compromise too far for most people because most pragmatic people will use a bit of proprietary software
On the desktop regardless, but I think that you're kind of looking at this from the wrong angle here
You see you're talking about um these kind of consumer applications like skype
Although I suppose skype's a bit of a business application, but you see the thing is the desktop is
More or less dead or at least dying and everyone is moving to mobile right except for the professionals using
Big software like people that want to get their work done
Yeah, and that kind of stuff is it's very very difficult to make that into web apps, isn't it?
Yeah, well, I think today it is but I don't know about long term
And so you think that maybe long term that is the way to get I don't know if big video editors and stuff over to
God, I hope so in some ways
Because otherwise it's never going to happen
I really think the only choice I think the only the only
Realistic shot that linux has is that adobe releases premiere for linux at this point
And the only way they're going to do that is if there's something that is substantially
Especially better to move to that is like the next 10 years plus for their platform
I would think otherwise why not just keep releasing native builds for windows and mac
The other benefit maybe could be that it it does make it right if you can get better
Web acceleration use of those hardware components other things that you need the differentiated web app from a real app
Then you've solved it for everyone
But if you've got something like obsidian and you start getting like a standard for audio
And you start getting a standard for local database cache and stuff like that
You get to a point where you essentially have
The workings of anything you could have made out of a java app or anything you could have made out of you know
Something else it's it's it's in a runtime. I I feel like you get actually pretty damn close
What you're talking about is the web browser becoming the operating system
Yeah
In a sense or or an electron app or a natify or something like that where it's it's using those technologies
But it pretends to be a desktop application
And I don't I don't like it really
And in fact see current linux I wanted to ask you because it seems like a huge component to all of these is then they
Always it's not just that it's a web or an electron app
It's also that it's it's cloud dependent and and you have the whole lock-in now to a cloud service
Which has all kinds of uh long-term ramifications, which could be one of them being shut down
And so this could be another issue where all of a sudden
One of the benefits of desktop linux was with open source native applications a developer might decide to quit one day
But if you if your business depended on it, hey you fork the shit out of that thing run an internal build and hire
Somebody to keep it going and that was an actual possibility
But right now if nalais decides to pull the plug on n1 i'm totally screwed my desktop application becomes completely
Non-functional and you that's got to bother you colonel linux
And you know additionally to that when you start looking at independent content creators now
We're taking our content things that we've spent our money time and effort
And we're putting that up into the cloud and you know
A lot of us would say well, you know in the case of video editing, you know and stuff like that
Especially for adobe. They wouldn't do anything, you know terrible with it. But a lot of times what you see is as they change
uh to accommodate
Users that don't want to pay a lot of money. So for example in facebook
When it started out you uploaded a bunch of media. That was all your media
It was your pictures your videos that kind of thing then later on
They started changing the user agreement so that they could use some of some of that stuff
And so anytime you have content that you've created on somebody else's computer
I think that's that's a dangerous thing anytime you're running your business based on someone else's computer. I think that's a dangerous thing
hmm
So
I don't have a real way to like spin this into like a happy go lucky hara desktop linux thing
I guess I would just like to to point out that you can have an entirely open source electron app, right?
The whole framework is open source
If you want to improve it to not use as much memory or whatever and you're capable of doing that you totally can yeah
Now also use electron with offline apps. You don't need to be online either. Yeah now rotten
Producer michael
I wanted to give you a chance also to sort of touch on
On your thoughts on using nata fire to take some of these applications and make it essentially feel like a local app
Because that's sort of I mean where we're going
Well, I mean I i've been using nata fire for a little while and i've built like probably 10 of my own apps with it
um
It can do a lot of
It's really interesting because its purpose is to kind of like auto build an electron app for you
You give it uh, tell it what you have in node and npm installed and you have uh electron in your system
And then it just uses electron to build everything for you based on the command the parameters you use in the command
And then it just builds it and it gives you like a full folder that's portable
But it also integrates with your system. So it uses your home folder to store the config files
So you can remake a new version with a new electron when it comes out, uh, you can have notifications
Built into your put whatever pretty much whatever de you want
um, like there's there's a lot of
Great tools for it. And the best part about it is that you can build your own
um your own apps
without having to deal with uh any kind of services like
I got mine. I have like
Like I have stuff that's on my server that is you know, it is it is a cloud service that is running on my server
That is using electron to do it to use it
That's cool. All right, so that's kind of that's sort of like a that's a middle ground. That's good. That's good
That's a middle ground. I was looking for less depressed than we thought we thank you producer
Michael you gave us the middle ground that we were hoping for
All right
Now if you have a little middle ground and you want to share your thoughts go over to jupitabroadcasting.com
contact
Of course, you can also go to linuxactionshow.reddit.com
although
bit of a shit show right now, so
Probably probably would maybe just find us on twitter or or join us live. Yeah, that'd be good jblive.tv for the live show
I'm at chris las i'm at westpacethenetworks at jupiter signal also go follow colonel linux at colonel linux on the network
Uh, he's over there doing his thing and tweeting about all his shenanigans
And also we appreciate the mumble room for joining us. You can also join that
Just check out the chat room at jblive.tv do a bang mumble get the info
We do a little mic check and you can join us. We'll see you right back here next tuesday
And the value of this is negative
JBtitles.com everybody go over there. We'll pick our title and then we will get out of here for the tech snap crew
Thank you for being here everybody jbtitles.com
Uh, also, I just want to point out another way about uh etcher is awesome. Oh, yeah etcher is I forgot about etcher damn
That's a that is actually the counter example right there etcher for etcher for the win
And i've actually been uh studying up on app images with uh with electron based stuff
and uh, it's really cool like
I like app images a lot more than I used to because after researching it
It's uh, I kind of like app images more than flat packs now
The first time I used etcher that was the first time I used uh app image and I was just I was blown away
Like it was it was one of those moments
Where the thing downloads I double click on it and I click on install and i'm like
Why why is not every application on linux using this and why haven't we been doing it for 20 years?
All right
I did it on my arch desktop
Then I did it on my fedora laptop
Then I did it on my bungee laptop the same freaking file runs on every single distro
Share share share share. We need to pick a title jb title share. We need to pick it to jimmy share
We need jimmy titles. Sure. We need to pick a title jimmy titles.com
Chris loves that's funny
Sandboxing now too. Oh, really?
Pack attack solace my solace getting in the limitations with app images as well
Of course, but there's also limitations when flat packs as well
Well games not the same limitations with an app image you'll run into library issues. Oh
Yeah, so they might bundle some of the libraries
But you're still going to run into the sort of issues that you would have if you just downloaded a terrible and running it from
That route
Whereas if you use something like flat pack, you've got a fully contained root fs essentially
You've got an entire trip environment because they've changed app images changed how they do their stuff within uh, like four or five months ago
They're now using squash fs now. So there's no yeah, that's right, but that's squash fs
That's just a bind mount that's gone into the true. It doesn't have a full troop. So the system libraries can still contaminate
That's one of the problems app image is very very attractive because you can just double click it and go for it
As norah said but you can still get those issues. So they do need to be watched out for if you use a sandboxing
That's not going to happen
That's what I just said for example
No fire jail on type of app image. You're not going to have those problems
Or you could just use one that works out of the box without layers, right?
But when you have to install flat pack into your system and then your system doesn't work in any way and then annoying
And it gives you these like ridiculously obscure errors and the only and the actual solution is to reboot your machine
But the but the the system doesn't tell you that because that's that'd be too easy
You had the quark errors as well then yeah, it's ridiculous
It's like hey you're missing this thing like why am I missing it? Oh because I didn't reboot. Oh, yeah
Thanks, you could have just told me I need to reboot
Yeah, it's not kind of has the usability upper hand there a little bit
Yeah, but uh, there's there's a thing I think the app image is only there's it's only flaw
Not really only flaw because the sandboxing is a problem, but they have a solution for that
The only main thing that they don't have a solution for is the updating method like uh, yeah
Yeah, they had a self-updater. That would be nice. So they have a built-in updating daemon
But the app image it has to implement it
It doesn't um, it only does it when you when you launch it. So like it says, okay, here's an update
so it does work, but the app images developer has to use it and you know, there's
It is really cool and also like a mac a lot of people well, it's more mac than not but it is but a lot of um,
People think that app images bundles everything and they don't
App images only bundle what's necessary to bundle if the system
If an app image can assume that a package is available, like, you know a super massive
You know global package. It's not going to be bundled
You
