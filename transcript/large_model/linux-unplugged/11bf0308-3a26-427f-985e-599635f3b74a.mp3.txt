Before we hit record, we were talking about Stadia,
and what a disappointment it has turned into.
And I already regret buying my,
I think they called it Founder's Bundle
or something like that.
Yeah, they got you suckered in.
I mean, I had fun playing it here at the studio,
but I haven't heard you mention it since then.
No, I pretty much stopped using it a couple of weeks
after I got it.
So I logged back in this morning,
and I now am the proud owner of one pay game.
I bought that early on, Red Dead Redemption,
for like $100.
But you gotta play something.
And then I got Metro Exodus now for free.
I don't know, where do they go wrong, guys?
Is it the price of the games?
Is it a lack of games?
Is it all of the above?
I think it's the fact that you don't get a refund
whenever they close the system down.
Ha ha ha ha, when they inevitably shut it down.
People are just too familiar with Google.
Google got the track record, so yeah.
I think it's a bit late as well.
I mean, I appreciate that the whole streaming services,
now is the time for streaming services.
Like, we've got Netflix, we've got Spotify.
We understand the whole streaming technology.
But everyone's already got their game system set up,
and they've got their Steam account,
and they've got their itch.io for indie games,
and all those other stores that nobody cares about.
I think it feels too late.
It feels like people already bought
into all the other platforms.
Yeah, there's that.
And but, to what Cheese was saying,
I just read an article where the journalist went around
and interviewed Stadia players, and he did not prompt them.
But almost all of them said they were concerned Google
would shut it down eventually.
That's become Google's brand.
And then, of course, you combine the fact
that you need a pretty decent connection.
When I want to play video games, I'm at home,
and I don't have a great connection at home.
I have a good connection at work,
but I'm not playing video games at work.
So you combine all these things, the game prices,
the fear of them shutting it down, internet connections.
It just doesn't seem like Google's going to pull it off.
We'll see if the next thing happens.
I mean, who knows?
Maybe they'll keep it going.
People are putting a lot of money into this.
They kind of have to stick with it.
Hello, friends.
Welcome into your weekly Linux talk show
that makes its own Super Tuesday.
My name is Chris.
My name is Wes.
Hello, Wes.
Nice to be podcasting with you for 3.43.
Yes, I'm casting my vote for Linux Unplugged.
We have a lot to cover this week.
We have a big one to get into, a little real talk
for the community this week, something
that has been brewing behind the scenes
in various different conversations for a while.
And it starts when I tried using a MacBook at home
for about a month.
What?
And I came away with a couple of interesting notes
that I want to share with the audience, observations,
and where I think the Mac gets it right, where they get it
wrong, and why, ultimately, Linux is the long game.
I still think that.
But in this endeavor, I had to give the Mac a real fair shake.
I challenged myself to try to treat this as intellectually
honest as I could.
At first, whenever I've used the Mac, I've always
kind of had this visceral kind of don't like using it.
It's just like all these rough edges response.
And it's a different paradigm.
Yeah, so this time I said to myself, all right, all right.
But what if you gave it a day like you give plasma?
You give plasma a whole day.
What if you gave this a whole day?
Would it be so bad then if you took a day?
So I'll tell you a little bit about that
and what I realized in that process.
But we have a bunch of community news
to get to as well as some pics.
But before we go any further, I've
got to say in the morning to Cheese, hello, Cheese.
Hey, guys.
How's it going?
Hey, buddy.
And then, of course, time appropriate greetings,
Mumble Room.
Hello.
Hello.
Good evening.
Howdy.
Hello.
Hi.
Hi.
Well, I hear a poppy in there.
Hello, poppy.
Well, hello there.
How are you?
Well, hello.
I'm good.
I'm quite well.
It's nice to see everybody in there.
A great turnout again.
I see Ace Nomad, Brent, and Byte, and Carl, and Colonel,
and Mini Mac, and Poppy.
And is it Stewn?
How do you say that?
Is it Stun?
Stewin?
Stewin, yeah.
That's about it.
Oh, welcome, Stewin.
I like that you're kind of iffy on that.
In Dutch, it's Stun.
Ah, OK.
All right.
OK.
I see what you're rolling with.
Well, let's talk about some things that are coming down.
The distribution pipeline, very soon.
If you're going to grab Ubuntu 20.04 when it comes out,
or one of the modern distros that ships Gnome Shell,
then you're likely going to end up with Gnome 3.36.
Right?
That's what comes in the focal.
Poppy's been getting me kind of tempted to actually start
running it as my daily driver.
You're not already?
I downloaded it last night.
So I might.
I just, I don't know.
I've been really happy with Manjaro.
But I think I want to wipe it and go with 20.04
just to use it for a bit before the release
and have some hands-on.
But there's some nice things landing in 3.36 of Gnome Shell.
A bunch of fixes, a bunch of performance improvements.
And these changes are landing just kind of in time
because it's going into code freeze.
It's going to be all done.
So whenever it does land, in whatever distribution you use,
there'll be some things to look out for.
There are improvements to the CSS engine.
But there's also a batch of cleanups
and refactoring to how it handles files
in general for the SCSS.
And Gnome Shell also now is avoiding certain I.O.
operations in the main thread, which saves on disk I.O.
And this is a cute one, but it's a nice fix.
The local time zone is now cached,
which will avoid reading the contents of Etsy local time
more than necessary.
But as a consequence of that, Gnome Shell
actually behaves a lot better under heavy I.O. loads.
Animations also are now disabled under various circumstances,
such as if Gnome Shell is using a software render,
or if you're sharing your screen with VNC,
it turns off the animations.
That's so smart.
It's nice, huh?
And also, it officially is now shipping that extensions
management app that we talked about once before that allows
you to globally disable extensions,
sort of takes that functionality out of Gnome Tweak
and puts it in an actual Gnome Shell official application
where users can look at their extension status,
toggle them on or off, and things like that.
Might be small, but it feels pretty big there.
Yeah, I will use the crap out of that.
Now, of course, Mudder hasn't been left out.
Lots of good improvements there,
including improved screencasting support.
And this part caught my eye.
The screencast engine is now implemented on top of PipeWire
and exports a PipeWire node that can be read and consumed
by other applications.
So now you've got that nice jack-like ability
in the PipeWire graph to go connect things up.
Intel now also, this API would download the contents
of the monitor frame buffers from the GPU
to the system memory, and then pass it to PipeWire.
After that, but that was obviously highly inefficient,
and that's been improved.
That's cool.
So that means doing screencast and stuff like that,
but less of a load on your GPU and on your CPU.
Exactly.
That's a great improvement.
And using PipeWire behind the scenes to do that.
And also, back in February, a major change came in
on how Mudder handles drawing monitors.
This is the first step towards achieving a goal
of one frame clock per monitor.
And that's a nice architectural change
that should eventually translate to real usability wins.
Yeah, a lot of rendering improvements in general,
cutting down on just unnecessary rendering
in different scenarios.
And even improvements in how the wallpaper is handled,
which allows Mudder to save resources
when scaling is applied to a monitor.
And then of course, various fixes
for Wayland support have landed.
Small memory leaks were plugged.
And Mudder now avoids flickering on X11
when you're using an, when windows are switching
between undirected or not.
GNOME 3.36, looking really, really good.
Plasma, looking really, really good.
Like things are getting in shape.
I can't help when we talk about GNOME
to think back a little bit to,
you know, when we express some of our concerns
about the underlying architecture
and just the amount of work it would take
to sort of get on really solid footing.
But I think we're past that.
I mean, the pace of development, the changes,
the improvements deep down in how Mudder works,
those are all coming in.
This to me seems like a clear long-term knock-on effect
of Canonical putting Ubuntu behind GNOME Shell.
And they've done a big portion of a lot of this work,
but even just that, it's inspired others
to pick up the work there.
It really has gotten to a much, much, much better place.
It's just about time to throw it all out
and start over, isn't it, Popey?
Oh, I don't know about that.
2004 is gonna be around for a long time.
So, you know, you can install 2004 in April
and be confident that you're gonna keep getting updates
for five, maybe 10 years.
Yeah, good answer.
Dang it, dang it.
Also, just bringing the slow, eventual,
no big deal, low-key arrival of Wayland's Firefox 75,
which is due to be released next month,
should have its native Wayland support
in really good order now.
Yeah, merged yesterday as we record this
with the Firefox Wayland patches
for VA API video acceleration support in conjunction
with FFmpeg.
Support does require enabling OpenGL
or web render within Firefox,
as well as setting the Wayland DMA buff VA API control knobs.
And if you don't know what that is,
I didn't really either,
but we'll have links in the show notes.
A control knob, huh?
I imagine that's just in the Firefox about config settings,
but I could be wrong.
I like it.
I like the terminology there for some reason.
I think it's kind of funny.
Cool to see it.
And like I say, it's sort of this,
just this low-key, slow arrival of Wayland.
Right. It would be no big deal.
More fundamentals.
And I think too, maybe what we'll talk a little bit more
with your experiences on the Mac,
it is these sorts of video acceleration niceties
that you just sort of expect on the modern desktop.
Yeah, fair enough.
You're, look at you teasing.
Well, before we get there,
how about a little housekeeping?
Don't forget about the daylight savings monster.
It arrives this Sunday here in the States.
Oh no, again?
I know.
Imagine the time math we do with working with folks
in both London, but also in Australia.
And then of course, all the time zones in the United States.
So, can we please just knock this crap off?
Right, UTC, let's be done with it.
I'm good.
I can do it. Let's go.
I'm fine with that, being on UTC,
given that's what we're on right now.
I know.
Even with that, making Popey and Joe happy, I'll tolerate.
Yeah, I mean, that's a compromise we all have to make.
Absolutely, it's worth it.
I wanna give a plug while we're talking about Joe.
Fosthawk Live, June 20th at the Harrison,
which as you know, is near King's Cross in London.
Of course.
I believe tickets are $1,000 each.
And your first, what's that?
No, that's not true.
Oh, okay, all right.
Well, you can get the details at fosthawk.com.
We'll have a link in the show notes.
Tickets are free.
Donations are welcome though.
So maybe put like $1,000 in that donation box.
That's probably one of those events
I would just love to make it to.
I know.
Someday.
Oh my God, it's so good.
It's so good.
It's so cozy.
You're in the basement of a pub, a proper pub,
and it's really dark and dingy down there.
And you've got uncomfortable small chairs
and that's what makes it awesome
because you're all a bunch of nerds, super cozy.
Joe pointed out the other day
that most of the people who bought a ticket,
or I say buy, have obtained a ticket,
have bought one ticket.
So most people go on their own
and people do worry about whether they're gonna fit in
and whether they're gonna have people to talk to.
Everyone will fit in.
Everyone will have someone to talk to.
It's a fantastic event.
I highly recommend people go if they can.
And there's social lubrication to go all around.
I would love to go.
I was gonna totally go,
but then Wes wouldn't let me go
because of the whole COVID-19 thing.
Just worry about you in the show.
Well, all right, so that's plenty.
We've probably gone a little too long there.
So more links.
There's additional things in the show notes,
but I wanna talk about Linux being a general purpose OS
for very specific things.
Think about that statement for a second.
A general purpose OS
that can be used for very specific things.
And while we're talking again about Joe,
go check out episode 84,
where they covered this in a slightly different track.
This has been a wider conversation
that we've been having privately amongst ourselves
and with friends and other people.
And they really kind of encapsulated the conversation
really good in episode 84 of Late Night Linux.
And really the idea there was,
is it time to focus on open source applications
and not so much on the desktop?
I don't buy that argument.
I think the desktop has a very bright future.
And in fact, I think Linux is better positioned
for that long-term for certain use cases
than any other platform.
And I think we'll get there.
But with that statement also, there's a flip side to it.
And that is, there are legitimately use cases
that it is not well-suited for.
We gotta be honest about that.
Based on just market dynamics and realities
and the way economics work,
the way it all just has shaken out, it's just the truth.
It's just-
And the expectations of regular users.
Yeah.
When I look at Linux, I look at it as a platform really
that is used on servers,
but also is almost a runtime these days
with WSL on Windows
and really kind of a universal kind of,
just everybody's writing applications
to run it on Linux in these containers.
And if they do that, it'll run on any platform.
You can run Docker containers on Windows 10
through WSL2 now.
This is something that,
and they've got Docker desktop that they're working on,
including, I watched a YouTube video this morning
of a YouTuber who is using XFCE from inside WSL2.
That's fantastic.
It's pretty crazy.
Of course, Docker's available for the Mac.
You can run Docker on a free NAS server, which is BSD.
So there's the runtime Linux, there's the server Linux,
there's the embedded OS Linux, there's desktop Linux.
Now, open source has clearly been successful.
There's a lot of really massive applications out there
like VLC and Firefox and Blender
and lots of desktop applications that are very successful.
But there's not many distributions of Linux
or desktop environments that are as successful
as some of those applications are.
And I think as time goes on, this will shift.
But today in 2020, there's still a very valid case
for a specialist OS.
Remember, I said Linux is a generalist OS
that can be used for specific purposes,
like embedded devices is always a go-to.
But then you have specialist OS
that are made by commercial vendors
that really serve one master purpose.
And this is the train of thinking I started to get down
when I started using this MacBook at home.
I had this 2017 TouchBar MacBook,
and it's not getting used for anything.
Ultimately, I just enjoy technology, whatever it might be.
That's a nice piece of hardware.
And so I thought, all right, well, let's try.
Let's try, I was kind of inspired
by something Alex and I have been talking about.
Let's try when I go home
using a totally different computing paradigm
to get a broader sense of at work and at home,
because then I could have all of my work stuff
on the ThinkPad, and when I'm at work, I'm on the ThinkPad,
and when I'm at home, I'm on the MacBook.
It's a totally just like jarring different-
Very clear indication of your switch.
Immediately hated it,
as every time I sit down to use Mac OS,
I just can't stand it.
It's a pretty fun environment at this point.
It's like a hundred small little things.
Like the trackpad's great,
but natural scrolling is turned on by default.
Like there's just, everything has a little bit
of a rough edge for me that I have to go finesse.
And I always would get sort of frustrated
and be like, I'm not doing this.
This is a $2,000 computer.
I shouldn't have to bother with this, right?
But yet I have no problem setting up a brand new laptop
or a Dell XPS or a custom-built PC
with plasma or GNOME Shell
and spending a day or two tinkering
to get it to just the way I want.
And I can cut that down, especially on GNOME Shell,
but like with plasma,
it usually takes me a couple of days
because I kind of fix it as I go along.
Right, you realize, oh yeah,
I do wanna tweak this setting.
So I said, okay, well, if I'm gonna be honest here,
I have to afford the same allowance for the Mac.
I can't judge it because I don't judge plasma
without modifying those things.
I don't judge GNOME Shell.
So I need to give the same allowances for the Mac.
And you gotta reach that everyday use steady state
that is really what it would be like to use it.
I will make just a side note.
The keyboard is atrocious.
It's really bad.
This is one of the butterfly?
Yeah, it's really, really bad.
And that's one of the reasons I quit using it.
Plus we just didn't really have,
we didn't need a Mac in production anymore.
So it's like when the company sale came,
I was like, ah, we don't use this.
I'll just keep this.
We don't use it for anything with production stuff.
Like I had to make a hard decision there.
And so it just sat being unused with the battery dying.
And that like just kills me.
Just sit there looking at it, you know,
and I feel guilty.
Money slowly wasting away.
So every now and then I plug it in with a USB-C cord
and then like unplug it.
And then like a month later, plug it back.
Like I just, I was neglecting it.
And so I thought, okay, well, I'll set up a $50 budget
because on the Mac, you gotta pay for everything.
Everything costs money.
You want window snapping, it costs money.
You wanna fancy something up, it costs money.
You want system meters in your menu bar, it costs money.
You wanna manage what icons are in your menu bar,
it costs money.
So I set up myself a $50 budget
and I have not spent all $50.
And within a day or two,
I think I had it as usable as I would probably say,
Gnome Shell.
That's really interesting too,
because I think at least on, you know,
when I'm used to the Linux desktop,
that seems like a really big philosophical period
that just that I couldn't expect those features
without having to pay for it.
But when you frame it with a very reasonable,
I mean, $50, especially if you're gonna invest in tools,
maybe one time or yearly, that's so reasonable.
It feels dumb to pay for something
to help me tile a window or snap a window.
But if I just say, all right,
I'm not gonna spend more than 50 bucks.
It was, they are good apps.
They are probably the best apps at doing that.
Like the one that is really fricking impressive
that I got is called iStat Menus.
This is one of the more expensive ones.
And some of these now want subscriptions, which is cute,
which is really cute, but it's menus,
it's menu meters up in the menu bar.
And it is, I mean, it's really good.
Like it's worth 30 bucks or it was 19 bucks.
It was worth it.
Really, I would buy it again.
I would buy it for Linux in a heartbeat.
And you have some insurance that, you know,
that's money going to the developer
to continue to develop it.
And of course on the Mac, you have the one platform.
So you're never gonna switch away
from the Mac OS environment
and not be able to use this anymore.
Just gonna keep working.
That is true.
Yeah, because if I'd bought something
that only worked with GNOME Shell,
wouldn't necessarily-
Maybe they have a Plasma, but maybe not.
Hmm, yeah, I hadn't thought of that.
I generally don't need to do it on those desktops.
Like Plasma has everything built in I need.
I just have to turn it on and learn how to configure it.
So once I got past this hurdle though,
I could appreciate a few things
that I think the Mac gets right.
In part, I started to notice things
that Linux can't really do,
that they can do on the Mac.
And that is they build Mac OS
with the intention of their pro apps being used
on the platform, like Logic and Final Cut.
What that means is the systems work together
in unique moments of stress,
probably in a way Linux never can.
Like the kernel team is working
with the audio subsystem team,
who's working with the video subsystem team
to make sure that things remain responsive
when the system's under serious pressure.
And really what got me started on this whole journey
was I wanted to see what would happen
if I hooked up my eGPU to the MacBook.
Like what does Mac OS catalyze do?
I mean, you've been pretty into eGPU,
so that makes sense.
And my first experiences with this
were documented in the Chris Lastcast,
where it was called like the Max Vista moment,
because Catalina is a rough turd.
Let me tell you, it is a rough rider,
and it is UAC all up in your face constantly.
It's worse than Vista.
And so you gotta get past that.
That takes like a solid two weeks
to get through all those damn dialogue boxes.
And once you do that, you hook up the eGPU,
it was remarkable.
So I would work on a project in Final Cut,
and the entire system would become aware
of the presence of an eGPU,
and applications could elect to use that eGPU,
or I could go in and tell them to prefer it even.
And what would happen is I could render something,
and Final Cut would dispatch work to the eGPU,
it would dispatch work to the AMD GPU
that's built into the laptop,
and it would dispatch work to the Intel CPU.
Wow.
You would manage all of that in the background,
effectively utilizing all of those cores.
And on this 2017 MacBook, I am crushing out video
that you wouldn't think should be possible on this thing.
And then the thermal throttling kicks in,
and then it slows down a little bit,
because it's a Mac after all.
But fundamentally, they have something wrong.
There's a sickness in this platform
that is not competitive with Linux,
but it doesn't mean it is not competitive.
What is hard for us to understand and appreciate
is Apple's style here has been really easy
for third-party manufacturers, hardware makers,
people that are making interfaces,
people that are high-end audio interfaces like Apollo
that are several thousands of dollars
and only work with Macs,
or audio or video editing surfaces that work with the Mac,
or software that comes out on Mac OS.
There is a limited scope of problems
that they have to solve.
There's a known set of hardware,
and there's a known set of OSes.
And Apple only supports a few OS releases at a time,
so it's a very narrow spectrum you have to support.
And the flip side of that support
means you can optimize better for what you are supporting.
And if you're writing something for a pro user,
you can almost guarantee they're on the latest OS.
In fact, if you buy a Mac Pro today,
you can only run Catalina.
You can't run an older version of Mac OS.
So you can guarantee that your customer
is on a certain set of hardware and software,
and that that software gets revved every year
on a yearly cadence,
which is a built-in reason to then prompt your users
to buy the next version,
which adds support for the new OS,
so you have a guaranteed revenue bump every year.
So there's a real healthy third-party ecosystem
around them.
That's a whole lifecycle you can just sort of
latch right onto.
Hardware and software.
Well, I'm not so sure you can be that confident
that people are on Catalina
or whatever the latest Mac OS is,
because the second-hand market for Macs is so strong
that people will buy older Macs.
There's a whole series of YouTube channels
of people reviving old Macs and keeping them running
with whatever the latest version of Mac OS is
that they'll run.
And for some of them, it's older than Catalina.
And people have these Macs kicking around.
Like, I've got a MacBook Air kicking around here,
and that's not running Catalina.
So I don't think you can be super confident.
Like, sure, if you're following the gravy train
of people who are always buying and revving
to the next device every year,
if they're doing that annual update.
But I think your average Joe buys a Mac and keeps it
until they run it into the ground and then buy another one.
I agree.
You're an average Mac user, absolutely.
But where Apple gets you is certain hardware
requires Catalina, and certain software like Final Cut
to have eGPU support also requires Catalina.
So if you're a certain class, or Xcode, for example,
if you're an Xcode developer and you want live Swift previews
when you're writing an iOS app, you have to be on Catalina.
That's true.
And I also, while I'm here, I wanna mention,
I think it's interesting you set aside a budget
of like 50 bucks to get yourself
what you might call a working desktop.
Right.
And I think it's interesting because that's the kind of model
that I think the elementary guys are going for,
which is, you know, give you your basic desktop
that has nice features, it's beautiful,
but expect you to pay for the little applications
that you need here and there.
Now, their model is slightly different.
It's not 30 bucks per application.
It's pay what you want.
But they're certainly striving to ensure
that developers are being paid
for the software that they develop.
And I don't think that's unreasonable.
I think it's a good thing that on Linux,
we're starting to see more of that prevalence
of people being paid for work they do,
which is really super common on the Mac.
And it's just second nature on the Mac.
You need a thing, you pay for it, right?
But on Linux, there's that resistance.
And I think it's slowly coming.
I think with elementary improving their software store story
and Flatpak improving their software store story,
I think it will only improve on Linux as well.
People will up the game.
I agree.
In fact, that's a bit where I was gonna go with this is,
what's great about Linux is you can have these standups
where something is tried like exactly that,
like what elementary OS is doing,
which you don't get with the Mac platform.
But I thought I should give at least a fair crack
at what you do get with the Mac platform.
And I think it's that third party ecosystem,
hardware, software, that they've really nailed.
And it's a real tight experience.
Right, I mean, we've talked about some of the advantages
of the SDK supports that are out there.
That's a very consistent platform and internal services
that are all unified.
Yeah, but you remember at the start of this,
I said Mac OS is a specialist OS
and Linux is a general platform that can be-
Yeah. Built into something.
I think it's easier to go from a general platform
into a specific thing than from a specialist platform
into a general thing.
And what Mac OS specializes in,
and I think you need to be really clear about this,
is it fundamentally lives and dies by Apple's interests.
When they're focused on other things like the iPhone
or maybe AR glasses one day,
the hardware and the software at the same time
suffer substantially.
You can still see the knock-on effect of this
evident on the platform today.
This 2017 MacBook Pro is a living example
of when they took their eye off the ball for a while.
And that I think betrays the biggest weakness long-term
of the platform is it will always live and die
by Apple's interests.
What it specializes in is being a strategic product
for Apple, which has complimentary benefits
for third party ecosystems because of the dynamics of that.
But it doesn't mean it shall always remain that way.
In fact, the transition to ARM could be a great opportunity
to lock things down even further.
Maybe every app now has to be signed by Apple.
Maybe that's enforced at a hardware level in the Macs.
So now Hackintoshes aren't as viable.
And just somebody writing software, building it,
and running it on a Mac becomes no longer tenable.
That's possible as long as Apple's customers don't mind.
They have to walk a line there,
but you can guarantee they're gonna walk the side
of the line that we're not gonna like very much.
It's a very quantifiable, predictable ecosystem,
and it has a premium customer base,
but it will always suffer that fundamental flaw.
Its master is not the owner.
Its master will always be Apple
because their whole platform affects your Mac.
So whatever their long-term version of the market is
will affect your Mac.
Over time, the ecosystem will get locked down,
and general operating systems like Linux
that have been built up into specialists
like elementary OS or Ubuntu
will really be our last refuge.
They really will, and so that's why,
even if we can never quite nail integrating
with all the eGPU manufacturers
or the people that are making cool editing hardware,
even if we can never really nail that,
the Linux desktop is going to be more important than ever
as these platforms continue to evolve,
but it might only appeal to certain types of users.
Different distros will appeal to different types,
but I think when we're thinking about the future of Linux
and trying to advocate for the platform
or trying to market for the platform
or trying to make it the best platform for gamers,
we need to be realistic about what it can accomplish
and what it can do really well,
and I think you just look at the success
of things like open-source software,
like VLC and Blender and Firefox, et cetera, et cetera,
et cetera, or Docker, to prove how successful free
and open-source software can be,
and then ask why Linux is still continuing to shrink
in a lot of areas of the market on the desktop.
Like the Steam stats, I know everybody hates these,
but they just came out again, and we're down again.
Meanwhile, the Mac's up.
The Mac went from 0.14% to 3.15% in February.
Is that possible?
And Windows dropped slightly to 96%.
Linux is hanging in at 0.83%.
It was at 0.9 in January.
It's gone down, but what's even more frustrating
is it's been years now.
Protons have been around for a year and a half.
Like it's been a while,
and we're still struggling to even crack
these basic numbers that computers that barely ship
with functional GPUs can kick our butts on.
Like we just have to be honest.
There's just certain use cases we're not the strongest at.
There's others we dominate, we're awesome at.
And I mean, I think they touched on this very well
in late night Linux.
Computing moves on, right?
We add new paradigms, and most people just don't care
that much about the desktop.
I mean, if you do, then Linux is there,
and it's a great option that you can specialize
and tweak and make your own.
But for the most part, since you can get
all these open source apps on pretty much every platform,
or you're using web-based apps anyway,
why switch what you have now at works?
And I mean, most normal users don't care that much
about the specifics of the tool that they have to use.
Yesterday, you and I were kind of making
a really bad comparison to like a Tesla,
which you could say like maybe the Mac is a Tesla.
It's got self-driving, it's very, very expensive.
Any maintenance you do on it, or like, you know,
wheel replacement, anything.
Gotta go back to that specific vendor.
Very expensive, versus a, what would be like,
what would Linux be, a Jeep?
What would it be, a truck?
It's a versatile vehicle that you've kind of
built up yourself over time.
You have easy access to the engine,
you can swap things out, no problem.
But if you want things like self-driving,
well, there's maybe not a standard solution for that,
and you're gonna have to assemble it yourself.
Right, exactly.
And there's different products for different types of people,
or some jobs require something that you can customize,
or some people prefer to work in an environment
that's more tailored to them.
The Mac users are happy to set aside a budget of 50 bucks
to solve their problems.
The Linux users are like, well, that's just built in.
Or if it's not built in, it's an extension away.
I wanna chime in here a little bit on the Mac conversation
and the Steam survey conversation.
First off, I've never used a Mac to play Steam games on,
but I have used Linux and Windows.
I have a 2015 MacBook Pro that actually runs
elementary Pop OS Ubuntu pretty good.
So you don't have to,
I think they still make decent hardware.
I think you could debate that with their latest
butterfly keyboard and touch bar and all that.
But that 2015 that I have is still a great little machine,
and it runs Linux great.
And me personally, for my workflow, which is daily on a Mac,
I haven't spent any money on the store
to get any of these little personalization apps.
I literally have the Adobe Creative Suite,
Mumble, what we're recording on now,
Audacity, Quossel, and VS Code.
I wanted to have it like my workstation,
like where I have menu meters,
and it's something where if I was gonna live here,
how would I really wanna customize it?
Like I can customize an OS that I prefer to use.
That was my philosophy there.
And it's clear that it's doable,
but my home for that kind of mindset is better on Linux.
And I kind of like the idea of embracing Linux
as a professional power workstation.
That's why I find where Gnome Shell's going
and what it's fixing.
In the back of my mind,
when I read that news story we did today,
I hear this is going to make it
a more professional grade workstation.
Something that's faster, cleaner, leaner,
better put together.
And I'm surprised, but kind of pleased to see
that I think System76 is on a similar line of thinking.
We sat down with two individuals, Maria and Michael.
Maria is a UX architect,
and Michael is the product engineer
and one of the maintainers of Pop! OS.
And I think they're seeing some demand from power users
to add features to the Pop! OS experience,
and they're starting with tiling in their 2004 release.
So both Maria and Michael from System76
are joining us today to tell us a little bit
about the advances they're making in Pop! Shell.
Michael, could you describe it to us?
Pop! Shell is advanced tiling window management
for the Gnome desktop in Pop! OS.
That is a nice, concise elevator pitch.
So we're bringing with 2004 version of Pop! OS,
it's tiling inside of Gnome Shell.
It's not replacing Gnome Shell?
Yes, inside as an extension.
This is going to be something that will really appeal,
I think, to power users.
I'm kind of curious about that,
because normally when I think tiling,
I do think sort of advanced users,
maybe people who are using a more niche distro than Pop! OS
or who really like customizing their desktop,
but this seems, I played with it a little bit,
this seems way more accessible, and I'm curious,
what are the motivations for adding these
quote unquote advanced features
to an otherwise very friendly shell?
Everyone at System, or at least most people at System76
are using tiling window management,
and many of the members in our community
have also been using i3.
So it's popular inside the team, huh?
Yes.
Maria, I thought Pop! OS was, this is my bias,
but I thought it was a distro for new customers
that were buying their first Linux laptop.
I don't think we necessarily defined it that way,
but there is certainly a large subset of our users
who are very new to Linux.
Apparently Pop! OS is also, we found out,
very popular among those newcomers, if I can say so.
So part of the motivation, I think,
behind trying to make tiling more accessible
and create maybe a better, more easily approachable system
to actually enable not just power users,
because power users obviously is our largest concern,
but we also make it easy for anyone
who wants to try using the tiling manager,
because we see a lot of value in it.
Sure, and so is it fairly easily invoked?
Michael, if I'm a regular Gnome Shell user,
can I just start experimenting with this
and then turn it off if I don't like it?
How is that process gonna work for users?
Yeah, there's a pop-up menu
that you can toggle the features on and off.
Nice and easy.
I noticed that you've also added a launcher sort of facility,
and I'm wondering, what was the motivation there?
The motivation is simply that
if we're already doing searching for Windows,
you may as well just throw in applications launching as well.
Sure.
Okay, yeah, no, that makes sense.
I have kind of a technical nitty-gritty question
that surprised me when I noticed it.
And totally correct me if I'm wrong here,
but is TypeScript the primary language
being used to design this and write it?
Yes, it's the only.
Now, that is an interesting choice.
I've heard a little bit about TypeScript,
and what I've heard has impressed me,
but it wasn't probably what I assumed going into it.
I thought it'd be something super crazy,
like Rust, or really kind of high-level like that.
Can you talk a little bit about using TypeScript
and why it works for this?
Well, ideally, we would like to use Rust,
but you can't for GNOME extensions.
And using JavaScript is very painful if you're used to Rust.
I bet.
TypeScript is the best choice.
Have you run into any issues getting that all to work nicely?
I mean, I know TypeScript can compile down to JavaScript,
but any issues making that play nicely
with GNOME's implementation of JavaScript?
I have a sed script, which fixes
the little discrepancies.
Oh, that's perfect.
Yeah, that'll solve it.
So what's the long-term play here?
Is this going to develop into a full-fledged tiling extension?
Yeah, it's planning to do that.
What should our expectations be going into the 2004 release?
Much of what you would expect from I3,
it should work in here with this extension.
Wow.
And is it portable outside of POP?
Yeah.
Well, there you go.
Good to know.
You just have to be on a more recent version of GNOME Shell.
Definitely.
Yeah.
Well, that is the essential trick right there.
If people can try it out, it might draw more people in.
Maria, did you want to add something?
Go ahead.
Yeah, I wanted to add to the question of what to expect,
because I think one of the relatively big things we
are trying to achieve is to make it easy to switch
between floating mode and the outer tiling.
So I think we see that as somewhat of a big difference
compared to how most of the other tiling we know
managers work.
So you're saying it's kind of nice
because you can just easily switch in and out of the mode,
so whichever one works better for that moment.
Exactly.
Yeah, I can see that, right?
You're in work, you got a lot of terminals up.
Maybe you want that to be nicely laid out.
And then you're at home on the couch,
and you just got a couple, and it's
easy to just operate normally.
Can I apply it per workspace?
Currently, you can.
Oh, now that I would use the crap out of, for sure.
Because I'm essentially doing it now manually on GNOME Shell
on workspace two and three, dedicated to email and chat.
That's great, guys.
Yeah, that's the plan.
Well, thank you for coming on and just telling us
a little bit about it.
We just wanted to kind of get some of these questions
answered so that way we could talk about it intelligently
and inform the audience.
I appreciate you taking a few minutes to share it with us.
Oh, of course.
Thank you for inviting us.
Oh, yeah, guys, for sure.
Maybe we'll chat when it's all done, too.
Is there anything else you want to add?
No, it's just only that we are very
excited about this extension coming up,
and we keep working on it to make it the best user
experience possible.
We're excited about it, too.
It's nice.
Definitely.
And I think it's going to be a nice differentiator for Pop OS
as well, which is pretty cool to see these things developing
over time, which I suspected would start happening.
Yeah, that was one of our main motivations.
Yeah.
Well, very cool.
Well, I look forward to trying it out.
Thank you.
I'm feeling the hype.
I want to try out that.
I want to try out 20.04.
It's pretty nice.
And just having this as a little extension on top of GNOME,
if you want some tiling, the auto tiling,
it's kind of impressed.
It just popped up a couple of windows,
has the nice little edges, the gaps between windows.
Even for being pretty new, not really released yet
or ready for anyone to use it, they've come a long way,
and I think it shows a lot of promise.
So are we all cool with extensions now?
Is that?
Is that?
I'm never sure.
I'm never sure.
There's an official tool, Chris.
I'm always behind.
I'm always the guy that's not for extensions,
and everybody's using extensions,
and I use all the extensions, and people don't
use extensions.
I mean, it might depend a little bit, too.
GNOME 26 is throwing some resources behind this
rather than a random one-off extension
someone wrote two years ago.
Is that it?
That's it.
That's the difference.
I mean, that's a part of it.
There are seemingly some fundamental issues,
but I guess it does come down to does it work for you,
and do you have issues with it?
Kind of feels like things are shifting, though,
with GNOME Shell shipping that official app and whatnot.
I'd try it.
I think I'd try it, especially if I could just go to GNOME
extensions and just turn on, turn it off.
And if anyone does want to play with it, it's really easy.
You just need TypeScript installed.
There's a makefile that'll build it and install it for you,
so that's really easy.
And you need to be on Pop OS 2004.
Well, aren't you already?
I just assume.
There's that little detail as well.
I did get a sneak peek at the Superfan event,
and I was really blown away by what I had seen there,
just even in that early development.
So I think this is interesting, especially with extensions
and the thought for me, anyway, that KDE, for me,
kind of comes with everything baked in.
You have to dig and hunt and find it and apply it
and get it all set up.
And that's cool, no problems with that.
Whereas, to me, GNOME kind of takes a different angle,
and here are extensions that you can add on to your system
to add this additional functionality.
So I think it's just two different ways
to look at the same problem, personally.
Yeah, I mean, I'm glad they're developing it.
I'm glad they're putting the resources behind it.
It's open source.
It's going to be cross-distro.
I think that's a net win overall.
But I think it kind of makes our overall point
that this is an OS that is really
well-suited for advanced users, much like of previous eras
where there were people who loved to build radios,
or there were people who loved to tinker on cars.
There's another generation now that is of a similar wiring
and has found Linux, I think.
That's so interesting.
How else could System76 do this, right?
I mean, they're not going to build their whole own operating
system.
That's probably too much to ask to secure and implement
all these features.
You can't really rebadge Windows or Mac.
But Linux, have at it.
I'm dying to hear what you think of it, Bopi.
I think it's great that they're innovating
on top of all the work that others are doing
and being able to deliver what their customers ask for.
So their customers clearly ask them
for bespoke, beautiful computers that are high-performing
and have open-source internals.
And they've delivered.
And now their customers are clearly
asking them for features in the desktop that
don't ship by default in either Ubuntu or upstream GNOME.
So they're delivering them to their users.
It's exactly what Linux is all about.
You build a solution for the problem you have.
They do have a pretty tight loop there,
because they're the support for the hardware as well.
So in theory, you're probably getting
a decent amount of direct customer feedback,
maybe in a channel that's more unique to traditional distros.
They have a really active Mattermost chat room,
chat client thing, where customers and users who
are clearly running Pop OS on something that's not a System
76 hardware, and they're asking technical questions,
and the developers are there.
All the familiar names you know from System 76
are in there answering their questions.
So yeah, they have a direct line from their developers to users.
Yeah, interesting.
Would you give it a try?
Yeah, sure.
I'll give it a try.
I didn't really get on super well
with tiling window managers.
And right now, I'm in a mode of trying
to stay as close to upstream stock Ubuntu as possible,
because we've got this little LTS release around the corner.
So I kind of need to test that, yeah.
Yeah, maybe an after-release kind of thing.
Yeah, or on another machine.
One of my other many, many, many thing pads, yes.
Do you think it's daily driver for somebody
who's willing to risk it?
Well, what, 2004 or?
Yeah, yeah.
Yeah, totally.
I mean, the standard caveat is don't,
because it's not production ready yet,
and it's not supported.
But if you're an adventurous kind of gung-ho Linux
enthusiast, then yeah, totally do it, totally.
Feels like things are shaping up pretty good.
Obviously, the last couple of releases
have been really solid.
But the ZFS support's getting to a special state.
You've got this new release of Gnome Shell
that's looking like it's going to be really good.
Could be another one of those.
I mean, you guys got to knock this off.
You got to ship it late or something.
This is a good one.
I've been using it for a while, and since I've
formatted my drive, I've got a clean install.
And by crikey, this is faster than it was before.
It really is.
It's much better.
So I'm really happy with this.
Yeah.
Wimpy tweeted recently, I think there's
a lot to be optimistic about for the desktop, for Linux desktop.
The other evening, I watched a live stream
using Ubuntu Focal with Gnome 3.35 and Firefox.
The streamer was using OBS on Ubuntu,
and I was having a video call with a friend at the same time.
And that's just it.
It's like there are areas where Mac and Windows are going
to have us beat for a bit, especially when it's working
with an ecosystem of software developers and hardware.
The industry that's already bought in.
Maybe the elementary OS guys can help change some of that.
But over time, we managed to check off another use case
box, and then another one, and then another one.
And then pretty soon, we're sitting here in the future
using our Linux boxes to basically do everything
all day long, every single day without issue.
I mean, OK, maybe more people aren't flocking to use Proton,
but that doesn't mean I can't use it.
It works great for me.
Yeah, and the truth of the matter
is you and I are able to do our jobs full time in Linux,
and it's not a compromise.
It's not like bending over backwards like it used to be.
I don't have any non-Linux devices,
I mean, as long as you're including Android in there.
Yeah, and whatever it is on your router.
I mean, who knows?
It's probably some net VSD.
Yeah, and so for a lot of us, those boxes
were checked a while ago, or for some of us,
just checked recently.
Thanks for listening, glad you just found us.
Every year, it's like we check another one or just a few more.
Sometimes it happens so subtly we don't even notice.
So if you take a really, really long-term look at it,
it's the best it's ever been right now,
and it's pretty great.
But if the momentum even continues at the pace
it's been, eventually a few more boxes will get checked off.
Another thing, I mean, you look at these improvements
with like PipeWire and GNOME, who knows what's possible.
Mr. Payne, before we go, what do you say we do some pics?
Oh, yes, pics.
I like this first one, Cat.
Cast all the things allows you to send videos
from many, many online resources to your Chromecast,
or local files, it turns out, too.
Yes, I mean, so there's some tools
that are great for sending local files.
There are other tools or websites
that work well if you want to stream from some URL
that you've got, like maybe a HLS stream to the JV feed.
Yeah, that works great.
So that'd be a really super easy way
to just take that URL and just get
a blast of your Chromecast.
Yes, without, you don't have to futz with Twitch or YouTube
or any sort of thing that might show you ads
or take over your display.
Chromecast can just play links.
And much like YouTube DL supports
a lot more than YouTube, Cat seems
to support all kinds of online services.
So it has like integrated support for YouTube DL,
so you can paste a YouTube link.
Oh, it's literally using YouTube DL.
Yes, and then YouTube DL will go grab the actual URL
to that video, and then the Chromecast plays it directly,
which again means you don't have to fuss about using YouTube.
Yeah, or no browser with an extension, no Chrome required.
Yes, oh, and if you have an MP4 file that you'd like to play,
including subtitle support, let's say
you've got those subtitle files already sitting on your disk,
Cat can do that too.
And that's just over the land then.
Yes.
Hmm.
I wonder if that even goes through the Google servers
when you do an MP4 file like that.
No, I think it just talks over the Chromecast advertise itself
as over with MDNS.
And the syntax is super simple, right?
It's like cat command, and then what?
Yeah, you can install it with pip because it's Python.
And then cat, it's got a helpful little help doc to tell you,
but cat cast, and then either your URL or a path
to the file on your file system.
How does it know which Chromecast to send it to?
It will pick one.
I don't know how it picks the device.
It might be like a Google Home type setting involved,
but it does have support for specifying the Chromecast.
OK, so you could just give it a name of a Chromecast,
and then it's all using probably MDNS, right?
Cool, nice one.
That's cat.
We'll have a link to that in the show notes
at linuxunplug.com slash 343.
You can also tell it to just display.
If you want to display a web page on your Chromecast
without having to cast from your laptop, say, it can do that.
And there's a config file, so you can make aliases
for your Chromecast if it's got a long name or something
like that.
You just want to use that all the time.
So yeah, this is my new favorite Chromecast tool,
and I strongly suspect it will be a part of my daily life.
That's pretty cool.
I'm going to get that too.
Thanks for finding that.
And then Mr. Bacon rolls in with the Silver Searcher this week.
It's a code searching tool similar to ACK,
but it says it has a focus on speed.
I like that.
I like it fast.
Yeah, so buddy of mine recently reached out to me,
and he was like, hey, have you ever used Silver Searcher
or covered it in a pic?
And I was like, I don't believe that we have.
But essentially, it started off as a clone of ACK,
and they claim that it's five to 10 times faster.
So get on it.
Get your code searching done quickly.
What do you think, Wes?
What do you think?
You're going to do some code searching?
You have something else you like.
You want to do a third bony pic?
Yeah, no, I definitely like the Silver Searcher.
It's a fantastic program.
But I mean, Chris, you've just got this rule now.
Silver Searcher has a bunch of C involved.
Oh, yeah, no C.
You don't allow that.
You're Rust only, as you make clear.
Right, only Rust is what everybody knows.
I say that.
There's no C code allowed in the studio.
So for that, I have RIPGRAP, which
is in exactly the same sort of vein, but is made in Rust.
And it's so fast.
It's really just great.
And because it's Rust, it's really easy.
The release page, you can just go download a binary,
stick it on your path somewhere, and away you go.
I can't believe you managed to bring it.
You know, we almost went the whole episode
without our epic Rust watch.
Technically, you've got to warn me.
Epic Rust watch on Linux Unplugged.
An update from Wes Payne on something else that uses Rust.
There we go.
See?
I just, it's obligated.
Yeah, ever since we hired that new soundboard guy,
it's in the contract.
Well, that brings us to the end of this week's program.
Thank you so much for listening.
Thank you to the Mumble Room for stopping by and hanging out
with us here on a Tuesday.
Next week is WSLConf, which has just
been converted to an online-only conference,
but come virtually say hi to us.
We'll be there.
Yeah, we'll be there.
We're still going to be live.
We've decided we'll still do the show at the regular time.
So Tuesday.
No excuse.
Show up.
Jupiterbroadcasting.com slash calendar for the lifetimes.
I'm at Chris Lass.
He's at Wes Payne.
The show's at Linux Unplugged.
Go check out the Ubuntu podcast, and we'll see you right back
here next Tuesday.
I'm Chris Lass.
The Unplugged program.
Ba-ba-da-ba-da-ba-da-ba-da-ba.
All right, well, so JBot was down for a bit.
It's back up now, JBtitles.com.
Yeah, we didn't lose anything, so go vote.
Oh, really?
Keep suggesting.
We've only got, it looks like, six of them right now.
OK, OK.
So we were talking about this earlier.
I want to kind of go around and see if maybe people
in the Mumble Room remember.
Poppy, what was the first expansion slot standard
that you recall when you started working on computers?
Or working on computers that you dealt with?
A standard, or just a slot that I would plug things into.
The slot type.
Mine was like when New Bus.
And then I remember I had lots of ISA cards.
That was sort of when I got into it.
Yeah.
Every time I watch retro gamers building 486 machines,
and every time I see them with a Visa local bus
on the end of the ISA slot, it makes me sad,
because I backed that.
And I bought loads of Visa local bus cards, super long ones.
And that was a dumb idea.
I should have waited and got PCI, because that
was obviously the winner.
But yeah, ISA was probably.
I remember my first PC was an Epson 8086 with a turbo button.
And it had ISA slots.
And what were you putting, a modem in there,
or a sound card or something, a Sound Blaster?
I actually put an external floppy drive,
because the internal floppy drive was 5 and 1 quarter inch.
So I had to get an external 3 and 1 half inch,
and had to put a card in for that.
Right.
Sure, you got to put a controller card in there
with a big old cable to connect to the external drive.
Oh yeah, it was beautiful.
Beautiful white, pure white floppy drive.
You need that full bus speed when
you're reading those 3 and 1 half inch floppy disks.
In fact, that first PC I had came with an MDA graphics card,
monochrome display adapter, which did no graphics.
It was text only.
And I managed to acquire from where
I worked, my very first job out of college,
there was a Hercules graphics card kicking around.
It was just kicking around in a cupboard, and I got that.
And the upgrade from text only to graphics
was just like chef kiss, so good.
Oh, my first big video card I invested in was a Matrox AGP.
Oh yeah, an AGP.
It had an expansion RAM module as well.
And it came with the first Tomb Raider PC game,
as like a see what you can do with your upgrade.
I was so dumb.
I made the mistake of choosing a motherboard that
had Visa local bus.
But I also made the mistake of buying an IBM PS2 that
had the microchannel architecture.
So I couldn't buy any cards for that thing.
That was just like, came with what it came with,
you're never going to upgrade this thing.
MCA, buddy, MCA, which they thought
was going to be the big thing.
I think my first graphics card was the Riva TNT2,
or I think it was the Rage TNT2 for AGP.
And then shortly after that, it was a PCI Trident 8 megabyte
card so I could run Linux, because it
wouldn't run into the AGP.
Trident Video Cards.
Oh, that name I've seen a million times.
You know, the IBM PS2 was released April 1987,
32 years ago.
Wow.
Yeah.
Which, as the name suggests, is where the PS2 port came from.
And it was a rocking way to run Windows 2.0.
They also had a port of AIX to the PS2 back then,
which sounds horrible.
Could you imagine AIX on a 386 processor?
I know, I don't want to.
Oh, DOS was bad enough.
It's a better world now.
Yeah, it is.
It is.
What about you?
Do you remember what your first interface was?
I remember the thing about AGP, the thing that dawned on me
was, oh, they're going to be changing this all the time.
Like, they just kept getting, like.
Yeah.
I think AGP was the first time I was really sort of bought in
and had got, like, an expensive card to attach to my machine
before I just sort of stuck with the defaults.
What about Mumble Room Carl or Brent?
Either of you have old PC memories or byte?
I stepped into the computer world
when Windows 95 was around with the AGP.
And I still have an AGP video card around.
Yeah, that's coming in handy one day.
You might need it.
You never know.
Surely there's, like, a Thunderbolt AGP adapter.
It still has the VGA and the S-video out on it.
Oh, yeah, of course.
Man, VGA is still around.
I think I had an S-video out was my AGP card at the time.
And I had an old TV I was using with a second monitor.
It was gross.
Yeah, yeah.
I remember when I finally got my hands on a Sony Trinitron
CRT, which was the flat CRT.
Yeah, really nice.
Really nice screens.
Yeah, I remember those.
I still have a Trinitron at my mom's house.
My very first TV I bought with my own money was in 1988.
And it was a 14-inch Sony Trinitron.
And I watched The Matrix on DVD when that first came out
on that 14-inch in widescreen letterbox format.
Oh, happy days.
Ha, ha, ha, ha.
