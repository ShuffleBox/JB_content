This didn't make it into the show, it's just not really on theme this week, but I think, Brent, you'd really appreciate this.
The SATA hat, and there's a couple of these out there for the Raspberry Pi or the Rock Pi, with varying degrees of success, but there's a new one out there
that lets you put a whole stack of disks. Look at this thing.
Up to four SATA disk drives connected to this hat that then connects to the Raspberry Pi 4.
And they're starting around $35. I don't know, can't vouch for it.
One thing I'm worried about is power. That's a heck of a lot of power, right?
I was thinking this is going to be like an e-serial ATA, like the external version, where the drive's powered by something else and you're just making a connection.
That would probably be a lot easier and much smaller and much better, but this thing is like a drive, like it's a toaster right onto this, right?
Yeah, although on the bottom side, they do have a Molex power connector right there, and there is also a USB-A port.
So now you need a power supply beside your Pi?
Yeah. Yeah, you will need a standard external ATX power supply, and it'll need to be at least 60 watts if you're going to do all four drives.
That's what's great about this, especially when you look at, they've got a photo here, and we'll have a link in the show notes, set up with 3.5 inch drives, plus you got your power supply.
Like, what are you saving in space? You still need a whole ATX case for this thing.
And if you're going to sandwich all those drives together, I think they recommend a fan, too.
Oh no.
So you've basically, at this point, just built the next ATX PC?
But slower.
Hello friends, and welcome back to your weekly Linux talk show. My name is Chris.
My name is Wes.
And my name is Brent.
Hey guys, well guess what? Coming up on this week's episode, I've been wondering if we're witnessing the development of two kinds of Linux systems.
One that's for tinkers and enthusiasts, and one that's built to be absolutely bulletproof, but you have to totally change the way you've been using Linux.
But just how practical are these systems, and what are their limitations for real users?
So the three of us try switching our workflows over to Silverblue. We'll explain why.
We'll explain how it went for each of us, good and bad.
And then I'll talk about why maybe I see a bit of a fork in the world of Linux coming up.
It's not like it's an overnight thing. It's not like it's happening right away.
But slowly but surely, there does seem to be two different paths forward.
I think latpacks play into this, and snap packages, and systemd, and containers. They're all kind of coming together to create a new trajectory for a new kind of base operating system.
It's going to completely change the way you interact with your Linux system as a desktop user or as a server once it lands.
That's what we're going to be looking at, you know, no bigs.
No big deal.
Are you talking about NICs again? This feels familiar.
Hey, hey, I didn't say it.
Oh, no, but we'll get there. But before we go any further, we've got to say time-appropriate greetings to our virtual lug.
Hello, Mumble Room. Welcome in, everybody.
Hello.
Good evening, Cody.
Hey, Brent. And last but not least, hey, Wes.
Hello. I love it because I feel like we've got more and more folks in the quiet listening just getting that high-quality, low-latency audio feed now.
That's a special crew.
And what I think is fantastic about that is they could always pop down into on-air if they needed to or like in the post show or if like in the future they want to join us for an office hours or Linux Unplugged and they do want to join us in on-air, they're all set up.
That's pretty great.
Details at Linux Unplugged dot com slash Mumble if you'd like to participate in our virtual lug.
And I also want to say a big good morning over to TailScale.
This is a tool you've got to try.
TailScale is a mesh VPN protected by WireGuard's noise protocol.
We love it. We use it.
It'll change the way you work.
It's I love it so much.
I have virtual machines.
I have VPSs.
I have physical machines.
I have mobile devices on TailScale.
So go say good morning to the folks over at TailScale.
Try it for yourself on 20 devices for free at TailScale dot com.
Maybe let them know Linux Unplugged sent you.
All right. And then one little other bit of deets that we're just going to be covering at the top of the show for a little bit as these events are super close.
Just a few days away at this point, the London meetup is nigh very, very close.
Meetup dot com slash Jupiter broadcasting for all of this.
We're only feeling a little bit of FOMO out here on the West Coast.
There's there's going to be like one hundred and fifty people at that meetup, I think.
I don't know for sure.
I think having it outside was a bit of brilliance.
That was a good idea because you're going to need the space.
And then are we ready to announce this, do you think?
How are you feeling? You good?
I mean, I assume you looked at the I looked at it.
I made a couple of tweets. If it's Chris Fisher approved, then who am I to object?
He was waiting to see if it was Westpain approved.
I guess we'll just have to blame brand if it doesn't go well.
Yeah, I don't even know what this is.
Our JPL lottery is up and live at Linux Unplugged dot com slash JPL.
So we have a West Coast road tour coming up.
Long story short, at the end of that road tour, we're going to be at JPL and we're going to get a special tour down at the Jet Propulsion Lab.
And we can bring about 15 of our friends.
So what we're going to do is ask that you put your name into a virtual hat.
We have a submission form that we have running on a next cloud instance of ours that we use for this stuff.
And then we'll write like a little bot like West is going to run like a little Python script or something.
You know, he does how he does. You know him.
And we'll pull a list of names and a list of backup names in case somebody can't make it.
But we do ask that if you do fill out the form, please only fill it out if you are in the area and can actually make it to the event because there are just so few slots available.
It's fine if you got to travel to be there, but you have to be able to make it.
And so we will probably run that as the event gets closer and then we'll get everybody notified so that way they can make the travel plans to Linux unplugged dot com slash JPL for the lottery to get into the JPL tour.
And again, if you're just on the West Coast between Seattle and Pasadena and you'd like to do a meetup, we have a whole bunch scheduled and all the details are at meetup dot com slash Jupiter broadcasting.
All that's over there. There's a lot going on.
I feel like we should we should start like collaborating and planning on our end a little bit on the trip eats very much.
So we did get a team Airbnb. So that's all settled and figured out.
We got to like dial in like when Brent gets here before the trip because we got the studio projects we got to do.
That's true. And maybe just learning this. But, you know, he didn't object. I think we got him. That's how it goes.
We got a whole lot of stuff to plan, really. There's still so much, but it's going to be really my understanding is we're still going to make some shows during these events.
So we got to think about that probably. It's going to be really good, actually.
So to wrap all of this up again, the London meetup is August 5th, just a few days away as we record.
And then the meetup at JPL will be September 29th. And there's a series of meetups before that and after that. All of that's a meetup dot com slash Jupiter broadcasting and the JPL tour lottery is at Linux on plug dot com slash JPL.
We also, of course, have links in the show notes.
Let's talk about this turning point that I think Linux could be at.
And it's again, I don't think we're rushing into it at a breakneck pace. I don't think everything's going to change overnight.
But I would be willing to go on the record, which I'm about to do right now.
The nature of the show, I'd say in 10 years, we're going to be in a much different space.
And this stuff's going to be a lot more ironed out, perhaps a lot more standard.
You're seeing it already. I'm talking about the two kinds of Linux that are out there now.
There's the old school kind that lets you do anything you want. These are your Ubuntu desktops, your Linux Mint desktop, your Manjeros.
You just, you know, all those types of desktops, you just have full access.
If you're a root user or whatever, you can do anything to the system. You can install anything anywhere.
It's great for tinkers and we've made it work really great as a desktop and server operating system.
That's one of the traditional Linux.
And now there's also and they've been around for a while, like in the case of Nix, a decade, and there's many others.
And Chrome OS is technically this type of Linux. Endless OS is technically this type of Linux.
And Silverblue is this type of Linux. And these are your immutable Linux's.
The ones where they're solidly reproducible and you can roll back if something goes wrong.
If you do an update and a botch is your favorite application, you roll back.
If you think of it more as like it's it's an operating system that rides almost on top of Git, only it's your file system.
And it's being managed with check ins and check outs and that type of stuff.
It's a completely different approach. And in these scenarios, as an end user, you sometimes don't get access to a typical package manager.
You're not supposed to write to that directory. You know, you maybe maybe can't do anything outside your home directory at all.
And if you want to add an application, you're really only supposed to do it through Flatpak.
That type of scenario where you can't just go in there and tweak something.
Or if you want to have 32 bit libraries, you don't just app get install the 32 bit library packages.
It's a much more intentional where you have to really think about the modifications and changes you're going to make.
But the end result is the system's a rock. You turn it on. As long as your hardware is functional, you know your Linux operating system is functional.
It kind of is more like an appliance. And I think that's why you've seen this type of operating system design.
Really just take over mobile and appliance devices completely.
This is pretty much how all mobile devices are done is this sort of design is how iOS works.
It's how Android works. And now we're getting to the point where we've taken lessons from containers.
We've really kind of looked at all the different options out there. We know about get we know about these tools.
And how would you build a desktop around this? And could you make a workstation OS out of it?
Could we use it? Could we use it as a studio OS? Could it work on a laptop that you want to game?
Could it be great for Brent's HP Dev1? Would it work for years?
These are the kind of questions that we had going into trying something like Fedora Silverblue.
And Silverblue really felt like a great chance for us to try one of the distributions that's the furthest out ahead in this area for the desktop experience.
The idea being that you deploy this kind of system and then you're always going to get the desktop you expect.
You got a problem. You roll it back. There are much more modern, much more advanced, much more capable package manager system that makes things like apt look really old.
In fact, George Castro has a great tweet where he went and did the math on this one.
And this is so like. I don't know. It's kind of not surprising to me, but I think the listeners are going to are going to probably think that I've never had a problem.
But he says I went and ran a query on 11 years over at I think it was Stack Exchange or something like that.
Sort of then by view count looked counted up all the problems users ran into and then looked at the top 200.
And they all basically sort out to essentially be package manager related issues or installing software on Linux.
I'll have a link in the show notes. There's a spreadsheet that he put out.
And when you look at like the top problems that people have been asking questions about in trying to fix on Linux.
It's dominated by package manager problems, package managers breaking packages, not installing, not knowing how to somebody trying to install a tar file.
I don't want to hit this point too hard, but I think all of us on the show have like these things are starting to show their age, especially apt.
And I don't mean I love apt, but yeah, right. I mean, it doesn't it hasn't seen that much love.
We've kind of got the new right. We've got the new front end bits, the apt stuff, which is nice.
Appreciate it. It's, you know, but mostly targeted at us humans and then didn't seem like it really fixed up much of the underlying plumbing per se.
It feels so slow to compare to some of these newer tools. But that's an aside.
It does make me think, too, when you're talking about just, you know, Georgia's tweet there.
It's almost as if at least for how computing has evolved and like who's using computers, how computers have spread.
If you think about like just how that's changed since some of these package managers were first introduced, maybe it's the wrong abstraction to too high.
You know, it might work well for us because we are OK with all the nitty gritty of putting our system together that way, but not usually what most other folks want to be doing.
I agree. I have thought for a while it seems like these systems that we have today, especially the Debian based systems and the Red Hat based systems were built for system administrators.
Who are managing the software. They might not even have an Internet connection.
Maybe they only have a LAN and they have local packages on their LAN and they are managing all of it.
Where Silverblue and Nix feel like it's more of a centrally managed idea.
You deploy it and then you just redeploy and redeploy and redeploy.
I think the end result sort of speaks for itself in terms of reliability.
But let's talk about actually using Silverblue for a little bit. I think, you know, that's the idea of why we want to try this.
First of all, Silverblue lives and dies on its flat hub access.
Like you really are going to be installing everything as a flat pack for the most part.
You can do RPM OS tree and you can install packages as a layer into your Silverblue system.
But ideally you want to use flat packs. And so that means flat hub.
And the problem is, and I believe they're going to fix this in 37, but currently as it ships in 36, flat hub in Fedora is filtered.
So guess what? Chrome doesn't show up. And some of the things that I wanted just weren't even available.
And that is frustrating when this is supposed to be how I get access to software.
And it felt Apple like, you know, like how Apple would control the App Store experience and lock it down.
So that way I don't get the wrong thing or something like that.
And that's not what I want for my workstation OS.
So I'm glad to see that's on the list of things to fix.
I think it might be more like 38 now, if what I remember last hearing.
But yeah, right. It's going to get fixed.
And it's not a huge deal for us because you just run, you know, whatever, enable flat hub and then you're off to the races for the most part.
Right. But if you're thinking about a system that's getting shipped ideally in a state that you're not going to be doing that much
configuration on customization on besides just this sort of, you know, oh, I need these things right now.
That's not great.
Once I did enable the rest of flat hub, which, you know, like you said, takes 30 seconds.
The instructions are super easy to find on the flat out website.
True. Yeah. That part is well documented at this point, which is nice.
I could see this if you wanted to, if you liked this idea of an immutable Linux that has snapshots that is very intentionally controlled.
I think I could be great for studio production.
I think it'd be great for a work environment. I think it'd be great for like a terminal server environment.
It's funny, though, in a lot of ways. And I'm curious to know if you guys felt this way.
Silver blue would be a lot easier if it was the Linux you started with.
If this was just your first experience with Linux, it would make sense because this is honestly how Mac OS works now.
Mac OS is a read only file system now.
And when you say like drag and drop an application into the application folder, that's an overlay.
That's not actually writing to the application folder. That's a read only directory.
And then your home director is the only place that's actually read writable.
And then they have an overlay area. And so if you're used to these concepts and you sat down and you use this as your first Linux, this wouldn't seem strange to you.
This would seem totally fine. The only downside I would definitely absolutely know you'd run into is all the guides online for everything.
I assume that you have access to your full system and there's very little silver blue specific documentation.
I suppose that is a benefit. It just makes me think of, you know, nautical folks rightfully complaining of like, yeah, your upgrade didn't go well because you followed half a dozen guides that made you make random changes to your system that you didn't understand.
So, you know, you're right. There's not a lot of help for you, but perhaps it prevents some from making a mistake.
I guess that's got to be part of the rationale here.
Things are great when they're packaged. If there's an RPM OS tree you can install or if there's a flat pack you can install, things are great.
When they're not available like that, you resort pretty quickly to just running binaries out of your home directory.
And my beloved tail scale was like this. Tail scale, which I have baked into every Nix I deploy, is got tail scale.
It's just like one of the first things you figured out.
Totally was. And with silver blue, I mean, I patched it together. I got it working.
I downloaded the tail scale binaries, which they do make as a tar model that you can just go get.
And I deployed that on like a bin folder. And then they have a little service you start and then they have a little user space demon you can run.
And then I went and got the gnome extension that connects to all of that. So I can actually manage it pretty well.
It's basic. You know, it's not integrated.
And I don't know if it's actually super straightforward or not to create a new system, be unified on silver blue and add a new service because I couldn't figure out how to make it work.
And so I just ended up running it manually.
Everything like that, like little edge case softwares are just a little bit harder on silver blue.
But if there's a package, if there's a flat pack for it, the experience is so smooth, you wouldn't even know what's going on.
And by the end of my experience, I had absolutely everything running.
I had to have flat seal installed because like things like element needed some additional privileges or else it would crash.
But flat seal makes it so easy to modify the permissions for flat packs.
Got all your flat pack apps listed there, all of their capabilities, you know, and you can just check on, check off.
And it really feels like a solid system.
And I got old DOS games going.
I got I got a whole bunch old retro DOS games.
I mean, just tons of stuff working.
Wine was working. I have steam working.
I got several steam games downloaded and installed on that thing.
And then I was also like once I got going, I also started having a lot of fun with things like toolbox.
Of course, you know, we've talked about toolbox before.
Oh, yeah. And this is just such a cool little idea.
It's it's it's kind of become even bigger than the last time I used it.
But toolbox lets you quickly spin up like by default of fedora 36 environment that you can work in inside a terminal.
And then you got DNF, you got everything you can, you know, you can install whatever you want inside this environment.
And it really cleverly mounts your home directory.
And so it's all really it looks like you're on your local box, but you're running inside a container OS environment.
And you can actually deploy Ubuntu and Arch.
And there's all kinds of suces packaged up for this thing because they're just they're just containers.
It's using all that great technology, the podman type stuff that we've got at the bones of.
Right. And toolbox can all just kind of put it together into a nice little experience.
And there's a couple of like it's like boxy boxes or something.
I can't remember in the in the software that you can install.
That's a terminal that's just dedicated for this.
I open up my terminal and I'm in a special environment and I will link to distro box in the show notes.
Which let's which is a tool that lets you do this on any distro.
So you don't have to be on silver blue or you have to be on fedora.
You can be on any distro and install distro box and they get to run these different containers kind of like WSL where you can have a bunch of different distros in a in a window.
So that's a distro box link in the show notes.
You start doing stuff like that with silver blue and then, you know, you're on this super solid base.
I started to really get into it towards the end.
It took me a while to get over the fact that it's not Nix and that it's definitely very desktop focused and all that kind of stuff.
But. Yeah, man, like I don't know if it could fully replace all my all my systems, but I put it on the dev one and everything worked.
And that's a big part of it. It's a whole open source graphic stack. It's everything worked.
It is a very solid experience.
So my intention is to keep it on there for as long as I can and see if I can go through an upgrade cycle and see what that's like, because I think I want to keep it as my daily driver.
I really liked it. And I think now it's let's keep going with this for a little bit longer and see if, you know, maybe this is my workstation OS for the studio, too.
We'll see. But in the end, it's a keeper, I think.
And I could see the appeal to keynote if you want the plasma version. I think it's a little bit on the fringe.
You're already you know, when you're using Fedora, you're already kind of like a little bit harder to find stuff, just a little bit harder to find guides and maybe a little bit harder to find software.
It's all getting so much better. And then you take on silver blue and it gets just like even a little bit harder than that.
So I don't think this is for average folks that just, you know, don't want a system they have to mess with, even though ironically, that's the goal of this thing.
I just don't know if it's user manageable yet, but I think ultimately it will be.
Well, I think I think you hit it on the, you know, live or die with flat pack thing is I think it depends on what user you're talking about.
Maybe LUP listeners? No. But like my mom, maybe. Yeah.
Because I don't I don't want her downloading random RPMs or Deb from the Internet and installing them.
Right. I want her to get the software from the store and know that it comes hopefully, you know, as a nice little flat pack and that kind of thing.
I keep having this feeling with silver blue where like the admin side of me, you know,
and I hear you like not, you know, struggling with some things and not being able to put more in a box or like messing things up in your toolbox and not on the system.
Like, yeah, I like that. Like, don't let Chris touch stuff under slash user.
But then I want to touch those things. So I'm a little conflicted on like I can I would want to deploy this elsewhere.
I don't know how much yet. I want to deploy it for myself.
Yeah, I think that's probably a lot of people are going to feel when you use it.
It's like, OK, this makes sense on a machine that's on the factory floor.
This makes sense maybe on a dedicated live stream machine or this makes sense on a work station that's in an office where you have a bunch of people who are just doing input work into like standard office.
We'd applications. I think it makes tons of sense in all those scenarios.
But if you know how to use Linux and you like to tinker with things, install things and all that, I just don't know.
I just don't know. But I guess we'll find out what you guys thought in just a moment.
Linode dot com slash unplugged, go there to get one hundred dollars and 60 day credit on your new account.
And of course, it's a great way to support the show while getting yourself a little something special.
Linode is really the Linux geeks cloud. Eleven data centers worldwide means there's something close to you, a customer, a client or your friends.
They've been doing this for nearly 19 years, so they have honed this thing in.
They have polished this thing until it shines. So go try something, go deploy something, go to take advantage of that one hundred dollars and see why we run everything on Linode.
Stuff for our team, stuff for ourselves and stuff that is audience facing.
Linode is always rolling out screaming fast new hardware like MVME drives, dedicated AMD epic CPUs.
You know, if you need to do a little audio and video transcoding in the cloud like we do, a dedicated CPU can make a big difference.
Maybe you just want to run a game server. Again, a dedicated CPU can make a big difference.
And I hear from audience members who offload their machine learning to Linode's cloud.
How neat is that?
And I'm always super impressed by those of you who tell me how you use Kubernetes or Ansible or Terraform to manage your Ansible systems.
And of course, you know, I love their API. That makes it super quick and clean to get things spun up, to reboot a server, to take a snapshot before we do something crazy.
I'll even put the command line tool on my Linode box so that way I can initiate a snapshot from the interface when I'm logged in, like on, you know, the shell and get a snapshot on the node side before I do anything crazy.
You know, when I remember. But the tools are there. And the other thing that's really great is we've taken advantage of their object storage, their DDoS protection, their cloud firewalls.
I mean, you can really stack and mix and match as you like. And the best part is everything is really reasonably priced, 30 to 50 percent cheaper than the major hyperscalers out there.
And they're not like these crazy, esoteric, unique options that are only really viable on one hyperscalers platform and they use their own language and everything.
It's not like that at all with Linode. These are standards. It's Linux. It's open source projects. These one click deployments, you can go look how they put them together.
It all makes sense. It's all reproducible. It's so clean. It's just the best place to run apps on Linux in the cloud.
That's why they're giving you a hundred bucks to try it, because they think if you really do try it, you're going to like it.
A hundred bucks. That's confidence right there. So go try it. Support the show. Learn yourself something. Try something. Experience something. Linode.com slash unplugged.
I think you're really going to like it. One more time. It's Linode.com slash unplugged.
You know, guys, I went a little crazy this week. I met Alex's and he's got all these toys. So I figured I'm going to put silver blue everywhere.
So I got three projects for you. The first one I did. So I didn't do as deep a dive, Chris, as you did.
So I appreciate your perspective on it, but I did, however, sort of touch silver blue in a bunch of different areas.
So the first one I did was just in a VM on this neon box that I have here using and it went perfectly fine.
I did watch a video quickly just to get a sense of silver blue.
And I think Chris, that what you mentioned before the break was spot on, just explaining sort of how it works and wrapping your head around how it's a different paradigm.
If you don't do that, you're going to be really lost trying to use this. But it seems fairly straightforward.
The install process was super smooth. I really appreciated how easy all of that was.
I did run into a small error in the software center that I'm sure they're aware of.
Maybe we should check. Chris, I think you ran into this as well.
The software center is doing the background updates for you on the system, but the user experience is a little odd.
Because it sort of does the downloads for the entire new image of silver blue when you first launch it.
But the message it gives you is like what you would expect if you're just updating like the package index.
And so it takes like, you know, I'm here with this amazing Internet connection.
It took like a full two minutes. And I think you had to wait quite a while as well.
Right. Yeah. And of course, the first thing like you do within a minute or two once you got a fresh install is you launch software because it's time to load some apps in there.
And yeah, I got a really wild air message. It was a little bit different than the message you got.
I think it was exactly the same kind of thing, though. Basically, it was still refreshing all of its metadata in the background.
It wasn't really that obvious. There may have been a spinner up in the left corner.
Well, I did some investigating because I thought this is what's going on here.
I got to know more. And I figure if I was home, I would have just abandoned because had I been doing a bunch of downloads, which took two minutes here with like one of the best Internet connections I've ever used, I think at home it probably would have taken me like an hour or two or something.
So I'm glad I wasn't trying it back there. So I did some investigating and sort of because I was trying this in a VM, I could just wipe the system and try to get pretty darn easily.
Ha, ha, ha. Done with you. Right. So I thought I'm going to start again and do some poking around.
So I was able to discern that it it downloads the whole fresh new image when you first launch Software Center.
And that actually is great because then you're you know, you go to update and it just says, oh, you're ready to go.
Just reboot. So I think the wording they could change it quickly to something more useful. But that was actually a nice experience.
Exactly. Once it's done, it's a great experience. Yeah. Yeah. And then so as we do, I then thought, well, geez, I want to know how all this is working and get some more visuals.
So the RPM OS tree terminal command was actually super friendly, like just with the status. I don't know if you did some investigating.
Yes. So RPM OS tree status just gives you like the various versions that are installed and it even gives you some of those layered packages that you may have installed that you mentioned that you install with RPM OS tree install.
Now, that is a discouraged way to install software. It's like an as an as needed way to do it.
But one of the examples they gave in their wonderful documentation was fish and West turned me on to fish recently and I've been really enjoying it.
And I was like, oh, they're basically saying that they want me to try this.
You see how I got the credit for fish, even though you've been talking about it for years.
Next thing he's going to tell you, I tried this new text editor called Nano and I think it's pretty nice and elegant.
And so installing fish via the RPM OS tree was very interesting because it did things that you would never see with apt.
It shows you a few packages you need and then you install it. You could go. But this did like all sorts of crazy stuff.
I suggest everybody goes and tries it. It's like I don't know what it's doing under the hood, but it was a fascinating experience and then totally worked.
It was great. So but you have to reboot to make that sort of it's kind of nixie in that way.
You have to reboot to make it apply, which is can be frustrating.
There is a live flag that I think became standard in 36 or I don't know the reboot thing. It's not really a big deal.
See, it bothers me a lot. Oh, does it? I just don't reboot very often. Yeah, I'm with Wes.
But I think if you want the benefits, then that's a necessity because of the way it's engineered.
I'm not that worried about restarting service. I'm not worried about the race.
I get those for some systems for sure, especially in like like remote manage systems.
But like. Really, I'm not running that many services on my desktop, and then if something does go wrong, that's when I'm happy to reboot.
But like I just I just unless it's a kernel update, I really don't reboot that. So, yeah, I get that. I get it.
I'm not opposed to it, but that was one of the things that took me the longest to adjust.
I just you know, I just decided I'm going to embrace the reboot lifestyle because the damn thing boots fast.
It does really it boots really fast. I was like, fine. But yeah, you're right. That is a thing you got to appreciate and understand is you're switching over to a live image, right?
You're switching over to that to that branch now. So you're booting into that environment that has that version of the packages and whatnot.
And the great thing is you can go back. But the kind of tradeoff that they have there is to switch over.
You're doing a reboot. Yeah, I think if you've joined us on the next challenge, that will not feel out of place.
I think that's kind of necessary for this kind of paradigm shift.
But it would be interesting, though, touching on next to see some like declarative configuration to avoid maybe as many reboots.
Chris, I don't know. You set up all these crazy things. I don't know how many applications you installed.
Flatpak versus this layered packaging and how many reboots you did.
I did very few layered packages just because to me it felt I don't know, like it felt like the right way to go is flat packs and with flat packs is I go to flat hub and I just open up like all of them that I want.
I just sit there and I just tab, tab, tab, tab, tab, tab, tab, tab, tab, tab, tab.
And then I go and I I copy pasta all of like the names and they because they have the little install command below.
God bless. And I just copy that and I just paste, paste, paste, paste, paste, paste and then enter. And then it just installs all of them at once.
And it's glorious. And with the flat with the flat packs, you don't have to reboot or anything.
So I hit enter and it's done. And what's so nice now in modern versions of GNOME and and everything is everything's available right away.
The launchers are available in the search. It's indexed. So it's as soon as the apps installed, you can use it.
And so I went that way for a lot of things. But there's things on the command line. There's just system tools like I installed cockpit via RPM OS tree and just to play around and fish and those kinds of things I install via RPM OS tree.
And so, you know, when I say when I do an RPM OS tree status, I do have several layers listed there now and feels gross, but I get I get by.
I found it really nice to have the option because, you know, when there's there are things that you just can't find in the flat pack offering.
For some reason, neo fetch wasn't in there, maybe because it has to touch a bunch of crazy things. It's nice to have that option for those of us who want to dig in a little deeper.
You know what I was surprised by? Perhaps this will make sense in a moment, but I was surprised that in Nix, I have a much harder time getting no extensions working.
And in Silverblue, I just go to the extensions website and I just install the extensions. Let's pause right here before we get to the Raspberry Pi journey that Brent went on, because I do want to hear about that.
And let's let Neil jump in and just kind of touch on some things that we've mentioned, because I know, Neil, you've got thoughts on who these types of systems are targeted for.
And there's probably some other things we've mentioned that you want to touch on.
My feeling about Silverblue and Kinoite and similar systems like this is that they tend to they tend to hit opposite ends of the spectrum in terms of users.
So, like, you're either going to have really simple users who don't really demand much from their systems who want to use this.
Like I know, you know, someone throughout like grandma or whatever. Right. That's that's one side of it. But the other side of it is the people who what I like to call live in the container circus.
And they are super enthusiastic about, you know, the containerization of the world.
And, you know, they're willing to take all the downsides of operating in that world because they consider it the best method to deal with it.
So they consider, you know, in some respects, maybe the downsides are upsides for them and things of that nature.
But there's a lot of Linux users in the middle where this is probably not going to work super well because, you know, things like NeoFetch and Fish and whatever those the nature of those things, they're not easy to containerize.
Especially if you actually want to, like, plug them into your system and use them as part of the system.
Yes, our PMOS tree lets you layer them, but somewhat disingenuously, there is no straightforward method for you to know whether you're layering or not.
And within the graphical environment, you can't really see any of those things or work with it.
And it's it's pretty much command line only.
And that that's obviously a barrier for a large swath of users.
So where I see, aside from from those two, the if we step back a little bit further, the third potential target audience is managed systems.
Because if you consider Silverblue and Kinoite as demonstrations of what you can do with RPMOS tree, then things start fitting a little bit better because then you can use it as an idea of like in a corporate environment.
Maybe you have office workers and you need to make sure that they have XYZ software on all these machines.
And you want to make sure the configuration, the deployment is standardized and you want to be able to easily lock it down so that they can't do anything else.
Well, then you can produce your own OS tree using the RPMOS tree composing the core OS composition core OS assembler, which I think is the tool that's used for this and some other other RPMOS tree tooling, image creation processes, whatever, to create these OS trees to then feed into like Anaconda to pull them and mass deploy them to hundreds of systems.
And then they're chained to that and they update with that based on what the IT team wants.
This is essentially the Holy Grail for managed computers in a corporate environment because they don't need to worry about things like, oh, do we need GPOs or whatever?
Do we need, you know, insert XYZ remote machine, you know, configuration tool or whatever, because they basically statically define it server side.
The biggest downside to RPMOS tree based systems or really a lot of these quote unquote immutable desktop platforms is that somebody else had to make the decisions for you unless you were able to build it yourself, assemble it yourself.
And so keeping that caveat in mind, I think it starts to make a lot more sense where you're going to likely see these become popular.
I can see that. I think that's where you're going to see more of it.
And like my personal feeling is like maybe we'll see it for like example Fedora Mobile.
I know that's definitely one example where we're probably going to see RPMOS tree become more of a thing.
I know that's, you know, in the KD SIG, we're thinking about it for the Fedora Mobile KD edition.
Maybe some other places will do it.
But like for the regular desktop, for most users, it gets a little awkward and it requires a lot of extra overhead.
And there hasn't been a ton of thought into how to make the developer experience for the not just the developer experience, but the user experience seamless for dealing with this.
So, for example, Steam as a flat pack has a major downside in that you can't use an external data drive.
I don't know about you, but I'm not putting all of my all of my steam downloads and running my steam games from my home directory because that's it's going to fill it up immensely.
Things like that are really difficult to deal with with the way things are right now and could be solvable.
That kind of thing, though, right? Right. It could be.
The biggest problem is that everyone's thinking of solving this by modifying the applications.
Like in both Windows and Mac, the way that they're containerizing applications involves the applications not changing and that the OS layer or the toolkit layers are changing to account for this instead.
But nobody's thinking of making these applications work just out of the gate.
And because they're making the changes at the application level, because GNOME wants to change all of GNOME for GNOME's reasons or KDPlasma wants to change its applications to adapt for these whatevers.
It's leaving out that other class of applications where you can't change anything.
And so you need some level of indirection below the application to do it meaningfully.
Or they're never going to change just because the market share doesn't really.
The market share doesn't matter, right? Like so take, for example, all the portal stuff, right?
Do you know the only portal that actually works without application modification is the file picker one?
That's the only one because that the portal implementation is done at the toolkit layer at GTK or Qt.
But if your application doesn't use either of those, you're you're out of luck.
You can't flat pack it. Those are the kinds of problems that are just not being solved.
I look at like where it's so endless. I look at where they're going.
And I think if you take that out on a time on a timeline that's like 10 years, maybe they start chipping away at some of these usability problems.
And then you get to the situation where your mint type Linux distros, your endless type Linux distros are sort of almost just by like steak and potatoes.
Like all of them are OS tree based or some kind of system like that.
But then the systems that sys admins and maybe developers and people that consider themselves enthusiasts and power users, those are still traditional.
Absolutely. Yeah. That is where I actually see this going.
I see this going in a realm of if you're in a corporate environment and you're rolling out things to like people with minimal training, then I hate immutable as a term for this because that's not a correct way to describe it.
But we're going to go with it. These immutable desktop platforms are very, very good choices.
But once you start getting into people that need to like do things like at a level that kind of exceeds what this is able to handle, it gets difficult.
And this is where I think, Chris, you ran into way more problems because you're you're you're sitting on the edge of this a lot and you're hitting those boundaries very often.
And and I think that for your simpler use, like, for example, most people are probably going to be treating it similar to a Chromebook.
A Chromebook style model is totally going to work great with silver, blue or quinoa because the vast majority of these things are just not going to need to be layered in.
But as soon as you start getting into having to manage external capabilities, system extensions, drivers, it starts falling apart unless somebody builds a custom image up front.
And that is that's where you start getting into where corporate environments are probably going to want this.
They'll bake in firmware, they'll bake in drivers, they'll bake in all these other things.
And so so that's where, you know, I feel like some of this is a solution looking for a problem, but some of this is also where it's trying to solve a problem that most people don't need to have solved.
I think most enthusiasts, right, the like the people who are really going out and downloading Linux ISOs, they don't have this problem.
Right. It is absolutely necessary for growing the total addressable market of Linux users because you're targeting a different class of them.
And so I can always see, like, for example, silver, blue and quinoa being alongside the main workstation and KDE variants.
And personally speaking, as someone working in the KDE SIG, this is how I position the two.
I position them for different types of people. And when quinoa gets more up to scratch, there's still things we've got to do, things we've got to beef up, integration work that needs to be completed.
You know, once we're there, I see quinoa as the one for the simple user or the managed user.
Right. And then you get that plasma, baby. That's great. Right. And then the rest of it is the rest of it is, you know, whatever.
OK, so that's kind of where I'm seeing this is I'm really seeing like two types of Linux is really out there, two types of Linux desktops.
But, Brent, I wanted to switch back to the Raspberry Pi for a moment because I often treat my pies like an appliance. I've definitely played around with on and off over the last year with my Pi 400, creating like these different kind of always ready to go workstations like the idea.
Oh, crap, I forgot my laptop, but I've got this Raspberry Pi 400, which is the Pi built into the keyboard.
I've got that all hooked up and ready to go. What's the perfect OS for that?
And Silverblue, I've thought of I've right now I have Pop OS on there. I've been trying their Raspberry Pi build.
But I'm curious how your efforts went and if you managed to actually get Silverblue working on a pie for these are all important questions.
You know, before even starting this project, because there's, you know, been a pie behind me for a few weeks now, weeks.
I don't know. I paused because I was like, no, no, Chris is going to try this. Right.
I'm just duplicating efforts here. And then I thought, well, I'm just going to give it a go anyways.
And so I'm surprised to hear, Chris, that you may not have tried it. I did have to do a little bit of tinkering.
Now, I'm not that high initiated, so I did a little bit of tinkering to get the ISO to boot.
So I do have some resources here. I had to download and very simply put on the SD card a Raspberry Pi for UEFI firmware image that would, I guess, see a USB drive and be able to boot from that.
Once I did that, that was like a little tip that I found once I did that super easy.
My preferred end case was to install from a USB drive to another USB drive, and I was never able to get that to work.
This morning, I had a little bit of a light bulb moment and I just installed to the SD card because I'm not running this thing for a long time, but I wanted to get it going.
And I thought, oh, I think there's a way that I can make this happen.
So what I ended up doing was just leaving a small partition for that UEFI stuff, and then I was able to get the installer up and running and get Silverblue installed, you know, alongside this partition that I had made.
And so it's booted right now behind me. It's doing stuff and it is running without complaining any.
It is very slow for a variety of reasons. You know, this could be a hardware issue.
Clearly, SD card is very slow. Yeah, right. So I don't have that much experience to say, well, how slow is it compared to maybe the optimum setup?
I would say as a desktop, at least the way I have it set up, it is unusual.
Yeah, it's just too slow. Well, if I want to move the mouse, I got to move the mouse.
Wait for a sec or three and then the mouse begins to move and then I could do stuff.
Well, that sounds like a video acceleration issue out there. I'm sure there's work that can be done here to greatly improve this experience.
I was going to say, Brent doesn't have outrageous standards here, so his unusable is.
Can I just say, can I just say, that's true, you're right. Actually, we should appreciate that comment.
I was getting frustrated. Not in a bad way, but I mean, like Brent can use a lot of different systems.
He's not super picky about, you know, the performance side of things usually.
Yeah, yeah, I think that's a very nice way to say it. I don't need to elaborate. I think everybody understands what you're saying.
OK, now, can I just say, like, hmm, I.
Brentley, I wanted I wanted to I wanted to have this really, you know, gentle and wholesome and great Raspberry Pi experience with you.
Right. I wanted to have you sit down with a Raspberry Pi that had a USB SSD for its storage and it had a camera device attached to it.
And then I wanted to experiment with a compute module that had a MMC built in with a carrier board.
And instead, I feel like you've had the most. Well, perhaps appropriate introduction to Raspberry Pi is possible, I suppose.
You will be able to appreciate how far they've come next time you're at the studio and we mess around with some of the studio Pi setups because, yeah, it's.
Oh, there's really the peak Pi experience is the compute module on a carrier board with MMC storage, because what happens and it's beautiful.
Is when you boot from an ISO image, you just have to get any old generic arm ISO image now.
It's so wonderful. You know, you boot from an ISO image and it sees the MMC storage as a local disk like it, like just like a Dev SDA type disk.
And then you just install Linux on it like it's a computer.
And then when you're done, you disconnect the USB and you reboot and it boots up off its local disk like a real computer.
And it's so much better than what you're having to go through. So that seems so luxurious.
There is light at the end of the tunnel, just so you know. But it's hard for me. I wanted your first Pi experiences to be better than this.
But I feel like perhaps if you stick with it, you actually appreciates more where it's gotten to.
Once you get to use different setups. So don't judge the whole system while bottlenecked.
I do also appreciate the tinkering aspects. So there's something about, you know, staying up maybe a little too late and solving some problems that are lessons you don't forget.
And so I've appreciated that. But I think I think it sounds to me like what you're suggesting is I'm living in like Pi world from three years ago and not the updated experience.
So I'm looking forward to the upgrade.
Yeah, I mean, it is what you make it. You could put different stuff together. I'm sure from I mean, I'm sure Alex has drawers full of stuff. But yeah.
Oh, yeah. He's got a bunch of things like that. We're connected to it. But I haven't given myself the leeway to erase any of his data because I feel like that would maybe challenge our friendship.
It's not it's not a racing if you back it up and restore it afterwards. Just I'm just going to put that out there.
Bitwarden.com slash Linux. Get started with a free trial for teams, enterprise or yourself at Bitwarden.com slash Linux.
It's the easiest way to store, share and sync sensitive data. Full stop is what we use for our password management.
And Bitwarden is fully customizable. It's open source and it's trusted by millions of individuals, teams and organizations worldwide for secure password storage and sharing.
Bitwarden also has great things like account switching support, username generation now and something else that I really appreciate Bitwarden when I'm on the road is it also has an offline capability.
Bitwarden uses a client server architecture where every Bitwarden client application connects to the Bitwarden cloud or the self-hosted Bitwarden server you set up, Vaultwarden.
That easy setup means you can synchronize offline.
So if you need to get access to your information when you don't have a connection, which happens to me, well, that client server architecture means that information is available locally.
And Bitwarden has a full write up on how this works. I will put a link in the show notes so you can review this.
But I think if you're like me, you're going to appreciate that particular use case from time to time.
And you know what? You probably should be getting off grid. But let's be real managing your passwords.
It's a chore to something like Bitwarden that makes it all super accessible and approachable by a pro or by a total beginner.
That's a winner. And then when you combine it with your mobile device so you can use secure passwords and usernames for services and apps that you use on your phone and on your desktop game changer.
It really is that piece you need to be fully secure online. So if you haven't done this yet, go to Bitwarden.com slash Linux.
But if you know someone that hasn't done this, maybe you could recommend they check it out. Maybe your workplace needs to do this.
This is just table stakes now online. So let's get everybody using a great password manager.
And I think the best one out there is Bitwarden. Go try it out and support the show by going to Bitwarden.com slash Linux.
I think this is a game changer. It's one of those tools you just got to have. And I think Bitwarden is the best. Bitwarden.com slash Linux.
Well, I came into my silver blue journey having had a kind of persistent Fedora 36 install hanging around.
I don't use it for everything, you know, but it's something I consistently like, especially for just hanging out.
The nice modern Linux desktop on the couch while I'm catching up on things or, you know, doing some show prep or the like.
On one hand, I was kind of really impressed with silver blue because it did not feel that different from the, you know, just the standard Fedora 36 install.
I mean, there's some differences here and there, you know, once you start looking under the hood, but just from a surface level user.
You know, I wiped that old one away because I just I just like, well, sorry, Fedora 36, your partition is getting sacrificed here.
Right. And switch it over to silver blue and set up a few things to get back to where I was.
But on that surface level, I mean, I wouldn't have known if it wasn't my laptop and I did start poking under the covers.
Yeah. If you just sat down at a machine, I don't know if you could tell.
Yeah, exactly. To get there, though, I had a little more struggles than I was expecting, honestly.
I mean, OK, first I tried Ventoy just because I wanted an excuse to like I hadn't updated my USB for a while.
I'd been using that same USB when I was doing the Nix Pi experiment stuff because it's the fastest USB that I had laying around.
So I was like, OK, wipe it out. Get fresh Ventoy. Stick silver blue on there.
You know, my first ISO on the new Ventoy. Get it booted up real great.
Just also all those they've got all the new like they've got the GUI version to install Ventoy.
They got the script. Yeah. They got the web client. Right.
And they've now got that web configurator to configure the like plugins and the config for the plugins and stuff.
Oh, yeah, yeah. It's real slick. Anyway, that worked fine. Boot it up.
I'm installing. The following error occurred while installing the payload.
This is a fatal error and installation will be aborted.
Oh, this is in the installer. Yeah.
OS tree admin and then specifies the sys root deploy.
So it's trying to do that deploy of the like, you know, the base silver blue image exited with the code one.
That was a little bit disappointing.
I thought, you know, I always do things a little bit weird.
So in this case, I'm trying to install to a partition, but I deleted things.
I gave it some free space. I let it automatically use the free space and like come up with how I wanted to use that.
Should be fine. So it seemed like it should be fine.
So then I go and I get the fedora image writer and I write the image that way to the USB.
Blow away my new Ventoy install just to be like, OK, well.
Doing it by the book. Doing it by the book this time.
Same thing. So that was like a little off putting.
Yeah, I bet. I don't know what was going on. Normally this is where I've installed silver blue multiple times in the past and it was fine.
Yeah. Ultimately, I just ended up installing doing the thing where I install it via a virtual machine and then reboot it that way.
And then it worked fine. So you used Kexec. Yeah.
Yeah. OK. Of course you did. We need a little jingle for that.
We do. Someone to make us a Kexec jingle.
This time it didn't break things. It actually made things work better.
Oh, yeah, it's true. So, hey, I feel a little bit vindicated.
Perhaps more appropriate for the scope of this type of distribution. Really, let's be honest.
So, OK, once you got in there.
I did run into, unlike regular Fedora, Kexec wasn't built into the base image.
And then that's where I had to start learning a little bit about how do I how do I get this binary live right now?
Because I don't want I can't I don't want to reboot. I want a Kexec right now.
Of course. All right.
And I just I love the Kexec. It always inevitably ends up your solution.
Somehow Brett and I would have solved that problem and I don't think Kexec would have been involved at all.
But I don't know if they've ever even installed it somehow.
Anyways, what was your impression once you got it up and going?
It didn't feel like my system. You know, when I was when I was first exploring NixOS, for better or worse,
you kind of had to learn the build side of it, at least a little bit.
Right. Because you're going to be using the next language to, you know, to configure your system.
And then you're probably going to start looking at the next packages stuff to go see like what's in there.
And then you probably start reading the like the expressions for how they're built to see like, oh, is this the thing that I want?
And it's getting the thing, the pieces that I need. And so in that way, yeah, whether you're forced, maybe.
But you're also sort of welcomed is maybe too strong of a word.
But, you know, like you have to learn that. And then that means you're configuring it and customizing it.
And Silverblue felt much more like it was someone else that had constructed the system for me.
And I was just kind of a guest on it.
Wow. You really just touched on something that I hadn't even put words to or thought about.
But it is an exact 180 experience. Silverblue feels like it's been composed by a team and you're using it.
And a NixOS install feels like you handcrafted this thing and it is exactly your thing that you have built.
Much like a custom Arch or Gentoo install does. Right. Just easier.
Yeah. It's a total different experience when you're still trying to get to the same result. That's fascinating.
Now, admittedly, I would like to spend some more time playing with OS tree and RPM OS tree.
I mean, I think it's the technology underlying it is really quite neat. Right. I mean, you kind of hit on it.
It's like a version control system. It's like it's like Git, but for, you know, binary files to build operating systems with.
And it shares with Nix this idea of, you know, different like roots of your system that you can build separately.
Right. So you can have all these, you know, you can have this big, big old store of all the underlying files and then compose those together in different ways
and sort of manipulate it and create new versions without having to duplicate your whole system or, you know,
back up everything onto our sink like we did in the old days.
So I like that. I wasn't forced to. And so I haven't yet had the opportunity to to dive in and figure out like,
how can I make OS tree work a little bit better for me?
Or what if I want to start trying to build like my own take on the image and build my own image?
I was going to pre configure for Raspberry Pi's that we deployed in the studio or for some studio rigs.
In the same the same sense, I probably want to get a little better at maybe making RPMs.
I've done that in the past or really and I probably need to do this anyway is get a little better at configuring with Flatpak.
Right. I kind of accepted on the Nix side that I'm probably going to end up writing some Nix expressions.
I might end up packing or something, even if it's just something I package for myself locally or figure out how to build and extract from a tarball and stuff.
And I feel like if I was going to use it on a machine that I was actively not tinkering, but like, you know, doing Linux stuff with,
I probably want to embrace those tools a little bit more to, you know, learn how I could customize it.
Yeah. And something else that strikes me about what you're saying, too, is with the Nix system,
when you've built it for the most part, all of those packages are locally installed.
They have access to the local file system. They're not sandboxed.
You can absolutely use Flatpaks on a Nix desktop, but like my base Nix OS setup,
a lot of the standard things I use are just installed via my Nix config and they're all local applications that have access to the full system,
like VS Code, which is how I prefer to run VS Code.
Now, I'm using it as a Flatpak and I can make that work, but I prefer just to have access to my entire file system.
Yeah, there are some limitations with the Flatpak in particular.
And what kind of language runtimes do you need integrated and how do you get that all to play nicely?
And yeah, you're right. I mean, Nix doesn't really have a traditional file system hierarchy, which causes its own set of problems, obviously.
But I think that the self-hosted episode title, what was like, No Container Theory, that was it, right?
Like in all the ways that Nix is more complicated, it's also simpler in that there's just,
because you have this control at the build system level, you don't necessarily do it at the operating system level with things like containers.
Yeah.
The flip side of this, though, is something Neil hit on in the managed environment or just with things like Chromebooks.
Or it makes me think, too, you know, you were talking about Distrobox.
If I had a Windows machine, I wouldn't be configuring Windows or customizing it, or I would try to avoid doing that, right?
I would be spinning up WSL instances and doing it that way.
Yeah. If you're coming from the traditional OSs, this approach isn't that strange.
And then, you know, these days you also have things like, you know, cloud developer environments.
You have things where, you know, it's very common to just, you know, you've got your ID, you've got your local thing, however that's set up.
And then you've got your Scratchbox that's a, you know, instance on Amazon or whatever.
So part of me also wonders if this is just a mentality shift I need to have.
Like in the WSL version, you know, they've done a lot of work to make that pretty seamless,
especially with all the graphical support that they've worked on, too, right?
So if there's more of that, like, you know, things to hook up toolbox more so into the native system,
things like virtualization that did the same.
Maybe that would maybe that if I could embrace that workflow, that might make a lot of my problems go away.
Yeah. And then there's those those edge cases like tail scale or like Reaper where you'd love to see a solution that really makes that fit.
So at the end of all of this, if you can only install one like here in the studio or for your system on a desktop that you're going to use or like on a stream machine,
or would you do Nix OS right now or would you would you do Silverblue at this point?
I think for me and part of this is just maybe this on cost fallacy, but I think I do Nix.
I feel a little more comfortable there. I feel a little more familiar.
And I think I'm more aware of the various escape hatches and ways that we could make it work.
It might end up being more of a time investment, but that's where I have the most confidence at the moment.
I tend to lean towards Nix as well because Silverblue was a pretty good desktop experience.
But Nix also is great on the server and I could see using it on the desktop.
And I like the idea of just using Nix. And then the other thing that's brilliant about it is even when I'm on a different distribution, I can still install the next package manager.
So that's just like I invest in a skill set that I can really use in multiple different ways.
So that's sort of why I lean towards Nix. Plus, I really I like the idea.
And Brent, you touched on this. I like the idea of I just have a Nix OS config and the system is built from that.
Whereas with Silverblue, it's a system that's built and then I configure it and I install all my stuff into it.
But with the Nix system, when I'm done and I started up, everything I want is installed already.
It's already good to go. So what about you, Brent? Where do you lean?
Because there is the whole Red Hat ecosystem.
So there is benefit in learning this and just being in that Red Hat ecosystem, which, you know, is always great for anybody that's in the industry.
It felt mostly like Fedora.
So there's lots to like about that. And you can apply a lot of the Fedora skill sets to this, too.
So I'm curious where you land on it, Brent. If you could only pick one in some weird bizarro, you know, like I said, the CEO of Linux calls you up and says,
Brent, we're going to get rid of one of these. You got to pick. Which one would you pick?
What would you tell the CEO of Linux? That person didn't ask me.
I think probably I think you nailed it right there, Chris, of what I was thinking.
And maybe we're not giving it enough justice, but that declarative nature is really attractive.
And Neil touched on how you can use OS tree if you know what you're doing to kind of accomplish the same end goal, which is declaring what your system should look like and be able to reproduce those fairly easily.
That just seems very, very, very attractive in a, you know, I'm going to put a time investment into a system and then just reap the rewards forever from it.
So I would lean next word because it feels, I don't know, like that documentation was presented fairly easily to, you know, that's the only way to use next OS.
So like Wes said, you kind of forced to jump in, but then you get the benefits right away.
So when I was reading the documentation on Silverblue, I didn't even come across any of that suggestion that that was a way that this could be done with this system.
And maybe the documentation is or the version of the documentation I reached was meant for end users and not specifically for administrators.
But maybe it or that info maybe is in the installer documentation or something like that, right?
Could be, but it leads me to wonder, well, maybe that's not what they're banking on then.
Or maybe it's not meant for someone like me who, you know, isn't a system administrator for hundreds of systems and just has maybe a handful that he wants to, you know, quote unquote, administrate.
Maybe, but I'm on board with you.
I'd like to know if the audience would be interested in us trying out Endless because this is, I think, on the other spectrum here.
Endless OS, GTK GNOME based desktop and the same thing.
OS tree approach, but it's Debian based, which is which is I think that's kind of interesting.
So let us know, send us a booster.
Go to Linux Unplugged dot com slash contact.
And speaking of the contact page, I do just want to tidy up in here really briefly and mention your emails matter.
We read them all the time.
Linux Unplugged dot com slash contact for that.
And I want to say thank you to our members.
You guys, you give us the power to be picky and choosy.
You make it so that our audience is our largest customer.
That is critical because it allows us to say no to all kinds of ridiculous things.
And we've seen some really funny offers.
I don't know what's going on out there, but we have seen some really funny offers come in for advertisers.
And I suppose if we were hard up, you know, maybe you'd have to say, maybe we could try this.
But our members.
Members, if you have any sketchy links you want to put on the episode, I mean, just let us know.
Really? Yeah. But it really matters as a business.
Our members are our largest customers.
We've got to make sure they're happy.
And of course, we would we would always try to do that.
But I think it I think it makes sense to have both us as hosts aligned that way and JB as a business aligned that way.
So if you'd like to become a member, that's an unplugged core dot com.
Or if you want to support the entire network, Jupiter dot party for that.
If you want to send a boost into the show, go get a new podcast app and new podcast apps dot com.
As always, we got some amazing feedback this week, so thank you to everyone who wrote in.
And please feel free to write in about just about anything.
Isaac wrote in about HP.
Do you remember we were talking about HP?
We got a boost in talking about HP and the dev one and not being able to order it from an enterprise perspective.
Yeah. I hate the nuances of supplies.
Yeah. Isaac gave us a little tidbit that might be helpful here in understanding that situation.
They're right in regards to HP dev one HP split into two companies a few years ago, HP and then HPE, the enterprise version.
So the HP dev one is a product that the consumer company HP and I would guess that the person complaining about the company not being able to order it is going through the business relationships with HPE.
Despite both coming from one company and still using HP in their names, the two companies are completely separate and would not recommend each other's products.
Not confusing at all. We knew this, too, but this has got to be what it was.
And that's why they're like, we don't sell that. And of course, as a consumer, you're like, but your name's HP. It's an HP dev one.
Yeah, that's silly. That's very silly.
The person also wrote in with some Steam Deck hacks, Chris, which I think is probably up your alley. Hey, they're right.
Hey, broke college student here. Big fan of the show.
Heard your review of the Steam Deck and just wanted to let you know about a project called Holo ISO.
That is the official unofficial SteamOS image taken directly from the Steam Deck.
I installed this on an old deconstructed laptop board similar to the one behind me.
Paired it with an Xbox handle and got a great home theater interface for streaming games from my PC.
It works flawlessly.
Also, if you want to know more about the graphical stack of the deck, check out Steam Deck Guide on GitHub,
which explains how the game mode compositor uses X-Wayland for frames.
You might be able to use this information to modify your installation, virtual keyboard, boot into plasma, et cetera, to suit your needs.
This looks neat. I mean, it's kind of like a neat little guide.
I don't quite know what the intended audience is, but it seems like it could be really useful for folks who have gotten a Steam Deck
or maybe Linux curious, but are not, you know, are not listeners of the show already.
I got a couple of good tips, including there's a command I can do to make the file system read right so I can install stuffs.
But of course, then when you do an update to the image, it kind of does whatever you did.
But I have to say, week two with the Steam Deck has been interesting.
First few days of the week, I didn't even pick it up. I just did not even have an opportunity to play.
And then the weekend rolled around and I found myself with 20 minutes here, 20 minutes there.
And I probably picked it up four or five times and played a Steam game.
And I have to say, this is I realized when I put the order in exactly what I was hoping for,
because living in a tiny home, like I don't have always a machine actually set up.
I don't have I currently don't have a desktop set up. I sometimes do.
You don't have a dedicated room with your gaming rig and a chair and everything all ready to go.
Yeah, no. And I don't even have a game console hooked up at the moment.
And so having the deck and being able to just bust that out and playing a little bit of Teenage Mutant Ninja Turtles Shredder's Revenge
for like 15, 20 minutes here, there was has really been great. And then like I was able to hand it over to the kids and like you try this.
What's the turn on? Pretty darn. Yeah. Yeah. Yeah. It turns on about as fast as you'd expect a device like that to turn on and off.
The only thing that's really kind of slow on it is the switching in and out of desktop mode.
It's starting like a whole new display server or something. But that's been it's been nice.
Just having something that I have readily available, I pick it up and I play games for a little bit and I put it back down.
And because I know this sounds so obvious to you guys, but once you have like this appliance in your hand,
because all of the games I've ever bought on Steam are available, I have a huge selection of games.
And then the thing that was super cool is then I was as I was playing with Silverblue on the Dev one, I installed Steam and then I could just play those same games.
I picked those games right back up on the Dev one and I was playing and I'm like, this is actually pretty great.
That's a pretty nice combo. So week two, still pretty happy with the deck.
I did not yet, but I got a new USB-C dock that arrived.
I'm going to hook that up probably this next week or so and play around with that.
We tried out as a more of a computer. Yeah. And maybe also just I don't know for funsies,
hook up our physical keyboard and do like a Wazda shooter game. Oh, yeah. Turn the tables. I like it.
Yeah. Why not? Right. So we'll see. See how that goes.
And now it is time for the boost.
Our first boost today comes from Acerbic. Six days ago, 6,210 sets.
Loving the Fountain app. Thanks for the tip.
Have you looked into the impervious browser from impervious.ai at all?
I would love to hear your thoughts on that. The good stuff coming. Cheers, Acerbic.
Thanks, Acerbic. Impervious AI. Have you looked into this at all? No, new to me.
A programmatic layer that sits on top of the lightning network.
Developers can leverage the impervious API to easily build peer to peer data transmission.
Whoa, man. That's a lot. That's a lot. I would have to look into that. You should build something on that and tell us how it works.
Layer 3. Here I'm just getting to layer 2. Yeah. Well, layer 1 is Bitcoin.
Layer 2 is the lightning. And layer 3 is whatever that is.
We're about to find out. Yeah. I mean, I prefer a seven layer dip. So bring it on.
When do the beans come in?
I get some like IPFS vibes off this thing, even though I haven't really dove in, but I wonder if it's similar.
Well, six days ago, the Golden Dragon boosted in with a row of ducks. 2222 sats.
I'm a duck. D.U.K. duck. Loaded with talent.
And the big dragon's been listening live. So we boosted in and said, you know, if we had tech pants that were penguin themed, I think I'd buy some hint, hint, hint, hint.
We need a swag person. If anybody out there is a swag person. What about like a tech robe? Is that a thing that can?
Yeah. Well, the robes need to happen, too. But I would like some tech robe, just like a robe mixed with cargo pants.
It's like a robe with like pockets for all your tech. You got to have like the tablet pocket.
Yeah, right. I think it has hooks for like cable loops that you probably have a gimbal for your stream.
And, you know, you got a mic from Kota Radio is like on a sustained campaign to get the robe started again.
So that's probably going to have to happen at some point in the future. But I feel like some super comfy pants with the bearded tux on them.
I feel like those would be really good. You know, because last week, Microsoft had the tech pants.
Do you think they want to do a crossover with us? Yeah, maybe a collab. Uh-huh. Yeah, we could collab.
BBX Microsoft. We could collab on the soc, you know. Wouldn't that be great?
The golden dragon double boosted in with another two thousand two hundred and twenty two sats.
Says I live in plasma and I've been a big fan of XFCE, but I've moved to a window manager with an XFCE taskbar.
You know, this is an interesting setup where you can mix and match pieces like this of the Linux desktop back in my day.
You could really in with GNOME, you could replace Mudder, you know, what we consider Mudder now.
You could swap out different back ends. I mean, you could take it to the next level.
You back in my day, Wes, you could mix and match your window managers with your back ends and your front ends. You could swap all day long.
Hey, I was about to say golden dragon. Don't don't hang him on. I'm excited for plasma up in here and finally get XFCE.
I swear I'm cursing that thing every other week. We have XFCE on the recording machine and I think it's time to go.
And then we got a triple boost from the golden dragon six days ago.
Ten twenty four sats. He calls it the gigabyte sats. May Brent's gas tank and whatever else you may need be fulfilled by sats.
Oh, that is so kind.
That is great because we are raising funds to get Brent out to the studio before the road trip to work on some projects.
And so we have him in as a 50 50 split for the month of shows to build up a little bit of a piggy bank to get him down here.
It's about a day and a half, two day drive, which is about three thousand dollars in gas.
No kidding these days. Not really.
But yeah. And then a quad boost from the golden dragon two thousand two hundred and twenty two sats.
Says you are sharp right off the cuff on the pre show.
He's watching live and appreciating the West in action. That's so sweet.
I think that was a covid adult just set up rush to set up a home studio.
It's probably a little spicy. Yeah, you were a little spicy.
Whoops. We love it, though. Todd also wrote in from a northern V.A.
Was that Virginia? Virginia. Is that what that is? You got it.
Five days ago with eleven thousand one hundred and eleven sats.
So this baller is boosting the dip.
Ah, very nice. Yep. Cheap sats right now. I wonder. I wonder for how much longer.
I suspect longer, but I may be wrong on that. And we don't care.
Still the same good old sats to us. We just love this as a great method to get into the show and support us.
And again, make sure the audience stays the number one customer.
Our next boost comes in from X thumbs X five days ago with a thousand sats.
How about a brunch with Brent with someone from the dark table team?
That is an idea right there.
You know, this I have a list of like possible brunchers and some pretty big whales on there as well.
And the dark table team members have been like I think they were number two on that list.
And so, yeah, that would be amazing if we can make that happen. I don't see why not.
Very good. Very good. I like that idea a lot.
All right. The next boost comes in from Marcel.
And we're going to probably institute a thousand sats or above boost policy to get the whole note read in the show.
But occasionally I think I want to pull some forward.
But the idea being just to kind of tighten up this segment so that way doesn't run on and on.
But Marcel boosted in with a total of six hundred and sixty six sats.
And the first boost was I remember drug cam, but can you use it without being in anger?
And I thought this is funny because this is the same that you picked up in the last year or so.
I mean, you probably had it longer, but we hear it more often. What does it mean?
I mean, like when you really used a tool, right? You've had to be angry with it.
You've used it in a dark situation. You've had to make it work under pressure.
Yeah, right. You know, you've actually embraced it.
It wasn't just the the easy few top common use cases. It's been in production for a while.
Yeah, like you're like it was live stream time. You just have this get this thing set up. It was brand new.
It's like that's a pressure situation. Yeah, that's a good place to review a piece of software, too.
You know, I tried out another I forget what it was called after looks.
I didn't work super well, but I was trying to find a similar set.
I was like, can I reuse this on my work Mac? You know, because like why not?
It looked it looked better than the built in webcam.
And at least the most common ones I could find.
None of them had the sweet like, you know, video for Linux to loop back set up.
So it would let me like record and even had some fancy effects and stuff in this Mac version.
But like didn't make it easy to import it into my team's call or whatever.
Isn't that just the difference right there? You know, they are building that into Ventura.
But you got to buy like an accessory to make it work, I think, like something that actually goes and like implements the APIs that they've added or whatever.
Well, it's like an NFC equipped device that activates the function in the phone.
Then connects over like a direct Wi-Fi connection to the it's like this whole setup.
But yeah, but like on Linux, you can have it today. Maybe it's not as slick.
Right. But it worked pretty good for you. Right. So all right.
Boost two from Marcel. Why doesn't the Steam Deck just shrink and scroll the terminal window when the keyboard is open?
You know, like you have on phones, this seems like problem solved.
Now, the issue there, Marcel, is that I don't think the terminals aware.
And I got some insight. The keyboard opens up on the screen.
Thank you to whoever sent this in. The keyboard opens up on the screen depending on where the mouse cursor is, not the content screen.
Yeah. So there you go. And then we had a third boost.
Come on, Brent. You know, you want to go on a coast to coast Canada meetup tour.
It is true. I mean, who says I haven't previously? I think we should totally do this.
I mean, there's a lot of area to cover between those coasts in Canada.
Not dissimilar to the US, but a few key spots. I don't see why not.
And I might even be able to convince like one of my American buddies to join me.
Mic Mac boosts in three days ago.
Oh, a row of ducks. Two thousand two hundred and twenty two cents.
Thank you very much. And here's something for your trouble.
Because who doesn't love the ducks? Long time listener. Really appreciate the network.
Thanks for the great content, guys.
Thank you, Mic Mac. There's been a few first time boosters in the last couple of weeks.
And that's been really, really gratifying to see and grateful because I I'm grateful because not only is it a bit of a journey,
I recognize that and we're asking you to try to new technology.
And of course, we're just crazy enough to ask you to do it when the markets crashed and Bitcoin's dead.
Right. And of course, we're thinking long term.
This is free freedom for money like the GPL was freedom for software.
And so if we can build out a network of users that are on this system and then we can start supporting free software projects,
I think that's going to be a win win for everyone, Mic Mac.
And we may just be putting some code where our mouth is on that front in the future.
Well, we'll share details on that if we if we get that far.
But it is something that is in active discussions right now.
Torched escape boosted in two days ago with fifteen thousand cents.
Oh, all right. I think Torched here wants to help out that cross Canada tour.
They write in a few more drops in the tank. Thanks for the great show.
Oh, thank you, Jeff. I think he actually secretly wants me to go south.
Well, yeah. Well, I mean, you know, if you come along with us on the road trip, we'll end up at Jeff's house.
So you got to get to the studio first to make it. But we got big plans.
Jeff is a listener who has been around for a long time.
He often pops in the Bumble room during the show. So that's another way he's shown value.
But in the past years ago, he came to where we had JOOPS parked and help us get electricity hooked up.
So we had full electrical hookups. And now he has built a parking spot in his backyard that can accommodate JOOPS in California.
So we have a destination where we can park and hook up and and have Internet and air conditioning and, you know, have dog buddies.
So it's pretty great. Jeff's a pretty great guy and we super appreciate him.
And we have a couple of thank you boosts. Five thousand sats from LT Guy. Four hundred and fifty sats from Nick's Bitcoin is amazing, saying that he loves the duck hunt hit.
Yeah, who doesn't? I mean, come on. I know. Andri sent five hundred sats for a little bit of gas money for Brent. Thank you.
CB sent seven hundred and seventy seven sats saying, how do you make an algorithm soup taste better?
You toss in a bullion cube. You know, we need like a, you know, like a drum kick set up.
I think I can figure that out. Yeah. Two hundred and twenty two sats from Fuzz Mistborn. First time boost.
I'm glad Chris likes his steam deck. I still love mine four months later, although I rarely use desktop mode.
Two hundred and twenty two sats from forty seven says Python's great to break sites.
Two hundred and twenty two sats from user four twenty six. Just to say hi. Thank you, everybody.
Hi, user four twenty six. We appreciate you helping us stay independent, keeping us honest to our audience and sending in your value for the show using a podcasting to app a new podcast apps dot com.
You can also use boost CLI if you don't want to switch apps or which nobody did this week.
Or you can use Breeze, B-R-E-E-Z dot technology. And if you want to hear me go on about the podcast industry in general and podcasting 2.0 and the features that J.B.
will be implementing in the future. I do. I do. Well, then go check out the podcasting 2.0 show over at the podcast index dot org because I was just on there.
Do you remember it was episode ninety one or four? I should know. I was just listening to it. I know I should know, too.
I have it right here. Episode ninety four bells out. If you want to check that out at the podcasting 2.0 show, I was on there with Adam and Dave and it was a lot of fun.
Thank you, everybody, for boosting. And did you hit your J.B. Bell? Is that why it was named like that?
There may have been a little bit of a bell off in the show. I don't want to give any spoilers.
I had some Bell history with Adam that needed to get sorted out. That's just I'll just say that was really is a lot of fun.
And with that, we do have a few picks. Yeah, I think this is a qualifies as a quick pick.
You and I were doing office hours, I believe, and I was having struggles several weeks ago with some of my network connections and you and I were both pinging to try to figure out if it was you or if it was me.
And we just said, hey, there's this feature we really want, which is sort of in line.
Summaries of the ping, because previously, like an animal, you and I have been like stopping the ping process to get the summary of how many packets were lost.
And one of our wonderful listeners, I forget exactly who it was, but thank you, thank you, suggested you just hit control four and you'll get an inline sort of summary during the active ping.
It's a game changer. You don't have to control. See, you're paying to get my goodness to get the stats. You knew this, didn't you?
West West didn't react at all. You knew this, didn't you? You knew this and you didn't tell us. I didn't know.
I just don't know that much. I feel like I use something like MTR if I want more access with the MTR.
This is a great tip, though. I'm trying it right now. It is nice. It is. It is nice.
All right. I got a hot pick for you guys. I got a real hot pick. This is so fricking handy.
You can thank me with a boost. It's just simply called audio sharing, and it is the simplest application possible.
It's available however you want it. I've linked to the Flat Hub here page.
But say you want your audio on a different device from your computer, right? Oh, yeah.
Say you maybe got a speaker, you got a mobile device, you want to take the audio with you, whatever it is, right?
Maybe you want to watch it on your televisions. I don't know what you're doing, but you want remote audio from your laptop, your desktop, whatever.
This quickly and instantly creates an RTSP server with an audio stream from your desktop available.
And so like on my iPhone here, I open up VLC. I paste in that RTSP address that it gives you.
It also gives you a QR code you can scan. And then immediately VLC begins playing back my computer's audio.
And I can even mute my local speakers like on my laptop and the audio will continue to play.
So then I can walk away with my phone and continue to hear the video that I was listening to on my laptop from my phone.
Any device that can stream RTSP, you can do this with. And it's instantaneous.
You just put this app on there on your machine and then you'll launch it and then open up VLC or whatever you use to look at RTSP streams.
And now you have the remote audio from your Linux box. It's so nice. I was using it this weekend, obviously, as you can tell.
I was I got I started a talk on Silverblue and then I was like, I got to go outside.
I got stuff to put the headphones on with my phone and just streamed it to my phone as I walked around the yard.
It was choice. Does it at all offer media controls as well?
Or do you have to do that natively or how is that process? So you're not going to get like play and pause, right?
Because it's just receiving a stream, but you'll get, of course, mute and pause on local on your local client.
But you can't stop the remote stream. But you may be able to just pair that with something like KD connective.
Oh, sure. Sure, you could. That would work pretty well, actually. Sure. You could take it to the next level.
I feel like I missed you didn't play a certain soundboard clip. Oh, is it? Did I miss that?
It's yeah. Wait, let me check it. Oh, it's rust based, huh? That's right. Well, I didn't even look in the repo.
This is the thing about flat back. You just slap them on your system. You don't even pay attention to the dependencies.
It doesn't even matter anymore. It's the brave new world. All right. Well, we got to wrap it up because it's getting hot in here.
But I did have one more pick. I mentioned that I was playing my old DOS games.
I got Star Trek Judgment Rights going. I got Voyager Elite Force going. I got Star Trek Away team going. I got Diablo going.
I mean, some of these games were literally pre windows. That's how old some of these games are.
OK, bottles. I know you guys probably know about it, but I'm going to give it a mention right here right now.
There is no slicker way to just set up a wine environment and get stuff installed, tweak the settings.
I can't believe what you can run with wine these days. So many applications, so many of our audio plugins that we like the special like emergency repair plugins that we sometimes have to use that are all windows based.
We can run them in wine now. The games I'm looking at, I can run a wine. So many desktop applications are running under wine.
It has really gotten impressive. And bottles is a front end that lets you set up different environments.
So you can have like a Windows 7 environment. You can have a DOS environment. You can have a Windows 10 environment.
It's cool. I'll also let you pull in like dependencies like fonts and nice. Yeah, yeah.
You know, it's amazing where wines at, especially because I feel like if no one told me they were starting the wine project today.
Might be a little skeptical, but like after all of this time and all of this effort, it has really gotten to an amazing place.
Bottles is so, so good. And it is it even like it's good at like telling you what it's doing and giving you status updates.
It's good at letting you manage the processes when like a wine process hangs. It's just that's killer.
All the things, all the things. So bottles is just a big recommend.
And then audio sharing, which we'll have a link to all of that, of course, in the show notes.
It's real simple. Linux Unplugged dot com slash four six eight. And if you want more show, don't forget, we do have the live stream goes on nice and long.
Lots of extra content in there. We try to make it interesting. And then we make that available to our members as a thank you as well.
Our members also get access to an ad free version of the show. Unplugged core dot com for that or Jupiter Party for all the shows.
And don't miss Linux Action News. We need a new plug for Linux Action News, but it's a companion to this show.
If you're not getting Linux Action News, you're missing out on the world of free software and open source, like there's a lot going on.
And we try to hone that sucker in and get you really just what you need to know, get you in, get you out, make it really information dense.
Yeah, but if you're missing that, you don't have the same context we do for the nonsense we talk about on this show.
Could be true. It could be maybe that could be a thing that could we try not to. But that could be a thing.
And of course, sometimes we do have schedule changes and we try to get those listed at Jupiter broadcasting dot com slash calendar.
Hint, hint, hint on that one. The stream is at Jupiter Dot Tube.
If you'd like to watch the archive, the playback version or catch it live when we are live.
Jupiter Dot Tube for that. I've got a lot of URLs. I feel like I should stop mentioning them. So I'll just give one more plug for the JPL lottery sign up form.
Linux unplug dot com slash JPL. Simple threat there. It'll take you to our next cloud.
Well, one of them. We've got only like three of them. So that's one of our three next clouds.
You got to have more than one for safety. Yeah. Yeah. And all the other meetups that meet up dot com slash Jupiter broadcasting.
All right, everybody. Well, thank you so much for tuning this week's episode of the unplugged program.
And I hope to see you right back here, not on Tuesday, but on Sunday.
I actually wanted to get back over with Brett because there was a there was a bit that we didn't get to here in the show notes.
And I'm curious what he's got in mind. I see it's just simply titled System 76 Teaser.
Yeah, I came across a little I think I'm going to call it like a little nugget.
I was trying to solve this Raspberry Pi, you know, install from one USB on to another issue.
And so as we do doing a bunch of research and I came across an issue on that Raspberry Pi for UEFI firmware image GitHub that I was playing with.
And so the little nugget is that there may or may not be a system 76 employee in there asking a few questions on perhaps how to get a pop 2204 arm 64 image working with UEFI in there, which is not exactly a public image at this point.
But I think something we're there working on internally. Look at you with the teasers, right?
I'm excited for you to continue your Raspberry Pi journeys, Brent, although I'm sorry that it started so rough.
It's going to get easier in the future as finally, we are going to have mainline graphics core support hardware accelerated graphics with the Pi 4 cores.
That is exciting.
Which has been missing for a very, very, very long time.
This is the reason why Fedora 37 is going to have official support for the Pi 4 series because the graphics core is now finally mainline.
And here I thought I was excited about Fedora 37 already.
Will that be just in time for the Pi 5 to come out?
