WEBVTT

00:00.000 --> 00:07.000
This is Linux Unplugged, Episode 21 for December 31st, 2013.

00:30.000 --> 00:40.800
Hi, everyone, and welcome to Linux Unplugged, your weekly Linux podcast that's popping a

00:40.800 --> 00:45.120
beer cap like it's a bottle of champagne. My name is Chris.

00:45.120 --> 00:46.120
My name is Matt.

00:46.120 --> 00:50.260
Hey, Matt. Here we are on the precipice of 2014, and our crystal balls have been shined

00:50.260 --> 00:55.760
once again. We are joined by our virtual lug, our mumble room. They're going to throw in

00:55.760 --> 00:59.540
some predictions. Plus, we just did a big batch of predictions, a huge episode, almost

00:59.540 --> 01:03.640
like an hour, 50-minute episode on Sunday of the Linux action show, where we threw down

01:03.640 --> 01:08.240
our predictions for 2014, and then immediately, one of the reasons we actually created this

01:08.240 --> 01:12.440
show is because we get off air, and then I go, oh, crap. Oh, I should have mentioned

01:12.440 --> 01:16.720
X. I should have mentioned Y. So, I got a few more predictions we got to get to. Plus,

01:16.720 --> 01:20.760
there's been a couple of things that happened this week that also kind of just clicked,

01:20.760 --> 01:23.800
and said, oh, man, this is actually going to play out big in 2014. So, we'll talk about

01:23.800 --> 01:29.840
that. Plus, CES is moments away, and we have reason to believe that a couple of things

01:29.840 --> 01:33.560
that we're going to talk about today in our predictions will bear fruit in CES just a

01:33.560 --> 01:36.280
couple of weeks away. So, I'm looking forward. It's going to be a good way to end the year.

01:36.280 --> 01:41.200
It's our last episode of 2013. So, I think it's going to be a good one, Matt.

01:41.200 --> 01:42.200
Definitely.

01:42.200 --> 01:44.960
All right. So, before we get to all of that, before we get to all of our crazy crystal

01:44.960 --> 01:49.360
ball rubbing, I want to follow up with a couple of things that were sent into the show. There

01:49.360 --> 01:53.120
was so much email to go through. I tried to kind of boil it down to just a few topics

01:53.120 --> 01:57.040
because we recorded two episodes last week. So, it's actually been a couple of weeks or

01:57.040 --> 02:02.080
one week since we sat down. And so, there was a lot to get through, but I tried to boil

02:02.080 --> 02:06.160
it down to just a few things of follow up. So, to start with, I wanted to read the email

02:06.160 --> 02:11.760
that Zach sent in because in last episode, we talked a lot about the Chromecast. And

02:11.760 --> 02:16.640
in that conversation, XBMC came up, but I think it deserves a little extra attention

02:16.640 --> 02:20.400
here, and so did Zach. So, here, I says, hey, guys, just wanted to respond to the Chromecast

02:20.400 --> 02:26.560
XBMC talk. I use XBMC all the time, and I would love to see XBMC rise to the same popularity

02:26.560 --> 02:31.200
as Chromecast and Plex. The only real problem with XBMC right now is the lack of out of

02:31.200 --> 02:36.480
box functionality. Now, do you think, do you think Chromecast and Plex are already more

02:36.480 --> 02:38.560
popular than XBMC, Matt?

02:38.560 --> 02:41.520
Here's a simple rule to follow when in doubt with these things, and this is a rule I live

02:41.520 --> 02:45.280
by and usually cheeses people off, but it's pretty accurate for the most part. If something's

02:45.280 --> 02:50.720
easy to use, it's going to rise to the top. Not because it's better, that's interpretative,

02:50.720 --> 02:54.640
but because people perceive it as easier to use and perceive it to be better. Plex being

02:54.640 --> 02:58.440
a great example of that in Chromecast. Personally, I've been playing with the Chromecast, and

02:58.440 --> 02:59.440
I do have thoughts on that.

02:59.440 --> 03:00.440
Oh, really?

03:00.440 --> 03:05.280
Yeah, as far as like, you know, because I think, like, XBMC and Chromecast are completely

03:05.280 --> 03:10.400
different animals doing completely different things, but they definitely share different

03:10.400 --> 03:14.800
levels of difficulty and or ease of use, depending on how you look at it. But yeah, XBMC I think

03:14.800 --> 03:19.640
is awesome as Debian is awesome. That doesn't mean you're going to get grandma to use it

03:19.640 --> 03:21.120
without some support there.

03:21.120 --> 03:28.120
Yeah, and I, you know, I think part of the killer problem that Plex solved was that Roku

03:28.120 --> 03:32.040
front end, because you can buy a Roku that even if at the end of the day Plex doesn't

03:32.040 --> 03:36.740
work out for you and the family or whoever else has to use the TV, the Roku still does

03:36.740 --> 03:41.160
a ton of other things. So you're not totally married to one solution, whereas if you go

03:41.160 --> 03:45.040
to XBMC, you got to build a PC, you got to set all that up, you got to hook that up to

03:45.040 --> 03:48.320
your or maybe a Raspberry Pi if you're geeky. But again, regular consumers aren't going

03:48.320 --> 03:49.320
to do that.

03:49.320 --> 03:50.320
Right.

03:50.320 --> 03:54.600
Whereas Plex is is not quite consumer level, but it's getting pretty close, where you could

03:54.600 --> 03:58.960
have somebody that ships a free like you could have an IX system that ships a free NAS box

03:58.960 --> 04:02.600
with Plex preinstalled and says automatically streams to your Roku and they could just put

04:02.600 --> 04:05.920
that on the box and essentially the consumer would only have to do startup Plex on the

04:05.920 --> 04:06.920
Roku.

04:06.920 --> 04:10.600
Oh, yeah. Well, and I still believe honestly, Raspberry Pi is the right kind of storage

04:10.600 --> 04:15.560
attached to it. Slap a sticker on it. It's, you know, Billy Bob's media box. Yeah. Plug

04:15.560 --> 04:20.080
it in. You're done. Yeah. I think there's a market for 60 bucks. Sure. Absolutely. So

04:20.080 --> 04:25.280
he goes on to say, as things are, XBMC can do a lot of things, but sucks, sucks, such

04:25.280 --> 04:30.280
functionality requires a researching how to do it and downloading the corresponding add-ons,

04:30.280 --> 04:33.800
which usually aren't listed in the default add-ons. If XBMC would provide a more complete

04:33.800 --> 04:38.120
and prettier add-on manager, they would have a way better off than they are right now.

04:38.120 --> 04:43.080
New users won't want to connect to XBMC hub to get legally questionable add-ons. The add-on

04:43.080 --> 04:47.960
system is a little awkward. Like we have, there's a Jupiter broadcasting app in XBMC

04:47.960 --> 04:52.320
for Roku. Jeez. See, it's confusing to talk about. There's an app for XBMC for Jupiter

04:52.320 --> 04:54.560
broadcasting, but you got to dig for it a little bit.

04:54.560 --> 04:58.360
Exactly. And as far as, you know, people not being willing to dig for something that's

04:58.360 --> 05:03.140
legally questionable, that's not entirely accurate, but I would say that it depends

05:03.140 --> 05:07.520
how hard or easy it is to get to. Cause if a good homework assignment for everybody in

05:07.520 --> 05:12.040
the audience is to go to the cord cutters subreddit and you're going to find people

05:12.040 --> 05:16.460
that barely know how to work their Blu-ray players running Plex. I mean, these folks

05:16.460 --> 05:20.560
are brand new to this stuff. So I think that there's absolutely, and of course they have

05:20.560 --> 05:22.960
no problem how they get their media as long as they don't feel like they're going to

05:22.960 --> 05:23.960
get pinched on it.

05:23.960 --> 05:26.780
Well, and here's the other thing he points out is he says XBMC would do better off if

05:26.780 --> 05:31.180
they could have official plugins from like Hulu and Netflix, right?

05:31.180 --> 05:33.280
And I would think that would give them a real advantage. Yeah.

05:33.280 --> 05:37.720
Because again, I go back to the Roku and Plex with Plex, I get all of my local content and

05:37.720 --> 05:41.580
it's such a great setup. Plus the library is centralized. So if I have multiple Rokus,

05:41.580 --> 05:46.160
they're all sharing the same metadata, the same, you know, watch played status, the resume

05:46.160 --> 05:50.760
locations are all shared amongst all of the Rokus. Roku is great because it's tiny. It's

05:50.760 --> 05:56.380
silent. It runs Linux. It's cheap ish. And, and, and then I can hit the home button and

05:56.380 --> 05:59.000
I can launch the Netflix app. And that's a huge deal.

05:59.000 --> 06:03.120
Yeah, you can get a, you can get an entry level Roku for 39 bucks. You can go up to

06:03.120 --> 06:06.440
99 or up and higher if you want to. But I mean, you out of, out of the gate, you can

06:06.440 --> 06:10.460
walk into it very comfortably. I think for like, it's an LTE for 39 bucks and that's

06:10.460 --> 06:13.960
quite reasonable. And it comes with a remote. There's something to be said to that.

06:13.960 --> 06:19.040
Yeah. Yeah. And the Roku 3 comes with a really cool remote with a, with a headphone connection,

06:19.040 --> 06:25.700
which is great for a late night TV. And so that said, you know, I was just thinking about

06:25.700 --> 06:30.640
the, the new studio that we'll be building in early 2014 or rebuilding, I guess you could

06:30.640 --> 06:34.880
put it. And one of the things I'm going to have in there is TV service for clips for

06:34.880 --> 06:39.180
unfilter. And I was thinking about how I'm going to be ingesting that media and how I'll

06:39.180 --> 06:43.980
be displaying it. And one of the things that did cross my mind was, you know, maybe a TV

06:43.980 --> 06:47.700
with all of the clips on there with XBMC sitting in front of that. And then I could

06:47.700 --> 06:51.840
sit down on a TV and process all the clips on the TV using XBMC. I don't, I'm still

06:51.840 --> 06:52.840
working through it.

06:52.840 --> 06:53.840
That's interesting.

06:53.840 --> 06:56.960
It made it, you know, there's, there's so many, it's almost, you know, you almost put

06:56.960 --> 06:59.640
it really well when you sit and you can look at it like Debian because as Debian could

06:59.640 --> 07:06.080
be used for a base, XBMC can be used for a base for, you know, display systems, for billboards,

07:06.080 --> 07:10.000
for all, you know, home, home entertainment, all kinds of things. So XBMC totally has a

07:10.000 --> 07:14.040
place and I like it a lot and it just depends on what use case. But you know, as far as

07:14.040 --> 07:20.840
like spouse approval factor and really, I mean, to be totally frank, you know, my four-year-old

07:20.840 --> 07:27.200
son and my two-year-old daughter can use the Roku, right? And they can't really use XBMC

07:27.200 --> 07:28.960
and that really is kind of a big deal.

07:28.960 --> 07:36.080
Well, we used to, we have a hacked Apple TV that we used to run XBMC on and it, the spouse

07:36.080 --> 07:40.280
wasn't exactly enthused with it. She used it, she tolerated it, it was fine. Plex, on

07:40.280 --> 07:44.180
the other hand, there's no comparison. So I think, I think you really nailed it. Once

07:44.180 --> 07:49.000
you actually introduce non-geeks into the situation who are not on pedestals, chirping

07:49.000 --> 07:54.160
the same old chirpy stuff and actually looking at it factually, Plex really is the easier

07:54.160 --> 07:55.960
choice and it's great.

07:55.960 --> 07:59.280
Even though it's a little uglier than XBMC, like, especially on the Roku, it's...

07:59.280 --> 08:04.360
Oh, it's horribly ugly on a Roku, yeah. It's hideous. But it's really, really sexy on the

08:04.360 --> 08:08.720
Android app or even on the, when you run it in your browser, it looks really great there.

08:08.720 --> 08:12.640
Yeah, the Roku app needs a dire, dire, needs to be addressed in a big way.

08:12.640 --> 08:16.040
I think that might be a limitation of the Roku SDK or something, but yeah, it's awful.

08:16.040 --> 08:17.040
It might be, yeah.

08:17.040 --> 08:21.920
Yeah. All right, well, we got a correction that came in from Mike from episode 20, so

08:21.920 --> 08:26.780
two weeks back. He said, hey, unpluggers, at the beginning of episode 20, the topic

08:26.780 --> 08:30.480
of licensing Ubuntu packages for the Mint project came up. He said, no one could think

08:30.480 --> 08:35.040
of an example of any projects that rebuilt the source, but that is wrong. The Trisco

08:35.040 --> 08:39.280
project often purges non-free packages from Ubuntu repos and then rebuilds some of those

08:39.280 --> 08:46.760
packages and de-blobs them. These are mirrored and corrected packages are hosted on the FSF

08:46.760 --> 08:49.680
mirror for Trisco to use. Just wanted to let you know. Thanks, guys.

08:49.680 --> 08:53.200
Yeah, Mike, one of the things that was different and Popey made this point when he was on the

08:53.200 --> 09:00.180
show last week or two weeks ago, was that Mint is pointing at Ubuntu repo. So they're

09:00.180 --> 09:06.360
using Ubuntu servers, Ubuntu bandwidth, Ubuntu packages. They're not taking the packages,

09:06.360 --> 09:11.160
rebuilding them all, sent to us or Trisco style and hosting them on their own servers.

09:11.160 --> 09:15.800
So an analogy would be, so one group of people would be like hot linking to an image where

09:15.800 --> 09:18.920
another group of people might be saving the image to their desktop and they're using it

09:18.920 --> 09:20.520
on their own servers. That would be the difference there.

09:20.520 --> 09:23.760
So I guess what Canonical is saying is, hey, you want a hot link, you need to have a license,

09:23.760 --> 09:24.760
I guess.

09:24.760 --> 09:26.800
Right. You're incurring cost to us.

09:26.800 --> 09:30.480
To me, it didn't seem like a huge deal to Clem. It doesn't seem like a huge deal to

09:30.480 --> 09:34.760
me, but it's something we'll keep an eye on. Yeah. Okay. One last bit of feedback before

09:34.760 --> 09:40.480
we get into the balls here. This one came in from James and he had some thoughts on

09:40.480 --> 09:45.520
the topic of Ubuntu as a rolling distro, which keeps coming up and Mark recently in an interview

09:45.520 --> 09:49.760
suggested that maybe after 1504 you might see something a little more like a rolling

09:49.760 --> 09:50.760
release from Ubuntu.

09:50.760 --> 09:53.600
So this has got people thinking and James is one of them. He says, hey guys, happy new

09:53.600 --> 09:57.840
year. I heard you talking about a number of times about the perceived issue with Ubuntu

09:57.840 --> 10:02.960
because you can't always get the latest stuff. Well, I was a 15 year Slackware veteran until

10:02.960 --> 10:08.080
I changed to Ubuntu in 2008. I tested and continue to test other distros, but I still

10:08.080 --> 10:12.720
use Ubuntu because I think it's time for Linux to just work. And I find that Ubuntu

10:12.720 --> 10:17.480
gives me that. And also I want to build up an experience to support others. That makes

10:17.480 --> 10:23.360
sense. Yeah, definitely. However, I do want the latest packages. So I have run the dev

10:23.360 --> 10:29.040
version since 11.10 was released. Canonical has a policy that the dev versions work every

10:29.040 --> 10:34.040
day and it does. I get one failure each cycle when the X server is updated and I have to

10:34.040 --> 10:39.960
upgrade my Nvidia driver, but that's it. It works flawlessly. It means I get the new stuff

10:39.960 --> 10:44.840
and then when the new distros released, I already have experience if people need help.

10:44.840 --> 10:48.360
If I upgrade as soon as the new repo is available, which means I'm on production releases for

10:48.360 --> 10:53.040
only about one to two weeks at the start of each cycle, Ubuntu works great as a rolling

10:53.040 --> 10:58.480
release. So what James is saying is my trick essentially is I run the production version

10:58.480 --> 11:02.520
for a couple of weeks and then once it's back up and they're working on the beta version

11:02.520 --> 11:07.660
again, I just upgrade my repos and I run the beta version. I was going to ask the mumble

11:07.660 --> 11:11.240
room, does anybody in here ever do that with their distro where you run the stable version

11:11.240 --> 11:15.640
for maybe a couple of weeks and then you jump to the beta version?

11:15.640 --> 11:24.640
Yeah, I am running CrunchBang and I immediately went into Jesse because the stable of Debian

11:24.640 --> 11:29.880
didn't have everything I wanted and then I launched into CID and I'm still experimenting

11:29.880 --> 11:32.600
to see how it's going to go.

11:32.600 --> 11:38.000
I did this myself for a period of time with the Ubuntu's where I would run the stable

11:38.000 --> 11:42.160
version for a few weeks and then I would just switch. For a while what I would do is I would

11:42.160 --> 11:45.120
wait until after the first beta release. That's what it was. It was more than a few weeks.

11:45.120 --> 11:49.200
I would wait until after beta one was out for a couple of days and then I would switch

11:49.200 --> 11:52.440
over to that and then I would ride that all the way to the finish line and I did that

11:52.440 --> 11:56.280
for three or four releases in a row, like the same installation, just kept doing it

11:56.280 --> 12:03.880
and it worked okay but what really I ran into constantly is a lot of instructions assume

12:03.880 --> 12:09.320
a certain version of Ubuntu and they're already having a hard time, the instructions you find

12:09.320 --> 12:13.440
online, you have a hard time finding anything that applies to the absolute latest version.

12:13.440 --> 12:19.120
Usually it's one or two releases behind and then you just add an extra layer of anomaly

12:19.120 --> 12:23.080
when you're running a rolling release that isn't even out yet and stuff is a different

12:23.080 --> 12:27.440
version and stuff is in a different spot. So for me I just kept banging my head into

12:27.440 --> 12:29.520
that. Did you ever try this Matt?

12:29.520 --> 12:35.120
Not with, no, not in that exact thing but I have run into that when it comes to documentation

12:35.120 --> 12:38.400
and things like that. It's always interesting to try and nail that down so for me it was

12:38.400 --> 12:39.800
always a little bit different.

12:39.800 --> 12:45.040
Yeah, yeah. And you know I've thought about trying it again actually with the Fedora release

12:45.040 --> 12:51.020
and I tried it really briefly during our OpenSUSE 13.1 review. I switched over to their rolling

12:51.020 --> 12:56.280
and it went fine but I only did it for a few days. So I kind of feel like if you're going

12:56.280 --> 12:58.800
to go rolling you should go with a distro designed to be rolling.

12:58.800 --> 13:02.800
Well that would be my thinking because otherwise you're essentially doing a work around. I

13:02.800 --> 13:07.000
mean if Ubuntu really wants to make their distro the very best it can be they need to

13:07.000 --> 13:13.960
address the PPA problem. The existing management tools for PPAs is pretty craptacular. It's

13:13.960 --> 13:19.120
not that great. PPAs as an idea are great. Unfortunately what happens when one goes down

13:19.120 --> 13:24.520
there's no system in place to alert people. Hey by the way this is dead. Put out an alert

13:24.520 --> 13:25.600
that something's going to be done.

13:25.600 --> 13:28.800
This is something the Mint project has addressed but it's not an Ubuntu proper.

13:28.800 --> 13:32.060
No it's not and so I think that's something that they need to really look at because I

13:32.060 --> 13:36.120
don't see them as really needing to go rolling release because it's not their target goal

13:36.120 --> 13:40.060
but I do think that they need to address having more bleeding edge packages when it comes

13:40.060 --> 13:46.080
to stuff like OpenShot, Firefox, various software types. I think that would really help out.

13:46.080 --> 13:51.120
The backend stuff like lib this and lib that you know that's neither here nor there. That's

13:51.120 --> 13:55.240
obviously a PPA kind of thing but yeah I don't know. It's going to be interesting to see

13:55.240 --> 13:57.520
how they work it out but it's something that they're not addressing and I think they're

13:57.520 --> 13:59.160
going to have to eventually.

13:59.160 --> 14:01.800
Hopefully or maybe click packages will save us all.

14:01.800 --> 14:06.040
That would be. Hey you remember click you know.

14:06.040 --> 14:07.960
I do. I do. I do remember clicking.

14:07.960 --> 14:08.960
That was not horrible.

14:08.960 --> 14:11.640
I also remember clicking and running as it were.

14:11.640 --> 14:12.640
Yes.

14:12.640 --> 14:16.640
Old joke there for you all.

14:16.640 --> 14:20.640
You have to be apt to get that.

14:20.640 --> 14:25.440
Oh geez. Hey you know what I got to do before we make everybody tune out is I want to say

14:25.440 --> 14:29.840
thank you to Ting.com who is sponsoring this episode of Linux Unplugged. Ting is my mobile

14:29.840 --> 14:34.920
service provider and Matt's mobile service provider. Why? Why? It's easy. No contracts,

14:34.920 --> 14:38.800
no early termination fees and the thing that really keeps me around is Ting is pay for

14:38.800 --> 14:43.960
what you use. They don't have to worry about things like or I don't have to worry about

14:43.960 --> 14:47.860
things like paying into a contract where I'm not using that fully.

14:47.860 --> 14:55.520
So previously I had two phones on a smartphone plan $120 a month. Now I have two phones both

14:55.520 --> 15:02.780
smartphones an HTC One and a Nexus 5 on Ting and I'm paying around $25-$30 a month it depends.

15:02.780 --> 15:06.160
So what Ting does is they take your minutes, your messages and your megabytes and they

15:06.160 --> 15:10.200
add those up at the end of the month and whatever bug that you fall into, whatever actual usage

15:10.200 --> 15:17.120
you have, that's what you pay. It's brilliant. So some months I have 50 text messages. Some

15:17.120 --> 15:22.480
months I have 200 text messages. Why would I have to pay a thousand text message plan

15:22.480 --> 15:26.480
if I don't need it? It drives me crazy and Ting solves all of that.

15:26.480 --> 15:30.680
Plus Ting has devices that are fresh and hot right now. There are some carriers that don't

15:30.680 --> 15:35.360
even have like the HTC One yet. Ting is already supporting the Nexus 5. You can pick it up

15:35.360 --> 15:38.800
from the Google Play Store. You buy it directly from Google. You bring it over to the Ting

15:38.800 --> 15:42.800
network. Now you have a phone you fully own on a network that's paid for what you use

15:42.800 --> 15:47.400
with no contracts or no early termination fees. Hot spot tethering built into your plan.

15:47.400 --> 15:49.980
You just pay for your data usage. It makes a ton of sense.

15:49.980 --> 15:55.400
So here's how you get started. You go to linux.ting.com. That's going to take $25 off your first device

15:55.400 --> 15:58.680
or if you've already got a Sprint compatible device and you want to bring it over to Ting,

15:58.680 --> 16:03.080
just check to make sure it's compatible with the Ting network and then they'll take $25

16:03.080 --> 16:06.040
off your first month of service. That's a pretty awesome deal. They've got a savings

16:06.040 --> 16:09.560
calculator. You can plug that in and see how much you'd save.

16:09.560 --> 16:12.600
One of the things you'll notice when you're visiting the Ting site, go to linux.ting.com

16:12.600 --> 16:18.000
to get started, is they are an awesome company. They have their blog where they're posting.

16:18.000 --> 16:21.200
They're very transparent about their business, how they work, about future advances. They

16:21.200 --> 16:26.080
talk about rolling out tri-band LTE and what devices on the Ting network like my Nexus

16:26.080 --> 16:30.420
5 support tri-band LTE right now and what the benefits of something like that are. They

16:30.420 --> 16:34.840
often will pick some of the best apps, some of my favorite ones on Android like BeyondPod.

16:34.840 --> 16:38.200
They'll feature those on the blog. There's a lot of great stuff over here that you can

16:38.200 --> 16:42.120
keep visiting and once you become a Ting customer, you'll appreciate this level of information

16:42.120 --> 16:50.920
from your carrier and Ting has great customer service as well. If you call Ting at 1-855-846-4389,

16:50.920 --> 16:54.900
any time between 8am or 8pm Eastern, a real personal answer to the phone and help you

16:54.900 --> 16:59.740
out and you also have a fantastic dashboard that gives you the tools you need to control

16:59.740 --> 17:03.000
your own account, you'll probably be surprised at the kind of functionality you can get in

17:03.000 --> 17:08.300
there and how clear and easy a cell phone company can make your billing and information

17:08.300 --> 17:13.680
like that. Once you see this stuff, you'll never be able to go back to anybody else.

17:13.680 --> 17:17.680
It's just their stuff. Ting is so far ahead of everybody else. You got to check them out.

17:17.680 --> 17:22.320
So go to linux.ting.com and a big thank you to Ting for sponsoring Linux Unplugged. I

17:22.320 --> 17:26.160
hear from people all the time who switched over to Ting and are totally thrilled and

17:26.160 --> 17:30.000
you can be one of them. linux.ting.com. Thank you to Ting.

17:30.000 --> 17:34.160
Actually I have a recent Ting story, real short one. Here recently I had it issued where

17:34.160 --> 17:37.720
I did something dumb on my phone and I couldn't figure it out. You know, imagine that, right?

17:37.720 --> 17:40.800
I mean do something foolish. I did something foolish. I was like, okay, well I'm gonna

17:40.800 --> 17:45.400
give these guys a call and see what's going on. Half a ring, not even a full ring. A person

17:45.400 --> 17:49.400
that, you know, actually is very well spoken, very easy to understand. I get up on the phone,

17:49.400 --> 17:53.720
ask them a question. Within like, I don't know, three seconds, they gave me numbers

17:53.720 --> 17:57.240
to start pressing into my phone. Pressed it in, boom, problem solved. That was the end

17:57.240 --> 18:00.880
of the conversation. Asked me if anything else, happy holidays, blah, blah, blah. We

18:00.880 --> 18:04.160
were done. I couldn't believe it. Someone values their time. It's the way to go.

18:04.160 --> 18:07.840
Yeah, no kidding, right? And if you just get sick of dealing with customer service reps

18:07.840 --> 18:09.400
and we sound like they're reading a script, this is such a...

18:09.400 --> 18:11.520
Or they're trying to upsell you. God, that's my big pet peeve.

18:11.520 --> 18:16.120
You know, Mail Hauler in the chat room says that he went from $100 a month to around $20

18:16.120 --> 18:17.520
a month when he switched to Ting.

18:17.520 --> 18:18.520
Wow.

18:18.520 --> 18:19.520
Yeah.

18:19.520 --> 18:20.520
Nice.

18:20.520 --> 18:21.520
That's a nice savings and with the beginning of the new year, it's a better time than

18:21.520 --> 18:25.800
now to get started and I think you'll see why I've been so happy with my Ting service.

18:25.800 --> 18:30.120
All right, so I'm bringing in the mumble room here. I wanted to start, you know, one thing

18:30.120 --> 18:34.960
I realized after this week's Linux action show, I made a huge mistake.

18:34.960 --> 18:35.960
Get it out of here.

18:35.960 --> 18:41.160
I completely, completely forgot to make a Wayland type prediction. And I know Ron's

18:41.160 --> 18:44.040
in the chat room here has a Wayland prediction as well, but I want to lay mine out and then

18:44.040 --> 18:51.440
we'll turn it over to him. So I think you're going to see in 2014, it's not, I don't know

18:51.440 --> 18:58.120
if competition is the right word, but if you're a distro out there, Ubuntu isn't in this camp.

18:58.120 --> 19:01.720
If you're a distro out there shipping this year, say the second round of releases in

19:01.720 --> 19:06.560
2014 and you don't have decent, some decent Wayland implementation that people can try

19:06.560 --> 19:11.400
out, even if it's sort of like what Fedora did this time around, that's going to be like

19:11.400 --> 19:15.640
a check mark in the anti column in the reviews. Like the people are reviewing it, we'll look

19:15.640 --> 19:19.280
at that and go, oh, well you can't even play with Wayland in this release. Like that's,

19:19.280 --> 19:23.520
that's going to become like one of the competitive features for distributions to have in there.

19:23.520 --> 19:27.460
Maybe not the first release of 2014, but their second release of 2014. Now, Ron's, I know

19:27.460 --> 19:31.200
you had a Roins. I'm not sure if I'm saying that right. I'm sure I'm not saying that right,

19:31.200 --> 19:34.320
but I know you had a Wayland prediction. What is it?

19:34.320 --> 19:39.840
I believe that in maybe, as I said, the second term of releases, um, in 2014, we're going

19:39.840 --> 19:47.720
to see possibly maybe gen two or the more bleeding edge distros to have such good Wayland

19:47.720 --> 19:53.920
support. Um, maybe for arch, the arch build system that is simple as rebuilding the package

19:53.920 --> 20:00.560
with Wayland support and getting, of course, Gnome and KDE support Wayland will have, so

20:00.560 --> 20:05.120
you don't have to run X client soon. It'll be pure Western Wayland.

20:05.120 --> 20:10.840
Do you think maybe like mid 2014, all of the gnome packages on my arch installation will

20:10.840 --> 20:15.160
update with Wayland support. And then at that point, all's I have to do is go over to the

20:15.160 --> 20:19.360
arch wiki, look at the article about switching over to Wayland and make the switch and I'm

20:19.360 --> 20:20.360
ready to go.

20:20.360 --> 20:21.360
Yeah.

20:21.360 --> 20:28.200
That's bold. So you're thinking I could actually run my whole desktop in 2014. You think like,

20:28.200 --> 20:30.960
what about like, what about like, uh, graphics drivers?

20:30.960 --> 20:37.560
Well, if you're on Intel, um, the Western Wayland drivers have already, um, solid Intel

20:37.560 --> 20:39.360
supports them. Um,

20:39.360 --> 20:45.280
I was gonna say, what about the Radeon drivers on the open source drill?

20:45.280 --> 20:50.400
Well, the open source drivers have, uh, of course going to adopt Wayland quicker than

20:50.400 --> 20:55.960
the proprietary ones, but it really, maybe we could see the proprietary one supporting

20:55.960 --> 21:04.400
Mia simply because steam, um, they want to support Ubuntu, but the open source drivers,

21:04.400 --> 21:06.440
they will support standard, which is Wayland.

21:06.440 --> 21:10.240
All right. Well, let me ask you guys this. Cause, uh, Corky in the chat room is saying

21:10.240 --> 21:15.120
that Wayland. And I think he means in terms of performance will be better than X 11 by

21:15.120 --> 21:22.520
December of 2014. I happen to disagree. I think at the, I think in December of 2014

21:22.520 --> 21:29.320
we'll have the pharaonic benchmarks and they'll show that X still has on games, the lead,

21:29.320 --> 21:30.520
but it's closer.

21:30.520 --> 21:33.640
I would say it's closer. Yeah. I mean, cause you got to figure out what's excellence, what,

21:33.640 --> 21:36.640
30 years, something like that. I mean, you know, it's got a little bit of a head start.

21:36.640 --> 21:39.920
Right. I think all these games are going to be using some sort of, you know, X Wayland

21:39.920 --> 21:45.720
compatibility and they're all going to be, I mean, for a long time, like years. So I

21:45.720 --> 21:51.320
just, I think like, like you'll see like, uh, I don't know, maybe you'll see like the

21:51.320 --> 21:56.920
window managers and the compositing, like all that kind of cleans up as a lot faster,

21:56.920 --> 22:00.540
but the stuff people actually use where they really need high performance, like so window

22:00.540 --> 22:06.580
draws will be faster, right? That'll be great. Menus and blurs and textures will be faster,

22:06.580 --> 22:11.240
but like games that I installed from steam will not actually see any big benefit from

22:11.240 --> 22:12.240
this in 2014.

22:12.240 --> 22:18.000
I've got one, uh, I've got one Wayland prediction for 2014 and that is the monkey suit.

22:18.000 --> 22:22.720
Oh yeah. No, that's going to happen. Yeah. That's hanging up in the closet right now,

22:22.720 --> 22:23.720
actually.

22:23.720 --> 22:28.640
I just like to expand on what you said. If you look at the way Wayland works, basically

22:28.640 --> 22:34.280
it's a protocol. Western is its implementation. So if you want your fancy window managers

22:34.280 --> 22:41.080
like, um, awesome to work in Wayland, you basically write a Western plugin for that.

22:41.080 --> 22:49.160
I imagine Gnome and KDE, um, their compositors are Mutter and Kaywin, their window managers.

22:49.160 --> 22:54.720
That's basically just a plugin for Wayland, um, or Western. That's all it is.

22:54.720 --> 23:00.440
I think, um, I think in 2014 you're going to see a lot more apps, um, adding Wayland

23:00.440 --> 23:06.560
support and then in 2015 it's going to be refinement time and then by 2016 and it's

23:06.560 --> 23:10.280
going to be refined and you're going to start seeing a lot more people actually using Wayland

23:10.280 --> 23:11.280
on distros.

23:11.280 --> 23:15.960
So you think it's not until 2016 that we're going to have the sweet, sweet life of performance

23:15.960 --> 23:18.120
and optimizations and all that kind of stuff?

23:18.120 --> 23:23.720
Yeah, because there's still a lot of apps and, and, and applications that haven't, uh,

23:23.720 --> 23:28.600
you know, added the support for Wayland yet. And I think that's going to be all, all during

23:28.600 --> 23:35.560
2014 and then in 2015 it's just going to be refining those packages and then 2016 it's,

23:35.560 --> 23:39.920
it's, it's going to be refined. It's going to be available and it's going to be easier

23:39.920 --> 23:45.360
to use than ever. It's still going to have some flaws, but it'll be, it'll be pretty

23:45.360 --> 23:46.360
good.

23:46.360 --> 23:49.320
All right. I think this one's pretty easy to make. Uh, SteamOS doesn't go anywhere near

23:49.320 --> 23:52.720
Wayland in 2014. All X all the time.

23:52.720 --> 23:56.640
Yeah. Yeah. Why would they, they have no reason to, um, their, their goal is not to try and

23:56.640 --> 23:59.760
push Wayland. Their goal is to get you to play video games. Right? Yeah, exactly. You

23:59.760 --> 24:05.000
know, seems kind of obvious. Yeah. Yeah. Uh, yeah, go ahead.

24:05.000 --> 24:11.720
Just like the, I don't, I'm not, um, I'm doubting anyone's knowledge here, but porting apps

24:11.720 --> 24:17.120
over to Wayland isn't as difficult as it sounds. If the toolkit supports Wayland, getting your

24:17.120 --> 24:19.840
programs for Wayland is not going to be too difficult.

24:19.840 --> 24:24.280
It's just a matter of doing it right on a matter of motivation. Quite honestly, it'll

24:24.280 --> 24:28.760
depend too. Like, so stuff that like stuff that really only uses cutie or GTK to get,

24:28.760 --> 24:31.720
you know, what it needs on the screen, they're going to almost have the work done for them

24:31.720 --> 24:37.200
by, by the upstream toolkit. But, uh, you know, things like video games, that's not

24:37.200 --> 24:42.280
necessarily the same thing or, or certain things like I would think a Lightworks comes

24:42.280 --> 24:47.080
to mind or blender. I'm not quite sure what the situation is there or anything that kind

24:47.080 --> 24:51.800
of has some customizations where they've either written their own toolkit or they've made

24:51.800 --> 24:55.040
changes to it. You know, those kinds of apps I'm thinking about where they just don't quite

24:55.040 --> 25:01.160
look like any other Linux desktop app. I think those kinds of things will struggle in 2014

25:01.160 --> 25:07.200
with Wayland. Yes. Well, the games, if OpenGL and SDL support Wayland and the games written

25:07.200 --> 25:11.600
in SDL and OpenGL chances are that game's going to be able to be ported over fairly

25:11.600 --> 25:16.620
simply. Yeah. I know that's what people say. And I still come back to the, everybody seems

25:16.620 --> 25:20.000
to think that developers are thinking, Oh goodie, we get to port something over something

25:20.000 --> 25:23.280
we didn't have to a month ago. No one cares. I mean, I don't think they really give a

25:23.280 --> 25:28.840
rat's butt. They're just now porting everything over to Linux now and they're getting, they're

25:28.840 --> 25:32.520
getting X support now and now they're gonna have to switch to Wayland. Well, if I'm them,

25:32.520 --> 25:36.600
I'm going to take my sweet time. If they do it right and they write to the, the underlying

25:36.600 --> 25:40.160
subsystems like OpenGL and all that kind of stuff. And then all you have to have is the

25:40.160 --> 25:44.120
change made at that level. And then everything that uses that will then use the new technology.

25:44.120 --> 25:47.560
But I think it's, I don't think it's as clear cut as that with some of this stuff. And I

25:47.560 --> 25:51.880
think the motivation is really the key issue. You know, end users are looking forward to

25:51.880 --> 25:55.800
this. Developers are thinking, God, I just got this work and leave me alone. Here's my

25:55.800 --> 26:00.400
big hope for Wayland. It's not really a prediction, but I really hope that if they do eventually

26:00.400 --> 26:05.800
get proprietary drivers, that a new version of Wayland doesn't necessarily break the proprietary

26:05.800 --> 26:09.560
driver like it did in Xorg. I don't think so. Because you know, this is a, you know,

26:09.560 --> 26:12.840
cause what they're going to have is protocol level support, right? So if you write to this

26:12.840 --> 26:16.160
version of the protocol, you get this. And then they just have a new version of the protocol,

26:16.160 --> 26:20.000
which gives you the new features. They shouldn't have to deprecate the old version. I wouldn't

26:20.000 --> 26:24.500
think, but you know, I look at this and during the last live stream on Sunday, we played

26:24.500 --> 26:29.280
this Intel video and the whole time and the whole video, Intel's talking about Wayland

26:29.280 --> 26:34.760
and it's a very nice sort of like infograph meets YouTube. And, and really what they,

26:34.760 --> 26:41.820
what they care about is digital signs, infotainment in cars, mobile devices. In fact, the Linux

26:41.820 --> 26:46.000
desktop in this video, all about Wayland is not even mentioned once, not a single desktop

26:46.000 --> 26:50.040
app, not anything about the Linux desktop at all. And so what I, what that to me means

26:50.040 --> 26:55.080
is the corporate backing isn't going to be on the desktop side of things. There's not

26:55.080 --> 26:59.040
going to be a lot of people spending a lot of money on moving over desktop applications

26:59.040 --> 27:02.800
to support that. So that two things that means to me is X Wayland is going to be around for

27:02.800 --> 27:07.420
a long time. That's pretty obvious. But the second thing that that I think unfortunately

27:07.420 --> 27:12.920
means is maybe, unfortunately or not, is all our hopes are in the toolkits, the QT guys

27:12.920 --> 27:18.320
and the GTK guys and what they do. And all hopes depend on them to do it right because

27:18.320 --> 27:22.760
they're going to bring everything along with them that uses those toolkits. And I think,

27:22.760 --> 27:28.320
oh, sorry. I think the proprietary drivers, you're probably going to see like an alpha

27:28.320 --> 27:34.400
release for proprietary drivers in 2015 I'd say, cause these guys aren't really going

27:34.400 --> 27:38.800
to jump on the bandwagon so quick. I mean, these companies, they're really slow.

27:38.800 --> 27:41.840
Intel might, right? I mean, Intel might, but yeah.

27:41.840 --> 27:45.520
If they can see a clear, clear cut benefit, absolutely. They'll jump all over it. Otherwise

27:45.520 --> 27:46.520
they don't care.

27:46.520 --> 27:50.800
I just, I mean, I've been burned so many times by Wayland predictions. Like if you go back

27:50.800 --> 27:54.600
over the years, a few years in a row, I've made Wayland predictions that just didn't

27:54.600 --> 27:59.180
pan out, but I kind of feel like this is the year that it does. And I, it's almost the

27:59.180 --> 28:03.700
more dangerous thing to say famous last words, but I just, it feels like things are more

28:03.700 --> 28:07.160
serious this time. There's more money behind it. There's more momentum and there's more

28:07.160 --> 28:09.120
of a recognized need too.

28:09.120 --> 28:14.880
I predict that we're going to keep predicting about Wayland for another three or four years.

28:14.880 --> 28:18.760
Yeah, I agree with that. That's true.

28:18.760 --> 28:21.200
What do you guys think about Mir?

28:21.200 --> 28:25.640
Yeah, we should probably talk about Mir a little bit, huh? We should, yeah.

28:25.640 --> 28:28.800
What do you think about that island out there in the sea?

28:28.800 --> 28:33.320
Well, so now that we look at it, I think it's pretty clear that Mir is an Ubuntu specific

28:33.320 --> 28:40.800
solution because just like we mentioned how QT and GTK and others will be building in

28:40.800 --> 28:45.360
the backend support to move over to Wayland, Unity will have the backend hooks to talk

28:45.360 --> 28:49.320
to Mir. And if you don't have something written to talk to Mir, you're not going to run on

28:49.320 --> 28:53.280
top of Mir unless you do it through xMir.

28:53.280 --> 28:58.840
And so it's going to be, it's almost hard to compare the two because Mir is only going

28:58.840 --> 29:02.760
to be on Ubuntu and we know we're not really going to see much of it in 2014.

29:02.760 --> 29:06.000
I think we're going to, I think it's probably going to keep pace with, I mean to a degree

29:06.000 --> 29:10.240
with only Ubuntu specific monkey suits happening either way. But I think it's in an Ubuntu

29:10.240 --> 29:13.360
specific sort of way, I think that it's going to be kind of like an upstart versus system

29:13.360 --> 29:18.200
D situation to where they kind of run in tandem. They're running alongside of each other and

29:18.200 --> 29:22.280
everybody's kind of doing their own thing, but I don't see explosive activity.

29:22.280 --> 29:26.920
They're almost not in, you know, now that I look at it after we've had a few months,

29:26.920 --> 29:33.960
actually half the year to sort of think about it, it's not in competition with Wayland.

29:33.960 --> 29:39.400
Wayland is on its own track. It has its, you know, it's a wider industry proposition.

29:39.400 --> 29:45.960
Mir's actual specific success is if it achieves exactly or even barely what they need for

29:45.960 --> 29:51.560
Ubuntu. And if it accomplishes that, it is technically successful because it's not a

29:51.560 --> 29:52.760
Wayland competitor.

29:52.760 --> 29:57.880
Wayland is a solution for all of Linux and for multiple types of devices. Mir is a solution

29:57.880 --> 29:58.880
for Ubuntu.

29:58.880 --> 29:59.880
Yeah.

29:59.880 --> 30:06.960
So basically, Microsoft is going to get less and less attention over the year 2014 and

30:06.960 --> 30:09.240
Canonical is going to become more like Microsoft.

30:09.240 --> 30:11.600
No, that's Google's job.

30:11.600 --> 30:12.600
Oh!

30:12.600 --> 30:16.900
No, it's going to be Google this, Google that. I mean, it's going to be Chromebooks and Android

30:16.900 --> 30:20.840
devices in the tech news for the next, for 2014. It's going to dominate it. Just watch.

30:20.840 --> 30:27.320
All right. Well, I got a couple of predictions along that line. Specifically, like the mobile

30:27.320 --> 30:29.920
stuff. So is there any other thoughts on Mir or Wayland before we move to another?

30:29.920 --> 30:37.040
Well, I was going to say, I'm kind of wondering if with there being XMir and XWayland, whether

30:37.040 --> 30:45.200
developers won't just stick with X, so their applications can work on both. So we'll have

30:45.200 --> 30:51.880
those better solutions, but not applications that actually take advantage of them.

30:51.880 --> 30:57.880
Our desktop environments will speak directly to the display server and all the applications

30:57.880 --> 31:01.280
we run on top of them will be using an X11 compatibility thing.

31:01.280 --> 31:02.880
It's going to be a long time, guys.

31:02.880 --> 31:06.600
Yeah. None of this happens. You're going to have to hold a stick up to see any of it move.

31:06.600 --> 31:12.320
I think what you might start to see, if we're really lucky at the end of 2014, we'll see

31:12.320 --> 31:18.240
that the XWayland stuff and the XMir stuff is able to take advantage of so many efficiencies

31:18.240 --> 31:23.200
by replacing the display server underneath that maybe performance will be equal or even

31:23.200 --> 31:24.200
better.

31:24.200 --> 31:29.280
I mean, that'd be awesome. If we have such efficiencies in new code design, because everybody

31:29.280 --> 31:34.080
knows Xorg is such a beast, that if by totally getting rid of all of that plumbing and having

31:34.080 --> 31:39.000
a cleaner pipeline that goes directly from the desktop to the display driver to the kernel

31:39.000 --> 31:43.040
to the hardware, et cetera, et cetera, that whole path is much more efficient.

31:43.040 --> 31:46.240
Even though you're running something through emulation, just like we've all seen sometimes

31:46.240 --> 31:50.320
when you run a wine game under Linux, it actually performs better than it does under Windows

31:50.320 --> 31:53.960
in certain circumstances, maybe we'll see that same kind of thing happen with stuff

31:53.960 --> 31:57.160
running under X emulation on these new display servers.

31:57.160 --> 31:58.160
Yeah.

31:58.160 --> 32:03.560
All right. Well, before we get to our next category of predictions, I got a little prediction

32:03.560 --> 32:08.640
for all of you guys. This is going to be... Actually, I'm not even kidding. This is really going

32:08.640 --> 32:12.640
to be the year where we all continue to build out our own cloud, and that's why I'm so happy

32:12.640 --> 32:17.800
that DigitalOcean is a sponsor of Linux Unplugged, because they are going to enable this for

32:17.800 --> 32:22.200
a lot of us. DigitalOcean is simple cloud hosting dedicated to offering the most intuitive

32:22.200 --> 32:25.680
and easy way to spin up a cloud server, and you get root access to this thing when they

32:25.680 --> 32:26.680
spin this up.

32:26.680 --> 32:31.160
Now, check this out. Users can create a cloud server in 55 seconds, and pricing plans start

32:31.160 --> 32:36.000
at only $5 per month, which gets you 512 megs of RAM, a 20 gigabyte SSD, and a terabyte

32:36.000 --> 32:40.640
of transfer. You think about all the different types of devices you can put Linux on. When

32:40.640 --> 32:45.820
you put a Linux box out there with 512 megs of RAM and a 20 gig SSD, that thing can... As

32:45.820 --> 32:51.640
a server, you will be amazed at the performance you can get out of a Linux box in these conditions.

32:51.640 --> 32:56.640
I've got a box up there right now that's doing all kinds of backend. Frequently, I have it

32:56.640 --> 33:01.480
recording a second backup copy of our live stream in case we have an outage. I have it

33:01.480 --> 33:05.800
distributing files for the Unfilter show. Gigabytes. Gigabytes and gigabytes and gigabytes

33:05.800 --> 33:11.980
of files now, like 20 gigabytes worth of files that it's constantly sending out and distributing

33:11.980 --> 33:16.560
to our Unfilter supporters. I have all kinds of different tasks that I can spin up on it

33:16.560 --> 33:22.840
really quick. When you're paying $5 a month, there's so many great advantages of productivity

33:22.840 --> 33:29.120
and testing and just experimentation and training and self-learning that $5 is just an insane

33:29.120 --> 33:32.880
value. DigitalOcean has data centers in New York, San Francisco, and Amsterdam. You can

33:32.880 --> 33:35.960
distribute it out as you want. I've picked New York. That way, I have something on the

33:35.960 --> 33:40.720
other side of the coast. Their interface is simple. They have an intuitive control panel.

33:40.720 --> 33:44.520
Power users can even set up and replicate it on their own by using their straightforward

33:44.520 --> 33:50.000
API. DigitalOcean also offers a vast collection of tutorials in their community section on

33:50.000 --> 33:55.960
their site. Users who submit articles can get $50 per published piece. Here's a great

33:55.960 --> 34:00.800
article. This hit our Linux action show subreddit this week. How to create a Beowulf cluster

34:00.800 --> 34:04.320
using a.212.04 VPS instances on DigitalOcean.

34:04.320 --> 34:05.320
Nice.

34:05.320 --> 34:07.320
A Beowulf cluster, Matt.

34:07.320 --> 34:10.920
Wow. Wow. They really went there. Okay, that's awesome.

34:10.920 --> 34:16.920
I know. How cool is that? It really is, right? I'm pretty impressed by that. I don't know

34:16.920 --> 34:21.800
if I'd be using that, but for the training aspect of it, it's actually kind of a great

34:21.800 --> 34:27.360
opportunity. The way DigitalOcean pricing works is for $5, you get $5 a month, you get

34:27.360 --> 34:30.800
a quantified cost, you get a machine you can always access. If you just want to do some

34:30.800 --> 34:36.000
basic testing, they also offer hourly pricing. If you're working on an open source project

34:36.000 --> 34:40.160
or I mean, gosh, maybe it's closed source.

34:40.160 --> 34:43.100
It's negative in the freedom dimension.

34:43.100 --> 34:48.040
You could upload it to DigitalOcean, use the hourly pricing, and have people all over the

34:48.040 --> 34:51.560
world bang on it for a while, give you real world performance reports. You don't have

34:51.560 --> 34:55.640
to worry about configuring your firewall. Look at these prices. I mean, it's unbeatable

34:55.640 --> 35:00.600
what you can do. The great thing is the control panel is so nice you can, like what I've done,

35:00.600 --> 35:05.120
I have an arch server, yes, I said arch, set up on DigitalOcean and I image that sucker

35:05.120 --> 35:08.720
and when I want to deploy another one, I can just redeploy that image. It's ready to go.

35:08.720 --> 35:12.960
It's super quick. You combine that with pay-as-you-go pricing, that's going to be really easy.

35:12.960 --> 35:17.880
Here's how you get started. Go over to DigitalOcean.com. Check out what we've been talking about. If

35:17.880 --> 35:22.000
you have a bad memory, just go to any recent episode of Linux Unplugged. Go down to the

35:22.000 --> 35:25.640
show notes. We have a banner right there for DigitalOcean and if you use our promo code

35:25.640 --> 35:29.240
Linux Unplugged December. Now, it's going to work for a little bit longer, but take

35:29.240 --> 35:33.480
advantage of this while you can. Linux Unplugged December. You'll get a $10 credit. That'll

35:33.480 --> 35:37.840
let you try out the $5 server for two months or you can get the $10 server for one month.

35:37.840 --> 35:42.100
I've been using the $5 server for a few months now and it's awesome. It's great. I really

35:42.100 --> 35:47.560
like it. Go to DigitalOcean.com, Linux Unplugged December to get that $10 credit and I think

35:47.560 --> 35:51.400
you're going to be really impressed. This is really an awesome service and the performance

35:51.400 --> 35:55.360
has been great. I just updated my Archbox last night and I just sit there and I watch

35:55.360 --> 35:59.760
those download speeds as it writes those transactions to the SSD and I'm just like, oh gosh, yes.

35:59.760 --> 36:04.600
And here's something I could see someone using it for too. Let's say you have an Arch install

36:04.600 --> 36:09.600
and you're thinking, oh, you know, I want to actually try, I read mixed signals in this

36:09.600 --> 36:12.200
one package and I'm not really sure if it's going to build right. I don't really want

36:12.200 --> 36:15.560
to hose my system, but I want just kind of a test bed to test out different packages

36:15.560 --> 36:18.560
that maybe have an iffy history. It's a great place to do that kind of stuff. You don't

36:18.560 --> 36:21.980
have to be super geeky with it. You can use it as a tool just to try things out where

36:21.980 --> 36:25.200
you don't want to do it on your main computer. And the snapshots make it easy to roll back.

36:25.200 --> 36:29.880
Pirate Ghost. Pirate Ghost in our chat room, which is a great name, says, I have 11 VPSs

36:29.880 --> 36:36.180
on DigitalOcean. Nice. How about that? They also are pretty cool about, he says, helping

36:36.180 --> 36:40.840
him with working on open source projects. That's cool. Yeah. So big thanks to DigitalOcean

36:40.840 --> 36:47.440
for sponsoring Linux Unplugged. Okay. So this is kind of a spinoff of the prediction I made

36:47.440 --> 36:52.680
on Sunday, but I want to revisit this in light of a story that came out and I didn't cover

36:52.680 --> 36:56.600
it in last because it didn't really seem, at the time when I thought about it at first,

36:56.600 --> 37:00.720
it didn't seem Linux specific enough to me to talk about it on the Linux Action Show.

37:00.720 --> 37:04.080
But now that I think about the larger ramifications of this story, I actually think it's very

37:04.080 --> 37:10.440
much going to become a Linux story. And what I'm talking about is these recent published

37:10.440 --> 37:16.460
reports from Der Spiegel that the NSA is intercepting laptops and other hardware like routers and

37:16.460 --> 37:21.200
firewalls purchased online and they can intercept the package when it leaves the company you

37:21.200 --> 37:27.280
buy it from, say Dell, and they will install malware, in some cases hardware, in some cases

37:27.280 --> 37:34.120
software, to do whatever the hell they want. The report indicates also, by the way, some

37:34.120 --> 37:39.120
of the companies including this, let me see, I'll find it right here. Oh, here we go. Dell's

37:39.120 --> 37:45.120
in there. Shocker! Yeah, I know, right? Western Digital, Seagate, Juniper Networks, MacStore,

37:45.120 --> 37:51.280
Samsung, Hawaii, and Microsoft are included in companies in this report that says they

37:51.280 --> 37:56.160
worked with. The report even indicates the NSA can even exploit air reports from Microsoft

37:56.160 --> 37:59.800
Windows operating systems by intercepting the air reports and determining what is wrong

37:59.800 --> 38:04.000
with the target's computer and then the NSA can attack it with Trojans or other malware.

38:04.000 --> 38:09.400
That's just so sleazy. To gain physical access, the NSA reportedly worked with the CIA and

38:09.400 --> 38:15.080
the FBI on sensitive missions that sometimes included flying NSA agents on FBI jets to

38:15.080 --> 38:18.880
plant wiretaps that gets them to their destination at the right time so they can help disappear

38:18.880 --> 38:24.280
again undetected after even as little of a half hour's work, the report notes. So what

38:24.280 --> 38:30.040
you have here is machines, and here's an example of what they call a hardware implant. One

38:30.040 --> 38:34.720
of the products the NSA appears to use, compromises target's computer, is codenamed Cottonmouth,

38:34.720 --> 38:39.280
and it's been available since 2009. It's a USB hardware implant that secretly provides

38:39.280 --> 38:43.880
the NSA with remote access to the compromised machine. Some of these, like you format the

38:43.880 --> 38:49.040
machine, you wipe the master boot record, you delete the petition table, some of these

38:49.040 --> 38:54.680
actually will reinstall themselves after you wipe. Now everything appears to be sort of

38:54.680 --> 39:01.340
targeting Windows. You look at a lot of this stuff, and once again, it's requiring either

39:01.340 --> 39:05.980
cooperation with the manufacturer or the fact that they can take advantage of zero-day exploits

39:05.980 --> 39:13.800
or whatever it is. I read this and I think these NSA leaks, in 2014, what we'll see is

39:13.800 --> 39:19.840
security becoming a sexy feature that companies are going to compete on. Linux and open source

39:19.840 --> 39:25.480
will inherently be better suited to meet and increase demand there, and I think specifically

39:25.480 --> 39:29.920
you're going to see a lot of new secure chat programs, file transfers will explode, secure

39:29.920 --> 39:33.360
file transfers are going to explode in 2014. We're going to have our pick of our litter,

39:33.360 --> 39:37.140
and some of them will be closed source, but a lot of them, because what's going to happen

39:37.140 --> 39:40.080
is first you'll have a first round of stuff that's closed source. You've already seen

39:40.080 --> 39:42.920
a few of these new chat programs that have come out that have been closed source, and

39:42.920 --> 39:47.080
the first thing everybody now says is, well, it's not open source, how can I trust it?

39:47.080 --> 39:51.360
Everybody's saying that now. So the next competitive step people are going to have to make in order

39:51.360 --> 39:55.440
to check that box off and be competitive is they're going to have to go open source. So

39:55.440 --> 40:01.120
as a result of trying to chase these sexy features they can sell to consumers, they'll

40:01.120 --> 40:05.080
open source the software so that way they can say, well, here's the software, it's open

40:05.080 --> 40:07.760
source, pay us for the service.

40:07.760 --> 40:10.960
So I mean, here's the bigger thing that I see exploding with that, because all these

40:10.960 --> 40:16.540
things are great, and unless you know how to audit code, and I sure as hell don't, open

40:16.540 --> 40:19.960
source or closed source, that's awesome, but even if it starts out open source, you

40:19.960 --> 40:23.120
get it on your system that's perhaps already infected with something that you don't know,

40:23.120 --> 40:27.600
so you've taken benign software on an infected system that's got some weird hardware hack

40:27.600 --> 40:28.600
thing going on.

40:28.600 --> 40:33.280
Here's what I see being successful. Someone opens up a consultant firm that will actually

40:33.280 --> 40:37.600
audit your hardware. That's what I want to see. I want to see someone that actually

40:37.600 --> 40:41.280
– that people can vet that can actually see what they're doing and actually have

40:41.280 --> 40:45.920
a success record to look at. I think that's probably the only real defense against this,

40:45.920 --> 40:51.360
because you can – otherwise, it's just peanuts and beer at that point. Peanuts make

40:51.360 --> 40:55.820
you thirsty. You're going to have more beer. Or the security industry with the firewall

40:55.820 --> 40:58.400
programs and various security programs you see in Windows.

40:58.400 --> 40:59.400
You can see that, but you do have the advantage –

40:59.400 --> 41:00.400
I'm not buying it.

41:00.400 --> 41:03.200
You have the advantage, like what happened with the – I mean, I see what you're saying

41:03.200 --> 41:07.280
there. You and I would not really be able to check it, but you have the example of the

41:07.280 --> 41:10.200
TrueCrypt project where enough in the community could get together and say, we're going

41:10.200 --> 41:11.440
to audit this as a community.

41:11.440 --> 41:16.400
Oh, yeah. It's great coming down to your computer, but what if – and again, look

41:16.400 --> 41:20.600
how – I hate to be paranoid, but look what's already happening. What if you have a setup

41:20.600 --> 41:23.540
on your computer you're not aware of that takes a benign program that's completely

41:23.540 --> 41:28.140
safe and makes it unsafe on your computer? It becomes a mood issue.

41:28.140 --> 41:35.160
This is more of a threat, I think, with Windows. What you have to do is you have to make best

41:35.160 --> 41:39.080
efforts, your best rational effort that you can make. The first thing is if you're really

41:39.080 --> 41:40.080
paranoid about security –

41:40.080 --> 41:41.600
Yeah, stop using Windows.

41:41.600 --> 41:45.960
You do. You seriously have to consider, well, if I really care about this, I should probably

41:45.960 --> 41:50.020
stop using Windows. It doesn't guarantee that some Linux box won't have something

41:50.020 --> 41:51.640
on there that is monitoring you and maybe –

41:51.640 --> 41:53.920
But Windows is slow-hanging fruit, certainly.

41:53.920 --> 41:58.520
Wouldn't it – what would really be scary is if some distro by default shipped it so

41:58.520 --> 42:02.080
that everything you typed into the launcher was sent over the network that somebody could

42:02.080 --> 42:06.120
capture. That would almost be insecure right out of the box and be really freaky, and if

42:06.120 --> 42:09.920
that ever got popular, it would be a heyday for the NSA. But as long as nothing like that

42:09.920 --> 42:10.920
happens.

42:10.920 --> 42:15.000
Yeah, I think at this point, Linux is definitely low-hanging fruit, or Windows is low-hanging

42:15.000 --> 42:20.120
fruit, and I think Linux is probably generally pretty safe at this point. That's not to

42:20.120 --> 42:22.800
say that embedded programs and things might not be an issue later on.

42:22.800 --> 42:23.800
Mumble – go ahead, Ryan.

42:23.800 --> 42:27.440
Create a hardware test, call it the Snowden test.

42:27.440 --> 42:28.440
There you go.

42:28.440 --> 42:32.600
Yeah, yeah. You plug it in and it runs a Snowden audit.

42:32.600 --> 42:33.600
Exactly.

42:33.600 --> 42:35.560
Make a little humming sound.

42:35.560 --> 42:36.920
Yeah, yeah, yeah.

42:36.920 --> 42:40.640
I think we just all need to learn how to build our own computers and make processors.

42:40.640 --> 42:41.640
Oh, geez.

42:41.640 --> 42:47.600
Absolutely. I got my clean room ready and I got my suit, so I'll get right on that.

42:47.600 --> 42:54.040
Maybe open source hardware will become a more popular thing because you can audit the hardware.

42:54.040 --> 42:57.120
What about something that sits on your network and is watching your machine?

42:57.120 --> 42:58.120
That would be the most effective.

42:58.120 --> 43:02.640
Like at the firewall level. Like this firewall includes packet inspection where we'll alert

43:02.640 --> 43:05.280
you if it looks like something's leaking from your computer.

43:05.280 --> 43:07.280
That would make the most sense to me because –

43:07.280 --> 43:08.280
Yeah.

43:08.280 --> 43:09.280
AT&SA.

43:09.280 --> 43:14.280
Yeah. I mean, it could be a marketing opportunity for PF Sense.

43:14.280 --> 43:18.240
I mean, at the end of the day, as Heaven's Revenge points out in the chat room, it's

43:18.240 --> 43:21.280
completely spot on. If someone wants to do something badly enough, they're going to

43:21.280 --> 43:25.480
do it. I mean, that's just what it is. All you can do is minimize that damage by using

43:25.480 --> 43:26.480
Linux.

43:26.480 --> 43:28.440
That's right. Yeah, exactly. That's where I go back to you just have to make the rational

43:28.440 --> 43:32.280
compromise. So you can't go tinfoil hat. You can't install a Faraday cage in your

43:32.280 --> 43:37.960
house. But what you can do is – we could. But again, there's like diminishing returns,

43:37.960 --> 43:44.000
right? But what you could do is use Linux. Use an open source email program. Use open

43:44.000 --> 43:50.760
hardware if you can. And I think that just – that base fact will drive human behavior

43:50.760 --> 43:54.400
towards open source and Linux. Not like – I don't know if it's going to be some sort

43:54.400 --> 43:59.400
of mass hysteria, but when you have decision makers, people who are designing systems for

43:59.400 --> 44:04.760
businesses that need to be secure, CEOs who are paranoid about corporate espionage and

44:04.760 --> 44:08.600
things like this. Because all these things the NSA is doing, some private company could

44:08.600 --> 44:09.600
do as well.

44:09.600 --> 44:10.600
That's true.

44:10.600 --> 44:15.580
In fact, in some cases, we have now documented evidence that the NSA has weakened industry

44:15.580 --> 44:19.280
standards to make their job easier and other attackers could just take advantage of those

44:19.280 --> 44:25.000
weaknesses too. Hello, RSA. Right? So it's one of these things where because the vulnerability

44:25.000 --> 44:28.920
exists, it's not just the NSA that can take advantage of it. So there's like all of

44:28.920 --> 44:32.840
these reasons that just stack up. And the rational person that really is concerned about

44:32.840 --> 44:36.600
this would have to – I mean, I think the decision you come to is some sort of open

44:36.600 --> 44:39.360
source system. Maybe it's not Linux. Maybe it's BSD.

44:39.360 --> 44:40.360
Exactly.

44:40.360 --> 44:41.360
But I think –

44:41.360 --> 44:44.680
The NSA uses Git for their software that exploits people.

44:44.680 --> 44:46.480
It's probably all CVS.

44:46.480 --> 44:49.800
Yeah, right. Microsoft Bob.

44:49.800 --> 44:55.240
Yeah. Anybody else have any NSA-related predictions in the chat room?

44:55.240 --> 44:59.400
I just want to say that you don't want to put tinfoil on your head because it will increase

44:59.400 --> 45:02.760
the signal. You want to put a wet towel. That's all I got to say.

45:02.760 --> 45:07.320
Good to know. Good to know. Good to know. All right. Well, any other predictions, Jerem?

45:07.320 --> 45:08.800
I'm opening up the floor now.

45:08.800 --> 45:09.800
Yeah.

45:09.800 --> 45:10.800
Go ahead.

45:10.800 --> 45:11.800
I've got a prediction about Canonical.

45:11.800 --> 45:12.800
Oh, okay. Let's do it.

45:12.800 --> 45:19.560
Yeah. And that is that I think by the end of next year, Canonical might announce that

45:19.560 --> 45:21.840
they're going to make their own kernel.

45:21.840 --> 45:22.840
So not a fork?

45:22.840 --> 45:25.040
That is optimized for mirror.

45:25.040 --> 45:30.640
It could be a fork, but I think that they're going to feel like they can't control Linux

45:30.640 --> 45:34.120
and they want something that is custom-tailored to their needs for mirror and stuff.

45:34.120 --> 45:38.920
So they'll have the Ubuntu kernel that's like a snapshot of like the semi-latest kernel

45:38.920 --> 45:41.520
that was out at the time they make this decision?

45:41.520 --> 45:42.520
Yes, exactly.

45:42.520 --> 45:43.520
Can I interject?

45:43.520 --> 45:44.520
Yeah.

45:44.520 --> 45:46.400
If Popey was here, he would add the Ubuntu Canonical.

45:46.400 --> 45:48.440
He is. He is here.

45:48.440 --> 45:53.840
Well, I'm sure he's going to add that Ubuntu has no intentions or never will modest by

45:53.840 --> 45:54.840
–

45:54.840 --> 45:59.000
So we took our kernel and we connected it to our display server and then connected it

45:59.000 --> 46:07.480
to our upstart in its system and then we just called it all one thing, the Ubuntu base.

46:07.480 --> 46:13.760
So I think first of all, you need to clarify what BitPuffin was suggesting because what

46:13.760 --> 46:17.440
I heard BitPuffin say and what Chris said were two different things.

46:17.440 --> 46:18.440
Yeah.

46:18.440 --> 46:19.440
No, I was just joking.

46:19.440 --> 46:20.440
Yeah.

46:20.440 --> 46:23.760
I heard and it sounds like he's trying to say that Canonical is going to turn Ubuntu

46:23.760 --> 46:25.400
into their own system completely.

46:25.400 --> 46:26.400
I can't see it.

46:26.400 --> 46:27.400
It's too much.

46:27.400 --> 46:30.880
Well, I think they would still like try to maintain some kind of Linux compatibility

46:30.880 --> 46:32.960
like they do with Xmerve.

46:32.960 --> 46:35.240
But BitPuffin, don't they have the best of both worlds right now?

46:35.240 --> 46:39.600
They get one of the best kernels out there developed by a different team and then they

46:39.600 --> 46:44.000
can pick the version they want to run and they can run that version for as long as they

46:44.000 --> 46:48.360
want to run it and do whatever patches they need to do to keep it secure.

46:48.360 --> 46:50.920
And so they can kind of do that now without having –

46:50.920 --> 46:52.400
That's exactly what we do.

46:52.400 --> 46:53.400
Yeah.

46:53.400 --> 46:58.080
We take a kernel and then we apply patches to it and that's our kernel.

46:58.080 --> 46:59.800
That seems like path least resistance, yeah.

46:59.800 --> 47:04.440
So I guess BitPuffin, for your prediction to work, you'd have to have some sort of decision

47:04.440 --> 47:09.520
the kernel team was making that was inherently incompatible with Ubuntu's goals.

47:09.520 --> 47:15.740
Yeah, something like that but also that they realize that Linux is a huge train that they

47:15.740 --> 47:20.360
really don't have any control over and if they want to have their own stuff, they're

47:20.360 --> 47:26.120
going to have to fork and stuff but then they can realize that Linux is like – it covers

47:26.120 --> 47:30.760
so many stuff that they don't really need and bending Linux to be the way that they

47:30.760 --> 47:34.560
would maybe need it to be would require it to –

47:34.560 --> 47:35.560
The herd kernel.

47:35.560 --> 47:36.560
A lot of more work basically.

47:36.560 --> 47:37.560
Yeah.

47:37.560 --> 47:38.560
I don't think that's –

47:38.560 --> 47:41.520
So maybe they would feel better to start from scratch and implement things that – ways

47:41.520 --> 47:43.840
that benefit them.

47:43.840 --> 47:48.440
I don't think that they can make a kernel that anywhere compares to Linux kernel.

47:48.440 --> 47:52.440
Maybe they could license the Microsoft kernel, 2014 Canonical Science License Agreement with

47:52.440 --> 47:53.440
Microsoft.

47:53.440 --> 47:57.240
I think you're kind of – yeah, it's kind of going like a ReactOS type of thing.

47:57.240 --> 48:00.280
So we're going to see what, Ubuntu NT edition?

48:00.280 --> 48:06.800
I would say if anyone is going to fork Linux, it's going to be the Mint guys because they

48:06.800 --> 48:08.120
just like forking stuff.

48:08.120 --> 48:09.740
No, it's going to be Google.

48:09.740 --> 48:13.760
This just strikes me and I hear this a lot.

48:13.760 --> 48:18.840
I don't want you to say this on IRC and it says this on podcast, this is – shock for

48:18.840 --> 48:22.600
you, you're not the first person to suggest this.

48:22.600 --> 48:28.000
I hear this a lot and it seems to be the natural exaggeration of well, Canonical will fork

48:28.000 --> 48:36.320
X next or whatever X might be and it's just the natural most exaggerated, most ridiculous

48:36.320 --> 48:38.920
thing you can possibly suggest.

48:38.920 --> 48:39.920
It's the end point.

48:39.920 --> 48:40.920
Yeah, but I've never made a fork.

48:40.920 --> 48:41.920
It's the end point.

48:41.920 --> 48:47.600
Canonical is going to fork Atari, sure.

48:47.600 --> 48:48.600
Now I want it to happen.

48:48.600 --> 48:52.800
Now that we've recorded all of this and then BitPuff to emerge totally victorious.

48:52.800 --> 48:54.920
I think it just comes down to practicality too.

48:54.920 --> 48:58.160
Yeah, it's just more beneficial not to.

48:58.160 --> 48:59.160
And –

48:59.160 --> 49:00.160
Adapt just need be.

49:00.160 --> 49:01.160
Because if you look –

49:01.160 --> 49:02.160
Everything else has already been done.

49:02.160 --> 49:08.320
There's already a fork of Firefox in Debian and there's already a fork of OpenOffice

49:08.320 --> 49:09.320
as LibreOffice.

49:09.320 --> 49:10.800
Everything has already been done.

49:10.800 --> 49:14.960
So the one thing left to do that the only company that's so ridiculously outrageous

49:14.960 --> 49:16.760
that would do it must be Canonical.

49:16.760 --> 49:17.760
Well, okay.

49:17.760 --> 49:18.760
I agree with you.

49:18.760 --> 49:19.760
There won't be.

49:19.760 --> 49:24.120
No, but I think that they would provide an experience which is like when they write the

49:24.120 --> 49:28.880
display server, they kind of write it so that Unity works well with Mirror and Mirror works

49:28.880 --> 49:29.880
well with Unity.

49:29.880 --> 49:34.920
I would think that they would want to do something similar with the core system kernel stuff

49:34.920 --> 49:35.920
too.

49:35.920 --> 49:36.920
So the other direction would be –

49:36.920 --> 49:37.920
Kind of integrated.

49:37.920 --> 49:40.760
Is you could take – So the Apple rationale was – Well, because you could look at it

49:40.760 --> 49:42.320
from the Mac OS X standpoint.

49:42.320 --> 49:43.400
They built their own display server.

49:43.400 --> 49:47.080
They built their own kernel and then they have a BSD user land tools.

49:47.080 --> 49:51.320
And so that's the extension of what you're saying is you'd have Canonical builds the

49:51.320 --> 49:54.320
Ubuntu desktop to build the display server and then they have a Linux user land tool

49:54.320 --> 49:57.240
base but it's an Ubuntu kernel.

49:57.240 --> 49:59.240
Yeah, I just don't see that.

49:59.240 --> 50:00.240
Not in 2014.

50:00.240 --> 50:01.240
No.

50:01.240 --> 50:02.240
Not at all.

50:02.240 --> 50:03.240
I don't think there would be an announcement or something.

50:03.240 --> 50:04.240
Oh, right.

50:04.240 --> 50:05.240
Maybe the year after.

50:05.240 --> 50:06.240
Maybe a couple of years.

50:06.240 --> 50:07.240
Maybe 2020.

50:07.240 --> 50:09.240
Now I see Mark Shuttleworth in a Buck Rogers thing twirling through space.

50:09.240 --> 50:10.600
I mean it's going to be something like that.

50:10.600 --> 50:13.200
No, it just practically doesn't make any sense.

50:13.200 --> 50:19.480
The reason that I think they would never do that is because I mean they're not extremely

50:19.480 --> 50:20.480
rich.

50:20.480 --> 50:21.480
They're not billionaires.

50:21.480 --> 50:24.840
I mean you have to take – if you're going to make your own kernel, you have to really

50:24.840 --> 50:29.120
make sure everything works exactly like the Linux kernel was working before on Ubuntu

50:29.120 --> 50:32.920
and they just – I don't think they have the resources for that.

50:32.920 --> 50:36.480
I would imagine them working the GNU user land before they forked the kernel.

50:36.480 --> 50:38.360
I mean look at Android.

50:38.360 --> 50:39.360
And why fork that down?

50:39.360 --> 50:40.360
Yeah, I can see that.

50:40.360 --> 50:41.360
It's down deep, you know?

50:41.360 --> 50:42.360
Yeah, if anybody's –

50:42.360 --> 50:43.560
Did I just give Popey an idea?

50:43.560 --> 50:46.680
If anybody's going to fork – no, but seriously, if anybody's going to fork the Linux kernel,

50:46.680 --> 50:49.160
it would be Google for Android, right?

50:49.160 --> 50:50.160
Yeah.

50:50.160 --> 50:51.600
And they could probably pull it off.

50:51.600 --> 50:53.560
But even they aren't doing it necessarily.

50:53.560 --> 50:57.960
I mean they are using certain things from it without going that deep into it.

50:57.960 --> 50:58.960
They only fork what they have to.

50:58.960 --> 51:00.720
Well, they don't want to make Linus swear at them.

51:00.720 --> 51:01.720
I think it's –

51:01.720 --> 51:02.720
Yeah, exactly.

51:02.720 --> 51:03.720
Well, they don't have to.

51:03.720 --> 51:04.720
Yeah.

51:04.720 --> 51:05.720
All right.

51:05.720 --> 51:06.720
Monica loves the Linux kernel.

51:06.720 --> 51:08.200
Last call for 2014 predictions.

51:08.200 --> 51:09.200
Anybody have –

51:09.200 --> 51:10.200
Oh, sure.

51:10.200 --> 51:18.520
If I may restate Ant's predictions for Ubuntu, no companies will use Ubuntu in one and a

51:18.520 --> 51:19.520
half years.

51:19.520 --> 51:22.720
Ubuntu in general will be dead in two years.

51:22.720 --> 51:23.720
What?

51:23.720 --> 51:24.720
Whoa.

51:24.720 --> 51:25.720
Based on –

51:25.720 --> 51:26.720
This is not his predictions.

51:26.720 --> 51:27.720
Not his, yeah.

51:27.720 --> 51:28.720
Let me –

51:28.720 --> 51:29.720
They're Ant's.

51:29.720 --> 51:36.280
I think it would probably be more accurate to say that these were the drunken ramblings

51:36.280 --> 51:39.120
of Ant, which they could well be the drunken ramblings of anyone.

51:39.120 --> 51:40.120
Yeah, there you go.

51:40.120 --> 51:41.120
These podcasts are probably the drunken ramblings of us.

51:41.120 --> 51:46.880
I'm not going to say anything negative regarding Ubuntu, but I am going to say that in the

51:46.880 --> 51:51.800
year 2014, openSUSE is probably going to get even more popular than it did in 2013.

51:51.800 --> 51:52.800
Okay.

51:52.800 --> 51:53.800
All right.

51:53.800 --> 51:54.800
Yeah, I know it is.

51:54.800 --> 51:58.880
Ubuntu is going to be more popular in 2014 than it was in this previous year, which I

51:58.880 --> 51:59.880
agree with.

51:59.880 --> 52:00.880
They're all going to be more popular.

52:00.880 --> 52:01.880
Yeah.

52:01.880 --> 52:05.200
Look, I think at the end of the day, when I load Linux on someone's computer that doesn't

52:05.200 --> 52:10.520
know Linux yet, I load Ubuntu on there no matter how I feel about it because it's going

52:10.520 --> 52:11.520
to be easier for them.

52:11.520 --> 52:12.520
Woo-hoo.

52:12.520 --> 52:16.760
Got a woo-hoo of approval there.

52:16.760 --> 52:21.400
I predict that Amazon is going to get tired of everybody using their affiliate system,

52:21.400 --> 52:24.560
so they're going to make their own distro, make their own browsers, and their own search

52:24.560 --> 52:25.560
engine.

52:25.560 --> 52:26.560
Brilliant.

52:26.560 --> 52:27.560
Yeah, right.

52:27.560 --> 52:33.200
Hey, haven't they got their own distro on their Amazon Kindle Fire and their own affiliate

52:33.200 --> 52:34.200
revenue system there?

52:34.200 --> 52:35.200
Technically, yeah.

52:35.200 --> 52:36.200
Yeah.

52:36.200 --> 52:37.200
Actually, I think you're right.

52:37.200 --> 52:38.200
I didn't think of it that way.

52:38.200 --> 52:39.200
Now, here's a good question.

52:39.200 --> 52:40.520
They're all Android forks, so technically, yeah.

52:40.520 --> 52:44.360
What was different between the year affiliate system and the way it's integrated into the

52:44.360 --> 52:45.960
Dash?

52:45.960 --> 52:50.560
Product placement because they're actually advertising products, yeah, and not just shop

52:50.560 --> 52:51.560
here.

52:51.560 --> 52:53.320
So, okay, last call for predictions before...

52:53.320 --> 52:54.320
I got one real quick.

52:54.320 --> 52:55.320
Okay.

52:55.320 --> 52:56.320
All right.

52:56.320 --> 52:59.040
In education, Linux has always been really big, but I think it's going to become even

52:59.040 --> 53:04.640
bigger with things like the Pi and the Chromebook becoming so cheap that schools realize that

53:04.640 --> 53:10.600
the contracts they have with Microsoft are ridiculous and move from proprietary to open

53:10.600 --> 53:11.600
source software.

53:11.600 --> 53:12.600
Yeah.

53:12.600 --> 53:14.040
I think schools have a lot...

53:14.040 --> 53:16.520
They're also just reinvesting in existing hardware.

53:16.520 --> 53:19.960
As XP goes away, that's going to be big for schools.

53:19.960 --> 53:20.960
Oh, yeah.

53:20.960 --> 53:27.160
And especially businesses, too, when XP goes away, where are they going to go with their

53:27.160 --> 53:28.160
custom software?

53:28.160 --> 53:32.080
Why not have somebody develop custom software for them on Linux rather than upgrading that

53:32.080 --> 53:33.880
to Windows 7 or 8?

53:33.880 --> 53:38.280
I would bet they're going to stay on XP until they have a massive just fallout from all

53:38.280 --> 53:42.840
kinds of horrible things that they're going to be attacked because there's a lot of things

53:42.840 --> 53:48.560
that if you notice, there's been some studies that said the hackers or the virus writers

53:48.560 --> 53:52.600
are waiting for the thing to drop support so they can attack massively.

53:52.600 --> 53:53.600
Yeah.

53:53.600 --> 53:56.840
So probably about next year is when they'll realize that should change.

53:56.840 --> 54:01.800
If I put my contracting hat on, I can already picture a client that's asking me to mitigate

54:01.800 --> 54:03.880
the risk and not migrate the OS.

54:03.880 --> 54:08.640
So they'll say, do what you can, firewall it, clock it down, protect it, let's monitor

54:08.640 --> 54:12.760
it, put an antivirus on there, and we'll run the risk because it's in our land and we're

54:12.760 --> 54:14.560
just going to keep it until it dies.

54:14.560 --> 54:15.900
And I can see that happening.

54:15.900 --> 54:20.040
So it's not going to be 2014 won't be like this, boom, everybody switched from XP.

54:20.040 --> 54:23.440
It's going to be a slow thing that picks up momentum in 2014.

54:23.440 --> 54:27.320
But I do think we're going to get lots of a blaster worm like alerts in the paper and

54:27.320 --> 54:28.320
things like that.

54:28.320 --> 54:31.360
You know, we're going to, I'm sure you guys remember that blaster worm thing that happened.

54:31.360 --> 54:33.280
That's actually what my name is based on.

54:33.280 --> 54:34.280
Really?

54:34.280 --> 54:35.280
That's funny.

54:35.280 --> 54:36.280
Yeah.

54:36.280 --> 54:37.280
The patch was released the whole time.

54:37.280 --> 54:38.280
That's what blew my mind.

54:38.280 --> 54:39.760
It was out there the whole time and no one applied it.

54:39.760 --> 54:40.760
Just like, really?

54:40.760 --> 54:41.760
Yeah.

54:41.760 --> 54:47.760
Don't banks and stuff have like custom software that they use for on Windows XP that they're

54:47.760 --> 54:52.360
probably afraid to migrate to Windows 7 because it's got to be, you know, it's got to be changed.

54:52.360 --> 54:55.280
Before it was on XP, it was on Scoboxes.

54:55.280 --> 54:57.760
Like so they've had to move it before.

54:57.760 --> 55:00.840
This has happened to them before, it'll happen again.

55:00.840 --> 55:04.720
And in some ways you could make the argument, hey, if you move to Linux, this is just an

55:04.720 --> 55:05.720
organic piece.

55:05.720 --> 55:06.720
They'll just continue to exist.

55:06.720 --> 55:09.720
It doesn't come to an end like some of these other products do.

55:09.720 --> 55:14.320
It makes me kind of afraid that some of these banks might stay on XP.

55:14.320 --> 55:15.320
They will.

55:15.320 --> 55:16.320
Oh yeah.

55:16.320 --> 55:17.320
There's banks on 2000k.

55:17.320 --> 55:21.200
I mean, I'm seriously, at least that I've seen, at least as soon as a year ago.

55:21.200 --> 55:24.960
A few years ago, I would walk into a Bank of America and they would have Mac Pluses

55:24.960 --> 55:30.080
there from the 80s with text terminals, you know, and so they, yeah, they'll, that was

55:30.080 --> 55:31.080
just the ATM.

55:31.080 --> 55:32.080
Yeah.

55:32.080 --> 55:33.080
There's only a few.

55:33.080 --> 55:35.960
It wasn't recent, but it was a few years ago.

55:35.960 --> 55:40.000
I'd just like to add a little bit you said about education.

55:40.000 --> 55:46.080
Getting Linux, from my experience, getting Linux in the door for education is quite difficult

55:46.080 --> 55:53.640
simply because there's not enough people who know about Linux to supply classes and stuff

55:53.640 --> 55:54.640
like that.

55:54.640 --> 55:56.640
Canada actually would prove that wrong.

55:56.640 --> 55:59.880
I mean, it's based on the Canadians that I've known and the Canadians I've worked with and

55:59.880 --> 56:01.440
also just reading news articles on it.

56:01.440 --> 56:05.320
It seems like various provinces in Canada have actually had a lot of success.

56:05.320 --> 56:09.360
Yeah, I think it depends on a local company who can work with the school district, you

56:09.360 --> 56:10.360
know.

56:10.360 --> 56:11.360
It depends where.

56:11.360 --> 56:16.200
If you have a school district who has some big fatty IT contract with some company who

56:16.200 --> 56:18.520
sucks off Microsoft's tip, they're going to come in there and they're going to sell more

56:18.520 --> 56:19.520
Microsoft software.

56:19.520 --> 56:24.800
But, you know, you get some local guy who maybe can help do some, you know, IT development

56:24.800 --> 56:28.120
with the school district if they don't have a strong in-house IT and they like Linux,

56:28.120 --> 56:29.120
it could happen.

56:29.120 --> 56:36.560
Well, I went to a school who, the admins were very into Linux and they run Linux and all

56:36.560 --> 56:41.280
the servers, anything that wasn't a desktop and the only reason they wouldn't run it on

56:41.280 --> 56:45.200
the desktop is because teachers want their software.

56:45.200 --> 56:49.860
They don't want to use LibreOffice or GIMP and for the purposes of teaching photo editing

56:49.860 --> 56:57.440
or word processing, LibreOffice and GIMP are perfectly fine solutions, you don't need Photoshop.

56:57.440 --> 56:59.200
Microsoft's going to solve that problem for us though.

56:59.200 --> 57:05.120
With Windows 8, you don't have your own, I mean, you do technically, but the UI is going

57:05.120 --> 57:11.260
to continue to change so much and, you know, these Metro applications are not up to snuff.

57:11.260 --> 57:12.480
They're not what people want.

57:12.480 --> 57:13.480
They're not Photoshop.

57:13.480 --> 57:15.780
They're not, you know, they're not full replacements yet.

57:15.780 --> 57:20.280
So that's going to help with that a little bit when you're faced with that stark of a

57:20.280 --> 57:24.840
change anyways, then it's still a lot of change to switch to Linux, but you're already dealing

57:24.840 --> 57:27.920
with so much change that it's not a huge leap, I would think.

57:27.920 --> 57:33.080
I think another, what we're going to see coming up is, we saw some of this in 2013, but I

57:33.080 --> 57:37.720
think GNOME 3 is going to even further just find its place as a desktop environment in

57:37.720 --> 57:38.720
2014.

57:38.720 --> 57:39.720
I could see that.

57:39.720 --> 57:40.720
I could see that.

57:40.720 --> 57:41.720
I think it's going to be a good year for GNOME.

57:41.720 --> 57:43.720
Well, and I think schools will continue to do stuff.

57:43.720 --> 57:48.440
I mean, like you have iTalk for classroom work, Moodle, which if you apply a theme to

57:48.440 --> 57:52.400
it, it's actually not too terrible, but out of the box, Moodle is just painful to look

57:52.400 --> 57:53.400
at.

57:53.400 --> 57:54.400
I get that.

57:54.400 --> 57:55.400
It's painful to use too.

57:55.400 --> 57:58.160
I've actually run it a few times, but yeah, I think the tools are out there for schools.

57:58.160 --> 58:00.600
It just takes time and it takes financial motivation sometimes.

58:00.600 --> 58:01.600
Yeah.

58:01.600 --> 58:02.600
Yeah.

58:02.600 --> 58:03.600
And yeah, there's a lot of things at play.

58:03.600 --> 58:07.160
So before we jump out of the Mumber Room, is it 2014 for anybody in here yet?

58:07.160 --> 58:09.920
I know it is for Aviator Continuity in our chat room right now.

58:09.920 --> 58:10.920
He's been there for seven hours.

58:10.920 --> 58:11.920
He's been in 2014.

58:11.920 --> 58:12.920
We are in 2014.

58:12.920 --> 58:13.920
Oh, well, congratulations.

58:13.920 --> 58:14.920
Welcome.

58:14.920 --> 58:15.920
And hello from the past.

58:15.920 --> 58:16.920
All right.

58:16.920 --> 58:17.920
Poppy only has an hour left.

58:17.920 --> 58:18.920
Yeah.

58:18.920 --> 58:19.920
Yeah.

58:19.920 --> 58:20.920
I thought BitPuffin was going to cross over during the show, but I can't remember.

58:20.920 --> 58:21.920
Yeah, he did.

58:21.920 --> 58:22.920
He did.

58:22.920 --> 58:23.920
He did.

58:23.920 --> 58:24.920
Five minutes ago.

58:24.920 --> 58:25.920
Yay.

58:25.920 --> 58:26.920
Well, happy 2014, Bit.

58:26.920 --> 58:27.920
Okay, guys.

58:27.920 --> 58:39.840
Well, before we go, I got to read a little email, so I'm going to get to that right now.

58:39.840 --> 58:42.360
But it came from Tim, and he's calling us out, Matt.

58:42.360 --> 58:44.640
Now we get these from time to time.

58:44.640 --> 58:47.400
Last time it was about Debbie, and this time it's about Slackware.

58:47.400 --> 58:49.960
He says, I rarely hear you guys mention Slackware.

58:49.960 --> 58:54.560
I've been a Slackware user for many years and would love to see you guys do a Slackware

58:54.560 --> 58:55.560
challenge.

58:55.560 --> 58:59.200
I have a lot of people turned off by the fact that Slackware package managers not even handle

58:59.200 --> 59:00.340
dependencies.

59:00.340 --> 59:05.140
But I would like to think that you guys, as Arch users, would realize that there's a benefit

59:05.140 --> 59:09.560
to knowing exactly what is on your system because you installed it.

59:09.560 --> 59:16.720
These days, building and finding Slackware packages is as easy as ever with slackbuilds.org

59:16.720 --> 59:19.520
and sbopkg.org.

59:19.520 --> 59:24.240
He says most of Slackware's team keeps an up-to-date repository of commonly used pre-built

59:24.240 --> 59:28.840
packages, and he gives a Wiki link to that, as a Linux user, Slackware user supporter,

59:28.840 --> 59:29.840
and a huge fan of your shows.

59:29.840 --> 59:32.760
I'd just like to see you guys give it some loveskis.

59:32.760 --> 59:36.400
Now we did give it the love spotlight on last during our OpenSUSE review.

59:36.400 --> 59:37.400
Yes.

59:37.400 --> 59:43.040
So here's the thing about Slackware, Matt, is when we make these switches, these challenges,

59:43.040 --> 59:45.600
I have to straight up use these for a while.

59:45.600 --> 59:46.600
Right.

59:46.600 --> 59:47.600
And here's the thing.

59:47.600 --> 59:48.600
He mentioned a couple tools.

59:48.600 --> 59:49.600
I've never really cared.

59:49.600 --> 59:54.240
I played with Gentoo a little bit, okay, Portage, whatever, but Slackware I've never had a reason

59:54.240 --> 59:55.240
to.

59:55.240 --> 59:59.240
Now the tools he mentioned specifically regarding that, because he lost me at dependency stuff,

59:59.240 --> 01:00:03.680
I will literally gargle glass shards before I chase down dependencies.

01:00:03.680 --> 01:00:05.160
It's 2014, kids.

01:00:05.160 --> 01:00:06.600
I'm not doing it.

01:00:06.600 --> 01:00:09.000
Arch doesn't make me chase down that stuff.

01:00:09.000 --> 01:00:10.000
It doesn't.

01:00:10.000 --> 01:00:11.680
It's providing an effective experience for me.

01:00:11.680 --> 01:00:12.800
I don't use it because it's geeky.

01:00:12.800 --> 01:00:15.360
I use it because I'm lazy, and it appeals to me.

01:00:15.360 --> 01:00:16.360
So that's okay.

01:00:16.360 --> 01:00:18.080
There is a little bit of that.

01:00:18.080 --> 01:00:21.720
That is part of my motivation to using Arch is I don't like tracking down the stuff and

01:00:21.720 --> 01:00:24.720
everything I want in the repos.

01:00:24.720 --> 01:00:29.960
I'm not totally opposed to trying Slackware, probably not in the immediate future, but

01:00:29.960 --> 01:00:35.920
I do kind of feel like it's sort of like the thing I've just never really got into, and

01:00:35.920 --> 01:00:38.320
I need to give it a fair go.

01:00:38.320 --> 01:00:40.040
I've never had the motivation.

01:00:40.040 --> 01:00:41.040
I just, I can't.

01:00:41.040 --> 01:00:42.040
It's in the back of my mind.

01:00:42.040 --> 01:00:46.600
I'm more likely to revisit Gentoo, honestly, as weird as that sounds, because I mean, Portage,

01:00:46.600 --> 01:00:47.600
I've done this.

01:00:47.600 --> 01:00:50.200
I mean, it's not like my ideal thing, but I can deal with it.

01:00:50.200 --> 01:00:54.240
But I don't really get my, I don't really see the Slackware advantage, I guess is one

01:00:54.240 --> 01:00:55.240
of them.

01:00:55.240 --> 01:00:56.280
Knowing what's in my stuff, I don't care.

01:00:56.280 --> 01:00:57.920
I love that it's there.

01:00:57.920 --> 01:00:58.920
It's open source.

01:00:58.920 --> 01:01:02.520
I'm going to, you know, at some level, the NSA is going to do what they're going to do,

01:01:02.520 --> 01:01:03.520
whatever.

01:01:03.520 --> 01:01:04.520
I'm just not that concerned about it.

01:01:04.520 --> 01:01:05.520
I just want it to work.

01:01:05.520 --> 01:01:10.200
The other thing, too, is I understand, I do kind of see what you're saying, you know exactly

01:01:10.200 --> 01:01:11.200
what's on your system.

01:01:11.200 --> 01:01:16.920
But that, to me, also isn't a huge requirement in the sense of library bloat or anything

01:01:16.920 --> 01:01:17.920
like that.

01:01:17.920 --> 01:01:22.520
So I don't want to put it down, because I respect anybody who chooses to use it.

01:01:22.520 --> 01:01:25.160
But for myself, it's never quite resonated.

01:01:25.160 --> 01:01:26.160
And I'm still going to give it some thought.

01:01:26.160 --> 01:01:27.840
I might try it, maybe in the summer, I might give it a go.

01:01:27.840 --> 01:01:32.760
I mean, if Arch burns me or something, or whatever variation of Arch I'm using happens

01:01:32.760 --> 01:01:35.840
to burn me or something, yeah, then I might have an interest in actually pursuing it.

01:01:35.840 --> 01:01:38.060
At this point, I need a motivation.

01:01:38.060 --> 01:01:42.560
For me, I was, you know, burnt out on PPA, so I was just, it was just time to try something

01:01:42.560 --> 01:01:43.560
new.

01:01:43.560 --> 01:01:44.560
OpenSUSE was cool.

01:01:44.560 --> 01:01:45.560
I had a lot of fun with that.

01:01:45.560 --> 01:01:46.560
And I wanted to roll into something new.

01:01:46.560 --> 01:01:47.560
But I'm kind of happy where I'm at.

01:01:47.560 --> 01:01:48.560
I don't know.

01:01:48.560 --> 01:01:49.560
Yeah.

01:01:49.560 --> 01:01:50.560
I just don't know.

01:01:50.560 --> 01:01:51.560
All right.

01:01:51.560 --> 01:01:55.520
Well, as we wrap, one thing I wanted to mention is I think it's going to be an awesome year

01:01:55.520 --> 01:01:56.520
for QT.

01:01:56.520 --> 01:01:57.520
Yeah.

01:01:57.520 --> 01:01:58.520
QT.

01:01:58.520 --> 01:01:59.520
QT.

01:01:59.520 --> 01:02:02.800
And I don't know what that'll mean for the GNOME desktop.

01:02:02.800 --> 01:02:04.880
And I'd like to hear your guys' thoughts on that.

01:02:04.880 --> 01:02:12.240
What do you think is QT's success going to come at the cost of quality GTK applications

01:02:12.240 --> 01:02:13.240
on Linux?

01:02:13.240 --> 01:02:16.400
Because, you know, when I sit there and I use the GNOME desktop, one of the things that

01:02:16.400 --> 01:02:21.600
brings me back to KDE frequently is KWin's awesome, for one.

01:02:21.600 --> 01:02:26.640
And number two is I feel like QT is the way of the future, and that slowly over the next

01:02:26.640 --> 01:02:31.880
couple of years, my favorite applications are going to be replaced with QT versions,

01:02:31.880 --> 01:02:34.500
and I should just get on the KDE bandwagon now.

01:02:34.500 --> 01:02:35.800
So I'd like to hear your guys' thoughts on that.

01:02:35.800 --> 01:02:37.560
That's my question for you out there in the audience.

01:02:37.560 --> 01:02:41.440
You can go over to jupyterbroadcasting.com, pop the contact link, and leave your feedback.

01:02:41.440 --> 01:02:45.080
And here's the other question, and this one I really want you to give some thought.

01:02:45.080 --> 01:02:51.580
Does Groupthink, or maybe call it Management by Consensus, tamper open source innovation?

01:02:51.580 --> 01:02:56.800
So does backlash to aggressive and sometimes new or risky ideas inhibit bold innovation

01:02:56.800 --> 01:02:58.660
sometimes in open source?

01:02:58.660 --> 01:03:00.080
Here's an example.

01:03:00.080 --> 01:03:03.120
So Debian cannot get off the pot about their init system.

01:03:03.120 --> 01:03:06.240
You know, they can't just choose systemd.

01:03:06.240 --> 01:03:14.980
Even though choosing systemd, by the data I can tell, would only impact 0.8% of their

01:03:14.980 --> 01:03:16.360
user base negatively.

01:03:16.360 --> 01:03:21.520
That would be the ones that have a BSD derivative, and that's using voluntary stats.

01:03:21.520 --> 01:03:27.440
0.8% of their user base would be affected by the switch to systemd, but the entire Linux

01:03:27.440 --> 01:03:30.800
ecosystem could be benefited by it, not just Debian.

01:03:30.800 --> 01:03:36.680
Yet they can't make the call because of this group, debate, groupthink, management by consensus

01:03:36.680 --> 01:03:39.460
aspect that a lot of open source projects are driven by.

01:03:39.460 --> 01:03:40.760
So I want to get people to email in.

01:03:40.760 --> 01:03:41.760
You have any thoughts?

01:03:41.760 --> 01:03:45.560
Well, here's the first thing that comes to mind, and it's adorable that people think

01:03:45.560 --> 01:03:47.000
Debian does anything quickly.

01:03:47.000 --> 01:03:49.120
I just find that just adorable.

01:03:49.120 --> 01:03:50.120
It's Debian.

01:03:50.120 --> 01:03:52.160
You know, they move at Debian pace.

01:03:52.160 --> 01:03:53.160
But why is that?

01:03:53.160 --> 01:03:56.600
Is that because of this groupthink, management by consensus, consortium?

01:03:56.600 --> 01:04:01.520
That's part of it, but also because of the fact that they have what's working for them

01:04:01.520 --> 01:04:02.520
now.

01:04:02.520 --> 01:04:07.080
They like to take their time and really slog through everything at a snail's pace.

01:04:07.080 --> 01:04:08.320
And I don't mean that in a negative way.

01:04:08.320 --> 01:04:09.560
I mean, that's just how they operate.

01:04:09.560 --> 01:04:14.200
I think you could look at a lot of things in the open source development where you could

01:04:14.200 --> 01:04:19.720
see that the group debating really trivial stuff really slowed stuff down.

01:04:19.720 --> 01:04:24.000
And then there's good examples where somebody comes along and Lenart says, boom, we're going

01:04:24.000 --> 01:04:27.840
to do system D. And then all of a sudden, there's a bunch of energy behind system D.

01:04:27.840 --> 01:04:30.600
Or Mark comes out and says, hey, you know what, we're going to build our own display

01:04:30.600 --> 01:04:31.600
server.

01:04:31.600 --> 01:04:35.360
And even though a lot of people can disagree, there is this declaration at the top, and

01:04:35.360 --> 01:04:39.160
the focus is made, the commitment is made, and the team gets to work.

01:04:39.160 --> 01:04:43.000
And you can see this play out in some commercial companies like Apple.

01:04:43.000 --> 01:04:47.200
And then you have the other side where Microsoft, where they just can't seem to really execute

01:04:47.200 --> 01:04:49.080
because they have all this middle management.

01:04:49.080 --> 01:04:52.040
And I'm wondering if maybe the open source community suffers from a little bit middle

01:04:52.040 --> 01:04:53.040
management.

01:04:53.040 --> 01:04:54.040
You can't take it all out.

01:04:54.040 --> 01:04:55.040
But I want to know what the audience thinks.

01:04:55.040 --> 01:04:58.640
So go over to jupyterblogcasting.com, pop that contact link, choose Linux Unplugged from

01:04:58.640 --> 01:05:02.420
the dropdown, send us your feedback for next week's episode of Linux Unplugged.

01:05:02.420 --> 01:05:06.960
And we will read that during the top of the show next week on the show.

01:05:06.960 --> 01:05:07.960
I think that'll be a good topic.

01:05:07.960 --> 01:05:11.080
It's just something I've been kicking around as I've been watching the system D stuff and

01:05:11.080 --> 01:05:12.080
Miren Wayland.

01:05:12.080 --> 01:05:13.080
Let's put it out there.

01:05:13.080 --> 01:05:14.080
See what people think.

01:05:14.080 --> 01:05:15.080
Yeah.

01:05:15.080 --> 01:05:16.080
All right, Matt.

01:05:16.080 --> 01:05:18.280
Well, coming up on Sunday, I got kind of a surprise.

01:05:18.280 --> 01:05:19.280
Oh yeah?

01:05:19.280 --> 01:05:20.280
Yeah.

01:05:20.280 --> 01:05:22.000
I'm not going to announce it yet because I'm not sure it's going to work out.

01:05:22.000 --> 01:05:23.160
So we're going to cover it if it works out.

01:05:23.160 --> 01:05:24.160
But I'll talk to you about it.

01:05:24.160 --> 01:05:25.160
All right.

01:05:25.160 --> 01:05:26.160
So we'd love to hear from you.

01:05:26.160 --> 01:05:27.160
Don't forget.

01:05:27.160 --> 01:05:28.160
You can join us live.

01:05:28.160 --> 01:05:31.960
The Linux Unplugged show is live on the Tuesdays over at jblive.tv, 2pm Pacific.

01:05:31.960 --> 01:05:36.280
Go to jupyterblogcasting.com, slash calendar to get that in your local neck of the woods.

01:05:36.280 --> 01:05:37.280
We'll convert it for you.

01:05:37.280 --> 01:05:38.280
All right, everyone.

01:05:38.280 --> 01:05:40.280
Well, thank you so much for tuning this week's episode of Linux Unplugged.

01:05:40.280 --> 01:05:41.280
Matt, I'll see you on Sunday.

01:05:41.280 --> 01:05:42.280
Okay?

01:05:42.280 --> 01:05:43.280
Sounds good.

01:05:43.280 --> 01:05:44.280
See you then.

01:05:44.280 --> 01:05:45.280
All right, everyone.

01:05:45.280 --> 01:05:46.280
Thank you so much.

01:05:46.280 --> 01:05:48.280
Have a great week.

