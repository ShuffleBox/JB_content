I didn't think it would happen, but Microsoft is going to allow WSL2 distros to run on
Windows Server.
I don't know, I thought they'd draw the line, because of course, once you allow WSL on
Windows Server, why even use Windows Server stuff to start running it all under Linux?
All the license fees, the same amount of Linux.
Hello friends, and welcome back to your weekly Linux talk show.
My name is Chris.
My name is Wes.
And my name is Brent.
Hello, gentlemen.
Well, coming up on the show today, it's one of my favorite episodes, we're going to go
back in time and witness the early days of a tool that is just ubiquitous now, something
we talk about all the time.
But where did it come from?
And then we're going to jump forward 15 years and join our buddy Brent on his journey to
learn that tooling.
Well, they just got back from a family road trip to Bozeman, Montana.
I got a couple of stories to share with you guys.
And then we'll round it out with some great boosts and pics and more.
So before we go any further, let's say hello to our virtual lug, time appropriate gradients
mumble room.
Hello, hello.
Hello.
Hello, everybody.
That's great.
Strong show in today.
We got it.
We got a great mumble show.
We got all folks in the live chat.
Of course, we're doing this on a Sunday around noon Pacific is usually when we get started.
Whenever Wes shows up, you know, we'll just get the show going.
I like to make an entrance.
Yeah.
Yeah.
Oh, boy.
Tell me about it.
He's got a whole long list of stuff, too.
So yeah, I just got back.
Welcome back.
Every time you leave, I worry you might not come back.
So I feel like we got to make it, you know, we're happy to see you.
I am kind of still riding high.
It's like we actually pulled it off.
You know, gas prices are crazy.
Plus, whenever you're whenever you're going about 800 miles each way, something could
happen.
Right.
And indeed, a few things did happen.
No.
Is Joups OK?
Joups is all right.
Um, Adia's car, on the other hand, oh, no, oh, no.
Just as we were getting gas, we just started out and she was navigating around the gas
station.
It was crazy.
And they have these short like poles around a light post.
And she backed up and and broke the that like the driver's side, you know, brake light.
And that was kind of a rocky start because she's like, oh, you know, we've been on the
road for like 30 minutes.
Oh, this was like as you were leaving.
Yeah.
Yeah.
Oh, God.
Is this a bad sign or what?
But we got on the road and it was pretty good.
Other than I'm pretty sure I had covid not positive, but I'm pretty sure I got covid
a couple of days before about about five days before we left.
Right.
I was trying to do prerecord.
So, of course, we couldn't prerecord, which meant we had to do some stuff on the road.
Just had to be dealt with on the road.
But I started getting better.
Not one hundred percent, but I got enough, you know, to do this because it is a big deal
for the kids.
It's like a yearly thing.
And so we get down actually.
You got to actually drive them out there.
Right.
I'm the driver.
You can't get around.
It's up to me.
So we get down there the first night and I'm like, I'm not feeling so good.
He says, well, I'll take the kids over, we'll go swimming, we'll go for a few hours.
You get like one night of quiet, like, OK, great.
Thank you.
That's that's thank you.
That's so sweet of you.
Really appreciate it.
And so she takes the kids off.
And I'm like, well, this is great.
I'll chill out a little bit.
I'll get caught up on my messages.
Maybe I'll lay down because I'm still not feeling very great.
And about 20 minutes into my super relaxing night, I I open up the bathroom door and I
see a puddle of water at the foot of the toilet.
Oh, no.
Oh, no.
This isn't a good thing.
Either, you know, best case scenario, someone pissed all over the floor.
Right.
That's my best case scenario.
Right.
Fingers crossed for that.
Yeah.
So I'm like, OK.
And I look at it.
It doesn't it doesn't look like it doesn't look like it came from a human.
It looks like clear water and it's coming right from the base of the toilet.
And I think to myself, oh, no, my toilet is leaking.
So I mop it up, make sure, you know, and shake the toilet a little bit.
You know, like I just grab the bowl and I just shake it a little bit and more water
seeps out.
Oh, no.
And I'm like, oh, and I got a thing with water.
I got a thing with water in this RV right now.
And I just I was devastated.
Like my evening went from like, hey, I'm chillin to like, I'm getting rid of this RV.
Everything is horrible.
We're going to just get in the car and drive home.
I'm going to burn this thing to the ground.
Right.
Wow.
I just couldn't.
Yep.
And so I dried all up and I check in 20 minutes later and there's more water there.
So, OK.
All right.
Shut off the water to the RV because, of course, I don't have a knob just for the toilet.
So shut off all the water.
And I sit there waiting, you know, for Hadid to get back so that way I can tell her the
bad news, be like, we got to solve this because we don't have a functioning toilet on our
family road trip.
And so we go to bed, you know, we think on it a little bit.
Next morning we wake up and we're like, OK, it's daylight.
Let's take a look at this thing.
And we realized that because these these RV toilets have a pedal to flush them.
We realized that it was once again, the leak was actually coming from the pedal where the
valve that actually turns the water on and off is.
And then it was just running behind the toilet and coming out.
And so we think, OK, well, we fix this before we start looking at it.
Of course, there's no parts.
There's no parts.
And Hadid is like, well, there's pretty much nothing we can do but bang on it.
Oh, my God, I can do that.
So I bang on it a bit.
Doesn't fix the problem.
Surprise, surprise.
So she heads out to try to find parts.
Doesn't find anything.
Ends up getting a whole new toilet, just a whole new one.
So we had to do a toilet swab in Bozeman, Montana, which of course, the plumbing doesn't
line up, you know, the plumbing doesn't line up.
So like we're like cutting the plumbing and like rerunning the lines and like bringing
that in.
And of course, when you take the toilet out, there's just a hole in the ground that goes
down to the black tank.
So like we're trying to like keep that capped and not drop anything down in there because
then that would be gone forever.
So that's how you lose a kid right there.
Basically lost an entire day to fixing the toilet in Montana.
But now we got a better than ever toilet.
Like whenever we upgrade and whatever we fix, we upgrade.
So now we got a real premium model, you know, and one of your residential units.
Oh, wow.
Only with the pedal.
Sure, sure.
Yeah.
So that was good, you know, but probably not the most frustrating, well, maybe it was
the most frustrating.
It was probably the most frustrating, but not the most technical issue to solve.
Right.
It was just like a mechanical problem.
Right.
And these things happen, especially the plumbing as you're going down the road, they can shake
loose a little bit.
And if anything was just kind of on the verge of cracking or breaking, it does.
That's what's going to happen.
Yeah.
Joop's a seven years old, too.
And this toilet's a full time toilet.
So it's seen things.
Yeah, it has seen things.
I mean, Brent knows we've been through things with our toilet.
Oh, yeah.
And of course, props to my wife.
She's a she's a real like, just dive in and fix it gal.
She goes out there.
She hurts.
She talks to the guys, even though she doesn't, you know, necessarily understand the language.
She manages to break through that and get the stuff and we got it all connected.
And what you want in a crisis is an idea.
That's for sure.
Yeah.
So but on the on the on the side of like technical issues that I had to deal with on this road
trip.
Real quick recap.
I've talked about my Starlink setup before.
These are what I effing love about Starlink other than it brings internet to remote places
where I couldn't get connected before is that it's Linux, right?
These are Linux satellites and these are Linux dishes and they have it's just the whole stack
is Linux.
And it's so great.
Even their Wi-Fi router is also Linux.
And so it's such an interesting implementation of the software that we've talked about for
15 years.
You know, we've gone from arguing and debating if TVOization was going to destroy Linux to
now I've got Linux powered internet.
Right.
And my circular dish, the little worm motor in there broke during transportation.
And I ended up getting it replaced with a new square dish, which is easier to transport.
And I got myself a sweet little crate that I have it all in there at Frankenstein kind
of zombied up the box they used for shipping and I created myself a nice waterproof crate.
So I get on location.
This is the first time I've really used this new dish and putting it through the paces.
I had to get their silly ethernet adapter because they've got this proprietary ethernet
cable where they lop off the RJ45 and they put on there this proprietary like USB-C kind
of looking connector.
And there's a strange connector, super long weird connectors.
And so you run the ethernet adapter in line.
So you go you run from the dish to the ethernet adapter from the ethernet adapter to the router.
And that's where I break off and I plug in the ethernet to my router, which is a peplink
max transit duo.
And this combines three different cellular connections, campground Wi-Fi and Starlink
over my WAN port.
And it brings it all together in one interface and balances it all.
The idea with ethernet is to just take out any kind of possible introduced latency by
Wi-Fi or any kind of drops because I want to be able to do remote streams and remote
recording.
And when you're doing these apps, you want good solid connectivity, lowest latency possible
and you don't want to drop frames.
So I chose to use the ethernet connection.
And with this new square dish, you've got to keep the router in play and all that's
fine, whatever.
But I was just dropping packets like crazy.
And I look at the app and they have a nice app that lets you scan the sky and see if
you have good visibility.
I had great visibility in Montana.
It's big sky country.
And I had a great shot.
The app says, you're good to go, bro.
And I think, OK, well, then why am I dropping so many damn packets?
I mean, it's like one in three, one in four packets I was losing.
I couldn't use the Starlink for anything.
But when I test the speed on the dish itself, I'm getting like one hundred and fifteen megabits.
So the dish is getting good connectivity, the dish is getting good ping time.
But when I'm using it on my LAN, I'm dropping packets like a maniac.
Couldn't use it for anything, not even browsing the web.
And I start doing troubleshooting and I discover that apparently there's some issue with my
particular Peplink brand router and the Starlink Ethernet adapter.
And you know, people don't really know what they're talking about online, so who knows.
But it seems to be maybe like it's constantly renegotiating if it's a gigabit full duplex
hundred megabit full duplex and maybe the max transit can't quite handle the gigabit
connection.
I don't know if that's true or not.
I'm only trying to push a hundred megabits or whatever.
And people online tell me that if I put a hub and I'm curious if this if anybody else
has heard of this, I put a hub between the Ethernet adapter and my router.
So I go from the Ethernet adapter into a hub and then from the hub into my router.
Problem solved.
Well, I didn't have a spare hub, so I ended up connecting to the Starlink over Wi-Fi and
it's been working fine.
But it's one of these things where version one, the round dish, didn't have these kinds
of problems, right?
I just ran Ethernet from the dish into my router and I was good to go.
Straight from the dish itself, from the Linux host in that little dish right into my router.
But now I got to go through this Ethernet adapter and this Ethernet adapter apparently
has some sort of negotiation issue.
And of course, they just launched the RV product and supposedly thirty thousand RV owners have
ordered this.
And this these Peplink routers are super popular in the RV community.
So now now you're on the path to, right?
It's like if most people are doing the Wi-Fi, this will be less tested, probably less well
understood by the customer support staff, etc.
Yeah, I don't like it.
I don't like it.
I think the big question for me becomes why even bother with the adapter?
It sounds like they're putting this proprietary connector for reasons we don't understand.
Like it is there an advantage to it in some scenario?
Because it just seems like you're adding extra bits that are just causing potential issues.
So if you could skip over that somehow.
I'm trying to bypass using Wi-Fi, you know, that's why I want it.
I don't want to use Wi-Fi for that last.
You heard there was an option to not.
But in my setup, it's all wired, you know, my machine I'm recording from is wired to
my router.
My router is wired to my Starlink and then the Starlink is about as wireless as it gets.
Let's be honest.
Starlink is it's pretty great.
Audio listeners, you can't see this, but he's holding like an RJ45 crimping tool in his
hands right now.
So it's pretty dedicated.
You know, they've got reportedly now 500,000 users in 32 countries now.
15,000 Starlink terminals have been sent to Ukraine.
They are beginning to launch the 1.5 version of the satellites.
Those have the optical terminals and they should be online by the end of the year.
They're about to run a test using laser links to provide connectivity in polar regions where
there's no ground stations, of course.
And this is really good news.
Version two of the satellites will be 10 times dimmer.
Hopefully.
Yeah.
Principal engineer David Goldstein says that they're working on a technology that will
make version two satellites 10 times dimmer than Vantablack paint.
I guess that must be it.
Oh, you haven't heard of Vantablack.
That's for later.
Oh, yeah.
OK.
It sounds cool.
Oh, yeah, it is.
On the user side, Starlink as a service is sort of a life changer.
Unfortunately, everywhere I go, it's oversubscribed now.
Even in Montana, it was not I wasn't kidding speeds I initially got five months ago.
And I think what's happening is people in residential areas are ordering these RV versions
and they're over and they're using them in overpopulated cells where they'd otherwise
have to wait.
Sounds like you're in that sort of awkward territory, right?
You got the like initial experience when it was new and limited and more technical, perhaps.
And now you're in the like the starts of optimizing for a more general audience.
And then that has some backtracking on some issues which will surely get fixed down the
line.
It's just going to take time.
Well, and you and I were kind of debating this earlier, but I sort of feel like unlike
traditional telco infrastructure, they sort of build out and then that infrastructure
sort of what they use for like 10, 20 years.
Like look at cable internet, look at DSL, like our area where they rolled out fiber
even they sort of stopped about 30 percent of the rollout way.
And then they've just never gone back to it for like a decade with a few exceptions here
and there.
But with Starlink, they can keep launching satellites, they can keep building ground
stations and kind of scale it away that I don't think you see traditional telco operator
scale.
Assuming they get Starship worked out.
Yeah.
Right.
That's the big thing here.
Yeah.
And you know.
Which I mean that's progressing now.
So.
Also, it appears that they're about to go to or they already are.
There's a Cold War that's getting hot right now between Dish Network and Starlink.
So first of all, Dish is like trying to get Starlink busted for selling the RV version.
Yeah.
Specifically trying to go after Elon for promoting the RV version because he didn't explicitly
state that you can't use it while in motion because Elon didn't tweet that you're not
allowed to use it on motion.
They're trying to get him in trouble because the FCC doesn't give them a license to use
Starlink in motion.
It does seem to be technically possible.
You can actually use it in motion, but you're not supposed to.
And so they are making a case to the FCC to shut Starlink down.
They're going after SpaceX on this.
Of course, what's really happening is Dish is about to launch their own 12 gigahertz
5G only wireless network.
And that 12 gigahertz radio spectrum will interfere significantly with what start with
SpaceX is a 77 percent of their customers.
And so Dish Network has been lobbying the FCC for access to the 12 gigahertz band.
SpaceX is trying to get it to stop.
They're trying to show the data to demonstrate how it could be an issue.
And I'm really torn on this because, of course, I'd love more 5G network.
And I'd be interested to see what Dish could do in this area because they're kind of a
new contender.
Right.
But at the same time, I've been doing this for a while.
Nobody's got it across the line like SpaceX and Starlink have.
Like nobody has.
And it's not 100 percent of a product yet.
I don't know if I'd even consider it out of beta truly yet, but it is pretty phenomenal
to get a box and within 10 minutes you've got you get a box, it's got a cardboard insert
with three instructions, you know, you connect the wire, you put it in the pole, you connect
the router, you connect your app to the router and you're talking to space and you can go
places and get Internet access.
And that can be, you know, a lifesaver for some people.
Like if I, you know, if I ever get my dream of like living in some off-grid property where
I can do podcasts, how am I going to do without something like Starlink?
And so it kind of sucks to see Dish playing these games of like trying to go after Elon
personally or trying to go after SpaceX because they didn't implicitly tell you not to use
it while moving just so that way they can get the FCC to crack down on them.
So that way they can then use the 12 gigahertz spectrum for their own thing.
At the same time, I'm like, well, I'd like to see more competition.
Amazon is also going to launch their their Internet thing.
So there's more to come in this space just as I start to really get reliant on it and
I start to use it for work and these shows and become very happy and feel like I finally
got high speed Internet in my home.
You have this sort of degradation of the service itself as they sort of oversubscribe.
And you also have, of course, these corporate interests that are going to go after it now
too and, you know, play a little dirty so that way they can advance their agenda.
It's just such a go figure.
Yeah.
I mean, this one happens, right?
It's a new it's a new area to explore, a new way to offer services.
There's going to be some competition.
And as you so often learn, sometimes being an early adopter kind of bites.
Mm hmm.
Yeah.
There's usually a little downside just the way it goes.
We hinted on our dev one episode about one of you having it during the trip.
But I was never it was never clear who got the dev one this week.
So can you update us what who got the dev one and what to do with it?
It does a lot of pressure.
I've had the devil on.
But I didn't do anything crazy.
I've just been using it like a laptop is using it right now, actually.
I think your version of normal things on a laptop is probably crazy to most of us.
I didn't do anything crazy with it because I kind of just wanted to see how it would
fit into my existing you know, if I got a dev one, what would it do?
So I would like to play a little more with the dev side of it.
I did.
I set up a little bit of a dev environment.
That was fine.
It's just a normal Linux machine.
But I didn't really push it to the limit or anything.
But it's been a really nice throw it around and bring it wherever I'm going laptop.
You know, I've been impressed with that because the battery life has been really quite decent.
So I didn't have to worry about sort of like being tethered to a charger.
Plus that you can do USB-C as well as it's the proprietary version meant that like I
already had USB-C things hanging around my house.
So if I did need to top up the battery, that was easy, you know, and it was and it was
just right there.
I also did notice at one point I kind of forgot that I had unplugged a charger that I you
know, I plugged it into the laptop forgetting that I'd unplugged that from like I'd changed
out my power splitter situation and it made a really cute little beeping sound.
It was going to die.
And here I'm like listening, I'm cooking in the kitchen.
I just see this little like it wasn't scary, it wasn't like alarming, but just a little
cry for help from the laptop reminding me, hey, I'm here, plug me in.
That sounds nice.
And Chris, I know you had some success with your ThinkPad, but did you miss having it?
Yeah, I did.
I didn't get a chance to game much, but that's an area where I really would have missed it.
Dylan brought his laptop and if I would have had a gaming laptop, I think we probably would
have done a little bit of gaming.
So that's I was like, OK, I miss it for that.
The ThinkPad otherwise did did really do the heavy lifting for this trip.
But the APU on there, I mean, it's essentially it's a Steam Deck only with a 1080p screen
and in a laptop form.
So you can play pretty much anything on there.
Yeah.
Yeah.
You know, yours is here.
It arrived while I was in Texas.
Brent.
Whoa.
That's exciting.
I forgot to arrive as well at the same time.
So we'll have to figure that out.
We still have to figure that part out.
That's for sure.
But in between shows, listener Jeff, who you guys may remember, he's he's been on the show
before, of course, but also he helped me out at the junkyard.
He helped us build out some power setups for Lady Jupes.
He's in the Mamba room right now.
And he chipped in on a nice pack of RAM.
What was it?
I don't know.
What was it?
How much was it?
And has it arrived?
It certainly has arrived.
So I've received the RAM for the Dev1, but I have not received the Dev1, which is kind
of a funny situation.
But Jeff was kind enough to we did a back and forth to try to find RAM in Canada.
That was a reasonable price and available, which seems difficult right now for some reason.
But Jeff, you're kind enough to max the Dev1 out whenever I get it, which is about 64 gigs
of DDR4, which is super generous.
I don't even know what I'm going to do with all that.
So open to ideas.
So, Jeff, thank you so much.
That is very, very, very super kind of you.
It's absolute pleasure.
Hopefully you can put it to good use, have some real compute power.
Think of all the quick EMU VMs you can have.
Oh, yeah, we'll find uses for that RAM.
But not only that, Jeff went the extra mile because, you know, Jeff is Jeff and he's wonderful.
And he also...
A kilometer.
I thought this is in Canada.
Which, right.
Sorry.
Sorry.
Be inclusive.
He also apparently sent a box filled with a NanoStation M2 from Ubiquiti and an AC1200,
which is hopefully going to solve my network problem here locally.
So I just got to say, Jeff, you're amazing.
Thank you.
We have the best listeners ever, the best friends ever, and I really appreciate it.
We do have a couple of housekeeping items we wanted to update you on.
Probably we should start with meetups.
The J.B. London meetup, August 5th, is, I guess, is that the new time and date, 6 p.m.
London time?
We have that information now.
That's good.
It turns out we were saying 6 p.m. GMT previously, and apparently that's wrong.
I guess us North Americans, we don't, oops.
So a few listeners, Paul and Richard, kindly corrected us.
So 6 p.m. London time, which is not GMT, but something else, BST or something like that.
Well, here's what we're doing.
Because these things happen, they're dynamic situations, we have set up a J.B. meetups
matrix space.
It's early days, but we have a dedicated room in there for the London meetup.
We have a Pacific Northwest room in there, and we have a Mumble meetup room in there.
So this is a space that contains multiple rooms, and we can create more, and then we'll
have standing chat rooms for events that we can jump into and participate and coordinate.
Yeah, meet other folks that are going, coordinate around rides, whatever you need.
Yep, like the next time we do a Raleigh meetup, we'll make a Raleigh room, and if you'd like
to participate in there, just contact me on Matrix.
We can get you set up.
But the rooms are available to the public, and we will have them linked in the show notes,
and you can start coordinating your London meetup in there.
We already made one for London.
If you needed one more reason to get a Matrix account set up, here it is.
And of course, details and any time changes, location changes, that'll be on our actual
meetup page at meetup.com slash Jupiter Broadcasting.
There we go.
lino.com slash unplugged.
Go there to get $100 in 60-day credit on a new account, and you go there to support the
show.
GeeksCloud with 11 data centers around the world.
It's what we've been using for more than a couple of years now, and they've been at it
for over 19 years, and I have friends personally who've used it for over a decade.
It's a really, really nice way to host your applications.
It's like the best way.
Personally, I wouldn't run my stuff anywhere because I feel like the speed and reliability
of our infrastructure is part of the overall package, and so you just really couldn't convince
me to go with a better performance, reliability, support, and price ratio.
In fact, they're 30 to 50% cheaper than some of the major cloud providers out there.
And Linode's been rolling out features since I've been a customer that just keep making
it better and better.
If you've got a minute, you've got to go check it out.
They just recently announced hosted database support for Postgres, MongoDB, and MySQL.
And I'll put a link in the show notes.
Just a few days ago, they released a guide to migrate your Postgres database to their
managed database solution, which is something I'm going to look at.
And then they've also recently released an infrastructure as code ebook by Justin Mitchell.
It's a step-by-step infrastructure as code guide for Terraform, Ansible, Puppet, Chef
Salt, and of course, some GitHub.
Love is in there as well.
It's totally free.
You don't even have to put your email address in there to get this thing.
So I'll put a link to that in the show notes as well because that is like a super valuable
thing.
If I started in IT, I would have had to go to the library and pay 35, 45, 65 bucks for
something like that.
You kids these days and your great deals.
It's the same thing with deploying infrastructure now at Linode.
Stuff that literally would take me two weeks at best, maybe a month, I can now do in 30
seconds on Linode.
And the performance is just so great.
The beast of a system we have running our matrix box has just been killer.
It's totally absorbed the growth.
It's really so nice to be able to just kind of incrementally upgrade that stuff too because
we didn't start at that high end of a machine.
We just kind of slowly built to that as user demand required it, and Linode was there the
whole way.
There are so many great options, so many great things to try on Linode, but fundamentally,
it's just the best way to run applications in the cloud under your control with the best
support in the business.
So why not get $100 to try it out and support the show?
Go to linode.com slash unplugged.
Well, I've been lazing about playing with the Dev1.
Chris has been learning basic plumbing skills, turns out.
Brent, what have you been up to while we've been away?
You know, I've actually been spending a ton of time on my drum kit, but also I have been
diving into Git, which is something I'm slightly embarrassed that I don't know yet and have
skills in.
I'm like, hey, any time to try is now, right?
And the reason I've been doing that is that a few episodes ago, we talked about the new
Jupiter broadcasting website that the community is kind of putting together with us.
And Stefan is working super hard on that.
I think he has a little tracker of how many hours he spent on it yet.
So far, I think he's up to like 13, which to me is impressive what he's got done in
that time.
But I thought I could help with that effort, but in order to do that, I would need to learn
Git.
Better reason than to use the new website to do that.
So I have been diving into Git, trying to understand how it all works, pinging Wes at
all times of the day to try to, you know, how does it give me more?
I don't quite wrap my head around it, but it's been super fascinating to dive into the
history of Git, and I only have like a little tiny understanding.
But you guys have been around a little longer than I have, at least in the Git world.
So can you can you inform me a little bit?
Yeah, stay a while and listen.
You know, I love that you're doing this, Brent.
First of all, it's just great to have your help with the new website.
Not everybody's willing to like, understand that there's a bunch of bunch of first principles
they have to go learn first before they can participate.
And so we thought, all right, well, let's go back in time about 15 years to the real
early days of Git, which is now just this super important tool that is used to manage
so many, so many, so many projects out there.
But back then, it was kind of considered like this hard to use, confusing tooling.
And so Linus Torvalds was invited to do a talk at Google back in 2007, and I wanted
to play a little bit of the introduction for Linus.
You can kind of hear the general attitude towards something that today it's like ubiquitous.
Yeah, we just take it for granted, man.
Yeah, but back then, it wasn't.
Thank you for coming, everybody.
Some of you have probably already heard of Linus Torvalds.
Those of you who haven't, you're the people with Macintoshes on your laps.
He's a guy who delights in being cruel to people.
His latest cruel act is to create a revision control system which is expressly designed
to make you feel less intelligent than you thought you were.
Thank you for coming down today, Linus.
I've been getting emails the past few days from people saying, where's Linus?
Why hasn't he merged my tree?
Doesn't he love me anymore?
I only walked into my office this afternoon.
What are you doing here?
But thank you for taking the time off.
So Linus is here today to explain to us why on earth he would write a software tool which
only he is smart enough to know how to use.
Thanks, Linus.
A real comedian, this guy, right, cracking the jokes about Git.
And Linus goes up there, and it's a classic younger Linus, it's prime Linus, and he explains
kind of why he likes using Git by explaining why he hates the other stuff.
So I want to give a few credits before I start.
I look at CVS in a very, very negative way because I, in many ways, when I design Git,
it's the what would Jesus do except it's what would CVS never, ever do kind of approach
to source control management.
I've never actually used CVS for the kernel.
For the first 10 years of kernel maintenance, we literally used tarballs and patches which
is a much superior source control management system than CVS is.
But I did end up using CVS for seven years at a commercial company, and I hate it with
a passion.
When I say I hate CVS with a passion, I have to also say that if there are any SVN users
in Subversion, users in the audience, you might want to leave.
It's just a classic, it's his classic presentation style.
Really his point was these other tools are just not good enough and especially they weren't
good enough for a project at the scale of the Linux project, the kernel, which is what
he had to solve.
Well, yeah, right.
I mean, it's still a unique project, but then especially then, like throughout that talk,
you kind of get a bunch of questions of folks sort of asking, okay, I guess I can see why
you'd need that for a weird project like the kernel where you have all these distributed
people working, you know, working in different time zones and across the world and with different
connectivity.
But do we really need Git for our like central corporate repo?
It's just wild to be reminded that people were skeptical, naturally skeptical of a new
paradigm and a new technology.
Right.
And this was, at the time of this talk, this was a year before GitHub launched.
The tooling was different back then, so people are a little more skeptical.
There wasn't that kind of easy to use front end that added that whole social collaboration
aspect as well.
There's also something that he seemed to kind of hone in on that was important to him early
on that I thought was interesting.
And it's like just something I take for granted about Git, but it's the offline distributed
nature.
I say it's so much more than just offline work, but the offline work part is actually
maybe the most obvious thing, which is that you can take a truly distributed source control
management system.
You can take it on a plane and even if they don't offer a Wi-Fi and satellite hookups,
you just continue working.
You can look at all your logs.
You can commit.
You can do everything you would do even if you were connected to a nice gigabit ethernet
directly to the backbone.
And that is really important.
It is doubly important when you have hundreds or thousands of people working on the same
project and they may not be literally disconnected, but in practice they aren't really well connected
either.
So part of distribution is this offline work theme.
Even if it's not completely offline, it is important to be able to do everything you
want to do from any location without having to be able to access a server.
What that basic fact actually results in is that you effectively have a lot more branching
because everybody who has a complete repository and can do commits on his own will effectively
have his own branch even if you don't realize it.
Even if you think of your project as just having a single branch, every single time
you disconnect your laptop and start working with it.
You are on your own branch.
And this is really, really important and is very different from anybody who's used CVS
where branching is considered something that only true gurus do.
This is probably something coming into GitHub and Git, you kind of just take for granted
right now that you can pull a copy down to your machine and work on it locally.
I think that's kind of maybe because I'm jumping into it at this time in Git's history.
But back then, it sure does sound like that was not the norm.
From kind of some of the research that I did, it seemed like it was always a server client
relationship where the source of truth and we're not that far from it, but the source
of truth was always on the server.
I would imagine in a corporate office, you know, that wouldn't be so bad.
But Linux seems to have changed the way that projects work.
And so the concept of having the entire Git tree on your, you know, laptop or local computer
and thousands of people might have that or, you know, in the case of the project I'm working
on them, you know, I think we have like 10 people that are doing that and but everybody
has their own copy, and you're doing your own independent thing.
And then the ability to merge that later, I think is kind of really where all the magic
is happening.
It took me a little bit to wrap my head around the concepts, but man, are they ever elegant
once you really dive into it a little bit.
And well, I think it's pretty obvious to say that it's been working fairly well, considering
the accomplishments that Git has helped with.
So pretty cool.
Another part, though, I think is that is maybe not obvious is, you know, when you have this
distributed system, and you're not really privileging one branch, it means you have
a lot of different flexible working constraints, because you don't have this one sort of central
coordination point that everyone has to check in on, you can go off on your own for a while.
So like, you know, Chris, you're finally you get your RV parked up in Canada next to Brent,
and you guys are hashing out this new, a new theme for the website, and you have this whole
you want to go off on a tangent, you try out some new stuff and introduce some new things.
But maybe you know, the internet's not great, you don't want to be bothered, you don't have
to check in all your things, you guys can both be working independently, and then come
together and then at some later date, go meet up with folks with other repos, or the you
know, what we consider the source of truth that we happen to have chosen to host on GitHub
or something.
And then all of those can happen without anyone having to worry about what else someone else
is doing until you actually have to go do that merge at the end.
Yeah, that was the magic really to get brought and you could see for a guy like Linus, who's
working on a project the size of Linux kernel, bringing in all these different changes, trying
to figure out what changed what needs to be reviewed.
That kind of stuff was magic for him and was absolutely essential.
And you kind of get a taste of that where he describes what he loves the most about
Git.
Somebody sends a bug report, which bug reports are usually not very good.
But maybe the bug report is good enough that you can pinpoint, okay, SCSI subsystem.
That's the command line.
You can't say which file, but you can do this and say, okay, that will cut it down to from
the 15,000 commits we've had since last week, it will cut it down to 50.
That's a huge deal.
That is something that nobody else can do, I guarantee you.
So that's the reason you want to use Git.
That's what it all boils down to.
It's safe.
It is so fast that he can do things that nobody else can do.
It does things that nobody else can do even slowly, and it's distributed.
So go and spread the word.
Go and spread the word, he says.
We'll have a link to the full talk.
It is great.
It is great.
Just go back to 2007.
Of course, a year after that talk, 2008 is when GitHub launched.
And in that talk, Linus talks a little bit about how the tooling is going to get easier
for people to use, and as the tooling gets easier, you'll have more and more people adopt
it.
And then a year later, GitHub.
Right.
GitHub drops.
You just could.
Yeah.
How much that has changed things, I don't think you could necessarily have foreseen.
Yeah.
So Brent, I'm curious to know what it's been like, what you've learned.
And if you're adopting any changes to your workflow.
Have you cursed at Git yet?
I will actually say it's been fairly smooth.
I'm in like the first minute of my Git journey, I would say.
But there's a great tutorial that I found from a gentleman called Tech with Tim.
And what I appreciate about it is just like super straightforward, and yet really well
explained.
So I'll make sure to link to that as well.
I think sitting down and just wrapping your head around how everything interacts is probably
worthwhile before even jumping in.
I think the last time I tried to learn it, which I think was about two years ago, I tried
to dive into the tooling right away.
And because it has its own nomenclature, you know, branches and merging and I don't know
if there's like probably 100 of that I don't know yet, but diving into the tooling first,
I think was my mistake initially, because I didn't understand the whole concept and
how that independence happens and how it all comes together, and how Git relates locally
to something like GitHub or GitLab, you know, the other options out there.
So I would really if someone's going to dive in, I would recommend learning the concepts
first and wrap your head around the nomenclature and then those tools will come super easily,
hopefully like they did for me.
So I'm I think I had some really nice success so far.
Hopefully I don't run into some roadblocks that kind of get me frustrated.
But what it's meant is that I could do my first pull request on a project within, you
know, a few hours of sort of diving in, which feels pretty darn great and has been for me,
which I would imagine as many listeners, but kind of a goal is to give back to open source
related projects.
And I hope that this is kind of an enabler for me to just keep giving back.
It's that value for value stuff we keep talking about.
Yeah, you know, the that's part of the distributed and common nature of Git these days is it's
the sort of lingua franca of being able to interact and to share with other developers
out there.
You got to, you know, once you once you know Git, and it's a tool you can use to help Yeah,
make updates, even if you see those updates until you can actually speak the language
and help the tools share and, you know, interact and make it an easy way that someone can go,
oh, yeah, I can I can accept these changes into my branch.
That changes the game and like all good free software infrastructure, you can, you know,
you could deploy something like GitLab on your own VPS or on your own LAN and keep it
all local and use that and be perfectly happy.
You could just use Git on the command line, or you know, you can use something like GitHub.
And there's a lot of a lot of nice tooling built on top of this now, I don't want to
step on office hours, because we kind of go in depth in office hours, but the new website
will probably use Git for information updates that, in theory, one day, the audience could
make a pull request on an episode of Linux Unplugged and add links or make modifications.
And then we could merge that back in.
And then we would regenerate the Hugo page automatically with a GitHub action.
And it's a way to keep our links relevant and fresh and have people add content.
And, you know, the only barrier to entry, you can be any audience member in the world
out there, the only barrier to entry is you would have to know how to interact with Git
and GitHub.
But that's a pretty low barrier to entry.
And it could mean that something like, it's just sort of bringing our production one step
closer to sort of being completely open, modifiable by the audience.
And you can use Git and GitHub for tooling for show production, for website generation,
obviously for projects.
Well, Casey over in the Mumble Room points out it's not just for developers either.
You can do stuff like a cookbook, say.
Yeah, we've done that.
We've done open your mouth recipes on there.
We also have used it for bug tracking for some of the Jupyter broadcasting stuff.
That's true.
Notes.
It's another area we've used it.
So it's a really powerful tool.
And you know, as time has gone on, Linus has kind of changed his tune.
He was such a, he was really in cell mode back in 2007.
But now he doesn't really need to.
In Linux Action News this week, this past week, we covered the fireside chat that Linus
had at the open source summit.
There was a clip in there we played.
And he talks, he kind of jokes that in some areas Linus is better known for creating Git
than he is for creating Linux.
And he's kind of joking about that.
And then we cut the clip off.
But I want to play the extended version of that clip because I think it shows you sort
of the transformation Linus has had as a public presenter and sort of a more humble attitude
he takes now.
Linux is kind of my baby and I've been doing it for 30 years plus and it's what I do.
My oldest daughter, when she went off to college and did computer science, I didn't push her.
She emailed me back like a few months, a few weeks later and was laughing at the fact that
I was known for Git at the computer science department even though I only did Git for
six months.
I mean I'll take credit for it but Git, it's not my baby.
It was a side project that I just had to start to actually do Linux development.
So all the actually credit for Git goes to Junio Hamano.
So if you ever see Junio and you're a Git user, buy him a beer or something because
he's been a great maintainer for Git and my name comes up much too often when it comes
to Git.
So
itself is open source.
It's trusted by millions of individuals, teams, organizations
and many more worldwide for secure password and storage.
And I don't just put passwords in there.
I'll put credit information there for my credit card.
I'll put, you know, like the numbers.
I'll put my two factor authentication codes in there.
So that way I can do passwords and two factor autofill.
There's recovery keys I'll put in there for some software
because I really trust the Bitwarden system.
I trust the way they do the encryption, the security.
I love the fact that it's open source.
And I also love the fact that if I ever want,
I could self host it as well with fault warden.
And one of the things that I think gives people a lot of confidence
is that sort of back out option.
Maybe you've already tried Bitwarden,
but you weren't aware of some of the new features.
I wanted to kind of reach out to some of you out there
that are already using Bitwarden.
I want to suggest you try out the new username generator
because, you know, I've I've used Bitwarden for a couple of years now.
And I think this is one of the coolest updates they've done in a while.
And they've just recently added like the one to punch.
And now they can also create email aliases that work with things
like simple login or Firefox relay.
You just put the API key in and then they'll generate the username.
They'll generate the password and they'll generate the email address.
All unique to that side of that service.
There's really no better way to manage your security.
That's like the number one thing right there.
You do that and you're just really protecting yourself from information
leaks or even malicious types of activity.
It's it's like the one thing and it's it's so simple
and so straightforward with Bitwarden.
Even if you've already set yourself up to maybe you have a family member
or a friend or maybe a working environment
that could use a little Bitwarden password hygiene.
Send them over to bitwarden.com slash Linux, which is a great way for you
or someone else to try it out for free or for a business.
And of course, support the show.
It's bitwarden.com slash Linux.
Well, the feedback bag is getting a little full in the corner.
We better take a few off the top.
And this first one, our buddy Tim from JPL and our favorite Linux copter.
He's got a bit of a correction for us.
Linux on the Linux copter is not real time.
The kernel is too modified for us to be able to apply the real time patches
to make it more real time.
But as I mentioned in the first episode, the processor is just so dang fast
that not being real time didn't really hurt us.
And we also built some robustness into the design to mitigate when it might happen.
I double checked. He's right.
He didn't say it was a real time kernel.
Yeah, he said that the hardware ended up being fast enough that they didn't need to.
But I just remember being so like blown away by the fact that I was not even
I didn't even consider the fact that, you know, for space operations,
they might want a real time kernel. That was really what stuck out there. But it's interesting to know.
It's just a it's not real time.
Well, and I think maybe this underscores that the work getting the patch set
more into the kernel that's been happening recently means that perhaps in the future,
it won't be so much of a conflict here.
You know, as they said, right, they had patches, merge conflicts,
as we're talking about get this episode where they couldn't apply those two things.
So as it becomes more standard, maybe that will make it easier.
And even if they don't necessarily need it, but might help by the time they're building
the next Linux copter, it might just be. Mainline, you know, we should also mention,
Brent, that there is a really fantastic brunch coming up with Tim from J.P.O.
Yeah, I got the chance to sit down with Tim a little while ago and record a wonderful conversation.
Tim, it sounds like you're probably listening, so that'll come out.
I think the weeks of the week of three, four, five July.
We don't know the exact date, but keep in mind that it's going to be a little bit later.
We don't know the exact date, but keep your ears open soon.
Not this week, maybe next week. We'll see.
And also, there is another episode of Brunch with Brent sitting in the tubes.
If you're looking for it, I did a chat with Quentin that got released last week.
So that's worth checking out, too.
Extras.show for those right now. Go over there and get your brunch on.
Dian wrote in about the Dev1 mentioning, does it come with the BIOS option to limit battery charge
to say 80 percent to preserve the health of the battery while it is plugged in for long periods of time?
This feature is sadly missing on most cheap laptops.
I do remember seeing a limit somewhere when I was looking at it.
Oh, did you? Because I just checked before and did not see one in the BIOS.
So it's not in the BIOS, sounds like, which would be really nice to have.
Of course, you could do it with several different projects.
That's probably there. I hadn't really decided how I would do it.
I still use TLP on my on my ThinkPad.
Right.
That could be one.
Paula wrote in with podcast management between Linux and Android.
I think he's got in the strugs.
He says it would be nice and you think it'd be simple, but no, I'm using G Potter and a Tenopod.
The G Potter dot net doesn't seem to be very stable.
Do you guys have any suggestions?
I think because they're using G Potter dot net for the back end on the podcast.
You know, I'm going to toss a link in the show notes for an interview I did with Mitch from Podverse.
And you can go to Podverse dot FM and it's a GPL podcast client that's available for Android,
iOS and the Web.
And its core feature is that it syncs between all three of those platforms on the Web version.
It does support boosts.
The boosts are still in beta development for the mobile version.
There are beta versions of the apps floating around that have it, though.
But the nice thing about Podverse is that you can finish what you're listening to on your desktop
kind of like you can with Pocket Cast Web.
But it's it's all just sort of inherent to Podverse.
It's sort of the default.
So I did an interview with Mitch, who's the developer.
And I'll put a link to that in there.
And you can, of course, search for Podverse in your in your play store or in the Apple App Store
or go to Podverse dot FM.
That sounds too radical.
It does look like the back end for G Potter dot net is open source.
So you could consider self-help in that.
Isn't there I thought there was a way to also I've never tried that.
I thought there's a way to sync you antenna with next cloud.
Oh, that does sound right.
I'm just not an antenna pod user.
So I don't know.
I don't know, but if you out there do send us a boost and we'll pass it along because
a lot of people love that antenna pod.
And if you could take that thinking and self-hosted, I think that'd be the way to go.
What podcast do you think there's an app in the next cloud?
Yeah, that's what it was.
Yeah.
So there's a G Potter app in next cloud.
That's what it was.
Brent, what podcast app are you using these days?
That's a personal question.
Yeah, I know.
That's a very I don't know if I want to say.
No, I'm just kidding.
Antenna pods, the thing I've been using for a very long time, probably five years, and
I haven't felt like changing ever since.
Well, until some of these boost things came out.
So I'm secretly hoping that they're sort of boost integration is going to speed up a little
bit.
We'll see.
But I've been super happy with it.
I will say it does just about everything I want.
And now you're adding the sync functionality to that, which is news to me.
So I don't know.
I'm I feel pretty darn happy.
We'll drop a link to the next cloud G Potter app so you can just think to your next that
I'll say this.
Fountain FM recently did an update and they have got me now.
It's one of those where I initially with this update, I was like, that sounds like a scam.
I am I am out.
And then I started using it.
I'm like, this is the only app I'm using now.
So on my road trip using Fountain FM, I don't know if you can see that brand.
Probably not.
I earned 3000 sats listening to podcasts now.
So what they've done on Fountain for most podcasts when you're listening, you earn sats
in the background.
They do this by two ways.
One, the podcaster can help subsidize.
So like I could incentivize listening.
But the way they actually do it is they have just a couple of low key promoted clips that
Fountain FM has a really active clips ecosystem where people are clipping podcasts and sharing
them and you can follow each other and I clip and share podcasts and a bunch of the audience
follows me and they clip and share their podcast.
And I've discovered like a whole new I've got like three or four new podcasts and listen
to on the regular now through this feature.
And one of the things they've done is at the very top of Fountain FM, they now have a promoted
they make it really obvious.
These are very clearly promoted clips.
They do stand out.
And you know what?
They're really not bad.
They're either like, you know, two minutes of a of a podcast or it's essentially like
a host read ad like not your keys, not your coins.
Kasa pairs self-custody with best in class, but I mean, it's not bad, right?
It's like eight seconds.
And by listening to it, I just earned one hundred and seventy six sets.
So that's how they're generating the revenue for the sats.
And then by listening, you don't have to listen to ads to get the sats.
You can listen to podcasts.
I suppose that does help as a onboarding if you then want to use those sats to send out
to some of the podcasts you listen to.
So this is the advantage, right?
It's an open system so I could send them to my wallet and I could just keep them.
But now we've got three thousand sats, I could boost one of the podcasts I listen to.
Hey, that's a whole sixty five cents almost.
So it's actually legit.
I thought it'd be, you know, he's streaming me sats.
It actually is really good.
I'm going to put my referral link in the show notes because then I get credit for you using
it.
And I'm Chris Lass over there if you want to follow me and hear my clips and stuff like
that.
You're taking some clips over there.
I'm dropping clips every now and then.
You know, sometimes Wes Payne says something real insightful and I put it on Fountain and
then the other nice thing about Fountain is once you clip it, you can generate an audio
file, you can generate a video file or you can generate a web link if you want to send
somebody a link to listen to it.
I just podcasting, it's been missing this and it's they've done a really good job.
And it's actually fun to earn the sats just as listening to shows I would listen to anyways.
And now I've got three thousand sats I can send to somebody.
And here I am making clips for my family members with Reaper like an animal.
Yeah, same.
And now it is time for the boost.
Mr. Adam Curry, the Podfather boosted in again.
He says, boosting for Helipad, pew, pew, pew.
Helipad is the tool.
It is the tool.
So thank you, Podfather, and thank you, Dave Jones, for working on Helipad.
Indeed.
It is a front end that pulls in all of the boosts and gives us information like what
episode you were listening to, what app you used to send it with all the right information.
What app you used to send it with all the right icons.
It also has a fun confetti and sound effect that it creates.
It's a real experience and it's a real time updating dashboard.
So I can leave Helipad up on my screen.
I think Adam does the same.
That's what got you hooked right there.
Yeah, and I just see the boost coming in.
I just I totally love it.
It's really great.
412 Linux boosted in five days ago with 500 sats.
This is my vote for the airwolf theme as the stream starter.
Yeah, okay, we've been debating a song inspired by the Podfather.
Here's what I'm thinking.
I was listening to their live stream and I noticed that they play a song before the
show every time and it's the same song.
And then I realized like this is genius because it kind of probably gets them in like a mental
head space.
You know, you could be having a bad day.
Maybe you're fighting a lot of the tech.
Maybe it's 90 degrees in your studio.
You forgot a pre-show again.
And like if you could program your brain to get in the head space every time you hear
the song, you hear the song and it's go time.
It's showtime.
And so we've been debating in our pre-show what song could we listen to over and over
again that would get us in the right head space.
And so 412 Linux is he's voting for airwolf.
I want to sample it.
So those that don't listen to the live stream get a little idea what airwolf sounds like.
I'll just play a little bit.
It's a classic like 80s style television show intro.
It's pretty good, right?
It's not great.
It's not epic necessarily.
But I realized wouldn't it be great if we picked a song that had different remixes?
You know, so it has to be popular enough that there's different remixes.
And you guys, this is where airwolf shines.
Check out this remix.
This is killer.
Little helicopter sound effect.
Right?
Elite podcasters air dropping in to do our thing.
Picture it.
Podcast mercenaries talking about Linux.
Yeah, right?
Oh, it hits.
Oh, yeah.
Linux!
Yeah, and it doesn't stop there.
I got one more.
See, airwolf has got one more remix that I think is a serious contender.
Yeah, synthwave version, baby.
They even sped it up a little bit.
So I think airwolf could be a contender.
I don't know if it's the right note, but I feel like it's got some serious range.
I do think having remixes available is a strong plus.
That's for sure.
Yeah, yeah.
And something we should consider in other contenders.
Boost!
Retro Matt boosted in six days ago with 9,250 sats.
Chris, you got any guesses?
9250.
9250.
I feel like it's almost a zip code.
Is that the right amount of numbers for a zip code?
That's a good amount, though.
Nope, not the right amount of numbers.
So I don't know.
Good try.
I don't know.
Retro Matt, you'll have to tell us.
We have zip plus four.
That's zip minus one.
Right, right.
Maybe it's the last four digits of a phone number.
Or they're soc.
Yeah, yeah.
They're right.
During my freshman year at RIT, I learned of a band called The New Deal.
This was also the year I first used Linux.
To this day, I can still remember hearing their self-titled album for the first time.
I've been listening to you guys debate over your new intro song and wanted to suggest
a song called Receiver by The New Deal.
It's off their self-titled album release in 2001.
I think it's vibe is right.
First boost.
Whoop.
All right.
Tell me what you guys think.
Now remember, you gotta listen to this every time before we start the show.
It's not the new intro.
It's the new pre-show start song.
Gotta get you in the show mood.
And you gotta be willing to hear it like a thousand times.
Imagine we're doing a live event.
We're sitting in front of an audience.
We're playing this song.
Okay?
We're gonna use it forever.
You're really frustrated because pipe wire somehow broke on you right before.
I will say, right as I'm about to bail on this song, it drops into a new gear and I
like it again.
So it's about, like, right at this point, I start to get burned out and it's about to
hit again and then I'm in again.
I can see you burning out.
I can see you burning out.
I can see you burning out.
I can see you burning out.
I can see you burning out.
I can see you burning out.
I can see you burning out.
I can see you burning out.
I can see you burning out.
Here we go.
See?
Just as I was done.
I think we'd need to have, like, a phone prop with us so we could sort of, like, pick up
the phone.
Yeah.
Yeah.
And then if that phone was connected and it sounded like a phone and you could talk
into it.
Hey there, Wes.
How's it going?
You know?
Be a sweet way if you had, like, audience questions too, like, you're, like, hanging
on this, like, old corded plugged in phone.
I don't feel like I could hear it again, though.
I've heard it three times on the stream now and I feel like I'm done with it.
Yeah, I was going to say the same.
It's a good song, though.
I enjoyed it.
I enjoyed it the first time around.
I enjoyed it.
But I noticed that, well, because we are lucky to have this video thing that I'm not trying
not to refer to, but I noticed that we were really getting to it with that Airwolf remix.
And-
That's true, yeah.
I observed that we weren't quite into this this time playing this song around.
So just an observation.
Yeah.
We were dancing.
We are live video streaming over at JupiterTube these days.
Bond boosted in six days ago.
B-O-O-S-T.
Thanks for the in-depth review on the Dev 1.
I wasn't even thinking of it as an option until I listened to the episode.
I've been using Pop!
OS exclusively for around two years now.
I'm waiting for the Lamer Pro update to drop on June 23rd.
I'll compare the two laptops and pick the one that may be my new main computer.
Bond, I was the same way.
I would never have considered buying an HP before this.
No offense to people who enjoy HP.
I just had a bad experience with several hundred of them.
So I would never have bought one.
But this, we've bought one.
So like, there's one right here.
Brett's got one.
Like, yeah, yeah.
Infestation.
They did it.
They actually did it.
Michael B boosted in.
That B must be for boost, surely, right?
Two days ago with $6,000.
Thanks for the review.
I wouldn't consider an HP laptop otherwise as a good Linux machine.
How about that?
OK.
Well, you're not crazy, I guess.
Yeah.
But this is a good point that things can change.
And surely, some of the partnership with System76 helps get some of those things right,
or at least make sure they don't go too far off course.
It's nice to see.
It is nice to see.
I bet they were really nervous trying to crack that market, too.
I could see that.
Cdubs boosted in with a super geeky boost because he used the Boost CLI tool.
Boost.
That is really geeky.
And he sent 10,101 SATs.
Looks like binary to me.
Yeah.
I wonder if that's a binary message.
There's a couple of bigger boosts in here.
And I just wanted to say thank you, guys, because SATs are on sale right now.
Probably going to be on sale for a little bit.
And we still consider them, you know, they're the same SATs to us.
So this is a great opportunity to boost the dip a little bit.
And if everything works out, who knows?
But in a couple of years, you know, this 10,000 SAT boost may be something that helps the network.
You know, like that could be something that it is a dollar amount that increases over time.
So you can kind of boost today for something that continues to drive value for a long time.
And that's one of the things I think is the most interesting about using lightning for the value
for value model is potentially there is an opportunity for an audience member to sort of get
some SATs on the cheap, send them to a podcaster, that podcaster or open source project.
They sit on them for a couple of years and, you know, they're worth maybe twice what they were
worth or something like that.
And, you know, what, you're out 10 bucks.
The podcaster gets 20 bucks in a couple of years.
I mean, it's an interesting it's an interesting setup.
It's an interesting setup.
That's all.
I think it's a neat opportunity.
Cdubs writes, boosting the NixOS router project.
I'm going to I'm not going to use it on a Pi, though, but I have a question for you guys.
Do you have a dedicated monitor or mouse for your router setup?
I looked into tinypilotkvm.com and it requires a network, which I might not have where I'm working at.
Thank you for the show.
I think.
Thank you.
Yeah, I don't know what that acronym stands.
T Y F Y C.
We've thought about using like Pi KVM.
Alex and I have talked about that quite a bit on the show.
Yeah, totally.
I think it is really nice.
What I like to do, at least when we're setting up, is I like to have a table with a monitor,
mouse and a keyboard and a network hub just kind of there for the build.
But then once I deploy it, no, I typically haven't had a monitoring keyboard on my routers.
Yeah, same sort of if I if I'm careless enough that I really break it, then the punishment
I get is dragging a monitor over there, which is not the best system.
KVM would be much, much slicker, but it in practice hasn't been too bad.
And I imagine, especially with the NixOS set up, you know, it's going to be especially
resilient.
I want a serial console.
Yeah, is there a carrier board out there that has a serial console?
I could probably do USB to serial.
That's the way to do it.
That's the way to do it.
OK, but if we get that, that's the only way you're allowed to connect.
Anonymous wrote in five days ago with 360 sats.
Here's some sunshine and confetti.
Thanks for another great episode.
Kostpilin boasted in boasted in with 3690 sats as he do boos.
There's a lot of critical opinions about the Umbral 0.5 release, which we mentioned recently
in their telegram groups, some downgrades of potential security or Bitcoin client versions.
So I've heard a lot of folks that are sad after updating.
I'm still on the old version myself, and I'm looking to manually update specific containers
and maybe do Docker overrides.
Thanks for the show.
Oh, so Umbral is this application platform you can use to self host a lot of really great
open source applications.
Chat apps, Vault Warden, Photo Prism and Bitcoin node and Lightning nodes, and they've separated
them out of separate apps.
And I think there's some growing pains.
You know, I wonder, Wes, what would you recommend somebody backs up before they upgrade something
like Umbral?
So, you know, there's lots of tools.
So it's using Docker containers under the hood.
What do you the data directories?
I mean, what do you need to back up to be safe?
I almost feel like we should try this after the show and just see how it goes.
See how I see if Umbral might be a motivation for if you don't, if you are using something
like an appliance, maybe you want it in a virtual machine that you can usually, you
know, easily snapshot.
That sort of thing.
Otherwise, yeah, you probably want to look at how it's set up specifically.
Is it mounting things in directory wise?
Is it just using Docker volumes directly?
I don't actually recall, but that would be a place to start looking.
Yeah, perhaps we'll dig into it.
Break some things.
I like it.
The Golden Dragon wrote in again.
Thank you very much.
Three days ago.
Two, two, two sets.
Small duck row.
Thanks for the double episode.
I'm a duck.
D.U.K.
Duck loaded with talent.
Grounded grid boosted in a week ago with 2600 sats.
I'm late, but just installed Nix OS.
Having a config file that defines my system reminds me of my other favorite operating
system, Emacs.
I thought he was going to say FreeBSD because that's what Alan Jude used to go on all the
time about.
You know, I've got that RC.com.
Everything's in there.
He was right.
It's a nice thing to have.
It is a nice thing to have.
I love that Grounded Grid decided to keep doing the Nix OS challenge, even though we
kind of have stopped.
I love that it's continuing on.
I think that's awesome.
Carry that torch.
Grounded Grid also gave us a double boost.
2600 sats.
Thanks for the great Jupiter content.
After listening for several years, I still get excited when new episodes are released.
That's A so sweet.
I think that's a goal, right?
So do we.
Yeah.
Well, we do, don't we?
We are very excited when they publish and they download.
It's a nice relief, actually.
So we agree with you on that.
We also got some thank you boosts.
100 sats from Tim B, 500 sats from User 412, 500 sats from IT Guy 05, and 500 sats from
User 95.
Way better than the User 94.
Let me tell you what.
If you'd like to send a boost into the show, go grab a new podcast app at newpodcastapps.com.
Or maybe you're an antenna pod user.
You love using antenna pod.
You can grab Breeze, B-R-E-E-Z dot technology, and then you just add the podcast in there
and you can send in a boost without having to switch your podcast app.
Or be extra nerdy with Boost CLI.
Our picks this week are kind of on theme.
We had to do the obligatory Get Kraken pick, which is, well, it's a gooey interface to
use GitHub, but do any of us actually use Kraken?
Get Kraken?
I find most of the utility if I'm trying to review like a complicated tree, you know,
like there's been a lot of branches going on or some complicated merges in the recent
history that I'm trying to review, like just what's happening or what the status of things
are day to day.
No, not really.
Yeah, I found it to be overwhelming.
It was just too much for me.
It's too much.
Too gosh darn much.
But Brent suggested, and I think he's totally right, we should just include the awesome
Git list, which is on GitHub itself, which just includes some of the best tools for Git
out there.
It's kind of a meta pick.
And we could go in and pick one or two, but the list is worth perusing.
Yeah, send us some boosts about the tools that you liked or what it's missing, something
like that.
Yeah, I'd love some suggestions on what I should use to make it either easier or better
or maybe resources on how to learn best practices, something like that.
Padawan, stick with the command line.
Come on.
If you'd like to join us live, we do the show on Sundays around noon Pacific, 3 p.m.
Eastern.
Our Mumble Room is always up and going.
You get a high quality Opus audio feed and you can jump in and share your thoughts as
we go along.
Details are at linuxunplug.com slash mumble for that.
Jupiter.tube is where we're streaming the video version of the show, and it's available
for replay over there as well.
And last but not least, if you're not checking out Linux Action News, well, then you're
missing on what the heck's going on.
You're missing on it.
You should probably check it out.
It's probably worth checking out.
Linuxactionnews.com, go over there.
Give it a listen.
We got our matrix chat rooms if you want to join.
There's a LUP feedback chat room over there.
There's a, okay, we got a whole whole rash of matrix chat rooms.
What else?
Well, stay tuned for those exciting new brunches in the extras feed.
Yeah, yeah, yeah, yeah.
You could just subscribe to the all shows feed and get all the shows.
That's probably worth mentioning.
I think that's all the stuff that's worth mentioning really.
I can't really, if I can't think of it, how important could it be?
There's probably more, but I'll just say join us live.
See you next week.
Same bad time, same bad station.
Yeah, good enough, right?
Links to everything we talked about today.
Those are over on the website, linuxunplug.com slash, what is it, 464?
That's how it works.
You just go there.
Episode number, and you go there, and these are the links.
Suspicious.
At least until we screw it up.
Yeah, it's that easy.
Maybe we'll break it one day.
Of course, over there you can find our contact form if you want to send us your feedback that way.
You also can join the gosh darn matrix rooms by the links over there.
That's all there.
We made it real easy for you, linuxunplug.com.
A lot of those links should probably be on our main website.
Yes, maybe branch will do a pull request to get that fixed up.
In the meantime, thanks so much.
We'll see who learns what it is.
Yeah, right.
Sure.
Just almost there.
Thanks so much for joining us.
See you next week.
Well, we had ourselves a little bit of a technical challenge.
Our OBS machine overheated during that shutdown.
It is having a day over there.
It did itself a little thermal throttle over there.
Well, we're pushing it harder than ever these days.
I know.
I know.
Well, it's because we're doing it's Brent, really.
It's Brent's high quality face.
Oops.
Sorry, guys.
Sorry, guys.
It's that whole photography background.
I had a follow up question for you.
Both, actually, and maybe even the mumble room.
I talked a little bit about my teeny tiny Git journey so far.
But Wes, I would imagine you've been using this for years and maybe even a different
versioning tool.
And Chris, I'm curious about your history, too.
So could you guys inform me, please?
What's your Git history?
You know, I've dabbled with the GitLab, but I've never had a real use case myself personally.
I've thought about it for my desktop config management.
I thought what a cool setup that would be is like my own hosted GitLab.
And then like I'm checking in my dot files and all that kind of stuff.
And then I started thinking, oh, I could do that with my next config and all that.
But ultimately, I just use GitHub.
I always have.
I used it.
I've been a member for a long time because I had private repositories on there.
And that was sort of the way you did it back in the day.
And it's always been sufficient for me.
But I've never used it in like a day to day development practice.
So I'm kind of like, I'm the most casual user possible with that kind of stuff.
Do you interface with it much for the day job?
And is it actual GitHub or using Git?
Is it local stuff?
Well, I use Git locally, of course, and kind of a hybrid.
I do enjoy the support built into VS code is quite nice.
Especially for if you're trying to resolve a tricky merge conflict, rebase, that kind of thing.
The highlighting built in is nice.
But otherwise, often just use the command line client as well.
And then we've got a GitLab hosted internally.
But no, I mean, that's kind of the output of my work.
At the end of the day, it's a merge request or pull request that is attempting to make
changes to a repository.
And that's the way I communicate.
That's the way I exchange ideas and stuff with my co-workers.
So it's kind of fundamental to my job.
Yeah, it's like the tangible thing that you produce at the end of the day.
That's it.
Yeah.
How many of those have you made?
Between that and, you know, sadly, Jira tickets, that's kind of how it goes.
That's weird.
That's probably so true for so many people, too.
And then maybe that'll be us.
You know, one day when we're done, the end result is going to be an episode that we put
up on GitHub and the details and stuff like that.
And then it goes out and it's a powerful idea.
Ah, the dream.
