I think you should see this.
It's just a kid.
This is a G chord.
He's learning. Absorbent. He's getting smarter every day.
Homo Habilis was the first to use tools.
A player who makes a team great is more valuable than a great player.
Losing yourself in the group for the good of the group. That's teamwork.
It's happening fast.
We've always watched the stars. If you look at the sky, you can see the beginning of time.
Collecting data is only the first step toward wisdom.
But sharing data is the first step toward community.
Poetry. There's not much glory in poetry. Only achievement.
Knowledge amplification. What he learns, we all learn.
What he knows, we all benefit from.
One little thing can solve an incredibly complex problem.
Everything's about timing, kid.
This is business. Faster, better, cheaper.
Constant improvement.
So, you want to fly, huh?
Wingspeed, thrust.
It's physics.
Republica non dominitur.
Plummet. It's all about the tools.
Speaking of that, go back down.
Go back down.
Does he have a name?
His name is Lennox.
Welcome to Lennox Unplugged, episode 309.
My name is Chris. My name is Wes.
It's a big day today, Wes. Huge!
Yeah, we'll get into some of that in the news.
Plus, Mozilla has been labeled a villain.
Villainy!
For supporting DNS over HTTPS.
We're going to talk about DNS today in a way that I hope is approachable to everyone.
And talk about some ways you can implement some of these own solutions that can be very advantageous, have a lot of benefits.
And we'll tell you also what the possible downsides are and what has everybody so upset.
Plus, we have some feedback, some great pics.
But before we get to any of that, we've got to say hello to everybody who's joining us today.
Hello to Cheese, Alex, Andrew. Guys, good to have you here.
Hey, how's it going?
Hello. We have a panel of experts today, really.
But as always, we're like staffed by what I would consider to be a council of internet experts.
Time appropriate greetings, Mumble Room.
Hello.
You know, on the pre-show, we were talking about how great it is that we have like a multi-year lug going now here.
And we meet every single week. It's so cool.
And then when you join our lug, you get to be part of the conversation in a show that is...
All you have to do is show up and you're a co-host with us right here on air.
There's a few people that listen to the show and you can be part of that.
And there's also our chat room that goes along while we do the show at irc.geekshed.net pound jupiter broadcasting.
And all of our live times over at jupiterbroadcasting.com slash calendar.
I bring all of that up to point out that we won't be here live next week.
We will have an episode.
I'm super excited though, Wes, because last night I made the plunge to switch to Evolution.
Well, this is, you know...
Did you see this one coming?
No, because it's been months and I thought you would kind of quietly forsaken desktop email on Linux.
Oh, for sure.
You just moved to mobile devices and that's fine. I'm a web email guy myself.
Oh, yeah, yeah.
Evolution? Tell me about it.
I've been quietly struggling with MailSpring.
It's a decent, it's an electron-based mail application that ties in pretty good with Google Apps, which is...
Now I've got like a couple of Google Apps accounts.
Oh, so many, yeah.
And that's been nice, but the other day I opened it up and it lost its entire config.
The JSON files just totally messed up.
You do not have a high tolerance for events like that, I would say.
And you have a few emails.
Yeah, so I messaged Wimpy and I'm like, okay, you and I...
He understands my email plight, like he knows my struggle.
I'm like, Wimpy, I know you're using MailSpring, this just happened to me, this line no farther.
The line must be drawn here.
What are your email secrets?
And he says, you know what I'm doing?
He says, a bit ago, I switched to Evolution.
And I like it so much that we're moving Ubuntu Mate that direction off of Thunderbird to Evolution.
And I'm like, Evolution?
I used that like...
Ages ago.
Maybe seven, eight, nine years ago.
I mean, it's been a really long time.
It was during the era of Exchange 5.5, maybe the next revision up.
And I just hadn't gone back.
And I'll tell you, Wes, I installed it via Flatpak.
Of course.
And the setup to connect to Google Apps accounts felt very old school.
I had to put smtp.gmail.com and stuff.
Full details, no fancy little graphical icon.
Oh, you've got a Google account? Let me fill everything out for you like everything else does now.
None of that. But it does, once you set all that up, it's like, oh, this is a Google account.
Well, let me import your calendars for you.
And it actually does that really, really well.
Once you just Google search, hey, what are your mail search, you know, IMAP and SMTP stuff,
underneath all of it, Evolution knows it's talking to Google.
See, that's smart. And calendar is probably the next most important thing, right?
Yes. I am very happy with the results.
I plugged three of my large...
Just as an example, today, my Jupiter Broadcasting email account has 14,000 unread emails in it.
I was going to say, yeah, you should explain.
You're working at a little bit of scale here.
And I re-email every single day. I try to keep on top of it.
And it's just like, and Evolution just handled it like I had to download and stuff, like I had to give it time.
It's handling it like a champ.
How do you feel about the interface these days?
Not bad. You know, I had to fix it. I had to fix it.
What I discovered is Flatpaks won't use your system theme unless you install...
On FlatHub, there's like all the fairly well-known GNOME themes.
So do you have to go install it so you can kind of connect to that ecosystem?
Exactly. So I installed a Flatpak for ArcDark.
Oh, well, there you go.
And now all my GTK Flatpak apps, once I launched them again, all got ArcDark.
So it worked out.
Now I love the interface because it's flat, it's modern, it's working, it's fast.
It feels fast compared...
So Evolution used to feel slow to me.
Evolution used to be what I considered to be a slow application.
But my...
That baseline has changed with Electron, my friend.
When you have a mail application that has 70,000 emails in it or something like that, it really chugs.
And you need, in my opinion, you just need a native application.
Wow. Yeah, you're excited about a native desktop Linux application.
I love it. No, it's great. Honestly, I'm installing it from FlatHub right now.
Because why not? Especially, I mean, it's Flatpak, that's fantastic.
It's easy to try and it's classic open source software.
Yeah, you do end up...
You do end up having to install a theme twice.
One is the actual system and one is a Flatpak.
That is a little weird, I suppose.
But today is the big day.
We've all been kind of holding our breath.
I think some of us kind of were thinking maybe it wouldn't happen.
And there was a crack in the armor in Brazil when the regulators did not approve the IBM and Reddit acquisition.
Nervous little moment.
Oh, didn't... Nervous little moment.
But today, at least everywhere else, including the United States,
Red Hat's acquisition by IBM has closed.
They have tweeted out this morning that Red Hat will remain independent and neutral to give customers freedom.
And they've released a video of IBM and Red Hatters talking together to show their commonality.
So you just kind of just keep looking at me the whole time.
And then we just kind of chit chat back and forth about it.
But I think that there is a lot of really great affinity between IBMers and Red Hatters.
Each one of our stories is different.
I think I was probably always destined to be an engineer.
And actually, initially, I was very much into math.
So I was really curious, like, how do you go about building systems?
People like us that when we see something, we want to take it apart and see how we're from the inside.
Some of us got our start at an early age.
I mean, I don't really remember a time where I wasn't interested in technology.
And I actually learned how to read playing text parser adventure games.
My father rescued a Commodore pet from the garbage.
Shortly thereafter, he purchased this book for me, which was Beginning Basics.
And I was like, this is it!
And the video continues on for a bit.
I'll have a link in the show notes if you want to watch the entire thing.
It's a cut of some fairly well-known Red Hatters.
And some not-so-well-known IBMers talking about their common interests, I suppose.
Yeah, you've got some distinct cultures working just a little bit closer together now.
The one message that has been so, so super clear, it was crystal clear at Red Hat Summit.
It has been really clear since the communication.
They have doubled down in every possible meaning of the word on the fact that IBM is going to remain independent.
So much so now that everyone in the world will be watching to see if that actually is the case.
Yeah, IBM's kind of just saying, alright, keep doing what you're doing Red Hat.
Make a whole bunch of money and we have easy ways to work with you when we want to resell your stuff.
Oh, and by the way, OpenShift all the things.
Of course.
OpenShift all the things.
Do you have any thoughts on that, Alex?
I know you have to trade carefully here, but do you have any thoughts on OpenShift seems to be a key part of both IBM and Red Hat's future strategy?
It absolutely is.
The acquisition is all about the hybrid cloud and making OpenShift into the next rail.
So I'm cautiously optimistic.
I really hope that they maintain the culture that Red Hat currently has.
I love it.
I think it's great.
It's very open.
There are a lot of opinionated people working at Red Hat and that's what makes the company what it is.
So leave it alone, leave it as it is, and I think they have a good chance of succeeding.
I hope so.
So OpenShift does seem to be a pretty good strategy.
How do we encapsulate what OpenShift is in a way for the audience that doesn't follow it in a really quick elevator pitch?
Pretend I don't want to buy anything.
It's an enterprise distro of Kubernetes.
Yeah, with surprise, surprise rel sort of at the core of it.
When you think about it, Red Hat has this history of taking open source components, contributing to them, building on them, and then packaging it up for real world applications.
Yeah, and it's Red Hat recognizing the significant role that Kubernetes is playing in the industry now, which is a trend we've been watching, but more on that later.
So here it is.
It's done.
It is complete.
And now we just wait and see.
I kind of take them at their word from an overall global market strategy, where I'm watching very cautiously is at the projects that make the Linux desktop so much better.
Things like Network Manager and Bolt and a lot of the Gnome stack itself.
The things that feel a little far away from rel server boxes.
One point on Gnome, though, is that rel ships with Gnome as the default desktop these days.
And then that includes Pulse and a bunch of other low level system things.
So I don't think it's all that bad, necessarily.
That's my hope is that because those things do play a part in rel that they're safe.
And I suppose that'll be part of the test too, right?
If they really do treat it as an independent agent and Red Hat, I mean, obviously they've been comfortable with that expense on their books.
They're happy with that contribution.
Kind of a test of, you know, that seems like something a legacy company might like to look at the line item and be like, well, what's the value here?
It's not how Red Hat operates.
That's why we like Red Hat.
See if it keeps going.
That'll be the area that I think we watch the most.
The industry will watch like a lot of their sales tactics and for layoffs and things like that.
I'm going to watch for contributions to projects that don't seem like they necessarily immediately benefit the bottom line.
And Red Hat's at the center of a lot of that.
In fact, it's one of the stories I wish we told a little more here on the network.
But it is what it is.
And so we'll be watching.
Do you think that this maybe frees up Red Hat to some degree to so that they don't have to worry about the money and they can kind of rely on IBM to guide them through the market while they just continue to be Red Hat and do what they do?
I mean, if you look at some of the other reviews and some of the TV pundits and these finance people, you know, they're saying that within two years, Red Hat plans to be on the positive side of growth again after the acquisition and all this sort of stuff.
You know, I think maybe IBM is just kind of playing that part of it.
Maybe.
Maybe.
So there's some acquisitions where the acquisition is all cash and there's some acquisitions where the purchasing company borrows like almost 30 to 40 percent of the capital.
That's the situation we find ourselves in with the IBM and Red Hat acquisition.
And so for that to pay off, when you consider the interest rate on the money that they had to loan to buy Red Hat, the back of the napkin comments math like on Hacker News and whatnot suggests that that interest rate alone, again, this is just what people say on the Internet, could be 700 million dollars.
So there is a there is a bit of a pressure to produce, to grow and continue to grow.
Red Hat's on that trajectory already.
So that's it's a it's a safe bet that that's going to be what happens.
But even if kind of unspoken, it's definitely sitting there.
But in the next two years, Fuchsia could launch and disrupt the entire Linux market.
Stay tuned for the next episode of Fuchsia Unplugged.
We'll have Fuchsia today here where we cover daily Fuchsia developments.
But, you know, something could come along and disrupt the market.
But it's very unlikely.
I think it's a safe bet that IBM is making here, but they do need it to pay off.
It doesn't I don't think to answer your question specifically.
I don't think it means they can coast and just afford to spend money on things now.
I think it means they need to actually produce to pay off.
Right. This is not like some large company getting some buying some small startup as a bet to see if it really does well.
This is a serious strategic move for IBM.
Quite literally one of the perhaps the largest software acquisition ever.
Does this mean that open source has won then?
Yeah, I think it means that open source technologies on cloud infrastructure and server infrastructure and on the back end for developers has won.
And that's where the money is.
I mean, Microsoft made a ton of money for a long time that way, too.
What a what a what a wild, wild, wild, wild 2019.
We're going to do a special next week that is a reflection on what all has happened in 2019 so far.
See if it was in line with where we thought things are going.
Because honestly, I mean, so much we kind of just need to take a little break and assess.
Otherwise, I'm going to not be able to keep track of it for the end of the year.
It's remarkable.
So we've had our quote research team on it doing the research.
But also the team here on the show has just been like, well, let's let's think about this ourselves here.
And we look back at 2019 already.
Holy crap. Holy crap.
Well, this this might not be unlike anyone's list for major events, but it's still something people are talking about.
Canonical's GitHub account was hacked this week.
Oh, it appears a hacker was essentially just creating empty repos.
It looks like like just screwing around.
Nothing actually really got messed with.
And of course, I think all of the actual jewels are on launch.
Yeah, that was the first statement I really was.
Don't worry. This isn't where we keep things.
It's mostly just a mirror.
Didn't prevent certain pundits from claiming that Canonical needs to throw everything out and start all over again.
I can't believe the crap I see.
It is a good time for a security review.
And before he found out about it, Coder Radio host Michael Dominic was just pointing out to me like how important it is to have your two factor off set up for things like this.
Yeah, what happens is some, you know, contributor somewhere in the chain might accidentally commit their credentials to something and then somebody sees it because there's lots of scrapers to find that kind of stuff.
And it doesn't take it doesn't take like a nation state.
It doesn't take an expert.
It just it just takes somebody who can run a script that finds and scrapes and then they can log in.
That's all that happened here.
But Canonical did release a statement saying that they can confirm that on 2019 on seven six of 2019 there was a canonical owned account on GitHub GitHub whose credentials were compromised and used to create repositories and issues among other activities.
Canonical has removed the compromised account from the organization in GitHub and is still investigating the extent of the breach.
But there's no indication that anything for the Ubuntu distribution at all has been affected by this because again, infrastructure for that's on Launchpad.
They plan to post a public update after the investigation that was launched July 6.
Have you heard anything more?
No, not yet.
But I haven't heard anything either.
We'll have to stay tuned for that.
Yeah, it's just a couple of days ago.
A lot of people talking about it, though.
Well, I mean, it is it is big news and it's not an event you like to see even if this time, you know, the outcomes were pretty good comparatively.
Yeah, I guess in this case, yay Launchpad.
Yeah, I suppose so.
But right. I mean, like, if it did happen on GitHub, maybe that's a consequence of them not really using it.
You know, it's not their source of truth.
So they're less concerned about it.
But it's just a breach of good practice.
Yeah, my understanding of the nature of the breach was it was a contributor who made an accident, a mistake.
And when you have a big organization, that's just it's a thing that can happen.
And perhaps a two factor here played a role, you know.
I'm sure they know that, though.
We don't need to tell them how to do it.
So let's talk about the Raspberry Pi, because that also made big news recently.
And there has been some wonkiness with the Raspberry Pi power source.
I got to say, Joe Rez right here.
I don't know if you heard of this guy.
Oh, yeah.
He's a fantastic podcaster.
Yeah.
Yeah, he's new.
Upstart.
Yeah, I just tuned into his late night Linux podcast.
First time I ever listened to it in my life.
And he seems to be really on top of this Raspberry Pi stuff.
Yeah.
He also has this podcast called Linux Action News.
What do they like cover sort of relevant news stories in a quick and timely format?
I don't know.
I can't watch their faces talking to a large microphone on YouTube, so it's not for me.
But my understanding is they recently reviewed the Raspberry Pi 4.
That's my understanding.
Got their hands on it and everything.
I came across it because he was one of these guys who was bellyaching early on on Twitter about the heat issues of the Raspberry Pi.
And then later on was bellyaching about the weird charger and how you can't just use any old USB-C.
And I don't know who this guy is.
He seemed like a real grouch.
So I started following him.
And lo and behold, it appears that the Raspberry Pi folks have admitted to a faulty USB-C design on the Raspberry Pi 4.
And this Joe guy must have called it.
I just can't even with this.
Maybe a fix will be inbound, but it may have to be a hardware fix.
This is being detailed by Tyler Ward.
The Raspberry Pi 4 has a non-compliant USB-C charging port and doesn't work with many chargers as it should.
Thanks to the open nature of the Raspberry Pi, Ward was able to discover that the Raspberry Pi didn't design its USB-C port correctly.
And as you know, Chris, USB-C, well, just a little bit complicated.
Apparently.
In this case, two CC pins on the USB-C port itself are supposed to each get their own 5.1 kilo ohm resistor.
The design this latest Pi used, well, they use their own custom design that, I mean, one upside was it allowed them to share a single resistor.
Oh, good.
But this is not a compliant design and therefore breaks compatibility with some of the more powerful USB-C chargers out there.
So there you are sitting with your Pi and you've got this great, you know, really nice, like say laptop charger that I have for my laptop.
I'd like to be able to use.
Yeah, you can't because whether your USB-C charger works with the Pi 4 has to do with whether it uses what's known as an e-marked cable.
E-marked cables are fully featured USB-C cables with chips inside that negotiate power management, accessory modes, data rates and other communication specs.
So like this chip must detect something's not right and not supply the correct amount of power.
Yeah, right. So since the Pi 4 USB-C port is wired incorrectly, these smart cables basically just say this is an audio adapter accessory.
That's what it gets classified as.
Oh, interesting.
And then it just refuses to charge them because it says this is not standard.
It's just not going to work.
So those are more expensive and they come with stuff like laptops.
That's where you're mostly going to see them.
Dang it.
I mean, like USB-C was already complicated enough.
I really liked the words from Benson Leung, an engineer at Google.
The USB-C guy.
Yeah, the USB-C guy.
Yeah, exactly.
And he titled this snarky post over at Medium, how to design a proper USB-C power sink.
Hint, not the way Raspberry Pi 4 did it.
Oh, ouch.
Instead of trying to come up with some clever circuit, hardware designers should simply copy the figure from the USB-C spec exactly.
Strong words.
Yeah, you know, this reminds me of the Nintendo Switch.
It also doesn't have a standard USB-C charging implementation and is a little wonky.
You've got to be careful when you plug USB-C into the Switch.
Well, as these reports started to pop around on the Internet, Eben has admitted that, yep, it does appear that this is an issue.
And I like this quote.
How about this?
I expect this will be fixed in a future board revision.
I've already bought mine.
Lucky me.
Uh-huh.
But for now, users will need to apply one of the suggested workarounds.
It's, quote, surprising this didn't show up in our quite extensive field testing program.
Thanks, beta testers.
You screwed me.
They just used probably the cable that it came with, I guess, huh?
That must be it.
You know, I wonder.
So we were surprised about this, right?
We're all like, whoa, a new Pi just dropped?
Is this a sign it was rushed or was this just slow and they missed it?
Felt like they could customize, save some money, be clever, and it backfired.
I think that's part of it.
Let's use USB-C because we can do our own implementation and be clever.
By the way, that suggested workaround?
Just use their charger.
Suggested workaround.
So beware, if you buy a Pi 4, make sure you get the right kind of charger for it.
And that's not that big of a deal.
Or wait for the next board revision, maybe.
Yeah.
And maybe you'll get eight gigs, too.
Although they say that was now a typo in the manual.
A typo.
A typo.
I accidentally typed in eight gigabytes.
That was also not caught in their extensive copy editing.
I accidentally typed in eight gigabytes and the board accidentally supports up to 16 gigabytes.
Accidentally.
And I think eight gigabytes was on its own line underneath everything else, too.
Well, all right.
There you have it.
So I'll let you know.
When I get my Raspberry Pi 4, I think I'm going to put a buntremonte on there.
I don't know.
I should ask Wimpy first.
But I'm going to give it a go as a desktop.
It seems actually like, I mean, this is going to be the best one yet for it, right?
As long as you can stand the heat.
Oh, yeah.
Well, I think in a month or two, there's going to be more than one or two third-party CPU coolers.
You know they're coming.
Oh, yeah.
With fans.
There'll be Air Ones.
And somebody ought to take a bet right now in the audience.
Somebody should get like a website set up with a pool.
You know there's going to be a water-cooling YouTube video for the Raspberry Pi 4.
It's just in a matter of days.
So is it 30 days?
Is it 15 days?
Is it five days?
There's a bet to be had there.
Somebody could win some Dogecoin.
In the meantime, let's talk about a brand new version of Firefox, which I'm all about.
I wouldn't normally mention an individual release other than this one has such a killer feature.
It's such a small thing, but I just wanted to let you all know about it.
It's now possible to get dark mode in the reader view.
I was hoping this is what you were going to say.
I actually installed Firefox 68 right before we went live doing this show.
Try it out, this new dark mode, and it's fantastic.
Also, just props to Firefox for continuing to develop their fantastic reader mode,
which I think is the best of the lot.
One of the best things about using it on the desktop.
Also, you and I are both in agreement now that it renders pages faster than Chrome.
It is snappy.
I feel like the UI might be a little laggier than Chrome,
but I feel like the page rendering is significantly faster.
I like that they added a feature where you actually have to interact with a page
before they can prompt you for notifications,
so it's not just like right there already prompting you for notifications,
and you can disable having that at all.
You tell me, wait a minute, that's in 68?
I believe so.
Shut up.
That is great, Wes.
Oh, man, those notification things.
I don't see it on this page.
I don't see it on this page either, the one we have in the show notes,
but I'm going to look for that because between the cookie notification
and the I want to send you notifications and oh, by the way,
can I have your location stuff,
and then they have some pop-up about their newsletter,
I'm about done with the web.
I'd like your microphone so you can chat with a Jupiter Broadcasting
representative to find the right podcast for you.
Hey, we should probably implement that.
Let's do that real quick.
Also, just a side note,
we've talked about this more extensively on Linux Action News,
including where this is going,
the Firefox 69, the next release,
will be the final version on Android that has extensions and add-on support.
Oh, that's a big change.
Heads up on that and more details on where Mozilla is taking that,
which actually long-term is a good direction in Linux Action News,
but I don't want to make the whole show about Firefox.
I am getting very excited about it though.
I'm happy to say I've switched back.
I'm very happy with it.
Now using Firefox as my primary and Chrome as my secondary,
which was the opposite.
Yeah, kind of Chrome is, if I can get away with it,
just sort of the media one.
I use it for the Chromecast stuff and some of the DRM stuff maybe,
if you have to.
Chromecast and just a couple of other things that work better in Chrome
and that's pretty much it.
But all my day-to-day stuff is in Firefox and I'm very happy with it.
Very happy with the Sync, very happy with all of it,
and happy in the direction Mozilla is going in general these days.
I'm cautiously optimistic they're going to take this services stuff
and turn it into a way to fund a good web browser
that has a positive impact on the web.
We'll see if that's the case.
I know.
I almost just want to just sort of buy it for a while for that reason alone
and also get the benefit of trying it out.
I want them off the search sauce.
I don't want them hooked to that search sauce.
They're valuable and it would be nice to have them be able to stick around
and know that they have secure funding.
Just a couple of things in the old housekeeping this week.
First of all, we have a link in the show notes.
You'll have to dig it a little bit because it will be a little bit down.
But we have a Google form to ask for you to submit.
I think it's what, four questions?
I'll pull it up right here because I didn't actually pull it up ahead of time.
Yeah, four questions.
One question.
Yeah, four answers.
Yeah.
Oh, right.
All right.
So let me back up.
Oh, jeez, did you make these graphics too?
This is amazing.
I just saw this.
That's beautiful.
So on the Friday stream, we play Who Wants to Be a Millionaire
and give away some games to people that are in the chat room.
That's one great reason to show up live.
And generally, we've just been doing typical trivia.
But we've decided to step it up and do Linux trivia
and open source and free software trivia.
Doing it right.
And in this game, you need a kind of like easy question,
medium question, and a hard question.
It's actually got a scale of like zero to four-ish.
That's the largest I've seen in the set.
I'm not sure what the maximum really is.
Yeah, so you said a difficulty.
But we have a form right now where you can ask a question
that the contestant would then be asked
and then provide us with the correct answer
and then a few wrong answers that sound right enough
that they could be it to make it challenging.
Am I making sense?
Absolutely.
Yeah, so we have the Linux Millionaire form.
We'll have linked in the show notes.
And essentially, our ask here is we'd like to crowd source
some of these questions that we can ask.
And we could use these on live streams and all kinds of things
to kind of quiz people like Linux trivia, history stuff.
I like that we'll have this set up ready to go.
That's fantastic.
And we'll have a link in the show notes.
I feel like I'm doing a horrible job explaining it.
But I'm very excited about the potential.
It's Linux Who Wants to be a Millionaire live on Fridays.
Yeah.
And we need your help.
Help us out.
You've got great Linux knowledge.
You've got great questions in there.
Because we want questions that would make even people
who have been using Linux a while think.
Do be aware of what difficulty you put.
Because we want the easy ones to be easy enough.
You've got to have some hundred dollar questions.
What happened to poor cheese on this Friday episode?
We won't talk about it.
Don't even.
Cheesy.
Don't even give me story.
Cheesy.
I did include a dime question, though.
We need like some thousand dollar questions
and a hundred dollar questions.
But we also need like $32,000, $64,000.
You've been reading LWN for the past 10 years.
Yeah.
Awesome.
Yeah.
All right.
Would you say that cheese had a hard dime of it on Friday?
No.
No.
Wouldn't say that, actually.
It was funny.
Even if it was wrong.
It was still funny.
All right.
All right.
Moving on.
Moving on.
Link in the show notes for that.
We have a bunch of updates to cover now.
Linux Academy is doing new positions.
They have new content launching.
So I encourage you to check out links in our show notes
for that as well.
A new DevOps professional certification exam has just been updated
with a new emphasis on the developer tool suite.
If you don't know what that is either,
probably worth checking out the links in the show notes.
They have 28 job openings currently.
What?
At least the last time I checked.
That is crazy.
A lot of those positions are remote, full-time, full benefits.
Check that out.
Some of them are local too in town.
And then a couple more things.
Our study group, Understanding Burnout, went live on YouTube a few days ago
and it's really good.
If this is something you're struggling with,
you guys know this is something I've struggled with.
Do you work hard?
I mean, are you a person who has a job?
Well, then you probably have struggled with this.
I can tell you this too.
It sneaks up on you.
And there's some really good stuff.
Hayden?
Is it Hayden?
I hate it when I get it wrong.
Major Hayden.
Major Hayden from Red Hat.
Major Hayden.
I got it wrong once and now I'm like,
it's like a dog that gets scared by fireworks.
I got it wrong once.
So Major Hayden joins L and it's Major Hayden from Red Hat.
And it's really, really, really good.
And then last but not least,
if you need to learn up on AWS on July 31st,
we're kicking off another round of totally free study groups.
It's something we do kind of off air with the community
to help people learn up and pass the AWS cloud practitioner exam.
That's coming up soon.
Details at meetup.com slash Jupiter Broadcasting.
Speaking of the job market,
our friends over at System76 are also hiring.
Emma is looking for customer service tech
to join her happiness team,
and she has details on her Twitter page.
I'm imagining they have a link too
that you could probably check out.
I assume you have to be able to tolerate pink
at least a little bit.
But other than that,
it seems like a fantastic place to work.
Yeah.
So check out Emma's tweet.
We have a link in the show notes.
If you're in their area, go work.
Emma would make an awesome boss.
She really would.
That would be awesome.
And let me tell you, that's a fun group to work with too.
So that would be a great gig.
If you want to get out there
and do a little customer service support
in the greater Denver area,
check out a link in the show notes for that.
We're trying to get people hired.
That's the thing we've been doing.
I wonder if you get like an employee discount,
one of those sweet Thaleos.
Yeah, you do.
Of course you do.
Yeah, get some sweet Linux rigs too.
You'd probably have to build it yourself though, I bet.
Oh, yeah.
That'd be fun.
That would be killer.
Something I hope we can do
is get more and more people hired.
That's something I hope we can do.
It's something I feel like if we could meet a few people
and we hear a few stories every now and then
where people have got jobs through the network
and stuff like that.
I love hearing that.
So we'll have links to that as much as we can
in the show notes.
And that is over where, Wes?
I'm a little Linux unplugged at that ground.
Slash 309?
Well, I mean, they're all right there on the front page.
That's true.
But yeah, we have easy URLs.
You just put the show number.
This is 309.
Yep.
Links to all that stuff.
All right.
So this week, there has been a lot of news around Mozilla.
The ISPA labeled them as one of the 2019 internet villains
along with Article 13 and Wes's good friend, Donald Trump.
So sorry, Wes.
This has caused an uproar of conversation.
We're going to skip the drama this week
and talk about the technology specifically
at the root of this conversation is DNS over HTTPS.
But we're going to broaden that up
and talk about some other secure DNS solutions,
what the current issue is with DNS in general
and why people are all upset
and time providing some solutions you can implement yourself
to just control all of this
and not worry about different cloud-hosted solutions.
Is that a good summary of it?
Yeah, I think so.
Wow.
I think it's got some attention
because in the last segment of the show,
we were talking about how we see Mozilla
as generally good actors for the internet at large.
So when you see someone calling them a villain,
it's a little bit shocking.
But it does make sense because once you start digging into,
this is a change to the way DNS works
and change always makes people mad.
And right now, ISPs in particular
and enterprise admins the world over,
they're usually the ones who are in charge
of where your DNS goes.
This is essentially it.
So the core issue that the association has, the ISPA,
is that DNS over HTTPS will bypass ISP DNS servers,
which will then bypass filtering,
which will put children at risk, hence the villain label,
because filtering equals children's child safety.
And I think there's been an added degree of concern,
let's say, over this because it's not enabled by default anywhere
or really it's kind of just being tested out.
And Cloudflare was one of the first organizations
to really adopt it and have publicly available servers to use.
And so Mozilla has been working with them
in the initial rollout of this technology.
So yes, by default, Cloudflare gets all your DNS
if you use the DOE technology.
Yeah, so Mozilla has been working on this.
Google has as well.
We'll get to that in a moment.
And with Mozilla's implementation,
I can't speak to Chrome's,
but Mozilla's implementation uses Cloudflare.
So you turn this on and it uses Cloudflare DNS.
So the most technically literate counterargument
against DNS over HTTPS has been that it enables centralization of DNS
and it gives Cloudflare, which people, I would presume, think is evil,
more control and more information about what people are doing online.
So you go from dispersed DNS where it's a bunch of different ISPs,
aka Comcast, to it's Cloudflare.
And that is technically a valid argument and concern, I should say.
It's not technically valid, but it is a valid concern.
We have to, and this is how the conversation I feel I should proceed
from here on, is we have to separate the implementation from the technology.
All things can be implemented poorly and be compromised.
Encryption can be implemented poorly and be compromised.
DNS over HTTPS can be implemented poorly and lead to monitoring.
So while that is a valid argument,
Mozilla's implementation, and others will vary,
but Mozilla's implementation allows you to specify your own DNS servers
if you choose to, it's just using Cloudflare by default.
And devil's advocate, just for a second, who else could they use?
Because if you turn this feature on, how many millions of DNS requests an hour
all of a sudden does that provider receive?
Who else could handle that level of traffic and support this service?
Because it's not traditional DNS.
You're now taking these DNS requests over port 443 HTTPS.
Yeah, the flip side is, yeah, Cloudflare's doing a lot of work,
spending real money to provide this service,
even if you don't trust why they might be doing it.
I do think it's kind of interesting, and I think we should make sure
we bring our friend Drew in on this,
because I know he has a lot of experience in this area.
You do as well.
I can appreciate the admin side of this, too.
It is a big change to the way DNS works,
and there's a lot of techniques that people have learned
and are legitimate from just running an internal only DNS server
or trying to do perhaps what you consider essential filtering,
and those techniques may have to change in this implementation.
But the flip side is when we think of maybe countries
with governments we don't like or censorship we don't agree with,
we want that power to be in the individual.
The other part, too, is this could happen all the time, right?
Browsers can already make web requests,
so this is really just a culture change.
It's not really a technology change.
Yes, it's a new standard, yes, interruptibility,
but it's not really giving the browser any more power in a strict sense.
I tend to like to think about this, too, beyond the browser.
This might be the first implementation,
but you could see a future where almost every application
has its own DNS servers baked in that it's doing over HTTPS.
Telegram or WhatsApp would be fantastic candidates
because a government isn't likely going to shut down Cloudflare,
because if they block Cloudflare,
they're breaking the Internet for their users.
Right.
So what are they going to do?
If I were Telegram, I'd have a version in development right now
that's already using this.
Drew, I'd like to hear your thoughts on this part.
The thing that drives me crazy as an old sys admin
is there's value in having every application on your network
using a common DNS.
Yes.
So DNS is absolutely one of the most important functions of the Internet.
It's the domain name service,
which will provide an IP address when you give it a host name.
And that host name could be something local
or it could be something on the Internet.
Google.com isn't really Google.com.
It's a string of octets that you're going to string together
to create a web address.
So you need DNS to do that.
Now, the flip side of that is most people are using their ISPs DNS by default.
You get a dynamic address when you connect via DHCP,
and they tell you, okay, use this DNS address via DHCP.
So if you want to use a different DNS service,
you do have to go in and manually make that change.
Or if you're using static IP,
you're going to have to manually enter that DNS server anyways.
So realistically, you can do a full network DNS service
and not have to worry about doing it in a specific app or specific apps
just by changing the DNS service that your router is handing out
to all of your devices.
That is certainly a thing.
And I did want to point out,
Cloudflare isn't the only game in town for this.
Google does support it, as does Clean Browsing, CZ.nic, and Quad9.
They all have DNS over HTTPS support already.
Now, I haven't actually used those.
I've only tested the Cloudflare implementation,
but presumably you could get those working
if you trust them more than Cloudflare or Google.
Sure.
And we'll talk about here in a moment some ways you could do it yourself
on your LAN and maybe even set yourself up
so that way you could use one of these technologies to say,
if you're on an airplane, get access to the internet without actually paying.
But that's a different technology.
We'll get there in a moment.
Byte, you had a tech question at the top before we dig into all this.
Go ahead.
Yes.
So I went to a talk about someone who is very skilled with DNS,
and he told that using DNS over HTTPS causes that we need to be identified
to get our content.
And with the HTTPS, there are a lot of flags that can identify us
to get us anonymous.
So what I'm very curious about is what kind of information is being sent
that is identifiable and what keeps us anonymous.
I actually think this is one of the technical arguments for DNS over HTTPS.
There is a consideration here of it is more identifiable in some ways
because you have more information being negotiated at that layer.
That's true.
I mean, I would say just go take a look right now.
There are kind of two competing,
at least there are two common sort of standards for how this is going,
and that's being resolved.
You can go take a look at their open specs,
so go see what kind of data is there.
And then one of the upsides at least is the rest of it is just standard HTTPS.
So if you're not willing to connect to the site,
a lot of the big implementations are going to be connecting to services
you're probably already connecting to.
If you trust them for regular web traffic,
probably trust them for this.
So when you're dealing with identity,
you have the advantages and disadvantages of that.
The advantage for the user is that the identity of the DNS server
is also confirmed because it is HTTPS.
So there is some security you're also gaining
when you consider the fact that today DNS is just plain text,
and there's no verification of the server that's responding to you.
Yeah, right.
Now, I suppose you could do some things,
like if you really wanted to try to do some, you know,
plain text with the dead simple UDP DNS,
maybe there's some argument there, but you're right.
The DNS most of us are using right now is just totally plain text.
It can be man in the middle, it can be messed with,
and it can certainly easily be logged.
Can you explain to me now, before we go any further,
where DNSSEC fits in with all of this?
Because I thought that's where everything was going,
but that was years ago, and it hasn't gone anywhere.
I mean, I remember Windows 2000 shipped with DNSSEC support.
Well, DNSSEC added ways to be able to assure
that you weren't being man in the middle,
but it didn't necessarily add all these privacy features.
And then there's also DNSCrypt, which came out of OpenDNS.
That is also supported by some of these not universal.
And then there's the simpler, arguably,
some people consider it technically better,
just using, you know, DNS with TLS
and not adding all the HTTP stuff to it.
And that works, too.
That's on Android 9, for instance.
And a lot of these services support that as well.
I'd like to comment, I saw, you know, DNS over HTTPS,
it might not be technically the best or even optimal thing,
but it seems to have legs, and it's good enough, right?
It's going to be easy for people to implement,
because HTTP is, like, the most used protocol ever, right?
We have libraries for it in every single language, everywhere.
kernel already supports it.
It's simple to interact with.
That's the crux.
And it's not really worse.
Yep.
At the sort of base of it, it's easier for developers.
And that is what will make all of the difference.
I mean, they're the ones doing the things, right?
And it can be done at the application level,
so Google can have their own verified,
secure DNS servers that they use by default.
And this is years down the road.
You know, every application, if they choose to,
can have their known good DNS servers
and use those by default.
It'll all be different.
It'll be radically different, depending on the implementation.
Like, Mozilla has one of the best right now.
Their early implementation in Firefox
actually has considerations for, like,
falling back to, like, your systems DNS
to resolve certain names.
Like, imagine the ramifications of this on an intranet.
Well, Firefox has been thinking about that.
So they've tried to build in some sort of considerations
for, like, when you're trying to resolve local servers
on your LAN.
It's like, okay, don't use DNS over HTTPS for this.
But, again, that's software logic,
and it's not going to be perfect,
and we're going to have to work these kinds of things out
for a while.
And it is a funny, interesting case.
It just reminds us the complexity.
You know, change was going to come,
because DNS did kind of need a polishing.
Yeah.
It is maybe problematic for some admins.
But then again, you're right.
They're going to build in solutions.
So if you're out on the admin for your employees' boxes,
you can also just pre-configure it
so that Firefox is installed with your DNS servers.
So there is some advantages for just end users today.
Like, if there are reasons you might want to use DNS over HTTPS,
a lot of networks may block using your own DNS server,
but they're not blocking HTTPS traffic.
Yeah, right.
Or you're traveling abroad, for instance.
I've run into that.
And instead of having to go full-on VPN
if you're using Firefox, right,
you would just tick this on, and suddenly all your sites work.
So we thought, since this is a pretty fun technology
that has a lot of possibilities...
And it's open source.
...let's divorce it from all of the drama and potential,
you know, oh, it could be implemented horribly,
and let's do our own implementations.
So the crew went off and did different setups,
from running on a Raspberry Pi
to running it up on servers and whatnot.
And, Drew, I know you had some success
getting it running on a Raspberry Pi.
I think you ended up even using Pi-hole to do it?
I did.
So I took an old Raspberry Pi 2 B+,
so, you know, not exactly a spring chicken here,
and I set it up in about an hour.
It was easy and works really, really well, and it's fast.
So, you know, first stand up the Pi,
and then what I needed to do was set up Pi-hole itself.
And there are nice, easy instructions on the Pi-hole website.
We'll have those linked in the show notes.
Now, after Pi-hole is stood up,
then to really get this going with DNS over HTTPS,
you've got to set up a little daemon on your system
that the Pi-hole can pull DNS information from
and use that as its upstream DNS
before serving it to your devices.
And doing this with Cloudflare D is astoundingly simple.
You really just have to pull it down from the Internet,
put it in your slash user slash local slash bin,
and then create a system D service to launch it.
That's it.
Are you essentially seeding your database
with their information, but then future requests
from that point forward are responded locally on your box,
and Cloudflare is just completely unaware of it?
Or is it more like a proxy situation?
Right.
So, what you're alluding to is when you have a DNS query,
your query will go to whatever your DNS server is defined as.
And if the local or ISP DNS server
does not have that information,
it will forward that request to another DNS server to provide it.
That's how all of these domain names get distributed.
Somebody's got it somewhere,
we'll keep reaching until we find it,
is essentially how it works.
So, you set up Pi-hole as your locally cached DNS,
and if it doesn't have an address,
like say I've not gone to slash dot before,
and I try to go to slash dot,
okay, Pi-hole doesn't have it cached,
so it reaches out to whatever you set its upstream DNS as
to pull that address down before giving it to you.
And that's what that Cloudflare D is doing,
is it is acting as the upstream DNS provider.
It essentially opens up a port on the Raspberry Pi
for the Pi-hole service to query,
which then runs all of these requests through that HTTPS tunnel
to pull down results.
I see.
So, once the result has been cached,
from then on, your Pi-hole is serving the results.
Yes, exactly.
And that's what's neat, like whether you use the HTTPS version
or just TLS or DNS crypt,
if you think about it, a lot of people are running DNS mask
or something similar, maybe just for the caching
or you're using it to do DHCP or whatever else.
When you're doing plain DNS, right?
You're still leaking that, your ISP can still see all of that.
If you just make this change, suddenly it's encrypted.
Now, to stay on theme, Drew,
you don't actually have to run it on a Raspberry Pi either.
You could actually run Pi-hole in a container.
You could.
Now, I haven't tested out getting Cloudflare D
running inside a container yet,
but there's no reason that you couldn't do that,
or you could even run Cloudflare D on the bare metal
and have the dockerized Pi-hole query that.
Sure.
We'll have links in the show notes, too.
So, there's other... Facebook's got an implementation.
There's a couple of different open source ones up on GitHub,
so there are a ton of proxies available
if you want to start playing with DNS over HTTPS.
I mean, I could almost see us setting one up as, like,
let's do one for us just because...
I want it on my home network now, too.
Yeah, and we have no agenda. We don't care.
That's really fascinating.
Now, you gave it a go.
How did you experiment with it?
Yeah, I just set up one on a droplet
and then tried to connect my Firefox to it.
How did that work?
That worked pretty darn well.
The configs in Firefox is a little bit weird,
so you might have to futz with that a little bit.
I know I did, but once it was working, it seemed just fine.
Is there any...
It's a little clunky.
You do have to go to, like, bout config and stuff.
I didn't notice a ton of change,
but I was on a nice home connection, so...
So, no real perceptible performance difference?
Yeah, it was just fine.
Hmm.
What kind of investment would you say it is time-wise
and steps to get it working on the droplet?
Is it packages? Is it a PPA?
I tried DNS script proxy, and I just kind of got...
Is it a container or...?
You know, I don't know.
Normally, I try things in the container right away.
I didn't see one.
I just kind of ran it because...
Well, it's written in Go, so they just had to...
Yeah, you just run it.
Exactly.
That's probably what I would do.
I was curious about configuring Firefox, all right?
So...
Yeah. Hmm.
And I've already thrown the droplet away.
Hmm.
So, it looks like...
I mean, to my count, we've got, right now,
one, two, three, or four different solutions now
to try to secure DNS, and nothing's really sticking.
I think this is... I mean, honestly, DOE seems like
it's going to have the most legs, at least in the short term.
Yeah.
You know, if Mozilla really does it,
when we see it actually shipping in Chrome...
Well, so DOE, again, DNS over HTTPS,
isn't just a Mozilla thing.
It is also a Google thing,
and I think that's something worth considering.
On the mobile versions of Chrome right now,
they already support it.
Google is standing up servers,
and there is patches landing in Chromium to support this as well.
You can turn it on now.
So, it seems like they're kind of behind it as well.
And if you think about it,
it's a good business move for them to help people bypass censorship.
Well, and you were talking about, you know, using it in the app, too.
So, they have a JSON API.
It's dns.google, and you can just shoot JSON requests at it,
and it gives you DNS records, right?
Like...
DNS over JSON?
Yeah, that's right.
2019's just lost it.
It's just totally gone off the rails.
It's just... I can't believe that's just happened.
Also, I know it does look like a systemd resolve, the systemd DNS implementation.
It doesn't do HTTPS, but it does do DNS with TLS,
so you can get stuff there, too.
All right.
Well, we have a whole bunch of resources to point people to,
including client resources, stuff you can run on the server,
explanations of the different DNS securing solutions,
and what's wrong,
and, of course, the guides to implementing your own.
We need to set something here at the studio.
We don't necessarily need HTTPS over DNS,
but we do need a good DNS solution here at the studio.
So, thinking about doing PyHole in a container just for fun.
And PyHole's great.
It's got a lovely little UI.
It's easy to set up.
I like that it also has just a script you can run.
So, you can run a container, you can run it on a Pi,
or just install it on your distro.
Geez, you love you some little PyHole, don't you?
Yeah, yeah, I set it up.
I played around with it for a little bit.
I did notice that there are some issues if you are standing it up on a Pi.
Most routers nowadays will let you set a custom DNS.
However, if you do that and still have your router set up to do DHCP,
you could run into some problems like I did,
where it's just extremely slow.
And I think that's essentially because it's trying to find
all the devices on the network and it can't.
I could be wrong there, though.
I probably am.
Also, whenever you get going, ideally what you want to do
is just go ahead and tick the box on your router, turn off the DHCP server.
PyHole has the DHCP servers built into it.
Just fire that up, and then Bob's your uncle, and boom, it's off and running.
And after that, I lit it up and I had no problems.
Also, if you don't want to affect your entire network when you're testing this,
you can just stand up the Pi and then just point your network adapter
at that DNS server.
So, if you actually want to work with PyHole that way,
you can do that and maybe you won't get your wife so angry
that you brought down the internet.
Just don't even use DHCP at all.
Yeah, just bypass that.
Now, one thing that I will bring up is I was talking to Cheese
about the issues he was having, and you've got a, it's a Nighthawk, right?
Yeah, it's a Netgear Nighthawk 7800, I believe is what it is.
What I was reading about that is it does not let you define
what the DHCP server in the Nighthawk will provide down to clients.
So, you are having to set it as the router system-wide DNS server,
which is typically not recommended.
You want that to be something upstream, but then your DHCP clients
get something else from them.
So, I think that's where you're running into issues.
If you do have a router where you can define the DNS server
that DHCP hands out, then that's going to be a much better way,
and then you don't have to move your DHCP to the Pi-hole itself.
But you do now owe Drew some money.
He'll have your invoice arrive shortly.
I'll get you some brews.
Sounds good.
Now, Alex, you've been rather quiet on the subject.
Is this anything you've messed around with using Pi-hole
or any of these kinds of shenanigans?
A little while ago, the guys over at Linux Server
did an ad blocker kind of challenge,
and we ended up running AdGuard Home, a few of us out of a container,
and that worked pretty well.
Some of them experienced slowness with encrypted DNS.
I'm wondering, geez, whether that is the same symptoms that you had or not.
I don't know.
Generally speaking, though, it's really easy to set up one of these ad blockers.
Yeah, it's really easy, and it works across all of your devices.
That's one of the really cool things for me.
Trying to install an ad blocker on Android, for example, without routing is a tricky task,
but if you are doing it at the router layer or something like that,
then the network level, you're able to stop ads before they even reach your device,
which is super-duper cool.
Sweet.
Yeah, that's compelling to me.
All right.
Well, that's fun.
We have a whole bunch of resources in there,
but one thing I'd kind of like to ask from the audience on this particular topic,
if you go over to linuxonplug.com slash contact,
or you could just tweet me at chrisles.
Are you concerned about Cloudflare?
I get the concerned sort of vibe from the community, and I feel it myself,
but I don't have an articulate reason.
I couldn't just sit here and Mike can tell you why.
I would love to hear some, yeah, right?
And I hate to condemn them just because they're successful.
I don't want to do that.
So I'd love to hear some thoughts on it, linuxonplug.com slash contact.
You know, maybe compare some contrasts,
because as you say, there are limited solutions for general providers,
so who's a better org to trust?
Yeah, who's another?
Who could handle that scale?
That's great.
Include that, please.
But also remember, the implementation is not the technology.
There are other providers, and you can roll your own.
That's the beauty of open source.
It doesn't have to be Cloudflare.
You can stand it up on a Raspberry Pi, a DigitalOcean droplet,
anywhere you can possibly get access.
So it's a cool tech, and you can be in control of it.
It just depends on the implementation.
I've never installed GNU slash Linux.
All right, well, as we come in for a landing here,
so we're going to turn off the bathroom and turn on the seat buckle signs.
Wes, you got to sit down now.
Always going for that mile high club.
We got some really good feedback that we need to incorporate right here
in the studio, Wes.
I'm telling you what.
I think this is the way to go.
It's about wandering windows in XFCE, and it comes in from Peter.
He says, hi, Chris.
He says, try installing DevilsPi.
You use the terminal with X win info to obtain the window stats,
like the size, its PID, and then you can use DevilsPi to write a profile
about each important window, save each one,
and then make sure the DevilsPi daemon runs on startup.
To fine tune the adjustments positions,
you can tweak each attributes of each window.
You could disable the daemon altogether if you don't want it, et cetera.
But the idea is it solves your window sizing problems,
positioning, and attribute problems.
Easy for me to say.
Ah, so you've solved the problem that you created
when we switched away from Plasma.
Yeah, yeah, the very thing that Kwin had built in that I love,
the Kwin rules.
That's what DevilsPi solves.
Actually, this does look pretty neat.
And it's broken out as a little standalone application.
We could totally use it.
And also, by the way, there's a newer version called DevilsPi 2,
which we'll have a link in the show notes.
It could be worth checking out.
Because he says here, he's got it really laid out.
He calls it his perfect tool, and the project describes it even as crack.
They say it's crack once you get it just right.
You get all your windows just the way you want them on your desktop,
even their transparencies and everything, and you set it once,
and then you hit a button, and it scripts it, and it lays them all out.
Maybe you're finally ready for a tiling window manager.
You stop it.
You stop it right now.
You stop it right now.
Actually, I'll tell you what.
The guys and gal over at Choose Linux, our very own Drew here on the show
and Elle are now joining Joe Rez on the unit.
Have you heard of Joe Rez?
Oh, that guy.
Yeah, right.
He's sure popping up a lot.
I'm a fan of the Joe Rez podcast, but that's all I know about.
I've heard he's got a few other shows, and one of them is called Choose Linux.
New to me.
But I do know of Drew and Elle, and they are joining this new upstart
in podcasting to discuss an i3-based desktop this week.
Is there anything we could tease, Drew?
Is there anything you could tease about that that wouldn't be given away?
Because that, I've got to say, has got me kind of thinking about it.
Yeah, absolutely.
So with the Devil's Pie thing, that's exactly what I was thinking is,
well, you could just do this in i3.
And if you wanted i3 with like desktop environment niceties,
well, that's where Regolith comes in.
And we did a pretty deep dive, and I even contributed some issues
to their GitHub after doing that challenge.
So it's a really cool project, and tune in to find out more.
Also a look at Rosa, as well as this really cool game that Wimpy wrote in Bash.
Oh, it's so amazing.
It's so neat.
So that's all in the latest episode of Choose Linux.
Well, it might not be the latest as you're listening,
but it'll be sort of in the recent.
Go check that out as well.
I'd say just subscribe, and then you'll get all the episodes.
Yeah, that is sound advice, Wes Payne.
Brilliant.
Chooselinux.show for that, and chooselinux.show slash 12,
specifically for that one about Regolith, which it does sound pretty cool.
I've got to admit.
If you'd like to give us your feedback, again, that's linuxunplugged.com slash contact.
And give a big shout out to Linux Academy.
Go over to twitter.com slash linuxacademycom and say,
hey, thanks for your support of Linux Unplugged and at Jupyter Signal.
We sure appreciate it.
Share them some love over there, because it's their backing that makes these shows possible
every single week to not only staff an entire team,
to make these shows ad-free as well.
That's a huge deal.
So give them some love.
Twitter.com slash linuxacademycom.
Thank them, because I'm very thankful.
Sure am.
Also, go check out all the great shows over on the network,
jupyterbroadcasting.com.
Tons of great shows.
User Air is one of my favorite shows of all time.
If you're not listening, you're missing something really special.
Check it out.
Now, I'll be off next Tuesday, but we'll have a new show at linuxunplugged.com.
Jeez, I don't know if you guys know this, but there's an outro.
Barely made it.
Barely made it.
Yeah, so now tomorrow, we all got to show up in our wizard robes.
We're going to have to burn some incense, and we're going to have to really get zen
to talk about what-
You don't sleep tonight.
You're going to need to just-
Yeah.
No, you're going to need to-
Meditate.
Yeah.
We're going to need to talk about what has been a crazy 2019.
We are, this little behind the scenes info, we're pre-recording next week's episode,
taking the family on a little trip.
Man, am I excited about this episode.
I've been really enjoying doing these specials.
We just started doing these one-off specials from time to time.
Keep it fresh.
I don't know.
I really like it.
It's nice to deep dive.
Absolutely.
Well, I think that that's kind of what you would get from a lug, right?
Once you go sit down, and there might be that topic one day, and it's just DNS over HTTPS
or TLS or-
Yeah, it's true.
Sometimes there's a special guest or an interview, and sometimes we focus on an in-depth topic.
Barbecued me some brats last night.
How were they?
Good.
Man, the JB title thing still isn't working.
How come that's not working?
Wes?
Geez.
So it's probably just that your browser has it cached, because it was a 301.
Guys, what do I do?
It's probably that you're using DNS over HTTPS.
Oh my God, how amazing is it I'm having a DNS issue after this?
That's perfect.
I can tell you the IP address.
That is so great.
I got it.
I got it.
I opened up a private session, and you're right.
It's working just fine.
All right, so we got to go over to JBtitles.com and vote.
Yeah, we did, funny enough, have a little laugh.
You know, if I was using our own DNS server, this wouldn't have happened.
That's right.
This wouldn't have happened.
Or it would have been cached, and actually it would have been a problem for all of us.
One of the two.
It is weird when you were talking about Cloudflare, because I do kind of feel the same way.
It's very apprehensive about them.
Yeah, bro, but lava lamps.
Anything that's a centralization of power makes me nervous.
Yeah, that's what it is.
Well, so cheesy, who do you have your upstream set as?
Is it Google?
Can you play a little millionaire music as he answers this?
It's dime dot dime dot dime dot dime.
We should confess.
Let's do a little confession.
Wes, do you know at home, is your upstream provider just your ISP?
No, no, it's almost never my ISP.
Yeah.
You know, I kind of do like Google's resolver.
I find that they, when I make DNS changes, theirs is the quickest.
I've tried Cloudflare's a little bit when they made that announcement.
I was curious to just play with it.
I don't know what mine is right now off the top of my head, but probably one of them is the 8844 Google one.
And then I've used, you know, I've looked at other lists and used a couple other providers in the past.
And I don't mind my local ISP.
I'm lucky to not have something like Comcast at home.
So that would probably realistically be fine.
Yeah.
I use a mix of OpenDNS and Comcast DNS.
And at home, I use my ISP's DNS because it's a little rural local ISP.
I know the business folk.
What about you, Alex?
Who are you using for your DNS?
Cloudflare?
Oh, my gosh.
What about you, Drew?
Who are you using for your upstream DNS?
Well, definitely not Comcast because that's my ISP.
And I'll be damned if I give them my request.
That's right.
I'm using Cloudflare over HTTPS right now.
You're keeping that setup, huh?
Yeah.
Why not?
I love Drew.
Absolutely.
That's awesome.
But I have used Google in the past as well.
There is an app you can download that kind of benchmarks all the different name servers and all that from your system.
And I seem to recall that Cloudflare was the fastest.
So why wouldn't I go with that?
