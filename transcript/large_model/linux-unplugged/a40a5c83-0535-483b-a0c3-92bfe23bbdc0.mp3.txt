I have a really embarrassing story to start with.
Oh, yes.
So, I know I'm going to get crap about this all the time by sharing this, but I have to
just let you know, so in case the audience out there runs into this, they know what the
fix is.
So, you know, last week, Wes, like a champ, you set up a Starbound server during the show,
and that evening...
That was fun.
So that evening, I was kind of in a unique position because, you know, when you live
in a tiny home, when you get offered to house-sit for somebody in downtown Seattle, you take
that up.
Hey, that sounds nice.
By the way, that's a little relationship pro-tip too, and that offer comes along, you've got
to try to accept that.
You say, yes.
Yes.
So, we go down and we start house-sitting Tuesday evening, we were going to, you know,
wake up there Wednesday morning, and I get down there, and I don't have any Wi-Fi access.
The password, they didn't leave it on the notes, we can't get a hold of them, I can't
get on the internet.
So, in a moment of panic, because I want to play Starbound.
Naturally.
I turn on tethering on my phone, I'm like, I'm just going to use phone data, this is
important.
Thank you, Ting.
Yeah.
And I connect, and I start playing, and I'm wondering, is Wes online?
And I'm playing along, and all of a sudden I notice that I'm having kind of a hard time
controlling and looking around.
Okay.
I can't really explain why, but I keep seeming to get this intermittent freeze, or pause
in the game.
Bop, bop.
Bop, bop.
Every three, four seconds.
Maybe every three seconds.
Bop.
Bop, bop.
And it's like, you know, when you're in a battle or something, it's just enough to kill
you.
It's just not untenable.
And it's really, it was like, really distracting.
And I'm like, well, maybe I have a video driver problem.
Maybe I have a power manag-
Sure.
Sure.
There's a lot of options.
Yeah.
I start looking, maybe it's a power management setting, like a CPU frequency.
And I'm chatting with Rekai, and I'm tethered to my phone, and I'm looking up stuff online,
and I'm-
You're in full troubleshooting mode.
This is like, this is not how I was going to use my mobile data, but now I got to know,
and like, we're down, we're house sitting, and of course my lady, she's like, so do you
want to come out on the deck, or-
Yeah, we're going to hang out on the deck.
What are you doing?
Yeah, I got this bottle of wine here.
What are you doing?
And I'm like, I got to fix this.
This is important.
And I dig around, and I dig around, and I'm starting, and I'm trying things.
I'm adding kernel boot parameters.
I'm tweaking the X config according to the Arch Wiki for Skylake graphics.
I'm making all these modifications to my system, and I'm rebooting, and I'm rebooting, and
I'm rebooting.
And one of the times I log in, the problem's fixed.
Oh.
That diggity dang, that link Rekai found me about the kernel parameter fixed it.
Look at that.
And I go to hit one of my keys, and I realize that nothing happens because none of my extensions
are loaded.
Oh.
So I quickly go remove the kernel boot parameter, reboot again with extensions off.
The game doesn't have the glitch.
I log out of Gnome login with extensions on.
The glitch is back.
The glitch is back.
And I start to notice that the glitch also exists in video playback.
It exists sometimes when just moving the mouse really quickly.
I start noticing, like, when I'm dragging Nautilus windows around, I can see that glitch,
and I'm like, what is going on here?
It's interesting that the plugin has the ability to cause so much trouble.
So I discovered it was my system monitor Gnome extension, which is a really cool system monitor
extension that puts all of your hardware devices in an icon, just icons.
And so instead of having, like, all of these moving menu meters and stuff like that up
in your toolbar, you have an icon that represents your CPU and your disk and your NIC, and you
click those, and it drops down, and you get an expansive dropdown menu of your entire
system resources.
Well.
It sounds nice enough.
And I've had plenty of these over the years.
Since Gnome 2, I've used things like system monitor.
I did a little digging around, and it turns out there is actually a current issue on their
GitHub about this.
The extension causes stutter and lag in video players is where they noticed it.
And there are some fixes that have been proposed, but what I did is I just did a purging of
anything.
So it turns out, by reading through this bug, that what it really comes down to, it's not
actually Gnome's fault, and it's not actually the extension's fault.
That's why this is particularly tricky.
Wow.
This is interesting.
It's just simply an issue in Linux when you have that many open files, and when you're
catting a bunch, a bunch, a bunch of things in proc, at the same time you've got a game
accessing all of its image data and its sound files and all that stuff, you sometimes get
an I.O. stutter like that.
It's just like a problem right now.
And they talk about it here in this thread, and they talk about ways you could alleviate
the problem by making the extension more efficient, and other ways to sort of coalesce some of
the polling and things like that.
So I just did a grand purge of extensions that checked my CPU temps and my GPU temps.
Anything with lots of random access.
Yeah, I just did a purge.
I did a purge, and it has been totally smooth, but it totally interrupted my gameplay.
So I didn't get a chance to jump on the server last week.
There you go.
That is my story of a Gnome extension that turned out...
That's good to know.
It's gone through exactly the same turmoil as you did.
Such a rabbit hole, because you start with all the obvious things like, oh, it's freaking
open source graphics, or oh, it's freaking power management, or it's my new Arch kernel.
And you're so used to those icons up there, you don't even think about it.
Yeah, and I've always had system monitor extensions, literally, for ever.
Because I'm often compiling, or not compiling often, but when I'm re-upting my AUR packages,
I like to watch how busy my system is so I know I can do a bunch of other stuff.
Or definitely when I'm encoding video, it's extremely handy to have that.
So it's, yeah, it was a little embarrassing, and I had to share it with you.
And you might want to look into it too, if you have the Gnome system monitor extension,
which is kind of a popular one, or any of those that pull your system a lot for what's
going on, maybe try turning them off for a little while and see if you notice a difference.
That's my lesson.
This is Linux Unplugged, episode 156 for August 2nd, 2016.
Welcome to Linux Unplugged, your weekly Linux talk show that was almost running a little
late.
Because even though it rained so damn much, people still don't let it dry very well.
This is something where Linux will save us all one day.
Linux will be in the cars driving us.
You know it.
And us meat sacks will be busy playing on our phones.
That's what I think.
But that's not what we're here to talk about on today's episode of the Unplugged program.
We have a huge, huge fun show to get into.
A bunch of really great news has propped up just in the last couple of days from some
of our favorite open source projects.
So we're going to spend a bunch of time at the top of the show digging through some of
those really good stuff there.
New version of Mint X F C E is out, and there's some really interesting news in there.
And also, really interesting language and positioning by Clem.
We'll talk a little bit about that in the show.
Then the Googs has the Chromecast.
You guys all know about the Chromecast.
It's sold like hotcakes, but it's really reliant on Google services.
That's got to be its Achilles heel.
This week, we'll talk about ways you can use the Chromecast with tools on your Linux box
to stream to a Chromecast locally.
So you can go pick yourself up one of these cheap streaming little devices.
We'll also talk about some open source alternatives to Chromecast, get the Mumble Rooms tips and
all of that.
Then we're going to transition into some of the Kodi exploits I've been doing.
And by that, I mean adventures in figuring out how to name my files, some of the cool
add-ons and extensions I've found, of course.
In-depth experience here.
And also a tool to help whip my media collection into shape, and I know we'll get some great
advice from that virtual lug, too, on making a really great Kodi installation.
I am really looking forward to what they have to say there.
Plus, we'll talk about some alternative backends that the community has been talking to me
about since I've been talking more about Kodi recently.
And they look really cool.
Some really neat stuff you can do, even if you're not a home theater person or a Kodi
or Plex or MB person.
What we're going to talk about and how these open source projects can interact is absolutely
fascinating.
So there's just a ton of stuff there.
So to help us get through all of it, and I mean there is a lot of it, let's bring in
that virtual lug.
Time appropriate greetings, mother room.
Greetings, folks.
Hello.
Hello.
Hello.
Hello.
I secretly use Arch Linux.
No, that's fine.
Poppy, you don't need to...
All right.
So anyways, I wanted to start with something that proves a prediction that virtual lugger
Daredevil made months ago when Microsoft announced Ubuntu runtime for Windows, whatever they
call that monstrosity.
This he said, and I think he's right, Linux is going to become the new default platform
that you write applications for.
And check out this first story we're going to talk about.
So there's a lot of Docker news this week.
We won't bore you to tears with all of the news, but I'll tell you just a couple of things.
First of all, we're going to start with this post about bringing Linux apps to the Mac
desktop using freaking Docker.
Why?
Well, to access newer versions of software because it usually takes a while for Mac people
to get to our second hand ports.
I can think of a few, like there's some Linux games I like to play where you can install
them on Mac, but a lot of Mac users might not have Xcode installed, all the things you
need to build it.
Whereas Linux, I can be like, here, run this script in a Docker and bam, done.
Right.
To test versions simultaneously, multiple different versions simultaneously, to use
tools that have been ported over to the Mac, and for sandboxing applications.
So this is really kind of an intense walkthrough of how to get...
Docker is an example of a GTK Slack app to get all these different apps that are Linux
applications running on top of the Mac.
And sort of along with this today, Docker has announced that they now consider Mac Docker
version production ready, like it's officially been stamped as you can now use Docker on
the Mac in production.
What do you think about all this?
You know, it is interesting.
It does, I think it really does speak to what Daredevilin said about the Linux runtime being
everywhere.
Yeah, it kind of worries me a little bit.
Because I'm still not...
I haven't seen a container ecosystem where things are being smoothly and routinely updated
and things are being patched when there's security exploits.
And I'm worried that what we...
You know, one of the big things that scares me about the internet of things, quote unquote,
I hate that term so much, but it's just there's so many terms I hate now that I just figured
like I gotta roll with it.
Like I can't hate cloud for the rest of my life or derp learning, you know.
But internet of things devices, what's the big security issue in your mind about internet
of things devices?
Well they never get patched.
Exactly.
And now we're doing the same exact thing in containers.
We're just loading our secure Linux boxes up with containers that never get patched.
Now that's not universally the case.
But it's easy enough that you've pulled that one Docker file one time and it runs and you've
never done anything else.
Exactly.
The handfuls of Docker images that I have done, that tends to be the case for me.
And even if I'm willing to stay up to date on them, it's not always easy because sometimes
you can lose data if you screw things up because...
And also sometimes they just simply don't update them.
That's another problem.
So this is sort of potentially leading us down a path that two, three years from now
could leave a lot of people in a bad situation.
We're going to wish there was some sort of shared common run time among all these or
something.
But hopefully the increased prevalence on other platforms will contribute to an incentive
for that.
Yeah, I suppose so.
It doesn't have to be that way.
Boy, that is a silver lining.
I do wonder if there's any work going on to integrate with that Windows, the new Windows
layer.
I think right now they're using Hyper-V and they're using XHive on the Mac, but I wonder
if they'll be able to do a little bit closer binding.
I don't know, that's weird.
I don't even get me started on containers that use virtualization because that just
sounds like a VM to me, but I digress.
This next story, I think a lot of people are going to be excited about it.
I know Noah and I have talked about this quite a bit.
I'm not sure where you weigh in, but folks like Popey, don't worry about this.
Look at this.
Popey tweeted this today.
He's taking apart a NETGEAR GS116 switch and getting a soldering iron out to fix this thing.
But for those of us who want to buy new routers and run open source firmwares, TP-Link might
be back on the list of possible devices that will run Linux.
This is after a FCC ruling that's going to force TP-Link to allow open source firmwares
on the...
I did not expect this.
Yeah.
They're also going to pay a $200,000 fine, so that's really kind of something.
The TP-Link settlement was announced in the midst of controversy spurred by those new
FCC rules we've talked about in the past.
The new rules for the 5 gigahertz band require router makers to prevent third party firmwares
from changing the radio frequency parameters, i.e. letting you blast it up and stuff like
that, because they're worried you're going to mess with Doppler radar, I guess.
That sounds legit to me.
TP-Link didn't break any rules by blocking third party firmwares, but it got attention
from the FCC's enforcement bureau by selling routers that made it possible for users, once
they load those firmwares, to circumvent power limits.
Other manufacturers that came up with ways to... Links just worked with Marvell and
others to allow open source firmwares, but not allow the firmwares to tweak the radio
transmitting.
Right.
Here's the thing that I kind of feel a little icky about.
After admitting the violation, TP-Link halted sales of the offending devices.
That makes sense, right?
Right.
Yep.
But then they issued a software update so that units already sold to consumers would
comply.
So they just...
Oh, yeah.
That is a little...
That's a major feature.
If I could control the radio power... I'm way out in the fricking boondocks, dude, right?
If I could control the radio frequency powers and maybe get a little more signal, that would
be the main thing I would want that for.
So that'd be a huge bummer.
And it's interesting because TP-Link's violation related to 2.4 gigahertz band, but their software
update also precludes customers from installing third party software, including open source
software, to meet the new five gigahertz requirement.
And that's kind of where they got in trouble.
It's interesting that getting in trouble for that has then led to a settlement where they're
required to keep working with open source.
Yeah, very much so.
I really like that development.
That's great.
Yeah.
So...
And hopefully they can just figure it out on the hardware level and just... Before,
I think people loved TP-Links.
A lot of people were using them because they had great support for OpenWRT and such.
Yep.
That's why I bought one in the past.
Also, just kind of a separate thing.
Imagination Technologies, which is a chip maker, is working with OpenWRT and others to put
the OpenWRT software into a virtual machine on these devices, which would be isolated
from the radio controls.
Now, I don't really know if I like that a lot, because what would be the host OS?
Is it something super base?
Or is it their crappy firmware?
Right.
Is it like a very minimal hypervisor?
Yeah.
Yeah.
What is that?
And is it safe and secure?
But that is an interesting approach, and then you can run whichever open source firmware
you want in a VM, and I would think the upgrades on that are going to be pretty rock solid
because it's virtualized hardware, so it's not like that's a moving target.
Right.
Exactly.
So that's pretty cool.
You guys can check out more in the show notes.
So Wes, you found a pretty cool project that we wanted to share with the audience this
week, and this is so perfect for somebody like me who's often trying to figure out ways
to not use mobile data because it's like a personal challenge of mine.
Right.
Totally.
And when you hear of tethering, you always hear about connecting your laptop to your
phone's internet connection.
Exactly.
That's the common use case.
That's the common use case.
So what if my freaking laptop or desktop is plugged into a nice, solid ethernet connection
and I got a big update or something like that I want to do on my phone?
Wes, here is Simple RT, simple reverse tethering for Android.
So this is exactly that.
It allows you to share your computer's internet connection with your Android device via a
USB cable.
Linux and OS X, it says, are supported.
Windows is not and unlikely to be in the future.
Understandable.
So you've got to plug it in right now.
Is it working?
Does it work?
It does work.
Let's see.
So it must be two pieces, an app on the phone, right?
Yep.
Right.
And then there's software on your laptop.
Here we go.
Okay.
Connect.
Requires Android 4.0 or higher.
And did you have to, was there packages?
Did you have to build something?
What was that like?
They have a pre-built APK, so I downloaded that on the phone and installed it.
And then it doesn't install an app or anything, it all just runs in the background.
And then on your, so you don't need root on the phone, but you do need root on the computer
that you're using.
Then you would download from GitHub, they have a thing.
You need to install lib USB, but that's the only thing I needed.
A simple make, and then it spits out, it binds to the USB so that you use sudo, you run dot
slash simple RT, and then it waits for you to plug your phone in.
You plug your phone in, and then that triggers the app, which starts a custom VPN, like through
the Android VPN interface.
Oh, smart.
Yeah, it seems to work.
I'm actually pretty impressed with that.
And it, you know, I tested it earlier at work, and I was able to-
Have you done a speed test?
I have not done a speed test yet, but that's a good question.
Do you have the speed test app on there by chance, because that would be, that'd be really
interesting to know that, because you should be pretty much getting whatever our WiFi could
deliver your, well, of course-
This might be USB 2, though, here.
Yeah, yeah, that would be the limiting factor, but even still, that would be pretty interesting.
Yeah, so that's really cool.
So again, it's called simple RT.
I was really pleased with the Android integration.
I've done a little bit of this with IP tables and a root terminal on my phone, but it's
all very hacky, and this is, it's not quite all the way polished.
Like if you have a lot of custom DNS, for instance, if you're trying to get your phone
onto a VPN through an Ethernet connection only or something like that, then I think
there could be some stuff improved, like maybe how some of the AP scripts set up DNS masks
for you.
I think something like that might go a long way, but it's already very nice.
Huh.
Yeah, Android N, not too far, I mean, Ham was saying it's three days away, actually.
Then that would be, that might be a way to get that download.
I mean, of course, you'd probably be on WiFi in most cases, but if for some weird reason
you don't have WiFi, but you have the machine you're sitting at has internet access still,
this could be a way to, or doing a whole bunch of Android app updates, or-
Or maybe you're like in a place where you only have Ethernet, but you really want to
make a phone call.
Or hell, even syncing down your Spotify music.
Yeah.
That could be a way faster way to do that, because I like to do the extreme quality.
So yeah.
And then you're doing this, by the way, on a Nexus 5 running Marshmallow?
Yes.
Okay.
So it works on anything 4.0 all the way up to Marshmallow.
Yeah.
That's great.
That's a huge range of devices.
It was really easy to get going.
Huh.
Yeah, this is right up my alley.
This is right up my alley, because I'm constantly gaming the system when it comes to mobile.
Yeah, and you never quite know when you might want that, you know, and so it can just be
very helpful.
Or maybe you're on a wired network, but you really want to use the cast from your phone
for a specific thing on your phone that you can't do on Linux.
And you know what I just remembered is I have had mobile phones, one, that the Wi-Fi chip
died on it.
And so the only thing you could use was the network, the cellular network.
Right.
So there you are paying for that data.
That's no good.
That's no good.
So this kind of thing would be perfect for that.
That would be perfect.
Huh.
Simple RT, not for retweet, but for reverse tether for Android 4.0 or higher.
You know, while we're talking about mobile, this is probably a great time to mention
Ting.
Ting is my mobile service provider, and I really enjoy using Ting because it's only
pay for what you use mobile.
And because like I know of things like Simple RT, but really, you know, I have Wi-Fi at
work.
I have Wi-Fi at home.
I have Wi-Fi at families, houses that I go to.
I find that to be really all I need to just keep my bill down to an absolute bare minimum
for three devices talking 35, 40 bucks.
And that's, you know.
That's crazy.
That's with three people using their phones.
And of course, Rekai again, Rekai, same thing, on Wi-Fi all the time.
So it's basically like his line is almost free for us.
It's $6 just for the line, and then your usage on top of that.
There's no contract.
There's no determination fee.
It's pay for what you use wireless.
See, that's right there.
Like, it's a sell plan for adults.
You know, there's not a lot of rules.
There's no gimmicks.
You don't have to worry about some arbitrary Linux.
No pink shirt and leather jacket required.
Yeah.
They know that you use what you want.
You pay for it.
It's very simple.
It is.
And you can get started right now by going to linux.ting.com to support this show and
get a $25 discount off your first device.
Or if you're going to bring a device and they have a CDMA and GSM network you can pick from,
which is really cool, they'll give you that in credit in service.
And since your monthly bill on average can be like $23 for a line, that'll pay for more
than your first month.
They have really great customer service.
I mean, this is like a cornerstone aspect of Ting.
And they have a super nice dashboard as well.
You can check it all out.
They give you great controls from your phone, on the web.
I love their blog as well.
They've just recently done a post about the Ting pricing promise.
Check that out.
Just start by going to linux.ting.com.
They have great cord cutting info over there.
They have also extra storage, how to hook up extra storage to your device blog post.
Really good ones over there.
Check them out.
Linux.ting.com.
My mobile service provider for well over two years.
If you want to take the test and just see if it might work for you, go over to the what
would you save buttons right there on the front page when you visit linux.ting.com.
Plug in your information.
They make it really easy.
You can see how it works.
Linux.ting.com.
Thanks Ting.
All right.
So this next story is a quick mention because I've seen some people talking about it in
the chat room today.
And I want to give people a heads up because I don't know, I didn't see when this ends.
Oh, oh, they're accepting entries until the 14th.
So we will have time to talk about it in the last, but today System76 announced they're
giving a laptop away.
Hey, those are nice laptops.
They're doing, they're giving away a Lemure, which is a pretty popular laptop over at System76.
It's going to be preloaded with Ubuntu.
14 inch.
They're just giving it away.
They're going to do a, yeah, you got it.
There's a little bit of effort though.
So you have to go read the post in the show notes to find out more.
But it's going to be a 14.1 inch screen with a six generation core i3 processor, four gigs
of RAM and a 500 gigabyte hard drive and an Intel dual band wireless AC card.
Sweet.
Yersh.
That would be a nice laptop to give for free.
And you know it runs great with Linux.
Yeah.
So that's really cool.
You can check that out.
It runs Ubuntu.
Ubuntu?
Ubuntu?
I don't know.
I use Linux Mint.
Linux Mint XFCE Sara has been released and it's a big release because it's going to be
supported until 2021.
If you think about it, if you're an XFCE user, you probably don't, you probably don't like
reloading your system a lot.
So being able to install something that is a first class XFCE implementation that is
supported until 2021, that is damn attractive.
Yeah.
Yeah.
Think of a lot of like, you know, workshop machines where you just want a nice little
desktop.
Yep.
That just runs for ages.
Yeah.
Yeah.
And that would be, I mean, geez, that's great.
So here's a couple of new things in XFCE Sara edition.
I wanted to quickly mention, he talks a lot, Clem does in his post, he talks a lot about
XApps.
And remember those XApps is this new project to produce generic applications for GTK desktop
environments, Forks and et cetera.
And he talks about Zed and XViewer and a bunch of the different ones in here.
But he makes a comment down here that I thought was interesting and it sort of reflects his
attitude about this, which I found refreshing.
He says, note that the GNOME apps and MATEI apps and XFCE apps and that these XApps replace
are still available in the repositories.
You can install them side to side with XApps to compare them to decide which ones you like
best.
XApps do integrate better, however, with your environment, not only in obvious ways with
traditional interfaces, but also in the way they support desktop environments.
But I do like that he says, you know, you can install them side by side and see which
ones you like better.
Yeah.
That's a good attitude.
You're using a ton of applications and suggesting your users use them.
Which hopefully means like, yeah, they're going to try to compete on their merit, right?
So if they are better than people, people will use them.
Yeah.
Yeah.
So I thought that was, I thought that was kind of nice.
Anybody in the mumble room an XFCE user by chance?
I find that surprising.
I find that really surprising.
I used to use it when I first tried Arch on a machine, but it doesn't do what I want to
do because I want to, I don't want things really simplified.
I want things more complex and tweakable like KDE.
So I just no longer use it.
I used it for quite a long time after the very first release of Unity and I was still
in Ubuntu.
Me too.
I switched over to XFCE and I mean, at the time I think it was in school, so I didn't
have a lot of time for customization and it was, I mean, it still is a fine desktop if
that's all you need.
Yeah.
I feel like after I looked at this release here, I thought maybe I should seriously consider
the XFCE again for my workhorse machines.
I love Gnome 3.
I have no complaints, but you know, like I had that weird extension issue right into
that.
Yeah.
And I just simply need this thing to just work every single time.
Not that it isn't now.
So I don't really have any issues now.
Right.
There's no incentive, but it is certainly a stable platform.
But that just thinking, like it just feels like it would be a rock, but yeah.
Still a Raspbian user if that counts for, you know, XFCE.
That's true.
That's true.
Yeah.
I guess maybe...
So the Raspbian user likes DE.
Yeah.
Yeah.
I guess maybe that's what it is too, is there's just less excitement on XFCE these days.
I think that's a big part of it.
Yeah.
That's true.
Yeah.
There's also a great Manjaro spin with an XFCE desktop.
Now I enjoyed on my last road trip, Gnome maps a lot.
I thought having...
I went from why is Gnome wasting time making a mapping application to, oh, this is why
Gnome's making a map because it's so nice to actually have it in a native desktop application.
Totally.
Totally.
Yeah.
I hate the web browser.
Waiting for the DOM to up to edge just the web.
Nobody needs that.
Nope.
And plus, I can be doing my search end and looking up stuff in one window and I can be
doing my mapping in my Gnome maps.
And I was thrilled to have that along with Fedora 24 on my last road trip.
Then almost the day after I got back...
It really was terrible timing.
The map quest API got pulled underneath them, from underneath them, and Gnome maps just
started displaying developer tiles.
It was kind of embarrassing actually.
It looked awful and Ubuntu Gnome announced they'd be dropping Gnome maps and it just...
It felt like what was maps gonna do, right?
Yeah.
Here we had this nice application and just...
Real shame.
Just a real shame.
Well, guess what?
We got good news here, Wes.
Good, good news.
Things are back up and looking better with 3.20.4 release.
They're switching away from map quest, open API for fetching tiles, and instead they're
gonna start using Mapbox's API.
They're using a community API key from Mapbox and Mapbox is a company they say with a commitment
to open source and provides infrastructure that will allow us to do more with maps.
We're accessing the Mapbox API through a Gnome proxy that will allow us to easily switch
our tile provider in the future.
See, that's the way to do it.
A little extraction there.
Also watch everywhere you go.
What?
Yeah, well, I mean, yeah.
So there you go.
Are you saying you didn't want to tell Gnome where you are anyway, Chris?
You know what I would like to see Gnome Maps do?
You know the direction I would like to take this?
Imagine Gnome Maps allowing me to configure my own backend so I could point it at like
OpenStreetMaps or something or my own hosted mapping server.
Just the wrapper around a compatible map API.
Yeah, so if it was Canonical, if Canonical had announced that they were shipping a mapping
application on Ubuntu Touch that used a proxy, a proxy everywhere you go, wouldn't that be
a huge controversy?
A proxy to some, you know, somewhat proprietary service.
Yeah, exactly.
Exactly.
When they did that with Unity Dash Launcher, like we lost our collective S over that.
Now the Gnome camp goes, yeah, we're going to be proxying all of your map requests through
a central proxy run by us, but don't worry about it.
It's fine.
And we're like, okay, cool.
Good idea.
That's good.
Thank you for planning for the future, guys.
I wonder how that proxy is set up.
I mean, would it be different if it's a Chef configured server and you can see the Chef
recipes right there?
Sure, sure.
That's a good idea.
I mean, you can't actually verify what's on the box, but it's a little bit more transparency.
Hmm.
NorthRanger, you got a little conspiracy bacon there.
Why don't you share it with the class?
I guess I trust Gnome more to run a proxy that could potentially snoop on my location
than both an app, a game developer and Google farming out hundreds of millions of users
with Pokemon having their location shared, basically.
But isn't the issue not about Pokemon and Diantic and all these people, but more people
losing their minds on results from Amazon, even though they're going through a proxy
with Canonical?
I think it was both.
They were saying that Amazon was tracking you and all this other stuff and they're letting
... No, they weren't, because the data never went to Amazon.
It went to Ubuntu first.
Yeah.
There could be a flip side of that.
I remember the first question that was asked after Canonical announced the built-in search
was, is it going to be HTTPS?
And the answer was no.
Is this Gnome maps proxy HTTPS?
Why are we not asking the same questions?
Why is that?
Why is that a thing?
Right.
I'm not saying that Gnome Project is doing anything wrong, and I agree with North Ranger.
I trust them 100% implicitly more than I trust Google or Niantic.
But you're right.
We should have a set of standards for how we think maps or other personal sharing services
like that should be run.
Is this crazy to say that we need a constitution for hosted services and in the constitution
it says if we host something that tracks you or knows where you're at at all times, we
will make sure that it's set up and protected in these ways?
I mean that feels like something that should just be – whenever I'm making the choice
to either self-host or –
Like a privacy pledge for hosted services.
That's a better term.
Yeah.
A privacy pledge.
That's better.
Yeah.
Because it feels – yeah, exactly.
Because it feels like if I'm making the conscious decision to self-host versus use
a hosted service –
A lot of times it comes down to like control of your data and knowledge about where that
will be.
And I can't properly make that determination right now on any service.
That's a tough thing to sort out right now.
And the only –
Especially where it's like all the other desktops.
What is left of the desktop experience is becoming a lot of integrated with services.
So it's kind of a question we need to address in the Linux world if even GNOME is doing
it.
Yeah.
I agree.
Ww, you have a thought on the pledges?
The thing is privacy pledges are pretty much said like off the top of anybody's head
nowadays by whoever.
And they could pledge themselves to whatever.
It's actions and transparency that are more important that people need to see.
They need to see, hey, what's going on with my data?
For me, I don't think we'll – I don't know if we'll ever see this.
I want to be able to see how the data was used and what you guys are doing with it rather
than saying – having a marketing person or a social community member of your team
say this stuff.
People need to see concrete evidence that you guys are doing right by the community
or by them.
Yeah.
You know, so have you guys noticed – I mean, I just today logged in to Google because I
was curious – what was I reading about?
Oh, Mussolini.
I was reading about Mussolini and I was curious how much of that would show up in my Google
history.
And there's two sets of Google history when you're a Chrome user.
There's your browser history and then there is everything Chrome sends to Google.
And so they actually legitimately make that manageable.
Because I'm so often a skeptic of Google, I do want to give them credit here.
In Chrome, in your history, they say you should also check what Google services know about
you and you click that.
They make it very obvious.
They really do tell you what Google knows about you.
Like they know – and I just showed up right away.
Like it shows that I listen to Pocket Cast on my drive.
They know what time I open up Pocket Cast and how long I listen to a podcast.
Every morning I drive into work.
It is something.
Yeah, there is that angle too because there's like I think a certain component of Google,
of how we perceive Google's awareness and creepiness, etc. that like even if they are
doing – I'm not saying necessarily that they are, but even if they are doing everything
correctly in terms of prompting you for what you want, they're so much a part of our lives
that even if you've said yes to all these things, you forget about it and sometimes
you realize again how much they do know and you're like, oh.
Antonis, you have a tip for users to sort of see what Google knows about them.
Yeah.
So with Google Dashboard, you can go take a look and see what Google tracks.
If you have an Android phone especially, you can see where you've been with the Google
Maps.
It will show your location history and also even if you use Google Now with your voice,
it even shows you previous voice searches.
You can listen to them and it's kind of like a diary of all the places you've been.
I hear it back and I'm like, oh yeah, that was when I was in the car with the kids and
they were jacking in the background the whole time.
Yeah, the dashboard is creepy and also a very nice feature.
But it leaves me with this and the no maps thing was also another lesson.
Do I have to be an extremist?
Do I have to be like all self-hosting or bust?
Right.
I mean, because that just seems unrealistic at some point.
There's a lot of services at some point you just, you know, convenience wins.
Yeah.
Yeah.
And you know, that is something we talked about a little bit last week, how sometimes
open source loses when your time becomes more precious than your values about software freedom.
I still sort of with every single service have to go through that evaluation.
Because there's like a certain amount of, you know, yes, and it can be, I think, okay,
if you consciously value here like, well, the thing that these people are offering is
they have their own little layer on top of these open source tools that they do for me
and I like that because I just don't have time to do it.
But you do have to kind of value like, well, do they contribute back to those open source
tools that I might otherwise be using?
Are they good citizen in open source?
Do I think they're going to vanish?
Are they going to change models?
It's a lot of things to think about.
Minimac, you have a point about once you have privacy settings set up correctly on Google,
they managed to seem to stick with it, right?
Yeah, they stick with all devices.
You see, I also have an Android TV and all that stuff.
So I have a lot of Android stuff now.
And once you can figure out your privacy settings, all devices are synced and applied to these
settings.
I find that pretty cool.
Yeah, that is nice.
That is nice that they legitimately at least seem to make an effort to make it clear and
coherent.
And you can compare and contrast that to what Facebook does, where it's still not clear
and it's confusing.
And they change it all the time.
Yeah.
Yeah.
Yeah, you really have to dig all these settings once, but there are a lot of settings you
can change.
It is, you know, it is honestly to say that a hosted service that somebody else manages
for you is maintenance free and doesn't require your time to keep it going and running is
false because when you have services like Google that knows much about you, you do kind
of need to go in there and manage it from time to time and see what they're tracking,
see if you're comfortable with that because they're always adding stuff.
And the thing about hosted services too is they may add stuff, they may remove stuff
and you have no say in the matter.
Of course, I think ultimately to decide whether you need to do that evaluation or not, just
ask yourself, are you the product here?
Right.
Oh, yeah.
That's an interesting metric.
Yeah.
I think – I read a book that says that as time goes on, more and more average citizens
will start asking themselves that question, but so far I haven't really seen that play
out.
We will see.
I actually – speaking of Google, so the rest of the show – not the rest of the show.
That's not true at all.
The next segment of the show is going to be kind of Google heavy, but it's actually
sort of using some Google – bypassing some Google services.
It's the Chromecast but not using Google.
So before we get off self-hosting entirely, it would be a good time to mention Digital
Ocean and you can support the show by going over to Digital Ocean and reusing our promo
code DOUNPLUGGED.
It's one word, it's lowercase, you apply it to your account balance.
Now I think in response to this conversation that you and I were just having, probably
the key thing about Digital Ocean that I think has really contributed to their success is
that it's really fast to get going.
It's simple, it's straightforward.
And so the cost of trying something like a project like NextCloud or Rocket Chat or GitLab
is …
Aaron Ross Powell The speed plus the per hour billing kind of
stuff.
Jason Kuznicki Yeah.
And in like the case of GitLab, the entire application stack, if you just want to just
deploy the entire stack on an LTS distro, is ready to go and you just plug in the details
you need and it's set up.
So that is really giving people the opportunity to try out self-hosting in a way that doesn't
mean a huge time commitment.
Aaron Ross Powell You're not provisioning a bare metal server,
you're not worrying about colo.
Jason Kuznicki Yeah.
And look at this pricing.
And so you can see like you could really, once you get going, you could really have
something that is just running all the time.
I love this middle plan here, three cents an hour, two gigs of RAM, two core processor,
40 gigabyte SSD.
Aaron Ross Powell That's really what does it.
Jason Kuznicki Yeah.
That's, I mean, wow.
Right?
When you have super fast, they're all SSDs, they have really great internet connections,
they have data centers all over the world and when you have all of that on a machine
with two core processors, if it's for you, your business or your family, that is going
to be a screaming machine and it's really easy to step up and upgrade.
And if you want to play with something like Nextcloud and your storage starts to grow,
it's a totally different story now on DigitalOcean than it was even a couple of months ago because
they have serious block storage now that is going to make it possible for you to grow
your storage on your droplet as you need at a really nice price.
Highly available block storage, you attach it to your droplet and of course, because
it's DigitalOcean, it's SSD-backed block storage.
Yes.
You know, I talk a lot about the DigitalOcean interface and how freaking great it is.
I often will mention their API.
So this week, I thought I'd give you a few examples of why they really just have one
of the best APIs out there.
It's well-documented, they iterate on it as part of their entire platform feature set
and then because it's so clear and because it's documented, there's a ton of nice code
you can take advantage of already.
I like this Runbook.io project which uses DigitalOcean's API.
It's available, it's free, you can grab it and it monitors and automatically resolves
issue with if this, then that style automation for your droplets, which could be neat.
Like reactions from anything, like restarting Apache, rebooting a DigitalOcean droplet completely,
it is what you get if Nagios and if then, then that had a baby.
If those two things came together and had a mad passionate love session, this is the
child they would produce.
That sounds like a great recipe for not getting woken up in the middle of the night.
It is exactly that.
Also, this is kind of neat, I thought this was kind of cool, a DigitalOcean dynamic DNS
project.
Okay, that is neat.
Yeah, the script allows you to dynamically update a DO domain name A record like a mini
dynamic DNS update.
See, those are all things that you could write for yourself, but because it's so easy with
DigitalOcean, someone's done it for you.
Yeah, it's cool.
It's right there.
It is really cool.
Check them out, digitalocean.com, use our promo code DOUNPLUG to support the show to
keep us going and get yourself a $10 credit and try it out for a little while, digitalocean.com,
thanks guys.
And if you guys see a really cool open source project that uses the DigitalOcean API, please
do tweet it at me.
So before we get into the whole discussion about the rest of the Chromecast stuff and
Kodi stuff, I thought maybe we'd take a moment and talk about why we're discussing this
at the moment because just recently, it was revealed how dramatic the Chromecast sales
have been.
Google has not traditionally shared numbers on this, but in a conference call, they were
confronted and Sundar Pichai actually answered.
When responding to questions, he revealed that the company has shipped 30 million Chromecast
units since its release back in 2013, which includes all the different iterations, even
the Chromecast audio.
30 million units.
Do you have one?
I do.
I actually have two.
Yeah, I have two as well.
In fact, I've even bought one for friends before because they didn't have anything to
like watch like YouTube or anything on their TV.
And bought it for parents or family or yep.
We have one here at the studio, which has been great when we have people over and we
have a big group and people want to watch different YouTube videos.
My Nvidia Shield TV I talked about on Linux Action Show this Sunday has Chromecast support
built into it.
A lot of apps have Chromecast support stuff for like, you know, lots of stuff for like
having them run displays, Android and I believe has a lot of more a lot more Chromecast stuff
built into the OS level.
So I thought, okay, let's talk about ways that us Linux users can get content from our
Linux boxes on the Chromecast.
And maybe if the mumble room knows of some open source hardware replacements or alternatives
to Chromecast, we can talk about those too.
But I want to start with the easy button.
So that way, if you're listening and you want something super applicable to you, and you
just and you just want that right off the top.
I've used this from time to time, I don't keep it installed in Chrome when I'm not using
it.
But it's video streaming for Google Chrome.
And it allows you to load any local video file on your Linux box.
It opens up as like an app inside your Chrome browser, you can open then you can use the
local file browser to pick any local file.
And it will stream this to your Chromecast from your Linux box.
This is just a quick dirty install in 30 seconds, you can be streaming to a Chromecast.
It doesn't go out to the Google account and servers and send it down, it just goes directly
from your laptop to your Chromecast.
So that's just a that's a Chrome plugin.
But that's not super cool.
And that's not Linux specific.
And you have to pay for some things if you want more features.
Yeah, there is something you have to pay for.
It doesn't deserve that.
I'm not saying that.
But I can't even remember what it was you have to pay for, because I just use it for
the basic feature set.
But cast now could be another option.
So check this out.
Cast now is a command line utility.
Hey, here we go.
Okay, do playback media files to your Chromecast device.
It supports playback of local video files, videos on the web and torrents too.
You can also reattach a running playback session, which is really nice.
So it's cast now.
And it's just really simple syntax.
You do cast now and then the directory that has the videos in it, you can play the entire
directory or the specific file or you drop in a URL to like an MP4 file, or a torrent
file.
You can also do better luck sometimes like persnickety HLS streams, that sort of stuff.
Cast now seems to work pretty well with.
Yeah?
Nice.
So cast now, just a simple tool to install and you can do that from the command line.
I know how much we love our command line utilities.
So that seemed like a good one.
Then there was this one that came in.
A contender that's getting some update and coverage on web update this week streamed
a Chromecast, stream to Chromecast, the number two, is a command line Chromecast media streamer
for Linux.
It can transcode to unsupported formats in real time and play them on the Chromecast.
It can also do audio, so it can send audio only.
It can transcode any format not supported by the Chromecast using FFmpeg or LibAV, provides
basic control commands like pause, unpause, stop, and playback.
You can do specific devices when you have multiple Chromecast on your network, which
is nice.
Yeah.
Supports passing custom transcoder parameters to FFmpeg and supports specifying the port
to use for streaming media.
For audio only files, no metadata is displayed on the Chromecast at the moment.
So these are two different command line utilities that will take video files or audio files
and send them to your – now, have you tried stream?
I haven't but after this show, I think I will.
Yeah.
That's really nice.
That's really – that is kind of changing my opinion about the Chromecast a little more
especially since I have it built into the Shield 2.
There are like so many of those services where it's a little bit like, well, it works great
and Netflix and YouTube obviously have great support for it but there are some like outliers
where you're like, it is frustrating.
You don't have full access.
You don't have root on it, right?
So this does help with that.
Irocast, what's this, NorthRanger?
Actually it was just, you know, me doing a little bit of Googling a few days ago actually
trying to figure out my Kodi box on a Raspberry Pi to extend some functionality.
I haven't tried it yet so I'm curious if anybody else has found a similar solution
for like LibreELEC or OpenELEC type distributions.
Yeah.
Like so you want to – you want to be able to have Chromecast like functionality with
Kodi, is what you're saying.
Exactly.
Hmm.
Interesting.
Interesting.
You know, I believe there could be somebody working on such a thing right now.
Dr. Tanel in the Mumble Room, a.k.a. formerly known as Rotten Corpse, sir, could you perhaps
have something up your sleeve just like this?
Well, I mean that's convenient.
That – convenient with a K even.
Heyo.
Well, Kast for Kodi is what I'm working on which is a script that does exactly that
and it adds – be able to stream live video through like Twitch or RTMP streams or anything
like that.
It also supports local videos through like Samba and I recently fixed some things that
you can now do torrent streaming.
Oh.
Yeah, like a MetaLink for some kind of video, it'll – like the torrents that JB has,
it'll play those through that.
Cool.
And it also supports multiple devices so you can have multiple Raspberry Pis with Kodi
on it or OpenELEC even and a lot more features that I'm working on too.
It supports about 15 current add-ons for Kodi including YouTube, Twitch, Dailymotion and
many more.
Heyo.
And of course, YouTube broadcasting.
Heyo.
Hey.
So the interface for this is a command line utility as well?
It has both a GUI and a command line.
The GUI is very simple.
It uses Zenity to provide that.
Okay, nice.
And like it's just like a – hey, select the file you want to send to the Kodi machine
and then it's looking?
Yeah.
Well, the – it uses the file manager to do the local file sending so you just right
click and send it to the file – send it through the script to your Kodi device.
So what is the technology behind the scenes that's making my desktop talk to the Kodi
software?
Well, it's basically just a Bash script on one end, a JSON API on the Kodi end, and
then whatever file manager you have that supports, you know –
Send to Actions or whatever?
– adding extensions.
Yeah.
Yeah, exactly.
But what I'm trying to get to is like is there like some DLNA standard that Kodi supports,
universal plug and play like discovery like what is – what's happening?
Is it a dynamic DNS?
What's happening on the back end to make my Linux box capable of sending a video file
over the network to Kodi?
What two technologies or whatever multiple technologies are connecting to make that happen?
Well the actual sending of it is pushing the data – the signal through curl to the Kodi
box and the Kodi takes whatever signal you give it and then applies its effects.
So technically like if you're watching a YouTube video, it's not going through your
computer first.
It's just sending the signal to play the YouTube video on your Kodi box.
Oh.
So it's just going from YouTube straight to Kodi.
How does it – so how does it – okay.
So how does it handle the scenario if one time I'm sending it an MP4 file and the next
time I'm sending it a URL?
It detects on – it runs scans based on what you're sending.
Kodi already has – Kodi already has facilities to do that.
Huh.
No, Kodi has the ability to take the signal in.
Oh, your script is –
The script is actually scanning everything.
So is it possible –
So if you send it something and it –
Is it possible for you to send like torrent metadata?
So like if I'm say pulling down TechSnap and via torrent will it pull down like the
episode name and all that kind of stuff and show that on Kodi?
Yes.
Nice.
Wow.
Damn.
That is slick.
Now what do you think like future way out totally down the road possibilities like to
have this show up as like – to show up in the share sheet on Android as like an option
to send a file to when I open up in VLC or something like that?
I haven't working on – I wasn't working on Android support.
Basically just Linux desktop support is the only thing I –
Yeah.
But there would be anything to prevent that?
I mean that would be theoretically possible maybe?
Yeah, it would be possible for sure, yes.
Yeah.
How do we really –
There's some features that you can already do that on Android with – I'm pretty sure
the core – the K-O-R-E remote has some features like that.
Oh, okay.
Okay.
I'm not sure how well it does it or how extensive it is in comparison but I think it does work
for like the basics.
So is this – so this requires no changes or add-ons to Kodi at all for this to work?
No, it doesn't.
Some things require the add-ons.
So for example, I mean you're going to add these add-ons anyway so if you wanted to watch
YouTube on Kodi you got to install the YouTube add-on.
Sure.
And then it uses the YouTube add-on to send the signal to.
Sure, okay.
So basically what it does is that it takes – it figures out what you want to send it
to the script then it creates the signal in the syntax that Kodi wants then it says this
is a YouTube URL so send it through the YouTube add-on specifically so that way it just immediately
jumps to the add-on and if you have it – if you don't have the add-on it will tell you
that you can't play this design for this particular add-on.
Oh, that's nice.
If you do have it, it will just start playing.
Huh, I can't wait to try it, that's really nice.
I think for me I'm kind of in a position where I don't – I didn't realize this but
using Android TV, not to make this about Android TV, but by using Android TV my KodiBox natively
already supports Chromecast built into it but it wouldn't be – but then when I use
that functionality it drops me out of Kodi so this would allow me to stay in the Kodi
app.
Yeah.
Well, that's cool.
How do we find out more about this?
I just sent a link to the – into the chat.
Oh, perfect, there it is.
Yes, thank you very much.
Oh, okay.
I will put a link in that there, what I like to call show notes.
Did you know we have show notes, Wes?
Yes, we do.
Yeah, that's true.
Just one more quick – I wanted to answer Dream's question about Ubuntu Touch.
It should work in Ubuntu Touch.
Oh, yeah.
Oh, gosh.
Hell yeah.
That makes sense.
I like that.
I like that a lot and I like that it already works with Jupyter Broadcasting.
Boom.
That's great.
That's great.
A bash script tool for creating – for casting media to Kodi Entertainment Center.
So I want to take a little time now to talk about making Kodi great again.
Not that it's not already great but I want to make my Kodi great again.
You guys know me.
I love trying to use open source solutions whenever possible but every now and then that
little voice in the back of my head goes, Chris, just set up Plex.
Just set up Plex.
It will be much easier because then your kids can stream the files they want.
It automatically takes care of the metadata problems you've been having.
You don't have to worry about that.
Just set up Plex.
But now that I've moved and I'm resetting up my home entertainment system and I'm going
to be resetting up network storage and I'm reevaluating anything that requires an internet
connection top to bottom.
And one of the things I don't ever want to have to really deal with is I sit down to
watch TV and I can't because we're somewhere where we don't have internet connection.
I just want my media to work.
I just want my TV to work.
And when you're in that position, you've had a long day, you just want to unwind.
The last thing you want to do is get up and fix whatever's wrong.
Likely like if I'm on a road trip, I've been driving all day long.
Exactly.
You need to put your feet up.
And Kodi is fast, it works great with local media.
It's the best playback interface.
It just really is.
It's got a great UI.
It has great support for like tons of good skins.
IR control.
Yep.
Yep.
Lots of great add-ons.
Some of those skins are just beautiful.
Yeah.
There's a new one coming.
There's a Jupiter broadcasting app.
Whoa.
Yeah, so I'm going to be migrating from Plex to Kodi.
And there's a lot that comes with that.
Yeah.
It's a different paradigm.
It is.
And I do have to rename some of my media.
I have to change how I've done some of that.
And there's different back ends I can use for Kodi, too, if I want a shared Kodi central
database, if I want to take advantage of streaming.
So I want to chat about all these different options, plus get some of the virtual lugs
ideas and takes on some of this.
It's kind of a new adventure for me, because Kodi is a really cool, super impressive open
source application that I have played with on and off every single release since it was
XBMC on a hacked Xbox.
Right, exactly.
I really have.
Humble origins.
But I have never really put 12 terabytes worth of media into it and tried to get playback
and metadata synced across three television screens and then remote streaming for people
on tablets.
I've never gone that far into it.
I've never actually really integrated it.
And that's the route I'm taking now, and it does involve sort of reassessing how I have
things set up.
And if it's something you've ever considered doing or if you have tips on, I'd love to
get your input.
I'm going to mention right now our friends over at Linux Academy.
Linux Academy is where you've got to go to get your basics and then work your way up
to the advanced topics.
If you're thinking about getting some certs, this is a great resource for you, linuxacademy.com
slash unplugged.
They have self-paced in-depth video courses on every Linux, cloud, and DevOps topic.
They have hands-on scenario-based labs that give you experience on real servers.
They have learning plans that allow you to pick a course and set a timeframe to fit your
schedule and your learning goals.
They have labs that spin up on demand.
They have instructor mentoring, full-time human instructors happy to advise and answer
questions, nuggets, tiny little sparks of wisdom that go deep into a single topic, iOS
and Android apps so you can study on one of your devices when you're on the go, custom
randomized decks of study cards that can be forked and improved by the community, a community
that's stacked full of Jupyter Broadcasting members, study guides, lesson audio, personal
notebooks and tools that help you study.
You pick from your distribution to adjust the courseware and the servers and their system
can evaluate you while you perform tasks on their server to give you real-time feedback.
With hands-on guides that give you real-world experience, the feedback system, the study
tools and the learning plans that allow you to pick your availability, nobody can touch
Linux Academy and they're growing like crazy.
They just announced a major, major partnership with a real actual physical school.
This is something they've been growing on more and more recently and I think it's kind
of an interesting way to take the Linux Academy hands-on training experience and offering
it to students at a traditional university level class and they're getting real college
credits for it.
It's fascinating they have more information over on their blog.
They've got the best tools to prepare you for search in a variety of Linux, AWS, OpenStack,
DevOps, Azure and big data topics if you're searching for those search, it's a great platform
for this too.
LinuxAcademy.com slash unplugged and a big thank you to Linux Academy for sponsoring
the unplugged program.
Now I want to start with the obvious, this is like the due diligence segment of the show.
I have to mention this part so I'm contractually obligated to reference you to the Kodi Wiki
on naming video files and TV shows correctly.
So this is the canonical guide by the project that's being updated all the time.
They give you hierarchy examples, et cetera, et cetera, to follow.
This is sort of the golden standard.
So that is linked in the show notes right at the top of this segment if you're going
to get into this.
Have you any experience like going through and naming this stuff?
For MB, I've always used FileBot.
Tell me about FileBot, Wes.
Tell me about FileBot.
FileBot is a script that...
Oh really?
Yeah, and it has some parameters, specific parameters they call...
FileBot.net.
Automated Media Center and so...
Is this it?
This?
This is it right here?
Is this it?
With a GUI?
Yeah, that looks right.
I think it's a Java program actually.
Oh, snap, son.
And here, let me throw in the Automated Media Center link right there which is kind of around
a forum but it works very well.
You kind of pull down your torrents or Usenet or however you have your media, you then run
it on that folder.
You can set it up to auto run.
I'm sure you could use something like I notify wait if you wanted to do it that way or system
D timer or anything.
So this sounds like something that you could plug in with a Usenet downloader and have
it automatically...
Yes, absolutely.
Or like some torrent clients support triggering programs to run, that kind of thing.
So you can also have support for running things so like you can have it use butterfs reflinks,
you can have it make symlinks when it organizes them.
This is never really something I ever had to worry about with Plex.
Like everything I just download or backup and I throw in there and I name somewhat correctly,
Plex seems to grab it and nail it every single time.
Like it seems to be really good at that.
I think some people use it with Plex too.
Alex I know that's what I've heard about it from.
So I was thinking about trying out Tiny Media Manager which is kind of the same thing.
Does a scan, it helps you manage the file naming and all that.
Tiny Media Manager, a multi-OS media management tool.
So what I'm thinking right is I got to get the original set of media correct first.
Exactly.
I got to go through a lot of files.
Lots of seasons of crap and all that stuff that I love.
Just stuff that I treasure but maybe I have sort of let the automated system manage the
naming of it.
This looks like a great interface to kind of explore that and make sure everything checks
out.
I like that it has a GUI.
That's great.
Yeah.
Yeah.
And it does look like it's pretty straightforward to use too.
So that's sort of what I've found so far in how to sort of set up and prep my Kodi library.
I don't know if anybody in the Mumble Room has tips for managing Kodi.
And just to give you a picture here, I have been attempting to sort of move stuff in to
see what just works without having to just sort of manage it.
And it's pretty hit and miss so far.
So it hasn't been perfect.
I think one of the things that I want to sort of transition to is talking about some of
the backend solutions you can use here.
The ones that I've gotten feedback on are obviously MB backend for Kodi and Plex backend
for Kodi.
Wes, have you messed with the MB backend for Kodi?
And what's the advantage?
What's the reason?
Why would I do that?
Not just use Kodi's built-in database?
Well, I used it to share my MB library with my parents.
So I installed Kodi on a NUC at their house and VPNed our two networks together.
And then I connected the MB plugin for Kodi with my MB server.
And so I could then have local media there for them if they want, but like the NUC had
a limited hard drive space, right?
So then anything at my house just looked like it was right in the Kodi database.
They could play it.
It was transparent to them.
So for me, it seems like the advantages of using MB on the backend or Plex would be that
I can let MB and Plex scan the media, manage that, set up the libraries.
You also get the web interface to go in and correct mistakes or watch it and stream it
myself, which is a big deal.
And I can then sync watch status across my Kodi instances.
Does that work okay?
It did seem to.
I made multiple users.
There was a little bit of an issue, I think, with how you do it.
And I think if you want to have multiple users, there was kind of some workarounds you had
to do because I think by default, it syncs it into the info files, but there are some
options there.
Interesting.
So that's...
MB is definitely...
And the nice thing is...
Just with how smoothly it integrated and if you have a good link to your MB backend, playback
was seamless.
So the other one I'm considering a lot since I have an existing Plex database, but I probably
would not...
I'm probably not going to go this route.
But one that I am looking at and it was pretty, pretty strongly recommended in the subreddit
after last this weekend is Plex Kodi Connect, PKC.
It combines the best front-end media player Kodi with the best multimedia backend server
Plex.
And I do have like a lifetime Plex pass or something like that.
So that's also...
Well, isn't the backend of Plex open source?
It's the front-end that is closed source?
Oh.
So that would be nice.
I'm not sure if that's still the case, but at one time, wasn't that?
The front-end and the backend are no longer open source.
The front-end used to be open source and they decided to...
Whack that.
Basically hire someone to make it closed.
Now the Plex backend for Kodi supports movie and TV shows and pictures and music.
It automatically downloads the artwork.
It does all the stuff that you'd expect including the transcoding and the streaming.
There's a few issues like when you toggle the view state of an item, you have to resync...
Kodi has to rescan the library before it sees that change on another Kodi box.
But it seems like it's sort of the best if you're familiar with Plex, you get the management
of Plex that does seem to have pretty good metadata matching, at least in my experience
so far, at least for how I have my files named, with the Kodi front-end.
So that's something else I'm chewing on.
If anybody out there has tried it, I'd love to hear your feedback, linuxactionshow.reddit.com
and let me know.
Mr. Tonnell, or Dr. Tonnell over there, you're developing Kodi add-ons and things for Kodi.
You must have a decent Kodi setup.
Can you describe it a little bit?
How do you have it?
Are you just Samba server shares?
Are you accessing local files?
What's been your tried and true method to keep it working?
Yeah, basically a Samba server.
Here's one of the nice things.
The Plex Media and I think MB server backends support swapping out local file paths if you
turn it on.
So you can turn on, when you click a file, instead of using the Plex HTTP path to the
file, you can have it use your Samba share in the background.
So it'll do a file that way, which is really nice and fast.
So that's sort of cool, too.
I use Samba for the storing of the thing, but I use Raspberry Pi to push it to the server.
So it'll open a leg on Raspberry Pi.
Oh, that's great.
There's also this thing, there's this adapter called the Flirrk, and that is so awesome.
What is the Flirrk?
It's a little dongle that gives you a regular remote, like a TV remote.
Oh, okay.
There, I put it in the RC there.
Will you drop that in the show notes, too, there?
Absolutely.
So here's my really dumb Kodi 101 question.
Is a shared back-end database the only way for me to have... Really, the only thing
I want, truly, is sync to watch status.
I do like the idea of being able to remotely stream files, but that's secondary.
What I really, really want is for the TVs to all see what files have been watched.
So if I'm watching Mr. Robot or Silicon Valley, which are my two shows I only watch, really,
but when I watch those, I want to be able to watch them and have them marked as watched.
Run downstairs, you hit play, and it's the same thing.
And bearing in mind that I'm on both ends, I'm on an Android TV box, it seems like there's
a lot of effort, unless I want the remote streaming capabilities, it seems like there's
a lot of effort just to get sync to watch status across them.
Yeah.
Anyways, so...
I don't use the sync to watch status, so I mean, I just use the... I only have the one
device anyway.
Well, I have multiple devices for testing of making the multi-device work, but I only
have one that I care about, so I couldn't really help with that one.
The other nice thing having a central back end would be if Kodi misidentifies something,
I fix it in one spot.
Yes, that's true.
That is nice, too.
Yeah, I've played with MB, and so far I like MB for the functionality, what you're talking
about.
I haven't rolled it out in a big scale or anything, because I don't need it, but I have
played with it, and it seems to work as advertised.
Yeah.
Yeah, I'll second that.
My Kodi on Raspberry Pi 3 plus an MB server back end, and I was even able to stream 720p,
or have MB downsampled to 720p, and stream to a Raspberry Pi box at my dad's house 300
miles away over my Comcast internet with a 10 megabit upload.
Hey, you know, that's pretty slick.
From a Raspberry Pi?
Yeah, I love it.
I'm really leaning...
There's so many options.
There's so many options.
It's awesome.
The other thing it looks like with the MB back end, or to do the MB back end, and Wes,
maybe you could tell me if I'm wrong, but it looks like all they really have to do,
there's already an existing add-on.
Yeah, you just install the add-on, configure it to point to your server.
Do I have... If I just go in Kodi, is it in the main list right there?
I believe so.
And then you just have...
It should be in the main list.
It's also created by the MB team.
Yeah, exactly.
And that is also another reason why I really like that long term, and it gives you a GUI
where you put in the MB server info and stuff like that right there.
And so I think when I'm working from an Android TV set top box, I don't feel like... I hate
Android's file system.
I don't want to dig around on that.
Exactly.
It's a mess.
So that's kind of appealing.
Plus, MB is open source through and through, and it seems like that's a better match with
an open source media server.
And I think the MB back end also supports swapping out the local file paths, so I could
use my Samba shares.
Yeah, totally.
I'm getting really excited.
It's been a long time since I've reevaluated how I do this.
I set this up.
It's kind of a big decision, not because it's that important, but just because you really
aren't going to come back to it for a long time if it's working.
So get it right.
There's that.
Once you set it up, you don't want to mess with it.
And two, I am not mature enough as an adult to be over that embarrassment that I feel
when... So this happened this weekend.
So this weekend, we were in Leavenworth, Washington with no internet connection.
And we have Plex on a set top box in the bedroom, and we have Plex on a set top box in the living
room of Lady Tubes.
I use these terms loosely.
And the living room, Nvidia Shield, has a Plex media server locally running on it.
That's how I currently do this at home.
And without an internet connection, the Plex front end in the bedroom can't just go out
and make the roundabout connection and play the local file.
I don't know why.
It's supposed to.
It is supposed to.
But it wouldn't.
That's really annoying.
And so there we are.
And so I'm like, okay, let's watch the movie.
But this is where Noah's voice is in the back of your head, and you're like, ugh.
So then I'm like, okay.
From now on, I'm just going to set this up, and I'm going to do local file paths, and
I'm done with this.
Totally.
So I think that's going to seal the deal on Envy, and then you just not have to worry
about it.
Because when I do watch TV a couple of times a week, it's like my sort of unwind, relax.
I do it when I'm totally worn out, and there's nothing else more productive I'd be doing
anyways.
I'm like, all right.
Time to allow myself a little chill out time.
Exactly.
And to get frustrated when that thing just sits there and spins and spins and spins on
the screen.
It's like, okay.
So the other nice part about using Envy or Plex is you also then get Chromecast support
if you are somewhere where you're like, well, I really want to do this, but I don't have
my Kodi set up with me.
But you have a Chromecast.
Boom.
Yeah.
Hmm.
I'm excited to set this all up again.
It's been a long time.
And it makes my-
Actually-
Yeah, go ahead.
Sorry about that.
I'm actually looking at the Envy's plug-ins, and it actually has an Envy Kodi Sync Kuli
plug-in built in.
Yeah.
You can just install it.
Yep.
It goes right to it.
Yeah, I know.
It looks really straightforward.
It looks like-
And then you're using two great open source projects together.
Yeah.
So it's just I have-
The only thing that's-
The only hesitation I have is I have had really great experience with Plex.
I have a Plex Pass, and I have friends that I'm sharing my Plex libraries with already.
And they're pretty good.
I mean, for being partially proprietary, they're pretty good.
I mean, they employ that MPV developer.
That's true.
I mean, they seem like good citizens.
Yeah.
And they have kicked up some upstream code.
So that's-
Yeah.
That is-
But they're not Envy, though.
But they're not Envy.
Right.
We live in interesting times, Chris.
Yeah.
I know.
I know it doesn't-
For me, I'm not trying-
This is not some big problem I'm trying to solve.
It's a fun challenge to get to relook at my home storage and now try to do it in a way
that's mobile and low power.
You get to play architect, sysadmin.
All these things.
You try to do it in a way that's going to be like long-lasting, sustainable, low maintenance.
Low maintenance.
Yes.
And that's the trick.
And that's the perfect trifecta if you can pull it off.
And that's exactly what you want for your home media system.
And the thing that I think that really has me fired up about it is just spending a couple
of months in Kodi using local files on the NVIDIA Shield, I have just grown such a new
appreciation for this open source project that that is-
It's been going for so long and it's very polished.
And it's like, I really respect some of the decisions they've made recently because I
think they're really following some interesting trends and there's more and more better hardware
out there all the time.
Yes.
And then it feels like if this is something I can really get my head around, then down
the road I can start experimenting with Raspberry Pis running.
Exactly.
Yeah.
And then it's like-
Especially with all those things Wimpy was telling us about compiling with better video
support.
Yeah, exactly.
And I think what makes me think about that is it's a really easy, sustainable, long-term
way when like a family member wants something like this after they check out.
Add them right into your network.
Yes, exactly.
So it could be really nice and it could be a really fun, sustainable home project.
So I'll give you guys an update when I actually put it all together.
I'm going to start experimenting with stuff over the next few weeks and then figure out
how I'm doing the backend storage.
And then we'll actually probably have to figure that out sooner than later, really.
And then I got to rename all the media.
But it's a good problem.
It's a good problem to have.
I'm looking forward to it.
And we have links to all bunch of stuff in the show notes if you guys want to check it
out.
And if you have any experience in this area, I would love to hear it.
LinuxActionShow.reddit.com.
Go chime in.
Go chime in.
There's never too many cooks in this kitchen.
No, I've been getting mixed responses, but I've been getting mixed responses.
Some people are, yeah.
But a lot of folks have been very helpful.
So it's really cool.
And it's pretty exciting.
Be all end all, we're very excited about all these open source projects.
It's neat to rediscover and re-embrace something that I've observed but haven't really fully
dived into for a long time.
Right, exactly.
That's sort of a fun aspect of it as well.
Cool it is.
Yeah, yeah.
All right, that brings us to the end of at least the official part of this week's show.
Episode 156 wraps up.
We love your feedback, your responses, your topic ideas at LinuxActionShow.reddit.com.
Your feedback also is welcome at jupyterbroadcasting.com slash contact.
And a huge part of this show is our virtual log and our live chat room.
Find out our lifetimes at jupyterbroadcasting.com slash calendar.
And then just head over to jblive.tv during that lifetime, which is 2 p.m. Pacific.
And hang out in the chat room, our do-bag mumble, and get the mumble server info.
Just join us any way you can.
Absolutely.
Man, I can't wait till next week.
See you right back here next Tuesday.
You know, in some ways, I feel like the whole media center topic has been done over and
over and over again.
But in other ways, I feel like it's sort of re-energized in the sense that there is cooler
hardware available than we've ever had.
This way, like the stuff is getting, the embedded stuff is getting powerful enough to actually
do this.
I feel like ARM's coming up.
Intel's getting cheaper and smaller.
It's like there's a lot of those middle range devices.
And on the back end, like hard drives are getting big for cheap.
I think, what is it, Seagate now has a 10 terabyte hard drive you can buy.
And which means, what that really means is their 8 terabyte hard drives are now completely
reasonable in price.
Yes, exactly, right.
Eight terabytes in a single drive.
You know, you put three of those.
That's a lot of Star Trek.
Woo!
Yeah, exactly.
So there's like this confluence of super well-priced, really powerful front-end hardware.
And an abundance of free software that you can just use it to manage all.
At all levels.
From getting this content automatically off the internet, from backing it up off your
own optical media, to managing it.
And then, on top of it, the seamless integration now with things like YouTube and Torrance
and all this stuff that makes online media at the same level as all the other stuff.
Everything's on the same level playing field.
And Kodi is in a perfect intersection of all that stuff with the hard drive.
It's just, I love it.
I'm really excited about it.
I just linked a super sexy case from the Flirk team.
That is really nice.
Check this out.
I saw that.
I think I saw it.
Maybe linked on the Kodi main site.
Oh, I might have to pick that up.
I can't remember where I saw this.
Yeah, they had a deal, the Flirk and Kodi made a deal to make their own Kodi version
of this.
Okay.
Oh, nice.
Yeah.
Doesn't that look really nice?
Wow.
Like, legitimately, I could see like when Angela's like, okay, I'm ready to replace these Rokus,
I would totally go with this.
See that's perfect because I have that NUC of my parents' house that's also their like
router and it's, you know, it's playing a lot of roles for them, but I can just, I have
a pie sitting around, buy one of these, stick it in their bedroom upstairs.
Now they have both TVs connected to my chair.
You know, I wonder if Noah's going to start working with some of this stuff too.
I know.
Because he does some displays too.
Exactly.
Nice rotten corpse.
Yeah.
Thanks for mentioning that because I'd forgotten about that.
And it's 15 bucks and your money's going to a great deal.
Anytime I feel like you're buying from this ecosystem, that's going to a good cause.
And specifically since Chris mentioned on last that the Nvidia Shield was just so responsive,
I noticed a huge bump upgrading from Raspberry Pi 2 to Raspberry Pi 3 when using Kodi.
Hmm.
Yeah.
I believe that.
I should make mention that on playback, when watching my review of the Shield, Plex actually
started the file right away, but the video file I just happened to chose had like two
seconds of black.
So somebody on YouTube was like, um, hey, and I watched it back and I'm like, oh yeah.
So it actually, the Nvidia Shield is just wicked fast, period.
And I mean that on like every level.
Like Netflix is, obviously that's going to be fast, it's a simple app, but like Borderlands
2 launches instantly.
Wow.
It's really, it's really powerful.
And Noah's box is cheaper and I like that.
And then the Raspberry Pi's are even another route to go.
So who am I to say which one you should go with?
But at each level there's great options.
And I can't even want to build a full PC over here in the studio too, just to have fun with
that.
But you know, I do have that Pi sitting around, so if you want to try it as an end point to
whatever solution you go to, I would be happy to set that up.
Love you, Wes.
What were you going to say, Noah?
I have a Pi B Plus that actually runs Kodi.
It's not the fastest solution, but it does work pretty well, especially if you're only
doing like 720p and lower.
It runs like a champ.
Yeah.
I mean, almost all the TV shows I get are 720p or lower.
North Ranger, were you going to say something, but we kept cutting you off here?
Oh, yeah.
I can't remember if I saw this on the big rundown on last two that some of these Android
TV boxes are really the only ones that you can do reliable 4K streaming yet for people
that are jumping on the 4K TV bandwidth.
That is true.
Yeah.
You know, and I don't have a 4K TV, so I just mentioned it in the specs, but not only does
the Shield support 4K video, but it also supports UHD 4K, and I'll tell you, I am more excited
about UHD 4K than I am 3D because what UHD, basically, if my understanding is correct,
and it might not be, but my understanding is that UHD is essentially HDR 4K video.
So like it's 4K video with HDR exposure.
The spec you want to look for is UHD Plus.
Right.
Yeah.
Okay.
Thanks.
Yeah.
And that, I cannot wait.
It does not compel me, but 4K UHD Plus, yeah, that's got me.
So Chris, what are you thinking for storage hardware, especially in the RV, and aren't
you worried about heat?
Big time.
Yeah, I really am because it's going to be in a dinette booth underneath the booth, closed
up.
I'm already worried about heat with just the cradle point and the Wi-Fi, and I have a cell
booster in there right now.
So I don't know, I have pledged to make it Linux.
That's what I know.
Okay.
Which has eliminated FreeNAS from the running, which is a little disappointing because I
could use the FreeNAS plug-ins to accomplish some of the stuff I want because I don't want
to run more than one device.
Right.
Just because of the power issues.
So these are running on-
It simplifies everything if you just have the one.
All of this stuff is going to be running off an inverter, which also powers my fridge and
two other TVs.
So there's not – I don't know how much overhead this thing has, but this inverter
probably only has like another thousand watts to give.
So I got to make sure that I really – I got to make sure that I am very power conscious
about what I choose.
So whatever I implement, I think I'm going to need the support of – I got to be able
to virtualize.
Yeah, totally.
So I think – so I am really trying not to do a NUC with Linux on it that's just connected
to some disk, but that seems like a possibility to me.
But what I really want to do is I would really like to have something like FreeNAS that is
Linux-based.
But eventually, I'm going to put – I have three booth dinette seats to work with.
So I'm going to spread things out amongst the dinette seats to spread out the heat,
and that is one thing I'll be doing.
And then I want to have a shit ton of storage so I can consolidate all of my media that
I store here at the studio and all of my media that I store at Angela's house, which is
about two terabytes here at the studio and about 12 terabytes at Angela's house.
I want to consolidate all of that into my own file server so I can get off their file
servers.
The studio's file server shouldn't be housing some of my personal media.
So get that off there.
Get it off Angela's house server so that way she can put more of her own stuff on there,
like whatever she wants to watch.
And then I want to have enough left over to run virtual machines and enough left over
to store video content and audio content that I record on the road when I'm, like, doing
rover logs or shows.
I want to have a local backup.
A nice working set that you can have all the time.
Yeah.
And how to do all of that without generating a crap ton of heat or a crap ton of maintenance.
And something that is super reliable because when I'm on the road, I've got a million
things to worry about.
And –
You need it to just work.
Yeah.
So that's my challenge.
Yeah.
Go ahead.
Whack walk.
Whack work.
Whack work.
Whack work.
I like that we have muhahaha in there too.
So that is my goal.
That is where – that is what I'm aiming for.
And I will – whatever I end up – whatever solution I build, I'll probably record it
all as I build it up and set it up and then do an episode of Last About It or something.
So whatever I end up doing, whatever – however I try to solve all these things –
Stay tuned.
Yeah.
Stay tuned and find out.
All right.
I have a little conspiracy bacon to fry that's not really Linux related.
It's actually Apple related.
But it might result in more Linux users.
So –
Hey.
You want to fry a little conspiracy bacon with me?
Yes.
Let's do it.
Mmm.
Smells good in here.
So if you follow any of the Apple blogs or Scuttlebutt or whatever, I mean they're just
all over the internet.
Apple users are belly aching about how old Mac hardware is, right?
It's like super ancient now.
With the exception of like a couple of Mac devices, they basically are – some of the
machines are running three-year-old hardware and they're still charging the same exact
price they did when they shipped it, like the Mac Pro or some of the MacBook line.
And I've been wondering like what are they doing?
Are they crazy?
And then today this new Apple commercial went online.
Have you seen this?
I have not.
It's called iPad Pro, what is a computer?
Now I can't play all of the audio because I'm sure even though it's a commercial I'll
get taken down for playing it.
Well of course, Chris.
And a screen you can touch and even write on.
So the whole ad is the premise around rethink what a computer is.
Don't assume that it's just for content consumption.
This is the new iPad.
Imagine what your computer could do if your computer was an iPad Pro.
So here's my conspiracy.
Are you ready?
Oh yeah.
So Apple is intentionally slowing down the MacBook and the Mac line in general to try
to get their consumer base to switch over.
Rev up on the iPads.
Yeah.
Yeah.
To be like, let's buy iPads instead because they feel like they can't really, you know,
there's not like that Mac business isn't going to go, it's just sort of what it's been
forever.
Yeah.
Do you think that could be what it is?
Could it be the grand Apple conspiracy to get everybody on iPads?
I mean it is their beautiful walled garden environment.
I could see it.
It's up to you to decide, dear audience.
Who knows?
Makes sense to me.
Everyone will have services and iPads and only us weirdo Linux users will be left on
the desktop.
Yeah.
Yeah.
Oh.
Maybe it's better that way.
Then people who want to make desktop apps will have to come to us and we'll by then
we'll have decided on the one true packaging format so it'll be fine.
Oh, we've already decided.
We're going to talk about it in the show today.
Oh great.
Yeah.
We're going to talk about Apple's margins on their A9, A10, and A11, all their in-house
chip sets compared to Intel.
Sure.
Especially since they can build that one chip and use it across three mobile devices.
The margins on that have got to be pretty smart.
