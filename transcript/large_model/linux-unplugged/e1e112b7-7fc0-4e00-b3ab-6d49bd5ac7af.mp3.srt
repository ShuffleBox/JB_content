1
00:00:00,000 --> 00:00:02,220
Running Linux on a toaster, sure, that's cool.

2
00:00:02,220 --> 00:00:07,220
But what about a computer mouse that's a computer mouse?

3
00:00:07,300 --> 00:00:08,140
No, I mean it.

4
00:00:08,140 --> 00:00:09,100
Hey guys, how's it going?

5
00:00:09,100 --> 00:00:10,300
So what you're looking at is something

6
00:00:10,300 --> 00:00:13,340
I ingeniously named the computer mouse.

7
00:00:13,340 --> 00:00:15,140
This is a completely functional computer

8
00:00:15,140 --> 00:00:20,140
inside of a totally 100% completely normal sized mouse.

9
00:00:20,140 --> 00:00:23,180
Basically, I designed a mouse in Fusion 360, printed it out,

10
00:00:23,180 --> 00:00:26,500
and then added a Raspberry Pi Zero, a 1.5 inch screen,

11
00:00:26,500 --> 00:00:28,180
a battery, and a keyboard.

12
00:00:28,180 --> 00:00:29,300
Yeah, he said a screen, Wes.

13
00:00:29,300 --> 00:00:31,460
This mouse has a fold-out screen,

14
00:00:31,460 --> 00:00:32,740
and this thing runs Linux.

15
00:00:32,740 --> 00:00:33,580
How cool is this?

16
00:00:33,580 --> 00:00:36,340
I really think what you're gonna really use this for?

17
00:00:36,340 --> 00:00:37,780
Winning nerd battles.

18
00:00:37,780 --> 00:00:39,700
Sure, you're having a great LAN party.

19
00:00:39,700 --> 00:00:42,580
No one else has a computer inside their computer mouse.

20
00:00:42,580 --> 00:00:43,420
Right, you show up and they're like,

21
00:00:43,420 --> 00:00:44,300
hey, where's your computer?

22
00:00:44,300 --> 00:00:45,860
I'm like, this is my computer.

23
00:00:45,860 --> 00:00:46,820
It runs Linux.

24
00:00:48,260 --> 00:00:53,140
This is Linux Unplugged, episode 284, for January 15th, 2019.

25
00:00:53,140 --> 00:01:07,380
Welcome to Linux Unplugged, it's currently freezing,

26
00:01:07,380 --> 00:01:11,300
it's you-know-what off down in the heart of Tejas.

27
00:01:11,300 --> 00:01:12,260
My name is Chris.

28
00:01:12,260 --> 00:01:13,380
My name is Wes.

29
00:01:13,380 --> 00:01:15,420
Hello, Mr. Payne.

30
00:01:15,420 --> 00:01:17,340
Now, we have a heck of a show.

31
00:01:17,340 --> 00:01:18,740
It's good to be back.

32
00:01:18,740 --> 00:01:21,100
After getting all married up and traveling down to Texas,

33
00:01:21,100 --> 00:01:24,380
we put together a show packed full of community news,

34
00:01:24,380 --> 00:01:28,420
including some really surprising stories this week.

35
00:01:28,420 --> 00:01:30,580
Dalton will stop by from the Ubuntu Touch Project

36
00:01:30,580 --> 00:01:32,500
to tell us about their new release,

37
00:01:32,500 --> 00:01:35,100
and then Neil joins us to explain

38
00:01:35,100 --> 00:01:38,300
and really put into context all of the hubbub going on

39
00:01:38,300 --> 00:01:40,500
around ZFS on Linux,

40
00:01:40,500 --> 00:01:44,540
how the BSDs are rebasing their implementations

41
00:01:44,540 --> 00:01:46,460
on the Linux version,

42
00:01:46,460 --> 00:01:49,660
and the changes the kernel maintainers made this week

43
00:01:49,660 --> 00:01:54,500
to block the ZFS module from working with Linux 5.0.

44
00:01:54,500 --> 00:01:57,460
It's amazing, and there's a lot going on,

45
00:01:57,460 --> 00:01:58,860
and there's a ton to get into.

46
00:01:58,860 --> 00:02:01,420
We'll play that for you in a little bit in the show,

47
00:02:01,420 --> 00:02:04,100
and then, if we don't go too long,

48
00:02:04,100 --> 00:02:06,100
we have a big batch of pics.

49
00:02:06,100 --> 00:02:08,620
I'm gonna tell you about my trip down here a little bit,

50
00:02:08,620 --> 00:02:10,980
and then we'll put it all, wrap it up in a bow,

51
00:02:10,980 --> 00:02:12,020
and send it off to the internet,

52
00:02:12,020 --> 00:02:14,500
but the only thing missing

53
00:02:14,500 --> 00:02:17,020
from what would otherwise be a perfect recipe

54
00:02:17,020 --> 00:02:18,940
would be participation from the audience,

55
00:02:18,940 --> 00:02:20,300
some crazy idea,

56
00:02:20,300 --> 00:02:22,020
where a group of Linux-loving people

57
00:02:22,020 --> 00:02:24,260
could just join an open Mumble server

58
00:02:24,260 --> 00:02:25,900
and participate in our show.

59
00:02:25,900 --> 00:02:27,900
In fact, why don't we even do that?

60
00:02:27,900 --> 00:02:30,740
Time-appropriate greetings, Mumble Room.

61
00:02:30,740 --> 00:02:32,380
Hello. Hello.

62
00:02:32,380 --> 00:02:34,460
Hello, everybody. Hello.

63
00:02:34,460 --> 00:02:35,780
Hello, hello.

64
00:02:35,780 --> 00:02:38,820
Thank you for making it, even on Brexit Day over there,

65
00:02:38,820 --> 00:02:39,660
on Brexit vote day.

66
00:02:39,660 --> 00:02:40,700
Oh, it's always Brexit Day over there.

67
00:02:40,700 --> 00:02:43,460
We promise this is the last time we'll talk about it today.

68
00:02:43,460 --> 00:02:45,300
I don't know about, oh yeah, today, yes.

69
00:02:45,300 --> 00:02:49,460
Oh, Wes, so thank you to you and Joe

70
00:02:49,460 --> 00:02:51,700
for covering the show last week

71
00:02:51,700 --> 00:02:54,100
and talking about Fischel, my favorite shell ever,

72
00:02:54,100 --> 00:02:55,660
as I made clear in the interview.

73
00:02:55,660 --> 00:02:56,980
You sure did.

74
00:02:56,980 --> 00:02:57,820
You guys did great.

75
00:02:57,820 --> 00:02:59,900
I got a lot of good, positive feedback on that,

76
00:02:59,900 --> 00:03:02,860
and I appreciate it because it gave me a chance to,

77
00:03:02,860 --> 00:03:05,140
well, I head down to Texas, you know,

78
00:03:05,140 --> 00:03:07,540
as I said two weeks ago in the RV,

79
00:03:07,540 --> 00:03:10,260
and on day two, we hit some mechanical troubles.

80
00:03:10,260 --> 00:03:12,100
Oh no, of course you did.

81
00:03:12,100 --> 00:03:16,540
Yeah, it was a couple of different issues,

82
00:03:16,540 --> 00:03:18,260
but it all kind of came together

83
00:03:18,260 --> 00:03:22,860
to really cause a series of unfortunate events.

84
00:03:22,860 --> 00:03:23,740
I guess I'll put it that way,

85
00:03:23,740 --> 00:03:27,220
including a popped water heater and all kinds of things.

86
00:03:27,220 --> 00:03:32,220
But we persevered and got to our spot

87
00:03:33,180 --> 00:03:35,180
where we had our marriage ceremony,

88
00:03:35,180 --> 00:03:36,940
and it turned out really, really nice.

89
00:03:36,940 --> 00:03:40,900
We had a great marriage ceremony under the stars,

90
00:03:40,900 --> 00:03:43,500
and then it completed just as the sun rose

91
00:03:43,500 --> 00:03:47,380
in the Tucson desert, and it was right between storms.

92
00:03:47,380 --> 00:03:49,780
Couple of days ahead of time, it had snowed,

93
00:03:49,780 --> 00:03:51,420
and then a couple days after we left,

94
00:03:51,420 --> 00:03:53,620
it was windy and rainy, and we nailed it.

95
00:03:53,620 --> 00:03:55,140
Just perfect weather.

96
00:03:55,140 --> 00:03:56,660
It was wonderful.

97
00:03:56,660 --> 00:03:59,260
Had great cellular connectivity too in the desert.

98
00:03:59,260 --> 00:04:00,900
I had 30 megabits down and like-

99
00:04:00,900 --> 00:04:03,780
Only you would mention that in the same sentences.

100
00:04:03,780 --> 00:04:05,100
Oh yeah, you know, I drove through this desert

101
00:04:05,100 --> 00:04:07,180
on an amazing trip, got married,

102
00:04:07,180 --> 00:04:09,740
and the connectivity was great.

103
00:04:09,740 --> 00:04:10,820
These things matter.

104
00:04:10,820 --> 00:04:13,460
That puts it back on the we'll return to list.

105
00:04:13,460 --> 00:04:14,300
You know what I mean?

106
00:04:14,300 --> 00:04:15,540
Like, if it's got good connectivity,

107
00:04:15,540 --> 00:04:17,060
all right, now it's a contender.

108
00:04:17,060 --> 00:04:18,220
It's a candidate now.

109
00:04:19,260 --> 00:04:20,340
You're right though.

110
00:04:20,340 --> 00:04:21,380
I am such a nerd.

111
00:04:21,380 --> 00:04:23,420
But it meant really good connectivity,

112
00:04:23,420 --> 00:04:24,540
which meant we could keep up to date

113
00:04:24,540 --> 00:04:25,740
with what was going on in the world,

114
00:04:25,740 --> 00:04:26,940
and we could put together a great show today.

115
00:04:26,940 --> 00:04:28,620
So made it down to Texas,

116
00:04:28,620 --> 00:04:31,940
and it's been in the low 20s every night

117
00:04:31,940 --> 00:04:32,780
since I've been here.

118
00:04:32,780 --> 00:04:35,100
So it's been nice and cold.

119
00:04:35,100 --> 00:04:36,500
That's why you go to Texas, right?

120
00:04:36,500 --> 00:04:38,580
For that refreshing winter coldness.

121
00:04:38,580 --> 00:04:41,660
Yes, yeah, it's my luck.

122
00:04:41,660 --> 00:04:42,500
It's my luck.

123
00:04:42,500 --> 00:04:43,460
I was down here earlier this year

124
00:04:43,460 --> 00:04:45,220
when it was the hottest day of the year,

125
00:04:45,220 --> 00:04:48,100
117 degrees in Dallas.

126
00:04:48,100 --> 00:04:50,540
And now it's in the 20s.

127
00:04:50,540 --> 00:04:51,740
During the day, it gets up to the 40s.

128
00:04:51,740 --> 00:04:54,300
But what's fun is there's a huge crew here.

129
00:04:54,300 --> 00:04:56,780
We're doing live streams for a bunch of content releases.

130
00:04:56,780 --> 00:04:57,900
So a bunch of people are in,

131
00:04:57,900 --> 00:05:01,820
and it's just, it's a good atmosphere down here right now.

132
00:05:01,820 --> 00:05:03,980
Lots of, there's lots of temporary desks set up,

133
00:05:03,980 --> 00:05:05,380
and I get to check out everybody's rigs,

134
00:05:05,380 --> 00:05:06,780
which is always a lot of fun.

135
00:05:06,780 --> 00:05:09,220
So I've really enjoyed my time down here so far.

136
00:05:09,220 --> 00:05:10,580
And I'll be down here for a couple of weeks

137
00:05:10,580 --> 00:05:12,340
doing the shows and whatnot.

138
00:05:12,340 --> 00:05:15,580
And so far, enjoying the heck out of it.

139
00:05:15,580 --> 00:05:17,100
It's really cool to have the RV parked

140
00:05:17,100 --> 00:05:18,220
right next to the office,

141
00:05:18,220 --> 00:05:20,900
because I can just, in 30 seconds, I'm working from home.

142
00:05:20,900 --> 00:05:22,860
That is such an easy commute.

143
00:05:22,860 --> 00:05:24,540
Right, and like I need to go to a meeting

144
00:05:24,540 --> 00:05:25,620
or do something in the office,

145
00:05:25,620 --> 00:05:27,540
30 seconds later, I'm in the office.

146
00:05:27,540 --> 00:05:28,660
It's phenomenal.

147
00:05:28,660 --> 00:05:30,500
You've got your own private conference room.

148
00:05:30,500 --> 00:05:32,220
People kill for that kind of space.

149
00:05:32,220 --> 00:05:33,060
I do.

150
00:05:33,060 --> 00:05:34,500
People actually, a couple of times now,

151
00:05:34,500 --> 00:05:37,460
have stopped by the RV just to chill for a bit.

152
00:05:37,460 --> 00:05:40,100
So Lady Jeef is getting a rep for the place to chill.

153
00:05:41,140 --> 00:05:43,940
And anyways, just really loving it and enjoying it a bunch.

154
00:05:43,940 --> 00:05:45,580
So I really appreciate you guys covering the show

155
00:05:45,580 --> 00:05:46,420
while I was gone.

156
00:05:46,420 --> 00:05:48,820
I think it made it just,

157
00:05:48,820 --> 00:05:50,580
gave me just enough time to pull it all off,

158
00:05:50,580 --> 00:05:52,020
especially since we were compressed

159
00:05:52,020 --> 00:05:54,740
with that one lost day due to mechanical issues.

160
00:05:54,740 --> 00:05:56,700
Well, congratulations and welcome back.

161
00:05:56,700 --> 00:05:57,540
Thank you, sir.

162
00:05:57,540 --> 00:05:58,540
But that's not what we're here to talk about today.

163
00:05:58,540 --> 00:06:00,100
Let's get into the community news,

164
00:06:00,100 --> 00:06:03,060
and we're gonna start off the news

165
00:06:03,060 --> 00:06:05,860
with a story about Apple,

166
00:06:05,860 --> 00:06:07,860
which might be the first time we've ever done that

167
00:06:07,860 --> 00:06:09,500
in the history of this show.

168
00:06:09,500 --> 00:06:12,140
But they're releasing a pretty significant

169
00:06:12,140 --> 00:06:14,020
open source project this week

170
00:06:14,020 --> 00:06:15,980
that's caught a lot of attention.

171
00:06:15,980 --> 00:06:18,220
Now, Apple originally acquired a project

172
00:06:18,220 --> 00:06:20,980
called FoundationDB in 2015.

173
00:06:20,980 --> 00:06:24,300
And last April, it announced that it was making

174
00:06:24,300 --> 00:06:26,020
the cloud database open source.

175
00:06:26,020 --> 00:06:27,140
But that's not what we're talking about today.

176
00:06:27,140 --> 00:06:29,100
That was sort of done and, you know,

177
00:06:29,100 --> 00:06:30,900
it's, everybody's moved on.

178
00:06:30,900 --> 00:06:35,380
But things are taking a big leap forward this week

179
00:06:35,380 --> 00:06:37,860
as FoundationDB has announced it's open sourcing

180
00:06:37,860 --> 00:06:40,740
the FoundationDB record layer.

181
00:06:40,740 --> 00:06:43,620
And along with this, Apple is outlining

182
00:06:43,620 --> 00:06:46,380
how they are using their backend services

183
00:06:46,380 --> 00:06:47,660
with this open source software,

184
00:06:47,660 --> 00:06:49,980
which is something they've never done before.

185
00:06:49,980 --> 00:06:52,060
It's the first public confirmation

186
00:06:52,060 --> 00:06:55,500
that Apple is using this open source database

187
00:06:55,500 --> 00:07:00,260
to power file storage on iCloud.

188
00:07:00,260 --> 00:07:02,100
So we're talking about an open source project here

189
00:07:02,100 --> 00:07:05,660
that's being battle tested by millions of iOS

190
00:07:05,660 --> 00:07:08,580
and Mac users that's, the core part of it

191
00:07:08,580 --> 00:07:11,100
was released for free originally.

192
00:07:11,100 --> 00:07:12,780
But now we have this record layer.

193
00:07:12,780 --> 00:07:15,740
And Wes, can you help explain what this record layer is

194
00:07:15,740 --> 00:07:17,820
and maybe even how Apple might be using it?

195
00:07:17,820 --> 00:07:19,420
Yeah, well, okay, so they call their whole,

196
00:07:19,420 --> 00:07:21,900
their backend here cloud kit because,

197
00:07:21,900 --> 00:07:23,700
well, of course they do.

198
00:07:23,700 --> 00:07:25,100
Everything's a kit, Wes.

199
00:07:25,100 --> 00:07:26,180
Everything is a kit.

200
00:07:26,180 --> 00:07:27,460
And well, I mean, you want one for the cloud.

201
00:07:27,460 --> 00:07:29,020
Sure, that makes sense.

202
00:07:29,020 --> 00:07:32,220
The record layer, it's basically their own version

203
00:07:32,220 --> 00:07:35,060
of a traditional record oriented database.

204
00:07:35,060 --> 00:07:37,620
Things like the standard relational SQL databases

205
00:07:37,620 --> 00:07:38,660
you're probably used to,

206
00:07:38,660 --> 00:07:41,820
but built on top of FoundationDB.

207
00:07:41,820 --> 00:07:44,460
And one of the things that's kind of unique to FoundationDB

208
00:07:44,460 --> 00:07:47,660
is it provides something of a low level key value store.

209
00:07:47,660 --> 00:07:49,540
And then they've made it easy to extend.

210
00:07:49,540 --> 00:07:51,900
So FoundationDB is totally separate.

211
00:07:51,900 --> 00:07:52,980
They've added this record layer,

212
00:07:52,980 --> 00:07:54,220
which is actually a Java program

213
00:07:54,220 --> 00:07:56,180
that interfaces with FoundationDB

214
00:07:56,180 --> 00:07:57,940
and adds all these extra features.

215
00:07:57,940 --> 00:08:00,860
So they only have to concentrate on running

216
00:08:00,860 --> 00:08:03,100
all the complicated distributed system part of that.

217
00:08:03,100 --> 00:08:04,780
That's the base FoundationDB.

218
00:08:04,780 --> 00:08:06,580
And now they can add stuff like,

219
00:08:06,580 --> 00:08:08,500
something like a MongoDB

220
00:08:08,500 --> 00:08:10,980
or adding in this case, something like SQL.

221
00:08:10,980 --> 00:08:14,420
Now, the other part of this that is

222
00:08:14,420 --> 00:08:18,900
sort of the elephant in the room is MongoDB and AWS

223
00:08:18,900 --> 00:08:23,900
are at odds right now as Amazon has announced AWS DocumentDB,

224
00:08:24,700 --> 00:08:27,220
which is their own proprietary software

225
00:08:27,220 --> 00:08:31,180
that implements a MongoDB compatible API.

226
00:08:31,180 --> 00:08:32,740
The reason why this matters

227
00:08:32,740 --> 00:08:35,140
is what Amazon can essentially now do

228
00:08:35,140 --> 00:08:37,220
is offer MongoDB as a service,

229
00:08:37,220 --> 00:08:39,380
but it's not MongoDB under the hood,

230
00:08:39,380 --> 00:08:41,380
but it can talk MongoDB,

231
00:08:41,380 --> 00:08:43,940
the version right before they relicensed.

232
00:08:43,940 --> 00:08:48,620
And this is a huge,

233
00:08:48,620 --> 00:08:51,580
huge blow to the MongoDB project

234
00:08:51,580 --> 00:08:54,780
because they sell their own hosted service

235
00:08:54,780 --> 00:08:58,220
with very few customers, unfortunately.

236
00:08:58,220 --> 00:09:00,940
And so then a few days later after that,

237
00:09:00,940 --> 00:09:02,180
Apple makes this announcement.

238
00:09:02,180 --> 00:09:06,420
The timing is pretty coincidental, I guess.

239
00:09:06,420 --> 00:09:07,260
It's interesting too.

240
00:09:07,260 --> 00:09:08,860
I think it kind of compares and contrasts

241
00:09:08,860 --> 00:09:11,580
the different types of open source out there, right?

242
00:09:11,580 --> 00:09:14,780
Mongo has a venture backed company behind it.

243
00:09:14,780 --> 00:09:16,100
They're trying to make open source software.

244
00:09:16,100 --> 00:09:17,260
Yes, which is great,

245
00:09:17,260 --> 00:09:19,420
but also running and making that software

246
00:09:19,420 --> 00:09:21,020
is the core of their business.

247
00:09:21,020 --> 00:09:22,140
Not so with FoundationDB.

248
00:09:22,140 --> 00:09:22,980
Sure, it started that way,

249
00:09:22,980 --> 00:09:25,980
but now it's just an open source thing Apple's using.

250
00:09:25,980 --> 00:09:27,620
Downsides is you don't know,

251
00:09:27,620 --> 00:09:30,140
maybe Apple could pivot databases at any time.

252
00:09:30,140 --> 00:09:32,260
The upside, they're not really relying on it.

253
00:09:32,260 --> 00:09:33,580
This is not how they're making money,

254
00:09:33,580 --> 00:09:35,460
except as an implementation detail.

255
00:09:35,460 --> 00:09:36,740
Really, so in summary, what we have here

256
00:09:36,740 --> 00:09:39,780
is Apple releasing two more open source projects in total.

257
00:09:39,780 --> 00:09:41,660
You have the original FoundationDB

258
00:09:41,660 --> 00:09:43,660
and now this layer on top of it,

259
00:09:43,660 --> 00:09:45,940
which makes it more like a relational database,

260
00:09:45,940 --> 00:09:47,660
which people are very familiar with,

261
00:09:47,660 --> 00:09:51,540
but has the file extensibility and the state support

262
00:09:51,540 --> 00:09:54,460
everything they need for remote mobile apps.

263
00:09:54,460 --> 00:09:56,860
And I wonder if this isn't gonna be pretty successful

264
00:09:56,860 --> 00:09:59,820
because A, it's being used by millions of users already.

265
00:09:59,820 --> 00:10:02,340
B, when you're trying to justify it to the CEO

266
00:10:02,340 --> 00:10:04,780
or whoever you can say, Apple uses it.

267
00:10:04,780 --> 00:10:07,460
And C, it's addressing a real need

268
00:10:07,460 --> 00:10:09,060
that application developers have.

269
00:10:09,060 --> 00:10:10,980
Yeah, I mean, it's got a nice license

270
00:10:10,980 --> 00:10:11,900
and they've clearly learned.

271
00:10:11,900 --> 00:10:13,780
It's a more modern database.

272
00:10:13,780 --> 00:10:15,860
If you go back and look at when it was first,

273
00:10:15,860 --> 00:10:18,380
after they acquired the company and open sourced it,

274
00:10:18,380 --> 00:10:21,140
people are raving about it being open source

275
00:10:21,140 --> 00:10:24,500
just because it has such a new, modern, sophisticated take

276
00:10:24,500 --> 00:10:26,260
on concurrency and transactions.

277
00:10:26,260 --> 00:10:28,100
So you get a lot of nice guarantees

278
00:10:28,100 --> 00:10:29,660
and it's easy to administer.

279
00:10:29,660 --> 00:10:30,740
Yeah, yeah.

280
00:10:32,500 --> 00:10:33,340
That's really all I have.

281
00:10:33,340 --> 00:10:34,660
I don't feel like I need to talk about Apple anymore

282
00:10:34,660 --> 00:10:36,180
in the show, I think that's probably good.

283
00:10:36,180 --> 00:10:37,740
Let's move on, what do you say?

284
00:10:37,740 --> 00:10:40,540
And let's talk about the future of GNOME MPV,

285
00:10:40,540 --> 00:10:44,020
which is my favorite, favorite,

286
00:10:44,020 --> 00:10:47,300
favorite by a mile video player for desktop Linux.

287
00:10:47,300 --> 00:10:50,500
I mean, LVLC, you're great, I love you,

288
00:10:50,500 --> 00:10:53,180
but nothing beats MPV and GNOME MPV was a way

289
00:10:53,180 --> 00:10:55,060
to wrap it up in a nice minimal GUI.

290
00:10:56,500 --> 00:10:58,460
But I'm not so sure about this new name.

291
00:10:58,460 --> 00:11:01,180
Yeah, well, okay, so do you agree with this?

292
00:11:01,180 --> 00:11:04,180
Good app names should really be a single noun

293
00:11:04,180 --> 00:11:05,740
that's related to the app's domain.

294
00:11:05,740 --> 00:11:08,260
Something like fragments for a torrent app

295
00:11:08,260 --> 00:11:10,460
or peak for a screen recorder.

296
00:11:10,460 --> 00:11:13,540
Cause if you do, you're gonna like this new name.

297
00:11:13,540 --> 00:11:15,300
No, I mean, I still agree with all that.

298
00:11:15,300 --> 00:11:16,540
Don't really like the name.

299
00:11:16,540 --> 00:11:20,780
Okay, I'm gonna try to pronounce it, you ready?

300
00:11:20,780 --> 00:11:22,580
What do you, do you think I should,

301
00:11:22,580 --> 00:11:23,540
let's see, we should all take bets.

302
00:11:23,540 --> 00:11:26,540
Everybody bet if I'm gonna get this right.

303
00:11:26,540 --> 00:11:27,700
Celluloid.

304
00:11:27,700 --> 00:11:28,740
Yeah.

305
00:11:28,740 --> 00:11:29,580
I got it?

306
00:11:29,580 --> 00:11:30,420
Yep, I think that's good enough.

307
00:11:30,420 --> 00:11:31,260
You're telling me I got it?

308
00:11:31,260 --> 00:11:32,100
Yeah, it's celluloid.

309
00:11:32,100 --> 00:11:34,500
Oh, I got it, I can't believe it, I can't believe it.

310
00:11:35,820 --> 00:11:37,100
I don't know, man, I guess for some reason

311
00:11:37,100 --> 00:11:38,860
it makes me think of cellulite,

312
00:11:38,860 --> 00:11:40,380
which is not what I wanna think of

313
00:11:40,380 --> 00:11:42,780
when I'm thinking of watching a video.

314
00:11:42,780 --> 00:11:47,420
But, NomeMPV is clunky AF.

315
00:11:47,420 --> 00:11:51,660
And I do like the one word thing.

316
00:11:51,660 --> 00:11:53,100
And at least I can pronounce it,

317
00:11:53,100 --> 00:11:54,220
so it's got that going for it.

318
00:11:54,220 --> 00:11:55,060
Yeah, right.

319
00:11:55,060 --> 00:11:58,060
And it's also the name of the transparent flammable

320
00:11:58,060 --> 00:12:00,980
plastic made in sheets from camera four

321
00:12:00,980 --> 00:12:05,980
and nitrocellulose and formerly used in filmmaking.

322
00:12:06,820 --> 00:12:07,900
Yeah, right, so if you were,

323
00:12:07,900 --> 00:12:11,340
if we were making a video podcast in the film era,

324
00:12:11,340 --> 00:12:13,820
we would know all about celluloid.

325
00:12:13,820 --> 00:12:16,220
Yeah, yeah, I've heard of like celluloid cylinders

326
00:12:16,220 --> 00:12:18,940
and I've heard the term used before.

327
00:12:18,940 --> 00:12:21,220
So this is gonna happen, it's like the switch-o,

328
00:12:21,220 --> 00:12:25,420
will happen around the time of Nome 3.32's release in March.

329
00:12:25,420 --> 00:12:28,100
So if you just got the most recent version,

330
00:12:28,100 --> 00:12:31,460
or I should say the latest version, which was 0.15,

331
00:12:31,460 --> 00:12:32,980
then it's still using NomeMPV,

332
00:12:32,980 --> 00:12:33,900
you're not gonna see this yet.

333
00:12:33,900 --> 00:12:34,740
What do you think?

334
00:12:34,740 --> 00:12:36,220
So they also, they've got a new icon too,

335
00:12:36,220 --> 00:12:37,980
and that does sort of fit with the name

336
00:12:37,980 --> 00:12:39,540
because it looks like a piece of film.

337
00:12:39,540 --> 00:12:41,340
I say we go to the mumble room.

338
00:12:41,340 --> 00:12:43,060
What do you guys think of this name, celluloid?

339
00:12:43,060 --> 00:12:44,820
Is it ditch it or keep it?

340
00:12:44,820 --> 00:12:46,140
It's a keep it for me.

341
00:12:46,140 --> 00:12:47,860
Yeah, how come?

342
00:12:47,860 --> 00:12:50,260
It's a somewhat memorable name

343
00:12:50,260 --> 00:12:53,060
and it's pretty easy to identify.

344
00:12:53,060 --> 00:12:56,060
And the new icon is pretty stand out

345
00:12:56,060 --> 00:12:57,460
from video player icons.

346
00:12:57,460 --> 00:12:59,700
Yes, the new icon is the bee's knees.

347
00:12:59,700 --> 00:13:01,980
That is really nice, you're right.

348
00:13:01,980 --> 00:13:04,380
They should get credit for a great icon.

349
00:13:04,380 --> 00:13:07,380
Okay, the mumble room in its entirety.

350
00:13:07,380 --> 00:13:08,780
No, I'm kidding, actually we've got a good show

351
00:13:08,780 --> 00:13:10,420
and we've got Conan in there,

352
00:13:10,420 --> 00:13:12,980
we've got MiniMech, Sean, TechMav, Tyler,

353
00:13:12,980 --> 00:13:15,260
Universal Super Box, AKA Dalton,

354
00:13:15,260 --> 00:13:17,260
all hanging out in there today.

355
00:13:17,260 --> 00:13:19,540
And I'm gonna roll with it.

356
00:13:19,540 --> 00:13:20,900
I bet you it'll grow on me.

357
00:13:20,900 --> 00:13:23,660
I thought iPad was the dumbest name I'd ever heard

358
00:13:23,660 --> 00:13:25,340
when they first, and now people drop out,

359
00:13:25,340 --> 00:13:26,180
it doesn't even affect me.

360
00:13:26,180 --> 00:13:27,020
It's funny how that, you know, it has to,

361
00:13:27,020 --> 00:13:28,740
it's kinda like music, once it sinks in,

362
00:13:28,740 --> 00:13:29,980
you have a different perspective on it.

363
00:13:29,980 --> 00:13:31,500
Yeah, yeah.

364
00:13:31,500 --> 00:13:34,180
So Joe and I have been grousing

365
00:13:34,180 --> 00:13:35,780
on Linux Action News recently

366
00:13:35,780 --> 00:13:40,180
that Chrome OS is going to become the de facto desktop Linux.

367
00:13:40,180 --> 00:13:43,180
Like the one that average consumers use,

368
00:13:43,180 --> 00:13:45,940
the one that's gonna be used by millions of users,

369
00:13:45,940 --> 00:13:48,460
the one that's sold in Best Buy and electronic stores,

370
00:13:48,460 --> 00:13:50,700
it's Chrome OS, right, it's Chrome OS.

371
00:13:50,700 --> 00:13:54,140
And we all probably should sit with that for a bit

372
00:13:54,140 --> 00:13:55,660
and come to our own conclusions.

373
00:13:55,660 --> 00:13:59,780
I waffle constantly if that's a good thing or a bad thing.

374
00:13:59,780 --> 00:14:04,780
But I am really happy to report on the steady progress

375
00:14:05,420 --> 00:14:09,340
of Linux application integration into Chrome OS.

376
00:14:09,340 --> 00:14:13,260
And this week, thanks to some sleuthing,

377
00:14:13,260 --> 00:14:16,260
based on a code commit uncovered by Chrome Story,

378
00:14:16,260 --> 00:14:19,260
users of the Linux beta for Chromebooks

379
00:14:19,260 --> 00:14:23,220
will soon be able to search and install Linux apps

380
00:14:24,220 --> 00:14:27,300
from the Chrome OS launcher itself.

381
00:14:27,300 --> 00:14:28,260
That's a big deal.

382
00:14:28,260 --> 00:14:30,740
Yeah, right, I mean, it reads, add app search

383
00:14:30,740 --> 00:14:32,300
into the Chrome OS app launcher

384
00:14:32,300 --> 00:14:35,220
so that uninstalled Linux packages and apps

385
00:14:35,220 --> 00:14:38,100
can be searched for and installed via the app launcher.

386
00:14:38,100 --> 00:14:40,740
I mean, that's a pretty plain purpose.

387
00:14:40,740 --> 00:14:42,460
And it's a nice workflow, too.

388
00:14:42,460 --> 00:14:44,820
Yeah, not only is it convenient,

389
00:14:44,820 --> 00:14:46,740
but it actually is going to put it in front of the face

390
00:14:46,740 --> 00:14:49,860
of actual real users.

391
00:14:49,860 --> 00:14:51,420
That's, to me, the biggest thing

392
00:14:51,420 --> 00:14:53,300
is because it's in the launcher,

393
00:14:53,300 --> 00:14:56,020
they don't have to go to a command prompt,

394
00:14:56,020 --> 00:14:58,300
they don't have to go through all these different

395
00:14:58,300 --> 00:14:59,700
less-treaded paths.

396
00:14:59,700 --> 00:15:03,540
They are just using something they use all the time.

397
00:15:03,540 --> 00:15:04,860
And we may even get to a point

398
00:15:04,860 --> 00:15:07,340
where on some Chromebooks down the road,

399
00:15:07,340 --> 00:15:09,220
Linux supports turn on by default,

400
00:15:09,220 --> 00:15:11,100
that basic stuff's already installed.

401
00:15:11,100 --> 00:15:14,780
I mean, this could legitimately one day

402
00:15:14,780 --> 00:15:18,500
lead to the adoption of more open source desktop applications

403
00:15:18,500 --> 00:15:21,780
which could, hopefully,

404
00:15:23,460 --> 00:15:24,740
mean an increase in bug reports,

405
00:15:24,740 --> 00:15:26,780
an increase in development time, an increase in funding,

406
00:15:26,780 --> 00:15:28,300
it could mean an increase in quality,

407
00:15:28,300 --> 00:15:29,300
but these are all maybes.

408
00:15:29,300 --> 00:15:30,860
But with a broader market share, right?

409
00:15:30,860 --> 00:15:33,420
Exposure in a way where you don't have to go

410
00:15:33,420 --> 00:15:34,980
install your own distribution of Linux

411
00:15:34,980 --> 00:15:37,500
or even know what that is, but you can still run GIMP.

412
00:15:37,500 --> 00:15:40,220
Yeah, and people have asked me, like, why do you care, Chris?

413
00:15:40,220 --> 00:15:44,180
Why do you care if Adobe Premier comes to Linux?

414
00:15:44,180 --> 00:15:46,420
And it's like this, it may not be something I would use,

415
00:15:46,420 --> 00:15:48,180
maybe it would be, I'd have to evaluate it.

416
00:15:48,180 --> 00:15:50,220
And it's not that I want all this commercial software

417
00:15:50,220 --> 00:15:52,020
coming to Linux, I think we need it all.

418
00:15:52,020 --> 00:15:53,340
And I think we need all of it here

419
00:15:53,340 --> 00:15:54,820
because we need more users.

420
00:15:54,820 --> 00:15:56,020
We simply need more users

421
00:15:56,020 --> 00:15:57,700
because we need more representation

422
00:15:57,700 --> 00:15:59,260
and we need better software.

423
00:15:59,260 --> 00:16:00,620
And the only way we're gonna get there

424
00:16:00,620 --> 00:16:03,180
is if there's software to consume by users

425
00:16:03,180 --> 00:16:05,620
and if there's not users to consume that software,

426
00:16:05,620 --> 00:16:06,460
we won't get there.

427
00:16:06,460 --> 00:16:09,500
So we've been stuck in this chicken or the egg situation

428
00:16:09,500 --> 00:16:12,660
now for years and years, it just hasn't gone anywhere.

429
00:16:12,660 --> 00:16:14,660
And now, maybe,

430
00:16:15,660 --> 00:16:18,900
maybe Google is shifting that a bit.

431
00:16:18,900 --> 00:16:21,180
And they're gonna take a platform

432
00:16:21,180 --> 00:16:24,420
that has a ton of users and they're gonna turn this on

433
00:16:24,420 --> 00:16:26,260
and now all of a sudden there'll be a whole new audience

434
00:16:26,260 --> 00:16:27,420
for these applications.

435
00:16:27,420 --> 00:16:29,500
So, Minimac, I wanna get your take on this.

436
00:16:29,500 --> 00:16:31,340
Good news, this Linux adoption,

437
00:16:31,340 --> 00:16:32,940
and now this continued integration

438
00:16:32,940 --> 00:16:34,860
further and further of Linux applications?

439
00:16:34,860 --> 00:16:36,540
Very good news, but the problem is

440
00:16:36,540 --> 00:16:39,340
they don't support older Chromebooks.

441
00:16:39,340 --> 00:16:41,060
That's the major problem.

442
00:16:41,060 --> 00:16:43,820
I have this Intel Acer C720,

443
00:16:43,820 --> 00:16:47,580
which is perfectly capable of running Linux and everything.

444
00:16:47,580 --> 00:16:51,780
But on Chromebook, they have not yet opened

445
00:16:51,780 --> 00:16:55,020
these new features like Android apps, Linux apps,

446
00:16:55,020 --> 00:16:57,860
and Chromebook, the hardware is perfectly capable

447
00:16:57,860 --> 00:17:00,420
of doing that, of handling that.

448
00:17:00,420 --> 00:17:01,500
Good point.

449
00:17:01,500 --> 00:17:03,020
Yeah, it's not like these applications,

450
00:17:03,020 --> 00:17:06,060
you know what, in probably almost all cases,

451
00:17:06,060 --> 00:17:08,460
most of these applications that users would be using

452
00:17:08,460 --> 00:17:10,780
are lighter weight than its equivalent web app

453
00:17:10,780 --> 00:17:12,900
running in a big old browser like Chrome.

454
00:17:12,900 --> 00:17:15,260
Probably, yeah, definitely.

455
00:17:15,260 --> 00:17:16,500
That's interesting.

456
00:17:16,500 --> 00:17:19,980
So Dalton, do you think we're seeing a beginning

457
00:17:19,980 --> 00:17:23,940
of a path here of Fuchsia for the mobile

458
00:17:23,940 --> 00:17:26,380
and Chrome OS for the desktop?

459
00:17:26,380 --> 00:17:29,620
So what I think back to here is Google's gVisor

460
00:17:29,620 --> 00:17:32,540
that we talked about, oh, that was a while ago,

461
00:17:32,540 --> 00:17:35,660
which is their container runtime

462
00:17:35,660 --> 00:17:39,580
that re-implements all of the Linux kernel's interfaces.

463
00:17:40,580 --> 00:17:42,580
If they had that running on top of Fuchsia,

464
00:17:42,580 --> 00:17:45,380
then they could use their Apache-licensed kernel

465
00:17:45,380 --> 00:17:47,740
and they wouldn't even need Linux at that point.

466
00:17:49,300 --> 00:17:52,580
Jeez, Dalton, way to bring it down, man.

467
00:17:52,580 --> 00:17:53,820
Good point, though.

468
00:17:55,220 --> 00:17:58,100
You would end up with the core that they can have

469
00:17:58,100 --> 00:18:00,740
and with gVisor too, right, they only will implement

470
00:18:00,740 --> 00:18:02,340
the stuff that they know they can contain

471
00:18:02,340 --> 00:18:04,380
and actually run so they don't have to be exposed

472
00:18:04,380 --> 00:18:05,700
to that whole API surface.

473
00:18:05,700 --> 00:18:08,780
Right, it's a safe user experience, they'll say.

474
00:18:08,780 --> 00:18:10,820
And kind of just really quickly,

475
00:18:10,820 --> 00:18:12,500
just to tangentially mention this,

476
00:18:12,500 --> 00:18:15,300
we did cover this in more detail on Linux Action News.

477
00:18:15,300 --> 00:18:16,780
I think 88.

478
00:18:16,780 --> 00:18:20,060
But Chrome OS is also going to start letting

479
00:18:20,060 --> 00:18:23,220
managed company Chromebooks choose their own Linux distro

480
00:18:23,220 --> 00:18:25,060
for this layer.

481
00:18:25,060 --> 00:18:26,660
Right now, I think we've talked about it before,

482
00:18:26,660 --> 00:18:29,700
it's like a Debian derivative, essentially it's Debian.

483
00:18:29,700 --> 00:18:32,660
But now, you get to specify a URL

484
00:18:33,660 --> 00:18:35,740
of where your ISO image is at.

485
00:18:35,740 --> 00:18:39,380
And when the user chooses the option to enable Linux support,

486
00:18:39,380 --> 00:18:42,580
it'll pull it down from that customly specified URL

487
00:18:42,580 --> 00:18:44,540
and install the version or the image of Linux

488
00:18:44,540 --> 00:18:45,380
that you've set up.

489
00:18:45,380 --> 00:18:46,860
Well, that's the rub, right Chris?

490
00:18:46,860 --> 00:18:48,740
Because maybe it's you, but really,

491
00:18:48,740 --> 00:18:52,020
it's the device administrators, whoever they might be.

492
00:18:52,020 --> 00:18:53,860
Yeah, the IT department.

493
00:18:53,860 --> 00:18:55,500
Because I don't even, I think people are digging around

494
00:18:55,500 --> 00:18:57,180
in the source code and they didn't see a way

495
00:18:57,180 --> 00:18:58,700
for individuals to turn this on yet.

496
00:18:58,700 --> 00:19:01,940
Yeah, it really seems targeted at the enterprise use case,

497
00:19:01,940 --> 00:19:03,700
which does make sense, Chrome OS has made

498
00:19:03,700 --> 00:19:05,100
huge inroads there.

499
00:19:05,100 --> 00:19:07,020
Yeah, and I could definitely see certain enterprises

500
00:19:07,020 --> 00:19:08,820
that would want their own customer environment

501
00:19:08,820 --> 00:19:11,020
so that way, maybe their own internal development team

502
00:19:11,020 --> 00:19:12,900
could be developing on that environment,

503
00:19:12,900 --> 00:19:15,700
which then gets uploaded to their production servers.

504
00:19:15,700 --> 00:19:17,940
So, I think it could be a hit.

505
00:19:17,940 --> 00:19:19,100
I don't know if I buy the premise,

506
00:19:19,100 --> 00:19:21,620
but if the premise is true, I think it could be a hit.

507
00:19:21,620 --> 00:19:23,780
And you've got to assume that once the underlying tech

508
00:19:23,780 --> 00:19:26,860
is there, someone somewhere is gonna release a tool

509
00:19:26,860 --> 00:19:27,940
so you can do it yourself.

510
00:19:27,940 --> 00:19:30,620
That's what I'm counting on.

511
00:19:30,620 --> 00:19:32,780
When that tool comes out, I'll probably grab a Chromebook.

512
00:19:32,780 --> 00:19:34,580
I think I'm gonna do it, I think I'm gonna do it.

513
00:19:34,580 --> 00:19:37,940
Unless, unless those chaps over at UbiPorts

514
00:19:37,940 --> 00:19:41,140
can get me a tablet run in Ubuntu Touch that just sings

515
00:19:41,140 --> 00:19:43,020
and they're getting closer and closer

516
00:19:43,020 --> 00:19:44,500
with every dang release.

517
00:19:44,500 --> 00:19:46,220
And Dalton's there in the Mumble Room

518
00:19:46,220 --> 00:19:50,540
to talk about OTA 6, which is now shipping.

519
00:19:50,540 --> 00:19:51,460
Oh, wait, I'm sorry.

520
00:19:51,460 --> 00:19:52,580
No, I'm sorry, OTA 7.

521
00:19:52,580 --> 00:19:53,940
OTA 6 was the one that came out last month.

522
00:19:53,940 --> 00:19:55,500
Holy smokes, Dalton.

523
00:19:55,500 --> 00:19:58,140
You guys are really hitting that monthly stride now.

524
00:19:58,140 --> 00:19:59,100
We did.

525
00:19:59,100 --> 00:20:01,540
That's one of the big stories for this release

526
00:20:01,540 --> 00:20:04,260
where we finally got our release cadence down.

527
00:20:04,260 --> 00:20:08,500
So, we've got proper testing and a lot of work done

528
00:20:08,500 --> 00:20:09,660
in between the two releases,

529
00:20:09,660 --> 00:20:12,740
but we're still hitting that one month cycle.

530
00:20:12,740 --> 00:20:13,860
Congratulations.

531
00:20:13,860 --> 00:20:15,540
That probably took a lot of work as a project

532
00:20:15,540 --> 00:20:18,860
to get your heads around that and get that actually working.

533
00:20:18,860 --> 00:20:21,100
So, that's a big accomplishment in itself.

534
00:20:21,100 --> 00:20:23,820
But what are some of the new goodies in OTA 7

535
00:20:23,820 --> 00:20:26,020
that you're the most excited about?

536
00:20:26,020 --> 00:20:30,260
OTA 7's big headline feature for the users

537
00:20:30,260 --> 00:20:32,460
is keyboard theming.

538
00:20:32,460 --> 00:20:34,300
So, that might sound like a small deal,

539
00:20:34,300 --> 00:20:38,580
but someone in our community contributed the support.

540
00:20:38,580 --> 00:20:41,620
So, now you can change the colors of your keyboard.

541
00:20:41,620 --> 00:20:43,300
So, instead of being blinded

542
00:20:43,300 --> 00:20:45,700
by this really bright white keyboard,

543
00:20:45,700 --> 00:20:48,140
you can have a darker experience.

544
00:20:48,140 --> 00:20:51,860
And there are screenshots of this in our blog post,

545
00:20:51,860 --> 00:20:54,700
which you can find at u reports.com slash blog.

546
00:20:54,700 --> 00:20:55,540
Excellent, yeah, nice.

547
00:20:55,540 --> 00:20:57,580
So, when you're using the phone late at night,

548
00:20:57,580 --> 00:21:00,460
you don't get that blast of light in the face.

549
00:21:00,460 --> 00:21:02,380
It looks like Morph has gotten some nice improvements too.

550
00:21:02,380 --> 00:21:04,460
It's a steady improvement from now that Morph is in.

551
00:21:04,460 --> 00:21:05,820
It is.

552
00:21:05,820 --> 00:21:09,820
The Morph browser is our cute web engine based browser,

553
00:21:09,820 --> 00:21:13,380
which is based on Chromium Blink.

554
00:21:13,380 --> 00:21:16,140
And it's been getting more stable with every release.

555
00:21:16,140 --> 00:21:17,380
So, in this release,

556
00:21:17,380 --> 00:21:20,940
we've got fixes for multiple browser windows,

557
00:21:20,940 --> 00:21:22,940
which is always an interesting experience

558
00:21:22,940 --> 00:21:25,060
when you have a five inch screen,

559
00:21:26,380 --> 00:21:28,500
as well as fixes to tab switching

560
00:21:28,500 --> 00:21:31,980
and a bunch of other things that everyone will find nice.

561
00:21:31,980 --> 00:21:33,980
And we've heard some really great feedback on.

562
00:21:33,980 --> 00:21:36,380
Good, that's really nice.

563
00:21:36,380 --> 00:21:37,220
The other thing I learned

564
00:21:37,220 --> 00:21:39,100
when I was reading through your release notes,

565
00:21:39,100 --> 00:21:40,900
and I hadn't thought about it.

566
00:21:40,900 --> 00:21:41,740
And then when I saw this,

567
00:21:41,740 --> 00:21:43,540
I was surprised that the project is still active.

568
00:21:43,540 --> 00:21:45,860
I thought maybe it was a canonical project.

569
00:21:45,860 --> 00:21:49,540
But Libhybris, which is that magic translation layer

570
00:21:49,540 --> 00:21:51,580
that lives between the Android drivers

571
00:21:51,580 --> 00:21:53,860
and the libc based user space, right?

572
00:21:53,860 --> 00:21:57,580
So, Libhybris does this really, really important translation

573
00:21:57,580 --> 00:21:59,660
that lets you use all kinds of different hardware.

574
00:21:59,660 --> 00:22:02,100
And that's still an active project getting updated, yeah?

575
00:22:02,100 --> 00:22:07,100
Yes, Libhybris was originally maintained by the Mamo team

576
00:22:07,580 --> 00:22:11,100
when Nokia originally brought out their Linux.

577
00:22:11,100 --> 00:22:13,620
And that has moved into the Mer project,

578
00:22:13,620 --> 00:22:17,460
which is the base of Sailfish OS,

579
00:22:17,460 --> 00:22:19,860
which is supported by Sailfish.

580
00:22:19,860 --> 00:22:21,860
It's turtles all the way down,

581
00:22:21,860 --> 00:22:25,220
but it means that there's a great well supported project

582
00:22:25,220 --> 00:22:27,020
that other mobile platforms are also using.

583
00:22:27,020 --> 00:22:29,460
So, it kind of works out perfect, doesn't it?

584
00:22:29,460 --> 00:22:30,300
It is perfect.

585
00:22:30,300 --> 00:22:31,940
And it's nice to have that upstream there.

586
00:22:31,940 --> 00:22:34,260
Yeah, well, seriously congratulations

587
00:22:34,260 --> 00:22:35,380
on another great release.

588
00:22:35,380 --> 00:22:37,020
Good to see that new cadence,

589
00:22:37,020 --> 00:22:38,300
that new keyboard does look sharp.

590
00:22:38,300 --> 00:22:40,740
I'm looking at the screenshots in your blog post right now.

591
00:22:40,740 --> 00:22:43,820
And for the new Nexus 4 and Nexus 7 users

592
00:22:43,820 --> 00:22:45,540
with the Wi-Fi only version,

593
00:22:45,540 --> 00:22:48,100
also a release that I think you're gonna be

594
00:22:48,100 --> 00:22:49,540
particularly excited about.

595
00:22:49,540 --> 00:22:50,380
So, go check it out.

596
00:22:50,380 --> 00:22:51,380
We will have a link in the show notes

597
00:22:51,380 --> 00:22:55,580
to linuxunplug.com slash 284, yes.

598
00:22:55,580 --> 00:22:57,980
Dalton, thanks for stopping by to tell us

599
00:22:57,980 --> 00:22:59,420
anything else you wanna mention about this release

600
00:22:59,420 --> 00:23:00,820
or maybe the next release?

601
00:23:00,820 --> 00:23:03,660
People to keep a lookout for?

602
00:23:03,660 --> 00:23:04,740
Well, with this release,

603
00:23:04,740 --> 00:23:07,820
we brought in a bunch of changes to help with porting.

604
00:23:07,820 --> 00:23:09,180
So, I think people are going to be seeing

605
00:23:09,180 --> 00:23:11,060
some new devices pretty soon.

606
00:23:11,060 --> 00:23:12,900
In fact, I think that there might be

607
00:23:12,900 --> 00:23:15,020
one of those devices from that company

608
00:23:15,020 --> 00:23:18,500
that starts with X that Americans can't seem to pronounce,

609
00:23:18,500 --> 00:23:23,420
about to hit our devices page at devices.ubuntu-touch.io.

610
00:23:23,420 --> 00:23:24,940
It's in testing right now.

611
00:23:24,940 --> 00:23:27,980
Very cool, that is awesome to hear.

612
00:23:27,980 --> 00:23:29,940
Well, good work to you and the whole team.

613
00:23:29,940 --> 00:23:33,380
Tell everybody to keep it up and we'll keep watching.

614
00:23:33,380 --> 00:23:34,220
Keep watching.

615
00:23:34,220 --> 00:23:35,580
Dalton, I don't suppose there's any chance

616
00:23:35,580 --> 00:23:37,380
you're gonna make it out to Linux Fest this year?

617
00:23:37,380 --> 00:23:38,220
I'm not sure.

618
00:23:38,220 --> 00:23:40,260
I just booked all my tickets for FOSDEM,

619
00:23:40,260 --> 00:23:42,980
so I might need to be recovering at that point yet.

620
00:23:42,980 --> 00:23:44,700
Yeah, yeah, yeah.

621
00:23:44,700 --> 00:23:46,580
Well, good, I'm glad you're going to FOSDEM.

622
00:23:46,580 --> 00:23:48,500
So, let's just do a bit of housekeeping here for a moment.

623
00:23:48,500 --> 00:23:50,700
I don't really have a lot to cover,

624
00:23:50,700 --> 00:23:54,540
but Linux Fest Northwest is our next big public event.

625
00:23:54,540 --> 00:23:56,580
We're also gonna be at scale.

626
00:23:56,580 --> 00:23:59,140
So, that's now, we're locking that in.

627
00:23:59,140 --> 00:24:01,780
I think I'll be there, Wes is gonna be there,

628
00:24:01,780 --> 00:24:03,100
and a new member of our team,

629
00:24:03,100 --> 00:24:05,860
which we haven't had a chance yet to introduce y'all to,

630
00:24:05,860 --> 00:24:07,460
is gonna be there as well.

631
00:24:07,460 --> 00:24:09,500
Ooh, I'm so excited already.

632
00:24:09,500 --> 00:24:10,940
Just all the good ways to hang out

633
00:24:10,940 --> 00:24:12,740
with our wonderful audience.

634
00:24:12,740 --> 00:24:17,220
Yeah, but Linux Fest is gonna be the party.

635
00:24:17,220 --> 00:24:20,620
I have a list of people showing up I'm so thrilled about.

636
00:24:20,620 --> 00:24:22,220
I'm looking forward to hanging out with everybody.

637
00:24:22,220 --> 00:24:23,580
Linux Fest Northwest, if you can make it,

638
00:24:23,580 --> 00:24:26,980
please go April 26th through the 28th, 2019.

639
00:24:26,980 --> 00:24:28,620
That's all I really had for the housekeeping section though,

640
00:24:28,620 --> 00:24:31,940
because there is some stuff,

641
00:24:31,940 --> 00:24:34,860
there is some stuff that we have to talk about.

642
00:24:34,860 --> 00:24:37,420
You heard me mention it during the intro segment,

643
00:24:37,420 --> 00:24:42,420
ZFS on Linux is going to be the new upstream project

644
00:24:42,580 --> 00:24:47,580
that FreeBSD and Lumos and other operating systems

645
00:24:47,940 --> 00:24:51,580
that ship ZFS will base their implementation on.

646
00:24:51,580 --> 00:24:53,940
So, the FreeBSD project will likely still have

647
00:24:53,940 --> 00:24:56,260
their own project repository

648
00:24:56,260 --> 00:24:58,540
for their implementation of ZFS,

649
00:24:58,540 --> 00:25:03,180
but it will be downstream of the ZFS on Linux project now.

650
00:25:04,300 --> 00:25:06,300
This is a huge shift.

651
00:25:06,300 --> 00:25:08,180
This is a massive shift.

652
00:25:08,180 --> 00:25:10,020
And this was announced a few weeks ago,

653
00:25:10,020 --> 00:25:11,940
we covered it when it happened.

654
00:25:11,940 --> 00:25:16,300
Today, I came across what I thought

655
00:25:16,300 --> 00:25:18,220
was the end of days at first.

656
00:25:18,220 --> 00:25:22,100
Like, at first, my first pass of this story,

657
00:25:22,100 --> 00:25:24,140
I was really kind of in panic mode.

658
00:25:24,140 --> 00:25:27,660
And I PMed Wes, I'm like, Wes, talk me down.

659
00:25:27,660 --> 00:25:29,900
Tell me what this is about, because the headline

660
00:25:29,900 --> 00:25:32,460
and the ramifications are pretty big.

661
00:25:32,460 --> 00:25:36,340
ZFS on Linux has run into a snag with version 5.0.

662
00:25:36,340 --> 00:25:38,980
ZFS on Linux currently fails to build

663
00:25:38,980 --> 00:25:41,380
against Linux 5.0 kernel sources.

664
00:25:41,380 --> 00:25:44,500
This isn't due to just some trivial API change.

665
00:25:44,500 --> 00:25:46,300
In fact, actually, it's just because

666
00:25:46,300 --> 00:25:47,740
there are some kernel symbols,

667
00:25:47,740 --> 00:25:50,500
kernel FPU begin and end respectively.

668
00:25:51,420 --> 00:25:54,380
The kernel module for ZFS on Linux relied on those

669
00:25:54,380 --> 00:25:57,380
in part to basically have faster performance

670
00:25:57,380 --> 00:25:59,380
while doing some file system checksums.

671
00:25:59,380 --> 00:26:02,540
Those are no longer exported and the module can't build.

672
00:26:02,540 --> 00:26:07,300
Right, so these FPU symbols that allowed ZFS on Linux

673
00:26:07,300 --> 00:26:10,660
to do fancy fast checksums just disappeared in 5.0.

674
00:26:10,660 --> 00:26:13,740
And there doesn't seem to be a simple solution

675
00:26:13,740 --> 00:26:16,740
for this immediately, especially one that doesn't involve

676
00:26:16,740 --> 00:26:20,340
using GPL symbols due to license compatibility issues

677
00:26:20,340 --> 00:26:22,380
that, I mean, we talk about this with ZFS

678
00:26:22,380 --> 00:26:23,860
all the time with Linux.

679
00:26:23,860 --> 00:26:27,060
And Greg KH chimed in on the mailing list

680
00:26:27,060 --> 00:26:29,300
that's read about this on the kernel mailing list.

681
00:26:29,300 --> 00:26:33,140
He doesn't seem to be too inspired to make any concessions.

682
00:26:33,140 --> 00:26:36,220
Quote, Greg writes, my tolerance for ZFS

683
00:26:36,220 --> 00:26:37,780
is pretty non-existent.

684
00:26:37,780 --> 00:26:41,460
Sun explicitly did not want their code to work on Linux.

685
00:26:41,460 --> 00:26:43,140
So why would we do extra work

686
00:26:43,140 --> 00:26:45,300
to get their code to work properly?

687
00:26:45,300 --> 00:26:47,380
It's unfortunate, this one might not be the biggest.

688
00:26:47,380 --> 00:26:49,380
It looks like they'll probably just not have

689
00:26:49,380 --> 00:26:52,500
vectorized floating point implementations

690
00:26:52,500 --> 00:26:53,780
for these checksums in the future,

691
00:26:53,780 --> 00:26:55,580
at least for the short term.

692
00:26:55,580 --> 00:26:59,180
But at a time when suddenly the ZOL tree

693
00:26:59,180 --> 00:27:01,940
is the place where new development is happening,

694
00:27:01,940 --> 00:27:03,700
it just kind of seems like a downturn

695
00:27:03,700 --> 00:27:06,860
or not a great relationship between the Linux community

696
00:27:06,860 --> 00:27:09,820
and the large and the ZOL project in particular.

697
00:27:09,820 --> 00:27:11,660
And it wasn't, I mean, obviously those weren't great, right?

698
00:27:11,660 --> 00:27:13,620
I mean, it's an out of tree driver.

699
00:27:13,620 --> 00:27:16,500
And we should also note that those symbols begin

700
00:27:16,500 --> 00:27:17,860
with a double underscore.

701
00:27:17,860 --> 00:27:20,620
And so really they weren't super officially supported.

702
00:27:20,620 --> 00:27:22,260
They could have been removed really at any time.

703
00:27:22,260 --> 00:27:24,220
So here they are, they're gone.

704
00:27:24,220 --> 00:27:27,740
But just knowing that people as high up as great gay age

705
00:27:27,740 --> 00:27:30,380
have no interest in bending even a little bit to help

706
00:27:30,380 --> 00:27:33,300
our favorite little file system is pretty disappointing.

707
00:27:33,300 --> 00:27:36,980
Yeah, do you think Wes, it's a power play a little bit?

708
00:27:36,980 --> 00:27:39,420
Like they're looking at the situation, they're going,

709
00:27:40,300 --> 00:27:45,300
ZFS needs Linux more than Linux needs ZFS.

710
00:27:46,100 --> 00:27:48,900
And now you all just admitted that the ZFS on Linux

711
00:27:48,900 --> 00:27:50,100
is the best implementation,

712
00:27:50,100 --> 00:27:51,820
the one with the encryption you want.

713
00:27:51,820 --> 00:27:54,580
So why don't you just come play ball?

714
00:27:54,580 --> 00:27:55,980
Why don't you just come play ball?

715
00:27:55,980 --> 00:27:57,700
Is that the message they're trying to send here?

716
00:27:57,700 --> 00:28:01,460
That's one reading, I would assume that Greg in particular

717
00:28:01,460 --> 00:28:03,460
is probably a little more pragmatic than that

718
00:28:03,460 --> 00:28:07,180
and just can't be bothered to impose future support burdens,

719
00:28:07,180 --> 00:28:09,900
even if they might be minimal or seem to be minimal now

720
00:28:09,900 --> 00:28:13,540
on an out of tree incompatibly licensed module.

721
00:28:13,540 --> 00:28:15,420
Yeah, in fact, I think I agree with you

722
00:28:15,420 --> 00:28:19,340
because reading into it didn't look like there was

723
00:28:19,340 --> 00:28:22,460
sort of iffy support for these symbols for quite a while now

724
00:28:22,460 --> 00:28:23,780
and they've kind of been on the chopping block.

725
00:28:23,780 --> 00:28:25,540
Yeah, I think what we're really gonna have to try

726
00:28:25,540 --> 00:28:27,460
to pay attention to is the longer term story.

727
00:28:27,460 --> 00:28:28,860
How many more symbols disappear?

728
00:28:28,860 --> 00:28:32,060
How many symbols that we just can't rely on

729
00:28:32,060 --> 00:28:35,220
are hard coded into the currency well implementation

730
00:28:35,220 --> 00:28:36,620
and how big of a deal will these be?

731
00:28:36,620 --> 00:28:37,860
Because if it's just sort of like,

732
00:28:37,860 --> 00:28:39,460
this was gonna be deprecated anyway,

733
00:28:39,460 --> 00:28:41,540
now's the time where we have to go do the back porting

734
00:28:41,540 --> 00:28:43,180
and the updates, so be it.

735
00:28:43,180 --> 00:28:46,220
If it signals a real degradation in the relationship,

736
00:28:46,220 --> 00:28:47,220
that'll be disappointing.

737
00:28:47,220 --> 00:28:50,020
Well, and it also seems like 5.0

738
00:28:50,020 --> 00:28:51,660
is where you make some breaking changes.

739
00:28:51,660 --> 00:28:53,580
Like if this is something you've been thinking about

740
00:28:53,580 --> 00:28:54,980
and it's been on the chopping block

741
00:28:54,980 --> 00:28:56,380
and you know it's gonna break a couple of things

742
00:28:56,380 --> 00:28:59,660
because ZFS on Linux probably isn't the only

743
00:28:59,660 --> 00:29:02,580
software project to use this vectorized checksum support.

744
00:29:02,580 --> 00:29:04,980
It's probably other ones out there.

745
00:29:04,980 --> 00:29:07,540
But at the same time, like if you decided as a team,

746
00:29:07,540 --> 00:29:10,140
we're kind of done with this and it doesn't really fit

747
00:29:10,140 --> 00:29:11,820
with our overall licensing scheme anyways

748
00:29:11,820 --> 00:29:14,300
and what our intentions are and what the spirit of it all is.

749
00:29:14,300 --> 00:29:16,700
5.0 would be the time to make that change,

750
00:29:16,700 --> 00:29:19,060
it would be time to just rip that bandaid off, I would think.

751
00:29:19,060 --> 00:29:20,780
We've got some good questions too in the IRC

752
00:29:20,780 --> 00:29:23,100
just asking about, what about NVIDIA, right?

753
00:29:23,100 --> 00:29:24,460
Because that's the elephant in the room,

754
00:29:24,460 --> 00:29:26,660
it's the other really popular driver.

755
00:29:26,660 --> 00:29:27,900
That's why I was freaking out earlier.

756
00:29:27,900 --> 00:29:29,020
Now, it doesn't seem like this,

757
00:29:29,020 --> 00:29:30,580
obviously when you have a GPU,

758
00:29:30,580 --> 00:29:32,780
you probably don't need these particular symbols,

759
00:29:32,780 --> 00:29:35,180
but the same practices could be applied

760
00:29:35,180 --> 00:29:36,740
and does it mean there's a different relationship?

761
00:29:36,740 --> 00:29:39,180
Does the kernel value the NVIDIA driver

762
00:29:39,180 --> 00:29:41,540
more than say the relationship to the ZFS project?

763
00:29:41,540 --> 00:29:42,380
Yeah, yeah. I don't know,

764
00:29:42,380 --> 00:29:43,740
but it doesn't seem fair.

765
00:29:43,740 --> 00:29:44,900
I'm glad that question came up

766
00:29:44,900 --> 00:29:46,660
because depending on where you read this story,

767
00:29:46,660 --> 00:29:48,580
particularly on Reddit, if you read the comments,

768
00:29:48,580 --> 00:29:50,300
people are equating this to mean

769
00:29:50,300 --> 00:29:51,860
that the NVIDIA driver won't work anymore

770
00:29:51,860 --> 00:29:53,660
and that's not the case.

771
00:29:53,660 --> 00:29:55,540
That's not what's happening here.

772
00:29:55,540 --> 00:29:59,900
It's really just this one vectorized GP,

773
00:29:59,900 --> 00:30:00,740
I can't remember what it's called.

774
00:30:00,740 --> 00:30:03,620
Yeah, the vectorized floating point operation.

775
00:30:03,620 --> 00:30:06,620
And Conan Kudo in the IRC has a great point.

776
00:30:06,620 --> 00:30:07,780
It was removed basically

777
00:30:07,780 --> 00:30:09,940
because they did a bunch of changes in the kernel

778
00:30:09,940 --> 00:30:12,780
and entry modules no longer needed these symbols.

779
00:30:12,780 --> 00:30:14,620
So they were unwilling to support stuff

780
00:30:14,620 --> 00:30:16,380
that their code base wasn't using.

781
00:30:16,380 --> 00:30:17,620
I mean, there you go, there you go.

782
00:30:17,620 --> 00:30:19,660
So I thought what we would do here

783
00:30:19,660 --> 00:30:21,660
is we had an opportunity to sit down

784
00:30:21,660 --> 00:30:24,340
with an individual who contributes

785
00:30:24,340 --> 00:30:28,260
to the Fedora project, Mangia, OpenSUSE,

786
00:30:28,260 --> 00:30:31,540
and he's on the ZFS leadership council

787
00:30:31,540 --> 00:30:33,740
as part of his day job at Datto.

788
00:30:33,740 --> 00:30:36,700
And I've known Neil for a long time.

789
00:30:36,700 --> 00:30:39,180
And so when this story came up a couple of weeks ago,

790
00:30:39,180 --> 00:30:41,300
he was the first guy I thought about calling up

791
00:30:41,300 --> 00:30:44,020
and chatting and he gives us some great context

792
00:30:44,020 --> 00:30:45,260
about the situation.

793
00:30:45,260 --> 00:30:46,860
Well, with all this news recently

794
00:30:46,860 --> 00:30:49,820
about all the major projects that use ZFS,

795
00:30:49,820 --> 00:30:53,420
rebasing upstream on ZFS for Linux,

796
00:30:53,420 --> 00:30:55,780
I had to bring somebody on to process this.

797
00:30:55,780 --> 00:30:57,740
So Neil's joining us and Neil,

798
00:30:57,740 --> 00:30:59,140
you and I have chatted in the past

799
00:30:59,140 --> 00:31:01,020
and I always manage to mess up the last name.

800
00:31:01,020 --> 00:31:02,380
So help me with the pronunciation

801
00:31:02,380 --> 00:31:03,940
so that way on the record, I don't get it wrong.

802
00:31:03,940 --> 00:31:04,860
Neil Gompa.

803
00:31:04,860 --> 00:31:05,940
All right, so there you go.

804
00:31:05,940 --> 00:31:09,140
Hey Neil, thanks for joining us on Linux Unplugged.

805
00:31:09,140 --> 00:31:12,620
And why don't we start a little bit with your background

806
00:31:12,620 --> 00:31:15,740
because I know you're involved with the Fedora project,

807
00:31:15,740 --> 00:31:18,980
OpenSUSE, you have a day job at Datto

808
00:31:18,980 --> 00:31:21,220
and obviously work there with storage.

809
00:31:21,220 --> 00:31:22,660
Tell me a little bit about your background.

810
00:31:22,660 --> 00:31:26,740
Sure, currently I am a DevOps engineer at Datto,

811
00:31:26,740 --> 00:31:29,060
which is a disaster recovery,

812
00:31:29,060 --> 00:31:31,220
business continuity services company

813
00:31:31,220 --> 00:31:33,540
that's focused on managed service providers

814
00:31:33,540 --> 00:31:37,340
and people in that and all that kind of space.

815
00:31:38,460 --> 00:31:41,940
And we use ZFS or ZFS, however you'd like to pronounce it

816
00:31:41,940 --> 00:31:44,060
for a lot of our infrastructure

817
00:31:44,060 --> 00:31:45,780
and of course our backup appliances

818
00:31:45,780 --> 00:31:48,260
and stuff like that on Linux.

819
00:31:48,260 --> 00:31:53,180
And part of that has also made it so that I'm involved

820
00:31:53,180 --> 00:31:55,380
with the ZFS on Linux project upstream.

821
00:31:55,380 --> 00:31:57,300
What kind of amounts of storage roughly,

822
00:31:57,300 --> 00:31:58,220
you don't have to give me specifics,

823
00:31:58,220 --> 00:31:59,620
but just kind of roughly are you working with?

824
00:31:59,620 --> 00:32:02,380
I think the last time we talked about this publicly

825
00:32:02,380 --> 00:32:07,380
as a company, I think we were at almost 200 or so petabytes

826
00:32:08,060 --> 00:32:09,220
of data.

827
00:32:09,220 --> 00:32:14,220
Now, it's not like it's a enormous cluster of ZFS

828
00:32:14,580 --> 00:32:17,820
because for one, that's not a good idea,

829
00:32:17,820 --> 00:32:22,580
but it is 200 petabytes of computers that run ZFS

830
00:32:22,580 --> 00:32:24,780
as the data backing file system.

831
00:32:24,780 --> 00:32:28,420
And the model that our company uses is that basically

832
00:32:28,420 --> 00:32:32,060
we map a person, a customer's equipment

833
00:32:32,060 --> 00:32:36,860
to what we call a cloud storage node.

834
00:32:36,860 --> 00:32:39,980
And that node receives all of that customer's data.

835
00:32:39,980 --> 00:32:44,020
So it's not like you have this massive fabric or something

836
00:32:44,020 --> 00:32:47,660
that like along the lines of say like Ceph or Gluster,

837
00:32:47,660 --> 00:32:49,020
it doesn't work that way.

838
00:32:49,020 --> 00:32:54,020
It's more like we have a large set of computers

839
00:32:55,820 --> 00:32:58,100
that runs ZFS to store data.

840
00:32:58,100 --> 00:33:00,740
And so like the servers may have,

841
00:33:02,620 --> 00:33:05,340
they'll have, I think on average somewhere

842
00:33:05,340 --> 00:33:09,380
like 200 terabytes or so, maybe more per server.

843
00:33:09,380 --> 00:33:13,220
So it pushes the limits of a lot of things.

844
00:33:13,220 --> 00:33:15,900
And the workloads that we're doing on it are quite varied.

845
00:33:15,900 --> 00:33:20,820
So this Datto's use of ZFS so extensively,

846
00:33:20,820 --> 00:33:21,660
how does this work?

847
00:33:21,660 --> 00:33:23,940
So I know you were involved in the ZFS leadership

848
00:33:23,940 --> 00:33:25,220
and you were in the leadership meeting

849
00:33:25,220 --> 00:33:26,580
when they were discussing rebasing,

850
00:33:26,580 --> 00:33:29,700
like free BSDs implementation on ZFS for Linux

851
00:33:29,700 --> 00:33:31,380
instead of the Lumos version.

852
00:33:31,380 --> 00:33:32,900
How does that part of it work?

853
00:33:32,900 --> 00:33:36,660
So is it a lot of companies that have some sort

854
00:33:36,660 --> 00:33:38,900
of financial interest in the future of ZFS?

855
00:33:38,900 --> 00:33:41,260
Is it based on their contributions?

856
00:33:41,260 --> 00:33:43,980
How does the leadership team aspect of all of this work?

857
00:33:43,980 --> 00:33:46,420
Cause I think that's an interesting element

858
00:33:46,420 --> 00:33:48,740
to the ZFS project that, I mean,

859
00:33:48,740 --> 00:33:50,540
I don't think ButterFS has anything like that.

860
00:33:50,540 --> 00:33:53,580
So historically the leadership is more or less

861
00:33:54,780 --> 00:33:57,260
the companies that worked on the Lumos tree.

862
00:33:58,260 --> 00:34:00,420
And those were considered the people

863
00:34:00,420 --> 00:34:03,980
that kind of led the open ZFS umbrella.

864
00:34:03,980 --> 00:34:07,620
And would it be fair to say that a common conception

865
00:34:07,620 --> 00:34:10,060
was that the Lumos version was the...

866
00:34:10,060 --> 00:34:10,900
Mainline?

867
00:34:10,900 --> 00:34:15,900
Yeah, that was pretty much the historical basis.

868
00:34:16,220 --> 00:34:18,500
But a number of things have changed

869
00:34:18,500 --> 00:34:20,780
over the past three, four years.

870
00:34:20,780 --> 00:34:23,900
Like Datto as a company has contributed

871
00:34:23,900 --> 00:34:26,300
the ZFS native encryption to ZOL.

872
00:34:26,300 --> 00:34:27,660
And that has not been fully ported

873
00:34:27,660 --> 00:34:29,140
to other operating systems.

874
00:34:29,140 --> 00:34:30,420
Oh, I see.

875
00:34:30,420 --> 00:34:31,700
So that's sort of a big differentiator

876
00:34:31,700 --> 00:34:33,380
that the Linux version has

877
00:34:33,380 --> 00:34:35,380
that the other projects probably want.

878
00:34:35,380 --> 00:34:38,060
The library interfaces for ZFS are different

879
00:34:38,060 --> 00:34:40,220
across all three operating systems.

880
00:34:40,220 --> 00:34:43,220
Even the ZFS command works differently

881
00:34:43,220 --> 00:34:45,540
between the different operating systems,

882
00:34:45,540 --> 00:34:47,300
excluding the fact that native encryption

883
00:34:47,300 --> 00:34:50,100
only exists on ZOL right now.

884
00:34:50,100 --> 00:34:52,980
It's just the implementations are not the same.

885
00:34:52,980 --> 00:34:54,140
They are not at the same level.

886
00:34:54,140 --> 00:34:56,180
They don't exactly have the same feature sets.

887
00:34:56,180 --> 00:34:58,060
And in some cases their compatibility

888
00:34:58,060 --> 00:34:59,380
is a little bit wonky.

889
00:34:59,380 --> 00:35:02,180
So there has been this open question for a while

890
00:35:02,180 --> 00:35:03,900
of what we would consider the mainline.

891
00:35:03,900 --> 00:35:06,220
And historically it has been the Lumos tree.

892
00:35:06,220 --> 00:35:07,820
But with the changes that have happened

893
00:35:07,820 --> 00:35:08,940
over the last couple of years,

894
00:35:08,940 --> 00:35:11,420
that came into question again.

895
00:35:11,420 --> 00:35:13,980
And now it's the Linux tree is the one

896
00:35:13,980 --> 00:35:16,820
that's actually moving ahead and doing more.

897
00:35:16,820 --> 00:35:20,780
And the other trees are not doing as much.

898
00:35:20,780 --> 00:35:23,820
Like I think the most notable exception I am aware of

899
00:35:23,820 --> 00:35:26,340
is the Zstandard support that came to FreeBSD first

900
00:35:26,340 --> 00:35:28,860
because Alan Jude wrote it.

901
00:35:28,860 --> 00:35:31,660
It's not because it was,

902
00:35:31,660 --> 00:35:36,460
it didn't go to Lumos first and then go to FreeBSD.

903
00:35:36,460 --> 00:35:38,180
There wasn't already a single mainline.

904
00:35:38,180 --> 00:35:40,100
It was sort of just following where development

905
00:35:40,100 --> 00:35:41,020
is naturally taking place.

906
00:35:41,020 --> 00:35:42,580
It sounds like it was starting to get worse too,

907
00:35:42,580 --> 00:35:43,420
potentially.

908
00:35:43,420 --> 00:35:45,740
Yeah, and so nowadays,

909
00:35:45,740 --> 00:35:47,540
if we wanted to follow in terms of like,

910
00:35:47,540 --> 00:35:49,300
okay, where's the features going,

911
00:35:49,300 --> 00:35:51,420
then we have to consider ZOL as the mainline

912
00:35:51,420 --> 00:35:52,980
because that's where a lot of the feature development

913
00:35:52,980 --> 00:35:53,820
is happening.

914
00:35:53,820 --> 00:35:55,300
That's where the bulk of the usage

915
00:35:55,300 --> 00:35:57,460
of the ZFS file system is now happening,

916
00:35:57,460 --> 00:35:59,740
even though it is the redheaded ugly stepchild

917
00:35:59,740 --> 00:36:01,300
of the open ZFS family.

918
00:36:01,300 --> 00:36:02,380
Well, that's what I was gonna ask you.

919
00:36:02,380 --> 00:36:05,300
That seems like a really awkward contentious position.

920
00:36:05,300 --> 00:36:08,900
If the version of ZFS that perhaps has the largest

921
00:36:08,900 --> 00:36:11,140
user deployment is the Linux version,

922
00:36:11,140 --> 00:36:14,260
but a large portion of the ZFS community themselves

923
00:36:14,260 --> 00:36:18,620
considers the Linux version to be sort of second class,

924
00:36:18,620 --> 00:36:20,900
that's a bad position to be in because then in theory,

925
00:36:20,900 --> 00:36:24,900
the projects most passionate members

926
00:36:24,900 --> 00:36:27,540
aren't putting their best foot forward to the marketplace.

927
00:36:27,540 --> 00:36:29,340
And that is definitely,

928
00:36:29,340 --> 00:36:31,820
that has definitely been the case until very recently.

929
00:36:31,820 --> 00:36:36,820
What changed is that Delphix is moving from Illumos

930
00:36:37,740 --> 00:36:41,500
to Linux for their platform.

931
00:36:41,500 --> 00:36:45,180
And so that means that all the members of the,

932
00:36:45,180 --> 00:36:46,580
the main members of the leadership,

933
00:36:46,580 --> 00:36:50,700
like Matt Aarons and company are moving

934
00:36:50,700 --> 00:36:54,580
from the Solaris tree to the Linux tree.

935
00:36:54,580 --> 00:36:59,020
And so that means that for all intents and purposes,

936
00:36:59,860 --> 00:37:02,380
the majority is now Linux developers.

937
00:37:02,380 --> 00:37:04,300
What distributions are they using?

938
00:37:05,300 --> 00:37:06,820
Is it all Ubuntu?

939
00:37:06,820 --> 00:37:07,660
No.

940
00:37:07,660 --> 00:37:10,660
So, well, Delphix, I think will be using Ubuntu,

941
00:37:10,660 --> 00:37:13,020
which, eh, sure.

942
00:37:13,020 --> 00:37:14,620
Oh, wow.

943
00:37:14,620 --> 00:37:15,900
I thought, you know, I mean,

944
00:37:15,900 --> 00:37:17,380
at least they're shipping it, man.

945
00:37:17,380 --> 00:37:18,220
That's true.

946
00:37:18,220 --> 00:37:20,140
And Datto does as well,

947
00:37:20,140 --> 00:37:24,380
but the ZOL primary developers,

948
00:37:24,380 --> 00:37:27,180
which are the Lawrence Livermore National Institute,

949
00:37:27,180 --> 00:37:29,860
use, they use RHEL.

950
00:37:29,860 --> 00:37:31,860
And actually Red Hat Enterprise Linux

951
00:37:31,860 --> 00:37:35,780
and CentOS and Fedora are the primary test engines

952
00:37:35,780 --> 00:37:38,820
and the things that we test against

953
00:37:38,820 --> 00:37:41,700
because Fedora gives us the latest kernels

954
00:37:41,700 --> 00:37:45,060
and easy to test against along with the newer ABIs

955
00:37:45,060 --> 00:37:46,620
and stuff like that to make sure

956
00:37:46,620 --> 00:37:48,060
we're following the future well.

957
00:37:48,060 --> 00:37:50,380
That just feels like there's a bit of tasty irony in there,

958
00:37:50,380 --> 00:37:51,220
don't you think?

959
00:37:51,220 --> 00:37:53,740
Like, it's, in fact, right now,

960
00:37:53,740 --> 00:37:56,180
the leaders of those projects

961
00:37:56,180 --> 00:37:59,060
are actively working on Stratus to compete with ZFS.

962
00:37:59,060 --> 00:38:02,620
Ah, so Stratus is not about competing with ZFS.

963
00:38:02,620 --> 00:38:03,780
That is the- You don't think so?

964
00:38:03,780 --> 00:38:05,700
No, it's definitely not, look.

965
00:38:05,700 --> 00:38:07,260
So just a quick recap to the audience,

966
00:38:07,260 --> 00:38:09,540
Stratus is sort of a collection of existing tools

967
00:38:09,540 --> 00:38:13,300
as well as new APIs to use existing Linux management tools

968
00:38:13,300 --> 00:38:16,900
along with XFS to create a ZFS-like competitor

969
00:38:16,900 --> 00:38:18,660
is what, you know, a lot of people consider it,

970
00:38:18,660 --> 00:38:20,980
like myself and the people I've talked to.

971
00:38:20,980 --> 00:38:22,100
But what do you think?

972
00:38:22,100 --> 00:38:23,700
You think it's more of a stopgap

973
00:38:23,700 --> 00:38:25,540
for a ButterFS competitor?

974
00:38:25,540 --> 00:38:28,140
I don't consider it a competitor to ButterFS or ZFS

975
00:38:28,140 --> 00:38:32,220
in any reasonable way because the problem with it

976
00:38:32,220 --> 00:38:36,220
is that the layers don't know anything about each other.

977
00:38:36,220 --> 00:38:37,820
So there's going to be weaknesses

978
00:38:37,820 --> 00:38:40,140
and lack of optimization on certain parts of it.

979
00:38:40,140 --> 00:38:42,060
There's a lot you can do to make,

980
00:38:42,060 --> 00:38:44,540
like, this is more about making the user experience simpler

981
00:38:44,540 --> 00:38:45,860
rather than anything else, like-

982
00:38:45,860 --> 00:38:47,220
Right, I mean, it almost seems like that's the,

983
00:38:47,220 --> 00:38:48,460
that's where it's competing, right?

984
00:38:48,460 --> 00:38:49,980
It's not about the technical competition,

985
00:38:49,980 --> 00:38:52,580
it's about their customers want to do this X

986
00:38:52,580 --> 00:38:54,220
and if the performance is good enough,

987
00:38:54,220 --> 00:38:55,620
even if there are limitations,

988
00:38:55,620 --> 00:38:56,900
well, that's the same thing.

989
00:38:56,900 --> 00:38:59,940
The main impetches for the development of Stratus

990
00:38:59,940 --> 00:39:03,340
is that they want to have boot to Snapshot,

991
00:39:03,340 --> 00:39:04,700
the stuff that SUSE did.

992
00:39:06,060 --> 00:39:09,660
And boot to Snapshot is only functional on Linux

993
00:39:09,660 --> 00:39:12,940
properly with BTRFS.

994
00:39:12,940 --> 00:39:16,060
And if you try to use the other file systems

995
00:39:16,060 --> 00:39:17,460
or the other technologies,

996
00:39:17,460 --> 00:39:20,700
there's a whole lot of gotchas and quirks and problems.

997
00:39:20,700 --> 00:39:22,820
And even to be fair with BTRFS,

998
00:39:22,820 --> 00:39:24,820
you can't even do this with mainline grub

999
00:39:24,820 --> 00:39:27,140
because the grub people are bad about reviewing patches

1000
00:39:27,140 --> 00:39:27,980
for this stuff.

1001
00:39:27,980 --> 00:39:29,820
Uh, yeah.

1002
00:39:29,820 --> 00:39:31,540
It is, I laugh, but it's frustrating.

1003
00:39:31,540 --> 00:39:35,220
Yeah, no, SUSE has, I think, seven or eight patches

1004
00:39:35,220 --> 00:39:38,700
to BTRFS that they wrote four or five years ago

1005
00:39:38,700 --> 00:39:39,820
to make this work.

1006
00:39:39,820 --> 00:39:44,420
I integrated them into Fedora with Peter Jones's help,

1007
00:39:44,420 --> 00:39:46,900
Peter Jones and Dusty Maeb who are,

1008
00:39:46,900 --> 00:39:48,220
Peter Jones is the guy at Red Hat

1009
00:39:48,220 --> 00:39:49,620
who works on the boot stuff

1010
00:39:49,620 --> 00:39:53,500
and Dusty Maeb is currently the guy

1011
00:39:53,500 --> 00:39:56,780
that works on the Red Hat Atomic and CoreOS stuff.

1012
00:39:56,780 --> 00:39:59,260
And back then he was just kind of the guy

1013
00:39:59,260 --> 00:40:03,300
who just worked on all kinds of stuff related to whatever.

1014
00:40:03,300 --> 00:40:04,140
The guy with the tie.

1015
00:40:04,140 --> 00:40:06,100
Yeah, yeah, that's more accurate.

1016
00:40:06,100 --> 00:40:10,180
But Dusty had been doing this for a while on his own,

1017
00:40:10,180 --> 00:40:11,660
just like integrating the patches

1018
00:40:11,660 --> 00:40:12,860
and then putting them into,

1019
00:40:12,860 --> 00:40:14,460
and then writing up instructions

1020
00:40:14,460 --> 00:40:17,700
on how to set up the SUSE style boot to Snapshot on Fedora.

1021
00:40:17,700 --> 00:40:19,820
I wanted, I've been doing it myself,

1022
00:40:19,820 --> 00:40:20,860
but like one of the downsides

1023
00:40:20,860 --> 00:40:23,300
is if you're building grub yourself and all this stuff,

1024
00:40:23,300 --> 00:40:24,940
you lose a lot of secure boot support.

1025
00:40:24,940 --> 00:40:29,100
So I worked with Peter Jones and Dusty Maeb

1026
00:40:29,100 --> 00:40:31,260
to integrate the SUSE patches into Fedora's grub.

1027
00:40:31,260 --> 00:40:34,260
And so now the boot to Snapshot stuff can work

1028
00:40:34,260 --> 00:40:39,100
if you like actually set it up on Fedora,

1029
00:40:39,100 --> 00:40:40,620
it's just not set up by default.

1030
00:40:40,620 --> 00:40:41,620
There's some work to be done,

1031
00:40:41,620 --> 00:40:44,060
but like my main annoyance at this point

1032
00:40:44,060 --> 00:40:47,500
is that grub is so bad about integrating grub

1033
00:40:47,500 --> 00:40:49,340
and integrating these things.

1034
00:40:49,340 --> 00:40:51,540
I have no idea what the hell happened

1035
00:40:51,540 --> 00:40:53,260
the first time around when it came to,

1036
00:40:53,260 --> 00:40:55,540
when they submitted the patches, assuming they did.

1037
00:40:55,540 --> 00:40:57,140
I mean, again, I can't even prove that

1038
00:40:57,140 --> 00:41:00,820
because navigating the grub patches mailing list

1039
00:41:00,820 --> 00:41:05,460
is horrible because it's that horrible mailing interface

1040
00:41:05,460 --> 00:41:07,380
that the GNU project uses for everything.

1041
00:41:07,380 --> 00:41:09,700
So it's just terrible to search.

1042
00:41:09,700 --> 00:41:10,700
Thank you, thank you.

1043
00:41:10,700 --> 00:41:12,380
I always felt like the jerk for thinking that.

1044
00:41:12,380 --> 00:41:13,380
It does seem a little bit like,

1045
00:41:13,380 --> 00:41:14,780
we have such better technology.

1046
00:41:14,780 --> 00:41:18,180
Like the Fedora mailing list with HyperKitty

1047
00:41:18,180 --> 00:41:21,100
and Mailman 3 has a bloody search engine

1048
00:41:21,100 --> 00:41:25,380
that can actually search properly across all the topics.

1049
00:41:25,380 --> 00:41:28,300
You can tag things, you can favorite threads.

1050
00:41:28,300 --> 00:41:29,220
That is pretty legit.

1051
00:41:29,220 --> 00:41:31,500
Let's bring this back to ZFS.

1052
00:41:31,500 --> 00:41:32,500
So now moving forward,

1053
00:41:32,500 --> 00:41:36,340
we've got certain features that are only available

1054
00:41:36,340 --> 00:41:38,020
on the ZFS for Linux implementation

1055
00:41:38,020 --> 00:41:40,380
that the market wants, like encryption.

1056
00:41:40,380 --> 00:41:43,020
You've got Delphix, which is switching their product

1057
00:41:43,020 --> 00:41:45,540
from a Lumos over to Linux.

1058
00:41:45,540 --> 00:41:48,580
But what seems to be the elephant in the room now

1059
00:41:48,580 --> 00:41:52,740
is looking over at FreeBSD and the BSD projects

1060
00:41:52,740 --> 00:41:56,260
that ship ZFS and thinking after, you know,

1061
00:41:56,260 --> 00:41:59,340
kind of a couple of years of really, really hounding,

1062
00:41:59,340 --> 00:42:02,380
you've got to ship BSD if you want the best ZFS,

1063
00:42:02,380 --> 00:42:04,660
they're now shipping or will be shipping

1064
00:42:04,660 --> 00:42:06,340
the Linux version of ZFS.

1065
00:42:06,340 --> 00:42:08,540
Is that an awkward position for them, do you think?

1066
00:42:08,540 --> 00:42:11,780
Or is that just in the eyes and minds

1067
00:42:11,780 --> 00:42:13,420
of the internet commentators?

1068
00:42:13,420 --> 00:42:15,780
So ironically, I think they're gonna have an easier time

1069
00:42:15,780 --> 00:42:18,100
once they complete their rebase to ZOL.

1070
00:42:18,100 --> 00:42:20,440
So one of the differences between the ZOL tree

1071
00:42:20,440 --> 00:42:23,380
and the Lumos tree is that the ZOL tree

1072
00:42:23,380 --> 00:42:25,020
is actually separated from the rest

1073
00:42:25,020 --> 00:42:26,460
of the operating system.

1074
00:42:26,460 --> 00:42:28,340
So it's easier for them to pick it out

1075
00:42:28,340 --> 00:42:31,580
and plug in the BSD to Linux compatibility interfaces

1076
00:42:31,580 --> 00:42:33,620
and plug the ZFS driver in.

1077
00:42:35,300 --> 00:42:38,100
I think that from a community point of view,

1078
00:42:38,100 --> 00:42:39,700
like the broader Linux community,

1079
00:42:39,700 --> 00:42:42,340
ZFS on Linux will remain an ugly stepchild.

1080
00:42:42,340 --> 00:42:44,620
And it's probably a very fair remark

1081
00:42:44,620 --> 00:42:47,340
to consider it that way, given how antagonistic

1082
00:42:47,340 --> 00:42:50,540
both sides have been to each other for various reasons.

1083
00:42:50,540 --> 00:42:52,160
It's not worth getting into right now,

1084
00:42:52,160 --> 00:42:54,420
but like that is not going to change anytime soon,

1085
00:42:54,420 --> 00:42:56,660
unless Oracle waves a magic wand,

1086
00:42:56,660 --> 00:42:58,300
which I don't think they'll ever do,

1087
00:42:58,300 --> 00:43:00,160
but you know, they could,

1088
00:43:00,160 --> 00:43:02,260
and then the problems will start going away.

1089
00:43:02,260 --> 00:43:05,220
And then maybe ZFS would be integrated into Linux tree

1090
00:43:05,220 --> 00:43:07,020
and you know, everything will kind of get better

1091
00:43:07,020 --> 00:43:08,500
in ponies and unicorns.

1092
00:43:08,500 --> 00:43:11,080
But while it might be an ugly stepchild

1093
00:43:11,080 --> 00:43:12,220
in the broader Linux community,

1094
00:43:12,220 --> 00:43:15,540
within the open ZFS community has gradually gotten

1095
00:43:15,540 --> 00:43:17,340
a bigger sphere of influence.

1096
00:43:17,340 --> 00:43:21,240
The current major developers of the ZFS file system,

1097
00:43:21,240 --> 00:43:23,860
as in like the features and stuff like that,

1098
00:43:23,860 --> 00:43:26,100
have increasingly been on the Linux side

1099
00:43:26,100 --> 00:43:27,860
rather than the other sides.

1100
00:43:27,860 --> 00:43:31,060
And for FreeBSD, they're going to find

1101
00:43:31,060 --> 00:43:33,140
that it's actually going to be easier

1102
00:43:33,140 --> 00:43:36,180
for them to integrate, once they've rebased

1103
00:43:36,180 --> 00:43:38,980
from the Illumos version to the Linux version,

1104
00:43:38,980 --> 00:43:41,260
I suspect they'll find that it will be much easier

1105
00:43:41,260 --> 00:43:43,660
to integrate new versions faster.

1106
00:43:43,660 --> 00:43:46,480
Now that being said, the FreeBSD development process

1107
00:43:46,480 --> 00:43:48,900
doesn't allow them to move very fast, very easily.

1108
00:43:48,900 --> 00:43:51,580
They have a lot of problems in terms of their,

1109
00:43:51,580 --> 00:43:53,020
in terms of their development process,

1110
00:43:53,020 --> 00:43:55,180
the size of the number of people contributing

1111
00:43:55,180 --> 00:43:57,340
to the FreeBSD operating system,

1112
00:43:57,340 --> 00:43:59,240
in terms of the kernel and the integration

1113
00:43:59,240 --> 00:44:00,860
across the different layers.

1114
00:44:00,860 --> 00:44:04,660
But I think that this will improve their ability

1115
00:44:04,660 --> 00:44:09,220
to integrate things from ZFS overall.

1116
00:44:09,220 --> 00:44:10,700
I think that's a different take than I've heard,

1117
00:44:10,700 --> 00:44:12,620
but I think that syncs up.

1118
00:44:12,620 --> 00:44:15,100
Knowing what I know from chatting with Alan

1119
00:44:15,100 --> 00:44:16,180
about this too, behind the scenes,

1120
00:44:16,180 --> 00:44:17,620
asking him what he thought of it,

1121
00:44:17,620 --> 00:44:20,120
and I think his views kind of sync up with yours.

1122
00:44:20,120 --> 00:44:23,260
And I wonder if then we can move beyond

1123
00:44:23,260 --> 00:44:25,640
sort of who has the best ZFS implementation,

1124
00:44:25,640 --> 00:44:27,780
and we just sort of achieve, finally,

1125
00:44:27,780 --> 00:44:29,740
which I think has been one of the project's goals,

1126
00:44:29,740 --> 00:44:31,060
maybe from the beginning, you can correct me

1127
00:44:31,060 --> 00:44:33,460
if I'm wrong, Neil, but we finally kind of achieve

1128
00:44:33,460 --> 00:44:37,100
one common upstream across all operating systems.

1129
00:44:37,100 --> 00:44:39,140
That's the holy grail, right?

1130
00:44:39,140 --> 00:44:40,020
Is it possible?

1131
00:44:40,020 --> 00:44:41,380
Is that possible?

1132
00:44:41,380 --> 00:44:44,480
The main thing that hampers it is that ZFS,

1133
00:44:44,480 --> 00:44:48,220
each ZFS implementation is too tightly wound

1134
00:44:48,220 --> 00:44:50,860
into the kernel that it is associated with.

1135
00:44:50,860 --> 00:44:54,540
So today it is not, we don't have

1136
00:44:54,540 --> 00:44:56,380
a modern open ZFS implementation

1137
00:44:56,380 --> 00:44:59,060
that can operate entirely in user space, for example.

1138
00:44:59,060 --> 00:45:02,540
If you remember from like five or six years ago,

1139
00:45:02,540 --> 00:45:04,620
or even seven years ago, even,

1140
00:45:04,620 --> 00:45:06,520
like there was the ZFS Fuse project,

1141
00:45:06,520 --> 00:45:08,840
and that was one of the first implementations of it.

1142
00:45:08,840 --> 00:45:11,260
And while it didn't last for very long,

1143
00:45:11,260 --> 00:45:14,400
it was a fairly complete implementation, if not a bit slow.

1144
00:45:15,400 --> 00:45:17,720
These days, Fuse is much faster and much more efficient,

1145
00:45:17,720 --> 00:45:18,580
and if we did it again,

1146
00:45:18,580 --> 00:45:21,340
it would probably be actually pretty good.

1147
00:45:21,340 --> 00:45:25,980
But the problem today is that without a way

1148
00:45:25,980 --> 00:45:29,140
to operate the ZFS file system entirely in user space

1149
00:45:29,140 --> 00:45:31,540
with an agnostic API that can be used

1150
00:45:31,540 --> 00:45:33,260
across different operating systems,

1151
00:45:33,260 --> 00:45:36,240
there is no way we can have a unified file system tree,

1152
00:45:36,240 --> 00:45:40,140
because we can't have an implementation that we can say,

1153
00:45:40,140 --> 00:45:42,380
okay, this is the behavior that we expect

1154
00:45:42,380 --> 00:45:44,540
and test all the kernel integrations against it.

1155
00:45:44,540 --> 00:45:47,020
That's just not a thing we can do right now.

1156
00:45:47,020 --> 00:45:48,820
How would you pull something like that off?

1157
00:45:48,820 --> 00:45:50,460
Would there be additions?

1158
00:45:50,460 --> 00:45:51,820
Would there, I mean, would it be something

1159
00:45:51,820 --> 00:45:54,300
like a set of super feature flags?

1160
00:45:54,300 --> 00:45:56,140
Is there a way to have a master branch

1161
00:45:56,140 --> 00:45:59,880
and then have all of these considerations or compromises

1162
00:45:59,880 --> 00:46:00,820
or whatever you want to call them

1163
00:46:00,820 --> 00:46:02,860
for the different platforms this thing gonna run on?

1164
00:46:02,860 --> 00:46:06,060
So sure, I mean, most modern file systems

1165
00:46:06,060 --> 00:46:08,380
are actually built in a relatively self-contained way

1166
00:46:08,380 --> 00:46:12,700
because they have to be able to understand

1167
00:46:12,700 --> 00:46:14,780
their full context and state.

1168
00:46:14,780 --> 00:46:16,380
ZFS is no exception to this.

1169
00:46:16,380 --> 00:46:18,500
The only difference is because of the way

1170
00:46:18,500 --> 00:46:20,580
that ZFS on Linux has been developed

1171
00:46:20,580 --> 00:46:22,180
and all the other variants,

1172
00:46:22,180 --> 00:46:25,440
it's been, they took out the common code

1173
00:46:25,440 --> 00:46:28,680
and re-implemented everything inside the common code

1174
00:46:28,680 --> 00:46:30,540
outwards into the kernel.

1175
00:46:30,540 --> 00:46:34,740
So ZFS on Linux, for example, operates in like,

1176
00:46:34,740 --> 00:46:37,680
I think it's like eight or nine kernel modules.

1177
00:46:37,680 --> 00:46:40,820
Like it's a bunch of different kernel modules

1178
00:46:40,820 --> 00:46:45,820
that make up ZFS, zfs.ko, ICP, Z comments,

1179
00:46:47,380 --> 00:46:48,600
there's a whole bunch.

1180
00:46:48,600 --> 00:46:50,700
And while we're talking about those kernel modules,

1181
00:46:50,700 --> 00:46:52,660
let's talk to Neo live in real time.

1182
00:46:52,660 --> 00:46:54,640
So we recorded that a couple of weeks ago

1183
00:46:54,640 --> 00:46:57,340
and he's joining us in the mumble room.

1184
00:46:57,340 --> 00:46:59,380
Neo, welcome to Linux Unplugged again.

1185
00:46:59,380 --> 00:47:03,860
And what do you think of this latest news with Linux 5.0?

1186
00:47:03,860 --> 00:47:08,060
Hey Chris, it's nice to be back again, this time live.

1187
00:47:08,060 --> 00:47:09,540
It's really not that surprising.

1188
00:47:09,540 --> 00:47:13,020
I mean, we actually kind of knew it was coming

1189
00:47:13,020 --> 00:47:17,180
to some extent because as I mentioned to you

1190
00:47:17,180 --> 00:47:21,220
the last time we talked, it was more about having the,

1191
00:47:22,860 --> 00:47:25,020
we often test against with Fedora.

1192
00:47:25,020 --> 00:47:26,540
We even test against Fedora-Raw height.

1193
00:47:26,540 --> 00:47:30,500
So as snapshots are coming in of Linux kernel releases,

1194
00:47:30,500 --> 00:47:31,800
we are actively testing in that.

1195
00:47:31,800 --> 00:47:35,580
And we detect these kinds of problems basically like that.

1196
00:47:35,580 --> 00:47:38,900
And because of that, it was no surprise

1197
00:47:38,900 --> 00:47:41,700
to most of us in ZOL, the real,

1198
00:47:41,700 --> 00:47:44,020
the kind of the kick in the teeth was that

1199
00:47:44,020 --> 00:47:45,580
there were no other consumers left

1200
00:47:45,580 --> 00:47:49,220
in the Linux kernel itself and they re-architected things.

1201
00:47:49,220 --> 00:47:52,540
So it burned us in that regard.

1202
00:47:52,540 --> 00:47:54,060
But you know, this is not all that different

1203
00:47:54,060 --> 00:47:57,180
from what happens every other like seventh

1204
00:47:57,180 --> 00:47:59,660
or eighth kernel release or something like that.

1205
00:47:59,660 --> 00:48:02,260
I mean, it's just gonna make it so that configuring ZFS

1206
00:48:02,260 --> 00:48:04,460
when you're building it from source is just gonna take

1207
00:48:04,460 --> 00:48:07,140
two or three more minutes longer than it did before.

1208
00:48:07,140 --> 00:48:11,400
I mean, at this point, I think we have 10 minutes worth

1209
00:48:11,400 --> 00:48:14,620
of configure steps for detecting which functions we can use

1210
00:48:14,620 --> 00:48:17,020
going all the way back to 2632.

1211
00:48:17,020 --> 00:48:17,860
Oh wow.

1212
00:48:17,860 --> 00:48:20,080
God, I'm looking forward to when RHEL 6 goes away

1213
00:48:20,080 --> 00:48:21,880
because when RHEL 6 drops off,

1214
00:48:21,880 --> 00:48:24,660
we can move the bar up to 310

1215
00:48:24,660 --> 00:48:28,160
and that lets us drop a huge chunk of checks.

1216
00:48:28,160 --> 00:48:29,460
I bet.

1217
00:48:29,460 --> 00:48:30,380
Holy smokes.

1218
00:48:31,260 --> 00:48:33,460
So is there going to be, as far as you know,

1219
00:48:33,460 --> 00:48:36,280
like a checksum performance impact

1220
00:48:36,280 --> 00:48:40,140
if it can't use this vectorized checksum methodology?

1221
00:48:40,140 --> 00:48:41,320
I don't know this for certain

1222
00:48:41,320 --> 00:48:43,840
because like I haven't dug too much into it,

1223
00:48:43,840 --> 00:48:47,920
but I suspect that this is really only going to impact

1224
00:48:47,920 --> 00:48:52,920
encryption really, because the FPU stuff,

1225
00:48:53,020 --> 00:48:56,580
I think is more about accelerating floating.

1226
00:48:56,580 --> 00:48:58,060
FPU is a floating point unit.

1227
00:48:58,060 --> 00:49:00,700
So it's accelerating floating point calculations

1228
00:49:00,700 --> 00:49:03,460
and that's primarily used in cryptography.

1229
00:49:03,460 --> 00:49:04,940
So I suspect that's the only thing

1230
00:49:04,940 --> 00:49:06,220
that's really gonna harm it.

1231
00:49:06,220 --> 00:49:09,260
There's not a lot of accelerated code paths in ZFS.

1232
00:49:09,260 --> 00:49:11,260
That's part of the reason why it's kind of

1233
00:49:11,260 --> 00:49:14,100
a heavy file system compared to most.

1234
00:49:14,100 --> 00:49:17,340
And the other part of it is just that it has a lot of stuff

1235
00:49:17,340 --> 00:49:20,400
and it has to re-implement large aspects

1236
00:49:20,400 --> 00:49:21,780
of what the kernel normally does

1237
00:49:21,780 --> 00:49:24,480
because of the licensing and compat.

1238
00:49:24,480 --> 00:49:27,680
So, I mean, it is what it is.

1239
00:49:29,060 --> 00:49:29,900
It'll move on.

1240
00:49:29,900 --> 00:49:32,020
Like there's already a little bit of,

1241
00:49:32,020 --> 00:49:34,540
if you look at the CFS on Linux repository right now

1242
00:49:34,540 --> 00:49:36,100
and look at the GitHub issues,

1243
00:49:36,100 --> 00:49:37,580
they've already got the issues filed

1244
00:49:37,580 --> 00:49:40,540
for like the different functions that have been,

1245
00:49:40,540 --> 00:49:43,700
basically they're blocked off from starting with 5.0.

1246
00:49:43,700 --> 00:49:45,180
And, you know, they're just,

1247
00:49:45,180 --> 00:49:49,780
we'll just poke at and prod it and fix it as we go.

1248
00:49:49,780 --> 00:49:52,140
I feel like we should maybe just

1249
00:49:52,140 --> 00:49:55,500
more explicitly assuage Chris's fears.

1250
00:49:55,500 --> 00:49:57,780
Are there changes to symbols or, you know,

1251
00:49:57,780 --> 00:50:00,040
other upstream changes that would seem likely

1252
00:50:00,040 --> 00:50:03,260
that could really endanger the future of ZFS on Linux?

1253
00:50:03,260 --> 00:50:05,060
Look, the only way that ZFS on Linux

1254
00:50:05,060 --> 00:50:06,200
will have a guaranteed future

1255
00:50:06,200 --> 00:50:09,260
is if it was mainlined into the Linux kernel tree.

1256
00:50:09,260 --> 00:50:12,620
That is not gonna happen until Oracle waves its magic wand.

1257
00:50:12,620 --> 00:50:15,420
So, nothing in this life is certain

1258
00:50:15,420 --> 00:50:18,660
when it comes to ZFS on Linux or ZFS on any platform.

1259
00:50:19,980 --> 00:50:21,280
Just take it as it can come.

1260
00:50:21,280 --> 00:50:24,820
And for now, I don't foresee a reason for it to disappear.

1261
00:50:24,820 --> 00:50:26,800
Yeah, it does seem like,

1262
00:50:26,800 --> 00:50:29,220
and I think I even put that in my episode

1263
00:50:29,220 --> 00:50:32,480
where we all had our magic wands and we had our wishlist.

1264
00:50:32,480 --> 00:50:34,300
If they dual licensed it even,

1265
00:50:34,300 --> 00:50:36,140
or just, let's just say they win GPL,

1266
00:50:36,140 --> 00:50:39,060
just for a hot second, let's just fantasize.

1267
00:50:39,060 --> 00:50:40,820
It would enshrine that file system

1268
00:50:40,820 --> 00:50:43,360
in the world's largest free operating system.

1269
00:50:43,360 --> 00:50:46,660
It would essentially make ZFS a file system

1270
00:50:46,660 --> 00:50:48,020
that could live on forever.

1271
00:50:48,020 --> 00:50:50,140
Not that it can't on these other platforms,

1272
00:50:50,140 --> 00:50:52,980
but as we've all seen with the GPL,

1273
00:50:52,980 --> 00:50:54,180
it has that viral nature

1274
00:50:54,180 --> 00:50:57,620
and that has worked out very good for Linux.

1275
00:50:57,620 --> 00:50:59,540
And if ZFS could be included into that,

1276
00:50:59,540 --> 00:51:02,740
it would be part of something larger.

1277
00:51:02,740 --> 00:51:05,160
I mean, not to get all like meta about this,

1278
00:51:05,160 --> 00:51:08,260
but being inside the Linux kernel

1279
00:51:08,260 --> 00:51:11,100
is sort of like being in a time capsule.

1280
00:51:11,100 --> 00:51:12,700
And the other thing about this

1281
00:51:12,700 --> 00:51:15,100
that a lot of people don't realize

1282
00:51:15,100 --> 00:51:19,700
is that we, in the ZOL implementation of ZFS,

1283
00:51:19,700 --> 00:51:23,380
we re-implement quite a bit of what the kernel does.

1284
00:51:23,380 --> 00:51:26,080
If we were actually allowed to be part of the kernel,

1285
00:51:27,060 --> 00:51:30,740
that would probably simplify quite a bit

1286
00:51:30,740 --> 00:51:34,140
of ZFS's implementation on Linux.

1287
00:51:34,140 --> 00:51:37,500
And the magic wand here would be something,

1288
00:51:37,500 --> 00:51:39,260
an arrangement similar to what we have

1289
00:51:39,260 --> 00:51:42,820
for the GPU stack, the graphics stack in Linux.

1290
00:51:42,820 --> 00:51:45,340
In the kernel side graphics stack,

1291
00:51:45,340 --> 00:51:47,400
most of the code is dual licensed,

1292
00:51:48,260 --> 00:51:52,300
ex-pat MITx11 and GPLv2.

1293
00:51:52,300 --> 00:51:55,300
And so that allows large swaths of that code

1294
00:51:55,300 --> 00:52:00,300
to be imported into operating systems like FreeBSD

1295
00:52:00,620 --> 00:52:03,340
that prefer to have a more permissive

1296
00:52:03,340 --> 00:52:05,500
pushover set of license terms

1297
00:52:05,500 --> 00:52:09,380
versus the copyleft terms that the Linux kernel has.

1298
00:52:12,300 --> 00:52:14,620
The thing to consider though is that

1299
00:52:16,440 --> 00:52:18,660
if such an arrangement were to occur,

1300
00:52:18,660 --> 00:52:21,900
like there's a whole lot of extra considerations

1301
00:52:21,900 --> 00:52:26,900
around like how ZFS is going to be maintained,

1302
00:52:27,100 --> 00:52:29,660
how will people make sure that the licensing providence

1303
00:52:29,660 --> 00:52:32,940
remains, you know, sane, stuff like that.

1304
00:52:32,940 --> 00:52:35,660
These are things that have been worked out as arrangements

1305
00:52:35,660 --> 00:52:39,860
before it's been done with the Linux graphics drivers.

1306
00:52:39,860 --> 00:52:42,300
It can be done for ZFS as well

1307
00:52:42,300 --> 00:52:44,820
if we could get Oracle to wave its magic wand

1308
00:52:44,820 --> 00:52:47,660
because if they make, like say for example,

1309
00:52:47,660 --> 00:52:49,860
a new version of the CDDL,

1310
00:52:49,860 --> 00:52:53,840
that new version could basically allow you

1311
00:52:53,840 --> 00:52:57,420
to have the terms that would be compatible with it.

1312
00:52:57,420 --> 00:53:00,700
That could be a way to do it via the CDDL.

1313
00:53:00,700 --> 00:53:02,140
Cause there's no restriction currently

1314
00:53:02,140 --> 00:53:05,500
in the CDDL license that specifically says,

1315
00:53:05,500 --> 00:53:08,660
the way that it's termed inside of the ZFS tree

1316
00:53:08,660 --> 00:53:10,940
that says that newer versions of that license

1317
00:53:10,940 --> 00:53:12,220
cannot be used.

1318
00:53:12,220 --> 00:53:14,660
And the license steward, which was Sun Microsystems,

1319
00:53:14,660 --> 00:53:18,060
now Oracle Corporation, is allowed to make a new version

1320
00:53:18,060 --> 00:53:22,140
and we are allowed to use that as our, if we want to.

1321
00:53:22,140 --> 00:53:22,980
Just put that out there.

1322
00:53:22,980 --> 00:53:24,020
Just going to put that out there, right?

1323
00:53:24,020 --> 00:53:26,780
Just maybe send that out in waves out in the universe.

1324
00:53:26,780 --> 00:53:28,260
Maybe something will come back.

1325
00:53:28,260 --> 00:53:31,020
It's the same path that Fedora, Red Hat,

1326
00:53:31,020 --> 00:53:35,780
Fedora and SGI did to fix the Xorg licensing problem

1327
00:53:35,780 --> 00:53:37,860
back in the early 2000s.

1328
00:53:37,860 --> 00:53:42,700
So it's not the, and the free software foundation

1329
00:53:42,700 --> 00:53:46,860
did the same thing for the GFDL so that Wikipedia

1330
00:53:46,860 --> 00:53:48,900
could move to Creative Commons licensing

1331
00:53:48,900 --> 00:53:51,700
instead of remaining on the GNU free documentation license.

1332
00:53:51,700 --> 00:53:52,860
It's not without precedent.

1333
00:53:52,860 --> 00:53:53,960
It can be done.

1334
00:53:53,960 --> 00:53:56,100
It's just a matter of getting the right ear

1335
00:53:56,100 --> 00:53:59,700
at the, with the right people to make it happen.

1336
00:53:59,700 --> 00:54:02,180
And if there's enough people who want it and there's,

1337
00:54:02,180 --> 00:54:05,860
and somebody knows the right person, then it can happen.

1338
00:54:05,860 --> 00:54:07,260
I'm holding out my hope.

1339
00:54:07,260 --> 00:54:08,060
I like that.

1340
00:54:08,060 --> 00:54:10,740
I think that's a, you know what, that's going to be the,

1341
00:54:10,740 --> 00:54:13,380
that'll be like the little, little string of hope

1342
00:54:13,380 --> 00:54:14,400
that I hold on to, Neil.

1343
00:54:14,400 --> 00:54:15,980
Thanks for coming on and sharing your thoughts

1344
00:54:15,980 --> 00:54:17,860
on this story as it developed today.

1345
00:54:17,860 --> 00:54:19,420
I appreciate you stopping by.

1346
00:54:19,420 --> 00:54:20,780
That was great timing.

1347
00:54:20,780 --> 00:54:23,340
And I have a feeling we'll be talking more in the future.

1348
00:54:23,340 --> 00:54:25,700
Yeah, I enjoy chatting with you, Chris.

1349
00:54:25,700 --> 00:54:28,460
So happy to be on whenever you'd like me to.

1350
00:54:28,460 --> 00:54:29,820
Thank you, sir.

1351
00:54:29,820 --> 00:54:31,140
Well, before we scoot out of here,

1352
00:54:31,140 --> 00:54:33,580
I wanted to just mention a couple of quick picks.

1353
00:54:33,580 --> 00:54:34,660
Both are really neat.

1354
00:54:34,660 --> 00:54:37,980
We've talked about dot file managers before on the show.

1355
00:54:37,980 --> 00:54:40,540
And I thought what I'd do, instead of me pronounce this,

1356
00:54:40,540 --> 00:54:43,420
I'm going to make Wes pronounce it, because he went and looked

1357
00:54:43,420 --> 00:54:45,300
up the pronunciation.

1358
00:54:45,300 --> 00:54:46,860
And I say there's a 50-50 shot.

1359
00:54:46,860 --> 00:54:49,580
You remember how to actually say it, Wes.

1360
00:54:49,580 --> 00:54:50,500
Betrayal.

1361
00:54:50,500 --> 00:54:53,180
I see how it goes, sir.

1362
00:54:53,180 --> 00:54:54,260
Shea moi.

1363
00:54:54,260 --> 00:54:54,900
OK, all right.

1364
00:54:54,900 --> 00:54:55,220
All right.

1365
00:54:55,220 --> 00:54:55,740
Good job.

1366
00:54:55,740 --> 00:54:57,120
It's not that I didn't have faith.

1367
00:54:57,120 --> 00:54:58,360
It's just that it was a while ago.

1368
00:54:58,360 --> 00:54:59,260
It was a while ago.

1369
00:54:59,260 --> 00:55:00,140
Shea moi?

1370
00:55:00,140 --> 00:55:01,500
Is it shea moi?

1371
00:55:01,500 --> 00:55:02,460
This is on you now.

1372
00:55:02,460 --> 00:55:06,340
You got the one reading, and that was it.

1373
00:55:06,340 --> 00:55:07,980
So when you first linked this to me,

1374
00:55:07,980 --> 00:55:09,020
I was a little skeptical.

1375
00:55:09,020 --> 00:55:11,460
There's a ton of different ways to manage dot files,

1376
00:55:11,460 --> 00:55:14,300
from a simple git directory to a ton of custom tools

1377
00:55:14,300 --> 00:55:15,460
that exist there.

1378
00:55:15,460 --> 00:55:18,460
Thankfully, this guy, they've got a great README.

1379
00:55:18,460 --> 00:55:20,380
And a big section there, I already

1380
00:55:20,380 --> 00:55:22,180
have a system to manage my dot files.

1381
00:55:22,180 --> 00:55:23,380
Why should I use this?

1382
00:55:23,380 --> 00:55:25,180
And there's actually some solid answers.

1383
00:55:25,180 --> 00:55:27,540
If you haven't ever tried one, or you're not

1384
00:55:27,540 --> 00:55:30,700
happy with what you got, this should be a serious contender.

1385
00:55:30,700 --> 00:55:31,380
Yeah.

1386
00:55:31,380 --> 00:55:32,260
I heard good things.

1387
00:55:32,260 --> 00:55:33,140
I heard good things.

1388
00:55:33,140 --> 00:55:34,340
That's why I tossed it in here, because I

1389
00:55:34,340 --> 00:55:35,780
heard a lot of good things.

1390
00:55:35,780 --> 00:55:37,620
And I'm thinking about it.

1391
00:55:37,620 --> 00:55:38,980
There's also a bunch of other ones.

1392
00:55:38,980 --> 00:55:41,660
Probably the most famous is gnu-stow, or stow,

1393
00:55:41,660 --> 00:55:42,940
however you want to pronounce it.

1394
00:55:42,940 --> 00:55:44,780
Yeah, I've used that for a long time.

1395
00:55:44,780 --> 00:55:47,740
Yeah, that's, I think, probably the most common one.

1396
00:55:47,740 --> 00:55:50,020
I think this is a little easier to start with myself,

1397
00:55:50,020 --> 00:55:51,980
so I'll have a link to that in the show notes.

1398
00:55:51,980 --> 00:55:55,300
And then our last pick this week is a new web

1399
00:55:55,300 --> 00:55:57,660
browser called Ephemeral.

1400
00:55:57,660 --> 00:55:59,540
And I think this is a really cool idea.

1401
00:55:59,540 --> 00:56:02,660
It's the always incognito web browser.

1402
00:56:02,660 --> 00:56:06,260
And it's by our buddy Cassidy, over at the elementary project.

1403
00:56:06,260 --> 00:56:08,780
And he writes, it's an interesting idea,

1404
00:56:08,780 --> 00:56:12,940
Firefox focus, just making privacy a habit by default,

1405
00:56:12,940 --> 00:56:16,180
instead of a separate mode you manually enable.

1406
00:56:16,180 --> 00:56:19,060
And from that, he was kind of inspired

1407
00:56:19,060 --> 00:56:21,740
to make a really straightforward, nice looking,

1408
00:56:21,740 --> 00:56:24,820
as you would expect, I suppose, web browser

1409
00:56:24,820 --> 00:56:25,740
for elementary OS.

1410
00:56:25,740 --> 00:56:27,700
And it's a Linux app, so there's probably other ways

1411
00:56:27,700 --> 00:56:28,860
you can get your hands on it.

1412
00:56:28,860 --> 00:56:32,940
But if you are on elementary OS, go in the App Center

1413
00:56:32,940 --> 00:56:34,260
and check out Ephemeral.

1414
00:56:34,260 --> 00:56:36,180
I hope this maybe gets around a little bit.

1415
00:56:36,180 --> 00:56:38,900
I think this would be good publicity for elementary

1416
00:56:38,900 --> 00:56:39,860
as a project.

1417
00:56:39,860 --> 00:56:41,740
Yeah, and as you said, it's beautiful.

1418
00:56:41,740 --> 00:56:42,540
It's streamlined.

1419
00:56:42,540 --> 00:56:43,860
It's simple.

1420
00:56:43,860 --> 00:56:46,140
And I think Cassidy hit it on the head

1421
00:56:46,140 --> 00:56:48,960
with privacy as a default. Sure, you

1422
00:56:48,960 --> 00:56:50,420
might need sessions for some stuff,

1423
00:56:50,420 --> 00:56:51,940
for your work account, whatever.

1424
00:56:51,940 --> 00:56:54,180
But if you're just trying to buy something on Amazon

1425
00:56:54,180 --> 00:56:57,180
or look up plates, this seems perfect.

1426
00:56:57,180 --> 00:56:59,260
Yeah, I actually just like it just

1427
00:56:59,260 --> 00:57:04,060
for the idea of having an extra browser that's sort of like,

1428
00:57:04,060 --> 00:57:05,660
just go log into this for a little bit.

1429
00:57:05,660 --> 00:57:06,660
I do this all the time.

1430
00:57:06,660 --> 00:57:09,620
I'll fire up an incognito window to maybe open up

1431
00:57:09,620 --> 00:57:11,540
a Google account that's for one of the shows

1432
00:57:11,540 --> 00:57:14,380
that I don't log into too often, and I just want a one off.

1433
00:57:14,380 --> 00:57:16,220
And I just could always use this browser.

1434
00:57:16,220 --> 00:57:20,440
But speaking of publicity for elementary OS,

1435
00:57:20,440 --> 00:57:23,980
our buddy Jason, who was on the show last week,

1436
00:57:23,980 --> 00:57:26,500
I think when I was gone, and talked about Adobe Premiere

1437
00:57:26,500 --> 00:57:29,980
coming, possibly or possibly not coming to Linux,

1438
00:57:29,980 --> 00:57:32,180
and also about their plans with Rush.

1439
00:57:32,180 --> 00:57:35,420
Well, Jason has launched an elementary OS community

1440
00:57:35,420 --> 00:57:36,540
challenge.

1441
00:57:36,540 --> 00:57:38,340
And the gist of it is his challenge

1442
00:57:38,340 --> 00:57:41,660
is use elementary OS for a certain period of time.

1443
00:57:41,660 --> 00:57:44,540
It's not super, super long.

1444
00:57:44,540 --> 00:57:46,460
The whole idea is, especially if you're on Mac or Windows

1445
00:57:46,460 --> 00:57:48,120
today, so if you're listening to the show

1446
00:57:48,120 --> 00:57:50,820
and you've been Linux curious for a while,

1447
00:57:50,820 --> 00:57:51,940
this is perfect for you.

1448
00:57:51,940 --> 00:57:53,500
And I would like you to consider this.

1449
00:57:53,500 --> 00:57:56,140
The basic premise of the elementary OS challenge

1450
00:57:56,140 --> 00:57:56,660
is simple.

1451
00:57:56,660 --> 00:58:01,900
You ditch Windows or Mac OS for maybe elementary OS.

1452
00:58:01,900 --> 00:58:02,860
Maybe choose your own.

1453
00:58:02,860 --> 00:58:04,820
You know, elementary OS would be a great choice.

1454
00:58:04,820 --> 00:58:05,340
Oh, come on.

1455
00:58:05,340 --> 00:58:05,700
Come on.

1456
00:58:05,700 --> 00:58:07,860
It's not called choose whatever you want, Chris.

1457
00:58:07,860 --> 00:58:08,260
I know.

1458
00:58:08,260 --> 00:58:08,820
I know.

1459
00:58:08,820 --> 00:58:10,420
But I just want anybody to switch Linux.

1460
00:58:10,420 --> 00:58:11,860
But his suggestion, I think is a good one,

1461
00:58:11,860 --> 00:58:15,060
is you all are going to go in on elementary OS for two weeks.

1462
00:58:15,060 --> 00:58:15,900
Think about that.

1463
00:58:15,900 --> 00:58:17,020
You'll have a community of people

1464
00:58:17,020 --> 00:58:18,180
that are all trying this out.

1465
00:58:18,180 --> 00:58:22,420
There could be some really good results from that,

1466
00:58:22,420 --> 00:58:24,580
especially if Jason is able to stay

1467
00:58:24,580 --> 00:58:26,220
in contact with that community.

1468
00:58:26,220 --> 00:58:30,020
And he says, since we'll be on this road together,

1469
00:58:30,020 --> 00:58:31,900
he has a piece over on Forbes about this.

1470
00:58:31,900 --> 00:58:34,020
He says, since we'll be on this road together,

1471
00:58:34,020 --> 00:58:35,540
I'll be posting a bunch of content

1472
00:58:35,540 --> 00:58:38,620
here to capture my ongoing experiences with the challenge.

1473
00:58:38,620 --> 00:58:43,760
One day, may see a stream of consciousness journal.

1474
00:58:43,760 --> 00:58:46,380
Other days, I'll be publishing short guides, software

1475
00:58:46,380 --> 00:58:49,540
spotlights, interviews with elementary OS app developers

1476
00:58:49,540 --> 00:58:52,940
and team members, and my own discoveries and hurdles,

1477
00:58:52,940 --> 00:58:54,260
if any.

1478
00:58:54,260 --> 00:58:55,820
I think it's a great idea.

1479
00:58:55,820 --> 00:58:58,780
He's also at killyourfm on Twitter

1480
00:58:58,780 --> 00:59:01,200
if you want to follow him there, because he'll probably be

1481
00:59:01,200 --> 00:59:02,860
posting about it there as well.

1482
00:59:02,860 --> 00:59:07,140
And I'll have a link to their challenge, his piece on Forbes,

1483
00:59:07,140 --> 00:59:09,260
if you want to maybe get into that.

1484
00:59:09,260 --> 00:59:10,980
I know a lot of people listening, Wes,

1485
00:59:10,980 --> 00:59:13,120
that are probably on their own distro of choice.

1486
00:59:13,120 --> 00:59:15,580
But you know, because you see the stats, actually.

1487
00:59:15,580 --> 00:59:16,660
So you actually do know.

1488
00:59:16,660 --> 00:59:20,820
We have a very large Mac and Windows audience

1489
00:59:20,820 --> 00:59:23,660
that are likely listening because they're Linux curious.

1490
00:59:23,660 --> 00:59:24,900
This could be great for them.

1491
00:59:24,900 --> 00:59:25,660
It really could.

1492
00:59:25,660 --> 00:59:28,540
And elementary, I mean, it just keeps making leaps and bounds.

1493
00:59:28,540 --> 00:59:30,420
So maybe you're like me, and you hadn't used it

1494
00:59:30,420 --> 00:59:31,980
since the last time around.

1495
00:59:31,980 --> 00:59:33,180
It's really worth it.

1496
00:59:33,180 --> 00:59:34,140
Two weeks is nothing.

1497
00:59:34,140 --> 00:59:35,380
I mean, just give it a shot.

1498
00:59:35,380 --> 00:59:36,220
Yeah, give it a shot.

1499
00:59:36,220 --> 00:59:37,900
And if you do it, let us know too.

1500
00:59:37,900 --> 00:59:39,540
I'd love to know your progress too.

1501
00:59:39,540 --> 00:59:40,980
You could at Chris LAS me.

1502
00:59:40,980 --> 00:59:42,440
He's at Wes Payne.

1503
00:59:42,440 --> 00:59:44,440
Or you could just send us a contact form

1504
00:59:44,440 --> 00:59:47,840
if you go to linuxunplug.com slash contact.

1505
00:59:47,840 --> 00:59:49,660
It'll go right into our inbox there.

1506
00:59:49,660 --> 00:59:51,160
Or wherever you like to do that.

1507
00:59:51,160 --> 00:59:53,160
We would love to know how that journey goes too.

1508
00:59:53,160 --> 00:59:55,620
And I encourage you, if you've been thinking about it,

1509
00:59:55,620 --> 00:59:57,980
with Jason doing this, he has a pretty decent following.

1510
00:59:57,980 --> 01:00:00,420
This is going to be a little community that crops up

1511
01:00:00,420 --> 01:00:01,860
that can support each other.

1512
01:00:01,860 --> 01:00:04,380
And you can follow him along as he goes through it too

1513
01:00:04,380 --> 01:00:05,340
and writes about it.

1514
01:00:05,340 --> 01:00:07,540
It just seems like a real, if I was getting into Linux,

1515
01:00:07,540 --> 01:00:08,620
I'll stop talking about it.

1516
01:00:08,620 --> 01:00:10,000
But I just think this is such a cool idea.

1517
01:00:10,000 --> 01:00:11,620
If I was getting into Linux today,

1518
01:00:11,620 --> 01:00:13,460
that would be the thing that pushes me over.

1519
01:00:13,460 --> 01:00:14,740
And it's just really exciting.

1520
01:00:14,740 --> 01:00:16,420
And I'm just fired up about getting some new users.

1521
01:00:16,420 --> 01:00:18,420
And I think elementary is a great distro

1522
01:00:18,420 --> 01:00:19,460
for that potential audience too.

1523
01:00:19,460 --> 01:00:24,460
So with that, we're going to wrap up this week's episode.

1524
01:00:24,620 --> 01:00:28,620
TechSnap has some great stuff in the works.

1525
01:00:28,620 --> 01:00:31,320
Jim Salter from Ars Technica is joining Wes

1526
01:00:31,320 --> 01:00:32,420
as the new co-host.

1527
01:00:32,420 --> 01:00:33,840
And a new episode will be coming out soon.

1528
01:00:33,840 --> 01:00:34,680
So go subscribe.

1529
01:00:34,680 --> 01:00:38,980
Go to techsnap.systems slash subscribe and get that.

1530
01:00:38,980 --> 01:00:40,700
It's going to be incredible.

1531
01:00:40,700 --> 01:00:42,020
He's at Wes Payne.

1532
01:00:42,020 --> 01:00:43,460
Thank you to the mumble room for joining us.

1533
01:00:43,460 --> 01:00:45,780
I'm at Chris LAS.

1534
01:00:45,780 --> 01:00:50,780
And from a very chilly Texas, thank you for joining us.

1535
01:00:50,820 --> 01:00:53,280
And consider joining us live next Tuesday.

1536
01:00:53,280 --> 01:00:55,340
You can get it at jupiterbroadcasting.com slash calendar

1537
01:00:55,340 --> 01:00:58,660
for your time zone and jblive.tv for that stream.

1538
01:00:58,660 --> 01:01:00,260
We'll see you next Tuesday.

1539
01:01:00,260 --> 01:01:20,260
We'll see you next Tuesday.

1540
01:01:30,260 --> 01:01:34,620
Well, thank you everybody.

1541
01:01:34,620 --> 01:01:35,620
Really enjoyed it.

1542
01:01:35,620 --> 01:01:36,620
Mumble room, you were great.

1543
01:01:36,620 --> 01:01:38,660
Neil, thank you so much for making it.

1544
01:01:38,660 --> 01:01:39,660
Man, that worked out perfect.

1545
01:01:39,660 --> 01:01:40,660
I'll tell you what.

1546
01:01:40,660 --> 01:01:41,660
It really did.

1547
01:01:41,660 --> 01:01:42,660
Thank you.

1548
01:01:42,660 --> 01:01:43,660
Sometimes it just comes together.

1549
01:01:43,660 --> 01:01:47,260
Even when I'm doing live shows and oh man,

1550
01:01:47,260 --> 01:01:50,420
we had a great live show today, but there was a moment.

1551
01:01:50,420 --> 01:01:53,460
You know, and I don't, I mean, I guess I am a professional.

1552
01:01:53,460 --> 01:01:54,460
You are, yeah.

1553
01:01:54,460 --> 01:01:55,460
I don't consider myself one.

1554
01:01:55,460 --> 01:01:57,980
What do you, what was the last 10 years?

1555
01:01:57,980 --> 01:01:58,980
I know.

1556
01:01:58,980 --> 01:01:59,980
I know.

1557
01:01:59,980 --> 01:02:00,980
That's funny.

1558
01:02:00,980 --> 01:02:03,780
But you know, I totally, if I, if I was a professional,

1559
01:02:03,780 --> 01:02:09,300
I'm not anymore because I embarrassed myself so bad on the live stream.

1560
01:02:09,300 --> 01:02:12,500
I don't know if I should say it or if I should just make people go watch it.

1561
01:02:12,500 --> 01:02:16,420
But there was a moment where maybe because I wasn't directly on camera,

1562
01:02:16,420 --> 01:02:18,420
something happened and I lost it.

1563
01:02:18,420 --> 01:02:19,420
I laughed so hard.

1564
01:02:19,420 --> 01:02:21,660
Like you ever see those outtakes when a cast just loses it

1565
01:02:21,660 --> 01:02:23,200
and they can't keep it together anymore?

1566
01:02:23,200 --> 01:02:24,200
That was me.

1567
01:02:24,200 --> 01:02:25,200
Yeah.

1568
01:02:25,200 --> 01:02:26,200
Normally that's like multiple people.

1569
01:02:26,200 --> 01:02:28,180
And you know, you were definitely the loudest.

1570
01:02:28,180 --> 01:02:30,460
I was the only one laughing.

1571
01:02:30,460 --> 01:02:31,980
There was like one other ha.

1572
01:02:31,980 --> 01:02:36,740
But I was crying off camera, crying off camera.

1573
01:02:36,740 --> 01:02:58,860
Just because of one simple mistake.

