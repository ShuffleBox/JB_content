Now, before we start, I was wondering if I could get Wimpy to tell us about, I think
Wimpy spent the morning, or actually for him, he spent the afternoon evening at a makerspace.
Is that true, Wimpy?
I have, yes.
And tell me about this.
This sounds pretty cool.
So this is a new makerspace that is, we don't actually have a space yet, we're just a bunch
of makers right now.
So in my local area, I live in an area called Basingstoke and Dean.
So this is Bad Hack, is our makerspace.
That's awesome.
This is like the third meeting, I've been to the last two, and we're just sort of drumming
up members and figuring out who's got what skills and we're doing little presentations
and show and tells and things, figuring out some projects that we're going to work on,
and also looking for somewhere that could be a permanent facility that's open 24 seven,
so that people can just go there and work on projects whenever it suits them.
And this evening was good because we've sort of reached out to the craft makers in the
community.
So we had a load of people that do crochet and knitting and also textile crafts there
this evening.
So we've got quite a broad range of skills now to go with all the software and hardware
engineers and roboticists and electronics and PCB design guys.
So we've got a good spectrum of skills.
So we're starting to think up some group projects we can work on, which will be fun.
I feel you're making me feel like the worst.
I was invited to a local makerspace where they're building an open source car, which
has got to be cool.
And I couldn't make it work.
I couldn't get the timing right.
I wasn't able to go, but now I kind of want to email them back because this looks like
a lot of fun.
That's a bit more ambitious than our first projects.
Well, you've got to start somewhere.
Yeah.
We're going to have a go at making a 3D scanner because one of the guys in the makerspace
runs a 3D printing business.
So we thought we'd have a go at making a 3D scanner using a make our own rotating table
with Microsoft connectors, the scanning eye.
How much of the open source ethos is alive and well in a space like this?
Is there a tendency towards open source and Linux, or is it more about building the thing
and less about what software you're using?
Yeah, I'd say the latter.
So people are aware of what open source is.
What I quite like is there's quite a lot of the older generation there, sort of people
that have worked in electronics all their careers and have recently retired.
So they still refer to everything as Unix, but the fact that they know Unix is encouraging.
So people know about Linux and open source.
Some of them dabble with it and use it.
Obviously Raspberry Pi is prevalent, so they're all kind of aware.
But yes, they're very practical in the way they use things.
So it's just a tool.
So if Windows does the job better, so the prototype 3D scanner is using Windows 10 at
the moment, I intend to change that, but it runs Windows 10 at the moment.
That's because it was easy for them to do it.
So there is some awareness, but it isn't the core running through the group at all, I would
say.
I'm the only person that is really invested in open source.
Really what you're saying is that your work is definitely cut out for you.
This is Linux Unplugged episode 175 for December 13th, 2016.
Welcome to Linux Unplugged, your weekly Linux talk show that just can't avoid feeling that
holiday spirit.
My name is Chris.
My name is Wes.
Wes, you got a mug in your hands too.
It looks like you're sipping on like some cocoa.
Some can pretend.
You could bring up the eight-hour YouTube fireplace on the screen there.
It'd really feel festive in here.
I'm sure the MoMa Room would just love that.
That's not what we're here to talk about today.
We're not here to talk about that, although maybe in the post-show.
You never know.
It can go crazy.
Stick around.
But coming up on this week's episode, there is huge, huge news from the Nextcloud project.
We'll highlight some of that.
And then the Plasma desktop, it's going to be getting all up in that Nextcloud.
You're not going to believe the kind of stuff they're thinking about integrating in the
Plasma desktop.
McAfee's making your Linux box way more vulnerable.
Linus himself is feeling the holiday spirit and we'll tell you about the present he's
dropping before Christmas.
My buddies at Crossover have big news.
There's a big security thing to talk about.
And then I want to discuss the completely ridiculous, irresponsible, and maybe even
dangerous collaboration happening between distros.
If this kind of stuff happens, we're going to start getting results and stop wasting
time.
And I can't stand for it.
What are we going to come on here and rant about?
So we're going to take it to Ikey and Wimpy later on in the show and ask them why they're
doing so much damn good work and what the hell is going on with all this collaboration.
And then after that, Google announced their plans today to kill Linux on Internet of Things.
They're looking at Ubuntu snappy.
They're looking at all of the efforts by different projects out there to create a free open platform
for Internet of Things.
And Google says, no, no, let us introduce, let us suggest, let us perhaps recommend that
instead you deploy Android of Things.
Android of Things is Google's new Internet of Things platform and the name is horrible
and we'll tell you about their plans to try to crush the competition on Internet of Things,
which I think they could have something there.
They could.
I think they looked over at what Canonical is doing right now with IoT devices and they
went, shit, we better get rid of this.
What was that called?
It sounded like a kitchen, like a brassel or I can't remember what it was called, but
it was essentially an Internet of Things platform that also used Weave, their mesh networking,
and it didn't go anywhere.
Brillo, thank you.
Brillo, yes.
Look at Micah68 in the chat room, nailing it.
Yeah, so they had Brillo and Brillo hasn't worked out.
Now we're going to discuss the pivot to Android or Android of Things or whatever it's called.
But let's start with some actual really awesome Linux news and project updates, huge news
from Nextcloud and all of that, and it just would be inappropriate to go any further without
saying time-appropriate greetings, Virtual Lug.
Hello.
Greetings, programs.
Hello.
Hi.
Hello, everyone.
So very, very excited and I'm hoping Joss will come on the Linux Action Show this Sunday
to give us the real inside scoop, but I'm very excited to say that Nextcloud 11 is out
and it looks like a really kick butt release.
First of all, off the top of my head, the thing that I'm most excited about is two-factor
authentication support.
That's really big for me because the whole reason I want to use Nextcloud is because
I want something that I don't trust putting in Google or other cloud services, which means
it's something I really care about.
Security is important.
Yeah.
So they also have support for new browsers, Kerberos authentication, two-factor authentication
and time-based one-time passwords.
They have also expanded the brute force protection on all API access points, which is brilliant,
and they've made Federation more secure by better use of SSL and TLS.
Excellent.
And they're making sure their app store automatically checks apps and enforces their signatures.
So you're getting legitimate apps.
These do sound like quite a number, you know, a nice layer of security polish on the top,
especially when this is the kind of service that you very well might want to expose publicly
so that you can access from anywhere.
Also look at this stat.
This release, Nextcloud 11, decreases database load by up to 80% and improves response time
by 60% for common server app operations.
They've also …
That's true.
They have also combined multi-bucket object store support.
Now, don't worry what that means.
Wait till the next story.
Improved handling of previews in Collabra Online, so they've sped up the online document
stuff.
This is really interesting, including a lot of nice improvements to backend searching.
So yeah, I'm hoping to dig in …
Yeah, full-text search now.
That's great.
Yeah.
I'm hoping to dig in with Joss and try it out myself.
Wimpy, is this the version … Yeah, it was Wimpy before the show.
You said you tried out Nextcloud just recently, right?
I've just installed it this afternoon.
Was it 11, by chance?
Well, when I installed it … So I've installed it in a slightly unusual fashion, which is
why I've written up a blog post about it, which I've sent you a link to.
I see that.
I'll put it up.
So I recently ordered the Nextcloud box, and that arrived.
And I only had Raspberry Pi 3's, a spare, whereas the image that comes with the kit
only supports the Raspberry Pi 2.
So I have installed Ubuntu Core on a Raspberry Pi 3 in the Nextcloud box, and documented
how to install the Nextcloud snap on that, and access the one terabyte hard disk using
Ubuntu Core.
And I can confirm that it works, because I followed his guide about an hour ago, and
it works perfectly.
What is the process of installing Nextcloud from a snap?
What does that involve?
Snap install Nextcloud.
Oh, that's nice.
Interesting.
And I've just been talking to the maintainer of the Nextcloud snap, and Nextcloud 11 is
in the candidate channel in the snap store, and will move to stable very soon now.
And I've just refreshed my install, and I'm now running Nextcloud 11.
Interesting.
And what are your thoughts so far?
I don't know enough about Nextcloud to comment on that.
Well, just a general setup and use.
What are your thoughts?
Well, yeah, it's great.
Logged into the website, and the web UI thing, and turned on the bits and pieces I needed
to access the one terabyte drive, and turned on some extra apps like contacts and calendars.
And I've imported my contacts and my calendars, and I've got those synced to a tablet.
Nice.
And all of that was really easy, and I've turned on my wife's phone when you take a
photo or a video, automatically upload it, and that works as well.
So so far, so good.
I'm very pleased.
But this is like, I literally started this last night and finished it at lunchtime today.
So it's all very new to me, but I'm very pleased so far.
It's looking good.
It's certainly the best experience I've had.
Last time I tried own cloud was like own cloud eight, and it still wasn't working right for
me at that point.
But this looks much, much closer to what I need.
I'll follow with some interest your thoughts and just sort of overall feedback on how the
syncing works, too, as you get a chance to play with that.
And those features that you mentioned from Nextcloud 11, in terms of reducing the database
overhead and everything, that will be great for running it on something small like the
Pi 3.
That could make a significant difference.
So yes, that'll be terrific.
Poby, what's your experience been?
You know, just a little bit of time you've had with it so far, the UI, overall feel of
it and all that.
So the only negative thing I have is the fact it's a bit slow on the Raspberry Pi, but I'm
hoping that some of these performance improvements you've said are in own cloud 11 will help.
But I'm not expecting magic, you know, magic instant 10 times performance improvement.
But I'm planning initially just to use it for the photo sync.
I want to be able to have the photos from my phone and my kids to be able to take photos
and it just automatically sync to the Nextcloud box.
So I followed Martin's guide.
I only used the Pi 2 because it was the only thing I had kicking around, like, you know,
first world problems.
I've only got Pi 2 and I'll install the Nextcloud client on each of their machines and have them
sync in all their stuff and do that over Christmas, should be good fun, but yeah, I found it works
really well.
And I love the fact that I can just go snap install Nextcloud.
There's a little bit of faff to do SSL, but it's only like a couple of lines.
There's not a lot to it.
And there was only a couple of lines to paste in to do to mount the one terabyte hard drive.
So it wasn't really an awful lot of work.
And thanks a lot, Martin, for doing that work.
Because I basically just copy and pasted stuff into a terminal and it worked.
That's great.
Yeah, you shouldn't do that.
Even the author says that.
Make sure you try his next article.
No malicious intent.
I'm trustworthy, apparently.
Well, none of them had sudo in front of them.
So I feel okay.
There you go.
Yeah, I think the two things that I also think about, like the planner of the Federation,
so I can have a local Nextcloud instance and maybe like a droplet ones where I would hit
from my phone.
It's a little faster.
All that kind of stuff.
There's a lot of possibilities there.
This is NextStory is what could push me over the edge, big time.
This is so awesome.
It fits with things you've been flirting with lately.
So the Plasma folks have been discussing further integration with Nextcloud.
And disclaimer, I think they're more discussing having a common API that would work with own
cloud and Nextcloud.
And they're talking to both projects about that.
But the people they met with was Frank and others from Nextcloud.
So that's obviously sort of how this is framed.
It's written by Joss from Nextcloud.
This is a feature that has been discussed is the synchronization of settings, like passwords
and file metadata over to the Nextcloud server.
From an implementation point of view, the latest Nextcloud features a key value store,
which could be used to store client settings.
This is the same way that iCloud works.
When you're an iCloud developer, you can store application settings in iCloud using an iCloud
key value store system.
So this would be a key value store system that you could use to store the client settings
of the Plasma desktop.
Another area they say is they could also do the syncing of tags, ratings, and comments
from applications in the file manager, which kind of blows my mind.
And then, of course, being able to just offer general file sync integrated into the file
manager.
So they say the most important part would be to write the online accounts module, which
Noam actually has this part done, where you could set up Nextcloud to begin with.
And then they want to evaluate how setting up Nextcloud could then be potentially automatically
set up with the KDE PIM software.
So your Nextcloud calendar works in your local Plasma desktop calendar.
And also you could potentially, if you wanted to and they implemented it, use the Plasma
desktop search to not only search your Plasma desktop, but also the Nextcloud server for
files.
Wow.
Oh, that is cool.
Yeah.
That is pretty slick.
So, you know, not only is this a way to synchronize your settings in a way that feels like it
should be pretty good since it'd be supported and built into the desktop environment, but
you could keep it completely private, this is what it should be.
This kind of collaboration and this kind of communication and this kind of, hey, you're
doing this really well and we're doing this pretty good.
Why don't we, why don't you just do what you do best and we'll do what we do best because
these guys could have gone with some sort of crazy Plasma online that's $9.99 a year
that does all of this for you.
They could have done something like that.
This is genius.
And I would love to see this happen.
And I would love to see other desktops go, wait, what are they cooking over there?
Yeah.
What are they cooking?
Maybe, maybe I should do some of that.
Maybe I should do that.
I don't know.
I think that's pretty cool.
I think that would be really solid.
I'm going to try to put, I think I have recorded Wimpy's new settings sync solution.
I'll try to get that put in the post-show so that way if you guys are curious, stick
around for the post-show where Wimpy discusses how he's doing this essentially today.
But this would be baked into the desktop level.
Would you be tempted to give it a shot?
Yeah.
I mean, I think so.
I don't know if I would use it long-term or not, but with this number of like that kind
of integration, if I've already got all of my environment settings and then you can,
you already have it there syncing, so why not put your dot files on it?
Why not put in everything that you need that you want to carry with you?
You pull up a new laptop, you install Plasma, you get the settings configured and boom,
you're rolling.
That sounds awesome.
Yeah.
And if you do one login and all your settings syncs and your file syncs set up, this for
me makes like investing, even if Nextcloud does have a few issues, like I could build
backup systems around that, like I can figure out ways, especially if I can take in regular
snapshots before updates and whatnot, like there are ways to mitigate any potential downfall
I might find if they get to this level of integration.
And if the other desktops ever consider this, or even if just the file manager project implemented
this or a few other projects do this, this would be huge.
I love it.
So you can find out more.
There's not a lot of meat to it yet because none of the work has been done.
This is all just theoretical.
They don't even have the common API yet, so it's not really all that close.
One other story just because I don't really think it affects a lot of us, but I think
we'll all collectively like to roll our eyes.
Get ready.
Get ready.
Do one preparatory blink and now roll your eyes.
McAfee Virus Scanner is allowing remote code execution as root on Linux.
So when you get that virus scanner that you don't need for your Linux box, taking up resources
that you don't really have available, scanning files for the Windows users, it turns out
that if you have the Intel McAfee Virus Scan Enterprise for Linux, it can be compromised
by remote attackers due to a number of security vulnerabilities.
Not one, not two.
Some of these vulnerabilities can be chained together to allow remote code execution as
root.
Oh no.
Yeah.
So basically everything they've released from 2015 till now has the vulnerability.
The only difference from the older release appears to be updating a newer version of
Lib C, which makes exploiting these vulnerabilities even easier.
Oh boy.
Yikes.
Yeah.
So that's what's up.
And now it's out in the wild.
It's known about.
There are CVEs and all that to track.
So you've probably already been informed about this if you run it.
But they also have a rundown.
It is 10 vulnerabilities.
10.
Dang.
Yeah.
Each one got its own CVE.
So that's brilliant.
And the other thing that's just wonderful and it's so great because before I say this,
you're not going to be too shocked when I say it, but you have to remember in the context
in which this product is sold.
This is sold as a security product to run on your enterprise servers that are connected
to the internet to make them more secure.
It is implicitly sold to make your server more secure.
And so when you are designing enterprise software, it's not shareware, it's not $9, it's hundreds
of thousands even with yearly annual subscriptions and support.
And you are designing an application to be sold in this environment.
You build it for security.
And the way, just basic way you could start that is run the individual services as unprivileged
users.
But not McAfee.
Nope.
Nope.
Not one folks, but two separate services running as root and only one running as an unprivileged
user called Nails.
Nails.
And the great thing is the main scanner service runs as root and listens on a local Unix socket.
So that's beautiful.
So if you get on the box, if you use any other vulnerability to get local access to any of
the other nine, if you use any of the other nine vulnerabilities to get local access to
the box, you then can just access the local web server, the server web server listening
on local host running as root, which is brilliant.
Then the main scanner service also runs as root.
That's just brilliant.
And then the web servers, there's another web server that runs as the user Nails also
listening on 0.0.0 on port 55443.
Inner process communication is basically a web server that sits on top of other pieces
underneath it.
And when the user makes a request to the web server, the request is reformatted and sent
to the root service.
And then the user is shown the response rendered in an HTML template.
The web interface doesn't do much to limit what data a malicious user could send to the
root service.
So you can, you could probably figure out a way to just use the web service, whatever
you want in there, and it'll just pass it right along to the thing running as root.
Just passes it right.
Here you go.
Here you go.
Right.
It is Ryan.
Yeah, it's just brilliant.
It's built as a product to make your Linux enterprise servers more secure with the intention
these boxes are likely connected to the web or, you know, because they're mail servers
and things like that.
And this is what they do.
Crazy.
Well, expected though.
Don't don't if you're going to run antivirus on Linux, just use Clam antivirus.
All right.
Do me a favor.
Do you a favor.
Don't make Chris mad.
Don't don't spend thousands and thousands of dollars to McAfee.
Go do a donation to the Clam AV project and call it good.
Clam AV has been around for years.
It gets updated like nobody's business.
It's easy to integrate.
It doesn't have a ton of overhead compared to these things.
And it's open source.
You just I mean, it's just there is not a competitive market.
I don't know why.
I don't like I've seen this before.
I've seen people asking about antivirus before.
If you must run antivirus, use Clam Clam AV.
And if you need to spend money on antivirus, give a donation to the Clam AV project.
Problem solved.
All right.
Hmm.
Go ahead.
Yes.
I have found several third party Clam AV virus repositories.
There's one that I'm using on my personal squid proxy at home.
Oh, you scan all the data.
How do you know it's a legit the third party?
How do you know?
Like, how do you find these?
And how do you know they're OK to use?
This one I they have paid repository parts and they mentioned something about I think
U.S. government using them or something like that.
This is like a business.
This is like a this is like a way they generate revenue.
Yes.
Oh, OK.
Interesting.
So they're like a curator for Clam AV databases.
And can you use multiple Clam AV database sources?
You should.
All it is is adding into the Clam as the fresh Clam config.
Yeah.
Fresh Clam.
That's right.
That's right.
Yep.
Wow.
It's been a long time.
So that is that is really interesting.
I don't think I ever got down that far in the rabbit hole when I messed around with Clam
AV.
Thankfully.
I just set up a cron job.
Let me see if I can find the website and I'll link it to you guys in the IRC.
Yeah, of course.
Like Ike says, you can still charge for open source.
Of course, Clam AV could choose to sell it if they wanted to.
They just don't.
It's just right there in your repo.
I love it.
There's a lot of value adds like we're seeing here.
That is really a thing, though.
Just those root services, Wes, that really runs as root and then claims to make your
computer more secure.
Just I know.
Right.
And walk away.
Walk away.
I mean, I mean, I only run as root, but that's because I know what I'm doing.
You know what you're doing.
You meant to delete those files.
Yeah.
Didn't want them anymore.
Oh, man.
You know what I get grumpy at, actually?
This is such a first world problem.
But like when I had this is such a first world problem.
But when I have like a lot of packages to update and I pseudoed and then sometime during
the build of an AOR package or something, the pseudo time window is expired.
And then the package just sits there waiting while I reenter the password.
Usually because I've walked away, I come back and then it's timed out again.
And now it's asking for the root password.
And I'm like, I don't I don't know.
I never log in as root.
I set up some crazy password I generated like, oh, come on.
Can't you remember?
So I'm always tempted to just pseudo the whole session.
But then, of course, now now the package manager is yelling at me.
You really shouldn't run this as root.
To run this as root, you must do tack tack and come on.
It's like it's like my it's like the way my truck beeps at me when I'm driving down my
driveway to empty my garbage can.
It's like, you don't have your seatbelt on.
You don't have a seatbelt on.
I know.
It knows best.
Just trust the system.
Oh, man.
Speaking of the system, help break the system.
The duopoly that is the mobile industry.
Go over to linux.ting.com and sign up for mobile that makes sense.
This is a gift you could give because the SIM cards are like nine dollars.
The phones are they have a whole range of phones starting like 20 bucks after you go
to linux.ting.com all the way up to the Cadillacs.
Linux.ting.com will take twenty five dollars off a device or give you service credit in
twenty five dollars if you bring a phone or a tablet.
I was just this is going to be a funny story.
So this is I have just last week.
I have a new use for Ting, which I've had when I got ages ago, I got an old iPad like
air or something.
It's like the first iPad Air.
And this is what I'm using when I fly my DGI drone.
So I have a nice big screen to view the DGI drone on.
Here's the thing, Wes.
There are regions like where the studio is at that are restricted air and I have to sign
in and authorize myself before I can fly in that area.
And you've got to have data.
So here I am like a jerk out in the freezing temperatures with my drone and I can't take
off, I can't fly because I don't have I don't have data on my iPad.
So that took about 30 hot seconds to fix.
So I get a SIM card from Ting.
I put it in the iPad.
It's six dollars a month for the line.
I never pay for phone minutes.
I never pay for text messages.
And for the once a week, this thing has to hit the cellular tower to authorize a login
token.
I will pay for the, you know, I mean, I'm not I'm nothing basically.
And if I if I was a new customer, if I went to Linux.ting.com and I signed up for a device
like this, just like a tablet that has like a LTE connection as a backup, you probably
wouldn't even use that first twenty five dollars for a couple of months.
It's just six dollars for the line.
And then your usage on top of that.
And there's no contract nor the termination fee.
They got great customer service, CDMA and GSM networks to choose from.
I know it's so cool.
And they have great tech tips and tricks on their blog and often things about giveaways
and whatnot.
So check it out.
Go to Linux.ting.com.
You can find a device for a great value if you just want to get the same like I did.
I just you know, when I got the iPad ages ago, I was like, well, I want GPS.
I don't really care about the cellular, but I do want GPS.
Exactly.
And so I thought, well, maybe.
All right, fine.
I'll do it.
And then for years, since I've just sat there, never with a SIM card in it.
And then just a week ago, I'm like, you know what?
I got a reason.
It's six bucks a month.
Why not?
Now you're glad you got it.
I really am.
Yeah, it's so awesome.
You can just anything like that for your main phone to just a little device you want to
add data to Linux.ting.com.
And a big thanks to Ting for sponsoring the Unplugged Program.
Linux.ting.com.
I don't really I don't really have much to say about this next story other than what
does kind of jump out at me is the register is like like bipolar about its coverage when
it comes to Linus.
It's either Linus is the devil bringing rage to the Internet and scaring people away from
open source development because of his toad, or he's Santa Claus and he's saving Christmas.
It's literally the range for the register.
So this headline reads, Linus Torvalds releases the biggest ever Linux 4.9 and then saves
Christmas.
Now, wasn't it just a few headlines ago where Linus was the worst human being on the Internet?
Just what Christmas needed.
Yeah.
So Linus writes, I'm pretty sure this is the biggest release we've ever had.
It's definitely at least the biggest in the number of commits.
This was written on the kernel mailing list.
Other notable additions this time around include support for the Raspberry Pi Zero.
Hey.
Oh, plus another few 28 arm devices.
There's also things in there that you might be interested in, like the AMD GPU support
to enable the use of virtual displays from GPUs.
Hey, oh, William, we might be we might be in your you're hearing your activation key
from time to time.
I think that might have been you.
Anyways, here's the thing, Wes.
You got to hustle in because Torvalds has also confirmed a small change the development
process starting with Linux 4.10 in the form of a shorter than usual merge window.
Get ready, Wes.
These kernel patches got to get in.
The usual two week merge window will close on December 25th, which might look familiar
as Linus says, because it is Christmas Day.
And so if you're originally from Finland like he is, it's the day you relax.
Well, so might as well just might as well finish up that.
Yeah, I guess.
Right.
So because the real part, he says, happens on Christmas Eve.
I will certainly stop pulling on the 23rd at the latest.
So you better hurry up if you want to get your patches in.
Hurry up, Wes, because Christmas, Christmas is going to affect the merge window.
And this is the story I'm actually I mean, yeah, a new kernel.
This is the story I'm more excited about because it it really actually represents a four year
completion of a goal for crossover.
And it's a major milestone for wine.
Crossover has launched version 16.
Crossover is the code weavers product that gives you a graphical front end to set up
Windows applications with guides and scripts and downloaders.
It's a great product and it uses bottles to isolate them so you don't break your different
wine environments for different apps.
And they have finally I know you might think this is funny, but they finally after four
years nailed Office 2013 support, or at least damn close.
And I suppose if I was going to want to run Office on Linux, 2013, that would be fine.
That was the last good one.
So that's fine.
And the other big note here is it's shipping wine 2.0, which is I don't think technically
out.
Yeah.
Right.
I thought wine 2.0 was still in development, but they're shipping wine.
They're using a wine 2.0 code base.
Now this makes sense because a lot of what code weavers does goes upstream to the wine
project.
So they would be very likely maybe running on stuff that hasn't been accepted upstream
yet.
They say they're also going to be focusing on Android support and DirectX 11.
Yeah.
Android support and DirectX 11 in 2017.
It's pretty cool to see this development all going upstream and getting better.
And thankfully I don't have occasion to use wine that much in my day-to-day life.
But if you have office needs support for that kind of stuff, interop, this goes a long way.
Where does Crossover go once most of what we need to do is online?
If I can now run QuickBooks online, I don't really need Crossover as much to use QuickBooks
on the desktop.
And if I can now run Office in the web and Office on Google stuff, do I really need to
go bend over backwards to run Office 2013?
Absolutely in the business.
That's still got to be a use case.
But it feels like that's going to be...
It's diminishing, right?
So that must be why they're switching to Android, right?
I remember when they announced a Mac version, I was like, well, shit, there goes the Linux
version.
It's going to go down.
But really they've done a great job.
They've kept it really feature complete on both sides.
Yeah, totally.
So if anybody could do it, it's probably them.
But it does seem interesting that they're moving to Android.
And does that mean Windows applications on Android?
On Android?
Because I can't imagine that would be pleasant.
What Android device are they thinking of where that's a thing you need?
A tablet?
A laptop?
Is it just for...
Actually, I'll speculate a little bit here.
I bet you the way they do this is with a strict focus on certain games.
So they're going to bring a couple of Windows favorites to Android, and it'll be powered
by crossover, I bet.
It might even just be a completely wrapped solution.
So they'll have the individual app in the Play Store, and it's using a crossover backend
to run.
Huh?
How about that?
That would be interesting.
I think that was Chris's first 2017 prediction.
Yeah.
Wow.
I think I just did that.
You heard it here first, the Linux unplugged.
Yeah, I just wasted a good one for the predictions episode.
And then this one would be interesting for those of you running Core OS up on Digital
Ocean or on your own switch.
We don't know anyone who does that.
No, no, no.
This is huge, though.
Core OS developer Alex has announced that they're switching the name to Container Linux.
No more Core OS.
Container Linux by Core OS.
Yeah, they're doing a little Plasma desktop by KDE on us here.
The decision to rename the OS was made earlier during the Tectonic Summit 2016 event presented
by Core OS, and they also unveiled the next-gen Core OS Tectonic Enterprise Kubernetes solution
for deploying and managing containers at scale.
Does that mean anything to you?
I mean, if you have a lot of containers, you got to have something that tells them what
to do.
Yeah.
And they should be running on Container Linux.
It's hard to say still.
I'm not used to it.
All right.
I'm not huge on the name, but it definitely, it's like calling it what it does.
And so, hey, what's the best Linux to run containers on?
I hear containers are the big thing.
Well, there's Container Linux.
Container Linux, of course.
Just use it.
Sounds like they're trying to copy Noah's nick, that it's like Kernel Linux, Container
Linux.
Yeah, maybe.
Maybe.
I wonder how this is going to affect people that are running Core OS now, because Core
OS kind of gets these rolling updates.
Will you just be one day running Container Linux and no longer Core OS?
Like all the branding will just get refreshed?
Let's see OS release just changes.
I mean, it's just branding.
Yeah.
Yeah.
Yeah.
I know.
I agree.
It's an interesting change.
It's an obvious, like, try to play for...
I feel like there's been a lot of renames, rebrandings recently.
TrueOS from PCBSTD.
Yeah.
Yeah.
2016 has been rough for a lot of people, man.
It's been a rough year for a lot of people.
There's nobody in the lug there that's running Core OS, right?
Nobody, I would imagine.
I've played with it.
I've checked it out.
They've got some of the actually most interesting things about Container Linux is the technology
they've open sourced to make Container Linux possible, etcd and some of their other –
Yes, definitely.
Yeah.
That's where some of the cool stuff is.
They've also done some interesting work in trying to use like Secure Boot or TPMs
to help.
So you are deploying in your own data center that you can verify that only your software
is running on your hardware, which I think that's interesting.
Mm-hmm.
Mm-hmm.
EvolvOS to Solus.
But we don't mention that one.
No, we don't.
We don't mention EvolvOS.
It's a pretty good name, though.
Although, you know what?
I think Solus is growing on me more.
Yeah, me too.
I actually think I like Solus better.
So I think long term, I think it was a better play, Ike.
You know, speaking of Solus, we should talk about that.
We actually –
That's on the docket.
That is really what I'm looking forward to the most today because there is some ridiculous
shenanigans going down, and I'm not going to have it.
I'm not going to have this turn into some sort of community that's productive and with
users benefiting.
That's not good for the show.
That's what we have to think about here.
So let's take a moment before we go into that next subject.
I was just mentioning DigitalOcean, DigitalOcean.com.
Go there and use our promo code DOUNPLUGGED after you create an account and then apply
this to your balance and you get a $10 credit.
CoreOS, which is now Container Linux, up on DigitalOcean.
This was one of the first times I really got insight, too, after DigitalOcean became a
sponsor and how they work upstream with a project, and I was like really impressed by
that.
Obviously, other things that really get me about DigitalOcean is how fast you can spin
up a Linux server on demand when you want one, how great their interface is to manage
all of this, and the solidness in which the platform has performed for me now that I've
been using it for years.
Like, that's another thing about it that I don't really mention in these reads, but
it's – if you're new to it, you want to – well, how reliable is it?
But they're not a newcomer.
They've been doing this a while now.
They've gotten damn good at it.
They were one of the first, and it really has paid off for them.
They were one of the first early-ons to invest all SSDs back when – I mean, this is years
ago now when SSDs were extremely expensive, especially in the enterprise, and they still
are in the enterprise.
But DigitalOcean realized that this is a key part to the performance value.
And so that's – when I say you can get a droplet for $5 a month, that's all SSD-backed.
All of them have 40 gigabit E connection to the hypervisor.
They've got fast processors, and you can also price a rig for three cents an hour,
which is two gigs of RAM and multiple cores, and it's just phenomenal how fast it all
is when you combine that disk I.O. with that network connection, that great interface,
and the API, which allows you to do so many things from your phone or the command line
that just make you more productive.
I always joke about this, but, like, there's things I can do.
I just go to a tab and drop down a Guake terminal, and I can issue commands that start and stop
servers that make streams connect all over the place.
I don't – and I can do that from any of my machines that I have Guake on and an IRC
client.
And it's so awesome.
Just right at your fingertips.
It's so much faster than going to a web page and logging in.
It's just – I hit the tilde button, and I issue a command.
And if you're in the chat room before a show, you see me issue those commands.
Those are spinning up DigitalOcean droplets on the back end, and then they're kicking
off scripts connecting to the endpoints that we're streaming to using their API.
And I use it multiple times a day.
It's so brilliant.
And then you combine that with the speed, the reliability, the great price, and all
of the fantastic documentation, and the fact that they stay up to date with the latest
and greatest Linux distributions and FreeBSD.
And then they have block storage on top of it all, up to 16 terabytes of SSD back storage,
which is nuts.
And if you just want to even just mess around at all with LVM or ZFS or any kind of disk
orchestration system –
Go make yourself a nice big array, play with it for a couple hours.
Yeah, man.
I was watching a demo of a system that had – essentially, to the system, it appeared
to be 30 different block devices.
And that's – for pennies on the hour, that's a system that you couldn't replicate even
at some of the most high-end IT shops.
I can't pop one of those right now.
No.
No, it's been so awesome to be able to go there and then play with the latest and greatest
software too.
And if you're a total beginner, you can deploy an entire application stack with Linux installed
and all the stuff you want.
And if you're messing around with containers, there's really no better option out there.
DigitalOcean.com, use our promo code DOUNPLUGGED.
It's one word, you apply it to your account, you get a $10 credit, DigitalOcean.com.
And thanks, DigitalOcean, for sponsoring the unplugged shenanigans.
So I saw this Google Plus post from this Wimpy character – oh, I'm sorry, I think he goes
by Martin on Google Plus.
He says, I'm extremely pleased that Solace and Ubuntu Mate are deepening the collaboration,
so much so that I said these words in a recent This Week in Solace post.
Ubuntu Mate have been working to – oh, I should have Wimpy read this in his voice.
That's – why am I reading this?
Wimpy, do you have this post handy enough that you could read it for us in your own
Wimpy brand?
I could do it in a few seconds.
Yeah, that'd be good, because I could – why should I, if I could have it in your own voice?
This is a great – and really, it's a great thing that's happening here.
I've been teasing the whole episode.
But that's because we're excited.
I am very excited about this.
And I think that the choice is right on both accounts.
I will take this moment to pull up This Week in Solace that Wimpy is referencing, so we
can show the pretty images on the stream.
This is great.
Okay.
All right.
So the words that I said in This Week in Solace to Josh Strobel were, Ubuntu Mate have been
looking to replace the Mate menu, which was forked from Mint menu for some time.
It's clear the Brisk menu, despite being in the very early stages of development, is
the project that can achieve that, given the quality of work coming out of the Solace project.
Wow.
It's very complimentary towards Solace, and interesting that this is a departure from
a menu that has its heritage in Linux Mint, something that's – when I saw it in Ubuntu
Mate, I actually was glad to see it.
Because I like that menu a lot.
It's just – it does start – it is starting to feel old and slow.
But I don't understand what's happening here.
It's always been slow.
I don't – I thought –
It's comfortable.
Solace seems like cats and dogs to me, to a certain degree, because Solace is – I
don't know.
This feels like an odd couple pairing to me, for some reason.
I think it's fantastic.
You know, Ubuntu Mate had come from kind of a – what was before, what we thought we
could continue with, Solace kind of broke out on their own and does things their own
way, their own style.
It's kind of – that's kind of the schtick.
Shall I give you the backstory here?
And also, let's just touch on this.
Although I posted these things about Solace, this isn't the only collaboration that's
happening with Ubuntu Mate at the moment.
We've got Don Foray, who's just completed doing some icon work for us, as well, which
–
Not to interrupt, but Daniel is – Daniel is from Elementary OS.
And Daniel did work on – it's like the Humanity icon theme originally.
Right.
That's his history.
And so now he's working with the Mate project, just for people that don't know who Daniel
is.
Go ahead.
So I'll explain a bit of the backstory with Solace first.
So behind the scenes, what people don't see is that myself and Aiki are chatting fairly
frequently about stuff, and we have collaborated on things in the past.
What was started here by Aiki, we could have silently just let happen in the usual way
that we get on with stuff.
But recently, there's been an uptick of reporting in the online press about the divisions
within the Linux community and projects working in silos on separate stuff and not collaborating.
And that isn't actually how things work at all.
So I decided to use some of these collaborations that are happening recently to sort of counter
what we've been seeing in the press recently.
Nice.
So to point to that, when Aiki announced that he was going to make a Mate spin of Solace,
I contacted Aiki and said, here's all of the things I did in Ubuntu Mate to change the
branding.
And this is probably stuff that you'll want to do.
And I also watched his hackathon six hour video fest thing to see him actually do that
initial enablement of Mate and send him some feedback based on what I'd seen.
And I've also had some conversations with Josh as well around that.
And Aiki and I have also had some conversations about, so Aiki is also submitting some pull
requests to the Mate desktop to make notifications interactive.
That was a recent thing that Aiki did and nobody knows about that because we didn't
publicize it.
That's huge.
And, you know, Aiki and I've talked about some other areas where Aiki could contribute
to the Mate desktop where he has specific skills and know how that the Mate team lack.
And what I want to do is use the funding that the Ubuntu Mate project is generating to fund
these people in the community that are capable of doing good work that benefits Mate or Ubuntu
Mate.
So if you want good quality code and a modern contemporary menu that's well implemented,
you go to the guy that writes highly optimized code that understands the traditional desktop
metaphor.
That's Aiki at Solus.
And if you want artwork, the standout project in the open source community for aesthetics
and design is elementary.
So that's who you go and talk to.
So Ubuntu Mate is funding both those initiatives through our crowdfunding to improve Mate and
Ubuntu Mate, but also ensure that some money goes to those projects as well.
So they've got some money coming in to improve their projects and distributions as well.
So that's the whole thing.
So I think Aiki, that's me doing the complicated talky talky talky talky bit.
Yeah.
Now Aiki, which I love everything that Wimpy just said, but Aiki, don't you know better
to compete?
You're supposed to keep all of your best stuff for yourself and fork everything and relame
it and keep it and just bloat the project with all of these own little independent islands
of applications that you maintain.
Don't you understand how this works?
No.
Well, I mean, even me, I don't fork things.
Solus itself is independent and there's an immense value in competition.
So when we brought out the Solus Mate edition, there was a few things that we had to look
at.
There is what I like to think of the reference implementation of Mate, which is oddly ironic.
Wimpy and myself were talking about this earlier.
Ubuntu Mate does diverge from stock Mate quite a bit, but it's the Mate when you think about
it.
And we decided to compete with them because then you set the bar at a certain level.
Even if you're not there at the time, that's what you're aiming for.
And in doing so, you start to expose areas of weakness.
And for me, immediately, that was the menu.
So we were going to be putting out a new release of Solus, a new snapshot, but the menu, I
just couldn't get over my issues with it.
So I then investigated the menu fork, which is, I believe, Wimpy did that himself.
It basically took the existing menu and stripped out all the silliness, basically the hooks
into package management and things like that.
And even with all that done, it runs dog slow.
I cannot bring myself to do it because I know what that code looks like.
I've seen that over a few years.
So I just got to a point where it's like, well, you know, I've written menus before.
This can't be too difficult.
So I started writing it up.
And then, yeah, we agreed that the best thing to do is have that as something that's agnostic
because that's something Solus is really trying to focus on lately.
Make sure our software is agnostic, that everyone benefits from it.
And in the way that we're doing this, so Avanti Mate through Wimpy is funding the development
of Brisk.
And in turn, that money would then be able to fund projects that Solus does or Solus
gets invested in.
So you kind of have this, to use a real corporate term here, you have like a virtuous cycle
of growth.
Some synergy is happening there.
Nice one, Aiki.
Virtuous synergy.
Aiki, the other question I have to ask you is, in 2016, we do docs now.
Everything's docs.
This looks like a menu.
Can you explain yourself?
That's definitely a menu.
So for the Mate desktop, you want something that's basically a little bit traditional.
You want something that's nice, but by the same token, you don't want a full screen launcher.
You don't want docs.
You don't want dashes.
You want to hit your Windows key, sorry, Super key, and have a menu to come up, and then
you can just type.
Or if you want to filter by category, you can do that.
But you also want it to be fast because when I was testing the menu, when you're searching,
there's a visible lag while it filters the results.
It's not acceptable.
Not in 2016.
Oh, I am excited about this.
This is going to be my favorite launcher.
I can tell.
I've got an i7 Nokia and it was lagging.
Not acceptable.
How?
How?
There's 16 gigs of RAM.
And when Aiki and I were discussing this behind the scenes, you know, I explained I'd put as
much effort into the Mate menu as I was prepared to invest because as Aiki says, it's spaghetti
code and frankly, the hotspot in the loop that causes all of the lag in the Mint menu,
I can't decipher what the heck is going on there.
It's just impenetrable.
So I was never going to touch that.
And I've made a number of improvements to fix the way that it works and some integration.
And there's some bugs with it in the way that it hooks into comps and things.
And I simply can't fix that because of the wrong way things have been implemented there.
So when I saw this, we've investigated other menus and launchers along the way, but when
I saw this, I thought, I know this is going to be done right and we really need it.
That's the thing that people keep.
So along Ubuntu Mate's journey, there has been things you can identify as this is the
pain point for people.
And the pain point right now is people want a better advanced menu.
And here it is.
So Aiki's mentioned that we're offering some funding for this.
And also my other end of the sort of the social contract on this is that I will package Brisk
for Debian and Ubuntu and see that it gets into both the official archives for those.
And replace the Mate menu with Brisk menu as soon as Brisk menu covers all of the core
functionality of Mate menu.
So I really will be using Brisk soon then.
I really think this, the dock thing needs to go.
I have a few docks, but I do it more like the Unity launcher, a persistent sidebar.
Because I don't like this, am I going to have the screen space?
And I don't like this constant, like I need to resize my window to make everything show
up on the screen when I can just have a menu that I click and it drops down and it's just
not even an issue for me.
So Aiki, if I'm a Solace user, how does this work?
Is this something that you'll ship eventually in a certain point release?
Is this something that just rolls in?
Is it something that I could get my hands on soon or do I have to wait a while?
What do I expect as a Solace user for developments like this?
So I basically put in about just under 24 hours into this.
It started over the weekend and then back to work and whatnot.
But most of the core of it's actually done in terms of having the category system and
having the filtering and having it filter results by relevancy.
Because that was one of the problems we had in the budget menu where we put a hack in
to sort things by most used, but now it'll actually sort them by relevancy to your term.
So in terms of pace, I mean, that's going to be out real soon.
We'll go through a number of releases.
Our first validation one, we'll go into the next Solace MATE ISO, and then we'll continue
working with Martin just to make sure that these are the things that we want in there.
Things are working as expected.
So there are going to be a number of releases now that come out, and that's on GitHub like
you'd expect it to be.
And check in with Martin is going to be real simple because I just trust Aiki's judgment.
So what is it written in?
C.
Okay, so I was just, I was hoping to have a chance for us all to freak out when you
said Python.
I thought we were all going to have like a group like, oh, that's what we're replacing.
Yeah, I know.
That's what we're replacing.
I know.
I just, that's why I was, I thought if they're on the off chance, that would be a good gasping
moment.
But no, that makes sense.
Well, that is super cool.
There are other benefits to this menu as well.
So we've had a couple of people that freaked out on Google plus basically saying when you
first announced the Solus Mate edition, I knew this would detract resources and now
you're not.
Whoa, whoa, whoa, calm down a second.
In terms of doing this menu, it's already benefited Budgie, which is going to sound
really, really strange because it's not for Budgie, but it's already benefited and fixed
two bugs already because I'm doing a clean room implementation without none of the old
rust code.
And you know, things are actually being done if you like by the book and I'm not using
things that shouldn't be used like Valor and Python anyway.
So one of the bugs it's already managed to fix in Budgie was the icon task list.
It wasn't tracking the startup notifications of applications properly and canceling that
notification.
So in Budgie you'd have this timeout of 30 seconds with a spinny wheel of douchiness
as I've come to call it and it just wouldn't go away.
So it's like it's managed to fix that and now the run dialogue can properly track when
the application is fully launched and encloses itself.
And that's come from doing brisk menu.
So you know, like there's all these little things, it is kind of like throwing a stone
in a pond.
You don't quite know where it's going to land and there's all these ripples coming out.
You don't really know what they're going to affect, but it's already having positive effects
and it's only like essentially a day old in terms of code.
It sounds like things are proceeding very quickly.
I think those kinds of projects too are the perfect thing for getting the more people
talking about the distribution.
So even if it didn't actually end up fixing a single bug on the main desktop, it still
feels like it's good publicity for the project.
There is that too.
It's good to raise the profile of what are the emerging distributions, maybe the new
guard of distributions for the next era of desktop Linux.
Also it's important to point out you've talked about competition.
Ikey and I do compete with one another, and we also both compete with elementary desktop,
but all three distributions are talking to one another and collaborating with one another.
And the competition is healthy because it drives us forward and where we can share things
and where somebody solved a problem and we can all benefit from that, then we're moving
together and the landscape is improving for everybody.
And frankly, I don't really care if Ubuntu MATE is the dominant operating system because
it simply won't be.
But what I do care about is making sure that the MATE desktop remains relevant and has
a future and it's initiatives like this that will help ensure that.
And through other funding initiatives will also help ensure that we stay current with
other technologies that are coming along as well.
That's a great point.
Yeah, they're just making sure that people want to keep using the desktop and a menu
like this.
If you're listening, it's a really just nice straightforward drop down menu that you're
going to just recognize immediately.
In response to the sort of commands you'd expect.
So that's the brisk menu.
We'll have a link in the show notes if you want to check it out.
And to the point of publicity for the project, just before we move on, literally every time
we have a conversation like this, I'm like, I've got to get this on a machine somewhere.
It's time to try it out.
Yeah.
Yeah.
And I am just I am so married to the AUR for production purposes, because I sit down here
and I install three apps.
I'm like, all right, this is I try them on like this is the one I'm going to try.
This is the one I'm going to talk about today on on the next action show.
And just being able to bust it out like that super quick is key because sometimes I'm already
sitting down on the microphone just playing around on the live stream and that is a use.
Are you suggesting you need a dedicated machine on which you can test the two solos solos
distribution?
Yeah, well, that would be true.
I think he is saying that.
Well, I had a I actually thought it'd be a good job for the Apollo, but I had something
happen.
Well, we'll talk at the end of the show.
We'll make that happen.
So Chris, AUR, while it was something that was distinctly not possible in the past, and
personally, myself, I don't want to say that for mainstream users of solos, because we
provide binary repos, you can now provide your own binary repos and solos as well with
the new sol build tool.
You can run it on any Linux distribution that has overlay fs in the kernel.
And you can build solos packages from that.
You can also create your own solos repos using that tool from any Linux distribution.
Nice.
Okay, that seems like a big deal.
I was looking at the this week in solos number 40, and I saw you or Josh whoever wrote this,
Josh, I saw a mention in here about so build with a great gift that got my attention, but
it went over my head as to what it is.
You're telling me, what are you telling me exactly?
What are you?
What knowledge bomb are you dropping on me?
Because all of a sudden, I just got really excited.
Okay, so our old build system was Python, you know, we all make mistakes.
There is an initiative in solos to move away from Python because we basically want compiler
safety in all core tooling, which I think is a fair assertion to have.
And Python has no performance at all.
So we've rewritten in Go, Go is now the tooling language we use in solos.
It's hip, it's sexy, and it gets the job done.
So we've rewritten the whole thing in Go and basically reverted a lot of the design mistakes
from the past.
So now it basically you have this base image, if you think about it, kind of like in the
terms of Docker, except that this has done this longer than Docker has.
If you think about it, you've got a base image and each image is either unstable or the main
repo.
That insight has got a very minimal solar system, which is enough to have a compiler
in there basically.
So we store those in our server, you'd select the profile you want.
When that downloads, it puts that as the bottom layer, and it gives you a temporary working
root over the top of it.
So the bottom layer is never touched, you have this temporary root, which is using overlay
fs, then in a container, it's basically a container now.
It used to be just a troop, but actually uses namespaces as well now.
At the end of that environment, that will build the package entirely within the environment.
Networking is disabled as well, so you can't exit the sandbox.
You run as an unprivileged user inside the sandbox as well.
And once the build is done, it'll admit the packages into your current directory and re-own
them to your user.
So if you invoked it as pseudo, it'll take the original pseudo user and make them owned
as yours.
Oh, that's a nice touch.
If you run the index command, all of the packages you have in the current directory, it'll emit
an EO package index file, which is a repository.
The next step of that is creating a tool called binman, which is binary manager.
I'm not good at naming things, by the way, I'm not sure if you've noticed.
It's also a tooling goal to replace our repo management script, which again, is Python.
So what kind of workload are they looking at, say, if I wanted to install, I don't know,
is Telegram in the main binary repository?
Yeah.
Okay.
So if I put an application like Telegram or something like that, what would be the, for
the end user, what kind of process would that be for me to do that?
Yeah.
I mean, to build something like that, our package files are called package.yml.
They're YAML syntax.
So the very basic things our package have, you have a name, a source, a version, and
a release.
So you're describing the meta information of the package, and the source is where it
comes from.
So that can be a tarball, or it can be a Git source.
We got built in Git supports into SoulBuild now, and it knows how to do tags, branches,
commits, sub modules, and it'll handle all that stuff for you, and it'll create a systemwide
cache that you can reuse for the builds to speed them up.
And then you basically have three steps, which is set up, build, and install.
Any one of those can be missing, it doesn't matter, but you're going to have to have some
sort of process to say how to make a package.
And they kind of map to the configure, make, install of a normal package you would do.
But instead of that, they're basically bash scripts inside each one of those steps.
So you wouldn't be lost.
What we do is we spice it up by using macros, kind of like RPM, but better.
So we'll have these predefined variables, like you'll have the configure, but with a
percent sign, that will pass all of our configure tags to it, instead of just doing a dot slash
configure.
You can use some of the macros instead, and then boom, you have a package.
You can make a package in like 11 or 12 lines.
And then you can add...
This is pretty neat.
Well, what it does as well is it automatically split that package up for you.
So if you package a library, and let's say it's got some header files, and it's got some
package config files, you'll automatically gain a sub package called devel, and that
will automatically depend on the main package as well.
If you pass the emul32 option as yes, it will rebuild the 32-bit version of that library.
So you get a 32-bit and a 32-bit devel sub package on top of that.
So do you mean 32 and a 64?
Yeah.
So it has built-in emul32 support, so it'll build 64-bit and 32-bit at the same time.
That is pretty nice.
And not to diminish, that sounds like a really badass system, which has stuff in it that
only stuff that's getting popular now, like overlay OS, or overlay FS, and YAML files.
But honestly, my thought when you described all this is, it'd also just be nice if I could
just install a snap package.
That would be really nice too.
You could, but I mean, snap packages require containment, and they require containment
because of the fact you download them from the internet.
Something is in our repositories, it is implicitly trusted, so it does not need container, right?
So we ignore the container part of it because that's not relevant to our discussion.
It's about the simplicity and distribution of a package.
In terms of the simplicity and distribution of a package itself, why package and solbuild
win every single day?
Because we've got an advanced macro system, we've got advanced build system built into
the different types.
We support multi-lib out of the box and naturally.
You can pass optimization straight away to the package by setting the optimize flag.
We've got advanced macros, so in terms of the core of a package build, R1 is superior
to snap.
The only reason snap, quote, wins, end quote, anything, is because it's supposed to be distributed
in an untrusted fashion and downloaded in an untrusted fashion, so it has the container
aspect.
If you take away the container aspect, R1 is superior because it's meant for native packaging.
The advantage though, still remaining to snap might be developer adoption and availability
of software for me as an end user.
Sure, but the fact is, all of our software for building stuff, for doing the, what we're
calling basically the solus build machinery, obviously it's all saying open source, but
we're making it as agnostic as possible.
The reason being is we're sharing that build machinery with anyone who wants to use it,
and at some point we will also share that with partners.
So while they might not want to share their source code with us for us to build their
packages, if we share our build machinery with them and set them up, then they can build
them themselves without us even having to interfere and provide native packages.
And with the repository management tool we're now creating as well, that will automatically
maintain the repo, create the delta updates they need, automatically trim old update,
allow them to have unstable and stable branches.
So with our tooling now going to them, they will be able to-
Can I just interject very quickly?
Yeah, sure.
Ikey, some of what you've just described about snaps there, you're a little bit off, we'll
talk after and I'll fill you in.
That's fine, it's fine, it's absolutely fine.
And also there's some new stuff happening in snaps and I'll give you the inside skinny
because you might want to consider supporting some of the new snap features that are coming
along and I'll talk to you about it after.
Do you want to talk, you don't want to talk about it on the show?
No.
I want to know though.
I'll just say this.
Well stay tuned everyone.
I'll say this regarding all the stuff that Ikey just described is, note it down now folks
because look at it coming to a Linux distribution near you in probably about five years.
Maybe that should be, we're just talking about this cross distro work.
Maybe this is one of the next things that should lead over.
Yeah, the VHS versus Betamax thing, isn't it?
Mine is the superior technology in terms of building packages, right?
In terms of distribution, obviously snap wins because they have a center, they have everything,
but they're the common one that everyone wants and everyone is going to use.
Well I'll give you this.
It's a good track record of being ahead of where the puck is going and so there's probably
a lot of stuff.
We're not going to win on popularity at all there.
Snap has already won.
There is nowhere for us to win.
So I'm not, as much as I was originally completely opposed to snap, there comes a point where
you're going to have to say, this is what everyone's going to use.
It's not going to be flat back.
Snap has already beaten them.
Snap is already the thing.
I was going to give you a whole flat pack pitch, but all right, okay.
I was going to ask if you had a minute to talk about flat back, but that's fine.
What about AMP?
Oh, and there's others that are just not coming to the old noggin right now.
Anyway, I'll have a chat with Ike and give him some inside info later.
I want to know.
I like the inside info.
That is always good.
Yeah, I'll give you some good source Ike, no bother.
Well if it's good, then I'll integrate it.
Yeah, it sounds like it.
It sounds like it.
It's a position that is not impossible to be moved on, but it has to be worth it.
Well, that's interesting, and now makes me pine for SolOS at the beginning of the show.
Maybe next week we should both be running it.
Ooh, ooh.
All right, well, let's talk more about that on the post show.
I want to just briefly, because we went on for a while because I was fascinated by that
last topic, and I think rightfully so.
So let's take a moment and let's thank Linux Academy for sponsoring these shenanigans.
Linuxacademy.com slash unplugged is where you go to keep it going.
If you'd enjoy the conversations, the discussions, and want to hear more of us, please visit
our sponsors, linuxacademy.com slash unplugged, where you can sign up for a seven-day free
trial of the Linux Academy platform, where you can learn a heck of a lot more.
In fact, they've just launched two new courses, I just got an email about it today, it's super
wicked.
Check them out at linuxacademy.com slash unplugged, it is the place to learn about Linux and all
of the big infrastructure that runs on top of it, with hands-on, scenario-based labs,
instructor mentoring, nice servers that spin up when you need them, that match the courseware
you've chosen, like DistroWise, you SSH into it to get your work, they've got practice
exams so you can prepare for certs, and they've got tiny little nuggets when you don't have
a lot of time, you just want to go into a single topic, as well as schedule the availability
picking depending on your busy, busy schedule, but probably the biggest feature is the instructor
mentoring, full-time human instructors.
Also, by the way, I'll mention this, check out on their blog, Linux Academy is hiring
right now for instructor positions and for back-end positions, linuxacademy.com slash
unplugged is where you go to support this show and learn more about the Linux Academy
platform, they have new tools to help you promote the hard work you've done at Linux
Academy to an employer or a client or a school, and they have team accounts if you're a small
business or a big company or an enterprise that wants to have your staff learn up and
train up, linuxacademy.com slash unplugged, and a big thank you to Linux Academy for sponsoring
the Unplugged program, linuxacademy.com slash unplugged, and go check out the new courseware
they launched today.
Now what do you think?
I was thinking about Ubuntu Core when I saw this, and I actually, it feels like a competitive
response to Ubuntu Core.
Google is launching Android of Things, and they plan to juice it up by integrating it
in with all of their Google Play services, back-end cloud computing capabilities, Android
Studio and the Android SDK for development, and they're going to also partner with Intel
for the Edison, the NXP Pico, and the Raspberry guys for the Raspberry Pi 3 to get images,
as well as Belkin and Lifix and Honeywell and Wink and TP-Link and First Alert.
So they're going to work with Google on Weave and integrations with Google Assistant.
So the whole picture here is Android on the IoT device itself, Weave for the communications
protocol, and Google Assistant for the command and control.
That's the world of Android Things.
That's quite the ecosystem.
Yeah.
I wonder if this is Google, I know this sounds like it's maybe a little fanboy or something,
but I honestly would not be surprised if they tried Brillo and went, shit, that didn't work,
and these things that canonical this Ubuntu Core stuff over here, this looks like a good
idea.
We're starting to see people experiment with this.
Well, how could we jack that up?
How could we juice it up?
How do we make it Google-ified?
We've got the Play services.
We've got the Google compute infrastructure that we could bring into the mix.
We've got the Android SDK that's already massively deployed, and the Android Development Studio,
which has a huge user base, and they come in with a lot of territory advantages.
Yeah, a lot of things are going to be ported right over, already run there.
Does it feel like a response to any particular product to you, or does it just feel like
them still searching for a market?
Yeah, it seems kind of like a natural evolution.
They want to be here.
There's like the article talks about, there's a whole Apple HomeKit kind of stuff, and so
I could see where they'd want this, and I mean, Android's their platform, right?
And if they have another chance to push the Play Store, to push their reliance on the
Google-managed services, it seems like it's something they'd really be interested in doing.
I don't know what they mean when they write this in here, but they say something to the
effect of being able to also Google... What do they say?
One intro... Here it is.
I don't even know what this means.
This is from TechCrunch.
One interesting twist here is that Google will soon enable all the necessary infrastructure
to push Google's operating system updates and security fixes to these devices.
What does that mean?
Does that mean that they've introduced a product as it stands right now that doesn't support
getting updates?
Is that what that means?
It kind of sounds like it, yeah.
Like the updates is a new thing.
And you know what would be really great?
I mean, they're following the IoT tradition there, I think.
Yeah, you know what would be super awesome?
If Google come out and just be really clear and plain spoken about what the update policy
is for these types of devices and what the agreements are in place with the OEMs to make
sure that you can update these devices.
Is this more like Android Wear, where Google has a little more control?
Or is it like the Android we know and tolerate?
Even in Wear, where they promised that they would be able to update it directly, LG held
back my updates.
And I have to wait for my Wahey watch or whatever it is to get updates from them.
It's the same exact thing I have.
And in fact, when I had the LG Watch R, they rolled out a new version of Android Wear that
enabled Wi-Fi support.
But not for my model.
It had a Wi-Fi chip in there, but they didn't have the right driver in the image.
So my model didn't get Wi-Fi support.
So the same fragmentation issues in Android handsets are in Android Wear today.
So I have very little faith.
And what strikes me about this is one of the core principles of some of the competitors'
offerings, like Ubuntu Core, is transactional secure updates.
It's like part baked in.
It's like the core.
It's the foundation of the product.
Am I wrong, Wimpy?
But isn't it sort of a foundational aspect of Canonical's IoT approach?
Sorry, you're going to have to repeat the question.
I was distracted.
Updates for Ubuntu Core, is that a transactional update?
And wasn't that one of the core aspects of creating a software platform for devices like
this is making sure you can reliably update them?
Yes, that's correct.
And it appears, as of right now, the Android of Things IoT platform doesn't actually support
updating the software.
And that they're going to roll that out soon, they say.
And it seems to me that that's a fundamental design aspect of an operating system like
this.
Not like something you bolt on, but something you start with, especially in this space.
So to build on your point, when we started this show, I was running Nextcloud 10.
I've updated the snap to Nextcloud 11.
And I found one of the Nextcloud apps that isn't compatible with Nextcloud 10.
And I could choose to roll back now if I wanted to, because that one app doesn't work.
And in addition to rolling back the app, I could also choose to roll back all the data
associated with Nextcloud as well.
So you've got an and or option there.
This is going to be an interesting thing.
I'm sure Google will have some amount of success with this.
And it's kind of interesting to see what their focus is.
Obviously, at least here on this network, on this show, we talk a lot about IoT in terms
of security, in terms of security failings, in terms of how it makes Linux look, how maybe
it'll make Android look.
So it'll be interesting to see what evolves as Google's focus here.
Is it just ownership?
Is it just getting their services going?
Or is it doing things in a secure way that's better than what we have now?
There could be a legitimate competitive functionality to having the Google Compute Cloud behind
your IoT device.
Obviously, these things are pretty low power, low CPU.
So if you could do a huge computation job off on Google services and then send the result
to the device, that could be really, really competitive.
And something that would be harder for smaller players to match.
Yeah, at least depending on the pricing.
But Google seems to be willing to throw in some of this compute just as a, here you go,
here's some free compute.
Go ahead, have at it.
Anyways, we'll just watch it.
This is nothing today to really balk at.
But I do feel like the Ubuntu core solution is getting more and more traction.
You look at the next cloud box.
But there's also a lot of other boxes out there that are running it behind the scenes.
And you look at something like this and you think, Google must have noticed.
They must have noticed.
That was my thought when I saw it.
And we'll have a link in the show notes if you want to read more about their efforts
and maybe even how you could jump in.
And I guess we say goodbye to Brillo, which still exists in some form.
But it's not going to be the solution for us.
This show will go on in another form next week.
Join us, won't you?
Tuesdays over at jupiterbroadcasting.com slash live or just go right to jblive.tv and get
it converted to your local time at jupiterbroadcasting.com slash calendar.
Also you can submit content or open source projects we should talk about, updates and
feedback at linuxactionshow.reddit.com.
Also if you want to watch my biggest Linux switch disaster of all time.
Oh, it's embarrassing.
It's bad.
YouTube.com slash Chris Fisher.
That's my personal channel.
That was the last, the latest video I have posted over there, as well as about a dozen
other ones.
Which you can check out.
You can follow me on Twitter, at Chris Elias.
You're at Westpain, aren't you?
That's a great Twitter handle.
Oh, thank you, sir.
That's nice.
You really nabbed a good one.
At Jupiter signal for the network and we'll see you right back here next week.
I've never installed Linux.
Get it out of here.
Thank you, MumbleRoop.
You guys are wonderful.
Yeah.
Love your faces.
Thank you for being here and thank you for participating and a special thank you to Ike
and Wimpy for doing a bunch of the heavy lifting this week.
That was good discussion.
No problemo.
Really liked that.
Like you stood about.
Snap into a slim cloud.
That's funny.
That is funny.
What's that?
What's this?
Oh, what about, what about snap into a next cloud?
That's not bad either.
Snap install next cloud.
Android of things.
That's also not bad.
I would have dropped that last topic if I could have got Wimpy to talk about it, whatever
it was on air.
I would have dropped the Android topic like it was hot.
The only reason I'm reluctant is because I'm not sure if it's public information yet.
It will be very soon.
So when it all comes to pass, I'll explain it, but I'll explain to Ike because it's of
relevance to some of the points he was making earlier and he's a distro maintainer and we
want distro maintainers to think thoughtfully about supporting snaps.
Sure.
I bet you do.
That would be great.
It's a super cool thing.
Yeah.
Yeah.
And you know, I'll tell you more at some point in the future.
I think, I think it's, it could be the great equalizer for distributions like Solus.
If it got enough adoption.
Look, I mean, you've got to look at it from my angle here, right?
From my perspective, I don't have the package of problems and people have tried to call
me out on this before and have failed.
From my perspective, snap is something that came into existence to address the limitations
in the host operating systems that created them and nobody can deny that because every
statement you see about snap, it was so hard to maintain the Debian package.
I created Y package and solbuild and all the tolens around solus so that I didn't have
that problem.
It's very hard for me to adopt something based purely on when it, it was developed on the
premise of a limitation that I don't have.
So it really takes some serious convincing.
Yeah.
But see, I look at it from the other end from a, there are certain, there are, I would,
I mean, if I knew today that all, anything I ever wanted to install would be a download
and a double click, I would switch because for me, that time savings, yeah, I know.
But for me that time savings, because I am window shopping essentially, not for windows,
but I am, I'm window shopping software.
I'm downloading three or four things and I'm trying them out.
And so yeah, I, for me, like the difference between like, like if I could grab a snap
of the new Lightworks beta with the new UI, I would be trying it out today.
But because I have to wait for it to land in the different package managers, I'll try
it out in a couple of weeks.
You know, I'm not as motivated by that point.
The news is old.
It's just.
If only I was going out for coffee with the product manager for Lightworks tomorrow morning.
That was a thing.
Yeah.
Yeah.
That would be amazing really.
If you could give them a snap.
I know.
I know.
If, if he was working in the same town as me, wouldn't that be incredible?
Yeah.
That would be really handy.
But I follow what you're saying too, Ike.
Like, I don't really think it's, it's too, there's not at a point where it's hurting
you not to, to have it.
So it's, you have time for it.
It would hurt me to have it though.
I mean, I kind of think we're trying to like, you know, shoot an ant with a bazooka here
because the problem you're talking about is one that definitely exists.
There is a continuous integration problem with getting new software.
There are some, if we use Windows terms here, there are some titles that we'd really like
to get access to.
We want the latest Kdenlive.
We want the latest OpenShort, you know, well, maybe not OpenShort, but you know, there,
there are some things out there we really want right away, but the, the, the way that
we're going about it is a model from the early two thousands and late nineties, which was
double click this file and install it on your system.
The world has moved on from then and people are used to using software centers.
You look at Windows and you have the Windows store.
You go on Android, you have the Android store.
You go on Mac OS, you have a store.
So I disagree with the premise of double clicking and downloading from a site.
I know it probably can be integrated into a store afterwards, but I'm having a hard
time being sold on this.
Okay.
So we'll, we'll talk about this in more detail, but with regards to the store versus download
from a vendor website, snaps do both.
And there is a store implementation maintained by Canonical, but you can replace that with
your own store implementation.
And there is a reference store on GitHub that you can use if you want to do your own backend.
So both, both paradigms are supported there.
You're quite correct that one of the things that snaps addresses is the complexity of
creating Debian packages, absolutely.
And I also agree because I've looked at the packaging format that you use, snaps and EOPKGs
are very similar in the way that they're constructed.
They're both YAML files.
They contain a lot of the same stanzas, very similar, but there are some other benefits
and there's some other little things that are coming on stream and I'll have a chat
to you about that and see if I can convince you that it's might, maybe worth a second
consideration at some point for Solus.
I mean, I'm not hating it on the sake for hating it because at the end of the day, it's
not just about me.
It's about the Solus users and their access to software, but I've got to do it based on
technical merit and not the original.
I like that.
I like that as well.
I think it's refreshing.
Yeah, it is.
I also have to think about the maintainability of an upstream.
Now, I don't like to say this and I really don't mean this is in any way disrespectful.
Canonical do have a history of dropping projects after a couple of years as a lack of interest.
I'm not innocent myself.
I've done the same.
Now, I'm kind of concerned to see how Snap will play out and as to the longevity of it.
I do think it's got more of a future than Flatpak because I think Flatpak went about
it the wrong way, bonding of runtimes and basically overriding the operating system
vendor.
It feels like, don't you get the sense that Canonical's, I mean, they're pretty committed.
Out of all the things they've launched in years, this feels like one that company-wide,
they're sort of a line behind.
Yeah.
I mean, it does.
The signs are there.
The signs are positive and I am starting to come around to it more, but I just need that
little something to push me over.
That's fair, dude.
Don't get me wrong.
I'm quite happy to admit when I'm wrong and when that does happen, I like to be wrong.
Imagine yourself at the edge of a cliff with a fluffy cushion beneath and there is me with
a tickling stick gently coaxing you to the edge of the cliff.
Come on.
Come on.
Are you fine?
Well, I mean, once I am pushed over and it's, at this point, it's become an inevitable.
I'm just doing the last childish resistance.
Yeah.
Well, you're still, I mean, it's natural.
It's natural.
I like to think, I like to hear about the thought that goes in behind the distro, too.
That's nice.
And there's some good adversarial process going on.
Yeah, but I mean, once it happens, I'm quite happy to stick it in the top or something.
I mean, I half an hour ago were, you know, singing the chorus from the same song sheet.
And now, now you can see us slightly offset from one another, slightly grating, you know.
So this this competitive disagreement can happen cordially and it and it's fine.
Yeah.
Yeah.
I just I wish that some of the online press could maybe hear this discussion that Ike
and I are having now where we're agreeing to disagree to some extent, but we're prepared
to talk about it a bit more after the fact.
And and also just stop saying that open source projects are fiercely competing with one another
at the expense of collaboration, because it's simply not true that there is so much collaboration
that silently goes on in the background between large organizations and small projects and
the commentators simply don't appreciate that it's happening.
So hopefully this evening or this afternoon or this morning, however you're listening
to this, we've pulled back the curtain on that a little, just a little bit and let you
know that actually, when you say these desktop environments are not working together and
are not pulling in the same direction, we really are, because the one thing we all want
is quality Linux desktops to emerge to build a user base and pull more users and gravity
to our projects.
My sense is it'll have to be a sustained campaign of of continually highlighting in a way that
is genuine and also interesting, because I feel like that narrative comes from the need
to write a quippy register headline or something like that.
That's where some of that narrative comes from, is the way that the model of that business
is so click driven.
We all need each other at the end of the day.
As much as we might all compete with each other, we need each other to be doing well,
because then it keeps us on our best form, it forces us to look at ourselves, which sometimes
is very hard.
You don't want to look at yourself, but it forces us to, and we have to keep improving.
Once we do that, whoever you're competing with, they've got to do the same thing as
well.
Now, some people are going to look back on this conversation and in a couple of weeks,
someone would join on the Solus channel and said, I heard you, you was on Linux unplugged,
you was very angry, because people don't understand this.
We have to disagree.
We can't agree on everything.
There are things we are going to agree on, but if we didn't disagree, then everyone gets
a sub-powered watered down product with a unified vision.
We need those competing things.
We need those things.
You need to create friction to create fire.
That's what we're doing.
This is going to sound very odd, but we all rub against each other in slightly the wrong
ways.
When you create a fire, we need to move Linux forward.
We all think we're right.
We all think that our direct direction is the right one, but we're all building on common
technologies.
That's the thing.
That is really the core thing.
That's why it is so funny that I think it's lazy, too.
It's really easy to see a new application announced, or a new desktop environment announced,
or a new distribution announced, and it's super easy to go, oh, well, look at us just
spinning our wheels again, and not taking the time to go, well, what are they doing
that's new and actually interesting?
Because a lot of times, okay, legitimately, a lot of times there are people that are just
sort of maybe they're rage forking, and that has contributed to this as well, but a lot
of times there's real actual good work happening, and it's not just about forks.
It's about sharing code.
It's about working together.
It's about building on common technologies, and that's not the discussion.
The problem is that every time there is a fork, it's often portrayed as a rage fork
without necessarily understanding the motivations behind doing that.
Amartey was perceived as that when that was forked from GNOME 2.
Now it was forked out of frustration, but it was also forked to preserve a desktop paradigm
that was well thought out and well tested, and I would like to see that desktop paradigm
preserved.
Yeah.
Ike also talked about when we see other desktops doing things and it drives us forward.
When I saw Daniel in the summer and he showed me what at that time was an alpha or a beta
of elementary and the work they'd done on high DPI, I realized just how far behind Amartey
was in respect to high DPI because they really stepped on considerably, considering that
they were based on a desktop environment that didn't have all of the high DPI stuff at the
outset and they've had to implement it, and Amartey's coming from the same position, unlike
Ike who started in a position of having a lot of that stuff in place in the first place.
So I realized that in order to keep up with elementary, high DPI is a top priority for
the Amartey desktop.
Oh yeah.
Preach it.
I'm quite happy to acknowledge that elementary's got the superior solution there and so is
Budgie right now, but we'll catch up and we'll catch up because I can learn and we can learn
from Budgie and Pantheon.
Yeah.
I love it.
Well Budgie cheated.
One last confession to actually add there, speaking of Budgie, speaking of desktop and
speaking of Brisk, so one recommendation I would like to make to any budding developer
who's listening to us now, I would say that I'm quite an experienced software engineer
by now.
I've been doing this for a while.
When I started Budgie there was a lot of things I could get away with because I was making
it for Solus and all of that, every single one of those decisions has come back to bite
me on the arse in the most horrific and splendid of ways.
That's a very honest review.
I bet it is.
With the Brisk menu I started out knowing almost immediately that this is going to be
something that not just Solus is going to be using this.
I can't get away with gotten cornered here and as a result I'm doing it properly and
I had to go digging through the source code of GTK for some very, very badly documented
functions they claim to get and instead do and send and then return.
So it forced me to rethink how I was doing things and to truly investigate and that's
how Budgie benefited because I actually went and did it properly because I knew it would
have to be something that would stand up, not just on Solus where I can get away with
including it, but everywhere.
So if you start with that mindset then everybody benefits and you create better software.
And the other way that Solus and Budgie will benefit from this is that Ubuntu Mate are
embarking on a multi-month funding of this development work and that money iKey can use
to invest into whatever initiatives are important to the Solus project.
Which is money...
Alt-Tab, Alt-Tab, please fix it.
Oh, I don't remember which machine I have set aside, but I do think I have a machine
I could put Solus on.
I think something happened to the Apollo though.
I don't remember what, but both my XPS and my Apollo are not currently booting.
That is some bad luck.
What did you do to it?
I think the Apollo...
It's not that Fedora you were installing, wasn't it?
Yeah, I think the Apollo was the Fedora 25 install that broke.
I think that's just a software thing, but I can't remember.
And then the XPS, I think my little m.drive died on me, which just drives me crazy because
that's like the second one I've lost now.
But the XPS...
You're making notes as to what manufacturers are behind these drives.
Yeah, you're right.
But we need notes for a rant later.
I'm a little disappointed though, because I feel like the XPS 13 with that infinity
display would just make such a beautiful computer to run Solus on.
I would really like...
I'm just so sick of dealing with broken drives.
Yeah, it's so frustrating.
With what?
What are you sick with dealing with?
I just have machines...
Not only did I have the m.die in the XPS, and now for whatever reason the Apollo isn't booting,
but also my OG, my first Bonobo, won't turn on now.
And it just dies.
Even if I remove the battery.
So I've actually had three laptops die on me recently.
That's tragic.
Man.
Yeah, I know.
So if you've got dying laptops, what sort of laptop is there a gap for in your laptop
requirements right now?
The range.
The only laptop I have that I can reload right now, ironically, is the Librem.
That's the one machine...
Hey!
It's finally coming in useful.
Took a while.
So that's my...
And then I have the MacBook running Arch, which has now become my daily driver now though.
Which is not ideal, because the battery life is really horrendous on that thing.
And the other thing about the MacBook Pro that's really frustrating is just browsing
the web causes the fans to go on that thing.
And under Mac OS, it's silent.
And then so under Linux, having the fans run all the time, but it still feels warm to the
touch.
Like it just, it's all off.
It's all off.
Slowly melting.
Yeah, it feels like it.
Like I'm slowly killing my MacBook.
So yeah.
But it's a quad core with a terabyte SSD.
And a beautiful screen.
Yeah.
So it's kind of my go to, like, I'm going to be doing some work and I want a 15 inch
screen.
Right.
And you can plug in.
Describe the laptop that you want right now.
It ranges.
I mean, it really does.
It depends on the job.
I think there's a spot for something like the XPS.
But I was kind of, after talking to you about the XPS 15, I was also kind of thinking about
maybe making that the next Linux box.
I don't know.
I'm all over the place, really.
Because I could, I could make use out of a really high end machine doing OBS and shenanigans
like that.
Or I could make use out of a little low end machine doing show prep and web browsing.
So it's sort of.
And what about something to test distros on?
Have you got a machine to do that or is that a machine that you need?
That's the Librem right now.
And the downside to that, and it's nice because I can, I can test Intel drivers, but like
with Fedora and often there's like a little, there's little issues with the NVIDIA driver
that I just don't know.
I currently don't have a machine to test on because that was my Bonobo, but now the Bonobo
don't boot.
Bonobo don't boot.
Yeah.
Yeah.
But I was able to play around with Wayland.
So it sort of worked out.
Yeah.
It's hard because you kind of need a diverse, a diverse set of chipsets.
Yeah.
Yeah.
Kind of need a lot because I.
Yeah, exactly.
I don't usually have anything in the very high end performance range right now, but
most.
You don't have any AMD.
No, but most things in the mid range are usually powerful enough these days.
I'm all over the place wimpy.
You know, you can't nail me down.
I know.
Yeah.
It's a, this is a tricky conversation.
Yeah.
Well, cause basically there's a spot in the lineup for all types of hardware.
Because if you think about it in terms of review, both are, I like to, I would like
to review on the high end of hardware and on the low end.
So yeah.
For my daily use myself, I like something as powerful as possible.
I would say the Apollo probably falls a little short as a two core.
You want four?
Yeah.
But then I also don't want it to be.
Well, you want battery life.
Yeah.
And you don't want it to be loud.
Yeah.
Yeah.
I'm all over the place.
I've, I still use my Apollo as my lightweight, you know, go, go, go out and use computer.
But when I need to travel and I need a workhorse to do work on, but I don't want something
heavy, I've got a fully full tilt, um, XPS 13.
Oh 13.
Hmm.
Hmm.
Yeah.
Cause that's, that's small enough and light enough that I can stick it in my backpack.
Oh, for sure.
And pack my pants and socks and my toothbrush and toothpaste and all the rest of it.
Yep.
Yep.
Yep.
Um, but if I want to, you know, just, um, go down to the, uh, the pub on a Saturday
afternoon and do some work, then, uh, I take the Apollo because that's got a larger, a
larger battery screen.
And it's lighter weight and uh, yeah, the battery actually lasts longer because the
XPS 13 is a UHD display, so it burns through the battery a bit faster.
So yeah, so you know, it's, it's difficult.
So I, I found that I need about five laptops, uh, find all of the niches that I need.
Yeah.
That's kind of what I hate to say, but like if I'm doing reviews and sometimes I'm doing
really high end production stuff and sometimes I'm just browsing the web, reading emails
and there's a different machine.
So my, my sort of test machine is the XPS 15 because it's got both Intel embedded and
Nvidia discrete graphics.
Yeah.
Yeah.
So you get to test both on that and it's got a 4k screen and all the rest.
That's why I was kind of looking at, you can do more than 16 gigs of Ram too, right?
You can do up to like 32.
I've got 32 in mine.
Yeah.
That's, that's awesome.
That's hitting the sweet spot for me.
And how is it thinness and heavy and weight wise?
Uh, it's great.
I've got it, I've got it just on the floor here.
It's yeah, it's, it's, um, it's not, it's not heavy.
It's about the same, uh, thickness, slightly thicker than the XPS 13 only slightly.
Yeah.
It's got the same keyboard as the XPS 13, exactly the same.
Uh, it's just got a wider, you know, um, palm rest area.
Is the trackpad bigger?
Is the trackpad?
It's the same.
No, it's, uh, that's a good question.
I haven't measured it, but it's, it's big and no it's much, but actually it's much bigger
thinking about it.
Yeah.
It's much bigger.
Yeah.
And you know, the other nice thing about that is I'm pretty sure Dell still accepts Bitcoin.
So that's very appealing.
Yeah.
I bought mine with Bitcoin.
Wimpy, are you playing it all with LibreVault or what's, uh, what's your latest experiments
in syncing?
Not, not recently.
So I was using it, oh, I don't know, some months ago, three, four months ago, uh, did
a little test, but what I was using it for, I've switched to a different tool so I don't
have it right now.
Uh, have I heard of the tool?
Sorry?
Have I heard of the tool you switched to?
Um, probably not.
It's called, it's called Yadim, Y-A-D-M.
I haven't, I haven't either.
It's yet another dot manager, uh, so it's a dot file manager and this is what I use to
manage my whole roaming profile thing now.
And Wes, you want this in your life.
It's amazing.
That does sound amazing.
I feel like we had, that might've been, we had a dot file manager on our picks runner
up list for last recently and I don't think we put it in the show.
So it works like Git, instead of, instead of typing Git, you type Yadim, um, and then
all of the Git, you know, commands follow as, as you would expect.
I see.
So it kind of just wraps it.
Yeah.
Uh, but you can, it's got crypting in there as well.
So for example, anything sensitive that you want in your dot files, you can encrypt those
as when you store them in the Git repository, uh, and then decrypt them when you pull them
out.
This is the dream.
All of my, um, my VPN keys and things are in my dot file Git repository, but all of
that stuff's encrypted.
So what are you not syncing the config of?
Is there any application that's caused too much trouble or it's not worth it?
Is there anything you just don't sync?
No, pretty much everything that I rely on is synced either the dot file that it uses
directly or I export certain, uh, G setting branches for applications and then have a
script.
So in my Yadim dot files, I also have a scripts directory and one of those is to restore those,
um, decomp dumps so that, um, when I check out that I can run a script and everything
just comes back.
