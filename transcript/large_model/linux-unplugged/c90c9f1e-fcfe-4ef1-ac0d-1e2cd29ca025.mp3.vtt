WEBVTT

00:00.000 --> 00:02.880
Happy end of life for Windows 7 day, Wes.

00:02.880 --> 00:05.560
Microsoft sent us a whole bunch of new Linux users

00:05.560 --> 00:06.920
for our return show.

00:06.920 --> 00:08.880
You don't think they'll upgrade to Windows 10?

00:08.880 --> 00:09.640
I don't know.

00:09.640 --> 00:10.840
I was looking this up.

00:10.840 --> 00:13.660
How many people are actually still using Windows 7?

00:13.660 --> 00:16.600
And over at Computer World, they have an article that says,

00:16.600 --> 00:20.520
they ran an estimation, and they say on January 1, 2021,

00:20.520 --> 00:22.600
so a year from now, there will still

00:22.600 --> 00:26.480
be 18.7 of all Windows users running Windows 7, which

00:26.480 --> 00:30.920
is approximately 281 million machines.

00:30.920 --> 00:33.680
Something tells me they're not going to Windows 10.

00:33.680 --> 00:35.720
Pretty sure those folks are all going to openBSD.

00:35.720 --> 00:36.220
Yeah.

00:36.220 --> 00:36.720
Yeah.

00:36.720 --> 00:37.220
Yeah.

00:37.220 --> 00:37.720
Yeah.

00:37.720 --> 00:38.220
Yeah.

00:38.220 --> 00:38.720
Yeah.

00:38.720 --> 00:39.220
Yeah.

00:39.220 --> 00:39.720
Yeah.

00:39.720 --> 00:40.220
Yeah.

00:40.220 --> 00:40.720
Yeah.

00:40.720 --> 00:41.220
Yeah.

00:41.220 --> 00:41.720
Yeah.

00:41.720 --> 00:42.220
Yeah.

00:42.220 --> 00:42.720
Yeah.

00:42.720 --> 00:43.220
Yeah.

00:43.220 --> 00:43.720
Yeah.

00:43.720 --> 00:44.220
Yeah.

00:44.220 --> 00:44.720
Yeah.

00:44.720 --> 00:45.400
Yeah.

00:45.400 --> 00:47.960
Hello, friends, and welcome into the Unplugged program.

00:47.960 --> 00:48.840
My name is Chris.

00:48.840 --> 00:49.760
My name is Wes.

00:49.760 --> 00:51.380
Hello, Wes.

00:51.380 --> 00:53.720
If I sound a little different out there, dear audience,

00:53.720 --> 00:56.680
today, it's because I am a little different today.

00:56.680 --> 01:00.960
I'm on a remote snow setup using my emergency podcasting

01:00.960 --> 01:04.320
pack that I carry with me like every good podcaster should.

01:04.320 --> 01:06.680
So if I sound a little different, that's why.

01:06.680 --> 01:11.240
But nevertheless, we still have a great episode today.

01:11.240 --> 01:13.320
Jim Salter from TechSnap and Ars Technica

01:13.320 --> 01:16.560
and other places online, like anywhere you want to find them,

01:16.560 --> 01:17.240
is joining us.

01:17.240 --> 01:18.120
Hello, Jim.

01:18.120 --> 01:18.880
What's up?

01:18.880 --> 01:19.880
Hey, Jim.

01:19.880 --> 01:22.840
Now, you must be here because we're talking about a ZFS topic

01:22.840 --> 01:24.000
today.

01:24.000 --> 01:25.480
You can't keep me away.

01:25.480 --> 01:26.720
Well, thank you for joining us.

01:26.720 --> 01:29.080
We'll be getting to, in our estimation,

01:29.080 --> 01:32.120
why Linus has gotten a few things wrong about ZFS

01:32.120 --> 01:32.880
recently.

01:32.880 --> 01:36.040
We'll explain it to you and also what he's gotten right.

01:36.040 --> 01:38.240
We've gotten some community news that we're

01:38.240 --> 01:39.700
going to get to, something that's

01:39.700 --> 01:43.240
a little more straight from the headlines type inspired.

01:43.240 --> 01:45.360
But before all of that, we've got

01:45.360 --> 01:47.360
to say holler to our virtual lug.

01:47.360 --> 01:49.280
Time appropriate greetings, Mumble Room.

01:49.280 --> 01:49.780
Hello.

01:49.780 --> 01:50.280
Hello.

01:50.280 --> 01:50.780
Hello.

01:50.780 --> 01:52.000
What's up?

01:52.000 --> 01:52.800
Hello.

01:52.800 --> 01:55.040
I can hear that we have a really good showing today,

01:55.040 --> 01:57.600
but I'm flying blind in my remote setup.

01:57.600 --> 02:00.040
So I know it's like around a dozen people,

02:00.040 --> 02:01.280
so it's good to see everybody.

02:01.280 --> 02:02.120
I think you're just going to have

02:02.120 --> 02:04.520
to find out as they make their erudite comments.

02:04.520 --> 02:07.280
Yeah, tag me in the chat room with the old mumskies

02:07.280 --> 02:09.560
and let me know if you want to jump in since I can't really

02:09.560 --> 02:12.080
monitor the room today.

02:12.080 --> 02:14.800
But yeah, I am snowed in.

02:14.800 --> 02:18.220
And I say that kind of like with a kind of laugh about it

02:18.220 --> 02:20.640
because it's not like there's a lot of snow.

02:20.640 --> 02:23.560
I posted a quick like 20 second video

02:23.560 --> 02:25.920
on my YouTube channel, which I have linked in the show notes

02:25.920 --> 02:27.720
if you want to see what I'm talking about.

02:27.720 --> 02:30.120
I mean, I'm not trying to overstate what's going on here.

02:30.120 --> 02:33.520
It's not like it's horrible, but for the Seattle area,

02:33.520 --> 02:35.720
it's snowpocalypse 2020.

02:35.720 --> 02:37.720
And it's combined with a couple of days

02:37.720 --> 02:39.720
of staying below freezing.

02:39.720 --> 02:43.720
And so the roads are just trash and my water's frozen,

02:43.720 --> 02:45.480
which happens from time to time.

02:45.480 --> 02:48.120
But more importantly, people do not

02:48.120 --> 02:49.520
know how to drive around here.

02:49.520 --> 02:52.840
And an area of the freeway that I transit through,

02:52.840 --> 02:56.120
it's the exit right before the studio exit,

02:56.120 --> 02:58.920
has just seen nothing but accidents today.

02:58.920 --> 03:01.680
There was a car fire around 5 AM.

03:01.680 --> 03:04.120
There was a pile up that caused.

03:04.120 --> 03:07.220
And then spooky enough, around the time

03:07.220 --> 03:08.840
I would have been heading into the studio

03:08.840 --> 03:10.920
had I decided to brave the snow, there

03:10.920 --> 03:14.640
was a five car pile up and a semi collision

03:14.640 --> 03:17.360
in that exact spot.

03:17.360 --> 03:20.280
And so I thought, you know what?

03:20.280 --> 03:23.080
I'll just podcast from the snow in the RV today.

03:23.080 --> 03:24.400
Sounds much safer.

03:24.400 --> 03:26.440
Yeah, it's much safer.

03:26.440 --> 03:30.800
And it means it's kind of an interesting slow ramp

03:30.800 --> 03:33.920
back because the show has been on break for the last three

03:33.920 --> 03:36.360
weeks when we've been running our holiday specials.

03:36.360 --> 03:41.200
So this is our first episode back since before Christmas.

03:41.200 --> 03:43.640
And it's like a slow ramp up.

03:43.640 --> 03:44.800
It's kind of nice in a way.

03:44.800 --> 03:45.680
It's a little different.

03:45.680 --> 03:46.840
It's great to be back.

03:46.840 --> 03:50.120
Meanwhile, while we're dealing with the snow,

03:50.120 --> 03:51.640
the rest of the tech industry has

03:51.640 --> 03:54.720
been dealing with CES, the Consumer Electronics

03:54.720 --> 03:58.200
Show that happens every single year in Vegas.

03:58.200 --> 04:00.600
And we don't talk about it a lot because there's not

04:00.600 --> 04:04.320
a lot of pure Linux and open source stuff going on there.

04:04.320 --> 04:09.000
But as you would expect, there's a lot of gadgets running Linux.

04:09.000 --> 04:11.960
But some of them have been a little more upfront,

04:11.960 --> 04:14.440
a little more obvious about the fact that they're using Linux.

04:14.440 --> 04:16.600
They're sort of proudly using Linux.

04:16.600 --> 04:18.680
And surprisingly enough, Wes, it's

04:18.680 --> 04:21.440
the devices that seem to be using the automotive grade

04:21.440 --> 04:24.400
Linux project from the Linux Foundation.

04:24.400 --> 04:26.440
Subaru made a big announcement this week

04:26.440 --> 04:28.880
that they're going to do all of their infotainment systems

04:28.880 --> 04:30.280
using Linux.

04:30.280 --> 04:32.400
So they'll be rolling it out initially

04:32.400 --> 04:35.640
in the Subaru Outback and Legacy booth vehicles.

04:35.640 --> 04:37.840
But there's a bunch of others that already have announced

04:37.840 --> 04:38.520
support as well.

04:38.520 --> 04:43.040
Yeah, including the 2020 Toyota RAV4 and Mazda CX-30,

04:43.040 --> 04:46.840
both powered by automotive grade Linux software.

04:46.840 --> 04:49.480
Apparently, there were 20 plus open source demos at the Linux

04:49.480 --> 04:51.200
Foundation booth this year.

04:51.200 --> 04:52.440
Yeah, I did a little digging.

04:52.440 --> 04:55.800
And there's almost a dozen different manufacturers now

04:55.800 --> 04:57.800
that are on board with automotive grade Linux.

04:57.800 --> 05:01.720
And it's like legitimate companies that are in on this.

05:01.720 --> 05:04.640
We're going to actually start seeing real cars

05:04.640 --> 05:08.640
that people buy running automotive grade Linux.

05:08.640 --> 05:11.760
And they had over 20 different open source software demos

05:11.760 --> 05:12.840
running on this thing.

05:12.840 --> 05:14.000
Yeah, that's pretty neat.

05:14.000 --> 05:16.080
And maybe that's where some of the advantages.

05:16.080 --> 05:17.920
I mean, it's neat to see Linux being used.

05:17.920 --> 05:20.560
But this definitely feels Linux Foundation-y,

05:20.560 --> 05:23.760
if you get my drift here, in that these probably won't still

05:23.760 --> 05:26.000
be user modifiable or Linux like we

05:26.000 --> 05:27.560
would recognize it in any way.

05:27.560 --> 05:29.040
Yeah, it's kind of like that Android.

05:29.040 --> 05:30.360
It's the Android effect.

05:30.360 --> 05:33.200
But it does still speak to the capability and usefulness

05:33.200 --> 05:34.520
of the kernel we all love.

05:34.520 --> 05:35.020
Well said.

05:35.020 --> 05:37.080
And it's pretty neat to, it's like when

05:37.080 --> 05:39.920
you get on the airplane, how many times have you

05:39.920 --> 05:42.040
seen when people get on the Delta airplane

05:42.040 --> 05:44.520
and Delta will do a reboot of the infotainment

05:44.520 --> 05:47.680
systems during the passenger offloading and unloading.

05:47.680 --> 05:51.280
And so if you get on the plane kind of early,

05:51.280 --> 05:53.680
or they just are slow at the reboot, I guess,

05:53.680 --> 05:56.640
you can get a little shot of picture

05:56.640 --> 06:00.680
of Linux booting in the seat cushion of the Delta airline

06:00.680 --> 06:01.440
plane seats.

06:01.440 --> 06:03.660
Makes me feel better to have tux right there

06:03.660 --> 06:06.080
as I'm getting ready to fly.

06:06.080 --> 06:07.920
Doesn't look like it's a super great system,

06:07.920 --> 06:11.280
but I probably see one of those once a week either sent

06:11.280 --> 06:14.080
into the show or somebody posts it online.

06:14.080 --> 06:17.520
And I remember, I mean, we did it as a runs Linux forever

06:17.520 --> 06:18.760
ago.

06:18.760 --> 06:20.680
So yeah, it's out there.

06:20.680 --> 06:25.060
And it's just an implementation detail, really,

06:25.060 --> 06:26.840
for the most part, except for us.

06:26.840 --> 06:27.320
Right.

06:27.320 --> 06:28.680
That's assuming you can see the seat back

06:28.680 --> 06:32.160
screen between your knees when you're in that Delta seat.

06:32.160 --> 06:32.960
Yeah.

06:32.960 --> 06:34.020
Yeah, that's true.

06:34.020 --> 06:36.680
And honestly, I prefer Alaska.

06:36.680 --> 06:38.560
But I don't want to start a fight.

06:38.560 --> 06:42.000
I have so much to say about the snow.

06:42.000 --> 06:44.200
But I know we need to get into housekeeping this week

06:44.200 --> 06:46.840
already, because there's a lot to update people

06:46.840 --> 06:49.760
on since we've been gone and tons of really good stuff.

06:49.760 --> 06:53.280
So nominally today, we're going to talk about Linus's take

06:53.280 --> 06:55.480
on ZFS and maybe where he got it wrong.

06:55.480 --> 07:00.640
But before we do that, let's do a little housekeeping.

07:00.640 --> 07:02.140
There's a lot to tell you about, so I

07:02.140 --> 07:03.960
wanted to kind of get right into this sort

07:03.960 --> 07:05.760
of near the top of the show.

07:05.760 --> 07:09.080
First of all, thank you to everybody who's joined us

07:09.080 --> 07:11.440
at jupiterbroadcasting.com slash Telegram.

07:11.440 --> 07:13.200
That's our official Telegram channel

07:13.200 --> 07:16.080
where the conversation goes on after the show.

07:16.080 --> 07:18.560
And you can keep it going over at jupiterbroadcasting.com

07:18.560 --> 07:19.800
slash Telegram.

07:19.800 --> 07:21.280
It's doing great.

07:21.280 --> 07:24.680
And I think a big part of that is the spam bots and stuff.

07:24.680 --> 07:26.760
It's really kind of changed the game over there.

07:26.760 --> 07:28.320
So it's been really nice.

07:28.320 --> 07:34.060
Also, this Friday, assuming I'm not snowed in,

07:34.060 --> 07:36.760
Cheez and I and whoever else wants to join us

07:36.760 --> 07:39.320
are doing a live stream on living in the terminal,

07:39.320 --> 07:42.240
essentially creating a desktop-like environment

07:42.240 --> 07:45.760
but in the terminal, something you could SSH to on a VPS

07:45.760 --> 07:47.640
or back home.

07:47.640 --> 07:48.960
And it's really slick.

07:48.960 --> 07:51.820
It's something Cheez used to do on the DL at an old gig.

07:51.820 --> 07:54.760
So he really dialed it in.

07:54.760 --> 07:56.520
And he'll walk us through it on Friday.

07:56.520 --> 07:58.440
So that'll be live, assuming I can make it.

07:58.440 --> 08:00.480
I'm excited to see what his secrets are.

08:00.480 --> 08:01.160
Yeah.

08:01.160 --> 08:03.040
He's got a few great ideas in there.

08:03.040 --> 08:05.400
And then I've got a couple of points of interest

08:05.400 --> 08:07.360
that we need to get out there for everybody.

08:07.360 --> 08:13.960
Number one, two fests are closing their calls for paper

08:13.960 --> 08:15.180
very soon.

08:15.180 --> 08:19.440
This Saturday, January 18, Texas Linux Fest

08:19.440 --> 08:21.440
closes their call for papers.

08:21.440 --> 08:25.560
Now, Texas Linux Fest is one of my favorite Linux fests

08:25.560 --> 08:29.560
because it's the perfect size to actually build friendships,

08:29.560 --> 08:31.480
relationships, and connections.

08:31.480 --> 08:33.480
Some of the most fruitful things that

08:33.480 --> 08:36.240
have happened in my career and others I know

08:36.240 --> 08:38.380
are the result of Texas Linux Fest.

08:38.380 --> 08:41.360
So it's a great conference to get involved in if you can.

08:41.360 --> 08:44.680
And their call for papers wrap up very soon.

08:44.680 --> 08:47.960
So we have a link to their papercall.io site.

08:47.960 --> 08:50.080
If you want to give a shot, there's

08:50.080 --> 08:54.160
worse places to go than Texas in the winter.

08:54.160 --> 08:56.640
Is there anything else that we want to add to that, Carl?

08:56.640 --> 08:59.000
I know you're involved very closely with Texas Linux Fest.

08:59.000 --> 09:00.120
So if there's something you want to mention,

09:00.120 --> 09:01.960
I want to give you a chance here in the show.

09:01.960 --> 09:04.480
Yeah, just one thing somebody asked me about today.

09:04.480 --> 09:05.860
The call for papers, you don't actually

09:05.860 --> 09:07.320
have to have your talk done.

09:07.320 --> 09:09.880
Just get the idea and the basic elevator pitch submitted.

09:09.880 --> 09:11.760
So that way, we can select between them

09:11.760 --> 09:14.440
and schedule them in categories and all that.

09:14.440 --> 09:17.200
Yeah, yeah, get your pitch ready, get an idea,

09:17.200 --> 09:19.520
get an angle, get a concept, and then flush it out.

09:19.520 --> 09:21.760
You use the time between now and the fest.

09:21.760 --> 09:24.160
That's probably something people don't think about

09:24.160 --> 09:26.040
because it feels like you're cheating.

09:26.040 --> 09:27.880
But really, that's the expectation.

09:27.880 --> 09:30.000
Besides, you want to polish it right up to the time

09:30.000 --> 09:31.360
to get time to go.

09:31.360 --> 09:32.680
I don't know any other way.

09:32.680 --> 09:36.200
Also, Linux Fest, our favorite Linux Fest,

09:36.200 --> 09:41.760
Linux Fest Northwest, it's call for papers, wraps up Wednesday.

09:41.760 --> 09:43.320
That's tomorrow as we record.

09:43.320 --> 09:45.240
So if you're listening, it may have just closed

09:45.240 --> 09:48.440
or you may have a tiny bit of time left, better go check.

09:48.440 --> 09:50.920
And it's a good time to think about your plans

09:50.920 --> 09:52.400
to come join us at Linux Fest.

09:52.400 --> 09:53.280
Definitely.

09:53.280 --> 09:55.460
We are starting to do our planning.

09:55.460 --> 09:59.160
And we've had so much fun over the years

09:59.160 --> 10:01.600
that if you can make it, it's another one of those

10:01.600 --> 10:04.840
where you can really hear it's made connections and change

10:04.840 --> 10:05.680
things for people.

10:05.680 --> 10:07.380
So I really recommend, if you can make it,

10:07.380 --> 10:09.920
please join us at Linux Fest Northwest.

10:09.920 --> 10:12.120
You can get the details at their website.

10:12.120 --> 10:15.520
It's in April, towards the end, like last weekend.

10:15.520 --> 10:19.400
And then last but not least, our buddy Alex,

10:19.400 --> 10:22.720
my co-host on Self-Hosted, sat down

10:22.720 --> 10:26.120
with the Home Assistant podcast that comes out this week.

10:26.120 --> 10:28.680
And the Home Assistant podcast is definitely

10:28.680 --> 10:31.240
for those of you who want to learn a lot more about Home

10:31.240 --> 10:32.000
Assistant.

10:32.000 --> 10:33.520
We go into it on Self-Hosted, but it's

10:33.520 --> 10:37.160
part of our overall solution, whereas this podcast focuses

10:37.160 --> 10:40.880
in on what I think is one of the most remarkable open source

10:40.880 --> 10:45.120
projects and in the top 10 active open source

10:45.120 --> 10:47.120
projects on GitHub.

10:47.120 --> 10:49.320
And great podcast that really zeros in on that.

10:49.320 --> 10:51.360
And they had Alex sit and join them.

10:51.360 --> 10:53.480
Alex has a beautiful Home Assistant setup, too.

10:53.480 --> 10:55.040
So that was a good call on their part.

10:55.040 --> 10:56.440
Yeah, that's for sure.

10:56.440 --> 10:59.240
That'll be episode 61, if you want to find it.

10:59.240 --> 10:59.760
There you go.

10:59.760 --> 11:03.000
And we'll also put a link to the general podcast page,

11:03.000 --> 11:05.440
since it's not out as we record yet, in the show notes.

11:05.440 --> 11:07.120
But you can find it there.

11:07.120 --> 11:08.280
A lot going on.

11:08.280 --> 11:09.840
It's just about Linux Fest season,

11:09.840 --> 11:11.080
because something we didn't mention,

11:11.080 --> 11:12.760
but I will get it out there right now,

11:12.760 --> 11:16.120
since we're covering this, we're also going to be at scale.

11:16.120 --> 11:17.880
So if you're going to be at scale this year,

11:17.880 --> 11:19.280
come say hi to us.

11:19.280 --> 11:20.820
I'm sure coming up soon, we'll start

11:20.820 --> 11:23.200
setting up the actual meetups and all that kind of stuff.

11:23.200 --> 11:26.520
Yeah, this year we're planning to do Linux Fest Northwest, Texas

11:26.520 --> 11:27.840
Linux Fest, and scale.

11:27.840 --> 11:30.720
Now, everything's always subject to change, especially

11:30.720 --> 11:31.960
these days.

11:31.960 --> 11:34.240
But that's our intention as we record right now.

11:34.240 --> 11:35.840
So if you're thinking about it, and we

11:35.840 --> 11:37.680
could push you over the line a little bit,

11:37.680 --> 11:39.680
I hope that encourages you to come say hi to us.

11:39.680 --> 11:42.000
Come hang out.

11:42.000 --> 11:43.440
And that's the housekeeping.

11:43.440 --> 11:45.440
I thought that was going to be a lot to get through.

11:45.440 --> 11:48.200
But really, for being off the air for three weeks,

11:48.200 --> 11:49.320
that wasn't so bad.

11:49.320 --> 11:51.240
No, it actually looks pretty good in here.

11:51.240 --> 11:52.120
Yeah.

11:52.120 --> 11:55.560
I mean, I'm pretty proud of us, Wes.

11:55.560 --> 11:58.280
A computer kid in the chat room asks if you're going to Self.

11:58.280 --> 11:59.320
I don't know.

11:59.320 --> 12:01.280
It always conflicts, but we'll see.

12:01.280 --> 12:02.940
I've always wanted to make it down there,

12:02.940 --> 12:04.800
but it's a really long travel.

12:04.800 --> 12:05.560
I'm going to Self.

12:05.560 --> 12:05.840
Are you?

12:05.840 --> 12:06.760
Yeah, OK.

12:06.760 --> 12:07.800
Great, Jim will be there.

12:07.800 --> 12:08.880
Jim goes every year.

12:08.880 --> 12:12.320
Not quite as far for Jim as it is for me.

12:12.320 --> 12:12.920
No.

12:12.920 --> 12:13.880
So that's good.

12:13.880 --> 12:17.240
And you often go to all things open, too, don't you?

12:17.240 --> 12:18.040
Every year.

12:18.040 --> 12:18.960
There you go.

12:18.960 --> 12:21.240
I want to try to make it this year if I can.

12:21.240 --> 12:24.680
I don't quite have it nailed down yet, but I would like to.

12:24.680 --> 12:26.200
It is a monster of a show.

12:26.200 --> 12:26.720
Is it?

12:26.720 --> 12:28.440
We had 5,000 people last year.

12:28.440 --> 12:29.160
Whoa.

12:29.160 --> 12:29.880
OK.

12:29.880 --> 12:31.240
Sounds like we shouldn't miss it.

12:31.240 --> 12:31.720
Yeah.

12:31.720 --> 12:32.840
You really should not.

12:32.840 --> 12:33.440
All right.

12:33.440 --> 12:36.520
OK, I'm getting hyped.

12:36.520 --> 12:39.920
I mean, it's on my plan, so I'll start taking it seriously.

12:39.920 --> 12:43.720
All right, well, let's talk about Linus Torvalds' recent

12:43.720 --> 12:44.840
claims not to use.

12:44.840 --> 12:47.280
He says, quote, don't use ZFS.

12:47.280 --> 12:52.200
But unfortunately, he doesn't seem to fully understand it.

12:52.200 --> 12:53.800
For me, it was kind of hard to read this,

12:53.800 --> 12:56.800
because it's sort of like when I have a family member who I

12:56.800 --> 12:59.160
realize isn't going to figure something out.

12:59.160 --> 13:02.200
It's not kind of within them, and they sort of

13:02.200 --> 13:04.600
hit their limit, and it's sort of a little, well.

13:04.600 --> 13:06.320
Turns out Linus has faults, too, Chris.

13:06.320 --> 13:06.680
Yeah.

13:06.680 --> 13:07.360
I mean, we're all human.

13:07.360 --> 13:08.280
I think we knew that.

13:08.280 --> 13:10.000
It's just when Linus says something,

13:10.000 --> 13:11.960
it comes with a certain level of authority.

13:11.960 --> 13:14.960
It immediately, immediately generates headlines.

13:14.960 --> 13:16.120
It creates blog posts.

13:16.120 --> 13:17.880
It creates discussion.

13:17.880 --> 13:22.440
It's as it should after its contribution.

13:22.440 --> 13:23.880
But there was a series of questions

13:23.880 --> 13:26.280
about Linux performance in a thread,

13:26.280 --> 13:29.520
and eventually in there, ZFS came up.

13:29.520 --> 13:31.040
And it was in here where Linus went

13:31.040 --> 13:33.720
on to make some inaccurate and damaging potential claims

13:33.720 --> 13:34.360
about ZFS.

13:34.360 --> 13:36.160
And Jim kind of makes this case in an article we're

13:36.160 --> 13:40.280
going to link that he wrote over at Ars Technica that really kind

13:40.280 --> 13:43.760
of goes into some of the history here,

13:43.760 --> 13:45.800
because that's, I think, something that's really key

13:45.800 --> 13:48.680
to understand about this, is this really kind of goes back

13:48.680 --> 13:54.280
to January of 2019, when Greg KH decided he was done exporting

13:54.280 --> 13:58.240
certain types of kernel symbols to non-GPL loadable kernel

13:58.240 --> 13:59.040
modules.

13:59.040 --> 14:01.000
Yeah, back then, that particular symbol

14:01.000 --> 14:03.960
was keeping track of the state of the processor's floating

14:03.960 --> 14:04.880
point unit.

14:04.880 --> 14:06.680
And without access to that symbol,

14:06.680 --> 14:09.880
external kernel modules, think ZFS,

14:09.880 --> 14:13.240
which access the FPU directly, as ZFS does, well,

14:13.240 --> 14:15.360
they've got to implement some of the code, the state

14:15.360 --> 14:18.160
preservation logic, all on their own.

14:18.160 --> 14:21.600
So once that symbol was no longer available to them,

14:21.600 --> 14:22.640
that had to be done.

14:22.640 --> 14:25.280
Right, and I remember when that change was made,

14:25.280 --> 14:26.680
Greg was quoted as saying, quote,

14:26.680 --> 14:29.880
my tolerance for ZFS is pretty non-existent.

14:29.880 --> 14:32.880
And it kind of created a lot of drama.

14:32.880 --> 14:34.840
It spawned a lot of chatter.

14:34.840 --> 14:36.720
And it did create a breaking change

14:36.720 --> 14:41.080
that the ZFS folks had to respond to.

14:41.080 --> 14:44.440
So there's been some obvious kind of, not hostility,

14:44.440 --> 14:46.240
but not really a will.

14:46.240 --> 14:47.760
There's a hard line.

14:47.760 --> 14:51.000
Maybe a reminder that these are not well-meshed systems,

14:51.000 --> 14:52.480
that it certainly works very well.

14:52.480 --> 14:54.200
But these two development communities

14:54.200 --> 14:55.880
are not necessarily working together.

14:55.880 --> 14:57.280
Right, and the hard lines, I think,

14:57.280 --> 14:59.160
really form because of the licensing.

14:59.160 --> 15:01.480
And that's where I think Linus got this thing right.

15:01.480 --> 15:04.040
His concerns over licensing, I think, are reasonable.

15:04.040 --> 15:06.120
He writes, honestly, there is no way

15:06.120 --> 15:08.400
I can merge any of the ZFS efforts

15:08.400 --> 15:11.120
until I get an official letter from Oracle.

15:11.120 --> 15:13.120
Other people think it can be done,

15:13.120 --> 15:15.720
or think it's OK to merge ZFS code into the kernel,

15:15.720 --> 15:18.160
and that the module interface makes it OK.

15:18.160 --> 15:19.440
That's their decision.

15:19.440 --> 15:22.080
But considering Oracle's litigious nature

15:22.080 --> 15:24.160
and the questions over licensing,

15:24.160 --> 15:27.360
there's no way I can ever feel safe doing so.

15:27.360 --> 15:30.920
And he goes on to discuss the flimsy nature of the shim.

15:30.920 --> 15:33.640
But where it kind of goes off the rails

15:33.640 --> 15:37.280
is when he says, don't use ZFS.

15:37.280 --> 15:40.840
It's always more of a buzzword than anything else.

15:40.840 --> 15:43.200
And the benchmarks I've seen don't make ZFS look

15:43.200 --> 15:44.320
all that great.

15:44.320 --> 15:46.400
And as far as I can tell, there's

15:46.400 --> 15:51.040
no real maintenance behind it anymore.

15:51.040 --> 15:52.520
Well, my jaw dropped when I saw that.

15:52.520 --> 15:53.440
How about you, Jim?

15:53.440 --> 15:55.040
Yeah, in a big way.

15:55.040 --> 15:57.320
I do want to back things up a little bit, though.

15:57.320 --> 15:59.440
Things were kind of already off the rails

15:59.440 --> 16:03.680
when Linus started talking about how he couldn't integrate ZFS

16:03.680 --> 16:04.440
into the kernel.

16:04.440 --> 16:08.560
Because while I don't doubt that he has seen people ask that,

16:08.560 --> 16:12.000
maybe even some people have asked him that directly,

16:12.000 --> 16:13.280
he was responding to somebody.

16:13.280 --> 16:15.000
And I'm sorry if I mispronounce your name

16:15.000 --> 16:17.960
if you're listening, Jonathan Danti.

16:17.960 --> 16:21.240
Jonathan had replied to Linus saying

16:21.240 --> 16:22.800
that the number one priority for Linux

16:22.800 --> 16:24.960
has been don't break existing users.

16:24.960 --> 16:28.800
And he goes on to some degree about that, which is great.

16:28.800 --> 16:30.480
And that has been a longstanding policy.

16:30.480 --> 16:32.920
And it's an important one and a good one.

16:32.920 --> 16:34.420
Jonathan says, I really appreciate

16:34.420 --> 16:36.920
this pragmatic policy targeting user space application.

16:36.920 --> 16:40.040
However, I have a question about a recent kernel change.

16:40.040 --> 16:44.080
That was the one that Greg KH made his infamous snark about

16:44.080 --> 16:47.160
that broke an important third party module, ZFS.

16:47.160 --> 16:49.260
I don't want to flame and feel free not

16:49.260 --> 16:50.960
to reply if you think I am.

16:50.960 --> 16:54.320
But recently, the kernel FPU symbol was declared GPL only

16:54.320 --> 16:57.800
and caused a significant issue for the ZFS on Linux project.

16:57.800 --> 16:58.920
How do you feel about that?

16:58.920 --> 17:01.180
Can you speak about the motivation?

17:01.180 --> 17:03.600
Now, it's worth noting that at no point

17:03.600 --> 17:05.760
does Jonathan say, hey, Linus, why won't you

17:05.760 --> 17:07.640
pull ZFS into the kernel?

17:07.640 --> 17:12.200
He just wants to know about why do we

17:12.200 --> 17:15.120
stop exporting that symbol when that breaks a project

17:15.120 --> 17:18.040
and we say we don't break users.

17:18.040 --> 17:22.880
And how Linus opens up his response, he says,

17:22.880 --> 17:24.640
note that we don't break users is literally

17:24.640 --> 17:27.400
about user space applications.

17:27.400 --> 17:29.040
And I'm alighting a couple of his words

17:29.040 --> 17:31.440
here for brevity and clarity.

17:31.440 --> 17:34.000
We don't break users about user space applications.

17:34.000 --> 17:36.120
If somebody adds a kernel module like ZFS,

17:36.120 --> 17:37.580
they're on their own.

17:37.580 --> 17:40.040
I can't maintain it, and I can't be bound by other people's

17:40.040 --> 17:41.040
kernel changes.

17:41.040 --> 17:43.000
Yeah, his argument is that's not user space.

17:43.000 --> 17:44.280
That's a module.

17:44.280 --> 17:47.120
That's kernel space, and we can break that as much as we want.

17:47.120 --> 17:47.800
Exactly.

17:47.800 --> 17:51.240
And now, at this point, right there at this point,

17:51.240 --> 17:54.320
he has answered Jonathan's entire question.

17:54.320 --> 17:58.720
He has done so informatively and very usefully.

17:58.720 --> 18:02.080
He's also, if he stopped right there,

18:02.080 --> 18:05.200
done a lot to put a productive positive cap

18:05.200 --> 18:07.400
on the controversy from Greg KH's change.

18:07.400 --> 18:10.600
He says, hey, don't break user space is about user space.

18:10.600 --> 18:12.260
A kernel module is not user space.

18:12.260 --> 18:13.800
If you want to play in kernel space,

18:13.800 --> 18:14.920
you've got to play with the big boys,

18:14.920 --> 18:17.880
and that means that ABIs will break and you have to keep up.

18:17.880 --> 18:19.120
And that's perfectly fair.

18:19.120 --> 18:21.560
We were so close to not having to talk about this at all.

18:21.560 --> 18:22.280
Exactly.

18:22.280 --> 18:26.520
So he should have just clicked send right there.

18:26.520 --> 18:28.320
When he starts saying, and honestly, there's

18:28.320 --> 18:31.400
no way I can merge ZFS, blah, blah, blah, well,

18:31.400 --> 18:32.880
nobody's asking you to right now.

18:32.880 --> 18:34.800
And he's already gone off the rail there,

18:34.800 --> 18:37.640
because I got to tell you, like you opened up,

18:37.640 --> 18:41.080
I wrote a long, detailed article about this at Ars Technica.

18:41.080 --> 18:42.800
We're up to 10 pages of comments now,

18:42.800 --> 18:46.160
and I can't tell you how many people, because they've

18:46.160 --> 18:51.120
read Linus' comment, they think now

18:51.120 --> 18:55.840
that stopping the export of the kernel FPU begin symbol,

18:55.840 --> 18:59.120
now they think that that's about license compliance.

18:59.120 --> 19:00.400
And it never was.

19:00.400 --> 19:02.800
It was just a maintenance thing.

19:02.800 --> 19:03.880
It was tidying up.

19:03.880 --> 19:04.800
Right.

19:04.800 --> 19:07.200
And I think importantly here, where

19:07.200 --> 19:09.940
it gets into comments about performance

19:09.940 --> 19:13.200
and the state of maintenance, it really goes off the rails.

19:13.200 --> 19:14.740
Because first of all, the performance

19:14.740 --> 19:16.800
is an extremely complicated story,

19:16.800 --> 19:19.280
but I'm not sure where he got the maintenance thing

19:19.280 --> 19:19.840
from at all.

19:19.840 --> 19:22.420
He may have maybe found an old repo or something,

19:22.420 --> 19:25.680
but it seems like the ZFS on Linux project

19:25.680 --> 19:27.580
is firing at all cylinders these days.

19:27.580 --> 19:32.900
Well, so since then, he's kind of, and I got to be honest,

19:32.900 --> 19:35.520
I mean, I don't know somebody the stature of Linus Torvalds

19:35.520 --> 19:37.480
really cares what I think, but he really

19:37.480 --> 19:39.600
disappointed me because he replied to that,

19:39.600 --> 19:42.800
to where are you getting this unmaintained thing from.

19:42.800 --> 19:44.960
And he kind of retconned it and said, oh, well,

19:44.960 --> 19:48.040
if I say ZFS, obviously I'm talking about Oracle ZFS,

19:48.040 --> 19:50.160
and maybe it's being maintained.

19:50.160 --> 19:50.760
I don't know.

19:50.760 --> 19:51.680
It's proprietary.

19:51.680 --> 19:52.440
How can I tell?

19:52.440 --> 19:54.480
Do you know if it's maintained?

19:54.480 --> 19:56.240
And it's like, come on, dude.

19:56.240 --> 19:58.860
I mean, how could you have been talking about Oracle ZFS

19:58.860 --> 20:02.000
when you know perfectly well they don't need a Linux kernel

20:02.000 --> 20:06.200
symbol export, and nobody using Linux and asking about ZFS

20:06.200 --> 20:07.760
is asking about Oracle.

20:07.760 --> 20:11.080
They're asking about ZFS on Linux, which is open ZFS,

20:11.080 --> 20:13.160
and the GitHub repo is right there.

20:13.160 --> 20:16.920
There were 5,000 code additions in the last month

20:16.920 --> 20:18.240
at the time I wrote the article.

20:18.240 --> 20:22.800
Yeah, and a great things, if you just look at over 2019,

20:22.800 --> 20:25.640
landed in ZFS on Linux that really brought up

20:25.640 --> 20:28.880
a parity with the BSDs and brought fantastic features,

20:28.880 --> 20:31.640
some of which can lead to pretty decent performance,

20:31.640 --> 20:34.240
like some great compression features.

20:34.240 --> 20:36.600
When you look at ZFS itself, there

20:36.600 --> 20:39.800
is this tendency to just write it off as a buzzword.

20:39.800 --> 20:41.920
There's things I can build around it,

20:41.920 --> 20:44.720
things like Red Hat Project Stratus, which

20:44.720 --> 20:47.160
looks like a pretty nice collection of tools

20:47.160 --> 20:49.200
with an API that could eventually

20:49.200 --> 20:52.160
lead to some real serious alternatives.

20:52.160 --> 20:57.080
Or we have our setup in the studio where our OS

20:57.080 --> 21:00.800
and our boot drives and things of that type of nature

21:00.800 --> 21:04.440
are ButterFS, and then our data storage is ZFS.

21:04.440 --> 21:07.160
And we didn't have to pick a camp.

21:07.160 --> 21:09.520
We use both for what they're great for.

21:09.520 --> 21:13.360
But when it comes specifically to this kind of writing ZFS

21:13.360 --> 21:17.160
and reducing it down to one variable, oh, it's a buzzword,

21:17.160 --> 21:18.280
where is that coming from?

21:18.280 --> 21:21.960
Because it's clearly used in production quite successfully.

21:21.960 --> 21:25.200
But the only thing I can tell, I don't

21:25.200 --> 21:28.400
know what kind of private conversations

21:28.400 --> 21:31.720
senior developers like Greg KH and Linus might have,

21:31.720 --> 21:36.560
but Greg has been pretty voluble about his disdain for ZFS

21:36.560 --> 21:40.920
and what appears to be some anger about Sun having

21:40.920 --> 21:43.880
released it under the cuddle, at the very least

21:43.880 --> 21:46.040
with the knowledge that it probably would not

21:46.040 --> 21:49.280
be license compatible with the GPL.

21:49.280 --> 21:51.720
And he's made some pretty salty comments

21:51.720 --> 21:53.960
about if they didn't want to work with me,

21:53.960 --> 21:56.240
then why should I work with them?

21:56.240 --> 21:59.400
The thing about that is, I mean, now we're

21:59.400 --> 22:00.640
not talking about Oracle.

22:00.640 --> 22:01.840
We're talking about Sun.

22:01.840 --> 22:03.440
But to the best of my knowledge, we're

22:03.440 --> 22:05.200
not talking about the actual developers.

22:05.200 --> 22:07.320
Now, we do have some original Sun developers

22:07.320 --> 22:10.800
that are very senior and very active in OpenZFS.

22:10.800 --> 22:13.800
They basically, when Oracle bought Sun to begin with,

22:13.800 --> 22:15.960
ZFS developers pretty much all quit and immediately

22:15.960 --> 22:19.240
began the OpenZFS project, Matthew Ahrens

22:19.240 --> 22:21.140
being one of those.

22:21.140 --> 22:25.360
I haven't asked Matt about this, but I

22:25.360 --> 22:28.680
find it hard to believe that the actual developers, some of whom

22:28.680 --> 22:32.000
I know, were really all that keen on, hey,

22:32.000 --> 22:35.200
let's make Linux not be able to use our crap.

22:35.200 --> 22:38.060
That just reeks to me of Scott McNeely, who

22:38.060 --> 22:40.520
he was the CEO of Sun.

22:40.520 --> 22:44.600
And he absolutely on the record hated the crap out of Linux

22:44.600 --> 22:46.840
and didn't want any of his stuff ever working on it.

22:46.840 --> 22:48.160
Well, it competed with Solaris.

22:48.160 --> 22:49.960
Yeah, well, I had the great displeasure

22:49.960 --> 22:53.920
of attending a Scott McNeely keynote at an open source

22:53.920 --> 22:58.220
conference a couple of years after Sun was bought by Oracle.

22:58.220 --> 23:01.240
And he went on for nearly twice as a lot of time,

23:01.240 --> 23:02.920
would not get off the stage, and would not

23:02.920 --> 23:05.960
shut up about how the entire open source world was screwed

23:05.960 --> 23:07.680
now if they didn't have their hero Scott

23:07.680 --> 23:09.020
McNeely to protect them.

23:09.020 --> 23:11.040
And all they had was crappy old Linux.

23:11.040 --> 23:13.520
Right, and around that time, SCO was going to come and get us,

23:13.520 --> 23:14.020
too.

23:14.020 --> 23:16.760
So they were really feeling empowered at that time.

23:16.760 --> 23:18.880
But I mean, that's the guy that didn't

23:18.880 --> 23:22.240
want to cooperate with the Linux kernel maintainers

23:22.240 --> 23:25.760
or anybody using the GPL who had the giant partisan agenda,

23:25.760 --> 23:29.400
not the Open ZFS project, who is neither Sun's

23:29.400 --> 23:32.000
corporate leadership nor has anything to do with Oracle.

23:32.000 --> 23:32.880
That's a great point.

23:32.880 --> 23:35.180
Yeah, I feel like it's pretty crappy to still be holding

23:35.180 --> 23:37.780
that grudge and snarling about they

23:37.780 --> 23:39.000
don't want to work with us.

23:39.000 --> 23:40.960
Yes, times have changed.

23:40.960 --> 23:42.080
The crew has changed.

23:42.080 --> 23:44.100
The project location has changed.

23:44.100 --> 23:46.980
And it's a really great project.

23:46.980 --> 23:50.480
I wonder, too, though, can we just from,

23:50.480 --> 23:53.120
because you address this, and I think it's worth touching on.

23:53.120 --> 23:54.840
Can we talk about performance for a second?

23:54.840 --> 23:57.320
Because there is some truth to the fact

23:57.320 --> 24:00.320
that if you put ZFS up against an extended 4 disk

24:00.320 --> 24:06.320
or a single XFS SSD, ZFS might be a little bit slower.

24:06.320 --> 24:09.400
And so that performance thing is a bit of a touchy subject.

24:09.400 --> 24:13.720
It is, but it's also an unusually complex subject.

24:13.720 --> 24:20.240
If you just set up ZFS default and you run benchmarks

24:20.240 --> 24:24.220
and compare it against EXT4 defaults or XFS defaults,

24:24.220 --> 24:28.120
it will probably be slightly slower.

24:28.120 --> 24:30.000
It's usually not going to be slow enough

24:30.000 --> 24:31.840
to really notice unless you get yourself

24:31.840 --> 24:37.200
wedged into a particularly pathological corner case involving

24:37.200 --> 24:41.800
really, really heavily loaded SQL binaries stored on it

24:41.800 --> 24:42.400
or something.

24:42.400 --> 24:43.080
Sure.

24:43.080 --> 24:45.880
But it will probably be slightly slower.

24:45.880 --> 24:47.600
But here's the thing about that.

24:47.600 --> 24:50.320
One, we're just talking about the defaults.

24:50.320 --> 24:52.680
And I think it's reasonable to say

24:52.680 --> 24:54.580
that most of the people that are using ZFS,

24:54.580 --> 24:57.120
they want to dig a little deeper than that.

24:57.120 --> 24:59.200
Even if they don't on day one, they eventually

24:59.200 --> 25:03.000
get into looking at data sets and record sizes and all

25:03.000 --> 25:06.060
this tuning stuff that can make an enormous difference.

25:06.060 --> 25:08.280
And the other thing about that is there

25:08.280 --> 25:12.000
is a very, very long history of benchmarking storage.

25:12.000 --> 25:14.680
And one of the first rules of benchmarking storage

25:14.680 --> 25:17.960
is you do absolutely everything possible to eliminate

25:17.960 --> 25:20.280
any impact from file system cache.

25:20.280 --> 25:22.720
So in the real world, you're doing everything

25:22.720 --> 25:25.840
you possibly can to make sure as few reads as possible ever

25:25.840 --> 25:28.640
hit the metal because you want to conserve those IOPS.

25:28.640 --> 25:31.120
And you want to service those requests literally

25:31.120 --> 25:34.000
like two, three orders of magnitude faster from RAM

25:34.000 --> 25:35.160
in your cache, right?

25:35.160 --> 25:37.700
So you want to eliminate that when you're benchmarking disks

25:37.700 --> 25:39.960
or even usually when you're benchmarking file systems

25:39.960 --> 25:43.720
because the assumption is cache will just completely wreck

25:43.720 --> 25:45.960
the actual numbers that you care about because it makes

25:45.960 --> 25:47.280
such an enormous impact.

25:47.280 --> 25:50.660
And also, the assumption here is that all file systems

25:50.660 --> 25:53.200
will cache the same way and to the same degree

25:53.200 --> 25:54.120
of effectiveness.

25:54.120 --> 25:57.440
Right, using the same probably kernel level algorithm for it.

25:57.440 --> 26:00.600
Well, so one, up until very recently,

26:00.600 --> 26:02.400
they've all used the same algorithm, which

26:02.400 --> 26:04.240
is least recently used.

26:04.240 --> 26:08.440
It's just slightly smarter than FIFO first in, first out.

26:08.440 --> 26:12.760
An LRU cache, the way that works is as you read in a block,

26:12.760 --> 26:14.660
it goes into cache.

26:14.660 --> 26:17.600
If the cache is full, then the block

26:17.600 --> 26:19.620
that has been sitting in the cache for the longest

26:19.620 --> 26:23.080
without being read gets evicted to make room for the new one.

26:23.080 --> 26:25.100
Now, every time you read a block from cache,

26:25.100 --> 26:26.680
it gets jumped up to the top of the list

26:26.680 --> 26:27.840
again like it's brand new.

26:27.840 --> 26:29.800
So it is at least that smart.

26:29.800 --> 26:33.560
But an LRU cache will very happily

26:33.560 --> 26:36.360
evict every single block in it if you just

26:36.360 --> 26:39.360
read a stream of data off the disk larger

26:39.360 --> 26:41.200
than the size of the cache.

26:41.200 --> 26:45.880
Now, every file system on every operating system I'm aware of,

26:45.880 --> 26:50.800
other than ZFS, they share an operating system kernel level

26:50.800 --> 26:52.280
cache facility.

26:52.280 --> 26:56.320
On Linux, ext4, XFS, Butter, whatever you're using,

26:56.320 --> 26:58.680
it's not just, they're not just all using the LRU cache.

26:58.680 --> 27:02.120
They're all specifically using the Linux kernel page cache,

27:02.120 --> 27:03.320
which is an LRU.

27:03.320 --> 27:06.480
Now, over on the Windows side, NTFS, what have you,

27:06.480 --> 27:09.600
it's using a page cache, which is LRU,

27:09.600 --> 27:12.320
which is built into the Windows kernel.

27:12.320 --> 27:14.740
But now when you look at ZFS, ZFS not only

27:14.740 --> 27:17.360
doesn't use the operating system cache facility,

27:17.360 --> 27:19.220
it also doesn't use an LRU cache.

27:19.220 --> 27:20.840
It uses something called the ARC.

27:20.840 --> 27:23.360
ARC stands for adaptive replacement cache.

27:23.360 --> 27:26.000
And I like to explain it in simplistic terms

27:26.000 --> 27:28.160
as you can think of it as a weighted cache.

27:28.160 --> 27:30.560
So basically, every time you read a block,

27:30.560 --> 27:33.240
it not only stays in cache, it gets a little heavier,

27:33.240 --> 27:35.120
and it's harder to push it out.

27:35.120 --> 27:37.520
So if you've got a block that has been in cache

27:37.520 --> 27:41.460
and has been read from cache like 500 times,

27:41.460 --> 27:42.560
but maybe it's been five minutes

27:42.560 --> 27:44.040
since the last time it was read,

27:44.040 --> 27:46.640
it's gonna be more difficult to evict that block

27:46.640 --> 27:50.080
just because you read in some random thing off of disk,

27:50.080 --> 27:52.360
because even if it hasn't been active for a few minutes,

27:52.360 --> 27:55.120
the cache knows this block gets hit a lot.

27:55.120 --> 27:56.440
It's really hot.

27:56.440 --> 27:58.080
And it's even slightly smarter than that.

27:58.080 --> 28:00.960
Let's say that a block never quite gets all the way

28:00.960 --> 28:03.080
to the top of the cache, which are really hard to push out,

28:03.080 --> 28:05.240
but it keeps getting read in and keeps getting evicted

28:05.240 --> 28:07.200
and keeps getting read back in again.

28:07.200 --> 28:09.040
Well, the ARC also tracks blocks

28:09.040 --> 28:11.160
that have been recently evicted from cache.

28:11.160 --> 28:13.120
So if you have a frequent flyer like that

28:13.120 --> 28:15.400
that keeps getting evicted and bouncing back in,

28:15.400 --> 28:17.880
the ARC notices that and starts being more reluctant

28:17.880 --> 28:18.820
to evict it, because it's like,

28:18.820 --> 28:21.240
I'm just gonna see this thing again pretty soon.

28:21.240 --> 28:23.360
So the data impact here is that you have

28:23.360 --> 28:26.880
a much higher hit rate in most real world workloads

28:26.880 --> 28:29.120
from the ARC than you would from the LRU cache.

28:29.120 --> 28:30.340
And as we discussed before,

28:30.340 --> 28:33.000
the impact of cache is enormous.

28:33.000 --> 28:36.200
Every time you serve a read request from cache,

28:36.200 --> 28:39.480
you can serve IOPS and you also service

28:39.480 --> 28:42.040
that individual request much, much, much faster.

28:42.040 --> 28:44.320
Well, let me ask you this, am I right in saying then

28:44.320 --> 28:46.820
it's also even a little trickier with the ZFS ARC

28:46.820 --> 28:49.460
because it sounds like the adaptiveness of it

28:49.460 --> 28:50.800
takes it a little bit to figure out,

28:50.800 --> 28:53.520
oh, that is something they actually are using frequently.

28:53.520 --> 28:54.540
I will add it.

28:54.540 --> 28:57.080
Would that might not show up in a benchmark immediately?

28:57.080 --> 28:58.000
I'm not sure.

28:58.000 --> 28:58.840
You're correct.

28:58.840 --> 29:02.440
It's very difficult to trigger in a synthetic benchmark.

29:02.440 --> 29:04.620
Usually the gold standard for storage benchmarking

29:04.620 --> 29:06.320
is a tool called FIO.

29:06.320 --> 29:08.400
You can use FIO to model workloads.

29:08.400 --> 29:12.200
You can say, I want read, I want write, I want random,

29:12.200 --> 29:14.320
I want sequential, I want this block size,

29:14.320 --> 29:16.040
I want this many processes.

29:16.040 --> 29:18.980
You can mix it all together however you want.

29:18.980 --> 29:21.960
And if you're bypassing cache,

29:21.960 --> 29:24.280
it's a really, really amazing tool

29:24.280 --> 29:26.720
for modeling your exact type of workload

29:26.720 --> 29:28.840
and getting really realistic answers.

29:28.840 --> 29:30.840
But once you start looking at something

29:30.840 --> 29:33.900
that is as smart and adaptive as the ARC,

29:33.900 --> 29:37.200
it gets really difficult to synthetically benchmark it

29:37.200 --> 29:41.360
because the very synthesis tends to be way more random

29:41.360 --> 29:42.960
than an actual workload.

29:42.960 --> 29:45.320
So it doesn't really do a great job

29:45.320 --> 29:47.920
of modeling the actual impact the ARC has

29:47.920 --> 29:49.560
on you really doing real things

29:49.560 --> 29:52.680
that really do read the same data over and over again.

29:52.680 --> 29:53.760
Right.

29:53.760 --> 29:56.240
Okay, and then there's sort of the big picture question.

29:56.240 --> 29:59.680
Do you think there was some harm done by these statements?

29:59.680 --> 30:01.680
I, you know, you notice it in the comments for sure.

30:01.680 --> 30:03.680
Certain people will feel empowered now.

30:04.680 --> 30:06.560
Is there long-term harm done here

30:06.560 --> 30:09.400
because of just the scope of Linus's reach?

30:09.400 --> 30:10.960
That's kind of a complicated question to answer.

30:10.960 --> 30:13.640
The first answer is absolutely,

30:13.640 --> 30:15.720
there's no question about it.

30:15.720 --> 30:19.200
When you speak from a pulpit as tall with a mic

30:19.200 --> 30:22.960
as heavily amplified as, you know, Linus Torvalds does,

30:22.960 --> 30:25.840
when you take a crap on something, people notice.

30:25.840 --> 30:28.080
Positive comments from Linus, for example,

30:28.080 --> 30:30.680
got me, you know, that's what finally tipped me over

30:30.680 --> 30:32.160
to actually look at WireGuard,

30:32.160 --> 30:34.000
which was already on my radar

30:34.000 --> 30:35.640
as a potentially cool VPN thing.

30:35.640 --> 30:38.840
But I can't tell you how many potentially cool VPN things

30:38.840 --> 30:41.680
that I've been like, I should look at that, and never did.

30:41.680 --> 30:44.320
But Linus says, let me just say I love this code,

30:44.320 --> 30:47.440
and that day when I see him say that, I'm installing it.

30:47.440 --> 30:49.560
Yeah, that caught Wes and my attention the same.

30:49.560 --> 30:51.000
Yeah, now with that said,

30:51.000 --> 30:53.400
I mean, Linus taking a dump on something

30:53.400 --> 30:54.760
is kind of less newsworthy

30:54.760 --> 30:56.800
than him actually praising something.

30:56.800 --> 30:58.920
So I don't know that it has quite the same impact,

30:58.920 --> 31:01.120
but people absolutely do notice.

31:01.120 --> 31:05.280
Also, honestly, you know, I feel like podcasts like this one

31:05.280 --> 31:07.280
and, you know, articles like the one I wrote

31:07.280 --> 31:10.640
immediately responding in a thoughtful, detailed way,

31:10.640 --> 31:13.040
I do think they nerf a lot of that damage.

31:13.040 --> 31:15.480
So it was a negative impact.

31:15.480 --> 31:17.080
I don't think it's gonna be the end of the world

31:17.080 --> 31:19.560
because the community responded and responded pretty well.

31:19.560 --> 31:22.040
And it sends a pretty clear signal

31:22.040 --> 31:23.840
that there is demand here.

31:23.840 --> 31:26.560
You know, Wes and I were talking about this,

31:26.560 --> 31:28.640
and it could be, in part,

31:28.640 --> 31:33.640
if you look at Linux in production today in enterprises,

31:33.720 --> 31:36.800
true, some of them, and some very well-known ones

31:36.800 --> 31:39.920
are indeed using ZFS,

31:39.920 --> 31:42.360
but probably at scale, most traditional shops

31:42.360 --> 31:44.920
that have invested for, you know, maybe a few years ago,

31:44.920 --> 31:47.120
they have a NAS or a SAN.

31:47.120 --> 31:51.920
It's probably doing some sort of vendor magic hardware raid.

31:51.920 --> 31:55.360
Could be that they've iSCSI'd out the disks

31:55.360 --> 31:57.000
and they're just connecting them directly

31:57.000 --> 31:58.840
to the different machines and handling them that way.

31:58.840 --> 32:01.160
It could be they're using who knows what file system

32:01.160 --> 32:03.920
on the backend, but it's likely not ZFS,

32:03.920 --> 32:07.640
at least not if you bought something in the last five years.

32:07.640 --> 32:11.000
So I wonder if part of this is just simply

32:11.000 --> 32:13.280
at a practical user base level,

32:13.280 --> 32:14.880
there's a lot of enthusiastic people

32:14.880 --> 32:17.120
that are rolling custom solutions around ZFS

32:17.120 --> 32:20.240
that work really well, but it's not at a scale

32:20.240 --> 32:23.680
that like your SANs and your NASs are.

32:23.680 --> 32:25.400
I don't know that I would necessarily

32:25.400 --> 32:26.640
entirely agree with that.

32:26.640 --> 32:28.080
I think there's a kernel of truth to it,

32:28.080 --> 32:31.360
but I think you're probably discounting the popularity

32:31.360 --> 32:34.680
of, you know, like the IX systems, you know,

32:34.680 --> 32:37.320
that makes storage appliance.

32:37.320 --> 32:38.840
I don't want to use the word storage appliance

32:38.840 --> 32:40.920
because that's what Oracle calls their ZFS box,

32:40.920 --> 32:44.240
but they make free NAS mini and they make true NAS

32:44.240 --> 32:46.600
as their, you know, true enterprise product.

32:46.600 --> 32:49.480
And there are a lot of those things, you know,

32:49.480 --> 32:51.520
in the wild in businesses.

32:51.520 --> 32:54.360
And there are a lot of, you know, just like free NAS

32:54.360 --> 32:56.880
installations, you know, on individual boxes.

32:56.880 --> 33:00.200
It's a pretty popular backend with like an iSCSI

33:00.200 --> 33:03.600
or NFS transport, you know, to people's VMware

33:03.600 --> 33:07.480
or KVM or whatever, you know, virtualization systems.

33:07.480 --> 33:10.200
And then you've also got some people going hyper virtualized

33:10.200 --> 33:13.160
like I do with the ZFS storage part

33:13.160 --> 33:15.880
and the virtualization part all inside the same chassis.

33:15.880 --> 33:18.320
Now I think that's considerably less common

33:18.320 --> 33:19.920
because people are just so used to that idea

33:19.920 --> 33:22.280
to separate the storage silo from the vert silo.

33:22.280 --> 33:24.880
Right, it's essentially how we have it set up

33:24.880 --> 33:28.080
in the studio those we have with Docker

33:28.080 --> 33:31.200
instead of virtualization, but it's a similar setup for us.

33:31.200 --> 33:33.920
And it, I think, you know, when you look at things

33:33.920 --> 33:36.440
like ZFS send and compression that works really fast

33:36.440 --> 33:41.120
and really well and just the overall like functionality,

33:41.120 --> 33:42.040
it's a good option.

33:42.040 --> 33:43.760
There's a lot of good options, but it's certainly a good one.

33:43.760 --> 33:46.480
And I don't know if it's ever going to be possible.

33:47.680 --> 33:48.800
And maybe this is my last question

33:48.800 --> 33:50.120
because I'm curious to know your opinion on this

33:50.120 --> 33:51.120
because obviously it's just opinion,

33:51.120 --> 33:52.880
but I don't know if it's ever going to be possible

33:52.880 --> 33:54.640
for it to be officially mainlined.

33:54.640 --> 33:56.040
I think it's possible.

33:56.040 --> 33:57.840
I certainly wouldn't bet anything

33:57.840 --> 33:59.640
that you can't afford to lose on it.

33:59.640 --> 34:02.280
You know, the current situation is that

34:02.280 --> 34:05.640
there's just not really anybody with a good reason

34:05.640 --> 34:07.680
to try to bring an enforcement suit, you know,

34:07.680 --> 34:10.160
against mixing the GPL in the cuddle.

34:10.160 --> 34:13.200
That was my opinion before Canonical went all, you know,

34:13.200 --> 34:17.160
yellow swag in 2016 and just started shipping ZFS headers,

34:17.160 --> 34:19.600
you know, in their mainline kernels.

34:19.600 --> 34:20.640
I don't know if you knew that by the way,

34:20.640 --> 34:23.600
but Canonical doesn't just have ZFS in the repos.

34:23.600 --> 34:26.880
If you're using an Ubuntu machine

34:26.880 --> 34:28.720
with a kernel from Canonical,

34:28.720 --> 34:31.240
there are a cuddle licensed headers built into that kernel,

34:31.240 --> 34:33.640
whether you installed ZFS or not.

34:33.640 --> 34:36.080
But yeah, even before Canonical just went all yellow

34:36.080 --> 34:38.440
and decided to do it, my position was, you know,

34:38.440 --> 34:41.400
I don't see where anybody would want

34:41.400 --> 34:42.480
to bring a suit like that

34:42.480 --> 34:46.000
because there's literally no good outcome out of it.

34:46.000 --> 34:48.120
It feels like the most likely honestly

34:48.120 --> 34:50.720
would be a GPL partisan, you know,

34:50.720 --> 34:52.680
folks who are really, really invested in the GPL

34:52.680 --> 34:55.660
get really, really pissed about this particular topic,

34:55.660 --> 34:57.100
but they don't want to bring that suit

34:57.100 --> 34:58.940
because it's a risky ass suit.

34:58.940 --> 35:01.400
And if you bring a GPL enforcement lawsuit

35:01.400 --> 35:03.240
against somebody bundling cuddle

35:03.240 --> 35:05.860
and it doesn't go your way in court,

35:05.860 --> 35:07.560
well now you've weakened the GPL

35:07.560 --> 35:09.000
and you've weakened enforcement efforts.

35:09.000 --> 35:10.620
And that's certainly not anything

35:10.620 --> 35:13.040
that somebody who's big into the GPL wants.

35:13.040 --> 35:14.260
I don't want that.

35:14.260 --> 35:17.420
On the other hand, if you win,

35:17.420 --> 35:18.940
you've also set a precedent

35:18.940 --> 35:21.420
that's really going to put Linux very far back

35:21.420 --> 35:24.260
because if you win a cuddle enforcement lawsuit

35:24.260 --> 35:25.940
that says you can't have a cuddle kernel module,

35:25.940 --> 35:27.960
well you can't have Nvidia drivers either.

35:27.960 --> 35:30.580
Those are freaking proprietary.

35:30.580 --> 35:32.780
Now you can't have Nvidia drivers.

35:32.780 --> 35:35.460
You can't have, you know, hardware drivers

35:35.460 --> 35:39.160
for industrial stuff that requires dongles or whatever.

35:39.160 --> 35:42.020
You can't do any of all that proprietary.

35:42.020 --> 35:44.380
You have just made Linux unusable

35:44.380 --> 35:48.020
for an enormous portion of industry that it's in right now.

35:48.020 --> 35:50.860
And now you're just hoping everybody goes BSD

35:50.860 --> 35:53.020
instead of going to freaking Windows or something.

35:53.020 --> 35:54.300
Nobody wants that.

35:54.300 --> 35:57.060
This has got to be the calculation that Canonical's made

35:57.060 --> 35:59.460
is that it's just too destructive of a fight

35:59.460 --> 36:01.160
for either side.

36:01.160 --> 36:02.260
What if they won?

36:02.260 --> 36:03.240
What if they took it to court,

36:03.240 --> 36:05.580
the GPL folks take it to court and they won,

36:05.580 --> 36:07.760
the ZFS user base would get drained too.

36:07.760 --> 36:10.060
I mean, it would be so damaging

36:10.060 --> 36:13.140
to not just things like dongles,

36:13.140 --> 36:15.220
but anything else like that to your point.

36:15.220 --> 36:17.700
But transversely, if they didn't win,

36:17.700 --> 36:20.100
it would be so damaging because you would just see,

36:20.100 --> 36:22.880
you would see folks no longer have the motivation

36:22.880 --> 36:23.820
to mainline their code.

36:23.820 --> 36:25.440
They would just come up with these shim solutions

36:25.440 --> 36:26.280
and call it good.

36:26.280 --> 36:29.220
And the knock-on effects would be felt for years.

36:29.220 --> 36:30.440
Yeah, absolutely.

36:30.440 --> 36:33.820
I don't think that Canonical only had my thoughts there

36:33.820 --> 36:35.580
about, you know, nobody is going to be,

36:35.580 --> 36:37.060
nobody with any sense is going to be motivated

36:37.060 --> 36:38.780
to bring this suit.

36:38.780 --> 36:42.180
I do believe that their lawyers also told them,

36:42.180 --> 36:44.420
you know, look, we think this is fine.

36:44.420 --> 36:47.420
We're totally willing to take this to court.

36:47.420 --> 36:48.920
We think we'll come out on the other side of it.

36:48.920 --> 36:53.180
I know many years before Canonical did that,

36:53.180 --> 36:55.880
I want to say it was like 2012, 2013.

36:57.020 --> 36:59.100
I was very interested in the same question.

36:59.100 --> 37:02.020
I was about a year or two deep into, you know,

37:02.020 --> 37:03.780
my ZFS on Linux journey.

37:03.780 --> 37:05.900
I was several more years deep with ZFS,

37:05.900 --> 37:08.220
you know, on FreeBSD initially.

37:08.220 --> 37:12.340
And I convinced a local intellectual property lawyer

37:13.340 --> 37:17.440
to co-author a presentation with me

37:17.440 --> 37:19.780
for an open source conference.

37:19.780 --> 37:23.020
And basically, you know, I kind of brought him up to speed

37:23.020 --> 37:24.940
on the technical details.

37:24.940 --> 37:27.780
And, you know, he took a look at it from a legal perspective.

37:27.780 --> 37:30.820
And to my surprise, his conclusion was not only, you know,

37:30.820 --> 37:34.580
yes, you can get away with installing ZFS on Linux

37:34.580 --> 37:36.700
and then like selling somebody a system with that installed.

37:36.700 --> 37:38.820
He was like, you know, I'd be perfectly willing

37:38.820 --> 37:41.740
to take a course case defending,

37:41.740 --> 37:44.180
just putting ZFS directly in the kernel.

37:44.180 --> 37:45.340
I think it'd be good to go.

37:45.340 --> 37:47.160
And he had a lot of reasons for that.

37:47.160 --> 37:49.660
Some of which I have seen repeated elsewhere,

37:49.660 --> 37:54.260
some of which were mostly, you know, his take.

37:54.260 --> 37:56.900
But basically what I'm seeing is, you know,

37:56.900 --> 38:01.100
every time somebody who is an actual law professor

38:01.100 --> 38:03.580
or an actual practicing IP lawyer

38:03.580 --> 38:04.820
comments publicly on this,

38:04.820 --> 38:07.100
they seem to all be commenting, nah,

38:07.100 --> 38:08.620
I think we can work this out in court.

38:08.620 --> 38:11.460
That has been my observation as well.

38:11.460 --> 38:14.260
Kernel has a question, aptly named, in the mumble room

38:14.260 --> 38:16.940
about maybe Oracle playing a long game here.

38:16.940 --> 38:19.140
Letting everybody get all ZFSed up

38:19.140 --> 38:20.860
and then coming in with a big old lawsuit.

38:20.860 --> 38:23.500
Yeah, Kernel, is that your thought that that's their scheme?

38:23.500 --> 38:24.660
Yeah, I was thinking, you know,

38:24.660 --> 38:27.300
if they hold the intellectual property rights

38:27.300 --> 38:29.240
and they let everybody integrate it

38:29.240 --> 38:31.140
and then they go after people,

38:31.140 --> 38:34.420
it'd be a lot harder for us to switch over

38:34.420 --> 38:37.780
to, you know, BcashFS or something else.

38:37.780 --> 38:39.620
It would, but again,

38:39.620 --> 38:42.300
that's not really in Oracle's best interests either

38:42.300 --> 38:46.140
because Oracle is a significant Linux player

38:46.140 --> 38:48.200
and it's gonna be really damaging for them

38:48.200 --> 38:49.980
if all of a sudden unbreakable Linux

38:49.980 --> 38:51.900
becomes completely freaking useless

38:51.900 --> 38:54.460
because of a court case that they instigated

38:54.460 --> 38:55.520
that set the precedent

38:55.520 --> 38:58.120
that you can't have proprietary loadable Kernel modules.

38:58.120 --> 38:59.540
And that actually seems like a big deal

38:59.540 --> 39:03.300
to Oracle's customer base too, in particular.

39:03.300 --> 39:06.980
Exactly, I just, I don't see that happening

39:06.980 --> 39:10.020
because again, I think that it would damage them badly

39:10.020 --> 39:11.420
if they won such a suit.

39:11.420 --> 39:12.900
Now, what I used to worry about,

39:12.900 --> 39:14.500
I worried about a poison pill effect

39:14.500 --> 39:18.220
where Oracle, you know, might take a long time

39:18.220 --> 39:20.240
to let interest in open ZFS build up,

39:20.240 --> 39:21.660
wait for it to reach a critical mass,

39:21.660 --> 39:25.780
then say, oh, hey, Oracle ZFS is now GPLed

39:25.780 --> 39:27.800
and can be integrated in the Kernel.

39:27.800 --> 39:30.980
Open ZFS can't, you know, ha ha, LOL.

39:30.980 --> 39:33.140
And now everybody's, you know, scrambling to, you know,

39:33.140 --> 39:35.940
get on board the Oracle thing and yada, yada, yada.

39:35.940 --> 39:37.420
I'm less worried about that now

39:37.420 --> 39:39.500
because what I hadn't understood at the time,

39:39.500 --> 39:42.060
and this is the thing that most people

39:42.060 --> 39:43.820
who get vocal about this topic

39:43.820 --> 39:45.780
seem not to quite understand,

39:45.780 --> 39:49.060
the terms of the cuddle that Solaris ZFS

39:49.060 --> 39:51.040
was first licensed under,

39:51.040 --> 39:53.780
they include the ability for the licensed steward

39:53.780 --> 39:57.120
who is defined as the initial developer of a project.

39:57.120 --> 39:58.860
In this case, that would be Sun Microsystems,

39:58.860 --> 40:01.220
which has now been purchased by Oracle.

40:01.220 --> 40:03.540
So the initial developer is the licensed steward

40:03.540 --> 40:05.740
and the licensed steward may issue

40:05.740 --> 40:08.540
a new version of the license.

40:08.540 --> 40:11.900
If that happens, the covered code can now be used

40:11.900 --> 40:14.880
under the terms of either cuddle 1.0

40:14.880 --> 40:18.580
or the new license version introduced by the licensed steward.

40:18.580 --> 40:21.860
So it's completely possible for Oracle to fix this

40:21.860 --> 40:24.180
should enough, you know, grassroots irritation,

40:24.180 --> 40:25.940
you know, get them motivated.

40:25.940 --> 40:27.320
If they were to make, you know,

40:27.320 --> 40:30.740
the last Solaris ZFS before they turned it proprietary,

40:30.740 --> 40:32.580
if they were to add, you know,

40:32.580 --> 40:35.020
cuddle version 3.0 monkey blue or whatever,

40:35.020 --> 40:36.860
that just happened to be exactly, you know,

40:36.860 --> 40:40.140
the MIT license or the simplified BSD license,

40:40.140 --> 40:41.820
you know, which was weak permissive,

40:41.820 --> 40:44.980
but also, you know, GPL compatible.

40:44.980 --> 40:48.380
If they did that, that would automatically cover open ZFS

40:48.380 --> 40:49.820
as well as, you know,

40:49.820 --> 40:52.420
well, it wouldn't have to cover Oracle ZFS

40:52.420 --> 40:55.100
because again, you know, they own that code

40:55.100 --> 40:56.940
and it doesn't have to apply to what they did

40:56.940 --> 40:59.020
because as the owner, they can say,

40:59.020 --> 41:00.700
well, we're no longer offering that.

41:00.700 --> 41:01.540
But if they did that,

41:01.540 --> 41:03.700
that would immediately fix everything for the open ZFS folks.

41:03.700 --> 41:06.380
It would not require everybody

41:06.380 --> 41:11.060
who's ever contributed open ZFS code or Solaris ZFS code,

41:11.060 --> 41:13.180
it doesn't require them to okay it

41:13.180 --> 41:15.820
because again, if you contributed to the project

41:15.820 --> 41:19.620
to begin with, you had to contribute under cuddle one

41:19.620 --> 41:21.520
and if there wasn't an exclusion

41:21.520 --> 41:23.300
for the future license version clause,

41:23.300 --> 41:26.620
which there was not for Solaris ZFS,

41:26.620 --> 41:27.860
then that's just, you know,

41:27.860 --> 41:29.700
you agreed to that when you contributed to begin with.

41:29.700 --> 41:30.800
So it's good to go.

41:30.800 --> 41:34.020
You've essentially just laid out a potential path

41:34.020 --> 41:37.620
to eventual mainlining.

41:37.620 --> 41:39.980
And I wonder if we talked about the damage

41:39.980 --> 41:42.580
this could have potentially done these statements by Linus,

41:42.580 --> 41:45.520
but I wonder if there isn't potentially

41:45.520 --> 41:47.140
a longer term greater good

41:47.140 --> 41:50.140
if the top kernel developers play hardball,

41:50.140 --> 41:54.020
they sort of force Oracle's hand maybe long-term

41:54.020 --> 41:55.820
to do just what you laid out.

41:55.820 --> 41:58.340
I don't know that anybody can really force

41:58.340 --> 41:59.900
Oracle's hand on this.

42:01.020 --> 42:02.940
I think the potential path to success,

42:02.940 --> 42:05.700
and this is something I've discussed at some length

42:05.700 --> 42:09.020
with Brad Kuhn of the Software Freedom Conservancy.

42:09.020 --> 42:11.900
He and I don't completely see eye to eye on this topic.

42:11.900 --> 42:15.340
He's a lot more of a traditional hardline GPL partisan

42:15.340 --> 42:19.960
than I am, whereas I'm a definite GPL fan on my own code.

42:19.960 --> 42:24.780
I licensed GPL v3, but I'm a little,

42:24.780 --> 42:27.020
maybe a little bit more pragmatic about it.

42:27.020 --> 42:31.460
But at any rate, what Brad said,

42:31.460 --> 42:33.100
and it makes a lot of sense to me,

42:33.100 --> 42:35.380
is that the way that you maybe potentially

42:35.380 --> 42:36.620
get Oracle to resolve this,

42:36.620 --> 42:38.740
it amounts to a grassroots campaign.

42:38.740 --> 42:41.820
You get enough pressure, enough complaining,

42:41.820 --> 42:43.900
enough why won't you fix this?

42:43.900 --> 42:45.420
This is a thing of great good

42:45.420 --> 42:47.840
you could do at no cost to yourself.

42:47.840 --> 42:50.500
Maybe eventually you convince them that,

42:50.500 --> 42:52.580
yeah, all right, we'll do that.

42:52.580 --> 42:54.020
Sure, it'll make us look like good guys.

42:54.020 --> 42:55.260
We could use some good PR.

42:55.260 --> 42:56.500
It's not like we get a lot.

42:56.500 --> 42:57.540
That's my hope.

42:57.540 --> 42:59.060
I mean, maybe it's, I think, you know,

42:59.060 --> 42:59.900
of course there's gonna be people

42:59.900 --> 43:01.760
that completely disagree if that's even possible,

43:01.760 --> 43:04.580
but gosh, I sure like to think it could be one day.

43:04.580 --> 43:05.820
It is possible.

43:05.820 --> 43:06.860
Like I said, I'm not betting anything

43:06.860 --> 43:08.420
I can't afford to lose against it,

43:08.420 --> 43:09.860
but it's absolutely possible.

43:09.860 --> 43:12.140
To one degree, it's already been done.

43:12.140 --> 43:15.140
Brad hounded, and other people,

43:15.140 --> 43:16.980
hounded Oracle relentlessly

43:16.980 --> 43:19.900
about being the biggest GPL violator on the planet

43:19.900 --> 43:22.740
by shipping a detrace with Unbreakable Linux's kernel

43:22.740 --> 43:24.020
for years and years and years.

43:24.020 --> 43:24.860
Yes, right.

43:24.860 --> 43:26.240
And they got him to fix it.

43:26.240 --> 43:28.820
And they fixed it the exact same way

43:28.820 --> 43:30.760
that we're discussing right now.

43:30.760 --> 43:33.780
They added, you know, weak permissive license to it,

43:33.780 --> 43:36.660
and problem solved, you can now ship it with the kernel.

43:36.660 --> 43:37.500
That's true.

43:37.500 --> 43:40.180
So this is not theoretical.

43:40.180 --> 43:42.500
This could be done.

43:42.500 --> 43:44.180
We know exactly how to do it.

43:44.180 --> 43:46.100
It's just a question of, you know,

43:46.100 --> 43:49.300
do we have the collective will to make a great big,

43:49.300 --> 43:51.380
you know, public stink in the right way

43:51.380 --> 43:53.840
to convince Oracle that, you know, yes, we should do this.

43:53.840 --> 43:55.420
I think it's building.

43:55.420 --> 43:57.540
And the kernel developers not being willing to bend

43:57.540 --> 44:00.020
also sort of, I think, does hold a line.

44:00.020 --> 44:02.420
Yeah, and again, I'm not mad at them about that.

44:02.420 --> 44:05.780
I do not think Linus is wrong for his opinion

44:05.780 --> 44:09.220
that, you know, we should never integrate Cuddle code,

44:09.220 --> 44:13.500
you know, into the kernel, which is GPLv2.

44:13.500 --> 44:14.340
Right.

44:14.340 --> 44:17.740
And although, again, he shouldn't have brought it up

44:17.740 --> 44:19.420
the way he did and the context he did.

44:19.420 --> 44:20.500
And the other thing is, you know,

44:20.500 --> 44:23.980
his whole thing about I get an official letter from Oracle,

44:23.980 --> 44:25.980
no, that's stupid.

44:25.980 --> 44:28.600
You either resolve the license conflict

44:28.600 --> 44:31.940
because Oracle has, you know, added weak permissive to it,

44:31.940 --> 44:33.920
or it's resolved, you know, in a court,

44:33.920 --> 44:36.300
somebody brings in an enforcement lawsuit and loses,

44:36.300 --> 44:38.500
and now you have a court precedent that states,

44:38.500 --> 44:42.780
no, it's totally kosher, you know, to mix CDDL and GPL.

44:42.780 --> 44:45.420
At that point, that's when it becomes okay.

44:45.420 --> 44:46.260
Yeah.

44:46.260 --> 44:48.840
But until then, no, Linus is totally right for saying,

44:48.840 --> 44:51.060
you know, we're not gonna mix Cuddle and GPL code.

44:51.060 --> 44:51.980
That's fine.

44:51.980 --> 44:52.820
Right.

44:52.820 --> 44:54.860
Linus is also completely fine to say,

44:54.860 --> 44:56.460
we don't break users is about users,

44:56.460 --> 44:58.820
but we can't extend that guarantee to kernel space.

44:58.820 --> 44:59.900
You wanna play in kernel space,

44:59.900 --> 45:01.260
you gotta play like a kernel developer,

45:01.260 --> 45:02.300
you gotta keep up.

45:02.300 --> 45:04.300
That's fine.

45:04.300 --> 45:06.060
Yeah, reasonable.

45:06.060 --> 45:07.820
And what the expectation has been

45:07.820 --> 45:09.380
for a long time in that regard.

45:09.380 --> 45:10.220
I agree.

45:10.220 --> 45:12.500
Yeah, it was just some of the other comments about it.

45:12.500 --> 45:13.380
Well, all right.

45:13.380 --> 45:16.500
I feel like we've got our head around it.

45:16.500 --> 45:17.340
So thank you.

45:17.340 --> 45:18.160
Thank you, Jim.

45:18.160 --> 45:19.980
I appreciate you joining us to break that down.

45:19.980 --> 45:22.380
And we'll link to the Ars Technica post that Jim wrote

45:22.380 --> 45:23.580
that goes into even more detail

45:23.580 --> 45:25.540
and some of the history in the show notes.

45:25.540 --> 45:28.860
And Wes, before we go, we should probably do some picks.

45:28.860 --> 45:31.340
We've got a good batch, one that I've already been using

45:31.340 --> 45:32.740
since I'm on a remote connection

45:32.740 --> 45:34.580
with a very limited bandwidth.

45:34.580 --> 45:35.860
So it's time for some picks.

45:35.860 --> 45:37.540
Ooh, yeah, something you can play with

45:37.540 --> 45:38.660
while you're stuck at home.

45:38.660 --> 45:39.500
Yeah.

45:39.500 --> 45:41.180
Now, who found Bandwich,

45:41.180 --> 45:43.180
the terminal bandwidth utilization tool

45:43.180 --> 45:45.820
that was, I think it used to be known as what?

45:45.820 --> 45:47.380
Yeah, you know, I've seen this floating around.

45:47.380 --> 45:49.100
It looks to be a somewhat recent,

45:49.100 --> 45:51.400
it is written in Rust, so I knew you would like it.

45:51.400 --> 45:54.780
And that means they've got simple single binary releases.

45:54.780 --> 45:56.060
You can go download from GitHub

45:56.060 --> 45:57.440
if you just want to give it a casual try

45:57.440 --> 45:58.540
without installing it.

45:58.540 --> 46:00.220
Now, can you spell that for me?

46:00.220 --> 46:04.600
It's band, B-A-N-D-W-H-I-C-H.

46:04.600 --> 46:06.220
And it's up on GitHub.

46:06.220 --> 46:07.220
We'll put a link in the show notes.

46:07.220 --> 46:08.660
It's in the Arch repo.

46:08.660 --> 46:12.820
And it's in, apparently, it's in void Linux.

46:12.820 --> 46:15.180
And it's also, if you've got a Mac, it's a brewable.

46:15.180 --> 46:16.660
Not doing anything unique here,

46:16.660 --> 46:19.180
but it is a really handy, simple display

46:19.180 --> 46:21.900
of what connections are going on from which programs.

46:21.900 --> 46:24.620
Yeah, well, and I was surprised when I ran it

46:24.620 --> 46:27.700
that a couple of applications I had paused syncing on,

46:27.700 --> 46:30.460
and those apps were still communicating,

46:30.460 --> 46:32.140
just like doing heartbeat check-ins or whatnot.

46:32.140 --> 46:33.740
But right now, every single bit

46:33.740 --> 46:35.660
when you're broadcasting from the snow counts.

46:35.660 --> 46:38.960
So I went and closed a browser that was checking in,

46:38.960 --> 46:40.580
probably bookmark sync or something,

46:40.580 --> 46:42.060
and I closed those applications.

46:42.060 --> 46:46.300
And I think it's, I think it's been kind of helpful,

46:46.300 --> 46:48.460
specifically for today, so it was sort of perfect.

46:48.460 --> 46:52.820
But a follow-up pick, previously, on Linux Unplugged,

46:52.820 --> 46:56.860
we reviewed, or picked, STUI,

46:56.860 --> 46:59.740
a terminal-based CPU stress and monitoring utility.

46:59.740 --> 47:01.740
Well, it actually worked out pretty great

47:01.740 --> 47:05.100
because Joe was running it last night on his machine

47:05.100 --> 47:07.500
and discovered that he had a clogged fan with this thing.

47:07.500 --> 47:10.000
So just a replug for STUI,

47:10.000 --> 47:13.520
the terminal-based CPU stress and monitoring utility.

47:13.520 --> 47:16.540
It's got real pretty graphs right there in the terminal

47:16.540 --> 47:18.860
and an optional stress feature if you want to actually

47:18.860 --> 47:20.260
put some load on your system.

47:20.260 --> 47:21.340
Put it under stress.

47:21.340 --> 47:22.180
But we're not done yet.

47:22.180 --> 47:23.540
There's more picks, Wes.

47:23.540 --> 47:25.100
Oh, yeah, okay.

47:25.100 --> 47:28.380
So we've talked a little bit about Firefox Send,

47:28.380 --> 47:31.020
Mozilla's offering to be able to quickly, securely,

47:31.020 --> 47:32.580
and easily send files.

47:32.580 --> 47:33.940
That works great in a browser,

47:33.940 --> 47:37.180
but you know me, I'm mostly in the terminal, Chris.

47:37.180 --> 47:40.620
So FFSend is also Rust-based,

47:40.620 --> 47:44.100
but it's a terminal CLI interface to Firefox Send.

47:44.100 --> 47:44.980
That's awesome.

47:44.980 --> 47:46.940
Firefox Send from the command line.

47:46.940 --> 47:50.020
And then last but not least, Age.

47:50.020 --> 47:51.820
Yes, it's called Age.

47:51.820 --> 47:54.200
It's a simple and modern secure encryption tool

47:54.200 --> 47:56.700
with small, explicit keys,

47:56.700 --> 47:59.260
no configuration you got to worry about,

47:59.260 --> 48:02.020
and it goes together like a regular old UNIX command.

48:02.020 --> 48:03.000
You'll grok it immediately.

48:03.000 --> 48:05.640
We have a link in the show notes for that as well.

48:05.640 --> 48:07.860
Sometimes you just want to encrypt a single file, right?

48:07.860 --> 48:09.140
Maybe you've got some archive or you just have

48:09.140 --> 48:10.940
a single backup or you just want to, you know,

48:10.940 --> 48:13.480
have something safe and secure for transit.

48:13.480 --> 48:15.740
But we've all tried to use BGP or GPG,

48:15.740 --> 48:18.760
and it's just a horrible mess every time.

48:18.760 --> 48:21.620
This tool uses some nice modern cryptography,

48:21.620 --> 48:23.780
and it's a lot simpler to interface with.

48:23.780 --> 48:26.780
You know, I was thinking about doing

48:26.780 --> 48:28.500
my Docker compose files with this

48:28.500 --> 48:30.400
and then throw them on a cloud storage provider

48:30.400 --> 48:33.840
just to have some easy accessible backup that's offsite.

48:33.840 --> 48:34.680
So there you go.

48:34.680 --> 48:35.500
There you go.

48:35.500 --> 48:38.380
A simple, modern encryption tool for the command line, Age.

48:38.380 --> 48:41.020
And we have more picks than that,

48:41.020 --> 48:43.240
but we realized we're going to have other podcasts.

48:43.240 --> 48:44.440
So we should probably save them,

48:44.440 --> 48:49.340
but we got pick-plorific on our holiday break, Wes.

48:49.340 --> 48:50.180
Yes, we did.

48:50.180 --> 48:52.540
Although that doesn't mean we're not still soliciting

48:52.540 --> 48:55.460
some good picks or any other feedback from the audience.

48:55.460 --> 48:57.180
Well, I got some feedback for you right now.

48:57.180 --> 48:58.020
Real time.

48:58.020 --> 48:59.020
I took a look at Bandwitch.

48:59.020 --> 48:59.860
It looks pretty cool.

48:59.860 --> 49:01.600
It's got a really nice looking interface.

49:01.600 --> 49:02.440
I like that.

49:02.440 --> 49:05.380
But if you want something that's already in repos

49:05.380 --> 49:08.100
and it's just an app getaway on Ubuntu or Debian,

49:08.980 --> 49:12.420
the most direct old school, you know,

49:12.420 --> 49:15.180
tool that serves the same basic function is called NetHogs.

49:15.180 --> 49:16.020
Oh, yes.

49:16.020 --> 49:17.320
NetHogs does the same thing.

49:17.320 --> 49:18.760
It'll show you all your connections.

49:18.760 --> 49:21.320
It shows you process ID as well as, you know,

49:21.320 --> 49:25.100
the termination points on both source and destination.

49:25.100 --> 49:27.820
And there's also IFTOP.

49:27.820 --> 49:30.180
IFTOP does not show you process ID.

49:30.180 --> 49:31.540
So you can't tell if, you know,

49:31.540 --> 49:34.960
if it's Apache or NGINX or, you know, Firefox

49:34.960 --> 49:37.140
or what have you on your end that's using the bandwidth,

49:37.140 --> 49:40.340
but it does show you the source and destination terminations.

49:40.340 --> 49:43.940
And it's very useful if that's all you're looking for.

49:43.940 --> 49:45.500
Both of those are in the main repos

49:45.500 --> 49:47.360
on pretty much everything.

49:47.360 --> 49:48.200
Good ones.

49:48.200 --> 49:49.280
Yes, I love NetHogs.

49:49.280 --> 49:50.120
Thank you.

49:50.120 --> 49:50.980
Yeah, and like Wes was saying,

49:50.980 --> 49:55.420
if you have something that's a really handy desktop app,

49:55.420 --> 49:57.140
command line app, or even a web app

49:57.140 --> 49:59.020
that makes using Linux a little easier,

49:59.020 --> 50:00.180
do let us know.

50:00.180 --> 50:01.340
We've got a year of podcasts.

50:01.340 --> 50:05.120
We have now taken our totality of breaks for the entire year

50:05.120 --> 50:08.020
and the Linux Unplugged show never misses a beat.

50:08.020 --> 50:10.180
So we would love to hear your feedback,

50:10.180 --> 50:11.580
your picks, all of that.

50:11.580 --> 50:14.180
LinuxUnplugged.com slash contact.

50:14.180 --> 50:15.720
Jim, thank you for joining us.

50:15.720 --> 50:18.140
Really appreciate it and the real time feedback.

50:18.140 --> 50:21.380
Go catch more of Jim over at TechSnap.Systems.

50:21.380 --> 50:23.820
He and Wes are cracking over there these days.

50:23.820 --> 50:25.140
Been absolutely loving it.

50:25.140 --> 50:26.940
And there's a whole back catalog

50:26.940 --> 50:29.420
if you haven't been listening, so go grab that.

50:29.420 --> 50:31.460
Also, join us live next week.

50:31.460 --> 50:33.780
JBLive.tv on an old Tuesday.

50:33.780 --> 50:35.260
We do it now at noon Pacific.

50:35.260 --> 50:36.900
You can get converted to your local time skis

50:36.900 --> 50:40.460
over at JupiterBroadcasting.com slash calendar.

50:40.460 --> 50:41.700
And you can find me on Twitter.

50:41.700 --> 50:42.580
I'm at ChrisLAS.

50:42.580 --> 50:43.540
What about you, Wes?

50:43.540 --> 50:45.060
I'm at Wes Payne.

50:45.060 --> 50:46.180
And what about you, Jim?

50:46.180 --> 50:47.980
JRSSnet.

50:47.980 --> 50:49.580
Magic, there you have it.

50:49.580 --> 50:50.720
That's it.

50:50.720 --> 50:53.220
That's the podcast from the snowpocalypse.

50:53.220 --> 50:54.980
Don't forget about that live stream on Friday,

50:54.980 --> 50:57.860
assuming I can survive and get out there.

50:57.860 --> 50:59.100
Hopefully my water will unfreeze

50:59.100 --> 51:00.660
and my vehicles will become unburied.

51:00.660 --> 51:03.220
You'll be a little leaner by then, but that's okay.

51:03.220 --> 51:05.420
It's really not that bad.

51:05.420 --> 51:06.660
I put the video on the YouTube channel.

51:06.660 --> 51:07.700
I mean, it's really not that bad,

51:07.700 --> 51:10.060
but it's kind of fun for us.

51:10.060 --> 51:11.420
And people in Western Washington

51:11.420 --> 51:12.740
have no idea what to do with it.

51:12.740 --> 51:14.380
So it kind of, it makes it a whole nother bit.

51:14.380 --> 51:16.020
It makes it an event.

51:16.020 --> 51:17.620
I'm really grateful I was just able to get back

51:17.620 --> 51:18.460
for our first show of the year

51:18.460 --> 51:19.580
and we're still able to make it work

51:19.580 --> 51:20.860
via the remote connection.

51:20.860 --> 51:21.700
You never know.

51:21.700 --> 51:23.440
And there's always more when you join us live.

51:23.440 --> 51:24.340
So do that.

51:24.340 --> 51:26.180
Thanks so much for joining us here on this week.

51:26.180 --> 51:28.460
And we'll see you right back here next Tuesday.

51:28.460 --> 51:35.800
If you analyzed this video or found it interesting,

51:35.800 --> 51:41.580
see what you find in YouTube ICO in the description under.

51:41.680 --> 51:43.940
Also being good to know,

51:43.940 --> 51:47.280
you come across many VIINAL manicurists

51:47.280 --> 51:51.560
and other anonymous people using VR for their smallやrtr supply.

51:51.560 --> 51:56.880
These are primarily non-descript or non- limite.

51:56.880 --> 52:10.400
Okay, thank you everybody, JBtitles.com.

52:10.400 --> 52:14.400
Let's go vote on our title, take care of our final business, and then get this shipped

52:14.400 --> 52:16.120
over to Joe so he can edit it up.

52:16.120 --> 52:20.160
Yeah, we really need some voting here to prune through all the great suggestions.

52:20.160 --> 52:23.720
It's funny how we're running out of sounds for music.

52:23.720 --> 52:27.640
We're at the point that we're starting to run out of, you know, simple like chord structures

52:27.640 --> 52:28.640
for music.

52:28.640 --> 52:32.280
Like you just, I don't think you can really invent one of those anymore.

52:32.280 --> 52:36.520
That's what people say about movies too, you know, we're running out of new stuff, except

52:36.520 --> 52:37.800
for podcasts.

52:37.800 --> 52:39.560
There's always a new podcast out there.

52:39.560 --> 52:41.040
There's always new podcasts.

52:41.040 --> 52:45.000
I will say I am very happy that movies are finally starting to get the message that cell

52:45.000 --> 52:46.480
phones are a thing though.

52:46.480 --> 52:47.480
Yeah.

52:47.480 --> 52:48.880
Yeah, that's an entire plot point.

52:48.880 --> 52:56.320
I mean, when I watch like Die Hard and Cliffhanger and stuff, it's an entire point of the plot

52:56.320 --> 52:59.680
that they can't communicate because they can't, or they got to make it to a payphone in time

52:59.680 --> 53:02.960
and in Die Hard 3, they're all about running from phone to phone.

53:02.960 --> 53:03.960
Yeah.

53:03.960 --> 53:04.960
What a different world.

53:04.960 --> 53:06.140
And yet so similar.

53:06.140 --> 53:11.920
There was a real like run of movies in the 90s where the bad guy was over the phone.

53:11.920 --> 53:16.400
The bad guy is always over the phone and it's a whole dramatic bit of it.

53:16.400 --> 53:17.400
It's really funny.

53:17.400 --> 53:20.760
Sometimes they just fix it by releasing an EMP.

53:20.760 --> 53:22.240
It's a dark outlook, but yeah.

53:22.240 --> 53:23.240
You've got the phone.

53:23.240 --> 53:24.240
Not anymore.

53:24.240 --> 53:47.880
I think I might maybe just jam the frequency instead, but you do you, buddy.

