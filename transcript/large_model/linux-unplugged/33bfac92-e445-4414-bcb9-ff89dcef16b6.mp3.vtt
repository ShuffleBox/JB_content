WEBVTT

00:00.000 --> 00:02.960
You remember that old joke about put it in a Beowulf cluster

00:02.960 --> 00:05.680
that used to be the go-to line for every Linux user ever?

00:05.680 --> 00:07.520
That's kind of died off, hasn't it?

00:07.520 --> 00:08.680
You don't happen that much, well,

00:08.680 --> 00:11.360
I think it's because Amazon provides them for you

00:11.360 --> 00:13.060
in the cloud, you just have to pay them.

00:13.060 --> 00:17.000
The Beowulf cluster was this go-to way

00:17.000 --> 00:19.400
to cluster a bunch of machines together.

00:19.400 --> 00:22.240
But also, Wes, you could just put a bunch of CPUs

00:22.240 --> 00:24.480
in a system and then just design the workloads

00:24.480 --> 00:26.840
to spread across a farm, I suppose.

00:26.840 --> 00:30.600
Maybe that's why the Raspberry Pi cluster

00:31.600 --> 00:33.720
might just be the ideal candidate for some.

00:33.720 --> 00:35.520
It's a new system that lets users pack up

00:35.520 --> 00:40.000
to five Raspberry Pi Compute Module 3s

00:40.000 --> 00:43.920
into a single, compact, relatively low-cost,

00:43.920 --> 00:46.400
power-efficient computing cluster.

00:46.400 --> 00:49.180
Yeah, the MiniNode's Raspberry Pi 3 carrier board

00:49.180 --> 00:51.840
is designed to house multiple CM3 boards

00:51.840 --> 00:53.160
for carrying out computation

00:53.160 --> 00:55.760
at the so-called edge of the network.

00:55.760 --> 00:57.240
For instance, building automation,

00:57.240 --> 00:59.480
running a monitoring station,

00:59.480 --> 01:01.640
things like smart traffic lights in a city.

01:01.640 --> 01:03.760
The network connectivity is provided

01:03.760 --> 01:05.680
by an integrated gigabit switch

01:05.680 --> 01:08.520
to connect all of them together, so that's pretty nice.

01:09.440 --> 01:12.080
And it feeds five boards,

01:12.080 --> 01:15.720
which are also like five awesome Raspberry Pis

01:15.720 --> 01:16.960
that have gigabit connections.

01:16.960 --> 01:18.820
That's really nice.

01:18.820 --> 01:22.280
Yeah, they've also got four gigs of flash storage.

01:22.280 --> 01:26.400
Looks like no Wi-Fi or Bluetooth at the moment, though.

01:26.400 --> 01:28.640
Decent processor, 1.2 gigahertz quad-core,

01:28.640 --> 01:30.200
as you probably would expect.

01:30.200 --> 01:35.200
Okay, so prices, it's $259 for the board,

01:35.300 --> 01:40.300
and then each Raspberry Pi Compute Module is 30 bucks.

01:40.720 --> 01:42.680
Yeah, if you look at it, I mean, it is like a bigger board,

01:42.680 --> 01:45.720
and you just sort of slot these other little Pi boards

01:45.720 --> 01:46.760
right into it.

01:46.760 --> 01:49.560
Now we could have a Beowulf cluster of Raspberry Pis.

01:49.560 --> 01:54.480
You know, this is for all that edge work

01:54.480 --> 01:56.360
that you need your Raspberry Pis to do.

01:56.360 --> 01:58.920
I was thinking maybe if you're using Raspberry Pis,

01:58.920 --> 02:00.680
maybe you want a little build farm at home.

02:00.680 --> 02:01.860
Well, there you go.

02:01.860 --> 02:04.520
I feel like we need to have a committee,

02:04.520 --> 02:06.600
and that Jupyter Broadcasting maybe should form it,

02:06.600 --> 02:09.240
and then we can vote if we're gonna allow terms in.

02:09.240 --> 02:11.520
Like, we should have had a vote on hybrid cloud,

02:11.520 --> 02:14.080
and we should have a vote on edge devices,

02:14.080 --> 02:17.180
because you read this article, and it makes my skin crawl.

02:17.180 --> 02:19.800
Here's just one paragraph, edge computing

02:19.800 --> 02:22.480
is becoming increasingly common in situations

02:22.480 --> 02:25.620
where IoT sensor data needs to be processed

02:25.620 --> 02:29.480
with low latency or in near real time,

02:29.480 --> 02:33.680
or it needs to be handled locally for regulatory reasons.

02:33.680 --> 02:36.160
Edge computing is just another way

02:36.160 --> 02:38.840
of saying electronics devices, right?

02:38.840 --> 02:41.600
It's just another way of saying devices

02:41.600 --> 02:46.240
that are in the consumer's home or in the end destination.

02:46.240 --> 02:48.920
An edge device is just something

02:48.920 --> 02:52.920
that is network connected out on the edge.

02:52.920 --> 02:54.760
I don't like this term at all.

02:54.760 --> 02:55.600
It doesn't.

02:55.600 --> 02:59.880
It kind of separates between the compute device

02:59.880 --> 03:03.080
that's batching and processing this data,

03:03.080 --> 03:07.080
and the sensor, which could be an Arduino

03:07.080 --> 03:11.480
or some other low-end microcontroller device.

03:11.480 --> 03:13.520
So for example, there was a company

03:13.520 --> 03:16.200
that were doing a thing where they have cameras

03:16.200 --> 03:20.400
in elevators, and they were taking pictures

03:20.400 --> 03:24.160
of people in the elevator, and then using some intelligence

03:24.160 --> 03:25.840
to scan the picture and figure out

03:25.840 --> 03:28.440
if it looks like the person was a bad guy

03:28.440 --> 03:30.340
from the, I don't know, the look of their face

03:30.340 --> 03:33.720
or facial recognition, or it looked like they may have a gun

03:33.720 --> 03:35.920
under their clothes, or if they get the gun out

03:35.920 --> 03:37.640
or something so it could see that.

03:37.640 --> 03:40.660
But the thing that's connected to the camera

03:40.660 --> 03:43.320
doesn't have the compute power to do that.

03:43.320 --> 03:45.760
And if you had multiple elevators in a building,

03:45.760 --> 03:48.200
you'd have multiple cameras feeding into an edge device

03:48.200 --> 03:50.640
that had the compute capability to do that.

03:50.640 --> 03:53.540
So there's certainly, you've gotta have some term

03:53.540 --> 03:55.400
for the thing that's doing the compute

03:55.400 --> 03:59.040
that isn't the device that's at the very, very end

03:59.040 --> 03:59.880
of the line.

03:59.880 --> 04:02.520
Here's where I think the line should be,

04:02.520 --> 04:06.980
is if it's in your network, on their premises,

04:06.980 --> 04:11.280
you could consider that the very edge of your LAN

04:11.280 --> 04:13.760
or your WAN, you could consider that to be the edge

04:13.760 --> 04:15.960
of your network, but if the device

04:15.960 --> 04:20.080
that you are communicating with is on a separate network,

04:20.080 --> 04:21.380
that's not an edge device.

04:21.380 --> 04:23.340
That's just a node on the internet.

04:23.340 --> 04:24.880
That is just an internet node.

04:24.880 --> 04:26.400
It's not an edge device at that point.

04:26.400 --> 04:29.680
I grok that it could be a sensor collecting data,

04:29.680 --> 04:32.680
transmitting it back to a larger processing system,

04:32.680 --> 04:33.960
but if they're on separate networks,

04:33.960 --> 04:36.200
I feel like edge device is,

04:36.200 --> 04:38.000
it's a dumbification of the term.

04:38.000 --> 04:41.820
Although all of that said, I did get a tweet this last week

04:41.820 --> 04:44.320
from an elevator where that elevator

04:44.320 --> 04:46.240
was doing a file system check.

04:46.240 --> 04:48.720
So I don't know what to call that.

04:48.720 --> 04:50.960
Chris, I think you should just think about it like this.

04:50.960 --> 04:52.960
You gotta have devices to funnel data

04:52.960 --> 04:56.720
to your blockchain based machine learning platform

04:56.720 --> 04:57.880
to analyze it.

04:57.880 --> 04:58.720
Nailed it.

04:59.760 --> 05:02.560
This is Linux Unplugged, episode 278

05:02.560 --> 05:05.240
for December 4th, 2018.

05:05.240 --> 05:18.920
Welcome to Linux Unplugged, your weekly Linux talk show

05:18.920 --> 05:20.800
that's all over the world this week.

05:20.800 --> 05:21.640
My name is Chris.

05:21.640 --> 05:22.720
My name is Wes.

05:22.720 --> 05:25.560
Hello, Mr. Payne, good to be connected with you.

05:25.560 --> 05:28.880
I am in Dallas for, well, for some shenanigans

05:28.880 --> 05:30.120
that you're actually about to join me for

05:30.120 --> 05:31.920
in just a couple of days.

05:31.920 --> 05:33.320
We're gonna have our company party

05:33.320 --> 05:34.700
and now that we're part of Linux Academy,

05:34.700 --> 05:36.160
very excited about that.

05:36.160 --> 05:38.700
But we've put together a show this week

05:38.700 --> 05:41.520
that really looks back and pulls out the best bits.

05:41.520 --> 05:43.320
We've got some great community news

05:43.320 --> 05:44.520
that we're going to go through here

05:44.520 --> 05:46.380
towards the top of the show.

05:46.380 --> 05:51.380
A fascinating look at Android in the cloud.

05:51.560 --> 05:53.240
It is actually a thing.

05:53.240 --> 05:56.880
And then I had a chance to chat with the developer of Ish.

05:56.880 --> 06:01.880
ISH, you might be familiar, is a Linux shell for iOS

06:01.920 --> 06:04.200
and the developer is hard at work

06:04.200 --> 06:06.720
at implementing an entire Linux environment

06:06.720 --> 06:08.320
that iOS users can use.

06:08.320 --> 06:11.360
And so far, Apple hasn't pulled the plug.

06:11.360 --> 06:14.640
I'll talk to him about that, why he's doing it.

06:14.640 --> 06:17.620
I wanted to find out too if he was like a Linux diehard

06:17.620 --> 06:19.360
that was trying to bring Linux to iOS

06:19.360 --> 06:22.080
or if he was an iOS diehard trying to learn about Linux.

06:22.080 --> 06:24.300
So we talk about that and more.

06:24.300 --> 06:28.400
A followup on some crazy issues I've had with my laptop

06:28.400 --> 06:31.200
after connecting that GPU powered dock

06:31.200 --> 06:33.440
and you might run into it as well.

06:33.440 --> 06:36.520
In fact, it impacts more than just GPUs

06:36.520 --> 06:41.520
and then we'll take a little deep dive into Clear Linux,

06:42.120 --> 06:45.520
which has been making more and more news recently

06:45.520 --> 06:48.640
and just refresh their desktop offering.

06:48.640 --> 06:51.800
You could say double down on the desktop offering.

06:51.800 --> 06:53.280
And Wes is gonna kick the tires

06:53.280 --> 06:55.920
and I did a deep dive on the technical side of things

06:55.920 --> 06:57.600
and we'll be taking a look at Clear Linux

06:57.600 --> 06:59.060
towards the end of the show.

06:59.060 --> 07:01.800
But before we go any further,

07:01.800 --> 07:05.040
we have one bit of business we must attend.

07:05.040 --> 07:06.480
We must bring in that virtual log.

07:06.480 --> 07:08.160
Time appropriate greetings, Mumble Room.

07:08.160 --> 07:09.000
Morning.

07:09.000 --> 07:10.200
Howdy, howdy.

07:10.200 --> 07:11.280
Hello.

07:11.280 --> 07:15.520
Hello, Bruce and Popey and Sean and the Silent Drifter.

07:15.520 --> 07:16.360
All of our friends.

07:16.360 --> 07:17.320
It's good to see you.

07:17.320 --> 07:18.580
Yeah, it is nice.

07:18.580 --> 07:22.260
We have a few up in quiet listening and in staging as well.

07:22.260 --> 07:24.720
Mumble Room is cool because you could just listen

07:24.720 --> 07:29.000
in the Mumble Room and then you get like the raw untapped

07:29.000 --> 07:32.480
or I don't even know what the unfettered studio feed

07:32.480 --> 07:35.080
because it's connected to our soundboard.

07:35.080 --> 07:38.640
Anyways, I know I was gonna make that sound really cool

07:38.640 --> 07:40.840
and then I just realized it's not that cool.

07:40.840 --> 07:41.840
It's just an audio interface

07:41.840 --> 07:43.000
that plugs into our soundboard.

07:43.000 --> 07:44.760
But at the end of the day, it is,

07:44.760 --> 07:47.240
I should make it sound like the raw direct feed

07:47.240 --> 07:49.240
from the studio mixer.

07:49.240 --> 07:50.240
That's pretty good, right?

07:50.240 --> 07:51.780
That was great. That's way more hype.

07:51.780 --> 07:52.780
Thank you.

07:52.780 --> 07:53.620
Thank you.

07:53.620 --> 07:56.080
All right, well, let's start with some community news.

07:56.080 --> 07:58.260
A story that I'm a little grumpy about.

07:58.260 --> 08:02.640
And I didn't wanna be, I didn't wanna be.

08:02.640 --> 08:05.300
I wanted to be the guy that came on the air

08:05.300 --> 08:06.840
and said, I think it's time.

08:06.840 --> 08:11.260
It's been 10 years, it's time, but I can't.

08:12.140 --> 08:12.980
And I understand though.

08:12.980 --> 08:13.820
It's just what it is.

08:13.820 --> 08:16.760
The world's moving on and Zubuntu is one of them

08:16.760 --> 08:20.240
and it's official that Zubuntu will stop producing

08:21.200 --> 08:24.840
32-bit ISOs beginning with 1904.

08:24.840 --> 08:26.880
The development team has now decided to go ahead

08:26.880 --> 08:30.100
and eliminate the 32-bit builds moving forward.

08:30.100 --> 08:32.860
The change will affect Zubuntu 1904 and beyond,

08:32.860 --> 08:36.200
but not the current 1804 LTS.

08:36.200 --> 08:39.080
Yeah, the developers announced this this morning

08:39.080 --> 08:40.240
following a team vote.

08:40.240 --> 08:42.660
Interestingly, it was a six out of 10 vote.

08:42.660 --> 08:44.920
So clearly not, you know, it wasn't unanimous.

08:44.920 --> 08:47.640
There's still people out there representing 32-bit,

08:47.640 --> 08:50.920
I would imagine, especially in the Zubuntu following.

08:50.920 --> 08:54.100
This leaves LXDE or LXQT

08:54.100 --> 08:57.600
as the only Ubuntu desktop distribution still offering

08:57.600 --> 08:59.640
32-bit images moving forward.

08:59.640 --> 09:02.520
And there's just no way that's sustainable.

09:02.520 --> 09:05.600
That puts all of the work for testing,

09:05.600 --> 09:09.400
for all of that, for building, all on that project.

09:09.400 --> 09:11.560
And it's not a focus of the project.

09:11.560 --> 09:14.360
The project has, Lubuntu has stated

09:14.360 --> 09:16.620
they wanna focus on more modern hardware.

09:16.620 --> 09:20.160
Now, the common meme here is that 32-bit processors

09:20.160 --> 09:22.080
haven't shipped since the Pentium 4.

09:22.080 --> 09:26.280
But the reality is they have shipped as recently as 2011.

09:26.280 --> 09:28.640
And I grant you, that's not yesterday, but it's also-

09:28.640 --> 09:30.400
True. It's not 10 years ago.

09:30.400 --> 09:35.340
And I don't know, I hate to see,

09:36.840 --> 09:38.440
I hate to see something that seems to have

09:38.440 --> 09:43.440
a well-defined purpose to facilitate really good performance

09:45.200 --> 09:47.560
on hardware that is maybe,

09:47.560 --> 09:48.760
it wouldn't be worth a YouTube video.

09:48.760 --> 09:50.240
You know, maybe it's not a Threadripper.

09:50.240 --> 09:53.000
Maybe it doesn't have the latest and greatest GPU

09:53.000 --> 09:54.400
and the latest and greatest CPU.

09:54.400 --> 09:58.620
Maybe it's, God forbid, even running spinning Rust disks.

09:58.620 --> 09:59.460
Maybe.

09:59.460 --> 10:02.720
Isn't that where ARM is now, though?

10:02.720 --> 10:04.920
If you just have an old 32-bit processor,

10:04.920 --> 10:06.240
shouldn't you just get a nice ARM chip

10:06.240 --> 10:07.840
and probably have a better time?

10:07.840 --> 10:09.760
And we should have distributions focusing on that?

10:09.760 --> 10:12.760
Because Lubuntu has its own things outside of that, right?

10:12.760 --> 10:14.300
I mean, you can have a lean and mean

10:14.300 --> 10:16.680
Lubuntu desktop on just about any system.

10:16.680 --> 10:18.840
Not 32-bit going forward, I guess.

10:18.840 --> 10:20.080
Yeah, you're right.

10:20.080 --> 10:21.760
I guess if you have, you're saying,

10:21.760 --> 10:22.860
if you have a system that old,

10:22.860 --> 10:25.320
you could almost just go get a cheapo ARM box.

10:25.320 --> 10:27.800
That said, I mean, I do appreciate it

10:27.800 --> 10:29.640
because one of those things Linux has been.

10:29.640 --> 10:31.840
Like, it feels like there has been this part of our culture

10:31.840 --> 10:33.400
where it's like, oh, it doesn't matter.

10:33.400 --> 10:35.160
Super old Mac?

10:35.160 --> 10:36.520
Okay, we'll put Linux on it.

10:36.520 --> 10:38.780
Whatever system you have, you could put Linux on it.

10:38.780 --> 10:41.160
And some of that's fallen away.

10:41.160 --> 10:42.000
True, yeah.

10:42.000 --> 10:46.360
And I think part of it for me is this is,

10:46.360 --> 10:49.240
this is something that these distributions were serving.

10:49.240 --> 10:52.960
Like, they were super serving a specific type of user base.

10:52.960 --> 10:54.800
Like, that was the role they played.

10:54.800 --> 10:57.360
And it made room for other distributions

10:57.360 --> 11:00.880
to go hog wild in other areas.

11:00.880 --> 11:02.280
But, you know, that's just my thoughts on it.

11:02.280 --> 11:04.520
Wimpy, I would obviously love to hear your thoughts,

11:04.520 --> 11:07.640
not only as an Ubuntu Mate maintainer,

11:07.640 --> 11:10.360
but also just having years of experience

11:10.360 --> 11:12.880
with ranges of different hardware and distributions.

11:12.880 --> 11:15.440
Yeah, so we obviously made this decision,

11:15.440 --> 11:18.920
or rather I had the final decision for Ubuntu Mate

11:18.920 --> 11:22.480
to end the 32-bit Intel support.

11:22.480 --> 11:24.200
And basically that came down to the fact

11:24.200 --> 11:27.040
that there weren't the people within the team

11:27.040 --> 11:30.400
that had the hardware to test and QA this stuff.

11:30.400 --> 11:32.960
So yes, whilst there may well be devices

11:32.960 --> 11:36.160
that have been produced as little ago as seven years

11:36.160 --> 11:39.680
that have that instruction set and that processor,

11:39.680 --> 11:41.400
you've got to have people out there that are using it

11:41.400 --> 11:43.800
that are maintaining the distribution.

11:43.800 --> 11:45.880
And Wes is also quite correct

11:45.880 --> 11:49.600
that for Intel 32-bit systems of that era,

11:49.600 --> 11:53.760
the ARM platforms these days offer competitive performance

11:53.760 --> 11:56.680
and are inexpensive by comparison.

11:56.680 --> 12:00.520
And just because Anubuntu flavor

12:00.520 --> 12:03.120
is not supporting 32-bit Intel

12:03.120 --> 12:04.800
as a release architecture anymore

12:04.800 --> 12:07.080
doesn't mean that the sky is falling.

12:07.080 --> 12:10.720
There are dozens and dozens of distributions out there

12:10.720 --> 12:13.560
that cater to supporting these, you know,

12:13.560 --> 12:16.480
what are becoming niche hardware platforms

12:16.480 --> 12:17.880
and specialize in that.

12:17.880 --> 12:21.040
And I don't think any of us would be saddened

12:21.040 --> 12:23.800
to see owners of that hardware

12:23.800 --> 12:25.680
go to those niche distributions

12:25.680 --> 12:27.640
where they can be well supported.

12:27.640 --> 12:30.760
Sure, I guess I can't disagree with that.

12:30.760 --> 12:34.520
You're right, it's not like there's not somewhere else

12:34.520 --> 12:37.120
for these users to go.

12:37.120 --> 12:42.120
But what is the role then of Zubuntu and Lubuntu?

12:42.120 --> 12:45.160
I guess if their main advantage is that they have XFCE

12:45.160 --> 12:48.120
or LXQt, I don't know if that seems like enough

12:48.120 --> 12:49.080
of a differentiator.

12:49.080 --> 12:51.880
You can get that anywhere.

12:51.880 --> 12:54.720
Like the focus is sort of what made it a go-to.

12:54.720 --> 12:57.920
Like it put them in a channel for a particular type of user

12:57.920 --> 13:01.840
where the randos on the internet would filter people

13:01.840 --> 13:03.360
into that channel when they're looking for something.

13:03.360 --> 13:07.280
Like it was, in a way, it was part of their brand.

13:07.280 --> 13:09.440
And now the main thing about their brand is going away.

13:09.440 --> 13:10.760
I don't mean to dwell.

13:10.760 --> 13:12.560
I want to give Popeye a chance to jump in too.

13:12.560 --> 13:14.720
I don't think it's the main thing about their brand.

13:14.720 --> 13:19.160
It's a factor that would help you decide

13:19.160 --> 13:21.040
which ISO you were going to download

13:21.040 --> 13:23.560
if you had that old crusty laptop

13:23.560 --> 13:26.560
and you wanted to run software on it, sure.

13:26.560 --> 13:29.960
But what I find frustrating is whenever we announce

13:29.960 --> 13:33.960
the death or depreciation of something,

13:35.160 --> 13:37.480
people come out of the woodwork and tell us

13:37.480 --> 13:40.320
we should continue working on this thing.

13:40.320 --> 13:43.800
And I'm sorry, but you don't get to tell us what we work on.

13:43.800 --> 13:46.240
If you want to work on it, you could volunteer

13:46.240 --> 13:48.920
some of your time to work on it as well.

13:48.920 --> 13:51.000
Like there are plenty of people out there

13:51.000 --> 13:54.600
who will wring their hands when something

13:54.600 --> 13:57.160
is no longer supported.

13:57.160 --> 13:59.040
But they won't step up and help

13:59.040 --> 14:00.800
when people put the call out for it.

14:00.800 --> 14:02.400
And I find that incredibly frustrating.

14:02.400 --> 14:05.320
If you're not going to do anything about it, then shut up.

14:05.320 --> 14:10.320
Yeah, and that is sort of a definite,

14:10.760 --> 14:11.960
it's not the friendliest answer,

14:11.960 --> 14:13.280
but it is definitely a legitimate answer

14:13.280 --> 14:14.120
in the open source world.

14:14.120 --> 14:16.040
It's like, well, the source is there.

14:16.040 --> 14:19.760
If you want to do the work, you can do that work.

14:19.760 --> 14:24.760
And like I say, I think for the most part,

14:25.120 --> 14:28.800
it has been a really long time and the market has moved on.

14:28.800 --> 14:31.960
And the people that are running 32-bit probably don't have to.

14:31.960 --> 14:33.960
I've said that before on this show,

14:33.960 --> 14:36.520
is they don't, they likely don't have to,

14:36.520 --> 14:40.720
but it still seems to me like, you know,

14:40.720 --> 14:42.440
it's like in the world of cars,

14:42.440 --> 14:44.480
when you have a car maker that has something in their cars

14:44.480 --> 14:47.360
that makes them special when they stop doing that thing,

14:47.360 --> 14:48.760
it just sort of takes something from it.

14:48.760 --> 14:50.560
Mr. Drifter, I want to give you a chance to jump in

14:50.560 --> 14:51.920
and then perhaps we will move on.

14:51.920 --> 14:53.000
What do you think?

14:53.000 --> 14:54.120
Well, I agree with Popeye.

14:54.120 --> 14:56.600
I think that there's a lot of responsibility

14:56.600 --> 14:59.480
on the community to get in and kind of start maintaining

14:59.480 --> 15:03.400
those things because I mean, there's only so much space,

15:03.400 --> 15:05.560
even in large corporate offices,

15:05.560 --> 15:08.480
to put all of these old crusty machines

15:08.480 --> 15:10.520
and it's kind of hard to maintain it.

15:10.520 --> 15:14.280
But you had mentioned, or at least asked the question,

15:14.280 --> 15:17.160
what would we use, what is the use case then for these,

15:17.160 --> 15:21.080
like XFCE and these desktops for 64-bit?

15:21.080 --> 15:23.240
And I think that when you go on there

15:23.240 --> 15:25.720
and you just need essentially kind of a jump box

15:25.720 --> 15:29.000
or something that doesn't take a lot of resources,

15:29.000 --> 15:31.120
I still think that these different distributions

15:31.120 --> 15:33.000
are going to really excel in those areas.

15:33.000 --> 15:37.120
Right, and I think at the end of all of this discussion,

15:37.120 --> 15:38.640
you have to keep in mind the project.

15:38.640 --> 15:40.440
And if the project doesn't have the resources

15:40.440 --> 15:43.680
to do the testing and they don't have the passion

15:43.680 --> 15:46.240
to go build 32-bit boxes to make it work,

15:46.240 --> 15:47.480
then they're probably not the right project

15:47.480 --> 15:48.880
to be doing that work.

15:48.880 --> 15:50.960
And it doesn't really matter how you feel about it.

15:50.960 --> 15:53.760
It's just the reality of human nature

15:53.760 --> 15:55.760
and how these kinds of things work.

15:55.760 --> 15:58.440
This next story, I only included this in the show

15:58.440 --> 16:01.000
because just the holy shit factor of it.

16:01.000 --> 16:02.960
It's really surprising.

16:02.960 --> 16:06.720
Microsoft is throwing in the towel with Edge HTML.

16:06.720 --> 16:09.040
And today it's come out that they're instead

16:09.040 --> 16:12.920
building a web browser based around Chromium,

16:12.920 --> 16:16.600
which uses Blink as its rendering engine,

16:16.600 --> 16:18.800
essentially their web kit fork.

16:18.800 --> 16:19.680
This is massive.

16:19.680 --> 16:22.280
Woo-wee, they were also recently spotted,

16:22.280 --> 16:23.880
them being Microsoft engineers,

16:23.880 --> 16:27.000
committing code to the Chromium project

16:27.000 --> 16:29.600
to help get Google Chrome running on ARM.

16:29.600 --> 16:31.920
Perhaps some of that work will translate over

16:31.920 --> 16:35.720
to getting Anaheim running on Windows 10 on ARM too.

16:35.720 --> 16:38.080
I don't know about that, but it is interesting.

16:38.080 --> 16:41.280
I mean, think back to when IE6 was the big thing.

16:41.280 --> 16:42.120
I know.

16:42.120 --> 16:43.720
Is Microsoft done with the browser game?

16:43.720 --> 16:46.920
They're just gonna ship one, kind of phone it in?

16:46.920 --> 16:49.460
I gotta say, not particularly jazzed

16:49.460 --> 16:51.560
about another Chromium-based browser,

16:51.560 --> 16:56.560
but mind blown about the end of Internet Explorer,

16:56.600 --> 16:57.440
essentially.

16:57.440 --> 16:58.260
This is really it.

16:58.260 --> 16:59.480
I realize Edge wasn't IE,

16:59.480 --> 17:04.160
but to me this is really quite surprising

17:04.160 --> 17:07.980
because it is a massive strategic beachhead

17:07.980 --> 17:10.880
to have one of the popular web rendering engines.

17:10.880 --> 17:15.400
But it really seems like Microsoft in all areas right now

17:15.400 --> 17:19.120
is looking at it in a very humble, practical way.

17:19.120 --> 17:21.700
And they're saying, where have we lost?

17:21.700 --> 17:23.760
Where are we just not gonna win

17:23.760 --> 17:25.640
no matter how long we pay a team

17:25.640 --> 17:28.020
to work on something that we think has great battery life

17:28.020 --> 17:30.360
and great performance or whatever they wanna advertise

17:30.360 --> 17:31.920
about Edge?

17:31.920 --> 17:35.360
And they had to go and have that conversation and say,

17:35.360 --> 17:37.400
we gotta just throw in the towel here.

17:37.400 --> 17:39.780
We just gotta ship a Chromium browser.

17:39.780 --> 17:41.280
Now, we don't really know

17:41.280 --> 17:44.680
if this is going to replace Edge fully.

17:44.680 --> 17:47.880
Maybe they're just gonna swap out the ass end of Edge

17:47.880 --> 17:50.500
and never even say anything to the end user.

17:50.500 --> 17:53.100
Maybe it's only gonna be available

17:53.100 --> 17:56.020
on ARM versions of Windows.

17:56.020 --> 17:57.280
Oh. We don't know, do we?

17:57.280 --> 17:58.320
No, I mean, we don't.

17:58.320 --> 18:01.280
There's not a lot of clarity here.

18:01.280 --> 18:03.480
But I just wanna welcome Windows users

18:03.480 --> 18:04.720
to the rest of the internet.

18:04.720 --> 18:06.060
Nice to have you.

18:06.060 --> 18:10.880
And you can find the free stickers over in that corner.

18:10.880 --> 18:13.640
This next story, cue the valve sound link.

18:14.680 --> 18:16.840
Cue the, what is it called?

18:16.840 --> 18:18.680
What's that valve gong or whatever?

18:18.680 --> 18:21.160
Cue that. Cue the valve gong.

18:21.160 --> 18:24.840
Because the Steam Link lives on on the Raspberry Pi.

18:24.840 --> 18:26.000
Last week we talked about

18:26.000 --> 18:29.200
the Steam Link hardware going away.

18:29.200 --> 18:31.960
And I got a couple of notes from several people that said,

18:31.960 --> 18:33.060
I went and bought one.

18:33.060 --> 18:35.240
And then like, they were totally sold out.

18:35.240 --> 18:36.440
I almost did.

18:36.440 --> 18:37.280
I mean, it was very tempting.

18:37.280 --> 18:38.640
They were like 10 bucks for a while.

18:38.640 --> 18:40.280
That's pretty convenient.

18:40.280 --> 18:42.000
Wes, they got down to like 2.99 for a few days.

18:42.000 --> 18:42.840
Oh really?

18:42.840 --> 18:45.740
Yeah. $2.99.

18:45.740 --> 18:49.000
So anyways, there's now a beta to run the Steam Link app

18:49.000 --> 18:52.980
on your Raspberry Pi 3 and 3B Plus

18:52.980 --> 18:55.240
running Raspbian Stretch.

18:55.240 --> 18:56.160
It's a little bit funky.

18:56.160 --> 18:59.160
You have to run it and then it downloads the full app

18:59.160 --> 19:00.800
and creates a desktop shortcut

19:00.800 --> 19:03.960
and then will automatically update as needed from there.

19:03.960 --> 19:05.280
So it's not your traditional package,

19:05.280 --> 19:06.920
but sounds like it's working.

19:06.920 --> 19:10.040
Yeah. Well, you know, we do have a reporter on the scene.

19:10.040 --> 19:12.400
Let's go to him now live on location.

19:12.400 --> 19:14.200
Mr. Popey, what are you learning?

19:14.200 --> 19:17.720
So I tried it out on a new Pi B Plus 3,

19:17.720 --> 19:20.920
wherever the new one is, the fast one.

19:20.920 --> 19:25.160
And I used a Debian Stretch Raspbian image

19:25.160 --> 19:28.600
that I downloaded from the Raspberry Pi website,

19:28.600 --> 19:32.020
chucked it on a stick and then grabbed the Deb,

19:32.020 --> 19:35.520
installed it, ran it, and then connected to another machine

19:35.520 --> 19:38.660
on my network that had Steam installed,

19:38.660 --> 19:41.240
plugged in an Xbox 360 controller into the Raspberry Pi

19:41.240 --> 19:43.520
and streamed a game directly to my Raspberry Pi

19:43.520 --> 19:45.280
from my Steam machine.

19:45.280 --> 19:47.040
And it worked pretty good.

19:47.040 --> 19:47.880
It was okay.

19:47.880 --> 19:50.100
There was a few network stutters,

19:50.100 --> 19:52.360
but other than that, I mean, it's beta quality,

19:52.360 --> 19:53.320
but it worked.

19:53.320 --> 19:54.640
It worked just fine.

19:54.640 --> 19:57.280
How would you rate the quality of your Wi-Fi in your home?

19:57.280 --> 19:59.240
Because it seems like that's a pretty important component.

19:59.240 --> 20:00.080
Yeah.

20:00.080 --> 20:03.200
Wi-Fi in my house is middling to shitty.

20:03.200 --> 20:07.760
And so that wouldn't have helped,

20:07.760 --> 20:10.980
but I did do the test that it does internally

20:10.980 --> 20:12.720
and it said it was fine.

20:12.720 --> 20:17.720
I didn't have a super high frame rate game.

20:17.920 --> 20:19.820
I was playing Ultimate Chicken Horse,

20:19.820 --> 20:22.040
which is a puzzle game and, you know,

20:22.040 --> 20:23.940
but still it's one of these things

20:23.940 --> 20:24.960
where you're standing on a platform

20:24.960 --> 20:26.560
and if you're one pixel off, you fall off.

20:26.560 --> 20:29.120
So yeah, it still could affect gameplay

20:30.040 --> 20:32.600
and it wasn't perfect, but like I say, it's beta quality,

20:32.600 --> 20:34.280
but it's worth trying out

20:34.280 --> 20:38.720
and could be a good opportunity to dedicate Raspberry Pi

20:38.720 --> 20:41.400
to sit underneath the TV and play some games,

20:41.400 --> 20:44.960
streamed from a hulking great loud Steam machine

20:44.960 --> 20:46.320
somewhere else in the house.

20:46.320 --> 20:47.720
Yeah.

20:47.720 --> 20:49.480
Well, if this is part of the strategy,

20:49.480 --> 20:52.540
maybe they're gonna go Netflix on this.

20:52.540 --> 20:55.320
Like when they said that they're gonna rely

20:55.320 --> 20:57.320
on the quote unquote app,

20:57.320 --> 21:00.000
maybe what they really meant was full spectrum domination

21:00.000 --> 21:01.780
of all devices like Netflix did.

21:01.780 --> 21:04.080
Like when Netflix started streaming,

21:05.540 --> 21:08.400
it was called Instant Watch

21:08.400 --> 21:10.680
and it was supplemental and free

21:10.680 --> 21:13.680
if you had a DVD subscription, right?

21:13.680 --> 21:16.680
And then they had the Instant Watch service,

21:16.680 --> 21:19.160
which you could watch in your web browser

21:19.160 --> 21:21.400
if you were on Windows or Mac or something.

21:21.400 --> 21:23.560
I mean, we all remember the dark days.

21:23.560 --> 21:26.040
Yeah, it took years to get on Netflix on Linux

21:26.040 --> 21:27.320
and then there was all these different hacks

21:27.320 --> 21:29.560
and ways you could do it for years.

21:29.560 --> 21:34.160
And in this intervening time between the DVD service

21:34.160 --> 21:37.400
and now where it's at, they launched, well, they didn't,

21:37.400 --> 21:38.680
but in partnership with Roku,

21:38.680 --> 21:41.280
they launched the Netflix box,

21:41.280 --> 21:43.640
which later became the Roku,

21:43.640 --> 21:45.200
which is an entire platform now.

21:45.200 --> 21:50.200
And now everything you buy from toasters to televisions

21:50.200 --> 21:53.880
has a Netflix app built into it, at least in the States.

21:53.880 --> 21:58.520
And if Valve could go somewhere in this direction

21:58.520 --> 22:00.880
and maybe they could get pre-installed

22:00.880 --> 22:05.880
on things like the Nvidia Shield TV or a Roku box,

22:05.940 --> 22:08.620
or maybe even a smart TV, if it's a decent one,

22:09.720 --> 22:11.960
then the death of the Steam link starts

22:11.960 --> 22:13.260
to make a little more sense, doesn't it?

22:13.260 --> 22:15.660
Because they're following the Netflix model at that point,

22:15.660 --> 22:16.980
which seems to have worked.

22:16.980 --> 22:18.200
You don't have to buy a new device.

22:18.200 --> 22:19.560
You just have to install a new app

22:19.560 --> 22:20.600
on the device you already have.

22:20.600 --> 22:21.980
And I guess figure out a way

22:21.980 --> 22:23.360
to have a controller connect to it.

22:23.360 --> 22:24.560
So maybe not every device.

22:24.560 --> 22:25.400
Yeah, there is that.

22:25.400 --> 22:27.280
But really with Bluetooth,

22:27.280 --> 22:29.320
that your options are wider and wider.

22:29.320 --> 22:32.160
And I don't know about you,

22:32.160 --> 22:34.760
but I don't really feel like buying another box.

22:34.760 --> 22:39.120
I may have bought the next Steam link, but probably not.

22:39.120 --> 22:40.640
I don't have a 4K television.

22:40.640 --> 22:42.640
I mean, and that's because you're a niche person

22:42.640 --> 22:45.480
who knows it exists and might have considered it.

22:45.480 --> 22:48.280
It seems like the discoverability of something

22:48.280 --> 22:49.760
in an app store is a little bit better.

22:49.760 --> 22:50.840
And I think people are sick and tired

22:50.840 --> 22:52.240
of buying these set-top boxes

22:52.240 --> 22:54.360
and hooking up another box to their television.

22:54.360 --> 22:55.680
Yeah, and then they have to get a new receiver

22:55.680 --> 22:56.800
because you have so many different things

22:56.800 --> 22:58.920
that you have to plug in to, ugh.

22:58.920 --> 23:00.280
They might be onto something here.

23:00.280 --> 23:02.160
And if they can let you roll it on a few

23:02.160 --> 23:05.000
of your own devices, they integrate it into Steam OS.

23:05.000 --> 23:06.860
So if you build a Steam machine, it's just built in.

23:06.860 --> 23:09.000
You have Raspberry Pi options.

23:09.000 --> 23:12.560
All of a sudden, I'm starting to like their new strategy.

23:12.560 --> 23:14.720
So we'll see where this goes.

23:14.720 --> 23:17.680
And I think I kind of want to try it out.

23:17.680 --> 23:18.560
Kind of want to play around,

23:18.560 --> 23:20.040
maybe compare it to the Steam link one day,

23:20.040 --> 23:21.840
the actual physical hardware.

23:21.840 --> 23:24.680
Why don't we take a moment and say congratulations

23:24.680 --> 23:27.120
to friend of the show, the handsome Barton George,

23:27.120 --> 23:29.920
who is celebrating with his team

23:29.920 --> 23:34.520
six fricking years of Sputnik.

23:34.520 --> 23:36.800
It all started in the beginning of 2012

23:36.800 --> 23:39.360
with Barton's pitch to an internal innovation committee

23:39.360 --> 23:40.720
that they had at Dell.

23:40.720 --> 23:43.440
Like their own internal seed fund

23:43.440 --> 23:45.300
that they could use on a project internally

23:45.300 --> 23:46.360
if somebody had something good.

23:46.360 --> 23:48.040
And then a month after the pitch,

23:48.040 --> 23:52.200
the team or whoever he was pitching to seemed to like it.

23:52.200 --> 23:54.520
The committee gave him the go

23:54.520 --> 23:56.720
for this quote unquote exploratory project

23:56.720 --> 23:59.360
to test out the idea of a developer laptop.

23:59.360 --> 24:00.560
Just test the waters.

24:00.560 --> 24:02.760
Thankfully, I mean, there was an interested

24:02.760 --> 24:04.440
and supportive community.

24:04.440 --> 24:05.880
So with enough support,

24:05.880 --> 24:07.960
people actually said that they wanted this.

24:07.960 --> 24:11.040
It became a real product on November 29th,

24:11.040 --> 24:13.040
way back in 2012.

24:13.040 --> 24:16.180
The first Dell XPS 13 developer edition

24:16.180 --> 24:17.020
was born.

24:17.020 --> 24:19.480
Yeah, I remember the week I got to cover that

24:19.480 --> 24:21.640
in the Linux action news or in the Linux action show.

24:21.640 --> 24:23.480
And man, huge.

24:23.480 --> 24:26.480
What a big day, Dell, a shipping a Linux,

24:26.480 --> 24:28.800
like offered legit Linux laptop.

24:28.800 --> 24:29.760
And it was announced.

24:29.760 --> 24:32.480
And then it was before the orders were available,

24:32.480 --> 24:34.780
people figured out like which Windows version you could buy

24:34.780 --> 24:35.920
that was gonna be the same thing,

24:35.920 --> 24:38.160
both Broadcom wireless and yeah.

24:38.160 --> 24:39.780
But now fast forward,

24:41.560 --> 24:43.960
they're on, they're the seventh generation of laptop.

24:43.960 --> 24:44.880
So it's been six years.

24:44.880 --> 24:47.760
They've done seven generations of that laptop,

24:47.760 --> 24:50.420
shipping it with 1804 by default right now.

24:50.420 --> 24:51.440
And then they've extended that

24:51.440 --> 24:52.880
to the precision workstation line,

24:52.880 --> 24:54.080
which I just recently reviewed,

24:54.080 --> 24:56.500
which I think is a pretty killer system.

24:56.500 --> 24:58.800
And I don't think they're stopping.

24:58.800 --> 25:02.240
In fact, I think they have demonstrated to the market

25:02.240 --> 25:06.920
that this is a viable consumer segment to sell to.

25:06.920 --> 25:09.700
And I personally believe it's played a part

25:09.700 --> 25:13.620
in why you see the subsystem for Linux on Windows 10,

25:13.620 --> 25:18.620
and why you see Linux capabilities on Chrome OS.

25:18.840 --> 25:23.080
And why I think ISH or Ish,

25:23.080 --> 25:25.120
the Linux environment for iOS

25:25.120 --> 25:27.240
is smashingly popular right now.

25:27.240 --> 25:30.480
Like people are going crazy about this.

25:30.480 --> 25:35.160
So I had a chance to chat with the developer of ISH,

25:35.160 --> 25:36.520
and it was just a quick chat.

25:36.520 --> 25:40.560
He was fortunately very accommodating

25:40.560 --> 25:41.540
and willing to join me.

25:41.540 --> 25:44.400
And just, I wanted to talk about why he's doing this.

25:44.400 --> 25:46.440
And I think it all plays a role here.

25:46.440 --> 25:48.160
I think it's all part of a bigger picture

25:48.160 --> 25:52.200
about a common Linux runtime and environment

25:52.200 --> 25:56.320
that developers want, and admins, and system administrators.

25:56.320 --> 25:58.540
So I had a chance to talk to this guy.

25:58.540 --> 25:59.960
His name is Theodore.

25:59.960 --> 26:02.320
And Mr. West, go ahead and play our clip.

26:02.320 --> 26:04.640
So Theodore, welcome to Linux Unplugged,

26:04.640 --> 26:07.820
and congratulations on all the attention ISH is getting.

26:07.820 --> 26:12.600
Yeah, it's been honestly surreal to see it just go

26:12.600 --> 26:15.180
from like 20 stick-up GitHub stars

26:15.180 --> 26:16.720
to a few weeks later, 2,000.

26:16.720 --> 26:18.780
I feel like there's like three podcasts

26:18.780 --> 26:21.060
I listen to right now that are talking about it.

26:21.060 --> 26:22.960
So it's a Linux shell for iOS,

26:22.960 --> 26:25.340
and I thought maybe I kind of wanted to just pick your brain

26:25.340 --> 26:26.920
on this crazy project.

26:26.920 --> 26:30.420
And also, maybe we could start even lower.

26:30.420 --> 26:34.500
Like don't you have to emulate an entire x86 basic system

26:34.500 --> 26:35.480
to pull this off?

26:35.480 --> 26:37.780
Yeah, this took like a year and a half

26:37.780 --> 26:41.640
to get to the stage where I could actually run it

26:41.640 --> 26:44.320
on an iPod, on an iDevice.

26:44.320 --> 26:45.160
Wow.

26:45.160 --> 26:47.320
So yeah, it was a big project.

26:47.320 --> 26:49.520
I mean, the real reason I've been doing this

26:49.520 --> 26:53.920
is to learn everything I can about Linux and x86,

26:53.920 --> 26:56.240
because it's just an interesting topic to me.

26:56.240 --> 26:58.200
Are you by day a Mac user?

26:58.200 --> 27:00.280
You're not already like a Linux user

27:00.280 --> 27:02.560
who's just trying to get Linux on an iOS device.

27:02.560 --> 27:04.720
No, I mean, I'm a Mac user.

27:04.720 --> 27:07.480
I also sometimes use Linux in a VM.

27:07.480 --> 27:09.000
Oh, OK.

27:09.000 --> 27:13.400
Like for at least six months, I was developing-ish under Linux,

27:13.400 --> 27:15.360
and then I ported it to Mac.

27:15.360 --> 27:18.200
Oh, that is really interesting.

27:18.200 --> 27:21.000
Is that phase, the x86 emulation?

27:21.000 --> 27:25.700
That was when I was getting the x86 emulation to work.

27:25.700 --> 27:28.360
This was before it could have all run on an iPad.

27:28.360 --> 27:31.060
Now, is that like QMU under the hood?

27:31.060 --> 27:33.240
How are you doing that?

27:33.240 --> 27:35.360
I wrote my own x86 emulator for this.

27:35.360 --> 27:37.200
Oh, you madman.

27:37.200 --> 27:41.440
Yeah, exactly, which is why it took so long.

27:41.440 --> 27:43.320
But it must have been an interesting experiment.

27:43.320 --> 27:45.520
Oh, yeah.

27:45.520 --> 27:50.420
Yeah, QMU can't run on iOS because of the restrictions

27:50.420 --> 27:52.220
of the sandbox, because it's doing

27:52.220 --> 27:55.040
dynamic binary translation.

27:55.040 --> 27:58.760
The sandbox doesn't let you have any executable code that

27:58.760 --> 28:00.800
didn't come with the app.

28:00.800 --> 28:03.320
So it has to be done with an actual emulator

28:03.320 --> 28:07.160
of the kind that runs each instruction with C code.

28:07.160 --> 28:09.000
To try and make it a little faster,

28:09.000 --> 28:11.880
I decided that I'm going to now write an assembly language

28:11.880 --> 28:13.720
implementation of every instruction,

28:13.720 --> 28:17.680
so that at the end of the assembly language gadget,

28:17.680 --> 28:20.400
I can just make a direct jump to that construction

28:20.400 --> 28:23.480
and hopefully save a little time with decoding.

28:23.480 --> 28:25.360
That's pretty clever.

28:25.360 --> 28:28.240
And so once you got the x86 system working,

28:28.240 --> 28:32.040
you had to pick a Linux base, and you went with Alpine.

28:32.040 --> 28:33.280
That's an interesting choice.

28:33.280 --> 28:36.500
Yeah, that's because it is the smallest Linux distribution

28:36.500 --> 28:38.440
ever created.

28:38.440 --> 28:44.320
The result is that the app is like a three megabyte download.

28:44.320 --> 28:45.840
And it includes an entire Linux distro

28:45.840 --> 28:47.960
that has a package manager and can install anything.

28:47.960 --> 28:48.880
That's a great point.

28:48.880 --> 28:49.400
It is.

28:49.400 --> 28:50.080
It's impressive.

28:50.080 --> 28:52.080
And the only way to really get my hands on it

28:52.080 --> 28:54.760
is to go through TestFlight right now.

28:54.760 --> 28:57.360
And I feel like that maybe we should talk about that.

28:57.360 --> 28:58.760
It seems like that could potentially

28:58.760 --> 28:59.940
be the big elephant in the room, is you

28:59.940 --> 29:01.980
could end up spending, theoretically, what,

29:01.980 --> 29:03.480
two years on this project?

29:03.480 --> 29:05.920
And then Apple just never accepts it to the app store.

29:05.920 --> 29:07.840
I mean, that could happen.

29:07.840 --> 29:11.640
But I've already learned so much about how Linux works

29:11.640 --> 29:13.880
and about how x86 works.

29:13.880 --> 29:15.720
Even if that happens, it's still worth it.

29:15.720 --> 29:19.500
And it seems like you've struck upon a real nerve here,

29:19.500 --> 29:22.400
that there is a bit of a need for a command line

29:22.400 --> 29:25.080
like environment on an iOS device, especially the iPad

29:25.080 --> 29:25.600
Pro.

29:25.600 --> 29:28.760
Yeah, the amount of interest that I've seen on this

29:28.760 --> 29:32.120
has really kind of surprised me, because who wants

29:32.120 --> 29:35.360
to program on an iPad?

29:35.360 --> 29:38.760
But yeah, apparently people do, because Apple

29:38.760 --> 29:41.760
has been telling them that their iPad is essentially a computer.

29:41.760 --> 29:43.800
So they want to now be able to program.

29:43.800 --> 29:45.320
There's all these little edge cases

29:45.320 --> 29:48.120
where you've got a great portable system,

29:48.120 --> 29:50.480
but you just need access to a command line utility.

29:50.480 --> 29:51.480
Maybe it's SSH.

29:51.480 --> 29:53.040
Maybe it's something like YouTube DL.

29:53.040 --> 29:53.540
Who knows?

29:53.540 --> 29:54.880
It's just one of these things.

29:54.880 --> 29:56.280
Everybody's got their edge case.

29:56.280 --> 29:58.120
Yeah, that is true.

29:58.120 --> 30:02.600
There are plenty of nice command line utilities.

30:02.600 --> 30:05.560
There are plenty of things I can do easily on the command line.

30:05.560 --> 30:08.800
But on an iPad, I would have to go searching through the App

30:08.800 --> 30:12.160
Store, maybe find some app that costs $5.99.

30:12.160 --> 30:13.500
I mean, who am I, Theodore?

30:13.500 --> 30:15.160
But if I was sitting at Apple right now

30:15.160 --> 30:16.580
and I was looking at the market, I

30:16.580 --> 30:20.160
would be looking at the success of the Windows subsystem

30:20.160 --> 30:21.840
for Linux on Windows 10.

30:21.840 --> 30:26.000
And I would be looking at Google adding Linux app and command

30:26.000 --> 30:28.520
line capabilities to Chrome OS, which

30:28.520 --> 30:30.880
was always supposed to be the most simple OS out there.

30:30.880 --> 30:32.380
It's just nothing but a web browser.

30:32.380 --> 30:34.780
And now you can get a Debian command line.

30:34.780 --> 30:39.000
And iOS is sort of the oddball out on this.

30:39.000 --> 30:42.640
Yeah, it's like the only OS that doesn't

30:42.640 --> 30:48.080
have a built-in Linux or Unix-like shell.

30:48.080 --> 30:50.400
So yeah, I'm really hoping that Apple

30:50.400 --> 30:54.360
will see the demand on this and realize that it's something

30:54.360 --> 30:56.400
that they should think about.

30:56.400 --> 30:59.160
I mean, the fact that they haven't yanked it

30:59.160 --> 31:01.720
from test flight already is, I guess,

31:01.720 --> 31:02.800
a bit of a positive signal.

31:02.800 --> 31:04.560
Yeah, yeah, that's a good way to look at it.

31:04.560 --> 31:05.840
That's what I was thinking when I installed it.

31:05.840 --> 31:08.520
The fact that they're doing this is a potential signal

31:08.520 --> 31:11.240
because I hope they recognize it might not even

31:11.240 --> 31:12.760
be that people want the command line.

31:12.760 --> 31:15.200
Because I suppose it would never happen, right?

31:15.200 --> 31:18.680
But in theory, Apple could ship a Bash shell app that

31:18.680 --> 31:21.400
would give you access to the Unix

31:21.400 --> 31:24.560
subsystem that may be rolling around underneath iOS.

31:24.560 --> 31:26.680
But they're not likely going to do that, are they?

31:26.680 --> 31:28.160
And people want Linux.

31:28.160 --> 31:34.520
No, I mean, if they shipped a Bash shell with iOS,

31:34.520 --> 31:36.000
that would essentially be a jailbreak.

31:36.000 --> 31:36.500
Right.

31:36.500 --> 31:37.000
Yeah.

31:40.040 --> 31:42.960
I tell you it'd be more shocking than a lot of the other things

31:42.960 --> 31:43.760
Apple has announced.

31:43.760 --> 31:45.760
It's more shocking than USB-C on the iPad Pro.

31:45.760 --> 31:48.360
It would be unheard of.

31:48.360 --> 31:50.920
But at the same time, Theodore, I have to be honest,

31:50.920 --> 31:53.800
the technologist in me cries a little bit

31:53.800 --> 31:56.760
that you have to construct an entire virtual machine

31:56.760 --> 31:59.880
on a mobile device to get a command line.

31:59.880 --> 32:01.840
Yeah.

32:01.840 --> 32:04.720
It's kind of disappointing, honestly.

32:04.720 --> 32:07.200
And it also makes it incredibly slow.

32:07.200 --> 32:10.320
Well, you've got an amazing performance.

32:10.320 --> 32:13.120
And like you mentioned earlier, size out of this, too.

32:13.120 --> 32:14.000
I'm very impressed.

32:14.000 --> 32:16.200
But I wonder if this thing isn't going

32:16.200 --> 32:17.880
to just start growing like crazy.

32:17.880 --> 32:20.400
Because you must be having feature requests coming in

32:20.400 --> 32:22.400
like nuts for everybody's little edge case.

32:22.400 --> 32:23.080
Oh, yeah.

32:23.080 --> 32:27.080
My GitHub issues page is filled with those.

32:27.080 --> 32:30.440
There's an issue that's titled, improve the performance.

32:30.440 --> 32:32.880
Yes, I saw that.

32:32.880 --> 32:34.040
And that's like, oh, thanks.

32:34.040 --> 32:35.400
OK, very helpful.

32:35.400 --> 32:36.880
OK.

32:36.880 --> 32:40.360
I mean, yeah, if anyone has any brilliant ideas

32:40.360 --> 32:42.680
on how to make this faster without jailbreaking

32:42.680 --> 32:45.840
their device, please tell me.

32:45.840 --> 32:47.920
I mean, really, it is just you right now, yeah?

32:47.920 --> 32:48.440
Yeah.

32:48.440 --> 32:49.820
Do you want to keep it that way?

32:49.820 --> 32:51.620
Would you want to actually make this a?

32:51.620 --> 32:53.120
I would love to have contributions.

32:53.120 --> 32:55.120
I've gotten quite a few pull requests, actually,

32:55.120 --> 32:59.320
from people who want to fix this or that system call.

32:59.320 --> 33:01.800
And that's been really great.

33:01.800 --> 33:04.120
So I would, of course, love to have more of that.

33:04.120 --> 33:05.440
And you pronounce it ish, right?

33:05.440 --> 33:07.960
So ish itself, is it GPL, or what is it right now?

33:07.960 --> 33:12.040
It is GPL, GPL version 3, which does probably

33:12.040 --> 33:14.360
a pretty good job of protecting against anyone

33:14.360 --> 33:15.760
who wants to try and sell it.

33:15.760 --> 33:17.340
And you're touching a lot of Linux,

33:17.340 --> 33:19.840
so I think that all makes a lot of sense.

33:19.840 --> 33:21.720
So you are open to the idea of maybe making

33:21.720 --> 33:23.040
this a bit of a larger project.

33:23.040 --> 33:25.280
Of course, I mean, this is a really tricky thing

33:25.280 --> 33:26.440
you're doing here, Theodore.

33:26.440 --> 33:28.440
This is some seriously low-level stuff.

33:28.440 --> 33:29.360
I'm really impressed.

33:29.360 --> 33:30.840
Yeah.

33:30.840 --> 33:31.560
I mean.

33:31.560 --> 33:32.920
I don't know if everybody could pick that up.

33:32.920 --> 33:33.600
You know what I mean?

33:33.600 --> 33:34.920
That's not something that most people

33:34.920 --> 33:37.600
are going to roll in and be able to solve those problems.

33:37.600 --> 33:39.280
Yeah.

33:39.280 --> 33:40.840
Really, again, I say somebody at Apple

33:40.840 --> 33:43.920
ought to just hire you up and make this an official project.

33:43.920 --> 33:45.760
Man, I would love that.

33:45.760 --> 33:48.080
All right, well, if people are listening right now

33:48.080 --> 33:50.160
and they're excited about perhaps getting

33:50.160 --> 33:53.000
a legitimate Linux command line on an iOS device,

33:53.000 --> 33:54.200
we've been talking iPad.

33:54.200 --> 33:56.920
But you can run it on a phone, too, right?

33:56.920 --> 33:58.840
Yeah, it works perfectly fine there.

33:58.840 --> 34:00.000
Or even a touch.

34:00.000 --> 34:00.660
Yeah.

34:00.660 --> 34:02.800
So how can people support you?

34:02.800 --> 34:06.360
The best way to support the development of this thing

34:06.360 --> 34:11.000
is to go to GitHub, find some program that doesn't work,

34:11.000 --> 34:12.840
and take a shot at fixing it yourself.

34:12.840 --> 34:16.760
And that is probably the most valuable thing

34:16.760 --> 34:18.960
you can do to help this project out.

34:18.960 --> 34:20.400
You can also give me money.

34:20.400 --> 34:22.960
I'm not going to say, no, I don't want your money.

34:22.960 --> 34:25.080
But that will motivate me to keep working on it.

34:25.080 --> 34:27.280
But not be as motivating as seeing

34:27.280 --> 34:32.800
people who care about it enough to take time to write code.

34:32.800 --> 34:35.120
Yeah, and I noticed a couple of times

34:35.120 --> 34:38.160
it's really just changing how the application does

34:38.160 --> 34:38.920
input or output.

34:38.920 --> 34:42.440
It's not major code development to get individual apps working.

34:42.440 --> 34:44.240
There are so many programs where the fix is

34:44.240 --> 34:46.880
like one line of code.

34:46.880 --> 34:50.720
Well, Theodore, please keep up the great work.

34:50.720 --> 34:52.640
You're making these devices more valuable.

34:52.640 --> 34:54.380
And I really appreciate your hard work.

34:54.380 --> 34:55.800
Thank you for coming on the show.

34:55.800 --> 34:57.360
And let's chat in the future.

34:57.360 --> 34:58.280
Oh, yeah, yeah.

34:58.280 --> 34:59.640
Thank you for inviting me on.

34:59.640 --> 35:01.200
Now, you can go get your hands on this

35:01.200 --> 35:03.680
if he has enough test pilot licenses still available.

35:03.680 --> 35:05.960
I don't really understand how that system works.

35:05.960 --> 35:09.000
But we'll have a link to his website in the show notes

35:09.000 --> 35:12.200
at linuxunplugged.com slash 278.

35:12.200 --> 35:14.920
So just go there and get a link to that.

35:14.920 --> 35:16.960
And I think this is a really nice idea

35:16.960 --> 35:23.080
that I'd really be bummed if Apple were to shut this down.

35:23.080 --> 35:26.040
Because I think a lot of us have an old iPad somewhere floating

35:26.040 --> 35:27.640
around that would be pretty cool to be able to pull up

35:27.640 --> 35:28.720
a Linux terminal on.

35:28.720 --> 35:30.720
Yeah, and he's gone to such lengths

35:30.720 --> 35:33.000
to try to be compliant.

35:33.000 --> 35:34.520
It's not trying to jailbreak.

35:34.520 --> 35:37.040
It's not trying to flout Apple's rules.

35:37.040 --> 35:40.640
It's just something people want to use computers for.

35:40.640 --> 35:45.120
And I asked him, why not just use QEMU or something?

35:45.120 --> 35:50.840
Why did you build an entire x86 virtual machine?

35:50.840 --> 35:52.960
I mean, hell of a project, but why?

35:52.960 --> 35:57.200
And the answer was so obvious when I asked it.

35:57.200 --> 35:58.760
It made me feel like an idiot.

35:58.760 --> 36:02.040
You can't run QEMU on the A12X.

36:02.040 --> 36:04.640
You're not going to be able to run any virtualizer

36:04.640 --> 36:08.400
on the market right now on the Apple A series processors.

36:08.400 --> 36:10.640
You've got to build for those chips, basically.

36:10.640 --> 36:13.280
And so that's what he's been doing for the last year.

36:13.280 --> 36:16.320
I mean, it does sound like a great project.

36:16.320 --> 36:17.840
Talk about a passion project, right?

36:17.840 --> 36:19.080
I mean, that's one of the things.

36:19.080 --> 36:21.560
And then to turn around and release it all as GPL.

36:21.560 --> 36:24.160
If you take away the iOS, he's been

36:24.160 --> 36:27.320
building a virtual machine for a very specialized series

36:27.320 --> 36:33.240
of ARM processors that millions of people have,

36:33.240 --> 36:35.120
and he's GPLing it all.

36:35.120 --> 36:36.460
That's awesome.

36:36.460 --> 36:37.920
I think it is really cool.

36:37.920 --> 36:39.520
I think that's a pretty neat story.

36:39.520 --> 36:41.640
So thank you to Theodore for coming on the show

36:41.640 --> 36:42.640
and telling us about it.

36:42.640 --> 36:46.280
Now let's shift gears and talk about Android,

36:46.280 --> 36:50.440
but maybe not Android so much in your pocket,

36:50.440 --> 36:52.600
but Android in the cloud.

36:52.600 --> 36:59.240
Now Simon on the Ubuntu blog has posted a really interesting

36:59.240 --> 37:03.320
rundown of how they are enabling Android

37:03.320 --> 37:07.520
to run on Amazon's EC2 A1 instances.

37:07.520 --> 37:13.400
Now those A1 instances are them new fancy AMD, or I'm sorry,

37:13.400 --> 37:14.240
it was almost AMD.

37:14.240 --> 37:14.800
It was almost.

37:14.800 --> 37:15.840
ARM processors.

37:15.840 --> 37:16.520
Yeah.

37:16.520 --> 37:18.160
This is an interesting story though, Wes.

37:18.160 --> 37:20.560
Why don't you tell us the story, what little side tangent

37:20.560 --> 37:23.560
that Amazon just launched ARM servers,

37:23.560 --> 37:27.720
but they were almost AMD ARM servers.

37:27.720 --> 37:30.120
Yeah, up until 2015, Amazon and AMD

37:30.120 --> 37:33.160
were working together on a 64-bit ARM server grade

37:33.160 --> 37:34.700
processor to deploy.

37:34.700 --> 37:37.800
I mean, of course, they want them everywhere in their data

37:37.800 --> 37:38.320
centers.

37:38.320 --> 37:39.520
It's tough to get that to work.

37:39.520 --> 37:41.960
It was a big deal, and of course, the project

37:41.960 --> 37:45.080
fell apart when, according to one well-placed source,

37:45.080 --> 37:48.400
AMD failed at meeting all of Amazon's performance

37:48.400 --> 37:49.320
requirements.

37:49.320 --> 37:49.920
Ouch.

37:49.920 --> 37:52.240
Yeah, in classic Amazon style, they went out and actually

37:52.240 --> 37:54.120
bought someone who had already licensed

37:54.120 --> 37:57.840
from ARM, a system on a chip designer, Annapurna Labs.

37:57.840 --> 37:59.880
And then they just put that team to work building

37:59.880 --> 38:01.000
all the things they wanted, right?

38:01.000 --> 38:03.160
Internet of Things gateways, the Nitro chipset

38:03.160 --> 38:04.400
that they're using.

38:04.400 --> 38:06.520
That's for handling network and storage tasks

38:06.520 --> 38:08.600
that back EC2 machines.

38:08.600 --> 38:10.800
So they've already got a lot going on,

38:10.800 --> 38:13.160
and now they've got this team of talented people

38:13.160 --> 38:14.120
who are designing chips.

38:14.120 --> 38:15.480
They've got it right in house.

38:15.480 --> 38:19.560
So this last week or so, Amazon announced these new rigs,

38:19.560 --> 38:25.520
these A1 instances, that use the custom AWS Graviton processor

38:25.520 --> 38:27.440
based on the ARM architecture.

38:27.440 --> 38:30.160
And when you read through this blog post that's

38:30.160 --> 38:35.480
up on Canonical's blog, blog.abuntu.com,

38:35.480 --> 38:39.160
they talk about using LXD containers

38:39.160 --> 38:45.600
to stream Android games from an EC2 instance to a mobile phone

38:45.600 --> 38:46.560
over the internet.

38:46.560 --> 38:50.960
And they are running a genuine Android environment

38:50.960 --> 38:53.760
and Android applications in the cloud

38:53.760 --> 38:56.120
and then streaming the results down to the phone.

38:56.120 --> 39:02.800
So I dialed up our go-to ARM expert, Mr. Wimpris.

39:02.800 --> 39:04.800
No, Wimpy, you were actually the one that

39:04.800 --> 39:05.800
linked this to me originally.

39:05.800 --> 39:07.600
I didn't see this until you linked it to me.

39:07.600 --> 39:10.720
So I wanted to pick your brain a little bit about some of this.

39:10.720 --> 39:13.480
This seems really far out there over a mobile network

39:13.480 --> 39:14.120
and all of that.

39:14.120 --> 39:15.800
How is this even possible?

39:15.800 --> 39:21.560
Yeah, so this is demonstrating a number of the technologies

39:21.560 --> 39:25.000
that Canonical and Ubuntu have on offer

39:25.000 --> 39:29.360
to model scale-out workloads in the cloud

39:29.360 --> 39:33.000
and then deploy that stack very, very quickly.

39:33.000 --> 39:35.240
So it uses MAS, which is Metal as a Service,

39:35.240 --> 39:38.040
and Juju, which is the orchestration component,

39:38.040 --> 39:39.960
and then LXD containers, which are

39:39.960 --> 39:43.080
containers of all of these Android instances.

39:43.080 --> 39:45.880
So it's kind of proving out all of this capability.

39:45.880 --> 39:49.040
And the applications that run inside those LXD containers

39:49.040 --> 39:51.440
are all snaps and what have you.

39:51.440 --> 39:55.320
So it's kind of demonstrating the whole product

39:55.320 --> 39:57.240
suite working together.

39:57.240 --> 39:59.800
But the reason that we have this capability

39:59.800 --> 40:02.600
is there are actually customers that are interested in running

40:02.600 --> 40:03.760
Android in the cloud.

40:03.760 --> 40:07.080
And this is something that we're actively working on.

40:07.080 --> 40:09.880
And it's unfortunate Simon, due to time zones,

40:09.880 --> 40:12.320
wasn't able to join us this evening.

40:12.320 --> 40:16.360
But he's the tech lead behind this particular group

40:16.360 --> 40:17.600
of technologies.

40:17.600 --> 40:21.560
Now, I'm struggling to understand the use case

40:21.560 --> 40:22.760
for Android in the cloud.

40:22.760 --> 40:25.000
I get game streaming, but I don't quite

40:25.000 --> 40:28.200
see how game streaming seems like it

40:28.200 --> 40:32.320
would be at its fundamental weakness over a mobile network.

40:32.320 --> 40:35.280
There's so many latency issues and variables.

40:35.280 --> 40:36.600
There's a couple of things there.

40:36.600 --> 40:40.080
So game streaming is certainly one of the use cases.

40:40.080 --> 40:41.920
And when you talk about game streaming,

40:41.920 --> 40:46.400
most people think about streaming H.264 video,

40:46.400 --> 40:48.080
a bit like the Steam Link does that we

40:48.080 --> 40:50.080
were talking about earlier on the Raspberry Pi

40:50.080 --> 40:52.480
app, for example.

40:52.480 --> 40:54.440
The technologies here can do one of two things.

40:54.440 --> 40:58.200
They can stream H.264 video, or they

40:58.200 --> 41:02.520
can stream the OpenGL commands.

41:02.520 --> 41:07.800
So in the demonstration that's in the video in the blog post,

41:07.800 --> 41:13.120
that's actually streaming the OpenGL commands from the cloud

41:13.120 --> 41:14.440
to the client device.

41:14.440 --> 41:18.480
So it's rendered client side using the GPU capabilities

41:18.480 --> 41:19.240
on the device.

41:19.240 --> 41:21.920
So that's one kind of distinction.

41:21.920 --> 41:25.160
Now, the other reason is that why game streaming is

41:25.160 --> 41:29.000
attractive to game developers is when you're targeting Android,

41:29.000 --> 41:33.400
you have a number of Android API versions that you can target.

41:33.400 --> 41:36.160
And depending on your generation of Android device

41:36.160 --> 41:38.040
that's on the client depends whether or not

41:38.040 --> 41:40.600
that client has access to that game.

41:40.600 --> 41:44.480
If you have your game or your application deployed

41:44.480 --> 41:48.160
in the cloud against a known API version,

41:48.160 --> 41:51.520
it doesn't actually matter what the client version of Android

41:51.520 --> 41:56.000
is, because now you're doing the compute in the cloud,

41:56.000 --> 41:59.000
and you're just streaming the visuals down

41:59.000 --> 42:00.520
to the client device.

42:00.520 --> 42:05.320
So you can narrow where you focus your development effort

42:05.320 --> 42:08.760
to a known API constraint.

42:08.760 --> 42:12.320
But I think you've also got CI and unit testing and stuff

42:12.320 --> 42:14.960
like that, like spin up 1,000 Android instances

42:14.960 --> 42:17.080
to test it against various versions.

42:17.080 --> 42:18.640
Right, exactly so.

42:18.640 --> 42:20.960
If you want to do testing at scale,

42:20.960 --> 42:25.200
having 100 or 1,000 devices is infeasible, impractical.

42:25.200 --> 42:28.840
But if you want to spin up dozens, tens, hundreds,

42:28.840 --> 42:32.800
thousands of instances in the cloud

42:32.800 --> 42:36.360
to run your automated tests, then that's now something

42:36.360 --> 42:38.800
that you can do relatively inexpensively.

42:38.800 --> 42:41.200
Yeah, that seems like it could be a pretty significant use

42:41.200 --> 42:42.760
case, is development testing.

42:42.760 --> 42:45.640
Yeah, and the other use case is if you

42:45.640 --> 42:49.440
have a sensitive application, let's say a banking

42:49.440 --> 42:52.640
application, if you have that in the cloud,

42:52.640 --> 42:55.200
then it can't be tampered with on the local device.

42:55.200 --> 42:57.120
So if you stream it from the cloud,

42:57.120 --> 43:01.720
it's sandboxed away from the users of the application,

43:01.720 --> 43:04.200
so you can't pull it apart and reverse engineer it.

43:04.200 --> 43:06.600
Silent Drifter, were you thinking along the lines

43:06.600 --> 43:08.000
of development testing when you said you

43:08.000 --> 43:09.560
can see a couple of use cases?

43:09.560 --> 43:11.040
Part of it was development testing,

43:11.040 --> 43:12.640
but my other thought was it would also

43:12.640 --> 43:15.240
be really nice, especially where there's so much hype right

43:15.240 --> 43:16.920
now about the idea of convergence,

43:16.920 --> 43:18.320
that it would be really nice to be

43:18.320 --> 43:21.600
able to put all of that heavy computation in the cloud.

43:21.600 --> 43:24.480
And then you can offer a lot more services

43:24.480 --> 43:26.000
on the application of your phone,

43:26.000 --> 43:27.120
even though it's all running, you're

43:27.120 --> 43:28.840
just kind of sending off the data

43:28.840 --> 43:30.760
to do the heavy crunching for you.

43:30.760 --> 43:31.760
Right.

43:31.760 --> 43:33.800
I could definitely see that as well.

43:33.800 --> 43:35.920
I think this is a pretty cool demonstration.

43:35.920 --> 43:37.720
And if you want to look at the video,

43:37.720 --> 43:40.840
it's about two minutes long, and it's embedded in the blog

43:40.840 --> 43:41.920
post that we'll have linked.

43:41.920 --> 43:44.800
And one of the nice things is it's a single Juju command

43:44.800 --> 43:47.440
to set up the entire Android environment, the containers,

43:47.440 --> 43:48.680
and all of it.

43:48.680 --> 43:50.280
So it is, like Wimpy was saying, it's

43:50.280 --> 43:52.280
a pretty good demonstration of the stack.

43:52.280 --> 43:54.640
Yeah, and all of the network orchestration

43:54.640 --> 43:55.840
that goes on behind it.

43:55.840 --> 43:58.280
And there's another potential upside there

43:58.280 --> 44:00.040
for games developers.

44:00.040 --> 44:04.280
If you've got an MMO, if you have that now deployed

44:04.280 --> 44:07.560
in the cloud and streamed down to the client,

44:07.560 --> 44:11.320
you can have the high speed backbone network

44:11.320 --> 44:15.920
infrastructure that exists in these public cloud providers

44:15.920 --> 44:18.000
brokering the network interactions

44:18.000 --> 44:20.400
between these multiple instances of these games

44:20.400 --> 44:23.320
rather than over your cellular network.

44:23.320 --> 44:29.160
So hopefully less lag and more low latency game interactions.

44:29.160 --> 44:30.880
And I just realized, if it's an MMO,

44:30.880 --> 44:32.360
you've also got instant anti-cheat,

44:32.360 --> 44:33.320
just like with the banking app.

44:33.320 --> 44:34.760
You've got anti-cheat, because in the cloud,

44:34.760 --> 44:36.160
any user can't tamper with it.

44:36.160 --> 44:37.400
Exactly, yeah.

44:37.400 --> 44:38.960
Just like the banking application,

44:38.960 --> 44:40.320
you can't tamper with the local app,

44:40.320 --> 44:41.640
because there is no local app.

44:41.640 --> 44:44.280
That's one way to solve the Android fragmentation problem.

44:44.280 --> 44:48.640
But I think the thing that impresses me the most

44:48.640 --> 44:51.640
is the capability of streaming the OpenGL commands down

44:51.640 --> 44:54.720
to the client and then have the rendering done on the local GPU.

44:54.720 --> 44:56.320
That's pretty slick.

44:56.320 --> 44:57.440
Yeah, that's pretty neat.

44:57.440 --> 44:59.680
Simon's a clever guy.

44:59.680 --> 45:02.680
Maybe sometime soon, he'll be able to come on here

45:02.680 --> 45:04.760
and talk to you about this in more depth.

45:04.760 --> 45:06.160
Oh, I would love that.

45:06.160 --> 45:10.120
But at the moment, this is a developing technology.

45:10.120 --> 45:11.800
We're working alongside a few sort

45:11.800 --> 45:14.400
of business partners in a couple of different areas

45:14.400 --> 45:17.760
and watch this space for more news about this.

45:17.760 --> 45:21.400
And hopefully, it'll come to a cloud new use soon.

45:21.400 --> 45:24.480
Have you had this problem with your external GPUs

45:24.480 --> 45:28.240
that I've run into, where SystemD Udev consumes

45:28.240 --> 45:31.400
an entire core, and it just sits there and runs one of your cores

45:31.400 --> 45:33.680
non-stops after you boot, if you boot up

45:33.680 --> 45:36.800
without your Nvidia graphics card connected?

45:36.800 --> 45:37.760
Have you had this?

45:37.760 --> 45:38.600
I have not.

45:38.600 --> 45:42.040
Oh, well, I have, as a result of trying out the GPU dock.

45:42.040 --> 45:46.920
And it was causing issues with my audio because of the CPU.

45:46.920 --> 45:48.800
We were really scratching our heads about this.

45:48.800 --> 45:50.400
Yeah, it started really with we thought

45:50.400 --> 45:51.760
we were having Jack audio issues, where

45:51.760 --> 45:52.880
Jack was dropping audio.

45:52.880 --> 45:54.880
And we started going through this troubleshooting

45:54.880 --> 45:56.200
and troubleshooting process.

45:56.200 --> 45:58.560
And it wasn't until I got into Texas and was setting up

45:58.560 --> 46:01.600
and I had just bailed on Jack audio

46:01.600 --> 46:03.160
that I realized I still had a problem.

46:03.160 --> 46:04.880
And then I had to start troubleshooting

46:04.880 --> 46:05.640
what was going on.

46:05.640 --> 46:10.400
And I discovered SystemD UdevD consuming 100% of my CPU.

46:10.400 --> 46:14.520
Now, there is bugs everywhere about this,

46:14.520 --> 46:18.320
including there is a bug on Launchpad.

46:18.320 --> 46:20.480
There's a bug on the Manjaro tracker.

46:20.480 --> 46:22.360
I have a couple linked in the show notes.

46:22.360 --> 46:25.800
And it seems to be a bit tricky.

46:25.800 --> 46:29.120
And it doesn't actually seem to be restricted

46:29.120 --> 46:31.600
to just NVIDIA cards.

46:31.600 --> 46:34.640
Although they do appear to be the largest offender,

46:34.640 --> 46:37.100
Bluetooth chipsets have caused this issue

46:37.100 --> 46:39.640
and audio chipsets have caused this issue.

46:39.640 --> 46:42.720
And in short, what it really is is

46:42.720 --> 46:46.280
it's SystemD UdevD trying to connect to devices

46:46.280 --> 46:49.240
and get the right drivers set up and all of these things.

46:49.240 --> 46:51.240
And then it's failing to do so because it

46:51.240 --> 46:53.560
can't find the device so it can't load the driver.

46:53.560 --> 46:55.080
And then it gets caught in a loop.

46:55.080 --> 47:00.160
And it just creates log noise forever.

47:00.160 --> 47:04.720
And it starts with the NVIDIA core is being initialized.

47:04.720 --> 47:06.280
And then it gives it a device number.

47:06.280 --> 47:08.920
And then it says no NVIDIA graphics adapter found.

47:08.920 --> 47:11.280
And the next line in the log is we've

47:11.280 --> 47:14.600
unregistered the NVLink core, major device number.

47:14.600 --> 47:17.220
And then it says the signature is not signed.

47:17.220 --> 47:19.060
Then it says the core is being initialized.

47:19.060 --> 47:20.760
Then it says the adapter can't be found.

47:20.760 --> 47:22.680
Then it says it's being de-initialized.

47:22.680 --> 47:24.280
And then it gives an error message.

47:24.280 --> 47:25.900
And then Udev gives an error message.

47:25.900 --> 47:27.820
And then the whole process, rinse and repeats,

47:27.820 --> 47:31.000
over and over again for as fast as one of your CPU cores

47:31.000 --> 47:32.940
can possibly facilitate it.

47:32.940 --> 47:36.000
And it'll make your laptop heat up.

47:36.000 --> 47:37.720
It'll drain your battery life.

47:37.720 --> 47:40.020
It was really kind of awful.

47:40.020 --> 47:44.800
And I feel like there's probably several ways to fix this.

47:44.800 --> 47:47.800
Obviously, one is I could just get rid of the NVIDIA driver.

47:47.800 --> 47:49.920
But that's sort of a Hail Mary would

47:49.920 --> 47:51.540
prefer to avoid that solution.

47:51.540 --> 47:53.600
I mean, you're trying to use it, right?

47:53.600 --> 47:54.800
Because you have the dock.

47:54.800 --> 47:55.480
That's the point.

47:55.480 --> 47:55.980
Right.

47:55.980 --> 47:57.720
Now when I'm traveling and I'm not hooked up

47:57.720 --> 48:00.200
to the dock at the moment, I need it to be reliable.

48:00.200 --> 48:02.320
And it can't be going to mucking up my audio.

48:02.320 --> 48:04.120
So I did a temporary workaround just

48:04.120 --> 48:07.240
to get system to Udev under control.

48:07.240 --> 48:10.000
And that was just basically doing a system CTL stop system

48:10.000 --> 48:12.460
to Udev and then starting it again.

48:12.460 --> 48:14.400
And if you stop and start it after you've booted,

48:14.400 --> 48:16.080
it behaves itself.

48:16.080 --> 48:18.120
It's just simply after a cold boot

48:18.120 --> 48:19.720
and you haven't stopped and started it,

48:19.720 --> 48:21.600
it just goes nuts.

48:21.600 --> 48:24.460
And you can see different forum posts on the internet

48:24.460 --> 48:26.600
where people are trying to figure this out,

48:26.600 --> 48:28.700
several about Bluetooth adapters.

48:28.700 --> 48:31.760
And it's just essentially across every distro

48:31.760 --> 48:36.120
that seems to have a 4.15 or later kernel.

48:36.120 --> 48:40.480
And it doesn't appear to impact everybody, but it is an issue.

48:40.480 --> 48:42.000
And I was really trying to figure out,

48:42.000 --> 48:43.880
why is my audio so choppy?

48:43.880 --> 48:44.920
What is going on?

48:44.920 --> 48:46.600
And when I looked at it and realized

48:46.600 --> 48:50.080
it was because of system to Udev eating up a bunch of CPU,

48:50.080 --> 48:51.080
I thought, you know what?

48:51.080 --> 48:52.600
The audience might have a way for me

48:52.600 --> 48:54.680
to have my cake and eat it too, where I can still

48:54.680 --> 48:56.160
have the driver installed.

48:56.160 --> 48:57.440
But maybe I run a script.

48:57.440 --> 48:59.600
I don't know, something, some workaround

48:59.600 --> 49:01.960
where I don't have to do this hacky shutting down

49:01.960 --> 49:03.160
of system to Udev.

49:03.160 --> 49:05.880
So if you know, if you've got an idea, tweet me at chrisles

49:05.880 --> 49:08.120
or linuxunplugged.com slash contact.

49:08.120 --> 49:12.440
Do you use the audio interface in the dock?

49:12.440 --> 49:14.040
Yes, I do when it is hooked up.

49:14.040 --> 49:15.320
Yeah, because I have larger speakers that

49:15.320 --> 49:16.360
are plugged into the dock, yeah.

49:16.360 --> 49:18.200
Fine, I shall say no more.

49:18.200 --> 49:19.120
Oh, well, I'll tell you what.

49:19.120 --> 49:20.440
For the purposes of completeness,

49:20.440 --> 49:22.400
in case anyone is listening to this and thinking,

49:22.400 --> 49:26.440
ah, this is my problem, I have multiple audio interfaces.

49:26.440 --> 49:29.040
And I don't use the one in the dock ever.

49:29.040 --> 49:32.960
And I actually have that interface completely turned off,

49:32.960 --> 49:36.800
which is probably why I don't see this issue, because I've

49:36.800 --> 49:38.880
only ever got one audio interface that's

49:38.880 --> 49:40.200
actually enabled.

49:40.200 --> 49:41.600
Well, see, I figure this is going

49:41.600 --> 49:44.800
to become a larger problem as Thunderbolt 3

49:44.800 --> 49:46.720
is on more and more systems.

49:46.720 --> 49:48.680
And more and more people try external GPUs

49:48.680 --> 49:49.800
or external docks.

49:49.800 --> 49:52.380
And that was one of the reasons I wanted to get the GPU dock,

49:52.380 --> 49:55.840
was to actually very much try to discover if something

49:55.840 --> 49:58.680
like this would happen, so that way I could come back on here

49:58.680 --> 50:00.440
and say, maybe don't do it yet.

50:00.440 --> 50:02.520
Or if you do, this is one of the things

50:02.520 --> 50:04.880
you may potentially run into.

50:04.880 --> 50:07.520
And of course, I was really cursing that decision

50:07.520 --> 50:08.720
when I was trying to set up for LAN,

50:08.720 --> 50:10.480
and I had 20 minutes to get on air.

50:10.480 --> 50:13.360
And I thought to myself, why the hell did I make myself

50:13.360 --> 50:16.080
a guinea pig on this?

50:16.080 --> 50:18.560
But I feel like it's going to be something that gets

50:18.560 --> 50:19.720
wider and wider adoption, so we've

50:19.720 --> 50:21.040
got to figure this stuff out now.

50:21.040 --> 50:24.300
And I bet there's somebody out there who already has,

50:24.300 --> 50:25.440
so let me know.

50:25.440 --> 50:27.060
But before we get out of here this week,

50:27.060 --> 50:28.760
we've got to talk about clear Linux, which

50:28.760 --> 50:32.280
seems to be getting more and more hype, more and more buzz,

50:32.280 --> 50:34.200
more and more people talking about it.

50:34.200 --> 50:38.160
And I guess a lot of us have always thought of it

50:38.160 --> 50:40.060
as something that's for containers,

50:40.060 --> 50:42.220
or something that Intel is hoping takes off

50:42.220 --> 50:44.160
in the server industry.

50:44.160 --> 50:47.120
Because it's a distribution that has traditionally

50:47.120 --> 50:49.280
focused on security and performance,

50:49.280 --> 50:51.520
it's got a rolling release model,

50:51.520 --> 50:55.080
and it is really built for customization.

50:55.080 --> 50:57.800
In a sense, they look at it as you fork your own version

50:57.800 --> 51:00.360
of clear Linux and build it, or they have some pre-built

51:00.360 --> 51:01.680
versions for you.

51:01.680 --> 51:04.240
And so I wanted to take a deep dive into clear Linux

51:04.240 --> 51:05.840
for a little bit in this episode.

51:05.840 --> 51:08.760
And Wes had a chance to try it out,

51:08.760 --> 51:11.120
and I had a chance to go dig into some of their docs

51:11.120 --> 51:14.600
and watch a few talks, and thought maybe we could talk

51:14.600 --> 51:15.720
a little about clear Linux.

51:15.720 --> 51:19.560
So Mr. Wes, let's start with your setup, your clear Linux

51:19.560 --> 51:20.480
experience.

51:20.480 --> 51:22.940
You know, clear Linux, it's in a very interesting stage

51:22.940 --> 51:23.760
of evolution.

51:23.760 --> 51:24.800
You're absolutely right.

51:24.800 --> 51:27.800
There's a lot of focus on this well-engineered and

51:27.800 --> 51:29.600
architected distribution that works well

51:29.600 --> 51:31.560
if you have these complicated container

51:31.560 --> 51:33.240
workloads in the cloud.

51:33.240 --> 51:35.280
And I think the technical merits of clear Linux

51:35.280 --> 51:37.320
are some of the things that really stands out.

51:37.320 --> 51:38.900
They have a lot of blog posts about it.

51:38.900 --> 51:40.040
It's very well-communicated.

51:40.040 --> 51:43.440
They've even got this great how to clear tutorial up

51:43.440 --> 51:45.000
on GitHub that kind of teaches you

51:45.000 --> 51:48.160
the unique concepts of things like bundles and mixes

51:48.160 --> 51:51.740
that actually build up how clear Linux forms package sets.

51:51.740 --> 51:53.400
So that's one of the key things is software

51:53.400 --> 51:55.600
is shipped in these bundles.

51:55.600 --> 51:58.080
And the way they do that is you put everything into a bundle,

51:58.080 --> 52:00.680
and all of the dependencies for that bundle

52:00.680 --> 52:03.720
are resolved at build time on the server,

52:03.720 --> 52:05.280
not on the client at install time.

52:05.280 --> 52:07.160
So you don't have a package manager that's figuring out

52:07.160 --> 52:08.440
all the dependencies.

52:08.440 --> 52:10.880
When you install that bundle, they've figured those all out

52:10.880 --> 52:12.080
server-side.

52:12.080 --> 52:15.800
It's kind of similar to package groups in other distributions.

52:15.800 --> 52:18.340
But then one of the things they do to kind of turn this up

52:18.340 --> 52:20.440
to 11 is get ready for this, kids,

52:20.440 --> 52:23.680
is they turn on auto update by default.

52:23.680 --> 52:27.320
And that is generally because they have a really strict

52:27.320 --> 52:31.320
security turnaround policy where they have a team

52:31.320 --> 52:34.760
policy of patching a vulnerability within 24 hours

52:34.760 --> 52:37.560
of a fix being available.

52:37.560 --> 52:39.760
24 hours to get that fix turned around.

52:39.760 --> 52:42.360
So they turn on the automatic updates,

52:42.360 --> 52:46.920
which generally works out to be about nine releases per week,

52:46.920 --> 52:49.760
about twice per business day.

52:49.760 --> 52:52.240
There's a batch of what are generally security updates

52:52.240 --> 52:53.360
for clear Linux.

52:53.360 --> 52:55.560
I mean, it's an interesting sort of to posture.

52:55.560 --> 52:57.560
It does seem very well engineered.

52:57.560 --> 52:58.560
They've thought about it.

52:58.560 --> 52:59.920
They want it to be robust.

52:59.920 --> 53:02.200
There's been a lot of effort put into that before

53:02.200 --> 53:04.320
to even get any of this if you're going to try it.

53:04.320 --> 53:06.960
It's worked as a desktop for a long time.

53:06.960 --> 53:09.480
Originally, that was with XFCE.

53:09.480 --> 53:11.080
They've been transitioning to Gnome Shell.

53:11.080 --> 53:12.200
So that's what I tested out.

53:12.200 --> 53:16.480
And they're starting to roll out support for KDE.

53:16.480 --> 53:18.760
But actually, to get to that experience,

53:18.760 --> 53:22.860
you had to use their longstanding text-based installer.

53:22.860 --> 53:24.840
It's pretty simple, but it required a working internet

53:24.840 --> 53:25.680
connection.

53:25.680 --> 53:28.440
And it didn't offer a lot of customizations around RAID

53:28.440 --> 53:30.680
or encryption or any of that sort of fancy stuff

53:30.680 --> 53:32.720
that people might want.

53:32.720 --> 53:35.840
These days, there's now a beta, a desktop beta.

53:35.840 --> 53:37.640
And actually, it's pretty nice.

53:37.640 --> 53:39.080
It boots right up pretty quick.

53:39.080 --> 53:43.520
One thing I will say is it works offline, but it is chunky.

53:43.520 --> 53:46.240
It's like a solid eight gigs after you extract it

53:46.240 --> 53:50.000
and takes quite a long time to write to that flash drive.

53:50.000 --> 53:51.720
Once you get into it, you've still

53:51.720 --> 53:53.360
got a text-based installer UI.

53:53.360 --> 53:58.300
But honestly, it's a pretty well engineered Curses interface.

53:58.300 --> 54:00.280
I'm a stickler for how to configure disks.

54:00.280 --> 54:03.820
And I didn't find the Clear Linux OS installer's disk

54:03.820 --> 54:05.640
management really the best.

54:05.640 --> 54:08.120
It did kind of mess up the first time I tried it.

54:08.120 --> 54:10.360
And there could just be, thankfully, I mean,

54:10.360 --> 54:12.240
it was on a test system, so it's fine.

54:12.240 --> 54:14.880
But I was trying to put it on one partition,

54:14.880 --> 54:17.520
and it just rewrote the whole partition table on me,

54:17.520 --> 54:18.920
which I didn't expect.

54:18.920 --> 54:21.040
And it doesn't provide you a lot of prompts for things

54:21.040 --> 54:24.140
like, once you've set up a root partition and a boot partition,

54:24.140 --> 54:25.640
then it'll let you install.

54:25.640 --> 54:28.440
But I had mistakenly put slash boot slash EFI

54:28.440 --> 54:29.480
as the mount point.

54:29.480 --> 54:30.480
Didn't tell me anything.

54:30.480 --> 54:32.480
It just didn't let me hit the Confirm button.

54:32.480 --> 54:33.980
There was no error message anywhere.

54:33.980 --> 54:35.960
And you have to be a little bit experienced

54:35.960 --> 54:37.080
to know what you're doing.

54:37.080 --> 54:39.840
So did you lose all the other partitions on that drive?

54:39.840 --> 54:43.200
Not all of them, or either that or just reset up maybe

54:43.200 --> 54:44.840
a couple of them.

54:44.840 --> 54:47.540
It was definitely a different disk layout when I rebooted

54:47.540 --> 54:49.680
and not what I expected.

54:49.680 --> 54:51.760
But it is lean and mean.

54:51.760 --> 54:52.800
It works really well.

54:52.800 --> 54:54.460
It's pretty easy to go configure your mixes

54:54.460 --> 54:56.440
and get everything like what software you want,

54:56.440 --> 54:57.640
how you want it to run.

54:57.640 --> 54:59.080
That part was pretty smooth.

54:59.080 --> 55:01.680
Yeah, their mixes is kind of where I was going with that.

55:01.680 --> 55:04.640
You get your own mix of cleared Linux

55:04.640 --> 55:05.960
is kind of how they look at it.

55:05.960 --> 55:09.480
And so it's fascinating the way they've

55:09.480 --> 55:11.560
kind of made that distinguished.

55:11.560 --> 55:16.440
Once you kind of set it up, it's your own OS in a way.

55:16.440 --> 55:18.600
And then they have this stateless design

55:18.600 --> 55:19.660
that they call it.

55:19.660 --> 55:21.880
And what that really kind of essentially means

55:21.880 --> 55:25.320
is they put default fully functional configs

55:25.320 --> 55:28.160
for when you install software in slash user.

55:28.160 --> 55:30.400
So if you were to start up that service or whatever,

55:30.400 --> 55:33.360
in theory, it should be ready to go, fully functional, not

55:33.360 --> 55:34.280
a half setup config.

55:34.280 --> 55:37.200
We have to go define the port and things like that.

55:37.200 --> 55:42.200
But what's interesting is those go in slash USR.

55:42.200 --> 55:46.800
You can put your own overrides in slash Etsy

55:46.800 --> 55:48.560
or in the home of a user account.

55:48.560 --> 55:51.560
It's another place in your home folder.

55:51.560 --> 55:53.200
That's not too unusual.

55:53.200 --> 55:57.160
But the cool part is you can go in and just wipe out

55:57.160 --> 55:58.400
all of those Etsy configs.

55:58.400 --> 55:59.560
Just go RM them.

55:59.560 --> 56:00.680
Just get rid of them.

56:00.680 --> 56:02.000
And what you're essentially doing

56:02.000 --> 56:04.520
is you're just setting the system back to defaults.

56:04.520 --> 56:07.040
It's essentially like hitting the reset button.

56:07.040 --> 56:09.360
And it's a default Clear Linux config,

56:09.360 --> 56:12.800
because they still have all of the original configs in slash

56:12.800 --> 56:13.720
USR.

56:13.720 --> 56:15.640
That's one of those things is they're

56:15.640 --> 56:21.120
doing things differently and not really like any other distro.

56:21.120 --> 56:23.320
Arch was this new Wellspring that

56:23.320 --> 56:24.520
was building things themselves.

56:24.520 --> 56:26.840
But Clear Linux clearly has different goals.

56:26.840 --> 56:29.960
It's minimalist in some ways, but in a lot of other ways,

56:29.960 --> 56:31.800
they're going above and beyond, things

56:31.800 --> 56:33.880
like their fancy Clear Boot Manager.

56:33.880 --> 56:37.080
That's long been needed, and no one else has pursued that path.

56:37.080 --> 56:39.320
Yeah, this is an interesting piece that I don't really

56:39.320 --> 56:42.120
understand a lot about, the Clear Linux Boot Manager.

56:42.120 --> 56:46.000
I do remember talking to Ikey about it ages ago.

56:46.000 --> 56:47.960
And I think he worked on it to a degree.

56:47.960 --> 56:50.080
And he may be back there working on it again.

56:50.080 --> 56:50.880
It sounds like.

56:50.880 --> 56:53.680
I don't know if this is the role he's playing there.

56:53.680 --> 56:57.080
But this was something that was kind of coveted

56:57.080 --> 56:58.440
by other distributions for a bit.

56:58.440 --> 56:59.840
And I never really fully understood

56:59.840 --> 57:02.480
why other than it was supposedly going

57:02.480 --> 57:05.520
to make system updates like kernel updates rock solid.

57:05.520 --> 57:09.000
Yeah, I mean, a system layered on top of all the other stuff

57:09.000 --> 57:10.760
that's going on at boot to try to make sure

57:10.760 --> 57:12.920
that things wouldn't fail, that it was going to have

57:12.920 --> 57:14.840
a solid, reliable rollback.

57:14.840 --> 57:17.240
And it really also embraced UEFI.

57:17.240 --> 57:19.640
So that's another area where they are targeting

57:19.640 --> 57:21.760
a lot of more modern things.

57:21.760 --> 57:24.880
It's very well optimized for recent Intel processors.

57:24.880 --> 57:27.040
A lot of Ferratics benchmarks keep showing that.

57:27.040 --> 57:30.080
So that's another area where people are doing comparisons

57:30.080 --> 57:32.080
and seeing like, oh, they've spent a lot of time.

57:32.080 --> 57:35.160
They're doing non-trivial extra patches to glibc sometimes.

57:35.160 --> 57:37.240
They're really looking at this.

57:37.240 --> 57:39.480
And I don't think it gets a lot of attention.

57:39.480 --> 57:41.320
It might see some cloud workload.

57:41.320 --> 57:44.520
But if you're a power user, that might be something you want.

57:44.520 --> 57:46.320
Yeah, so they talk a little bit about how

57:46.320 --> 57:50.080
they build the whole stack optimized for the IA processor

57:50.080 --> 57:52.840
architecture, the Intel processor architecture.

57:52.840 --> 57:54.400
And they talk about one of the things

57:54.400 --> 57:56.360
that they've really focused on is anything

57:56.360 --> 57:58.840
that they execute that has a series of dependencies,

57:58.840 --> 58:00.320
they've gone down that dependency tree

58:00.320 --> 58:02.880
and optimized all of that stuff too.

58:02.880 --> 58:04.260
Because they're Intel, right?

58:04.260 --> 58:06.640
So why not make it as bad-ass as possible?

58:06.640 --> 58:10.960
Why not make a Linux that really shows your OS?

58:10.960 --> 58:13.960
And then they're combining that with this solid update

58:13.960 --> 58:16.040
where they have this clear Linux boot manager that's

58:16.040 --> 58:18.800
supposed to protect you from kernel upgrades.

58:18.800 --> 58:21.640
They have that stateless OS where it's easy to revert.

58:21.640 --> 58:23.720
And then they have this mixes concept

58:23.720 --> 58:25.520
where, in their words, you compose

58:25.520 --> 58:28.800
an OS for your specific use case.

58:28.800 --> 58:31.440
They view it as your own Linux in a way

58:31.440 --> 58:33.080
that they're just sort of upstreaming.

58:33.080 --> 58:35.440
You've also now got Flatpak there.

58:35.440 --> 58:39.140
So if you rely on applications provided by Flatpak,

58:39.140 --> 58:40.960
that's another route for software availability.

58:40.960 --> 58:41.840
Did you give that a go?

58:41.840 --> 58:43.800
Did you try installing the apps via Flatpak?

58:43.800 --> 58:44.300
Oh, yeah.

58:44.300 --> 58:45.520
I mean, it works great.

58:45.520 --> 58:47.440
They've already provided some apps that were packaged.

58:47.440 --> 58:49.680
It's installed on the live by ISO and everything.

58:49.680 --> 58:50.240
Really?

58:50.240 --> 58:50.520
Really?

58:50.520 --> 58:52.240
So how would you describe the experience

58:52.240 --> 58:54.640
of using the Gnome Shell desktop and just clear Linux

58:54.640 --> 58:56.160
as a desktop vehicle?

58:56.160 --> 58:57.000
Not bad.

58:57.000 --> 59:00.880
I mean, it's not super far deviated from Gnome defaults.

59:00.880 --> 59:03.680
Honestly, though, I think the website looks good.

59:03.680 --> 59:05.960
A lot of the experience is well thought out.

59:05.960 --> 59:09.400
The background images and some of the theme aspects.

59:09.400 --> 59:13.800
Really, I mean, it's kind of just a plain Gnome desktop.

59:13.800 --> 59:16.000
So if you want that, if you just want to get to work,

59:16.000 --> 59:19.840
if you want a lean, well-architected, technically

59:19.840 --> 59:21.520
thought out distribution, I think

59:21.520 --> 59:23.720
that's probably the space right now that it's playing.

59:23.720 --> 59:25.140
It's not going to be for someone who

59:25.140 --> 59:29.000
wants to try just any old Linux distribution.

59:29.000 --> 59:31.240
You have to want to work to get to clear Linux.

59:31.240 --> 59:34.200
But they're clearly making strides to make that easy.

59:34.200 --> 59:38.560
My question, I think my main question is, is why?

59:38.560 --> 59:40.880
I want to hear more from the team behind clear Linux

59:40.880 --> 59:42.600
about their target audience.

59:42.600 --> 59:45.200
Is this for developers who are using it for server workloads

59:45.200 --> 59:46.880
and they want to run the same machine,

59:46.880 --> 59:48.600
or is there a wider applicability?

59:48.600 --> 59:53.720
You got to wonder if maybe they have eyes on the workstation.

59:53.720 --> 59:57.160
Why shouldn't Intel's own version of Linux

59:57.160 --> 01:00:00.320
be the premier operating system for an Intel-based workstation?

01:00:00.320 --> 01:00:03.160
Seems like that's a slam dunk.

01:00:03.160 --> 01:00:06.380
If anybody's going to make an OS that really makes their own hardware shine,

01:00:06.380 --> 01:00:07.640
it should be them.

01:00:07.640 --> 01:00:11.400
And Linux is a perfectly reasonable workstation desktop

01:00:11.400 --> 01:00:13.840
that has been proven successful in many markets

01:00:13.840 --> 01:00:15.880
by high-end CPUs.

01:00:15.880 --> 01:00:18.000
I kind of see some logic to it, I think.

01:00:18.000 --> 01:00:20.560
But I could just be kind of hope casting.

01:00:20.560 --> 01:00:21.760
I think I just made that up.

01:00:21.760 --> 01:00:25.080
You know, I could see it if we had the software we need.

01:00:25.080 --> 01:00:29.560
If we got that all worked out, it might make a nice studio machine.

01:00:29.560 --> 01:00:33.280
Yeah, or yeah, like the recording system, something like that.

01:00:33.280 --> 01:00:34.040
I think so.

01:00:34.040 --> 01:00:34.720
I think so.

01:00:34.720 --> 01:00:36.320
Well, thanks for kicking the tires on.

01:00:36.320 --> 01:00:39.920
I found the deep dive to be pretty interesting too.

01:00:39.920 --> 01:00:41.800
I wondered before we went into this episode,

01:00:41.800 --> 01:00:45.040
I thought, well, what is it that really makes Clear Linux cool?

01:00:45.040 --> 01:00:46.760
Because I keep hearing cool stuff from the audience.

01:00:46.760 --> 01:00:47.360
People love it.

01:00:47.360 --> 01:00:49.120
And I'm like, well, what is it?

01:00:49.120 --> 01:00:51.040
And there is some really different stuff there.

01:00:51.040 --> 01:00:53.000
There is some really different thinking.

01:00:53.000 --> 01:00:55.760
Like, I mean, nine releases a week?

01:00:55.760 --> 01:00:57.600
Holy crap.

01:00:57.600 --> 01:00:59.240
I mean, it's rolling for sure.

01:00:59.240 --> 01:01:02.920
Like, that's a pretty intense release schedule.

01:01:02.920 --> 01:01:03.920
You're absolutely right.

01:01:03.920 --> 01:01:08.200
And I think regardless of if Clear Linux really takes off on the desktop

01:01:08.200 --> 01:01:11.240
or not, for whatever value of what that means,

01:01:11.240 --> 01:01:13.920
it's one of those distributions that other people in this space

01:01:13.920 --> 01:01:14.960
can learn from.

01:01:14.960 --> 01:01:16.800
They're pioneering new approaches that I

01:01:16.800 --> 01:01:19.760
think will make all distributions better over the long term.

01:01:19.760 --> 01:01:21.000
Ooh, I like that, Wes.

01:01:21.000 --> 01:01:21.560
I like that.

01:01:21.560 --> 01:01:23.520
Well, we'll have links to Clear Linux if you want to give it a go.

01:01:23.520 --> 01:01:24.000
Try it out.

01:01:24.000 --> 01:01:25.680
They just had a new version.

01:01:25.680 --> 01:01:28.320
We talked about it in this week's Linux Action News.

01:01:28.320 --> 01:01:30.720
And one of the quote unquote features

01:01:30.720 --> 01:01:34.160
would be this new desktop live image that Wes talked about,

01:01:34.160 --> 01:01:36.800
as well as that plasma version they're working on now,

01:01:36.800 --> 01:01:38.600
which, you know, it gets us excited here.

01:01:38.600 --> 01:01:40.680
So yeah, additional coverage on Linux Action News

01:01:40.680 --> 01:01:43.640
as well as links to Clear Linux in the show notes.

01:01:43.640 --> 01:01:45.520
A pretty neat looking distribution.

01:01:45.520 --> 01:01:47.760
Intel's trying to actually do something different there.

01:01:47.760 --> 01:01:50.880
And you got to respect that.

01:01:50.880 --> 01:01:53.920
Well, Mr. Wes, that brings us to the end of this week's Unplugged.

01:01:53.920 --> 01:01:56.600
Thank you to Wimpy and Popey for joining us.

01:01:56.600 --> 01:02:01.040
Go check them out at the Ubuntu podcast, which rumor has it another one will be

01:02:01.040 --> 01:02:01.840
out this week.

01:02:01.840 --> 01:02:02.360
Hey, yo.

01:02:02.360 --> 01:02:06.040
And another great episode from those guys, I'm sure.

01:02:06.040 --> 01:02:08.600
And go get more Wes Payne at TechSnap.systems.

01:02:08.600 --> 01:02:13.280
Wes and I do a systems network and administration podcast.

01:02:13.280 --> 01:02:14.720
That's what the SNAP stands for.

01:02:14.720 --> 01:02:17.040
Over there at TechSnap.systems.

01:02:17.040 --> 01:02:21.000
And a reminder, we have our special recordings coming up soon.

01:02:21.000 --> 01:02:25.920
Our Hope Casting, my new term, and our predictions episode

01:02:25.920 --> 01:02:30.080
the day after Christmas, so December 26th,

01:02:30.080 --> 01:02:33.520
and the day after New Year, so January 2nd.

01:02:33.520 --> 01:02:36.960
We're recording one day later, and we're doing a special edition.

01:02:36.960 --> 01:02:39.360
And we'd love to have you join our virtual log for that.

01:02:39.360 --> 01:02:42.000
And get your predictions in and your Hope Casting.

01:02:42.000 --> 01:02:43.600
But that's all for this week's episode.

01:02:43.600 --> 01:02:44.840
Thanks so much for joining us.

01:02:44.840 --> 01:02:46.440
And we'll see you back here next Tuesday.

01:02:46.440 --> 01:03:15.440
Hey.

01:03:16.440 --> 01:03:26.600
So I'm doing a ugly sweater party tonight, going to an ugly sweater party, and I'm not

01:03:26.600 --> 01:03:31.620
gonna lie, I took the easy route and I went on Amazon and I just searched for ugly sweater.

01:03:31.620 --> 01:03:36.380
It's a whole product category now, and there's a lot of ugly sweaters, and the one I got

01:03:36.380 --> 01:03:39.920
is like a polyester thick shirt.

01:03:39.920 --> 01:03:41.320
I don't really feel like it's a sweater.

01:03:41.320 --> 01:03:45.040
I'm worried I'm gonna get called out, and I didn't know because I got it off Amazon.

01:03:45.040 --> 01:03:47.280
Thick shirt, is this a technical term now?

01:03:47.280 --> 01:03:48.280
I don't know how to put it, Wes.

01:03:48.280 --> 01:03:51.800
It feels like a thick, it feels like multi-layer polyester shirt.

01:03:51.800 --> 01:03:54.480
I don't know how to describe it, but it's very gaudy.

01:03:54.480 --> 01:03:59.880
It's very ugly, and I rush-shipped it on Amazon so that way I'd have it for the trip.

01:03:59.880 --> 01:04:03.880
So there I am, just with a bag, because I have the one bag rule.

01:04:03.880 --> 01:04:07.960
Just a carry-on, one carry-on, and not even two, you know, a carry-on and a bag, just

01:04:07.960 --> 01:04:09.540
anyways.

01:04:09.540 --> 01:04:13.760
So I'm stuffing this stupid ugly sweater into the backpack, and I'm just looking at this

01:04:13.760 --> 01:04:18.480
and going, what am I doing, and I forgot it at the hotel.

01:04:18.480 --> 01:04:23.360
So I'm gonna run back to the hotel, grab my ugly sweater, and then race off to the ugly

01:04:23.360 --> 01:04:44.360
sweater party.

