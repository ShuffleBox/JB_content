Hey, Wes, I heard you pulled your first all-nighter of the year.
How's that going?
Yeah, I think it's something of a milestone.
I mean, it is probably the first time I've seen dawn in a while.
But that's like a silver lining, I think.
Wow, what happened?
Well, sometimes you have a lot of work on your plate.
Sometimes you're really in the zone.
And you just want to finish your task.
You want to make sure things are working so that you
can have some consistent bedtime.
I see.
So I used to do this when I was in my 20s.
And if I were to do it today, it would
be like I had gone out drinking all night the next morning.
I would feel rough.
Yeah, it's been a long time.
This was my first all-nighter in a while.
And that's how I know I'm definitely getting there.
Hello, friends, and welcome back to your weekly Linux talk show.
My name is Chris.
My name is Wes.
And my name is Brent.
Hello, gentlemen.
It is going to be a really fun episode this week.
Coming up on the show, we're going to talk about a Linux
superpower that we've overlooked these days.
It's something that snuck up on us.
And now we take it for granted.
And it wasn't always a trick that Linux had.
It's the live session.
They're amazing.
And there's something that the Windows and the Mac don't really offer.
So this week, we're going to chat a little bit
about the history of the live session, how it came to be.
And then we're going to share a few times.
And hopefully, our mumble will have a few times that it totally saved our bacon to have
a live session.
Oh, yeah.
That's definitely a thing.
So before we go any further, let's say time-appropriate greetings to our virtual lug.
Hello, mumble room.
Hello, hello.
Hello, hello.
Hello, Chris.
Hello, Wes.
And hello, Brent.
Namaste.
And then today, we have a real special episode, I guess, because we have a meetup happening
here at the studio.
So everybody out in the living room, say hello, time-appropriate greetings to the living
room.
Hello.
Amazing.
Nicely done, everybody.
Yeah.
We have the meetup happening right here.
We're going to do a little podcast thing.
I don't know if you heard of it.
And then after this, we're going to all eat.
So if you hear a bunch of noise and ruckus in the background, that's because we've got
a living room full of folks that are talking and enjoying themselves some cookies and snacks.
As they should be.
Maybe a few of them are having some bruskies.
And we even have some stashed champagne that Brent thought I had before he left for Canada.
Yeah.
I want to be part of the show, part of the experience.
But I knew I couldn't be there in person.
So I thought, I'm going to hide some stuff around the studio and tell you about it in
very calculated moments.
So there you go.
Nice.
Well, thank you.
So we have Wes and I have some champagne to celebrate the occasion.
The folks out in the living room have got a TV and a speaker going so they can hear
the show.
It's one big happy family over here.
It is.
It is.
So we were kind of talking as a group off air about different Linux installers and how
only a few of them now, like SUSE, offer the ability to just boot right into an installer.
Most Linux distros these days, they boot right into a live desktop session and you get to
try the whole desktop out.
You get to see if your hardware is supported.
And then sometimes they'll auto start an installer or sometimes they'll have like an icon on
the desktop.
And this has just kind of become the norm.
Yeah.
Yeah, definitely.
Every day.
Linux experience now.
You kind of, sometimes you even have to get a separate, like just installer ISO if you
even want that functionality.
And it wasn't always this way, Wes, no.
In fact, that was not the norm at all.
The way it used to be is you'd get a Linux installer CD, it'd do some sort of hardware
detection dance and it'd boot up into a minimal X environment that sometimes you even had
to configure before it could start and then you would just go through the installer.
Say it ain't so.
It is so.
And I don't really necessarily mind that experience, but it didn't give you an opportunity to find
out if everything that you had on your machine was supported by Linux.
And that was especially back in the day, one of the gotchas, you install Linux and discover
your modem doesn't work or your wifi doesn't work or your sound card doesn't work.
It was a problem.
Yeah, right.
One of those things you find out only after you've gone through the full install, you've
rebooted, hopefully you've even got, you know, grub or lilo working, right?
Yeah.
So the idea of a live CD really was something unique and it was indeed a CD.
We called them live CDs and they were very, very slow.
And you to make all this work, you had to have stacks of blank CDs.
Well, we all did at that time.
Yeah, I get like the Costco tower, you know, and I'd have like a whole bunch of like TDK.
Then hopefully you have like a spindle you've already used.
You kind of got like a queue system.
You load up on the new spindle.
Right.
The older distros kind of work their way to the bottom, you know, pile of used Sharpies
on the floor.
Totally.
And the early CD-ROMs were slow as hell too.
And they got faster over time.
And then like, were you taking the time to go check and verify that you burned it?
No.
Okay.
Okay.
No.
Living on the edge.
I also like would experiment with a bunch of different ways to burn these ISO images
to a CD-ROM.
I think I ultimately looking back on it, K3B was my favorite experience.
Nice.
Do you have any recollections of burning CD-ROMs?
Because there were so many, so many options to burn CD-ROMs under Linux back in the day.
Yeah.
I don't know that I ever really settled on a favorite.
I do remember, though, having access at the time I was working at like a computer lab
and they had a big CD duplication machine.
So that was pretty nice.
You could put, you know, pop one in and then just give away a bunch of CDs to people.
Yeah.
Well, and really early on before the live Linux CD took off, there was a format war
in CD-Rs.
You had CD-ROMs and CD-RW and CD-RAM and there was all these different standards.
And some of them you had to put the blank CD in a cartridge.
I don't know if you recall these.
Oh, yeah.
You had a plastic cartridge and then you'd put that cartridge into the burner.
Honestly, that seems like a good idea.
Why are we touching these CD?
It's gross.
You see the fingerprints on there.
So the funny thing is, that is kind of the model that a lot of the banks standardize
on is so for banking and backing things up, they felt like that was the best medium for
like write once and preserve forever.
So because it didn't become the predominant standard, the banks would have to buy the
drives.
Of course, I know this because I was hooking these up.
The banks would have to buy the drives at like 900 bucks a pop.
Of course.
And then you have to get the jewel cases.
You got to get just the right format of blank CD and the whole thing.
And they had crappy Windows software.
There's so many crappy Windows software.
Oh, yeah.
Colonel's talking about Nero, the Nero ISO format.
Yeah, that was definitely a staple.
So this meant that you really had a hodgepodge patchwork approach to getting these CDs actually
functional.
It was not just as simple as DD an image to a USB or go get Etcher.
Right.
This is a few hurdles to even try and try this stuff out.
I'm just saying to try out a distro, I had to walk uphill both ways.
That's what I'm saying.
OK.
And I just want you to appreciate that.
But you end up with a bootable CD and of course, you'd have to have a BIOS that allowed you
to boot off of your CD ROM, figure out how to like go access the boot menu.
Yeah.
And then you'd get that going.
And of course, it would be slow as hell.
But we were going to sit here and kind of tell you a little bit about the history until
we realized there was a big piece of this whole world that we didn't really know about.
And we started looking into it.
And the history of live CDs is a little more complicated than Knoppix.
It turns out.
Yeah.
In fact, I don't know how you pronounce this first one, which I don't think is in production
anymore.
But it's what do you think, Wes?
It's why DD or I'm sorry, why Gigi?
Yggdrasil is, I believe, the most common way to say it.
So English speakers typically say Yggdrasil, but it's Yggdrasil in the old Nordic way.
Silent G's, right?
Pretty much.
I see.
This one passed me by.
It came out in 92, ceased production in 95.
It was really alive between 92 and 93, though.
That one kind of passed me by.
But that's for a live CD.
I know.
A live environment at that time.
When CDs themselves were such new technology at home.
Right.
Yeah, we're not talking about live floppies here.
But the one that did catch my attention and made me realize something was going on was
released in 1998, and it was called Demo Linux.
And it was specifically designed to fit on these business card CDs that were actually
turned out to be a horrible idea.
But I don't know if you ever saw these, Wes.
They were like cut down CD ROMs.
Just big enough for like a label.
And if you had like one of those CD drives where you had to insert the CD, it would jam
the drive.
Well, of course.
And then like the small little tray and yeah.
But I was at a very early Linux Fest Northwest, and there was a booth that was handing out
these little business card live CDs, and it blew my mind that you could have a whole live
Linux desktop environment in there.
Linux Care also released a business card bootable live CD in 1999 that was focused on system
administration.
This is where the first kind of brand positioning as a way to rescue your system started with
the Linux Care bootable business card.
The idea was that you could keep it in your pocket and then rescue a system with it.
And then, Phinix, released in 2000, F-I-N-N-I-X, were released before Knoppix and is still
in production.
Yeah, I'm running it right now in a VM.
How about that?
Wes is on...
It supports UEFI, man.
Really?
Yeah.
It works with Ventoy just fine.
Oh, wow.
So Phinix 123 was released last year, I think it was.
I think that it released about a year old.
Yeah, it looks like it.
And they're on Discord, they're on Twitter, they're on GitHub.
They have an updated website.
Yeah, they've got docs over on GitHub.
I mean, you don't get a graphical environment, you just get like a root shell.
But if you want something simple...
They're sponsored by Linode.
How amazing is that?
It's really great.
I don't know.
Did either...
I know, Wes, you're running it right now.
I didn't get a chance to run it.
I don't know.
Brent, I don't know if you had a chance to try it.
I did.
I was going to do the West route and just run it in a VM, but I thought that was disingenuous.
So I totally, I didn't burn it to a CD, but I did put it on a USB drive and ran it on
some bare metal and it's tiny, which is lovely because it was fast for me to download, but
also fast for me to write it to a USB drive and it booted super fast and it was surprisingly
modern.
It had notes about ZFS, like if you need to work with ZFS disks, run the following beforehand
and it gave you a nice command.
It was super friendly for like a command line only troubleshooting OS.
So I was nicely impressed actually, I would say.
Yeah.
There's something kind of great about a distribution that's been around since the early two thousands
and they're still doing a release.
They're still trying to engage with community.
They're on social media.
They're still doing releases.
Their last release was in September of 2021.
Hey, that's pretty recent.
Yeah.
Really for something that's been around as long as they have.
I mean, I'm on too, come on.
It's really neat to see that.
I was pleasantly surprised, I suppose, is the phrase I'm looking for.
I feel like it says a lot too about some of the stuff we like about the Linux ecosystem.
Okay.
Sometimes it means things feel stale or, you know, old school, but it also means that the
same thing has been able to preserve.
Sure.
You got to catch up on stuff, system D, things like that come around, but mostly just stays
the same.
It keeps working.
It keeps the same environment and a live environment that gives you a root shell to try to recover
your system is still something that's really useful today.
So then the real king of live CDs came out.
The one that basically became the Kleenex of live CDs, Knopix, a Debian based Linux
distribution that was released in 2003.
And they really nailed the timing on this because that was right around when broadband
was getting pretty widespread in the US.
So you could actually pull down these ISO images.
That was a new era right there.
That really landed at the right time.
It was named after Claus Knopper, who had like an IT business where this was a useful
tool for him.
And the first public release was actually in 2000, but I guess like the 1.0 that everybody
used was considered 2003.
The history was a little muddled there, but it looks like there was a range of betas that
had been in there and then a final release.
But what was so cool about Knopix was that it had this awesome wicked advanced hardware
detection system.
And this was back in an era where you had to pick if your kernel was going to support
multiple kernels or a single kernel.
And Knopix was problem solving all of that.
It did exhaustive hardware detection.
And then on top of that, if your system was low on memory, it was smart enough to switch
between a KDE desktop or like FWM just automatically.
You could also do things like load it into RAM and all that kind of stuff.
It truly has like a special place in my memory because it was the one that took off like
wildfire.
And it just became the live CD that everybody used to try a system out.
You could throw a Knopix on a CD, boot up a Windows box and try something out in demo.
This is something I did just right in front of a client.
And I got like the Windows system.
It was their proxy server.
I got it completely replaced on Knopix as a demo in like a couple of hours and didn't
have to reload their Windows system.
And they were just blown away by all of that.
It changed the way people viewed operating systems and what you could do with them.
But in a lot of ways, it's still something that people are catching up to.
It strikes me as maybe an extension of what we love about using the command line on Linux
is it presents this very immediate, interactive sort of invitation to play with the system
where you're just like, oh, I can do anything here.
I can explore and Linux especially like exposes all these things and a live environment is,
you know, if you think about like a Windows installation or especially like a Mac OS experience,
it's very tied to a particular thing.
Setting it up as a very niche activity, exploring any of its internals or the environment that's
not locked to, you know, you probably bought a computer and it came with the software.
But a live environment is just like, hey, check this out.
Play with me.
You don't have to commit to anything.
You can try out a whole new world and you reboot and it's all gone.
Yeah, I gave Knopix a spin too.
But one thing that I found was a stack of these DVDs that you mentioned, Chris, and
I sent you guys a photo of it.
And so along with my, you know, Ubuntu 12.04 and Mint 10 DVDs, I found a Knopix 6 CD and
Sharpied on it said 2009.
So it's pretty darn old and lucky for me, I was burning some like local DVDs over Christmas
and so I had my drive handy.
So I actually ended up booting off one of these CDs and do you remember the sound it
makes when you're booting off one of these?
It was so nostalgic.
You mean the drive?
The drive just kind of working away and, you know, every once in a while some text would
come up on your screen and let you know that things were happening.
It was, yeah, I just got a giant smile from just that like auditory experience of booting
this thing.
It was lovely.
Yeah, it really is funny because I have a machine right now that I'm using again and
you know this Brent, it has a floppy drive and so to hear that floppy drive get accessed
from time to time.
Yeah.
It's very nostalgic sounding.
What was your impression, though, of the overall Knopix experience?
Is it starting to feel kind of old?
Did it hold up?
Well, that's why I wanted to run both this CD version that I found, you know, buried
away in my stuff, but I also ran the newest version that just came out, it looks like
a few days ago, January 25th, and there was a big contrast, actually.
The old one, obviously, it was running Compiz and stuff, so it had OpenOffice installed
and Iceweasel and so it felt kind of aged, but the new Knopix I was pleasantly surprised
by.
It felt modern.
I mean, they had some, still had some wonderful ASCII art when it booted up, which was nice.
Yeah, really, a nice little terminal experience there.
Yeah.
It also had a little audio byte that said, initiating startup sequence, which I thought
was funny.
That's still in there?
You're kidding me.
It was a different era when we like wanted sound effects from our systems.
Yeah.
Yeah, I used to like have like little Star Trek sounds for all the different things my
computer did.
That was a horrible idea.
Another kind of dated feel that I thought you guys would enjoy was I noticed when I
closed an app in the modern Knopix 9.1 that it still had that like window squiggle fade
action going on.
Wow.
The classics.
That's great.
But then I started digging into the menu and found a bunch of really modern, cool, fun
things to play with.
Like for example, the first thing I saw was it had KD Connect.
So I thought, okay, it's, you know, within the last five years, there's some software
in there.
And Chris, you'll like this, it had the Electrum Bitcoin wallet listed just by default, you
know, it was installed by default.
That's kind of random.
Yeah, I know.
It had Tor browsers and Tor proxy was ready at your fingertips.
It had a DAW simulator on there.
But it also had a bunch of options to restart Knopix, either in Docker or a Chirrut or to
run it in KVM.
It had a bunch of these like fun little, I guess, scripts to just sort of get you interested,
which I really enjoyed.
Yeah, I mean, it comes from such a different, it's like the middle era now where you can
get the whole 4.3 gig DVD version, which it's that era of, well, you might not have a network
connection, right?
Or you have one sometimes, and so you want to download the whole world.
So you just get all kinds of different utilities baked in by default.
Yeah, I agree to like the chat rooms talking about how Knopix to RAM give you like the
most amazing performing computer of your time, right?
Because you went from running off of a CD to running on a RAM.
They even have a script still that lets you package up a mini system.
It's got just LXDE and the kernel and like a bare set of sort of like it's got Chromium
and a few rescue utilities, but it fits on a 700 megabyte CD, the modern version.
Yeah, I mean, I would be down with running from a RAM disk all the time.
That feels like that'd be a fun project is create a system that syncs your stuff to a
disk and then it boots into a RAM disk all the time.
Yeah, I mean, you could use snapshots.
I hear one of the servers has a lot of RAM for you to play with.
So I want to hear stories about, you know, live sessions saving your butt.
So Mumble Room, if you've got stories about using a live CD or a live USB session to rescue
data or somebody's computer or your own computer, start thinking about it now.
But before we get to that, I wanted to share something that was really special for me.
And this was in the early 2000s, around 2003, 2004.
There was a project that built on top of Knopix and man, this was awesome for a geek who just
got himself like a cluster of Linux systems, like a whole bunch of them, you know, like
a hundred Linux servers.
There was this remix called Cluster Knopix, and it was exactly what it sounds.
It used OpenMozix, which had a special kernel, and you could boot up one of them.
You just boot up this Cluster Knopix and you'd say you're the server.
And then it would fire up a DHCP server and a TFTP server, and then you'd boot the other
systems with Cluster Knopix and say you're a client, and they would use TFTP and DHCP
and network boot to run Linux terminal services to boot up a cluster system that was all loaded
off of one centralized system, and then they would share the processes load.
So you could do builds across all of the systems, and they would just be one, the way the system
looked at it, because that's the way the kernel patch worked, is it was all one process space
across all of the systems.
It was so rad, and it all used Linux terminal services project, so you could essentially
have all of the systems share in the resources, and you could also use it as a desktop environment,
and you'd have like this massive computer behind you.
It was the neatest thing, and I really don't know if anything like that exists anymore,
and it really was a lot of fun to play with, and if you want to get nostalgic, I do actually
have a link to an archived version of the ISO in the show notes, because why not?
Why not go back in time and play around with it?
It's pretty fun.
Linode.com slash unplugged.
Go there to get $100 in 60-day credit on a new account, and you go there to support the
show.
Linode has been our partner since we have gone independent, and they've been around
since 2003, one of the very first companies in cloud computing, and now over 18 years
later they're dedicated to offering the best, and they are independent, and they remain
the largest open cloud provider in the world, with 11 global data centers serving nearly
a million customers.
You know, we were doing some research for today's episode, looking at some of the classics
in live CDs, and Linode's name came up several times.
They have been such a huge supporter in the community for so long.
It's kind of how I found them.
I noticed, you know, there's a couple of events, and it was definitely the Texas Linux Fest
one, where a couple of the booth vendors just weren't taking the event very seriously, but
you could see the Linode staff was there, they had their game faces on, and they were
genuinely enjoying interacting with the community.
And I wasn't in the market at that time, but I thought, I'm going to remember that, and
I did.
And when it came time for us to build JB 3.0, and I needed really good, fast infrastructure,
and I wanted the best customer support in the world, and I wanted a company who truly
gets Linux, well, it was obvious then, I went with Linode.
I went because they have the best in virtualized cloud computing, 30-50% cheaper than the major
hyperscalers that want to lock you into their crazy, complicated platforms, and they have
a bunch of great extra services in there that we've integrated in with our infrastructure.
I mention the S3 compatible object storage all the time, because it's just so great,
but there's small things that we take for granted, like the super fast networking between
the data centers means that even if a server isn't in the same data center as one of our
object storage, it doesn't matter.
The connectivity is so great, because Linode is their own ISP, and they have a bunch of
one-click applications if you want to just switch over from a proprietary stack that
you've been paying some crazy service to, to maybe a Linode stack, like replace Zoom,
or go to Nextcloud.
I also just got a note from a listener who's using AdGuard centralized on Linode for his
mobile devices and his home.
That kind of stuff is brilliant, and when you get $100, you can really try this kind
of stuff out, and it's a great way to support this podcast.
Keeps us going, keeps us independent, and it lets you get some real value out of Linode.
That's a great opportunity.
Linode.com slash unplugged.
Go there, get that $100 in 60-day credit, and you support the show.
Linode.com slash unplugged.
Well, besides just playing around and trying out a new Linux distro, live environments
can be pretty essential for rescue and recovery.
I think we've all been there.
I think it might be story time.
Let's turn to our chat room, Kectogen.
What's your story?
So I just did like, you know, some massive upgrade on my Gen 2 system, genius idea.
So one of the kernel modules that was necessary for the system to boot, I didn't look through
it properly, and I boot up, and it doesn't load the video driver.
So I was able to load up, you know, my live USB.
I loaded my live USB at short end, you know, install the alternative to the driver or whatever,
do something, and then it boots.
It saved my entire Gen 2 install and many hours of compiling time.
That's always great, you know, like save yourself from an update going wrong.
Minimac, it sounds like you helped someone else that was worried about maybe losing data.
What happened?
Well, I was at the dentist.
It was like two or three years ago, and she was so scared.
She was really scared because in the morning, the computer did not boot up and she was scared
of losing data and everything.
So I said, well, can I just boot a Linux installation just to check if the hard drive is okay?
Normal, normal question, yeah.
So I booted up an Ubuntu drive that I always have on my key, and then I was in fact able
to tell her that the hard drive was okay and that it was just probably the Windows boot
system that was corrupted.
And she was so happy.
I didn't have to pay the bill, and they called a PC doctor to get Windows back running.
Sometimes that helps having a USB key just with you.
Yeah, saving someone's peace of mind in that situation, but it sounds like you were helping
someone after a Windows install went sideways.
I've been there.
I've done that.
Yeah.
So I've seen Windows XP, Windows 2000, Windows 98, Windows 98 SE.
I even saw a Windows Server 2000 install.
Why do they always get corrupted during one of those big service packs?
It's like good enough.
Something went wrong, rolling back, installing again, something went wrong.
And suddenly they're like, okay, I have to turn off the computer.
Now it won't start anymore at all.
The Windows bootloader is just the most fragile thing.
You change one little thing and nope, it's just going to blue screen on you.
It feels like they're touching too many things during those processes.
Those PCD files, it's no good.
Just a lot going on there, a lot.
Morgan, you've done this move as well, where you have a system, you're migrating, you don't
have access to the files, you got to get file permissions changed.
What happened?
Well, moving this cluster and realized after we shut it all down that we hadn't put SSH
keys or anything on it.
And so when we get to the data center, we plug it all in and now we have to configure
its network so it can reach out back to the owner.
So I just threw on, I think it was Fedora Live or something and just popped root, changed
password and rocked the races.
Yeah, it is great for that too.
There's definitely been systems that I've borked that I've saved, or partitions that
I've mounted and got the data off of when the OS has gone sideways.
It's also just been always handy to have a live CD around.
I don't dual boot that often, or now it's easy to have multiple hard drives or set things
up.
But on one hard drive with multiple partitions, and if you get Windows installed second, for
whatever reason, maybe you already got, it's just always going to overwrite that bootloader
and having a live CD laying around that you could just jump in, reinstall grub or boot
into an existing system to do that, very handy.
I don't want to go into detail for reasons that will become obvious, but I had this client
and he was a lawyer and he paid top dollar to have me come out and save his XP system
over and over and over again.
And this went on for a few years.
I think he got a new computer at one point because it got so messed up with malware and
he was really a big email guy.
He did everything through email and Outlook kept getting screwed up for him.
And I think he ended up getting a really super high end HP workstation with a RAID 0 setup
with Windows Vista at the time.
And then a week or two later, it was just loaded up with malware again and there I was.
I was out there cleaning it up and fixing it up.
Did you have the right number of browser toolbars?
Oh yeah.
You need those.
So something I don't know if people appreciate as much now, but back in the day, you'd basically
just get owned if you went on the internet with Internet Explorer.
And that's what they would do, right, because they had these ActiveX applications that they
used for like filling out legal paperwork.
And so they were a shop, the User Internet Explorer, and he would go on the internet
in the evenings and entertain himself.
And then he would get his machine loaded up with crap and then they'd have me come out
about almost once a week at one point to clean his system up.
And then all of a sudden it stopped happening.
And I was like, huh, this is great.
Maybe he finally stopped.
Maybe he's just going home.
I don't know.
He's just got a computer at home, quit working late at the office.
I don't know.
Except for one week when I came in and I walked into his office and it was booted into a live
Ubuntu session.
He figured out that he could boot into a live session and contain the damage, I suppose.
And that's when it really struck me like, oh, yeah, I guess there's everyday use cases
for this kind of stuff.
I heard of people used it for like paranoid banking and back in the day, like people only
manage their Bitcoin like a live session.
Yeah, right.
I mean, details is still a useful thing today.
Yeah.
Yeah.
But I was like, oh, well, OK, all right, that works because I was getting really sick and
tired of cleaning his system up because it'd always be right in the middle of some kind
of emergency where he had something he had to do right away.
Big case, you know, needed access.
I'm like, get off my I didn't break your system.
I didn't do this.
You know, like the least you could do is cover your tracks.
Gosh, it's just, you know, one of those things.
So live sessions ended up being really a useful thing, even for everyday folk.
I won't go into more detail than that for obvious reasons.
Now we haven't heard Brent's story yet.
So Brent, stay a while and listen, you ever had a live session save your bacon all the
time?
I will say to the point where I always travel with one and I encourage everyone, friends
and family who I support to also travel with one to just tuck it away somewhere.
Forget about it.
But if you're traveling somewhere, that's usually when things are going to break.
But the one time that comes to mind that really helped was my mother has a Lenovo Yoga.
It's a 710.
And that'll become a little bit interesting in a bit.
She ran into an Intel microcode bug.
And it took me a little while to figure it out.
But she got to a point where it was like a no boot situation.
And so of course, live USB is the way to do it.
But it took me a few hours to kind of like really get a handle on what was going on and
do a bunch of research.
But the biggest challenge, and this will be hopefully a trick that someone can use.
The biggest challenge with her laptop is it only has one USB port.
Oh, yikes.
Yeah, I've run into a few systems like this.
And it's fine because you can boot into your live USB drive.
But then I always love to do a full backup before I change anything, especially having
to do with kernels and things like that.
So how do you do that if you can't, you know, plug in another drive?
It can also be tricky if you might need, say, you know, if the live environment doesn't
have the right firmware or drivers, and so you don't have, you know, you might need to
use the USB for if you can't get access to a built in mouse or keyboard or something.
Yeah, so nice trick that I learned was to simply change the kernel parameters and add
to RAM.
And I think this might work with all Debian based live disks.
I don't know that for sure.
But that, you know, Chris alluded to it earlier that just throws everything in RAM, you can
unplug the USB, that was such a help in this particular case, because then I was able to
do backups and do a bunch of other stuff.
But eventually, led to writing a bug report to Ubuntu for this Intel microcode.
And it was like, I think only three other people had this strange bug with this particular
processor on this particular yoga.
So it was a weird situation, but it totally, you know, live USBs to the rescue again.
Save the day.
Yeah, that, that two RAM trick is pretty killer.
So great.
You know, you can do some fancy stuff with Ventoy to do that too.
But yeah, as you say, with a lot of Debian based ISOs, like it's just built in, it's
there in the init RAM FS and super handy.
Either of you guys ever try to build your own, like, personal live USB or live CD?
Did you ever mess with any of that kind of stuff?
Yeah, I was building my own little Arch images for a while.
Really?
That was fun.
Yeah, Arch ISO, you know, makes it, it makes it pretty easy.
And then you can kind of customize things, build in your environment.
I was, I was especially playing with that as I was exploring, just booting more stuff
to RAM or two RAM environments, and then you could customize the init RAM FS that you bake
in there.
So it does that.
You know, I was just realizing all of my OG Bitcoin mining I did that I should have held
on to now that I look back, all of that was like custom live sessions and stuff like that.
You know, that I just boot up a machine that was a studio computer that was idle, not doing
anything and then I would have it run that.
And that would just work, you know, and then I would boot back into its regular work OS.
You know, Byte was also bringing up here that you can also have live, live CDs that have
persistence too, like it's still, you know, it doesn't need to take over your computer,
but you with USB drives, at least you can still have that kind of environment where
you don't have to throw everything away.
Well, you see, you have that really super speedy little nano USB thumb drive thing that
you like.
What's it called?
It's got some ridiculous name.
Oh, supersonic rage two.
Yeah, yeah.
That's what you want in your USB.
I mean, you could almost see like you load everything to RAM and then right as you're
shutting down or whatever, it saves to that supersonic rage speed thing.
And then that's your like persistent storage.
I was running Windows 11 off here.
It was super slow, but you know, it did work.
Yeah, but I want to run it from RAM.
What do you got?
Don't you have like 64 gigs or something?
It's 32 gigs in here.
Yeah.
Okay.
You can still make it work though.
Yeah, yeah.
You totally could.
I feel like that's something we should work on is like, wouldn't that make Air Master
great?
I feel like that'd be great.
Air Master should be running from RAM.
You're right.
And that way we can install whatever crap we might want.
Mm hmm.
OBS.
When you're running from RAM.
You know, recklessly doing updates right before the show.
Yeah.
Not a big deal.
Not a big deal, right?
Hmm.
You know, that's what kind of live CDs to me also highlight is that the Linux boot process,
whether it's the, you know, the old bio style UEFI versions these days, whether it's all
baked into one big kernel thing or you have a separate RAMFS, whatever.
It's so flexible.
Like, and you can, you can even just drop to a shell in your inner RAMFS and change
mount points and move things around and move stuff to RAM if you want.
Like it, it's just such a fun world that you can really customize pretty easily.
And there's a lot of scripts these days to make it pretty simple.
It's just so uniquely Linux.
You can get like a live Mac rescue environment or whatever, but you can really have these
custom Linux environments and it's something that we've kind of just completely forgotten
is so special, but it really is a superpower.
It doesn't have to be a stripped down environment.
You can have it as fat as you want as long as you got the, you know, USB space for it.
Go for it.
I mean, I was downloading some SOOS image that was like five gigs the other night.
So that's pretty big.
Pretty big.
And it's, it's funny because we were talking, we got down this path just by talking about
different ways to install Linux and then sort of a tangential conversation.
We were talking about sort of big moments in Linux's history.
And as a, as kind of a side tangent, I looked up a few articles that were written that covered
like massive, massive moments in Linux's history.
And I didn't see any of them that listed live, live CDs and live sessions.
I feel like that's a major oversight because it was such a hack to let you test your hardware
compatibility back during such uncertain times.
It let you before you took a leap, really try it out.
And that really made it possible for so many people to adopt Linux.
And it made it possible for distros to say, look, you can try it first before you, you
know, before you deploy.
Especially maybe, you know, you're just trying it out and you have a shared, a shared desktop
you're sharing with your family or other members in the household.
And like, you can't, you know, you don't have partition.
You might have a 20 gig partition back in the day or something like you don't have space
to separate things out, let alone do you have the skills to install it.
So yeah, pretty crucial for even getting Linux at all.
And now it's just how we do pretty much everything, you know, when you go to install, it's just
totally how it is.
And I know what kids these days, they didn't have to walk uphill both ways to install their
Linux like we did.
And that's good.
Yeah.
Now they just use a cloud workstation.
Just a spot of housekeeping this week, cause you know, we got some eating to get to, but
I do want to thank our members at unpluggedcore.com.
You guys help us keep this show going, especially when it's just like a single sponsor show.
Like you're, you're what's keeping us on the road right now.
Thank you.
And so as a thank you, we have two feeds, an ad free feed, totally ad free now, or the
live feed that has everything we did on the pre and post show, all our screw ups, you
know, when West starts cursing, that's all in there now.
Sorry.
You got to get fired up.
So it kind of depends on what you want something longer or do you want something with all the
Joe's editing techniques and fine touches, you know, that Joe Rez special it's your choice.
You get a tighter show that's the Joe Rez special with no ads, or you get the long one
where we screw up, we talk over each other, West is cursing, but it's also like two shows
in one.
It's a whole lot of other stuff going on.
That's all available for our members.
And also anyone who supports the whole network at Jupiter.party, if you want to support more
than a couple of shows, that's probably the way to go Jupiter.party plus you got to type
in that fun domain.
Yeah, that's true.
That's true.
Shout out to those of you who have been sending us boosts with the value for value payment
systems in the new podcast apps, if you don't know what I'm talking about, well, you got
to go check out newpodcastapps.com because we're getting live messages from folks out
there that are listening to the show as they go.
It's pretty great.
See somebody send in a message.
We got a boost the other day because they were streaming us sats as they listen, but
Linux action news was kind of short.
So they sent us an extra boost to make all that.
Isn't that great?
It's pretty cool.
It's a it's a I think it's gonna be a revolution one day we shall see.
And last but not least, we'd love to have you join us.
We do this show on a Sunday, set a little time aside and come hang out.
Well since last week's mailbag was lost, we found it again and it was extra full.
So this week, we're going to touch on a little bit of some arch feedback.
Carrie writes, I wanted to offer up an alternative to your hypothesis that Linux gaming was driving
arch adoption.
I'm not a gamer, but I have been finding myself gravitating to Manjaro and Garuda.
I've been a Windows, Mac OS and iOS user for a long time and I've always been an early
adopter of new updates, I jump at a chance for new releases to have fun playing with
new features.
I even like to beta test even though I'm not super technical.
Just like your thoughts in Linux Unplugged 4.22, I feel that technology should be fun.
I purchased a framework laptop last year and ran Linux exclusively on it.
The only distros that worked in the beginning were the bleeding edge distros that adopted
the latest kernel.
This left Fedora 35 and Arch as the easiest to install solutions for quite a while.
And only recently do distros like Pop OS work seamlessly, mostly due to driver support issues.
Waiting for a stable release in the Ubuntu world just isn't feasible.
Arch's rolling release solves the new hardware issues and allows us to play with new features.
The tried and true distros like Ubuntu are slow to release updates to the kernel and
desktop environment and frankly just aren't that fun, although I am happily using them
for my server's VMs because of the great documentation, support and stability.
I think that echoes a sentiment that I hear more and more when I talk to people in the
real world.
And I don't know what that necessarily means for the Ubuntu.
I think this is an issue we've been kind of circling around delicately because we don't
want to sound like we're dogging on Ubuntu.
But there sure seems to be a trend line here that we're seeing from our audience and we're
starting to see from data.
And that makes me kind of uncomfortable actually.
There's still a lot of momentum and there's still many folks who are maybe not Linux users
but not following it as closely as we do.
Let's say that Ubuntu is maybe still sort of a default, like, oh, what's that latest
Ubuntu release?
I'll give that a go.
But if you're really following what's latest, you're interested in trying out new versions
of software, new kernels, yeah, it's probably not what you're gravitating to.
So I wonder too, like, we could be having a couple of trends, right?
Like people that adopted Ubuntu a while ago are maybe just kind of looking for something
else.
At the same time, we're kind of at the peak age between LTS releases.
We're just at the dawn before the next LTS where it's kind of going to be new again.
And maybe get that little nice, you know, first six months, right, right.
But I kind of agree, like, I also find myself gravitating towards Arch and Fedora for that
fresh hardware stack.
And also, legitimately, there is really good innovation and improvements landing in upstream
Linux kernels.
And I want that on my machine.
And I've always kind of been on the fence on that.
But in the last year or so, it's essentially been, if you look at the last few kernel releases
for the last, I don't know, six months to a year, there's like at least one, often five
things that are landing in the kernel that I'm like, oh, that's great.
I've been waiting for that for years.
And so it's just such a good time to have a fresh version of the kernel.
Like, there are seasons where the kernel kind of slows down a little bit, but we are not
in one of those seasons right now.
And you don't really need to rely, I think there's also sort of a, oh, Ubuntu, you know,
it's going to make things really easy.
It's just going to work.
It's going to be rock solid.
It'll work on my hardware.
They've got things out.
It's very well tested.
And that's all still true.
But I mean, Fedora has come a huge way.
There's easy to use Arch setups for you.
Of course, there's various options from SUSE, like, there's just a lot of things that can
work that have newer options, you know, you're not stuck.
Those have all gotten better.
I mean, I think it is worth mentioning, because we all know this, but we haven't said it out
loud is there are use cases for having a kernel version that doesn't change.
Like there, you know, we've had hardware in the past that has a driver for a specific
version of the kernel.
And you're sticking to that.
Like there are use cases for having a system that doesn't have a bunch of updates.
Maybe you've got ZFS involved.
Speaking of ZFS, I think Kristen has the opposite end of this one.
She says, I was just listening to the Linux Unblogged 4.42.
And I found a downside of newer kernels on Ubuntu based distros.
I run Pop!
OS 2004.
And a couple weeks ago, I tried to mess around with that ZFS, but it didn't work.
Turns out there's a problem because the kernel is new, but the ZFS modules weren't updated
to match.
Linked is a Reddit thread that might be interesting.
Of course, that Reddit post could all be wrong, she writes, but it seems plausible.
For all I know, the problem could be fixed now.
One of the shows, by the way, best, Kristen McDuffie, former assistant district attorney
of New York City.
P.S.
I've been messing around with mini computers lately.
They're fun.
What a daredevil.
What do you guys think?
I totally agree.
Mini computers are a lot of fun.
That's awesome.
I'm glad that she added that.
Yeah.
Boy, she just really kind of illustrated the point that I just roughly attempted to make.
And that's a great, you know, that really is true.
And I wanted to acknowledge that on the show, too.
It's like, yeah, there are use cases like ZFS or hardware where if you're getting updates
all the time, things are going to break.
And when you're in production, you ain't got no appetites for that.
Right.
And it may require that you learn about those things.
And not all computer users really have to want to have to care about that kind of thing.
And that's fair.
And the other thing we have is we kind of have the advantage of kind of trending our
systems towards working in this environment, right?
It's not something that we're just now figuring out we want to do.
We know we like these modern components.
And so we've built our systems in a way now for a while.
So they work with that stuff.
We're not trying to take an LTS workflow and use it on a rolling.
Right.
And we're now we're even even like when we look for hardware, we're looking for hardware
that we know already has kernel support today.
So that way, any kernel we go to in the future is also going to just keep working.
And that's the luxury you have of figuring this out a little bit ago and just now having
years of making those choices kind of pay dividends.
But when you're just kind of getting started, you got to really kind of get your feet underneath
yourself and figure that stuff out.
So we got one last one we wanted to get in before we wrap up the feedback.
You want to take that one, Mr. Payne?
Yeah.
Garrett writes in.
Hi, guys.
I feel a little lost in the woods on the whole SUSE Liberty Linux intrigue.
So we're primarily a red hot shop where I work in academia.
And occasionally, I'll have some contact with our regional SUSE representative because,
well, I just love chatting about Linux and yeah, hey, Garrett, we feel you there.
Garrett goes on to say, anyway, SUSE's primary goal is, of course, to get you to buy SUSE
the Linux enterprise and maintain a support contract.
In organizations like ours, traditionally, you'd be proposing a migration from the fleet
of relboxes to SLE.
I can be a mind blowing task to execute in a tight timeline if you want to avoid a very
expensive contract overlap.
So much so that this could be a blocker to any type of deal actually moving forward.
To massage this point a little, according to our rep, they offer rebuilds of Red Hat
RPMs and offer a method to migrate your box from rel update repos to SUSE maintained ones.
This gives you an opportunity to cut your Red Hat contract, keep your existing rel servers
fed with updates, and allow you to grow into your eventual SLE roadmap.
The idea being that you wouldn't bring up any new Red Hat boxes with SUSE, but new boxes
would be SLE and you'd phase out your Red Hat through an intentional migration of attrition.
I could see SUSE needing to rebrand legally what they build, similar to how CentOS, Racky,
and Alma have to, and that maybe Liberty Linux is that branding result.
Those rel SUSE Liberty Linux boxes could be what Apple was seeing.
Does that seem plausible or am I missing a finer detail to indicate a new skew?
The only thing that kind of would influence my thought process on this is I think we have
to keep in mind that this is essentially a service that SUSE was offering before the
whole Liberty thing.
It's essentially a rebranded package.
And without the distro part of it, I don't really know how it's different.
And it has been kind of hilarious.
Even as of like a couple of days ago, there are outlets that are still reporting this
as a new CentOS clone.
That's embarrassing.
It seems like several people in the media had insider knowledge about this thing getting
worked on, but then they didn't get the updated insider knowledge that it was pivoted to a
different product or that part of it was canceled.
And so the initial reports led as a CentOS clone, when in fact it is a service that allows
you, like was just very well articulated here by Garrett, it allows you to manage your SUSE
boxes and your rel based boxes all together with one SUSE management system and then eventually
transition to a complete SUSE system.
Carl, sounds like maybe you've got some thoughts on the scope change for Liberty.
Sure.
There was a Twitter thread I was participating in and Richard Brown, Cisrich on Twitter,
he works for SUSE.
I think he used to be on the OpenSUSE board and he clarified that in the past, the old
expanded support offering that was for rel only and it had kind of an expectation that
you would eventually migrate to SLIS.
And the new Liberty offering is that it is for rel and CentOS and there's no expectation
you can just keep using it forever.
Oh, interesting.
And that actually seems like a pretty smart move there.
I mean, if this is all it ever is to that, this is probably a decent offering that people
like Garrett, we make a good case, we'll take care, take advantage of.
Seems quite practical.
I still wouldn't rule out a distro shipping one day though.
I mean, I'm hoping here.
It'd be a lot of fun.
All right, just a quick pick this week because it's so ridiculous, but my grandpa tells me
all the time that back in his day, Lotus one, two, three on the terminal was the best damn
spreadsheet program around.
And so in that spirit, we're going to share SCIM, which is a spreadsheet calculator in
the command line.
And yeah, it's an end curses based SOB and it's kind of beautiful.
There's graphs in here?
What?
Yeah, yeah.
I wonder if this would actually make me tolerate spreadsheets or if it would just make it even
more confusing.
Yeah.
I mean, you could, you could write down all in your various crypto assets in here, keep
track of it, make little charts on the command line.
I love it.
Yeah, that'd be good.
Right now.
They've got well formatted tables with breakdowns.
It's actually not bad, right?
Like some genuine hard work has gone into this application.
Like you could really use this on the daily.
It seems to be very much inspired, built in part with VIM.
So you'll have to get used to that, I guess.
You know, finally learn the ice and the hard truth is, is I would probably be able to pick
it up pretty quick because I used to, I used to exclusively use VIM as my editor on my
systems.
This thing has XLSX import support.
What?
I know.
You know, if it just had some sort of integration with nano, I'd really be on board.
That'd be pretty great.
So our love blog is getting together on Tuesdays and Sundays.
We have a bunch of it.
We have a bunch of like, yeah, we have a bunch of time now, like, well, two, I guess compared
to just one.
That's like a doubling.
Right?
Yes.
That kind of feels like a bunch.
Right?
You see what I'm going with?
200% from, you know, the.
That's what I'm saying.
So if you'd like to know when those things happen, you're gonna have to figure it on
your own because there's no calendar at jupyterbroadcasting.com slash calendar.
That's not a thing.
Don't check.
There's no linuxunplug.com slash mumble.
You couldn't put these pieces together.
It's impossible.
And we don't talk about it all the time on the live stream on Sundays, which we do every
single Sunday.
You definitely can't join our telegram group to ask about that.
Right.
You can't go to linuxunplug.com slash telegram.
You can't do that, unfortunately.
And there's no way to find out about new releases on Twitter, like a Jupiter signal or anything
like that.
There's also no method to subscribe to get MP3 files very easily on your.
We never put up linuxunplug.com slash subscribe.
We never publish the links at linuxunplug.com slash 443.
We don't do those things.
I mean, we would, but we got brats to go eat.
So we're going to go do that.
That's it, though.
I'd love to hear when a live session saved your bacon.
Let us know, linuxunplug.com slash contact.
Send it over there.
Let us know.
And we got a whole bunch coming up.
So join us live one of these days and help us title this thing and hang out in our virtual
lug.
We do it at jblive.tv.
We want you there.
We do.
But we still appreciate you listening, downloading, becoming a member if you can, or sharing this
with a friend.
It's the best way to spread a podcast is word of mouth.
If you enjoyed this episode, share it with somebody.
We'd appreciate that very much.
Thanks so much for joining us.
And we'll see you right back here next Sunday.
All right, let's go title this thing so we can get to cooking, everybody.
I'm not ready for that.
I'm still stuck on this pick because it's got Lua scripting.
What?
It's got GNU plot integration.
Yeah, I knew the GNU plot.
I didn't know about the Lua scripting.
I love GNU plot.
It's just great.
All right, title time.
We got to go pick our title.
JBtitles.
Everybody out in the living room, get on your phones and go over to JBtitles.com and pick
a title.
Come on.
Put yourself.
What?
Is that a thing?
Is that a thing?
Not yet.
Should be though.
Could be.
We got every other domain out there.
Tell you what.
Tell the registrar quick.
Here, crack that door open there, Wes, just so we can just crack it open so we can hear
them.
Just get a little.
There we go.
Yeah.
All right.
These are all about me getting old.
What's with that?
How are all these titles?
I'm not sure.
Because you are?
What the hell is this?
Sorry, Chris.
Well, you wanted the live stream to keep going, so I had to have content.
You just became the content.
Oh, man.
Oh, man.
