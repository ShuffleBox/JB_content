I decided the whole trip I would avoid eating fish,
because why eat fish when you're away
from the Pacific Northwest, right?
So guess what I've been eating since I've been back?
Pretty much nothing but fish.
Yeah, but I will say the fish we did have impromptu
in the parking lot was pretty amazing.
Parking lot fish, not sketchy at all.
Let's be clear, too.
Poe Dunk gas station parking lot in Jerome, Idaho.
And it was amazing.
We made the best of that situation.
Hello, friends, and welcome back to your weekly Linux talk show.
My name is Chris.
My name is Wes.
And my name is Brent.
Hello, gentlemen.
This episode is brought to you by a Cloud Guru,
the leader in learning for the Cloud,
Linux, and other modern tech skills.
Right now, everyone can get cloud learning for a discount.
That's right, hundreds of courses,
thousands of hands-on labs, free cloud sandboxes, all more
at cloudguru.com.
Well, coming up on the show today,
we're mixing our vanilla with our chocolate,
like one of those tasty cones that I never actually get.
But then when my kids order them, I look at them
and think, I should have got one of those.
We're going to start out with some really important desktop
developments this week.
And then we'll wrap up that with a conversation
around some new features landing in Matrix, where we think
Matrix is going, and some changes and improvements
we're making to both our Matrix community
and the actual Matrix server itself.
So there's a lot there that we're going to get into.
But before we do that, before we do the community news,
any of that kind of stuff, we have
to say time-appropriate greetings
to our virtual lug.
Hello, Mumble Room.
Namaskaram.
Hello.
Hello.
Hello.
Hello.
Hello, everybody.
Man, is it nice to be back in the studio
and nice to actually see your faces.
I'll talk more about that in a bit, but yes, I am back.
It is good.
We did get the server up.
We have a complete update next week
in Linux Unplugged on what was wrong with our server,
the fact that it crashed again, and what we did to fix that,
and what our long-term plans are.
But before we can get to that, we actually just
have to take care of some business.
That's right.
It's time to do a server update, Wes.
Why do I have a bad feeling about this?
Because it's been a long, long time since we
did an Arch server update.
Yeah, that's why we have 187 packages
to download and update, including
a new version of the kernel.
And that's not even accounting for the fact
that there's a new ZFS version in the AUR as well.
What could go wrong?
It's just our kernel and our file system of choice.
We do these Arch updates, so you don't have to, though.
We'll do them.
And you know, I mean, we will be using almost 300 megs less
disk space if we succeed.
So there's a small benefit there, too.
That's how you know it's a good Arch update.
You install it, and it actually ends up using less disk space.
So all right, Wes, here's what we're going to do.
You get those packages downloading,
because it's going to take a while to download, like,
nearly 700 megs worth of packages.
And then we will check back in the post-show
and do the final install and see how everything goes.
All right?
That's the plan.
Wish me luck, everyone.
But first, we do have some community news.
Josh Strobel joins us.
It's been forever, Josh, since you've been on the show.
And we love having you here, because I
love getting updates on Solus, your baby,
and what's going on there.
And you drew a lot of attention this last week
when you published a post, quote,
building an alternative ecosystem,
where you called out some problems
that you feel like you're having in the downstream position
with GNOME.
And Josh, I want to thank you for coming on
and giving voice to this, because other distribution
makers are having some frustrations right now,
it seems.
And unlike what we typically have where users get upset,
in this case, it seems like the people
who make our distributions are starting to get upset.
So can you explain what's going on for people who
are totally new to this topic?
Yeah, well, first off, thank you for having me on.
I really appreciate having the opportunity
to actually discuss quite a controversial post I certainly
made, not without some of its faults.
But in essence, the concerns I raised
are kind of two pronged in my building alternative ecosystem
blog post.
So the first one is about kind of the GNOME community
and some of the behavior and attitude
exhibited by GNOME developers, whether they're
GDK developers or otherwise.
And we've seen some of this before
with Tobias' controversial post that he
made about traditional desktops being dead
and that kind of thing, but also just some of the behavior
that they've exhibited fairly recently in response
to some concerns actually originally raised
by the System76 developer Jeremy, who, as we all know,
works on the Cosmic slash Pop OS desktop environments
and all that.
So we have some of that, but also there's
some concerns that we have related
to the fragmentation of how theming
is going to be working going forward in GNOME 42 and GDK5
and how that's going to look and play out
across a variety of GDK-based desktop environments,
applications, across different operating systems
like elementary and Pop OS and Solus and Ferran OS
and so on and so forth.
So I wrote a big blog post on my personal website kind
of detailing these concerns about their changing of how
dark theme is going to work and shifting that to libidwaita
and removing some of the APIs and key values
that we need as downstreams in GDK5 with the assumption
that we're all going to be building these platform
libraries to handle our styling and all that differently.
And so the transition is essentially distribution makers
who are downstream clients of GNOME.
They like to brand the desktop environment currently,
if I understand this correctly, by essentially modifying
the CSS around the GNOME, either Adwadi itself
or a different theme, and they can kind of color things
and brand things that way.
And that's going away.
And any customization that will be allowed
is going to be via libidwaita, starting with GNOME 42.
And in there, it's going to be more things
like accent colors that can be tweaked and stuff.
Is that a correct assessment?
Right now, what we have is a key value called GDK-Theme,
where what you can do is say, I want platidark or platinoir
or I want materia dark or that sort of theme.
And that is used and respected by GDK and across all those GDK
applications.
So that's what we have at the moment.
What we're going to be having going forward
is a situation where libidwaita will
have a recoloring API, which will be for application
developers, but not end users.
So this will be up to application developers
to expose its recoloring functionality to end users
if they want.
Of course, we understand that there's
some individuals that have cosigned to the don't theme
my app that might have a different view on application
theming.
However, effectively, what we're going to have to do
if you want to have theming with a GDK application
is you would have to build out your own library that
handles the loading of a specific style sheet.
So in libidwaita's case, it's edwaita,
which is edwaita-light or edwaita-dark.
For elementary, it would be with their libgranite.
And effectively, what GNOME is saying
is, OK, Sol is system 76.
You guys have to develop your own thing.
And now, when you ship applications that are, say,
based on their core GNOME applications,
but you also ship your own, you run
the risk of those looking different, functioning
different, depending on if you implement their dark theme
standard that's been proposed and all of that.
So it ends up being a real mess compared
to the current situation, which is you change a single key,
and it applies universally across all your GNOME
applications.
Josh, it seems like a barrier here
is I think the GNOME camp would argue what we have today
is a mess, and that something like libidwaita
is designed to solve that and give developers more control
over how their applications look.
Do you grant that some of that's true?
I can see that side of the argument there.
Yeah, I mean, I certainly understand their perspective
of there might be situations where you apply a theme,
and that theme unexpectedly breaks
the layout and styling of a GNOME application.
And obviously, their concern is trying
to ensure that doesn't happen.
But I feel like most of that ends up coming down
to fixing the theme, not necessarily preventing
the end user from making those changes to begin with.
So I feel like it's a difference in perspective.
And my perspective is coming from the whole idea
of the ability under Linux to be able to make
all these sort of customizations that you want
is kind of being taken away or shoved or made harder
versus their perspective.
So it's a very interesting problem.
It is.
And it seems like the conversation has soured a bit.
It seems like maybe some personality conflicts
are involved, and it kind of has shut down.
And it seems like their intended path going forward
is Libidwadia, which they plan to have 1.0 in GNOME 42.
They think that they'll have some recoloring functionality
in there.
Proper dark style settings will be available by then.
But system-wide accent colors and that kind of stuff
probably not going to land by then.
And there definitely won't be any kind of theming API.
That's correct, yeah.
And I think their contention is, well,
if you want a theming API, build it.
Do you think that would actually work?
Could you show up with some code and say, OK, here you go,
GNOME.
We've created a theming API.
Do you think they'd actually accept it?
I'm not entirely sure they would,
because if you look at even some of the work
that Matthias has tried doing, and Matthias
is one of the GDK developers, with some of the theming
even in GDK 4, the end decision was to actually punt that over
to Libidwadia, because there is this constant conflict
between GDK developers, GDK application developers,
distributions, end users.
There doesn't seem to be a good middle ground
at the moment between all of this.
So it seems like the path, instead
of trying to find a middle ground,
has been to just fracture things.
And it seems like for Solus, it doesn't
look like this is a direction that you all want to go into.
And so you're looking at utilizing the Enlightenment
libraries for future development.
Yeah, so to just clarify, I made a statement regarding Qt.
So basically, I laid out all of our alternatives,
which were like EFL, which is Enlightenment,
Foundation libraries, Qt, and Iced.
I had stated that there is a commercial licensing related
to Qt. I want to clarify that the issues that we have
in relation to Qt and the KDE project and all of that
is related to the fact that we don't
want to have to be put into a position where we're
maintaining a patch set, like KDE
has to do with the 5.15 series, with all
the comprehensive libraries that Qt provides.
So we would rather just avoid that path
entirely and not have to be concerned with Qt's
commercialization of Qt.
So that basically brings us to EFL and Iced.
So for those that aren't familiar,
Iced is a toolkit that is designed for Rust.
So obviously, that's been a point of contention internally
because some of us like Rust, some of us
prefer C and all that.
But at the end of the day, that's just not quite ready
because it misses some of the APIs that we would need,
like layering to build basic stuff like pop-ups.
So what that means is basically EFL is there.
As effectively, the only option we really
have aside from building our own toolkit, which just
isn't sustainable, I mean, we've been kicking Budgie 11
down the curb and waiting for GDK4
being a state where it was released as stable,
not to mention in a state that we're happy with.
So it's just we got to pull the trigger and just go with EFL
and start working on Solace applications and Budgie 11
in EFL.
Wow.
That seems like a huge job.
But in a way, I'm kind of glad you're doing it
because Solace has always really been great at kind of doing
some research and development in an area
that maybe other distributions aren't looking at and landing
on something clever.
So I think in a way, it's going to work out pretty well
because it takes some pressure off the GNOME project as well.
They can kind of do their thing.
And you guys can do your thing.
And maybe if it starts to look like a direction people
are interested in, some other projects will jump in with you.
Have you gotten any bites on other people
joining you in this effort?
I haven't had anybody from like System76 reach out directly.
Maybe they would wait until I write the Rust bindings
for EFL, which is something I want
to do to make it more approachable to more people.
However, I've had some EFL developers reach out actually
and ask what they could do to actually help
or what ways they could get involved
in bringing EFL-based applications to Solace.
So I've been extremely pleased with the reception
that the EFL community has had related to that.
And we already have people in the Solace community
that are application developers that are already
looking towards building applications.
Like for instance, Sarabit, he's the developer
of an application called Wraith Master, which
does RGB controls for your Wraith Spire
coolers and all that.
He's working on an EFL implementation as well.
So that's good to hear.
That's really good to hear.
This feels almost like an impossible problem
to solve to everyone's satisfaction.
Reading through the GNOME camp's position,
it seems very much like they're of the opinion
like they have a few things they want to accomplish,
like say, dark mode and high contrast
mode for accessibility.
And to do that, they have to make some fundamental changes.
And they kind of have some other problems
to solve at the same time.
And so this seems like the direction they're going to go.
Is Libidwadia, that's where the customization is going to be.
If you want to customize, you're going
to have to modify that.
And application developers are going
to have some say now if their application can
be themed or not.
This is not just a problem unique to GNOME.
And so, Neil, could you give us some insights
into how the Plasma Desktop struggles with this?
The Plasma Desktop, as most people know,
uses the Qt toolkit underneath.
I mean, Josh mentioned it briefly earlier
that we depend on Qt from the Qt company.
And there's been kerfuffles about it.
It hasn't been a huge deal that KDE
is maintaining a patch set on top of Qt 5.15
because they're all backports of things
that they send up to Qt 6.
And the goal is to move to Qt 6 anyway.
And Qt 6 doesn't have the same impairment
that Qt 5.15 has right now.
But to get to the heart of the matter with GTK and GNOME
and their decision with Libidwadia,
the problem with Libidwadia is if you run an application that
forces Adwadia on Plasma, it is entirely alien in convention,
in style, in arrangement, in accessibility, in theming,
in UX patterns, the whole works.
Plasma historically has bent over backwards
to incorporate GNOME and GTK applications into the fold.
Like there are adapters and drivers and style sheets
and configuration and overrides and all kinds of things
that we do to make it so that a GTK GNOME application
actually fits in Plasma with what GNOME is doing here.
They've basically said, we don't think that having
an application fit within the environment
that the user is working in is a valuable property.
What I suspect is actually gonna happen mid to long term
is that as Libidwadia stabilizes its ABI,
when the 1.0 release, the ABI and API
will be mostly stable, it'll get forked.
And that library will get forked into a drop-in replacement
that will revert to the old behavior
of allowing the system themes to propagate through
to all the applications.
That's exactly what I expect will happen too.
Yeah, I mean, that's been something
that we've been considering internally for Souls as well.
We provide a lot of patches on top of these applications
to revert some of the behavior that GNOME does.
And unfortunately, it might be the case
where we have to do that for Libidwadia as well.
Is it Adwaita or Adwadia?
I don't know.
I don't know.
I mean, is it GNOME or is it GNOME, right?
You two don't know.
Who does?
Well, so I've been calling it Adwaita
until Chris started calling it Adwadia today.
And I was like, all right.
I do both to cover my bases.
Okay. Yeah.
For Libidwadia, I fully expect that we'll see something
like lib system theme or something like that.
And it'll produce a dummy library of Libidwadia
and lib granite and bind those APIs back in
into something that any desktop can plug into.
And it may be something that's a joint effort
across the different alternative desktops
that basically don't fit with what GNOME is doing now.
So like Matei.
But might that ultimately not be a better solution?
No, no, no, no, no.
So a lot of people don't know this,
but this is actually how everything worked with GTK2.
So in GTK2 land, to kind of recap,
you had a concept of a theming engine
and you plugged that in,
and then it would propagate back into the applications.
And do all the things.
The problem with this model
was that you were essentially required
to make sure you were binding on both sides correctly
the whole time.
So every time a new release of the platform,
GTK2, libgnome, desktop, all the other things around it,
that linked into GTK and like used it to render stuff,
you needed to make sure you covered
all the widgets and stuff.
And one of the reasons GTK3 doesn't have this
was that the idea was if we went to style sheets,
CSS, JavaScript with GJS, and use that instead,
we'd get to a world where we would be able
to do a declarative simple model.
I mean, it's not really declarative.
CSS is Turing complete.
But declarative simple model
of being able to easily implement
styling of applications in a way that is clear,
testable, and usable, and portable.
And they immediately ripped out
the three theming engine stuff in GTK3
when they finished implementing the style sheet stuff.
So in GTK4, we're getting the worst of all worlds.
We're getting the theming engine plus the CSS style sheet.
Nobody actually likes working with CSS,
but the upshot of the CSS stuff with GTK3
was that you didn't have to write
a whole bloody theming engine to work with it.
You were able to use-
Democratize the customization of GTK-based applications.
Exactly.
And if you look at Breeze GTK2 and Breeze GTK3,
Breeze GTK2 is horrible compared to Breeze GTK3
because Breeze GTK3 looks like Breeze on Qt
because both Qt5 and GTK3 operate
on the same basic principles on how they do styling.
So with GTK4, we now go back to having theming engines
and we have the style sheets.
And so now we're in the worst of all worlds.
You know, it's not great to hear that,
but I can still sort of see
why they're going this direction.
And I understand that it's frustrating.
And I think it's disappointing how the conversation
has devolved into kind of personality conflicts,
essentially just kind of preventing
proper organization on this.
But what fascinates me about this conversation
is it hasn't hit end users yet.
They'll notice this with GNOME 42,
but right now it's distro makers
and desktop environment developers
who are raising a red flag.
It's one of these problems that's bubbling
in the development community
and it's created some turf wars there,
but it actually hasn't really hit end users yet,
but it's coming.
Yeah, I mean, in the case of Solus,
it's why we're actually going to be moving
our default applications that ship
to not leverage ones that we anticipate
are going to be using Libidoida.
So that way, obviously it's not going to affect
those that already have Solus installed,
but those that will have Solus installed
or intend on installing it or have a fresh installation,
when GNOME 42 finally rolls out,
they're not gonna really notice any difference.
Or at least that's the end goal.
Hopefully, right?
Yeah, well said.
I think it's tricky because GNOME sees themselves
as creating a platform that is consumed by end users,
by actual users.
And that's why when they do surveys,
they go out and they find commercial operating system users
and they survey how they use them
and use that to inform future decisions or whatever.
But there is a very common use case of GNOME
that is, I don't think in that conception of theirs,
in my opinion, I don't know for sure,
but in that is the downstream distro makers.
I don't think GNOME really thinks of themselves
as an upstream vendor that is producing code
for downstream consumers who are then repackaging it
for their end users,
where shipping it with an extension enabled,
even if it's Fedora, is commonplace.
And shipping it with a theme applied is commonplace.
Like these are very common things.
Fedora does the least amount of tweaks,
but even Fedora has a little logo extension
they ship with.
So literally every downstream vendor of GNOME
is using extensions,
but yet the project says,
eh, extensions are niche, nobody uses them.
Because they're thinking about it
from people who are consuming the product
they create directly.
Yeah.
Which I can tell you really isn't the case
because even like for Solus GNOME edition,
historically we shipped with Dash to Dock.
Obviously, you know, there's been some issues
with getting that moved over to GNOME 40
to the point where they've been like,
eh, we're just gonna wait until 41 is out
before we even really bother
with releasing a new version of it.
Where like people actually use stuff like Dash to Dock
or Dash to Panel.
Like if you check screenshots,
most of the time of GNOME,
they're not using the default UI.
They are extended up the wazoo
with like system trays,
with impatience to reduce animation speeds
with Dash to Dock or Dash to Panel
with like app menu stuff.
And this whole idea that their niche
is just a fundamental disconnect
between the GNOME shell and GNOME developers
and their end users, I think.
Well, and another aspect of this is that,
so Chris, you mentioned that Fedora ships an extension
for the, you know, the watermark at the bottom right.
The reason why we do that is because GNOME
refuses to implement distro branding anywhere.
There's actually no support for distro branding
in the entire source tree of the entire desktop.
Yep.
You can't do it.
So you have to patch it.
Like we have a patch for GDM.
We have an override to offer an extension on GNOME shell.
We have to compile in extra logic
into GNOME initial setup.
We have to patch in the GNOME settings panel
or GNOME control center is what it's called.
Yeah, so it just has to do that too, just for a logo.
Yeah, it's just so that it will pick a logo
and do the right thing there.
Like the way I would describe it
is that GNOME considers themselves the project
that delivers the experience to the users.
And this is despite them not having
a direct deliverable of any kind.
Right, exactly.
And despite some people wanting to turn it into that,
it's definitely not intended to do that
because people would not be very happy
with the end result of that experience.
Yes, that is the ironic thing.
I mean, there's GNOME OS,
but even they admit it's not for production.
I mean, I think that's one of the reasons
why I really enjoy new releases of Fedora.
And so to say something positive here,
I tried out Fedora 35 over the weekend
and kept it up to date and it's got GNOME 41 in there.
And there is some nice things to see,
like something I used to have to use an extension for,
integrating power profiles is now just built into GNOME.
I love seeing that.
And the other thing is they have
a new multitask settings pane
that you can go into the GNOME control center
and go to multitasking and you can kind of configure
some of your options like window snapping and whatnot.
It's well done.
And on the Fedora side,
they've worked to enable parts of Flat Hub
if you enable the third party repo.
So now you have Flat Hub in your GNOME software search.
I mean, like there's really good stuff happening here.
Not to mention on the backend,
Fedora 35 is gonna ship with extremely improved
Nvidia and Wayland support,
proprietary Nvidia driver and Wayland support.
Huge stuff, right?
And so like the development is still continuing
and good stuff is being created,
but they are extremely confident in their opinion
on how it's being consumed
and what direction they need to go.
And I'll link to a blog post that says the truth.
They're not telling you about themes
and it's worth a read.
You know, so you can hear their response
and you can hear their side of it.
I'll have that linked in the show notes
at linuxunplug.com slash 424.
Thanks for joining us, Josh.
I'm glad that there are people like you out there
shaping the software and the distros
that the rest of us end users out there
are just getting to enjoy.
And there's a lot of hard and controversial decisions
that go into that.
Linode.com slash unplugged.
Go there to get $100 in 60 day credit on your new account
and you go there to support the show.
Linode is our hosting provider.
You know, they started in 2003
and have focused on just making really great cloud hosting.
And now 18 years later, here they are,
independent and proud
and continuing to make awesome services
and now they've just grown.
They've got 11 data centers, nearly a million customers.
They've became their own ISP.
You know, we're about to talk about our matrix server
in the show and we've decided to go the route
of actually setting up a dedicated Linode to host matrix.
Typically, we'll do like a powerful Linode box
and then we'll run a dozen containers on there
or something like that,
hook it up to their S3 compatible object storage
for the backend storage.
And it is really super simple,
straightforward infrastructure to manage.
Man, I tell you what,
it is nothing like it used to be back in the day
and they've just nailed the interface to manage all of this.
So we're gonna tell you more about it,
but we decided to do some upgrades to our matrix server.
And I just love, love, love, love how simple it is
to increase existing volume storage
and then to quickly add new disks.
And then you click a few buttons and boom,
there's just this new amazing amount of disk
available to your Linode.
And it's just so straightforward.
And if you ever have any like spots where like,
I'm not actually sure what the command is now
to mount that new disk.
Well, they've just got like a little button
and you push that button.
It's like, hey, this is the command you need to run.
It's really straightforward.
Plus they have a very powerful DNS manager,
which we use all the time when we're moving services around
or testing something out.
They're also now offering bare metal servers.
That could be pretty wild
because they have super fast systems.
They have screamers of boxes.
So I can imagine a bare metal, I mean, I don't even know.
I don't know what you're doing,
but that's a pretty cool option to have out there.
And then you combine that with their super fast SSDs
and their super fast networking.
I mean, it's obvious why we just host everything there.
And I will admit to you that there is a bit of,
well, they're also part of the Linux community.
They're the real Linux people that really love this stuff.
And they have just got into this
for the love of the technology.
And I can really connect with that.
And I can really connect with wanting to stay independent.
And those are the aspects of Linode
that I think are not really listed on a webpage
or part of their dashboard UI,
but part of what made me comfortable leaving town
and knowing that my infrastructure was running on Linode.
And I'm really grateful that I took the time
to just set up a Linode to back up our on-premises server
that did eventually go down while I was traveling.
And it kept us going.
When the prices are 30 to 50% cheaper
than the major cloud hyperscaler duopolies out there,
like you can afford to do something like that,
especially if you're taking advantage of our $100 offer.
So go to linode.com slash unplugged,
get $100 a 60-day credit on a new account
and see what I've been talking about,
but also you support this independent production.
And that's pretty great.
You're using a service provider that loves Linux
to support a Linux podcast.
That's the kind of thing I'm talking about.
Linode.com slash unplugged.
Well, we just have a couple of more community news items.
I do want to give a plug for Seagull,
which is coming up soon and is virtual again this year,
which means it's not just going to be in the Seattle area.
Anyone can attend.
It's Friday and Saturday, November 5th and 6th.
So you have a little bit of time.
It's now available worldwide.
You can go over to their website and get all the details.
It's at Seagull.org, and it started back in 2013.
And now it's grown to have over 50 presentations, four keynotes.
It's got a career workshop.
I want to double mention that, actually,
because I've heard good things about that from our audience.
And they also have the Cascadia Community Builder Award.
And it's in its ninth year now.
And it's one of those, it's like Linux Fest Northwest.
It's a grassroots, free, labor, open-source culture event.
Meaning, if you're just kind of getting into the system
or you want to learn more about the free software world,
it's a great way to get started.
The free software world, it's a great event for that.
And because it's virtual, it's something you can try out.
Try it before you buy now.
Yeah, it really is just a friendly, welcoming spot.
It does kind of, in some ways, feel like the early days.
It's still growing.
It's still a rather small community.
It's just a great place to get some Linux and free culture
content.
There's another.
Isn't the open-source summit coming up really soon, too,
in our area?
It is, yeah.
At the end of this month, is it this week?
Well, I got back just at the right time, didn't I?
Like, these events are kicking off now.
And I think that one's actually going
to be an in-person and virtual mix event.
So that could be worth checking out.
It's September 27 through Thursday, September 30.
We have a friend coming in town that I'm hoping we,
I need to email.
And you and I can maybe take out to dinner.
So that could be great.
It is nice to be back.
You know, we made it back last Thursday.
You survived the brutal heat of the West.
Oh, man.
What a summer to go on a summer road trip.
That was a mistake.
Talk about mistake number one, going during the summer that's
like the hottest summer of my life.
That was dumb.
But of course, it really came down
to when the kids were out of school, right?
Which is during the summer, so.
You had a lot of factors.
You had a damaged slide.
I mean, what's a man to do?
Right.
And we ended up with the broken suspension.
So last week's episode, wow, was it just last week
where I was stranded in Tucson?
Whoa.
Yes, it was.
That's wild.
Jeez, a lot has happened in the last week.
So we made it to a suspension shop the day after the show
last week.
They mostly fixed us up and got us down the road.
We made just a beeline for the California coast, which
meant we had to go through like some of the hottest
areas for a while.
It was brutal for a couple of days.
I don't think there was a day for the first couple of days
we left Tucson.
The first two days, I don't think
it went below 90 at night.
And I don't think it was below 102 during the day.
And for extra fun, the dash AC went caputs again on Lady Joop.
So I had just hot air blown on me.
It was brutal.
But we pulled through.
We made it.
And we made a beeline for Highway 101.
We kind of bypassed San Francisco.
And we bypassed Los Angeles and went on a new route
that we'd never taken before and got to Highway 101, where
it was glorious.
It was like 60 degrees.
And it was nice to see the Pacific Ocean again.
That was really, that felt pretty special.
And we ended up winding our way up the coast
with a half-broken suspension system
when we got to our shop in Southern Oregon.
And they did discover the mistake
that they had made when they installed it the first time.
So they fixed it under warranty.
And while we were there, we had a couple of extra suspension
parts upgraded.
So in a way, Joops is better than ever now.
I wish I could have done that work before the road trip.
But we didn't need to get done.
So that's what it is.
And now we're back.
I've been reflecting on the meetups.
They were awesome.
Brent, you made it to both of them.
Wes, you made it to the Denver meetup.
I mean, I think they were both just fantastic.
The Denver meetup was one of our best ever, I think.
I think they were more than awesome.
It totally outpaced my expectations.
It was incredible to be surrounded by what?
It was like someone counted like 90 people in Denver
or something like that.
It was amazing.
Yeah, something like that.
Something close to 100.
I don't know exactly, because people were coming and going.
And people from all over the world, too,
which was incredible.
I didn't expect that at all.
I thought it was going to just be sort of local folks,
but all over the place.
You think you're already impressed with the audience,
and then something like Denver.
I know, really.
Salt Lake City was great.
The micro meetups were great.
But Denver was such a unique experience,
because there were so many people there.
And there was just such good conversations.
There is a nice thing about getting
to reconnect with people in real life
and having a common set of interests,
like open source and the shows.
So we have immediately a whole just incredible wealth
of things to talk about.
And that's really cool.
You don't generally just meet a stranger
and have two hours worth of conversation material.
It's a special experience.
I found that actually difficult, because I didn't get a chance
to talk to very many people, because there were so
many great conversations happening.
I got a list of 10 people that I was like, god, next time.
But I feel like it was exactly what we needed.
And then for me personally, we got to have a family road trip.
We got to have Brent come along for a bit.
Uncle Brent.
There was all those elements, right?
Uncle Brent came along for a little while,
and that was nice.
I got the badge.
Yeah, you did.
It was exactly what we needed.
And I think also it was nice for our team, the Jupiter
broadcasting team, to reconnect.
As many of us who could make it, we
got to hang out at the Airbnb and just chill for a bit
with each other and see each other in our pajamas,
all that kind of stuff, and our bed hair.
Yeah, the kind of just staying familiar and chatting
about non-show stuff that you don't always get to in a busy
show-filled week.
Right.
Yeah.
It was really our first chance to get together
since going independent a year ago,
because it's been lockdowns and stuff.
We haven't had a chance to really get together and kind
of acknowledge that here we are now as this meta team working
together still after a lot of things have changed.
And it's not all of us, and not all of us could make it,
but it's still a core of us.
And that was really nice to see.
Keeps the fire alive.
Yeah, so that was great.
But we're home, and I am packing up my home base this week
because we're moving out.
I don't know where to yet.
So I'm going to be figuring that out over the next few weeks.
But it's good to be back in the area.
It's so nice to be back in the studio.
I heard you were thinking Tucson.
Never, never, never.
All right, let's do a little matrix update.
IRC is great.
I mean, don't take this the wrong way.
I'm not taking away from your preferred chat platform.
How dare you?
I know, we still have a IRC chat room, really.
But I'm just getting more and more of a sense
that the free software community is adopting Matrix
at a faster and faster clip.
We've talked about Matrix before on the show,
and they recently had an announcement
about a transition they're making from communities
to spaces.
And I just wasn't really ready to talk about it on the show
because I have been unable to wrap my head around what it
really is.
And I went to the Matrix blog this morning
to try to reread their announcement.
And honestly, it just doesn't make any sense for me
because it sounds like you can have
spaces, which are essentially community pages that
can link to other channels.
And it's called a space.
And so you can have a space that is a Matrix spaces.
And then you can have multiple spaces,
like we could have a Linux unplugged space,
and we could have a self-hosted space,
and we could have a Jupiter broadcasting metaspace.
And those would all be spaces that link to spaces,
but they're individually called space.
And I find the entire thing absolutely confusing.
So we were chatting in a Luplug with Gamma about Matrix.
And I said, hold on, hold on, hold on.
Let's record it for the show.
So spoiler, this is actually happening on a Sunday,
this part, this recording.
Gamma, can you give me a high-level understanding
of what Matrix spaces are and when
I would want to create a space?
So Matrix spaces are basically glorified folders.
They let you group rooms, either that you own
or maybe that someone else owns.
Just collect them together into a single folder
in your element UI or another client's UI.
Wow.
OK.
So you can start, right?
It looks like there's both private and public spaces.
But you can kind of start with just making a private space
where you might collect, like if you're
in multiple communities in mod, you
could collect all your mod channels right there
in one space.
Or if you had different feedback for each of the shows
or something, you could have one feedback space, maybe.
Oh.
Yeah, so I thought maybe you should
try making a space for yourself.
I'll do it right now.
All right.
So I am on the beta version of Element to get this working.
The web UI.
Yeah, on the web UI.
But it's really easy to get going there.
And you can also go to, what is it, develop.element.io
if you want to check it out, or develop.element.io.
So first, I'm going to create a space.
So I can create a public space or a private space.
What do you think?
You can probably just start with a private one
since you don't know what you're doing.
I like your idea of making a feedback space.
So maybe I'll do feedback.
And this could be like the different feedback
channels we have.
Right.
Oh, this is OK.
I'm getting this.
And so it needs a description.
So I'll call it where people tend to yell at me.
OK.
Go ahead and put that in there.
Oh, I got a couple extra yells I need to put in that one.
Yell.
Don't forget the exclamation point.
Oh, yeah, you're right.
Yeah, there we go.
OK, so I create that.
And I can upload a picture too.
Looks like you can even upload a GIF.
Oh, my.
So who are you working with?
So make sure the right people have access to feedback.
Huh.
I can do just me, which is a private space.
I can do me and my teammates a private space for you
and your teammates.
I'm going to do that.
There's also some version maybe we end up
with a Jupiter broadcasting sort of back end matrix space
or set up or channels.
Yeah.
Oh, well, that seems like the way I'd want it is I'd want it
for everybody then.
So you're saying if I made it, oh, so I don't understand.
Isn't this going to be essentially server side
if I invite everybody to it?
Yeah, I suppose so.
All right, OK.
I don't know.
I've only made one space so far.
What's interesting, though, is I wanted to invite you.
But now it wants me to put in your email address.
But I don't know off the top of my head what email address.
I mean, I have a good guess.
But I don't know off the top of my head
what email address you used with your matrix account.
I don't either.
And I wouldn't know that for anybody, right?
I know their matrix username.
Is it asking for their email?
Yeah.
Looks like at the bottom there's an invite by username.
Oh, Wes is right.
Great.
Out at the bottom I can invite.
OK, great.
So I'm going to bring I can bring Wes in there.
Great.
I'll bring some of the other guys in.
That should probably be flipped.
It should be invite by user by default.
Yeah, but either way, I figured it out, right?
You're right.
I got caught up on it because I was looking at the default.
But you can go dig around.
So I just invited you.
OK.
And then I'll say skip for now, because otherwise I
can't move on.
Yep, I've got a feedback invitation.
I can reject or accept.
It tells me it's a private space.
So now I can create a room.
And then you can also add rooms.
So maybe we'll do like, what should we call it?
We'll call this general share room name random.
OK, fine.
Creating the room.
And now I can see suggested rooms.
We have general and random, and I can.
I still don't really understand what I'm looking at here.
So now it's created rooms for us that are part of this space.
So it's like subnested rooms is what we've just made.
So what is the difference between a community,
which is what it used to be in matrix, to now what
is called a space?
Like, are they essentially serving the same purpose
where it's a landing page that you can now
create for yourself or room admins can set up for the room?
Help me understand this, Gamma.
They're effectively the same.
The main reason why they went away from the old community
style was that the matrix devs found that they were
re-implementing the same types of rules,
the same types of administration, protocol,
et cetera, just redoing everything for communities
that they had already done for their rooms.
So what they decided was, you know what?
We're just going to trash communities,
and we'll just make a special type of room.
It just works like a normal room,
but it just has these special flags in it
that say, hey, I'm actually a folder and not a room.
Ah, and I see here, so I was looking in the room settings,
and by default here, it's set with anyone in a space
can find and join.
So spaces with access feedback.
So for the moment, it is just private.
It kind of works how you'd expect.
OK, I'm starting to get it now.
So it shows up in my sidebar as a separate instance, almost.
Like, I have our main chat here, and then I have a,
now I have a dedicated entry for this feedback space
that we created.
And I'm starting to see the benefit of that
is if you had people on multiple servers
that didn't normally coalesce in some of those rooms,
we could bring them into this space
and just have this set of rooms that they would see.
It's like cross-server collaboration space as well.
Yeah, and you can add spaces.
You can add rooms.
I think what's interesting to my mind,
reading through that, I can try to think of it
from the developer side, and it's
almost like you've exposed yourself
to all the underpinnings you would need to build something
like Discord right with Matrix.
And so to some extent, that shifts where that boundary is.
And I think part of the problem is you
can build your own private Discord server in a space.
Yeah, exactly.
And that means that we're kind of taking
on some of the admin layer of how,
because this is so flexible and it's not necessarily clear
as you've discovered what exactly you can do,
part of that is because you can build it
in so many different ways depending on what
you actually want to do.
Yeah, OK.
I'm starting to wrap my head around it.
So Gamma, I'm wondering if you have any opinions, at least
your personal opinion, on maybe how
Jupyter Broadcasting could utilize a matrix space
or multiple spaces, I suppose?
Certainly, you can take the lessons
you've learned from the self-hosted Discord server.
In Discord, you have various channels
which are used to discuss general chat, off-topic chat,
talk about the show itself.
The equivalent in Matrix is a room.
So you could create multiple rooms,
put them all within a Linux-unplugged space
if they're all related to that show,
and then put the Linux-unplugged space within this bigger
net of Jupyter Broadcasting.
That is a fantastic idea, because you
get all the benefits of it's nice with, say,
the self-hosted Discord.
The reason why I think it's been kind of successful
is because that kind of topic, self-hosting,
there's a ton of different channels
that seem appropriate for that particular topic.
And it would just sort of blast Matrix
to just create everything in one Jupyter Broadcasting area.
But creating individual spaces for the shows
kind of lets you get that benefit
while still taking advantage of everything
being connected, because it's part of a larger space.
I'm getting it.
I think the terminology is complicated.
And I think that matters more than we give it credit
in our technical community.
And I think that kind of complicated language
is a friction point that turns people off.
But our community doesn't seem to mind it.
And I see a lot of your laughing over there.
No, no, I mean, I can't argue with that.
It seems like, slowly, the paths through the UX and the UI
are improving and getting a refined layer at the top.
But you still see a lot of the plumbing.
Well, we touched on permissions with spaces a little bit
there, but, Gamma, it sounds like there
might be some future improvements making
this work a little bit smoother.
Yes, it's very true.
Currently, a room can either be public or private.
But private rooms mean that you have to get an invite
in order to join.
But if you're already a member of a space
and you want to join a private room inside of it,
there's actually a proposal that will just let that happen
for free without an invite.
Yeah, I can see how that might be useful.
Otherwise, you have to sort of manually add everyone
at the onboarding time or someone
has to handle making sure all those permissions transfer.
But if you are maintaining something
like a trusted space already and you just
want to have a bunch of private rooms in it,
that might work a lot better.
I would imagine there's probably going
to be a lot of areas of improvement
as more and more people adopt this feature.
It still seems like it's not really even fully rolled out
yet.
So we probably even really haven't seen the bulk of feedback
that the team's going to get once more people start using
Spaces.
Yes, and it seems like, as always,
the biggest problem right here is
a little bit of communication and a little bit of UX.
Well, Gamma, thank you for helping us do at least
a little bit of an update on what's going on with Matrix.
But there is a ton of stuff going on all the time.
And you've got a couple of resources
people could follow up on if they
want to dive deeper into the going ons with Matrix.
Of course.
I highly recommend checking out This Week in Matrix.
It's a feed of all the fun projects, all the neat stuff
that people are doing in Matrix, clients, servers, bridges,
bots, everything.
Also, there is Matrix Live, which
is a weekly show with the team on Matrix or Synapse
or Elements doing deep dives into various topics.
And finally, just a personal interest,
there is a channel that was mentioned
during one of the This Weeks in Matrix called Beyond Chat,
which talks about various uses for Matrix beyond chat.
Thank you to Gamma for taking a little bit of time
on his Sunday.
MiniMech was there with us, too.
And what were your first impressions
of setting up spaces, MiniMech?
Yeah, so after the conversation you had with Gamma,
I enabled in the element client I used,
I enabled the beta channel, which
allows me to have these spaces.
So that is pretty easy.
So Gamma was kindly linking his space in the Loblog channel.
So once you click on that, you get a pop-up window
that allows you to enable the beta channel
to have the spaces.
Once I did this, then it was like seeing is understanding.
So what you get is an additional panel with a home icon,
where you'll find all the rooms and private conversations
you had before.
And underneath, I got that Gamma channel or Gamma space,
how to say, where I got all the proposition that Gamma
put in in that space.
So for me, that element client is a little bit cluttered.
But with this, it was very interesting to see.
It was quite easy to navigate.
And then I started to understand that.
And then so I went further.
So I created my own space, private space.
And I put in all the JPMetrix channels in it.
And what I saw is that they disappear from the home channel.
And they appear in that private space
I did for Jupiter broadcasting, although there
is a feature that you can make them pop up again in the home.
And so I was able to group all these channels.
And that was really easy.
So I get all the notifications now.
I get them in the JB space.
And I can click on that and have all the channels grouped there.
That's nice when you're part of many communities.
Yeah, that's really true.
Just one thing I want to add, once you
start to play with these private channels
and once you decide to remove or delete that space again,
there's one thing you might give a little bit of attention to.
If you just leave the space, you get a pop-up.
And if you don't really make attention,
you're leaving all the rooms that are in that space.
So a good thing is you go to your private space,
and then you detach all the rooms
you had in your private space.
They will reappear in home.
And then in the end, you leave the space.
I see.
Otherwise.
That's good to know.
Yeah, it's good to know.
Otherwise, it might happen that all of a sudden,
you leave a room where you have administration or moderator
rights in, right?
I agree with you, though.
I felt like it did help organize it a little bit better.
And in a way, it offered some decluttering of the UI
and made it easier to sort out the different matrix
communities that I'm part of.
Yeah, I really agree with you.
So all in all, I can say it's a really good thing.
Even though it is more that you see on your client,
it makes it easier to navigate.
So I'm a big fan.
And I see I'm waiting for an official Jupyter broadcasting
space to have all my channels grouped.
Well, that brings us to the next topic.
So Kernel has volunteered to take
on the project of setting up JB spaces.
And I'm sure, Kernel, you must have a few ideas.
But we probably could stand for some suggestions, too.
Yeah, so if anyone has any input on how
they would like those spaces set up, architected,
any kind of feedback regarding JB spaces,
go ahead and just drop that into the LUP feedback channel
on Matrix.
Or I'm sure you can email the show.
And Chris will pass that along to me as well.
Yep, linuxunplugged.com slash contact for that.
And it's nice to see our Matrix community slowly and steadily
grow, even though we don't talk about it a ton on the show.
We do have our Matrix server info at linuxunplugged.com
slash Matrix if you would like to get on board.
And it's a nice way to get your toes wet with Matrix
if you haven't yet, because we have a very friendly community
that's focused around the content of these shows.
So it's a nice way to dip your toes.
So Kernel will be monitoring that LUP Lug chat room.
And that's one of the channels on our Matrix server
over there.
And thank you, Kernel, for doing that.
But speaking of Matrix and our server,
I just wanted to give a quick update.
Like I've mentioned before, we do run it on a dedicated Linode
box.
And we did that because the Synapse server is kind of new.
But Wes, you did a little sleuthing
and discovered that our Synapse server, that's
the server side of Matrix, is taking up a considerable chunk
of storage right now.
Yeah, it is.
You might think out of the gate that, oh,
is there just a lot of fun GIFs or other things posted
on the server?
I mean, there's a few.
But only six gigs was Synapse user data,
media files, both for local and remote stuff in the cache.
That's not bad.
The main bit of disk space use was about 56 gigs worth
in Synapse's Postgres database.
Oh, 56 gigs worth of database, huh?
Jeez.
What is that, just like chat log and stuff?
Well, you tell me.
I'll give you the schema.
No, I mean, there's a lot of stuff
to keep track of in Matrix.
And because it's federated, we get a lot of information,
some of the biggest sort of lists of state groups
and the state group state is one of the tables in there
that has a lot of that data.
A lot of the rows in there are for the main matrix.org home
server, for instance.
There are some tools out there that I could find to help,
like a Rust tool, in fact, that can help you compress
some of that data down and make it a little simpler
to navigate through.
But that's not exactly quick.
So I've done it for a couple of the tables.
Really, we probably need to script it up
to run against the whole database
or the majority of the tables taking up the most space
to get there.
Really, the point of this is that, you know,
if you're setting up synapse with a fair number of users,
you're going to have to take care of it.
Yeah, no kidding.
Yeah, as we've discovered, it's a serious thing
to run it in production.
It's no joke at all.
And so we've thought about, like,
what can we do to address this growing problem?
And we did, honestly, you guys know us,
we toyed around with the idea of just moving it to like an S3
Fuse file system and just throw it at object storage.
But neither one of us have seen a lot of success stories
about Postgres running its database off of S3 object
storage on a Fuse file system.
So we weren't like really super ready to jump on that one yet.
Maybe if we hear good things.
So what we decided to do was just
go the route of adding a larger disk to the Linode.
We just gave it more disk.
Yeah, really saved by Linode and making it easy for us
to do that, right?
So yeah, kind of just moved over the volume
from where it was on the original disk
and now Postgres is happily running with more stuff
to spare, which will make it easier as we go to try
to compress the database a little bit more,
do some maintenance on it as well.
And I should just say, I'm no matrix admin,
no synapse admin for sure, we're learning as we're going.
And so if there's some essential tips out there
that we've missed for how to keep our database clean
and tidy, we're all ears.
Yeah, let us know.
I think it makes sense to put that database though
on its own disk so it's not taking up space
that the root file system is also sharing.
It's better to have that moved over.
And it also gave us a chance to do all the system updates
and update synapse to the latest version
and get all of that kind of maintenance stuff done.
We're gonna vacuum the database a little bit.
You gotta keep it tidy, re-index things here and there.
And I will say, I mean, there are some,
it does take up some energy,
especially with more users on there.
It does do some work and use Postgres to the max.
But other than that, it really isn't a big deal to run.
I've been very pleased.
All of our updates have been pretty much seamless.
We just go and find the latest release
on their GitHub channel, pull down the new image for that.
And it's been perfect.
Yeah, next week we're gonna say some bad things
about NetData, but this week I'll add
from a positive thing, I'm foreshadowing,
but for this week, I'm gonna say,
NetData has been a nice tool here.
Linode has some built-in alerts, which are nice.
And then NetData has some built-in alerts,
which have been nice to let us know
when we're using a lot of memory,
a synapse is known to do,
or when we've needed to address these issues
and stay on top of it.
And so all in all, even though it's a little memory hungry,
it even was a little memory leaky sometimes,
and it's been very disc hungry.
It's been fairly reliable, I think,
just by throwing some of these tools at it.
And like Wes said, neither one of us are synapse admins,
but we've managed to muddle our way through so far.
And we do love your pro tips.
But you know what, Wes,
speaking of doing a little bit of vacuuming,
let's do some housekeeping here in the show.
I think it's time to clean up a little bit.
First of all, I wanna say thank you to all of our members
over at unpluggedcore.com.
I wanted to mention there is a live stream feed option
for our members.
And some weeks, like some recent weeks,
I felt like some of our best content has been
on the live stream before we've hit record.
Like this episode, I feel like we blew
two really solid pre-shows.
And we haven't even done the post-show yet.
So there's basically an entire additional show's
worth of content for our members at unpluggedcore.com.
We also have the limited ad feed over there.
But in that, you get a tighter version of the show.
So I like to point people to the limited ad feed
if you've got limited time.
Just a little tighter show.
You know, you still get all of Joe's edits
and touch-ups to audio.
Just a tighter production.
The live feed version's like the opposite of that.
It's all of our screw-ups, everything we cut, and more.
And there are plenty.
So you can get that and hear it all
just by going to unpluggedcore.com and becoming a member.
And then you get the warm fuzzies for supporting the show.
You also heard us mention it earlier,
but the Luplug rolls every Sunday.
You can get in our mumble room, hang out in the lobby,
and chat with like-minded folks,
and get details at linuxunplugged.com slash mumble.
It's noon Pacific, and we have the details
at jupiterbroadcasting.com slash calendar
in your local time zone.
So you can go over there and get it converted
and then join the Luplug and hang out.
Wes and I are gonna try to pop in there
before land from time to time.
We can't do it every week, but we are gonna try.
Just because it's a lot of fun, honestly.
I mean, if we didn't have a show to record,
that's what we would be doing.
Absolutely.
That's well put.
And it's nice to chat with people and share ideas
and see what people are thinking on and working on.
And that's all every Sunday.
linuxunplugged.com slash mumble for that.
And then once you get it set up,
you can also join the show on Tuesdays when we're live.
So think about that.
Become an internet star.
Before we get out of here this week,
I do have a different kind of pick.
I decided to put this in the pick segment
and not an actual review,
because I only got half a day with this particular pick.
And so I felt like it's more of a,
hey, check this out, but not like a review.
It's got, hey, this has potential,
but I appreciate you sharing the limitations
of what you're about to say and try to convince us of.
Every now and then, Prospector Chris comes out.
Back in my day, there was something called compiz.
And I loved compiz and barrel
and having my windows burn up and-
Wobble to the max.
Wobble to the max, the desktop cube.
I could turn a lot of that on these days in Plasma,
but I don't.
And there was a feel to using compiz, a smoothness,
just this total kind of like
always felt responsive kind of aspect.
And so I wanted to point you over to a project
that's recapturing a lot of that.
It's called Wayfire.
It's a compositor based on WL roots.
And its aim is to create a customizable, extensible,
and lightweight environment without sacrificing appearance.
Oh.
And really it's inspired by compiz.
And it has a lot of that kind of stuff,
especially if you go the easy route like I did,
and you go get Garuda Linux Wayfire edition.
We talked about Garuda Linux recently.
Well, one of the versions they have
is one that uses Wayfire right out of the box.
And they turn it up to 11 as Garuda is to do.
And so like you've got the brain windows
and the spinning desktop cube,
just all that fun stuff.
It's just a lot of fun to play around for a day.
I don't know if you'd want to live there,
but it's a great place to visit.
And so you could go grab Wayfire,
or if you just want to take the easy route,
go get the Garuda Wayfire edition,
which we'll have linked in the show notes.
Dang it, I'm going to have to install this.
Yeah, it just feels like a high performance
desktop environment.
And I think to myself, you know, when this hits 1.0,
maybe I should come real estate shopping.
If you do the Twitter thing,
you can follow this show at Linux Unplugged.
The whole network is at Jupiter Signal.
And of course we have an entire fantastic podcast network
at Jupiterbroadcasting.com with shows like Self Hosted,
Linux Action News, Coder Radio, This Here Program,
and who knows, maybe even more.
And make sure you're catching Linux Action News
because there's stuff going on in the world of Linux
every single week.
And Wes and I break it down for you.
And we put it right there in nice concise packaging
in that Linux Action show.
And then last but not least, I always like to say,
please do consider joining us live
if you ever got a Tuesday where you can stop by
around 12 p.m. Pacific, 3 p.m. Eastern.
See you next week.
Same bat time, same bat station.
You don't always have to make it to the mumble.
We got a live stream going.
Some people just sit back and watch the stream.
They don't even get in the chat room.
It happens.
It happens.
But of course we do have that mumble room going.
And you're always welcome to participate
and get your voice on any of the topics right here
in the show.
And to everyone who downloads,
we just want to say thank you very much.
We appreciate you.
And a big shout out to our members.
Thank you so much for making the show possible.
We really do appreciate everyone's support.
And thanks so much for tuning into this week's episode
of the Unplugged program.
Links to everything we talked about today
at linuxunplugged.com slash 424.
And we'll see you right back here next Tuesday.
And we'll see you right back here next Tuesday.
Thank you so much for tuning into Unplugged.
All right, Wes Payne, step up to the plate.
Here I am.
It's another round of can we update our server live on the air
with our crazy arch update contest.
I think these clips have gone to your head.
All right, Wes Payne.
How are we doing?
I know we've got kernel updates.
We've got CFS updates.
This is a big one.
We are through, we've got a new LTS kernel installed.
And we just finished the DKMS rebuild for CFS 2.1.0.
I was secretly hoping you'd already got it installed and rebooted.
I wanted to wait to reboot.
You're saving it for the show.
Plus I want you to be to take the blame when I say can I hit reboot?
The reboot is the worst part of this.
You know, I was just hoping it was over with.
All right, I'm getting my ping set up.
Are you ready to reboot?
Yeah.
Okay.
Let's do it.
It's been closed by remote host.
So long, pigness.
So long.
It's all right.
It's going to be fine.
It's still pinging.
It's still pinging.
Reboot already.
Come on, machine.
Still going.
Huh.
You know, it's got to stop all the containers.
Yeah.
Mm-hmm.
Oh, that one took a...
It's taking a little bit longer.
It's slightly going up in response time.
Oh.
Is that the last of it?
I think so.
Uh-oh.
Oh, no.
Okay, here we go.
Now this is where we just wait patiently and I don't panic.
That's right.
Who has some good news for Chris?
Everybody go to jbtitles.com.
Get us a good title just in case this doesn't work because we just got this damn server
working again.
What are we doing, Wes?
Why do we even update at all?
I mean, I know why.
It's our commitment that we're going to do this rolling thing in public.
And if it goes wrong, it goes wrong in front of everybody and we own it.
Behind the scenes, he's begging me to just let him install Stream on there, but I say
no.
We promise the audience.
Actually, next week, we are going to let you vote on our future server OS.
So do tune in to next week's episode because we're going to have a poll on what OS we should
use on our next server.
But that's not yet.
Why would you use anything besides Fedora server though?
It's true, right?
I mean, you never know.
That thing has been rock solid for me for years.
It's insane how smooth their update path is for between operating system releases.
It's still down.
But then we'd never be able to talk about it on the show if it's too good.
That's the trick.
Yeah.
You got to have every now and then like the genuine tension here is this really could
go sideways and we really do use this in production.
So it really creates a genuine tension.
And if it never goes sideways, there's no tension.
Oh, God.
And you know, this thing's been so unreliable recently, too.
It's just like, I really feel like we're on the dice.
The machine is like a decade and a half old.
I know.
We're really trying to get our money out of it.
I think you're way past getting your money back on this.
Oh, I think we got a solid plan.
We're going to we're going to unveil the plan next week and we got some good news in that
department and we'll have the poll.
But I just need this server to make it a few more weeks because we're not there yet.
Is this when we're going to finally do open SUSE on there?
I mean, you could go vote when I've released the poll.
It's not not an option.
I will.
I will reveal this.
That is an option on the poll.
I will reveal.
I won't say what other distros, but that is on there.
So we'll see how people vote.
This is at the point where I I legitimately start to think it's not coming back.
I know.
It's always hard because it takes it takes a long time.
But you think you've waited.
You know what I'm realizing?
I'm realizing right now this would be another use case for an IPK.
Yeah.
If I could pull it up and see that it was doing something or a mic wired out in the
garage.
Let's hear the fans spinning up.
Oh, oh, I've got pings.
Oh, I do, too.
Oh, I do, too.
OK.
Now, the next step for me is going to be, yeah, does the wire guard tunnel come back
up?
Right.
Now, I've got a different back door.
That's how I'm pinging it.
But right.
Thanks, Nebula.
My applications are not up at the moment.
So we don't have we don't have container applications yet, which is kind of a bad sign because those
usually come up pretty quick.
Oh.
Oh.
Oh.
Oh.
I don't think this is good.
Just give it a minute.
Come on.
Yeah, just wait.
OK, I'm going to have to say, are you S.S.H.ing in, Wes?
Yeah, let's get out.
Wait, Wes is now panicking.
Oh, hey, I got S.S.H.
I got S.S.H.
That means wire guard's up.
OK, I do, too.
Yeah, I do, too.
But wire guard is in the container app.
OK, I see Docker firing up.
Oh, yeah.
Is your storage up?
OK.
Hold on.
I think I think we have the containers can start up without storage.
True.
Yes.
We do have storage.
All we're waiting for now is for an application to start and actually load.
Oh, shoot, Wes, look at that.
Very nice, sir.
It's done.
Another round of successful Arch updates.
We have a big server update next week, so be sure to tune in for that.
