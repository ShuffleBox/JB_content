WEBVTT

00:00.000 --> 00:02.000
Chris, we have Rust news.

00:02.000 --> 00:11.680
What is it, Wes?

00:11.680 --> 00:18.020
The core-utils-rewrite-in-rust project is now available in Debian, and it's good enough

00:18.020 --> 00:24.520
to boot Debian with GNOME, install the top 1000 packages, build Firefox, LLVM, and Clang,

00:24.520 --> 00:27.840
and yes, even the Linux kernel.

00:27.840 --> 00:30.800
You know, Wes, I think show's over, you know?

00:30.800 --> 00:39.600
Show's over, man.

00:39.600 --> 00:42.360
Hello friends, and welcome into your weekly Linux talk show.

00:42.360 --> 00:43.360
My name is Chris.

00:43.360 --> 00:44.360
My name is Wes.

00:44.360 --> 00:45.360
Hello, Wes.

00:45.360 --> 00:49.340
Hey, this episode is brought to you by the all-new CloudGuru, the leader in learning

00:49.340 --> 00:53.000
for cloud, Linux, and other modern tech skills, hundreds of courses, thousands of hands-on

00:53.000 --> 00:54.000
labs.

00:54.000 --> 00:57.640
Get certified, get hired, get learning at CloudGuru.com.

00:57.640 --> 01:02.240
Until this episode, no, we're not actually here to talk about Rust.

01:02.240 --> 01:05.720
We have a very special out-of-this-world episode.

01:05.720 --> 01:12.000
Tim Kenham is the Mars Helicopter Operations Lead at JPL, and he shares with us on the

01:12.000 --> 01:14.980
show today Linux's origins at JPL.

01:14.980 --> 01:19.880
He was one of its lead advocates at getting it in the institution at the Jet Propulsion

01:19.880 --> 01:21.280
Lab.

01:21.280 --> 01:28.440
But how it then went from this risky kind of chance OS to running on multiple boxes

01:28.440 --> 01:29.760
on Mars.

01:29.760 --> 01:33.400
That's something that hasn't been super clear, but there's lots of new and good information

01:33.400 --> 01:36.020
in this chat we're about to have with Tim.

01:36.020 --> 01:41.040
And he also tells us about some of the challenges that Linux still is facing before it's ready

01:41.040 --> 01:47.520
for like the really super critical computer stuff, like some of the control computers

01:47.520 --> 01:49.360
that are in the rover on there.

01:49.360 --> 01:50.560
But we're going to get to that in a little bit.

01:50.560 --> 01:51.800
We'll have some community news.

01:51.800 --> 01:55.840
We got a couple of really great classic picks and a bit more.

01:55.840 --> 02:00.340
So to help us massage all of that into something that's listenable, we're bringing in our

02:00.340 --> 02:02.080
crack team of experts.

02:02.080 --> 02:06.320
It's our virtual lug, time-appropriate greetings, Mumble Room.

02:06.320 --> 02:08.880
Hi.

02:08.880 --> 02:10.040
Good to see all of you.

02:10.040 --> 02:12.480
Thanks for making it here on a Tuesday.

02:12.480 --> 02:14.440
It's always fun hanging out with you guys.

02:14.440 --> 02:17.640
We've been going for a little bit on the live stream and having a good time.

02:17.640 --> 02:22.200
And when I got on the live stream, really kind of about a half hour before I normally

02:22.200 --> 02:27.040
do today, it was really in the pursuit of serving the show.

02:27.040 --> 02:32.760
It was really because of my responsibility and duties to the show that I had to play

02:32.760 --> 02:33.760
video games.

02:33.760 --> 02:36.400
And this is pretty great, actually.

02:36.400 --> 02:38.080
Probably most of you have seen this.

02:38.080 --> 02:40.920
If not, well, you're going to hear about it now from me.

02:40.920 --> 02:47.840
The Steam Link app is now available as a standalone thin client app for Linux boxes, and it's

02:47.840 --> 02:52.800
available as a flat hub, a flat pack, or it's also linked in our show notes.

02:52.800 --> 02:54.820
You can just get a tar of it.

02:54.820 --> 03:01.000
And it is a minimal application that was brought together by the folks at Collabra and Valve

03:01.000 --> 03:05.320
to make it possible for essentially any kind of low end machine that has a fast enough

03:05.320 --> 03:10.300
network connection to stream games from another system on the land.

03:10.300 --> 03:11.940
Steam Link, we know about that.

03:11.940 --> 03:12.940
That's been around for a while.

03:12.940 --> 03:14.960
But now this is built into a little app.

03:14.960 --> 03:15.960
Hmm.

03:15.960 --> 03:20.360
So is the news here then that you don't have to install Steam and get that all set up to

03:20.360 --> 03:21.400
use this feature?

03:21.400 --> 03:22.400
You got it.

03:22.400 --> 03:23.400
And you could have it.

03:23.400 --> 03:25.200
So you could launch it on your laptop.

03:25.200 --> 03:27.920
You don't even have to have a Steam account.

03:27.920 --> 03:31.000
And if my machine upstairs was logged in and ready to go, you could stream them right from

03:31.000 --> 03:32.440
my computer.

03:32.440 --> 03:35.800
And you really don't even have to have anything more than an Intel graphics card to make it

03:35.800 --> 03:36.800
possible.

03:36.800 --> 03:37.800
I have two minds here.

03:37.800 --> 03:42.400
As they note in the announcement, special thanks to Collabra for helping make this possible.

03:42.400 --> 03:44.200
And they just do so much good stuff.

03:44.200 --> 03:47.800
The other part that's funny about this, though, is what took so long?

03:47.800 --> 03:52.040
I mean, wasn't the Steam Link hardware running Linux and presumably running some of this

03:52.040 --> 03:53.040
already?

03:53.040 --> 03:54.040
I had that thought, too.

03:54.040 --> 03:55.720
I did wonder.

03:55.720 --> 03:59.440
It must have just been there just wasn't resources at Valve to make it happen.

03:59.440 --> 04:02.400
And so they, in a sense, outsourced it to Collabra.

04:02.400 --> 04:03.880
And it's good.

04:03.880 --> 04:06.240
It works really well.

04:06.240 --> 04:09.600
It detected my Xbox compatible controller.

04:09.600 --> 04:13.920
It automatically detected my workstation upstairs running Steam.

04:13.920 --> 04:16.000
It detected that there was plenty of bandwidth.

04:16.000 --> 04:21.920
And then once you connect, you're put into Steam Big Picture mode, which Valve has put

04:21.920 --> 04:24.000
a crap ton of work into.

04:24.000 --> 04:29.560
There's a lot of information that is in the Steam client that Big Picture actually manages

04:29.560 --> 04:34.080
to surface to you in a pretty reasonable way, which only serves to make the remote Steam

04:34.080 --> 04:35.880
Link experience even better.

04:35.880 --> 04:40.880
An example is I could launch a game and Big Picture mode had a nice way to tell me that

04:40.880 --> 04:45.000
the Vulkan shaders were being pre-rendered and that I was going to wait a bit.

04:45.000 --> 04:47.280
And then it detects that this is going to take even longer.

04:47.280 --> 04:48.280
Would you like to just skip it?

04:48.280 --> 04:52.540
And it presents all that information in a way that doesn't break the Big Picture experience.

04:52.540 --> 04:55.660
That's impressive because it's already kind of hacky and annoying just on the regular

04:55.660 --> 05:00.480
Linux desktop so that it works at all in Big Picture on Linux is nice.

05:00.480 --> 05:02.200
It's smoother in Big Picture for sure.

05:02.200 --> 05:03.200
It really is.

05:03.200 --> 05:04.200
No doubt about it.

05:04.200 --> 05:07.520
Like that's the experience they've put the more recent effort into.

05:07.520 --> 05:11.400
So it will detect all of the Steam machines on your LAN.

05:11.400 --> 05:14.480
And then it will detect if you have a controller that's compatible with Steam.

05:14.480 --> 05:17.720
And then it detects if your connection to those machines is fast enough.

05:17.720 --> 05:22.160
It gives you like these three green check marks or not, depending.

05:22.160 --> 05:25.840
And then when you pass those three tests, you just hit start playing.

05:25.840 --> 05:28.520
It brings up the machine's remote library.

05:28.520 --> 05:31.800
You see every game that's on that computer and you can fire them off.

05:31.800 --> 05:34.960
And including Proton games, I launched Star Trek Online.

05:34.960 --> 05:37.720
I played Batman Arkham City.

05:37.720 --> 05:41.120
I played a little Left 4 Dead.

05:41.120 --> 05:43.040
And I played Hot Shot Racing.

05:43.040 --> 05:45.560
And a handful of those are actually just Windows games.

05:45.560 --> 05:46.560
But they just work beautifully.

05:46.560 --> 05:53.280
I find it fascinating that there's a FFmpeg bundled in here under their Steam link folder.

05:53.280 --> 05:55.800
Yeah, I think it's right.

05:55.800 --> 06:03.080
It's got to be they're just relaying the input events and it's streaming as fast as it can,

06:03.080 --> 06:04.840
an H.264 stream.

06:04.840 --> 06:11.320
But it clearly has some allowance for bandwidth because in every game I tried, I did not spot

06:11.320 --> 06:13.320
any compression artifacts.

06:13.320 --> 06:16.040
And I have an eye for that kind of stuff.

06:16.040 --> 06:19.600
And I didn't see any compression issues at all.

06:19.600 --> 06:23.440
Really what I saw is that I need a new computer upstairs because my machine upstairs, it's

06:23.440 --> 06:26.080
just a dog.

06:26.080 --> 06:27.240
It's pretty great, Wes.

06:27.240 --> 06:32.200
And you combine that with the news that Proton has enabled 7,000 Windows games now to run

06:32.200 --> 06:35.880
on Linux of various quality, to be honest with you.

06:35.880 --> 06:36.880
It's pretty remarkable.

06:36.880 --> 06:41.880
Well, and that Proton keeps getting updates, you know, like there's a new version of their

06:41.880 --> 06:49.000
Soldier Linux runtime container, also Proton Experimental on top of regular Proton releases.

06:49.000 --> 06:54.520
It really, it's hard to remember the old days sometimes because it's so good right now,

06:54.520 --> 06:56.560
even when it's of mixed quality.

06:56.560 --> 07:00.760
But it's just, it's so fascinating to me that some of my, you know, the friends, acquaintances

07:00.760 --> 07:04.520
who I occasionally play games with who are on the Mac and it used to be like, there were

07:04.520 --> 07:07.400
a lot of games they could play, I couldn't play.

07:07.400 --> 07:10.760
And now that is just flip flopped entirely.

07:10.760 --> 07:12.040
Yes.

07:12.040 --> 07:13.080
Great point.

07:13.080 --> 07:17.680
You don't buy a Mac to play PC games anymore at all.

07:17.680 --> 07:25.600
You can play iOS games, but yeah, you know, I want to put it in what I feel like is a

07:25.600 --> 07:26.600
fair context.

07:26.600 --> 07:34.760
I feel like Proton is undoubtedly a win, but I feel like out of those 7,000 titles, the

07:34.760 --> 07:38.440
reality is only a small handful still are Platinum.

07:38.440 --> 07:43.960
And that number isn't really changing a lot in terms of Proton support level Platinum.

07:43.960 --> 07:48.240
And I have definitely had mixed results more than I would like.

07:48.240 --> 07:53.720
So I want to say it's Proton for me has worked out to be an 80% solution.

07:53.720 --> 07:57.720
I am not complaining about that, but I'm just also trying to be realistic.

07:57.720 --> 08:01.240
It has not, even games like Destiny is a great example.

08:01.240 --> 08:06.720
Destiny 2 works for a bit, then it's broken, then it works for a bit, now it's broken again.

08:06.720 --> 08:11.000
I was about to say that, you know, games are often a moving target as is Proton.

08:11.000 --> 08:14.320
So I think it's one of these things that if you play a little bit of the older set of

08:14.320 --> 08:16.240
games, you're going to have a good time.

08:16.240 --> 08:20.880
And if you're on the bleeding edge or AAA worlds, okay, it might be a little dicier.

08:20.880 --> 08:23.300
What's really nice, though, is you bring all this together.

08:23.300 --> 08:26.540
You can Steam link to like I was connecting to a Linux box upstairs.

08:26.540 --> 08:30.360
But if you had a Windows 10 machine on your LAN, you could use that and stream that to

08:30.360 --> 08:32.080
all of your Linux computers.

08:32.080 --> 08:33.080
That's kind of nice.

08:33.080 --> 08:34.080
Right.

08:34.080 --> 08:37.480
You can hide that away in the basement, pretend it doesn't exist and just present a nice,

08:37.480 --> 08:39.160
you know, Linux face on everything.

08:39.160 --> 08:46.680
I had a failure state where I had alt tabbed out of the Steam link experience to check

08:46.680 --> 08:49.120
something on my local machine.

08:49.120 --> 08:54.900
And the alt tab was grabbed by the Steam link and my local machine.

08:54.900 --> 08:59.520
And so it alt tabbed out of the game and over to my console.

08:59.520 --> 09:03.260
And so when I went back to the Steam link experience, I was actually looking at another

09:03.260 --> 09:07.260
window on a separate monitor on my computer.

09:07.260 --> 09:10.960
And I know we've had people write in and they've told us that you can actually break out of

09:10.960 --> 09:14.520
the game and you can actually just completely stream the desktop.

09:14.520 --> 09:17.480
So I began using the machine through Steam link.

09:17.480 --> 09:21.920
Because I have the terminal open, I just launched other stuff and I started messing around with

09:21.920 --> 09:25.760
the computer and I could manipulate all the windows on that monitor that I was connected

09:25.760 --> 09:29.720
to from my computer down here through Steam link.

09:29.720 --> 09:32.120
Just found yourself a brand new remote desktop solution.

09:32.120 --> 09:36.480
Yes, that's what I'm saying is there could be some ways to have some fun with that.

09:36.480 --> 09:41.000
So if you know, if you know a way that I could maybe do that on a Chromebook or something

09:41.000 --> 09:44.880
like that, let me know linuxunplugged.com slash contact.

09:44.880 --> 09:48.760
Because I saw that peek behind the curtain and I realized this could be a killer way

09:48.760 --> 09:57.280
to just remotely stream any application from a machine to another machine and get GPU acceleration.

09:57.280 --> 10:01.800
That could be, that could be magic.

10:01.800 --> 10:08.000
Linode.com slash unplugged, go there to get a $100 60 day credit and of course you support

10:08.000 --> 10:11.560
the show linode.com slash unplugged.

10:11.560 --> 10:14.040
Linode's where we host everything.

10:14.040 --> 10:18.880
We had a challenge on the show last week where we asked the chat room to go after a machine

10:18.880 --> 10:22.320
and we built that on Linode because we knew we could take snapshots, we knew we could

10:22.320 --> 10:24.120
destroy it if we needed.

10:24.120 --> 10:29.080
And one of the methods that we took with that is we built a test system first to see if

10:29.080 --> 10:31.800
it was possible on Linode and then we cloned it.

10:31.800 --> 10:36.400
And the clone was actually what we put out into the public and Wes and I had a control

10:36.400 --> 10:39.880
test machine that we still had up and running that we could have flipped public if we needed

10:39.880 --> 10:43.040
to and it's really simple to do all of this with Linode.

10:43.040 --> 10:48.460
And it makes, it makes approaching upgrades and managing your servers feel a lot less

10:48.460 --> 10:53.920
risky when you can, you can get a automatic snapshot that is clearly labeled and easy

10:53.920 --> 10:57.000
to understand in the dashboard to tell you exactly where you're at and you could just

10:57.000 --> 11:00.760
run one immediately if you need or even clone the box.

11:00.760 --> 11:06.000
Their cloud manager is top notch and they try to make it approachable to everybody and

11:06.000 --> 11:11.300
they do a great job at that but what I really have appreciated is usually a click or two

11:11.300 --> 11:15.960
away I can actually get like the commands I need to run on the Linux box and get even

11:15.960 --> 11:17.320
deeper.

11:17.320 --> 11:21.000
They really don't hide that stuff from you and if you're a long time Linux user you're

11:21.000 --> 11:25.000
going to appreciate that and it's really impressive how they've managed to strike that balance

11:25.000 --> 11:28.240
and it's not just by accident.

11:28.240 --> 11:33.120
They didn't just figure it out overnight, Linode's been around since 2003 and they've

11:33.120 --> 11:37.440
really focused in on doing this type of stuff really good.

11:37.440 --> 11:41.320
I was telling the story on Linux Action News and I'm going to tell you here because this

11:41.320 --> 11:45.440
is, it's one of the examples that I like to cite about Linode when people ask me well

11:45.440 --> 11:49.040
you know I use it, I use another provider right now I'm not really sure why I switch

11:49.040 --> 11:53.840
I mean I love that $100 credit but you know what other reason and the thing I hear from

11:53.840 --> 11:58.360
people who switch is it to me they say it feels like the networking is faster especially

11:58.360 --> 12:03.160
between the the data center to data center networking like Linode's got that dialed in

12:03.160 --> 12:06.960
more than other providers do and people oh yeah you'll see it in our telegram oh I agree

12:06.960 --> 12:09.040
yeah yeah well I'll tell you why.

12:09.040 --> 12:15.760
There's actually a reason for that in 2016 Linode took their entire networking infrastructure

12:15.760 --> 12:17.800
into their own hands.

12:17.800 --> 12:21.520
They wanted to guarantee low latency and a certain level of performance between their

12:21.520 --> 12:28.040
data centers that they just couldn't guarantee unless they became their own ISP and in 2016

12:28.040 --> 12:30.560
they did just that.

12:30.560 --> 12:31.920
How about that?

12:31.920 --> 12:37.080
And they set the foundation to tackle all kinds of designs for the future and to really

12:37.080 --> 12:40.960
strengthen the connections between their data centers and something else and this is on

12:40.960 --> 12:44.800
their blog I'll put a link to this in the show notes this is what they say on there

12:44.800 --> 12:49.580
as we worked on expanding our global network three things were non-negotiable maintaining

12:49.580 --> 12:55.040
vendor diversity balancing flexibility and control and this is my favorite one the third

12:55.040 --> 13:02.720
one and incorporating Linux at the network level as much as possible and then in parentheses

13:02.720 --> 13:09.360
since we're Linode we're very good at Linux and they are and it's that kind of stuff because

13:09.360 --> 13:13.920
they've been around so long they've managed to tackle these hard problems and solve them

13:13.920 --> 13:20.040
and negotiate the deals and secure it to the point where they became their own ISP and

13:20.040 --> 13:24.640
now they have 11 data centers worldwide 40 gigabit connections coming into the hypervisor

13:24.640 --> 13:31.000
super fast data of SSDs and boxes from five dollars a month to massive compute machines

13:31.000 --> 13:37.200
and they have object storage available cloud firewalls load balancers terraform support

13:37.200 --> 13:42.960
and a lot more so go check it out see what you can do with that one hundred dollars there's

13:42.960 --> 13:49.700
a lot Linode.com slash unplugged go there support the show and play with any of these

13:49.700 --> 13:53.000
things let me know what you think about it I love hearing how it goes for you guys it's

13:53.000 --> 13:56.600
great way to find out what you're using Linode for and then every now and then it makes its

13:56.600 --> 14:01.840
way into a read on the show so let's get started at Linode.com slash unplugged and then let

14:01.840 --> 14:06.400
me know how you're using Linode at Chris Lass on Twitter or the contact form either way

14:06.400 --> 14:13.920
would be great Linode.com slash unplugged before we get out of this world and start

14:13.920 --> 14:20.720
talking about Linux on Mars just a couple of notes in the housekeeping I want to mention

14:20.720 --> 14:26.900
again our telegram group because as things eventually one day return to normal any kind

14:26.900 --> 14:32.640
of activities we end up doing like meetups or events whenever that does happen that telegrams

14:32.640 --> 14:36.320
always one of the first places that we're coordinating Jupiter broadcasting dot com slash

14:36.320 --> 14:41.480
telegram the conversation just continues often on Wednesday mornings you'll see people discussing

14:41.480 --> 14:44.540
what we talked about here in the show and if you want to get in on that action that's

14:44.540 --> 14:50.620
where it's at the lup lug remains strong and consistent our lug gets together every single

14:50.620 --> 14:54.880
Sunday it's not a fluke it's something you can rely on and something you can participate

14:54.880 --> 14:59.800
in it's a really nice experience it's on our mumble server just there in the lobby and

14:59.800 --> 15:05.400
we have information on how to get into mumble at Linux unplugged dot com slash mumble and

15:05.400 --> 15:09.840
I think that's really everything we have for the housekeeping West that seems shorter than

15:09.840 --> 15:15.080
normal I feel like we're missing a plug here normally we make a big old mess but not this

15:15.080 --> 15:20.480
week although if you aren't already checking out the coder happy hour on Mondays live you

15:20.480 --> 15:25.120
probably should be it's really been a highlight of my weeks I'm still usually stuck at work

15:25.120 --> 15:30.040
but it's the start of ending my day and I get to unwind with you and Mike oh shucks

15:30.040 --> 15:35.440
thanks thanks yeah we do that we do that at 5 p.m. Pacific 8 p.m. Eastern at JB life dot

15:35.440 --> 15:43.240
TV that is the coder happy hour and that is our housekeeping so if it just wasn't perfect

15:43.240 --> 15:49.640
since we got together last NASA's perseverance rover has driven on the Mars terrain for the

15:49.640 --> 15:55.080
first time it's it's not a lot but it's significant it matters yeah this first

15:55.080 --> 16:03.640
little adventure was only 6.5 meters but once it starts pursuing its main science goals regular

16:03.640 --> 16:10.680
commutes extending 200 meters that's like 600 some feet or more are expected the part that

16:10.680 --> 16:16.040
really stuck out to me though was that the mobility system is not the only thing getting

16:16.040 --> 16:22.200
test-drive right now because back at the end of February they actually upgraded perseverance or

16:22.200 --> 16:28.200
Percy for short they upgraded some of the software running replacing the computer program that helped

16:28.200 --> 16:32.440
actually get the landing done with the program that will control it while they investigate

16:32.440 --> 16:38.200
things on the planet and if that isn't the most stressful firmware upgrade ever I mean come on

16:38.200 --> 16:47.120
hey right no kidding Tim gets into that system a little bit and it's remarkable in a way that

16:47.120 --> 16:52.880
shocked me and he also gets into the multiple Linux systems and all of that so Tim is the

16:52.880 --> 16:58.960
Mars helicopter operations lead at NASA's Jet Propulsion Laboratory and his team specifically

16:58.960 --> 17:05.000
is responsible for the Linux powered helicopter that is in perseverance's belly but we were just

17:05.000 --> 17:08.760
super excited to have the opportunity to chat with Tim because his team has got a you know this is

17:08.760 --> 17:13.920
it's a historic moment for them and to get an opportunity to talk to one of the individuals

17:13.920 --> 17:18.840
responsible for getting Linux into this organization well that was special

17:18.840 --> 17:32.040
Tim welcome to the show and thank you so much for joining us we've been geeking out all morning

17:32.040 --> 17:36.680
about chatting with you well I'm a fellow geek so I always like that I always like to talk to

17:36.680 --> 17:40.640
people like this and my brother's a big fan of your podcast and he's the one that said you got

17:40.640 --> 17:45.680
to talk to these guys well tell him we said thank you because we completely agree and just before

17:45.680 --> 17:51.440
we started we were we were talking about your tenure at JPL and it looks like it's somewhere

17:51.440 --> 17:58.040
around 30 years now working for JPL I imagine that you started there very young yes so I got

17:58.040 --> 18:04.000
my undergrad in double-e and computer engineering and then interviewed around but the top of my

18:04.000 --> 18:09.400
list was JPL because I knew of all the different projects I did from reading up on them when I was

18:09.400 --> 18:14.000
a kid with National Geographic and all the Voyager visits to the outer planets and I was just super

18:14.000 --> 18:19.480
excited when I saw a poster at my school said sign here if you want an interview and I did and

18:19.480 --> 18:26.680
the rest was history I came out of school moving from upstate New York very much of a rural area

18:26.680 --> 18:32.760
and moved to the big metropolis of Los Angeles and started at JPL so you have a background in

18:32.760 --> 18:38.600
computer technology so what kind of job were you looking for at JPL in that time I've done a lot

18:38.600 --> 18:43.960
as an undergrad with computers you know taking a lot of software classes and then computer

18:43.960 --> 18:48.880
architecture classes and I also had a background in electrical engineering so I understood the

18:48.880 --> 18:54.480
circuits and the design of how they worked and so I wanted a job coming out of school in that area

18:54.480 --> 19:00.920
and so I when I hired on to JPL they were looking for somebody who had software background but also

19:00.920 --> 19:06.680
had the engineering background as well to be able to look at schematics and look at understand how

19:06.680 --> 19:12.280
the different boxes in the system worked and so that's that was my entree into JPL was that I

19:12.280 --> 19:19.240
came in early as a graduate from college and started working in the deep space network that's

19:19.240 --> 19:24.840
a big network of antennas that JPL uses to track the different spacecraft that they're talking with

19:24.840 --> 19:29.040
and they were looking for somebody who was a software engineer but also understood hardware

19:29.040 --> 19:35.160
so we could program the ground controllers that would operate these these transmitters and

19:35.160 --> 19:40.680
receivers in the deep space network so that was my introduction to JPL was in that field and then

19:40.680 --> 19:45.320
in the late 90s I kind of switched sides as they say at a JPL from the ground side to the flight

19:45.320 --> 19:52.120
side and started working on the Cassini project if you remember that one that was the big spacecraft

19:52.120 --> 19:57.360
that orbited Saturn and took a lot of measurements and pictures over the years just breathtaking

19:57.360 --> 20:02.640
photos yeah amazing and then you know they they had this very dramatic burn into the atmosphere

20:02.640 --> 20:09.520
as a goodbye there's a very a very amazing video of that you know a rendering of that on the web

20:09.520 --> 20:14.000
if you want to search around for it but I worked on the I didn't actually work on the flight software

20:14.000 --> 20:20.560
itself I worked on a simulation environment where you would simulate down to the instruction level

20:20.560 --> 20:26.320
what the processor could execute and build models that were all the different peripherals on the

20:26.320 --> 20:31.920
spacecraft and so you could take the actual flight software and load it on our simulator

20:31.920 --> 20:36.800
and it would run as if it was on the vehicle so they use that as a test bed a virtual test

20:36.800 --> 20:42.880
bed for many years on that project boy I could see how that'd be immensely useful and at what point

20:42.880 --> 20:49.680
in this journey do you discover Linux and start working with Linux so JPL for many years was a

20:49.680 --> 20:56.080
Solaris house right you know when I came out of school everybody wanted a big Solaris workstation

20:56.080 --> 21:02.240
yeah you know the old spark workstations they were pretty cool they were cool and so I got you

21:02.240 --> 21:08.880
know I kind of came up the you can call it the Unix curve learning how to work on Solaris and

21:08.880 --> 21:17.680
you know the the flight project side used Solaris a lot and prior to getting on Curiosity which is

21:17.680 --> 21:23.280
the the big rover that's still on Mars and operating I had been on a project where we were

21:23.280 --> 21:29.280
doing a lot of software technology development and we could kind of see the writing on the wall

21:29.280 --> 21:34.960
that Solaris was starting to decline in the marketplace so we in our own project we went

21:34.960 --> 21:41.280
and started looking at alternatives and I just bought a PC made out of random parts

21:42.240 --> 21:49.280
you know just commodity parts at the time and loaded Linux on it and took the software that

21:49.280 --> 21:54.720
we had on that project and compiled all that software on Linux and it was kind of a somewhat

21:54.720 --> 21:59.280
comical moment because one of the senior engineers in the project had gotten his

22:00.560 --> 22:08.240
$15,000 Sun Solaris workstation that he you know he wanted as a senior guy and we had the software

22:08.240 --> 22:14.640
compiling on both and I took my my little commodity level PC and compiled the software

22:14.640 --> 22:22.000
and it compiled twice as fast and he just had this look of what did I waste all my money on yes he

22:22.000 --> 22:27.360
just just just look came over his face like I can't believe that and he ended up pawning off the

22:27.360 --> 22:32.880
whole system to an intern and then it was kind of funny what would you say what kind of what era

22:32.880 --> 22:39.680
what year ish was this would you say this would have been early 2000s probably okay very early

22:39.680 --> 22:45.360
very early 2000s and so Linux at the time was kind of a niche thing at JPL and sort of an

22:45.360 --> 22:49.440
underground movement if you will because you know Solaris was the enterprise class system that

22:49.440 --> 22:56.800
everybody supported and believed in and you know they built enormously robust machines you could

22:56.800 --> 23:01.440
drop them off of a cliff and nothing would happen and you had support it had an ecosystem it was

23:01.440 --> 23:07.520
the established operating system at that time it was sort of a no-brainer yeah right and so when I

23:07.520 --> 23:14.160
came on to Curiosity I was one of the first five team members for Curiosity and I was tasked with

23:14.160 --> 23:19.840
setting up a development environment for that particular project and I said why don't we use

23:19.840 --> 23:25.920
Linux and everybody around the table kind of looked at me and said uh really isn't that the

23:25.920 --> 23:31.920
thing SCO is trying to sue out of existence and so there was you know it's kind of this there was

23:31.920 --> 23:38.800
kind of a view at JPL that it was sort of a you know a disreputable corner of of the operating

23:38.800 --> 23:42.960
system market in some ways because you know it hadn't had the it hadn't had as much of the

23:42.960 --> 23:49.760
enterprise time under its belt then right and it seems like in your environment that matters more

23:49.760 --> 23:54.720
than it would to even most enterprises yes you're right because we they had a lot of tools that

23:54.720 --> 23:59.040
have been written specifically for Solaris you know because it's Linux it's I mean it's not

23:59.040 --> 24:04.000
Linux it's a flavor of Unix so there's many similarities but you know in the underlying

24:04.000 --> 24:12.720
architecture was Spark and that Intel and so I just made a push I said listen we Linux is where

24:12.720 --> 24:18.800
the market is going you know you could already see the decline in in Solaris even at that moment

24:18.800 --> 24:25.760
in time I said if if we just keep replicating these old platforms we'll be left behind sure

24:25.760 --> 24:30.480
it seems like even though at that point in time that was still a bit of a stretch because people

24:30.480 --> 24:35.680
probably assume Solaris would be around forever I mean even if I recall my timing right even kind

24:35.680 --> 24:41.520
of switching to it the Intel architecture itself would have been kind of looked at as a bit risky

24:41.520 --> 24:47.200
right so I mean you were just talking about a new OS but you're talking about a CPU architecture

24:47.200 --> 24:53.120
that was built for PCs you know I used to work with a data center mainframe guy who called them

24:53.120 --> 25:00.320
Mattel inside yeah yes I mean there's a famous Dilbert cartoon where Dilbert and his friends

25:00.320 --> 25:06.000
are talking about you know programming on their PCs and the and the the bearded grizzled Unix

25:06.000 --> 25:09.600
veteran came along and flipped him a nickel and said here why don't you buy a real computer

25:11.120 --> 25:16.960
so you're really for you're kind of fighting two different headwinds in that case yes and but to

25:16.960 --> 25:23.600
to JPL's credit you know JPL JPL is always balancing internally yeah we want these firmly

25:23.600 --> 25:29.680
established technologies that we can trust but we're always open if somebody can make a good case

25:29.680 --> 25:36.080
for us we're always open to looking at new things and they said well why don't you go off and look

25:36.080 --> 25:40.960
into it for us and make a case for it and we'll do a trade study and then we'll decide what we're

25:40.960 --> 25:48.080
going to do and so I went off and I configured up you know a machine spec and install Linux and

25:48.080 --> 25:53.600
show that I could get all of our tools running on it and and the fact that it was fast and they're

25:53.600 --> 26:00.320
relatively inexpensive compared to sun workstations to replicate and so we ended up kind of pivoting

26:01.120 --> 26:07.680
and starting to use Linux for our development tools and what was interesting was that

26:07.680 --> 26:12.480
the other parts of the project like the ground system and the test beds you know started to

26:13.200 --> 26:18.880
take interest and came and asked me for my machine spec and looked at it and ended up adopting it

26:18.880 --> 26:26.160
for their own you know basically a PC with Linux and so now for curiosity and now especially for

26:26.160 --> 26:32.560
Mars 2020 they've pretty much pivoted to Linux and they've taken it a step farther and they have a

26:32.560 --> 26:37.920
lot of like VMware infrastructure in place where they have a lot of different virtual machines that

26:37.920 --> 26:43.280
people can log on to and run their tools and do their analysis so it's really been a big pivot in

26:43.280 --> 26:47.600
the last 15 years. I was kind of curious if any of the you know the open source nature but also

26:47.600 --> 26:52.160
sort of the you can just install and run it without licensing has been useful internally

26:52.160 --> 26:57.760
it's just a lot more flexible and certainly you all are pushing the limits of what is possible

26:57.760 --> 27:02.640
it seems like that might go hand-in-hand. Well JPL also is very it's very important to them to have

27:03.280 --> 27:10.160
support contracts in place and so for many of the official if you will the official workstations

27:10.160 --> 27:15.440
and environments that they install they they have support contracts in place and they try to

27:15.440 --> 27:20.240
standardize on a single image so it's sort of a blending of the two worlds right they still don't

27:20.240 --> 27:25.360
want people to go off and just ad hoc build up these Linux environments that they don't have

27:25.360 --> 27:30.720
built up these Linux environments that they don't know about the level of patching and security and

27:30.720 --> 27:35.680
compliance with all these other requirements. You're not installing Arch Linux? No there aren't

27:35.680 --> 27:41.040
and so it tends to be flavors of Red Hat that they get support contracts for and they you know

27:41.040 --> 27:45.600
they have a very robust system administration environment now so they've they've kind of a

27:46.240 --> 27:51.680
adopted Linux but at the same time they've made sure that it's robust in an in an enterprise way

27:51.680 --> 27:57.680
to make sure that you know the machines are secure and the environments are standard because the one

27:57.680 --> 28:04.160
thing that can bite you when you have tools that run on Linux is you have to very carefully version

28:04.160 --> 28:12.080
control the tools that you use. Right right. And so if you rev Python from say 3.6 to 3.7 and

28:12.080 --> 28:17.360
everything starts breaking all of a sudden because there's been some change that can that can really

28:17.360 --> 28:22.560
hurt you as much as things in other areas so they very carefully control versioning on these

28:22.560 --> 28:27.520
workstations so that they don't get bitten by tool changes. And so this sort of sets the stage

28:27.520 --> 28:35.120
I would imagine for some cultural acceptance of actually using Linux in a mission on Mars but I

28:35.120 --> 28:41.120
don't imagine it was automatic. It had to be an established methodology for doing something versus

28:41.680 --> 28:46.240
Linux and then and then not only is it Linux Tim but one of the things I'd like to get to is

28:46.240 --> 28:51.120
the open source software running on top of Linux too. But before we get to that could you give me

28:51.120 --> 28:54.880
just a little bit of an idea of what it was like to actually convince people that

28:54.880 --> 28:59.760
it's going to be OK to put Linux on Mars. It's going to work out. Let me explain it to you this

28:59.760 --> 29:06.800
way is that NASA and JPL have these different classes of missions and there's different levels

29:06.800 --> 29:12.400
of if you will reliability and vigor and verification that are assigned to those different

29:12.400 --> 29:17.200
levels so the big flagship missions like the rover itself they call them Class B

29:18.480 --> 29:22.800
which so there's a lot more scrutiny about what kinds of software you get to run

29:22.800 --> 29:28.320
what kinds of operating systems what kind of testing program you do what kind of verification

29:29.200 --> 29:34.160
you know the level of reviews so there's a whole litany of things that you have to comply with if

29:34.160 --> 29:37.600
you're going to if you're going to design and fly one of these Class B missions.

29:37.600 --> 29:44.080
But JPL is also aware that they want to try new things and so they have a classification of Class

29:44.080 --> 29:50.080
D missions they call it and the helicopter the Mars helicopter is one of those classifications

29:50.080 --> 29:54.720
they've had other ones like I don't know if you've heard of CubeSats they're small compact

29:54.720 --> 30:01.360
satellites that you can fly many universities are doing those kinds of projects and so they

30:01.360 --> 30:07.840
tend to be lower profile and if they fail it's sad but it's okay because it's not a critical

30:07.840 --> 30:13.600
aspect of the operation right and so the helicopter was defined as one of these Class D missions

30:13.600 --> 30:18.480
because if the helicopter crashes for some reason it doesn't affect the rover right they can

30:18.480 --> 30:25.120
continue to go and do them their primary mission of going and getting rock core samples and we

30:25.120 --> 30:29.920
don't we can't really hurt them and so there's a lower level of scrutiny if you will

30:29.920 --> 30:36.320
on that kind of mission and so our main the main work that we had to do with respect to the rover

30:36.320 --> 30:42.080
was to verify that nothing that we did could hurt them in terms of you know how we interface with

30:42.080 --> 30:49.120
them and and so forth and so because that's true because the Mars helicopter is classified as a

30:49.120 --> 30:55.120
technology demonstrator where they're willing to try new things willing to accept a higher level

30:55.120 --> 31:02.640
of risk um they didn't really push those hard requirements on them to use and use the traditional

31:02.640 --> 31:08.560
operating systems and computing platforms that they usually put on rovers because for instance

31:08.560 --> 31:15.520
the processor that's on the rover is really a Mac power pc from the from the mid 90s not exactly

31:15.520 --> 31:22.800
modern yes exactly they use it's like a 200 megahertz power pc but it's been re-engineered

31:22.800 --> 31:28.160
from the silicon up to be radiation tolerant right so that it can and very thermally tolerant so it

31:28.160 --> 31:33.680
can take a beating you know a variant of that same processor is on the curiosity rover and it's been

31:33.680 --> 31:39.120
operating for you know going on what 10 years here without any problems and so they build those to be

31:39.120 --> 31:44.000
super tough but that also means that they tend to be older technology slower yeah right and so the

31:44.000 --> 31:49.120
helicopter itself we could not use any of those older processors because not only are they not

31:49.120 --> 31:54.960
very powerful processors but they're big and heavy and they consume power a lot of power so we

31:54.960 --> 32:00.480
couldn't use those old processors for just for that reason alone so we had to use something modern

32:01.040 --> 32:06.000
something that had a lot of processing power because we're running the guidance loops on the

32:06.000 --> 32:11.840
helicopter when it's flying it's measuring sensors running it through control algorithms and you

32:11.840 --> 32:18.560
know sending commands to the flight system at 500 times a second and so we had to use those

32:18.560 --> 32:24.560
and on top of that we're taking pictures we're we're taking black and white pictures down to the

32:24.560 --> 32:29.920
in the direction of the surface 30 times a second so it's taking a picture 30 times a second

32:29.920 --> 32:34.240
analyzing it for features is that f prime right there is that where f prime is doing some of its

32:34.240 --> 32:40.080
magic that is a if you want to call it an instance of f prime so f prime itself is a software

32:40.080 --> 32:46.320
framework it doesn't have all that built into it so we made we took that software framework which

32:46.320 --> 32:51.280
we developed at jpl and is open source yes and is open source so you can get a raspberry pi and go

32:51.280 --> 32:56.800
to the github repo for f prime and you can build a little demonstrator with a raspberry pi and see

32:56.800 --> 33:00.640
how it works and many of the same software components that are on that repo are on the

33:00.640 --> 33:07.040
helicopter right now sitting on mars it's amazing that's right and the helicopter code itself is not

33:07.040 --> 33:13.920
on the repo because that's you know proprietary intellectual property of jpl so we use that

33:13.920 --> 33:21.040
framework which is something that i developed back in the 2013 2014 time range to develop the

33:21.040 --> 33:27.280
software but because these these processors the processor for the helicopter has to be very

33:27.280 --> 33:32.080
powerful we couldn't use that i mean the processor on the helicopter is 100 times more powerful than

33:32.080 --> 33:37.520
the processor on the rover it's an arm like a multi-core one too right yes it's a quad core

33:37.520 --> 33:45.680
arm processor it's built by qualcomm so it's a galaxy s5 era processor if you wanted to draw

33:45.680 --> 33:52.800
a comparison so the way linux got into the picture was that this was a development board that you

33:52.800 --> 33:58.960
could buy off the internet for about 400 bucks back in the day it was actually used for people

33:58.960 --> 34:04.320
to do drone development if you wanted to prototype a drone you can use this particular board sure i

34:04.320 --> 34:09.200
mean it sounds like cheap prototyping and that's basically what you guys were doing right and so

34:09.200 --> 34:15.840
this board is very compact it fit within the envelope that we wanted and it had the i0 you

34:15.840 --> 34:20.960
know because we're talking to all these different subsystems on the helicopter so it had the

34:20.960 --> 34:27.280
sufficient i0 that we needed and what was really important was it already had all the software in

34:27.280 --> 34:32.960
place for the camera systems we use because we had been doing some asking around and if you just

34:32.960 --> 34:40.800
take a modern camera and you try to program for it in linux it can take many months with an expert

34:40.800 --> 34:45.600
to get it all up and running no doubt and we're not experts at writing camera drivers for linux

34:45.600 --> 34:51.760
we just aren't and so we had you know partners at qualcomm will help us and this thing all came

34:51.760 --> 34:57.520
packaged and it came packaged with linux sure it's a 3-4 kernel based on lanaro i don't know if

34:57.520 --> 35:02.080
you've heard of that flavor yeah lanaro is sort of an embedded version of linux it's kind of aimed

35:02.080 --> 35:07.040
towards embedded applications and they've done a lot of good work for arm support generally i think

35:07.040 --> 35:12.880
yes and it came pre-packaged with these camera drivers and the i0 drivers we wanted and so it was

35:12.880 --> 35:19.360
a very natural place for us to step in and use it and so that's how linux got onto the mars

35:19.360 --> 35:24.880
helicopter and because it was this class d mission we didn't really get any pushback from jpl about

35:24.880 --> 35:30.160
making linux the operating system that's fantastic and so it if i'm kind of getting where you're

35:30.160 --> 35:36.240
going with this it kind of means that this class d style classification means that a little less

35:36.240 --> 35:40.880
pressure it gives you a chance to try something like linux and if it proves itself here and proves

35:40.880 --> 35:45.840
itself a few more times i would imagine it means it could eventually be moved up to something like

35:45.840 --> 35:52.080
a class b style mission yeah perhaps i would say it's gaining more trust in that field right yeah

35:52.080 --> 35:58.320
you know as time goes on and now that there's the linux real time patch that gives the kernel more

35:58.320 --> 36:04.880
of a real time aspect to it is real time one of the major things that gives jpl pause when using

36:04.880 --> 36:11.760
linux yes because linux is really not designed truly to be real time they have even the you know

36:11.760 --> 36:16.800
the linux kernel itself has modes you can run it in that makes it more real time but linux was

36:16.800 --> 36:22.960
really designed to be a multi-user fairness algorithm kind of os in the marketplace you have

36:22.960 --> 36:29.280
very purpose-made real-time operating systems like wind rivers vx works which is the operating

36:29.280 --> 36:34.800
system that is on the rover and that way you get much higher guarantees about when tasks will

36:34.800 --> 36:39.520
finish you just can't have another process taken over right i mean when you're trying to fly

36:39.520 --> 36:44.000
autonomously on mars there's just there's not a lot of room for failure right and so you so when

36:44.000 --> 36:48.240
you're when you're doing very critical things like that you have to order things in the app race

36:48.240 --> 36:55.920
operating system by means of their priority and so when you have a shared fairness algorithm in

36:55.920 --> 36:59.760
linux it just kind of hops from user to user to make sure they all get time it doesn't lend itself

36:59.760 --> 37:04.640
to that because you don't want your image compression algorithm to get in the way of your

37:05.280 --> 37:10.160
you know your flying or your landing algorithm right that it would be silly for image compression

37:10.160 --> 37:16.080
to take over for a minute and you crash a billion dollar vehicle yeah it sounds ridiculous right so

37:16.080 --> 37:21.600
you so when you're dealing with very critical activities like landing the rover you have to

37:21.600 --> 37:26.880
have a an operating system that you really really understand how it's going to operate with respect

37:26.880 --> 37:32.640
to all these deadlines in the software and so that's the void that linux has to cross to get

37:32.640 --> 37:39.200
accepted on some of these more class b projects is i see kind of be engineered in such a way that

37:39.200 --> 37:44.560
it can make these kinds of guarantees for performance and improve it yes exactly is the

37:44.560 --> 37:49.680
ingenuity helicopter is its 34 kernel does it have a real time patch set against it is it real time

37:49.680 --> 37:55.920
so interestingly it doesn't it has a it has the pre-empt patch on it but it does not have the real

37:55.920 --> 38:03.760
time patch and it just happens that it's super fast so that it can keep up and we also so the

38:03.760 --> 38:09.120
linux the linux installation on the snapdragon is not the only processor we have on the helicopter

38:09.120 --> 38:15.840
we actually have a co-processor it's a microcontroller built by texas instruments

38:16.800 --> 38:22.640
and it's a microcontroller that's really designed for automotive uses so it's very rugged and very

38:22.640 --> 38:28.720
temperature tolerant sure and so the main flight control loop that we do there's two parts of it

38:28.720 --> 38:32.880
there's one that's on the main processor you know the linux processor and there's another part of

38:32.880 --> 38:38.240
it that's on this microcontroller and that one we actually run bare metal what we call bare metal

38:38.240 --> 38:44.400
which means there's no operating system it just gets a signal from the hardware and that runs a

38:44.400 --> 38:48.160
control cycle and then it waits for the next signal from the hardware there's no operating

38:48.160 --> 38:53.920
system at all and so that particular processor is the one that's in charge of the immediate flight

38:53.920 --> 38:59.520
control if you will keeping the helicopter in the air and then the linux processor is the one that

39:00.080 --> 39:07.040
does the you know the more of the navigation and the imaging and so if the that linux processor

39:07.040 --> 39:12.480
falls behind we have built-in robustness to the software that it can tolerate some of those slips

39:12.480 --> 39:16.800
if it happens you've got like a hybrid setup there to try to take advantage of both sides of things

39:16.800 --> 39:22.960
right we give each processor the job that it's good at yeah it sounds it sounds like that secondary

39:22.960 --> 39:28.800
co-processor is pretty foolproof so it is that also the system managing the thermals because

39:28.800 --> 39:32.400
my understanding was this tiny little helicopter spends a ton of its energy just keeping itself

39:32.400 --> 39:38.880
warm enough to survive yeah so the third part in this in this uh triple play here is that we have

39:38.880 --> 39:44.640
an fpga i don't know if you guys are familiar with that acronym means it's a it stands for field

39:44.640 --> 39:52.080
programmable gate array it's basically a sure okay a digital logic chip and that one itself is very

39:52.080 --> 39:57.760
much radiation hardened so the helicopter spends most of its time asleep because we don't have the

39:57.760 --> 40:03.280
energy just to leave it up and running like a you know data center server it's it's uh instead what

40:03.280 --> 40:10.000
happens is we manage wake sleep cycles with the helicopter so so the fpga we essentially program

40:10.000 --> 40:15.440
it and we say okay we want to we're setting our alarm clock for 10 a.m tomorrow morning please

40:15.440 --> 40:20.320
wake us up then and then we go to sleep as a processor so the whole system basically shuts down

40:20.320 --> 40:28.640
except for that fpga and that fpga has digital logic built into it that will basically run a

40:28.640 --> 40:33.520
thermostat to keep us warm overnight so that gets us into a very low power sleep mode so that we

40:33.520 --> 40:38.720
don't expend energy just sitting there waiting for instructions just a minimal amount of control to

40:38.720 --> 40:43.360
keep things operational keep that that clock counting until you wake up and check in again

40:43.360 --> 40:49.200
yes exactly so that makes our operations very uh challenging because we have to manage that

40:49.200 --> 40:53.280
alarm clock and make sure that we're up and waiting for it when the helicopter comes back up

40:53.280 --> 40:59.200
because we we can't just come up at any time and say hey helicopter go do this for us it's not just

40:59.200 --> 41:03.360
waiting for us to talk to it we have to coordinate all these wake up and sleep times so that we can

41:03.920 --> 41:08.240
do things when we need to do them and then i imagine it also there's a component of it has to

41:08.240 --> 41:13.840
be aware of a battery level and solar charge and whatnot too yeah that's uh we we manage that

41:13.840 --> 41:19.120
really on the ground you know in our we have models that we developed in our ground tools that track

41:19.920 --> 41:24.960
the battery state of charge throughout the martian day and we try to time events on the helicopter so

41:24.960 --> 41:31.280
that we maximize the amount of battery energy that's available for a flight so the software

41:31.280 --> 41:34.960
that runs on the helicopter is paired with a number of these ground tools that we use to track

41:34.960 --> 41:39.280
its state as well and then if something's drifting from what you expect you just sort of send an

41:39.280 --> 41:43.920
update to it to change whatever yeah we would typically just change our plans for that day we

41:43.920 --> 41:48.320
might move it later in the day to give it more charge if that's what happens so when are we

41:48.320 --> 41:53.520
looking at that thing kind of starting to do it's you know because it's still in the belly right now

41:53.520 --> 41:57.440
right of perseverance and then it's going to come out and sit out for a little bit and then it's

41:57.440 --> 42:01.440
going to be a little bit before it even flies so i mean we still have some time here right right

42:01.440 --> 42:06.880
we're still attached to the belly of the rover we charge the batteries every week or so so interestingly

42:06.880 --> 42:13.280
the helicopter has this this qualcomm board but we also have a box on the rover that's an instrument

42:13.280 --> 42:19.520
payload we basically just took the same avionics cards that are in the helicopter and constructed

42:19.520 --> 42:25.120
them in a different way and interconnected them in a different way so that the the base station

42:25.120 --> 42:31.520
box that's attached to the rover also has the qualcomm processor and also has linux and also has

42:31.520 --> 42:38.160
f prime on it so this box acts as a radio relay to the helicopter so the rover will turn on this

42:38.160 --> 42:42.160
base station as an instrument payload and communicate with it and pass it the files we want

42:42.720 --> 42:47.440
and then internally we take this base station and the base station passes the files we want to the

42:47.440 --> 42:51.360
helicopter when it wakes up and that's how we operate it so what you're saying is there's

42:51.360 --> 42:55.520
there's actually two linux boxes that are going to be active on mars right and there's actually

42:55.520 --> 43:03.200
three which is kind of fun because did you guys see the edl landing videos yes wow with the

43:03.200 --> 43:07.760
parachutes bill billowing out and you could see the dust kicking up as when i was looking down

43:07.760 --> 43:14.640
and the rover was touching down it was incredible that was also a another linux installation and

43:14.640 --> 43:20.480
this one was an x86 box right correct it was a compact pci ruggedized pc and i was just running

43:20.480 --> 43:26.560
pretty vanilla from what i understand pretty vanilla a 4x you know for the developer sent me

43:26.560 --> 43:32.640
the numbers it's a 4.15 kernel wow and it's it's running linux and they they had a they had a whole

43:32.640 --> 43:39.520
series of of just usb cameras attached to all these places on the surface of the rover and this

43:39.520 --> 43:43.360
was also another one of those class deep instruments because it was attached to the rover

43:43.360 --> 43:47.680
but it wasn't used in the landing to find a place for the rover to land it was basically

43:47.680 --> 43:52.400
a giant video recorder so during the landing at the right moment they just sent in a command and

43:52.400 --> 43:58.160
said hey start recording good luck right right so if everything had gone wrong and for some reason

43:58.160 --> 44:01.840
they hadn't recorded the video it wouldn't have affected the rover landing itself it just would

44:01.840 --> 44:06.000
have made us they didn't get all that cool video and historic video too i mean it's the fact that

44:06.000 --> 44:11.680
it worked is fantastic and it means that linux took part in capturing really truly truly historic

44:11.680 --> 44:17.840
video and i i heard i heard a shout out on stage to ffmpeg for the doing some of the heavy lifting

44:17.840 --> 44:24.080
there yes and they and i was talking with the developer recently they even used python scripts

44:24.080 --> 44:29.920
on that box to do the image so after they landed you know they'd saved all the images and then

44:29.920 --> 44:34.800
over the next week or so they started transferring all this video and so they used these python

44:34.800 --> 44:40.000
scripts on board to do some of the processing of the images and then they sent it back to

44:40.000 --> 44:46.800
ffmpeg for processing of the images on the actual linux box before they shipped them over so you

44:46.800 --> 44:52.880
have you have a bunch of different open source things operating on that one and so i guess they

44:52.880 --> 44:58.400
get the credit for being the first linux uh installation to run on mars but you'll have

44:58.400 --> 45:02.240
credit for the continuous installation right because their computer i assume is now shut down

45:02.240 --> 45:06.080
it's shut down but they're going to try to use it for other things like they have a microphone

45:06.080 --> 45:11.680
for they attempted to get a recording on the way down through that microphone but it didn't work

45:12.560 --> 45:15.920
they didn't really elaborate on why it didn't work but but they've tested it since and it

45:15.920 --> 45:21.600
seems to work so they may use it for recordings throughout the mission it's sort of a bonus

45:21.600 --> 45:27.680
feature so if i ever get a chance to play the sound of mars on this show it'll have been recorded

45:28.480 --> 45:33.360
on linux and it'll be played back and recorded on our end using linux that's pretty great

45:33.360 --> 45:37.680
right yeah if you get it from that microphone they have another microphone up on the mast

45:38.480 --> 45:43.360
that's also they're able to point in particular directions and take recordings okay so those

45:43.360 --> 45:48.000
ones might not be okay yes but we i guess you could say we get credit for being the first

45:48.000 --> 45:53.120
linux installation to operate on the way to mars because this this instrument box that i told you

45:53.120 --> 45:59.440
about that we designed has the software on board to to do the charging so we had to keep the

45:59.440 --> 46:04.880
batteries maintained and so we would wake this box up every week or two and it would execute commands

46:04.880 --> 46:10.080
to to keep the charging going huh so have you kind of i mean no it's still kind of early in a

46:10.080 --> 46:14.320
sense but it's you've made some pretty hit some pretty significant milestones here have you gotten

46:14.320 --> 46:20.000
a sense of in terms of linux what's worked what what hasn't worked what might be adjusted for

46:20.000 --> 46:25.120
future missions you have any of that idea yet i think that as we move on in linux i think

46:25.120 --> 46:31.200
i think what we want to look at is is getting much better at doing things like configuring the

46:31.200 --> 46:38.560
kernel and understanding what's going on in the kernel and being able to do things like apply

46:38.560 --> 46:45.120
this real-time patch that i mentioned so the path forward i think is to study linux and understand

46:45.120 --> 46:52.560
it better as a real-time environment and just increasing our expertise and how it works

46:52.560 --> 46:58.480
because we're new to this game i was a i mentioned that earlier operating system vxworks i was a

46:59.360 --> 47:04.640
i was you know one of the vxworks specialists for curiosity i was the one who configured it and

47:05.280 --> 47:10.480
understood it and you know wrote the software that would interface with it have to get very

47:10.480 --> 47:15.920
up close and personal right so i come out of that world where we have to know all these things about

47:15.920 --> 47:20.640
the operating system and so we actually had a developer on our team that was very much

47:20.640 --> 47:28.400
linux savvy so i wouldn't classify myself as a linux expert i would classify myself as kind

47:28.400 --> 47:33.680
of a maybe a power user in that domain you know flights of flight software but we had somebody

47:33.680 --> 47:37.840
else who was digging into the innards of our particular distribution and figuring out how to

47:37.840 --> 47:42.720
configure it and get the things working that we needed to so getting more of that expertise

47:43.680 --> 47:47.760
in a field that typically doesn't have it for that particular application i think that's where

47:47.760 --> 47:54.240
we want to go moving forward at jpl is to understand you know how linux works in that

47:54.240 --> 47:58.480
environment and try and study it and characterize it and test it so that we gain that trust so that

47:58.480 --> 48:03.280
we can use it for more critical applications are there any kind of future like class d style

48:03.280 --> 48:07.840
missions that are in the works that might involve linux that you know of at this point there are

48:07.840 --> 48:11.600
some in the pipeline i don't know if i can speak to them now because they're more in formulation

48:11.600 --> 48:16.880
than jpl doesn't want to you know yeah break news on things like that but it does seem possible

48:16.880 --> 48:23.520
sure sure and i think there is a growing place for these kind of class d applications of it as a

48:23.520 --> 48:30.640
matter of fact there was a cube set that jpl developed and flew and operated a couple years ago

48:30.640 --> 48:38.000
if you want to look it up it's called asteria a s t e r i a and it was a earth orbiting spacecraft

48:38.000 --> 48:44.000
that would do it would attempt to you know do alignments with distant stars to do observations

48:44.000 --> 48:49.440
and it used f prime the same flight software framework that we're talking about

48:50.800 --> 48:57.440
and it used a flavor of linux for that board as well so okay all right i love it so we've had

48:57.440 --> 49:03.920
this partnership between f prime and linux for a while so i think definitely these projects that

49:03.920 --> 49:09.760
have used it and have started to build a resume for linux will help us to more mainstream it in

49:09.760 --> 49:14.240
more mainstream in this kind of project in the future and there's definitely interest i would

49:14.240 --> 49:19.120
imagine there's many tales of over the years of getting linux further and further adopted but i

49:19.120 --> 49:23.760
just appreciate giving getting some like little peek little insight into how it's all kind of

49:23.760 --> 49:30.000
unfolded and it's kind of one of these stories where there's more to come because we have

49:30.000 --> 49:36.480
eventually at some point the ingenuity helicopter is going to fly and i'd love to chat again and

49:36.480 --> 49:40.240
just kind of get an idea of how it went and what what you what you guys learned and all of that

49:40.240 --> 49:45.280
because that's that's still a milestone that as we record this is yet to happen yes it's

49:45.280 --> 49:51.680
very exciting and it's very exciting not just for linux but for spaceflight in general because this

49:51.680 --> 49:56.480
is something that has never happened before it's sort of a right brother's moment where we're

49:56.480 --> 50:01.840
trying something completely new we had to develop new techniques we had to construct the helicopter

50:01.840 --> 50:08.240
in a very special way to operate on mars because mars has one percent of the density of earth

50:08.240 --> 50:12.320
so you can't just put a just can't grab a commercial drone off the shelf and put it on

50:12.320 --> 50:17.280
mars you know we had to build lighter and longer blades that spun faster and make sure that we were

50:17.280 --> 50:24.240
very lightweight and that was a challenge in itself and so doing this for the very first time

50:24.240 --> 50:28.880
is going to be super cool if everything goes well we'll have some nice color pictures coming out of

50:28.880 --> 50:33.840
that because these cameras that came with it we have basically a 13 megapixel color camera wow

50:33.840 --> 50:40.800
boy and i love a good drone shot i always love drone shots yes it's a it's a half a gram you know

50:40.800 --> 50:45.840
it's a tiny little square camera that came with the board it's basically just an adapted cell

50:45.840 --> 50:50.720
phone camera if everything goes well we'll get some good pictures from aloft on this helicopter

50:50.720 --> 50:54.400
that we can share with the world when the time comes i mean i just i think of the weight

50:54.400 --> 51:00.400
restrictions and the atmosphere restrictions or limitations and that had to go into making this

51:00.400 --> 51:07.120
thing even conceivably possible and it's it's mind-bending but i i can see long term how this

51:07.120 --> 51:12.480
would be essentially invaluable to any manned mission having something like this little

51:12.480 --> 51:16.560
helicopter a little more developed a little bit longer flight time of course that could go out and

51:16.560 --> 51:21.680
just do some reconnaissance ahead of them if they're out walking around or even be streaming

51:21.680 --> 51:26.880
back pictures you know at this as fast as it can back to the back to ground so you know ground

51:26.880 --> 51:31.920
control control can see what's going on with the walk i mean like there's so many uses

51:31.920 --> 51:36.240
for a little even something that just takes pictures that flies around there's so many uses

51:36.240 --> 51:40.800
for that on any manned mission in the future i would imagine absolutely and you you can look at

51:40.800 --> 51:45.200
the picture aspect but one of the things that a helicopter can do that a rover cannot is it can

51:45.200 --> 51:50.720
go to these features that you can't drive over so if we wanted to inspect say a cliff face or a deep

51:50.720 --> 51:55.040
ravine or something like that you can't send a rover there to look at it so you can imagine

51:55.040 --> 52:00.640
uses where you would send a scout like this to a really difficult to access place take a bunch of

52:00.640 --> 52:05.600
pictures future helicopters might be larger so that they can carry an instrument payload so you

52:05.600 --> 52:11.280
might have like a spectrometer or something that can scan a formation and get data so the the nice

52:11.280 --> 52:16.240
thing about the helicopter is not only can it get places quickly compared to a rover because the

52:16.240 --> 52:21.200
rover just crawls across the surface to be safe but it can only get there quickly but it can also

52:21.200 --> 52:28.560
go to places that the rover just can't wow and it all it starts here as i can see why why you would

52:28.560 --> 52:33.440
work at jpl for 30 years i mean what a what an exciting thing to work on even even just getting

52:33.440 --> 52:39.680
to work on on one rover would be remarkable but two tim is is incredible so congratulations uh to

52:39.680 --> 52:45.440
you to the team to everybody i mean this is so exciting for us as space geeks and linux geeks

52:45.440 --> 52:50.080
to see these two things come together amazing yes well you can imagine it's very exciting for

52:50.080 --> 52:55.120
me as well having grown up as a kid reading all these stories about jpl and all their

52:55.120 --> 53:02.400
intrepid adventures and getting to actually work on this has been a real boon for me it's been a

53:02.400 --> 53:06.480
it's been a lifetime dream to be able to work on something like this well thanks for coming

53:06.480 --> 53:10.800
on and sharing the details with us we are quite welcome and and thank you for having me on your

53:10.800 --> 53:18.480
podcast boy that was a treat that was that was fascinating i think there's new details in there

53:18.480 --> 53:24.000
that uh haven't really been talked about much publicly and what a what a story west from this

53:24.000 --> 53:28.960
this thing they're gonna try to now actually running on multiple computers on the surface

53:28.960 --> 53:34.640
of mars and you might say it's out of this world you know it's really fascinating to see a space

53:34.640 --> 53:40.640
where linux is still proving itself it's kind of already conquered earth but the constraints for a

53:40.640 --> 53:46.080
multi-billion dollar mission on another planet are a little bit different i get that i'm just

53:46.080 --> 53:51.280
hopeful that due to the open source nature here you know as jpl and nasa adopts more linux and

53:51.280 --> 53:57.200
puts it in more difficult situations that's just going to be another shared use case that improves

53:57.200 --> 54:03.040
that kind of real-time story for other kernel users yeah it was interesting and it makes total

54:03.040 --> 54:09.840
sense to hear how important it was that the linux kernel support real time to make uh some of this

54:09.840 --> 54:18.240
actually possible uh and um i'm hopeful that we'll see in the future way more devices that are this

54:18.240 --> 54:23.440
class d style mission device there's probably tons of support equipment that isn't necessarily

54:24.240 --> 54:29.840
fundamental to the core operation of the mission but would be useful to have and and add supplemental

54:29.840 --> 54:35.600
value so that would seem like a great use case for linux for a long time i mean i wouldn't be

54:35.600 --> 54:40.240
surprised if eventually it's the predominant type of equipment but we'll only have to just

54:40.240 --> 54:45.040
wait and see but it was really cool to hear all of that and uh to see that uh maybe one day could

54:45.040 --> 54:49.360
go even further so thanks to tim for coming on the show we got we really got him at just the

54:49.360 --> 54:55.200
perfect time because after this like i think he said did he say next week uh mars time is

54:55.200 --> 54:59.440
kicking in for his team is that what he said it's very soon yeah pretty much they've got to switch

54:59.440 --> 55:05.040
over to living on mars time how about that and not all the teams have to do this all the time

55:05.040 --> 55:09.120
but his team does because they're the helicopter team and they're going to be doing flights and

55:09.120 --> 55:15.360
stuff so it's pretty hardcore so i'm really glad we got him when we did because once he goes into

55:15.360 --> 55:22.080
mars mode he kind of just he goes afk uh and so it was great to chat with him and maybe when he

55:22.080 --> 55:26.960
emerges from mars time we can catch up with them and see how things went yeah i mean here's i think

55:26.960 --> 55:32.720
we'll all be hoping that the first flight of this little helicopter goes well west before we go why

55:32.720 --> 55:38.240
don't we do a pick or two these are honorable mentions because they have been on the show at

55:38.240 --> 55:44.000
some point in the show's nearly 400 run history but i can't remember the last time we talked about

55:44.000 --> 55:50.080
them and they both deserve a little attention i'm going to start with oaken audio this is the audio

55:50.080 --> 55:54.400
editor everybody should know about everybody knows about audacity god bless audacity it's a great

55:54.400 --> 56:01.280
project amen but oaken audio this is one of my secret weapons for production if you know any

56:01.280 --> 56:06.320
clip you ever hear on this show that i've clipped for you know like if we have a a news clip or

56:06.320 --> 56:11.440
something like that it's in oaken audio always is i love this app because it'll open up every

56:11.440 --> 56:18.000
audio format but also every video format it has a really nice smooth ui it's uh great for just

56:18.000 --> 56:22.320
grabbing a bit of audio and exporting it or cutting something it's about time i try it because i

56:22.320 --> 56:26.320
i remember i think drew recommended it in the past and i sort of gave it a go but it was

56:26.320 --> 56:29.840
at the time it was hard to get installed but just looking right now at their download page they've

56:29.840 --> 56:35.520
got windows versions mac packages here and then a whole bunch of devs rpms and even a pacman package

56:35.520 --> 56:41.040
you can just download so seems like things have changed a pacman package you say yes yes and then

56:41.760 --> 56:46.800
let's give mention to natafire we've talked about it before i feel like we have but natafire

56:46.800 --> 56:51.520
is an application that lets you take a website and essentially convert it to an application

56:51.520 --> 56:57.920
it's basically electron for yourself but the idea would be that you know maybe you got to use web

56:57.920 --> 57:02.960
mail or you know like you get stuck using a few web apps and you just want them out of your browser

57:02.960 --> 57:06.880
you'd like them to have their own process you'd like them to have their own entry in your taskbar

57:07.760 --> 57:11.920
that's where natafire is kind of handy yeah we're all stuck with it but a lot of the benefit of

57:11.920 --> 57:16.240
having a native app is you know some of that native desktop integrations if that app supports

57:16.240 --> 57:20.800
it but then also just just having a different icon having a different entry in your alt tab

57:20.800 --> 57:26.800
so that you don't have to manage every single thing in another tab from your lips to developers

57:26.800 --> 57:31.600
ears wes that's all i want that's all i want well that and i wouldn't mind it to be a native

57:31.600 --> 57:36.880
application this is an interesting challenge uh this is one that canonical is taking a crack at

57:36.880 --> 57:42.960
with flutter and it's a problem that is it's it's it's it's apparent to anybody who's been listening

57:42.960 --> 57:48.960
for a while developers have a whole mixed bag of incentives sometimes they want to develop

57:48.960 --> 57:52.880
for mobile sometimes they want to develop for several desktops sometimes linux is just kind

57:52.880 --> 57:58.960
of a byproduct and we've ended up with electron for better for worse but flutter is perhaps another

57:58.960 --> 58:04.000
path unfortunately not one that i'm too excited about not really happy that it's it's hitched to

58:04.000 --> 58:08.320
dart and google but it is something canonical seems to be pretty excited about and they're

58:08.320 --> 58:13.040
writing their future installer in it and they've committed to writing every future canonical

58:13.040 --> 58:19.360
desktop app in flutter as well so there's a lot going on here and i think a lot of people are

58:19.360 --> 58:24.080
passing over this story one of these just sort of glaze over and pass by i would encourage you

58:24.080 --> 58:31.680
not to pass over this story go to linuxactionnews.com 179 and listen to this week's episode

58:31.680 --> 58:36.160
where wes and i do a breakdown so you can kind of get where they're coming from and kind of the

58:36.160 --> 58:40.400
scale of commitment that they're making to this thing it's it's more than you might suspect and

58:40.400 --> 58:46.240
i think it's worth your time and attention so do do go check that out linuxactionnews.com 179

58:46.240 --> 58:50.640
and with that i think mr payne we're gonna wrap it up so i will just say this join us live next

58:50.640 --> 58:57.280
week see you next week same bad time same bad station we do this here on tuesday at 12 p.m

58:57.280 --> 59:01.840
pacific 3 p.m eastern if you do the twitter thing you can find out about it by following us at

59:01.840 --> 59:07.920
linux unplugged or follow the whole network at jupiter signal there's a whole cast of great

59:07.920 --> 59:12.480
shows over at jupiter broadcasting.com there's also even a calendar to find out when we're here

59:12.480 --> 59:20.960
live hey that's a good one and all the links all the links linuxunplugged.com 396 oh my gosh oh my

59:20.960 --> 59:26.080
gosh also our subscribe link is over there our mumble server info our matrix server basically

59:26.080 --> 59:29.920
all the stuff we kind of just casually mention all the time on the show we try to have links

59:29.920 --> 59:35.600
to it at linuxunplugged.com that's the general idea but we just appreciate you listening thanks

59:35.600 --> 59:41.520
for downloading listening too we'll see you right back here not tomorrow not monday not wednesday

59:41.520 --> 59:54.640
not saturday but next tuesday

01:00:11.520 --> 01:00:26.880
all right everybody let's go boat jbtitles.com everybody go boat at jbtitles.com we go go pick

01:00:26.880 --> 01:00:31.600
our titles jbtitles.com we've got quite the selection yeah there's a lot of boats going

01:00:31.600 --> 01:00:38.640
today um we got a new jellyfin release west 10.7.0 is out did you see the uh new shiny no i haven't

01:00:38.640 --> 01:00:43.520
had a chance to upgrade yet but i guess i know what i'll be doing after the show watch out though

01:00:43.520 --> 01:00:49.200
sounds like there are some uh irreversible database changes so you can't go back or at

01:00:49.200 --> 01:00:53.040
least make your make your backups first you're running in a container right this should be easy

01:00:53.040 --> 01:01:09.200
yeah do your backups do your backups

