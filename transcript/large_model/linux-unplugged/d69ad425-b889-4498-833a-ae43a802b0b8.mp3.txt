How are you guys feeling about the deck?
I'm sure you've been watching the reviews.
How are you feeling at this point?
I'd say fairly positive.
I mean, it's not like it was 100% blown everyone
out of the water success, but considering
how early we are in the journey, at least
if some of the rumors about potential future plans
are to be believed, seems like it's going pretty well.
Yeah.
I feel like my angle where I could just potentially use it
as a portable podcast rig for travel
that fits in a backpack that doubles as a machine
to play games on occasionally, I feel like that is
looking good for me right now.
That's probably going to play out pretty well.
But they haven't released the actual OS image
to run on a desktop yet.
And that's really, I think, when I get my hands on that,
I'm going to have a much sounder,
kind of deeper understanding if I'm actually
going to be able to use that thing as a daily driver.
Come on, we want to play.
The recovery image came out.
You see that?
Oh, no, I missed that.
It's kind of funny, actually.
If you download the recovery image
and you manage to get it up and going in a VM,
and I've got some tips linked in the show notes,
when it first boots, it's sideways,
like the deck would be.
So it boots from the right side of your screen to the left.
That's some attention to detail right there.
There's a fix, though, for that as well.
But this is just the recovery OS.
This is not Steam OS.
I'm not going to base my decisions and my opinions
off this, but I'm watching it.
It's pretty fun.
I love seeing this stuff slowly come out.
And you've got to figure, like, Valve probably
saw tens of thousands of more downloads
of the OS recovery image, and they've actually
shipped of decks at this point.
No kidding.
Ha, ha, ha.
Hello, friends, and welcome back to your weekly Linux talk show.
My name is Chris.
My name is Wes.
And my name is Brent.
Hey, guys, coming up on the show this week, well,
I actually have no idea.
We have three topics, and I have no idea
what these guys want to talk about.
So to be specific, I know my topic, but each of us
has a secret that we've brought to the show today.
And we have no idea what those are,
because we have encrypted our show notes
to prevent each other from discovering what
we want to talk about today.
So we're going to sit back and just chat
about whatever the three of us would like to talk about.
Doesn't even necessarily have to be Linux specific, I suppose.
And then we'll wrap it up and round it all up
with some boosts and picks and more.
But before we go any further, it's
time to say hello to our virtual lug.
Time appropriate greetings, Mumble Room.
Hello, Chris.
Hello, Wes.
Hello, Brent.
Hello.
Hello.
16 of them in there.
Not our biggest showing, but a decent showing.
Nice to have them there.
And always available to anyone.
More details at linuxunplug.com slash mumble.
So before we get into the topics,
and I know it's going to be a lot, so we want to make room.
I have no idea how long, but I assume
because of the length of these notes,
it's going to take us a bit.
So I want to mention, just remind everyone,
that we are planning finally.
It's been way too long.
I think it's really been since Ohio Linux Fest.
We have an East Coast Jupiter broadcasting meetup coming up.
They said it couldn't be done.
That's right.
But they were wrong.
Now, are you sure you're still thinking about going?
Yeah, I was just trying to work through some of that planning
earlier this week.
I know both of you and I have to figure out doggy care.
Yep, dog care, life plans.
I booked my flights, though, because I'm a cheapskate,
and so I wanted to get one that was cheap as possible.
Yeah, you should.
Excellent news.
But oh, man, you should go.
Throw a little party.
I'm just saying, if you had a special occasion that weekend,
it'd also be a good way for you to spend that special occasion.
It's true.
If you had such a special occasion
that I wouldn't want to mention on air for security reasons.
But anyways, meetup.com slash Jupiter broadcasting,
that's where you go to sign up.
Yesterday, I think, Alex went there and confirmed.
Oh, a scout out, nice.
I was like, this sounds too good to be true.
But it is true.
There is a barbecue joint that could easily
handle like 30 people.
We're going to try to get an idea from the meetup
and give them a heads up.
But it's a big joint.
And on the other end of the park,
where I think we'll hang out in the park,
and on the other end of the park,
he confirmed it with pictures, there is indeed a brewery.
Amazing, what a good find.
So, so awesome.
It's all coming together.
We're also going to bring some snacks,
so there'll be some snacks there.
And it's going to happen at 3 PM Eastern time.
The meetup is in Pacific time, but that's just because that's,
I guess, how meetup.com runs it.
Listen, date times are hard, and programmers hate them.
As long as we've been using meetup,
we've always struggled with this.
It's like, why not set the time based
on the location of the event?
But they don't, I guess, expect you to be throwing
events in other time zones.
Yeah, we're not like the normal folks.
Anyways, we've got about 24 people, including
ourselves so far, going.
But I'd love to see as many that could make it,
because we don't make it out there very often.
So again, it'll be in Raleigh, North Carolina,
on Saturday, April 9 at 3 PM.
And we have details at meetup.com slash Jupiter broadcasting.
I think it's like the Nightdale station run.
There's a park there.
There's a barbecue joint.
If you know the area, we'd love to see you there,
because it's going to be a blast.
And then from the category of how amazing is our audience,
I got an email from listener Cole.
He says, a longtime listener here.
We've met many times at Linux Fest Northwest
in episode 444.
You were talking about some RV problems.
I am an electrician with 20 years of experience
in the building trades in Seattle.
I'd be happy to help any way I can.
And so I reached out to Cole.
Wow.
And Cole's coming up next Saturday
to hang out with Hadi and I at JOOPS.
That's amazing.
Because he said he wanted to see the power system.
So we're going to show him the power system.
I'm going to show him the wiring that's still not working
that we've kind of patched around.
Oh, for your slide.
And see if maybe he has any ideas for that.
I know it's a simple job, but it's just
we tried patching it up, and it's still not working.
But I am trying to get a road trip ready.
So this is going to be a big help.
And there's a really great walk-up diner.
I don't know if that's what you call it,
but there's like a walk-up diner 10 minutes
from where we're parked.
I thought maybe we'd go in and get a little lunch.
Cole's about to find out.
Yeah, he is.
Oh, it's going to be great.
Our audience, they have so many amazing skills.
Yeah, they do.
It's so great.
It's just, man, you're sitting there.
And some people are behind, but they're like,
oh, I'm going to give it a shot anyways.
I'll reach out.
And I know I'm about a month late, but I'll try.
Turns out you still have problems.
They sure do, Wes.
I do.
They're better.
But Wes, I still definitely have problems.
All right, so we're going to break this up,
and we're each going to present our topic this week.
And I think I'll go last, just in case they go long,
because I can make mine as short or long as I need.
Only because you know what it is.
Yeah, that's true.
That's true.
So we'll start with Brent, and I'll
begin the decryption process.
Now, to make sure that Wes and I had
no idea what Brent was going to talk about,
he did all of his show notes in the language of love
this week.
What do you have for us, Mr. Brent?
Well, I did write my show notes en Francais.
And I also threw in a few little social decoys.
So I'm just curious, do either of you
have any idea what I'm about to talk about?
Decoys, really?
I love this.
You're trying to throw us off your smell.
I see what you're doing here.
OK, so a quick scan of a I'm not trying to read it,
but I'm trying to read it is I see something
about voter method technique, and then I also
see something about a DMG to image file.
So those are separate things.
I don't know how they relate.
I'm looking at the commands.
I see HFS plus in here.
Oh, yeah, what's going on there?
So I'm feeling like maybe this is something
about converting a DMG, but I don't know, because.
Or is it a trap for Mac users?
Right.
Oh, yeah, it's very mysterious, Brent.
It sounds like you have no idea, which I'm totally fine with.
No, it sounds like we're way off.
Are we way off?
You have little tiny hints, and that's
what I wanted this to be was kind of interesting.
I wanted to give you guys little tiny hints,
but they'd be so not obvious that you actually have zero idea.
OK, I got another.
OK, the other thing I'm noticing in here
is that our app get installing CD to ISO,
and you're likely converting something
that was old to a new image standard,
so that way you can access it in a machine that needs it
as an ISO file for some reason.
Yeah, you do have a link here that has some dates,
like 2005, something Brent, 2007.
So old media would make sense.
Yeah, yeah, all right.
You guys have only dug down to layer one.
That's great.
But I was thinking about this kind of interestingly,
because when we came up with this concept,
I thought, OK, I'm going to write mine in French,
because that seemed to work last time.
Everybody sort of loved that, and you guys,
as far as I understand, don't understand French that well,
despite it being pretty close to English.
And then it got me thinking, any language you don't know
is a form of encryption, because it may look kind
of seemingly familiar, and yet you can't figure it out.
But I didn't want it to be too easy,
because you could just go and convert that in Google
Translate or something.
So glad you guys didn't do that, and thanks for not breaking
my encryption so easily.
We have, I mean, we're somewhat comfortable with the honor
system.
So my topic, I think, is each of us
will have something to say about it.
So Chris, I think I'll go with you first, and so here we go.
So I would like to know, each of you, how you manage,
or if you even have a way of managing a knowledge
base, a personal knowledge base.
So this is a topic that's dear to me
and that I have found extremely useful,
and there are a few technologies that I'll mention
once you guys are done that I use.
But I'm curious, for information that you
learn on a daily basis, which is how it is for me,
how do you record that stuff?
Where do you record it?
Has that been working for you?
How have you done in the past?
Boy, what a great question.
What a great question, and I will actually
be touching on this a little bit today.
But I will say this, it depends on the context.
I feel like there's institutional knowledge
about how things work in JB that need
to be captured in one way.
Then there's knowledge about how my server set up
in my LadyJuice RV, how that's built and interconnected.
That's another type of knowledge that needs to be captured.
And then there's the family records, medical records,
maintenance records for your vehicles, and all of that.
And each one of them, I've kind of
stumbled into different solutions.
And I mean, I don't love that, to be honest with you.
And some of it's because maybe I started tracking
this particular thing 15 years ago.
And this next thing I started tracking,
I started tracking two years ago.
So I'm using something more modern.
So I have a bit of a range depending on the topic.
It's a bit of a hot mess.
I fantasize about having one central knowledge
base of all things, but I also don't want to manage that.
Yeah, that was sort of my approach as well.
But I feel like you mentioned a bunch
of different types of sensitivities of information.
Some of it you want to share.
Others, it's deeply personal, and you
should keep somewhere that nobody has their hands on.
So that's where my curiosity came in
is I feel like shortcuts to the things we learn
are deeply personal.
I have a giant folder of notes that are specific to technology.
And someone else who might look at it
might have no idea what it actually
is because they're all just shortcuts to spaces in my mind.
They're like reminders of there might be a command there.
And if you don't understand what it is,
then you have no idea what it does.
But through decades of learning about R Sync, for instance,
I've memorized most of the flags that I use on a regular basis.
But sometimes you just need a quick little, you know,
you need to be able to get there really quickly.
So, Chris, do you have access to this stuff on your phone
or only when you're at home?
Or is there a favorite platform that you're using right now
that you're really excited about?
This is where Tailscale changed it for me.
Because with Nebula, I had connected my servers.
But with Tailscale, I've connected
all of my front-end systems.
And then all of a sudden, the stuff
that was the domain of Lady Joops
and only lived in Lady Joops now existed
on this private mesh land that I have.
And that all of a sudden opened up all of access
to all of that stuff that I had stored there.
So now I do have access to all of it.
But my most common high-level way to collect information
is I generally attempt to just store the link where
I found that information and archived if possible.
So I've used a lot of different tools,
like WallBag and Pinboard and Deego and, geez,
probably ones I'm not even remembering at the moment.
There's different eras of those kinds of tools.
For sure, right?
And so a lot of times, I have, like,
say something with WallBag or Pinboard, I will tag it.
I'll tag it with a show, a topic, a project that's
mentioned in there.
And then I can go back and filter on those tags later
and find the links.
And then we've even gone as far as generating
bots that ingest the feeds and these tags
and then put them into different discussion groups that
are relevant to those shows.
And so that was sort of the next step,
is then exposing that information
to the appropriate place once I've ingested it
so it doesn't just get out of sight, out of mind.
It sounds like a nice level of sophistication, actually.
Wes, I'm curious about you.
Yeah, you know, I've also kind of dabbled with various tools.
And I've had a few different wikis that I've run for myself
and also kind of kept, like, some of the open source
Kanban board systems.
So far, Markdown files and plain text
has been mostly what I've stuck with.
I think because I don't actually, at the moment,
have that much, I'm not really cataloging or using
the interrelationships of data very much.
A lot of the things that I tend to have
will be focused on a particular domain and then have examples.
Or, yeah, Chris, you've said some archive of links
and sort of, like, here's some references
if you want to go dive back into this topic.
And here's an example of what you were playing
with last time you were here.
Right now, I don't care that much
about going to find my own notes from that beyond what
Grep is doing.
I know that there's a lot of tools for that.
I just didn't find myself really taking advantage of it.
Right.
Sometimes if you just see the source again.
OK.
Yeah, yeah.
What about?
It's not great, though, and it's not fancy.
And to your guys' point, I don't have a way.
I've thought about doing it.
I just kind of haven't of, like, capturing that stuff on the go.
So I just have ways of sending myself notes for later anyway
that I just integrate.
What about dollar sign day job where
you're, like, developing maybe a piece of code
or solving a problem?
Do you have anything to store?
Like, do you ever go back and, like, oh, I
know I solved this problem a couple of years ago
and have something tucked away?
Yeah, I mean, that's a similar kind of thing, right?
Various scripts and sources on the same stuff.
But it's mostly just files with, you know,
there's, like, a little bit of folder structure.
Are you more likely to just write the solution again
from scratch with modern skills than go back and grab it
and just re-implement?
I think it depends, you know?
I find that, yes, it will probably
need a little bit of diving back in anyway.
So it's sort of like, how much do I capture
and how much do I provide ways of getting back
to where that knowledge, you know, where?
Because sometimes the difficulty is not necessarily
understanding.
It was just, like, how did I find the details of, you know,
where the inner workings of X thing was?
And so if you can capture a little bit of that,
like, here's how I used it, or here's
where those API docs are actually stored,
that's, like, all the jump back that you need.
But that depends, like, that's the frequency with which you
access it and plan to access it is a huge factor in all
of that, right?
True.
That sounds very similar, though, to how I operate,
very much how I kind of think about it.
And then I do have, for, like, bookmarks and stuff there,
I have more of a tagged system.
I've thought about having more, you know,
tags or other things more widely used,
but right now it's a bit of a minimalist system.
I'll be quite upfront about that.
I ebb and flow.
Like, sometimes it's minimal tags,
and sometimes, like, all the metadata.
See, I lean a little bit towards Wes's approach,
and I'll give you a sense of why in a second here.
So for me, I've landed on Nextcloud a few years ago,
actually, and just marked down text files for most of it.
You know, not everything can be captured that way,
but that has been an amazingly simple solution for me,
and with a problem I struggle with for years before that.
And I think the main reason is for future proofing.
Like, Chris, I know you're using some fancier technologies
than maybe some marked down text files,
and there's some people in the chat room who
I'll bring in in a sec who are also
using some pretty cool stuff.
But I worry about, you know, the maintenance that goes into that,
and, you know, in five years, is that stuff still
going to be accessible?
That's something I worry about.
Yeah.
Do you have a way to export it?
Even then, are you going to then convert it or hope
that whatever your next tool is supports importing from that,
or there's some middle ground format you have access to,
which is then maybe some kind of just plain or plainish text?
And there's another big constraint for me as well,
but I think I'll probably touch on that during my topic
as a hint.
Do-do-do-do.
Ooh.
In the chat room, Casey, can you talk a little bit
about what you're doing?
Yeah.
I've been using an open source app called Trillium
for about a year and a half now.
It just hit version 0.5.
So I highly recommend folks go check it out
if they checked it out before and it wasn't
quite mature enough for them.
I think it has a lot of the points
that you guys have been mentioning here.
So for starters, it does have markdown kind of support
when you're editing.
It's a rich text editor that uses markdown to indicate,
hey, you put a hashtag, that means that's a header,
or stars turn into bullets, things like that.
But I think that probably a little more on the nose of it,
it does have a self-hosted component to it.
So you can have a Trillium server
that you put in a Docker Compose config.
That's what I do.
You put it behind whatever security
you want to put it behind.
It has its own password system, but you can also,
I have it set up so I have to actually wire guard
into the network that I'm posting it on.
And then from there, it has desktop, well,
Electron apps or web browser interfaces to it
that you can use to sync your notes
from an offline copy of it to this centralized server.
So it's sort of a start topology.
And then what I think is really cool
is because it does have the support
for this centralized server, you get
a lot of really cool ways to get data into it.
So for instance, there's a browser extension
that you can just one click go when you have a page open,
and it will save a copy of the page in your journal
under that day that is fully searchable.
It's all in a SQL database.
And then you can just dump that SQL database
if you want to back it up, or it saves
in a particular directory.
So I just back up that whole directory on NextCloud.
But on top of that, I think it's really cool
because of the fact that, Wes, you
said you hadn't really talked about the interrelationship
between notes.
This has first class support for linking
between notes, which is always like, OK, that's table stakes.
But you can add metadata properties to your notes.
So I actually have on my journal both a weight tracker
so I can keep track of how I'm gaining and losing weight
over time.
And I just punch in the number via my cell phone
browser each morning.
And then I can go back and scrape that data later
to get a nice little line chart of how I've been
doing over the last few months.
All right.
All right.
You know what?
I'm going to check this out after the show.
You're kind of speaking my language here.
It does sound very cool.
It's really awesome.
It's still kind of new.
We're still only at 0.50.
But like, oh, man.
I'm really proud of how things have
been going on this project.
And I contribute both financially and technically.
So I'm always happy to speak to how cool Trillium is.
Takes a little bit to set up and get used to.
But once you get into the groove of it,
that's something that's going to stick with me for years
to come.
Yeah, I'm liking you're just entering information
in on the phone as you go.
So Trillium, we'll have a link to that in the show notes
if people listening want to check it out.
That's very cool.
I wanted to touch back on some of my show notes,
gentlemen, because you mentioned them.
There is a command that I ran there,
nice little find command that told me what the oldest
note is in my notes folder.
And so it looks like 2010 is the oldest modification
time from what I can gauge.
But the first time I really started building this knowledge
base was way back in 2007, I think, on a Palm Z22.
I don't know if anyone had a Palm device.
Chris, you might have had some.
Well, I actually never owned one,
but I definitely was responsible for fixing them.
That I definitely did.
I would have definitely taken it as someone
who would have grabbed it up right away.
They were super useful.
I dabbled.
Dabbling.
Yeah, I definitely dabbled.
And so this was a relatively simple device back then.
And it just took notes and kept track of contacts and things
like that, the things that we take for granted, I think,
these days on our phones.
But that was a total change, a shift in paradigm for me.
And I just have been endlessly curious and gathering
information ever since.
Yeah, I should have mentioned, I also
keep paper notes, which these are not the notes I
expect to capture forever.
But I really don't like it when I end up using the platform's
note system.
And I have ended up using Google Keep or Apple Notes.
It's just a quick note, Chris.
So that's definitely something I'm going to work on.
Trillium sounds like it has some real potential
over the long term there.
Yeah, Brent, I've watched you take notes, too, with paper.
I know just pen and paper can be a way you'll capture thoughts,
too.
Do you back those up later?
Do you save those notebooks?
Do you capture that?
I think you probably see me doing that mostly for show prep.
I have clearly decided that trying
to grab stuff outside of Linux Unplugged,
but trying to grab stuff for real deep person-to-person
conversation is just better on paper.
And I know you've dabbled with that a little bit.
But anytime I'm doing a brunch interview or a one-on-one
with someone, I find just spending five minutes
and writing things down, there's something
that happens where I hardly refer to those notes
because the process of writing them down just kind of
solidifies them in my mind.
And the thing that I think you'll
appreciate that I most enjoy about that
is that because it's in my mind in a slightly more
permanent way in that moment, I could then
be very creative on the spot about the layout
of those topics as the conversation's flowing.
Whereas on paper or notes, I find that a little bit
more difficult. So I'll often, as the conversation is going,
just kind of like scratch notes out or add extra ideas
as the conversation's happening.
But I certainly do keep all those notebooks.
There's one actually right in front of me.
I'm looking at it.
And it's every brunch conversation
I've had in one notebook.
And there's another one just next to my desk
here that's a bunch of scribbles about when we were at the studio
last doing a bunch of projects and just
some creative fumbling around with paper
and sketching out the server cabinet that we made.
And so I think there is a place for both digital notes you
want to keep for a while and paper notes that are
more just a creative process.
I do envision saving some of those,
but I never get around to it.
So there you go.
Yeah, there is something about thinking on paper that's slower.
It sort of absorbs into you as you have painstakingly
go along and capture all of it.
I can't quite understand why I could type a note
and forget it in 10 seconds.
And if I write that same exact note down,
I may remember it forever.
It's so weird.
Maybe it's because I do one thing all the time,
and I comparatively do the other thing rarely.
I feel like maybe that's a feature as well.
If you're typing something in a digital note,
the whole point is for you to be able to forget it
until you need it again.
So I don't know.
Different space for different type of ideas, perhaps.
Oh, I think shout out to OneNote.
I think we should get the OneNote story in the post-show
because I think that's a post-show topic.
If you're asking me.
Not quite on topic.
So gentlemen, you skipped right over a honeypot I left for you.
I left a little doom on the Z22 link for you,
and you guys didn't even mention it.
I'm surprised.
I did see that.
However, out of respect to the honor system,
I did not click any links.
So I saw it.
I left that there to test your sort of, hmm, ideals.
You were testing us?
Ouch.
Where's the trust?
Amazing.
So that was another decoy in here?
Oh, yeah.
I'm very impressed in both of you gentlemen
for not having clicked on it.
But maybe you'll click on it at some point.
Yeah, I mean, jeez.
Now I'm going to wonder.
Now I'm going to wonder.
Very good.
Well, a fascinating topic, and one
that I'd love to hear from the audience,
linuxunplugged.com slash contact.
lino.com slash unplugged.
You know, I don't know, I was feeling nostalgic.
I pulled out my old original notes
when Linode first became a sponsor like two and a half
years ago or whatever it's been now.
Paper notes that you still have.
Paper notes.
It's awesome.
So you go to linuxunplugged.com slash unplugged,
according to my notes.
And if you go there, you'll get $100 in 60-day credit
towards a new account.
And it's also a way to support the show.
We've been spinning up Linodes recently just to play around.
Actually, we always do that.
I should mention, this is a great way
to actually use Linode.
Because if you look at the pricing,
it's fantastic for this, especially
if you get $100 credit.
But it's a great way to spin up fast machines
and try out an open source project.
Because the software installs crazy fast.
Linode's got 40 gigabit connections
coming into those machines.
So they download software crazy fast.
They got all the different distributions.
In fact, I noted in my notes right here,
this is a legit note to Chris from two and a half years ago.
Personally, one of the things that I
think is great about Linode is that they have all
these distributions they support.
They even have Alpines, Arches, CentOS, and for some reason,
they have openSUSE.
You were a cold, cold fellow back then.
I just didn't like SUSE that much back then.
I just didn't like it very much.
And I was like, why would they have that?
Now I'm like, it's great.
Now I think it's a feature.
But I said, what I really get about them
is you can definitely tell they love Linux.
I put that in there, right there.
This is the fake paper.
It's not real, but it's not fake either.
It's paper.
What is it?
Who knows?
Those are things that still resonate with me.
But go over there and get the $100.
Try it out and build something.
The great thing is their infrastructure is so impressive.
I mean, they've been doing this for 19 years.
You could throw millions of users at your website,
and it's going to do fine.
But they have a pricing structure such
that if you just want a website, maybe you
want to run a public version of Prism for friends and family,
the photo hosting thing that's like Google Photos
but self-hosted, you could do that for a few users up there.
You could do it for thousands.
They have that kind of power.
And I've put it to the test.
We have, I think, probably one of the more stressful things
we've done is we ran a really aggressive test
against PeerTube on Linode, where
we spun up multiple Linodes because they've
got 11 data centers around the world.
So we spun up one Linode here, I think, on the West Coast,
or sometimes we do it in Texas, depending,
or sometimes in the East Coast.
But we spun up one Linode, started a PeerTube instance
on there, and then spun up a bunch of other Linodes
around the world and had it all connect
in to that PeerTube instance.
And then while we were live, we also
had the audience all connect in.
And really, it was damn impressive
what that thing could take.
They just really built it well.
So go build something.
Go try something.
I don't know.
Go learn something and support the show.
Linode.com slash unplugged.
That's Linode.com slash unplugged.
All right, just let's do a quick spot of housekeeping here
because I don't think we want to take too long on this.
But there's a couple of things we wanted you to know.
To know about.
There is a testing week coming up for Ubuntu 22.04.
The release is about seven weeks away.
And the alpha testing is happening now,
which is the 6th of March, to the 10th of March.
The beta release will be March 31.
And the final release of Ubuntu 22.04 is currently scheduled.
And they usually hit it every time for April 21, 2022.
So now is the time to help the Ubuntu project out.
And it really matters on these LTSs.
They reached out, and we wanted to make sure
that we got that covered.
Yeah, go bang on things.
See if you can break it.
Yeah.
And then we're thinking about covering IPFS.
By the way, I'm thinking about covering IPFS, guys.
I love it.
It just came to me this morning.
We've been meaning to talk about IPFS for a while.
It was an interplanetary file system, right?
I checked it out years ago, but I need a deep dive again.
I'm fascinated by its potential.
So let's talk about it.
And if you are a topic expert, send us
a boost to what you know or linuxunplug.com slash contact.
Let us know your experience with it and what you use it for,
so we can integrate that into our coverage next week.
Yeah, and then eventually it'll get captured in one trillion.
Yeah, probably.
All right, Mr. Payne.
Are you ready?
Yeah, let's decrypt this.
This is a big, big old block of something in here.
I have no idea, because I just figured why bother.
But let's begin the decryption process.
Oh, wait a minute.
Why does it smell like dog food?
Well, that's an integral part of the process.
No, actually this is just some base 64 encoded binary bytes,
which is itself a XE compressed brainfuck program.
OK.
And that was mostly just so that it could actually
fit in the doc in a decent way that
didn't overwrite the whole thing.
I was wondering how you were going to pull that off.
That's why I ended up going my route, which
we'll talk about in a bit.
Because if you properly encrypt show notes,
it's just going to be pages and pages, right?
So I was curious how you'd solve that problem.
Yeah, so that didn't seem obscure enough,
because this is all just a little bit of security
theater, of course, and the trust
that Brent didn't show for us.
If you got through base 64 on XE,
I wasn't sure if either of you had ever seen or heard
of brainfuck before.
It's a bit of a weird one.
I have heard of it, but I have to admit
I am ignorant as to really what it does.
But that's a name that just happens to stick.
Well, it's great because it's an esoteric programming
language, but it's super simple.
It has a very limited set of basic commands.
So you're programming at a super low level.
And that means you can't really tell what's going on here.
I'll put a little sample in the doc for you.
OK.
And we'll link to some.
It's right above my encryption.
Yeah, I see that.
And so you just see a bunch of dashes and pluses
and caret symbols.
But you can write a brainfuck program to print out text.
So if you get my brainfuck program,
load it up in a brainfuck interpreter, run it,
it'll print out my topic for the day.
But it's specifically your brainfuck program?
You built a brainfuck program?
Well, I used a tool that helped me do that, but yes.
So it's like your own personal executable?
Mm-hmm.
Cool.
Well, it's interpretive.
It's a little script that runs.
Yeah, so I have to have brainfuck installed.
And then I have to run your brainfuck little interpreter
thing.
Yeah, you put my program through it, and then it will.
Is it in the repo?
Oh, you can do it online, too.
Oh, really?
Like a web-based version?
OK, where do I go?
This is exciting.
This is quite exciting.
Yeah, so you're going to want to go to copy.sh slash brainfuck.
That's brain with a y, right?
No, OK.
All right, so I see I have a do it now.
I go take what you've added here?
Yeah, although you probably want the full version, huh?
Right?
This is big.
This is fun.
I'm curious how much data is in this, too.
That's one of the interesting things about this.
All right, so I've got the full thing.
Oh, no, so that won't, because I'm getting it for you here.
Oh, OK.
And we'll put a link to copy.sh slash brainfuck in the show notes,
too, because you've got to see this.
This is a great way to just pass information around right out there
in the open.
This is fantastic.
We're really teaching people how to be sneaky.
Isn't that our goal every week?
I guess.
How to take over the world.
OK, so let me replace this sample with,
and you'll see why I didn't paste it directly,
because it's kind of beefy.
All right, I'm looking forward to this.
Where to go with?
Oh, it's in there.
Oh, this whole thing, I have to take all of this?
Yeah.
Holy crap.
Do I start with the periods?
Yep, it starts at the.
Oh, my gosh.
No wonder.
Oh, my gosh.
This is, what, eight pages, nine pages deep?
Maybe more?
Maybe way more?
Holy crap.
If you double click, if you take a look in the rendered one.
Can you double click it, make it easy on myself?
Yeah.
I could have done that, huh?
Now do I hit Run or what?
Hit Run.
OK, oh, my gosh.
OK, so now I think is this markdown that's
coming out on the other end?
Yep.
This is pretty cool.
A moment of appreciation for open source
maintainers and community.
Oh, that's a great idea.
So tell us what you have here.
It looks like you have some links.
Yeah, well, I wanted to see if you guys kind of agreed.
You know, we talk a lot about open source.
Obviously, we all sort of talk about how we love it.
But I worry, too, that maybe we get a little jaded, somewhere
between jaded, take it for granted.
And then especially, like you and I on land,
we're covering a lot of the news.
And a lot of times, a lot of the news are like security issues,
like just whenever you're talking about NPM and left
pad and log for shell.
Color.js, Faker.js.
And there's just over the past year or two,
I think there's been a lot of articles kind of mentioned
just like this.
Oh, how will we solve open source software security?
And is it even tenable to use open source software?
And I mean, some of these are quite hyperbolic takes.
I'm not saying we take those seriously, but it.
All right, and the other end of the spectrum is,
how is open source going to be sustainable?
The cloud vendors are eating it alive.
Right, yeah, exactly.
And we talk a lot about the difficulties
of being an open source maintainer and all the work
that goes into it, often thankless or underpaid
or if paid at all.
So I'm not trying to say that those are not real,
because those are absolutely real.
I just worry that because we talk so much about them,
it's kind of like a news covers the bad things sort of same
thing that we forget sometimes about how nice it
is that we get to use and interact with all
this open source software.
And I had a small example at work this week
that I thought I'd share just as like, oh, this was nice,
and it reminded me about why I value being able to use it
and depend on it so much.
Oh, great.
So here I was writing some tests and built up
a thing on my system, and it's broken.
Doesn't work, weird cryptic error.
And a little bit of background is I'm using a couple of things.
One is PyTest, which is a framework for testing.
So it sort of lets you write your test files,
and it'll go find them on disk and get things up
and set them all up for you and execute them
and report back how your tests went.
Python also has asynchronous programming.
So in addition to regular functions,
you can make async functions.
PyTest has a plug-in that helps make these
act more like regular functions.
So you don't have to worry about some of the async details.
It'll handle automatically setting them up and scheduling
them on an event loop.
Oh, yeah.
So it does some little magic wrapping to make that happen.
I also use a project called Hypothesis,
which is a great name, although kind of hard to Google
sometimes if you don't know what you're doing, especially
because there's so much data science that's
done in Python as well.
And they also use hypothesis testing.
So you've got to figure out, OK, what do I pin this with?
Yes.
Thankfully, they've got a good read the docs page that
has basically all you need.
It's a tool for what's called generative testing.
And so the idea is instead of specific test cases,
not that you wouldn't do this too,
but to go to the next level, you describe
the shape of your inputs.
Maybe that's input to an API or to a particular function call.
And so that can be nested data structures.
It could just be like, this function
takes one integer and one string type.
And then Hypothesis will handle generating
a bunch of data from that description
and then throwing it against your function or API.
And then you can give it some sort of assertions.
They say, given this input, I expect these things
to be true about whatever happened in the background
or whatever output I got.
So then are you essentially doing
programmatic input at scale to these things?
Yeah.
And then it can handle making a bunch of stuff.
And then it tries to find little test cases to show.
And it's really good, especially with some strings
and other stuff, it'll test all the really big numbers.
If you say, I'd just take a number or weird Unicode
strings, it's a nice way to get yourself some extra testing
and check your own assumptions about what you
think your program is doing.
But to do that, they're both manipulating these tests.
Because Hypothesis sort of takes some of the role
of executing, because it does a whole bunch of examples
and kind of takes over from the test framework.
So somewhere between Hypothesis, PyTest itself,
and this PyTest async plugin support,
it just wasn't working anymore.
Jeez, man.
Now, normally, these stuff, whenever I find an issue,
it's already reported.
This time, it had only just been reported.
So I was able to dig in a little bit and help.
But I was just really impressed, because there had just
been a Hypothesis release.
Before knowing any details, they were already like, OK,
within 24 hours, we'll try to have this either fixed
or rolled back.
And admittedly, this is not a huge deal.
It really isn't, because I can just pin that to the last
release and move on.
It's a particular tool used during testing.
It doesn't affect production.
It's really not a big deal.
But I thought that was the thing.
They didn't need to be that immediate about it.
Yeah, it strikes me.
It's like, when the developer is engaged,
the experience at your position is so far above and beyond
the kind of care you get from a commercial software developer.
It's next level.
It reminds me when you and I were implementing that DCA bot
on the server here.
And you discovered, what was it?
There was a Python project in there that had a bug.
And the developer was all over it.
Oh, it was some of their getting the Docker stuff working
and how the libraries were packaged in.
Yeah, and I thought internally, there was some other thing
that you discovered.
And then you went to their GitHub,
and the developer was already all over it.
And you can really see, if you pick the right stack,
in other words, if you use a well-supported software
project when you're building stuff,
the response and the care and the enthusiasm and joy
that the developer can get out of it is infectious.
And it's, like I just said, it's beyond anything
you're ever going to get from a support contract.
I was also impressed in this case,
because it actually turned out that one
of the issues with the hypothesis had,
so it kind of has to detect, try to auto detect some stuff
about the function that it's wrapping and running under test.
And it got better at doing that with that latest release.
Unfortunately, that meant it kind of uncovered a bug
in the PyTest async IO support.
Or it was one of those situations where
it's kind of murky, like, is it both having bugs?
Is it, like, what should happen here?
But there wasn't any blame.
The hypothesis folks weren't like, no, this
was a PyTest async IO problem.
We're not doing anything.
They still fixed and did some updates
and opened an issue with the other team who
were receptive about it and got it fixed.
And so at the end of the day, like a day later,
I could undo my pin and just keep going about my life.
But seeing immediately, like, all the hard work
that went into it to make that happen.
Yeah, and not that, no, it's his problem, not my problem.
Which, it's not that I should expect,
but just with humans and, you know,
and we certainly sometimes cover the drama that can happen
in pull requests out on GitHub.
It was just nice to not see that.
Indeed, that is a great story.
Thank you for sharing that with us.
It does remind me that there is a lot of good going
on in open source, which is probably
exactly what we needed.
We'll have a link to BrainFuck, which
has looked like a great way to hide stuff in plain sight.
And it's neat.
There's just some weird programming languages out there
and it can be fun to play with.
That's absolutely true.
All right, so I decided for my topic
to encrypt it in a very in plain sight kind of way.
And I was also trying to solve the problem of how
to not completely overtake the doc with like 32
pages of characters.
And I thought, well, I could link to like a pastebin
kind of thing.
And I almost went that route.
But I felt like kind of was in violation
of the spirit of the idea.
And I thought we should have talked about that first.
So what I decided to do instead is go for a simple route,
a classic route that works every time.
A mystery in plain sight.
I went for steganography with a picture of Levi.
It's got a little bow tie in here.
And steganography is great because you can hide information
in plain sight.
And it would have worked perfectly
if I wasn't using Markdown.
But the encoder tool I used butchered my Markdown
a little bit.
So it wasn't great.
But I think the concept was still solid.
I felt like it.
So not only did you ruin partially your Markdown,
you made the picture of Levi slightly degraded,
which that should be a sin right there.
And 8.9 megabytes.
Yeah, it really.
It's like if you were looking to see which photo had
the secret information, and this isn't even
a ton of information, you would just look at the file size
and be the one of these is not like the others.
So it's not that sneaky.
But I have found this great little spots
from friends of the family out in really just
like the bottom of the Cascades, just really at the foothill.
But the only problem is, and we want
to go out there to visit them, but the only problem is,
well, it's a great thing, but there's no internet out there.
It's possible the Starlink might work.
But I actually, I don't know, because they
tried to get Starlink out there and they told them
it's not available.
Oh.
Now, I've decided what I want to do
is rebuild my offline Oracle.
And this is an idea that I've talked about on self-hosted
before.
And it's to create a self-sufficient knowledge
base in the RV that essentially creates
the experience of being online without being online.
And so here's my thinking on this.
Oh, I like this.
There are two different options, and I'm
going to play with both of them, but I'd really
like people's feedback too.
On YouTube server, YouTube DL servers,
I'd love it to be YTDL server, that runs in a container
on a Raspberry Pi, and it gives me a web interface
that I just drop a YouTube URL into.
And then it downloads in the background
and saves the MP4 from YouTube to my local hard drive
where I tell it to.
And then I have a local PeerTube instance
that is indexing that folder that these videos download to.
So then the idea being that later on when
we need to do something.
So we wanted to go out to this location
because our friends here are very handy.
They've helped us build things in the past.
But have the ability to watch the tutorials and stuff
that we have found so useful on YouTube
without having YouTube.
Right.
I mean, that's kind of a lot of the workflow, especially
for home improvement stuff these days, right?
It's like, can I re-consult this six times
so I can figure out what I'm doing?
Oh, it's so great, right?
Like, seriously now, if we need to go fix something
in the plumbing or check something with the wiring,
one of my first stops now is I check YouTube
and see if somebody else is torn this thing apart in their RV
and has replaced it before, or how do you
change the oil in the generator?
I learn via YouTube.
So I want to collect all those.
And I have a playlist where I've saved a lot of these
on YouTube already, not all of them, but a lot of them.
And I want to be able to add more as time goes on when
I do have internet connectivity.
I think Brent, Casey, and myself all have the same question.
Brent, take it away.
Chris, why are you landing on PeerTube instead
of something like Jellyfin or EvenPlex
that you already have in place?
That's a great question.
Can't you just download it to a folder there,
and it's already doing everything for you?
So I'll do all of the above.
I will have it indexed by Plex or Jellyfin.
So it'll be available on the TV.
But I am imagining, in five years,
we could be looking at 300 videos,
because it's not just going to be RV stuff.
It's going to be any kind of construction things
that Hideo wants to work on.
It's going to be gardening topics.
It's going to be an oracle of information.
And I think one of the ways to browse
that is by having a YouTube-like front end that
has search, that has categories, that has playlists.
I think there is real utility to that.
I don't think it's going to be.
And what's great about having this as my own oracle here
is I can consume it in any way I want.
So I could just bring up the file system
and look at the MP4 files.
I could bring it up on Jellyfin on the TV.
Or I could do PeerTube on our computer.
And if you think about how you kind of start
a project like this, it's usually
you bring up the laptop or something like that.
You start looking at stuff.
I think it's just one of the nice ways to do it.
But combine that with right now, and to your question earlier,
Brent, I'm using something called, oh, I always
get the name wrong, Wes.
Oh, I can't wait for this one.
And you only have it in your secret doc.
So we can't help you.
You're on your own this time.
I think it's Ranteo.
OK.
R-A-N-E-T-O. Ranteo?
Ranteo.
Ranteo.
I don't know because that E is before the T. I don't know.
But this, oh, god, it's such a simple but powerful tool.
Markdown-powered knowledge base.
It sits on top of just Markdown files, not a database.
You could SSH in, write it all up in nano, like a gentleman,
save it to the file system.
And then the next time you load this page up,
it'll be on there.
And then it displays it as the HTML version.
Moustache templates.
It also gives you search.
It's just basically it's a Node.js app, right?
I think I don't remember, but I seem to recall just
being a Node.js app.
But it's a really nice way to present the information.
It supports syntax highlighting.
It does have a search powered by Lunar, L-U-N-R.
And of course, it uses Markdown, which is my preferred way
to take notes.
And so you can document, like what I've done in the past,
I'll document something using VS code.
I have the SSH save as extension installed.
And then I just save as to this directory.
And then the next time we pull this up,
all the information is there.
That's nice.
I'll also, it's where I also capture my Docker compose files
for looking up later on.
And I really like this workflow.
But I'm also, and I would love feedback
if anybody out there has tried Bookstack.
I'm looking at Bookstack.
This is really similar.
It's at bookstackapp.com.
This leans a little more towards wiki.
And I know, oh man, I know there's so many wikis.
Tiny wiki, tiddly wiki.
I know, and they're really good.
I like, no one else can see this,
but you pointed at the IRC room as if they were trying
to send you wikis.
I totally like just wagged my finger.
I know chat room, I know.
Like a torrent of wikis is coming for you.
The links are coming.
But Bookstack is a simple, self-hosted,
easy to use platform for organizing
and storing information.
And again, Markdown supported, MIT licensed.
It's up on GitHub.
And you can use a WYSIWYG interface
to take the notes if you like.
It supports things like chapters.
You can organize things into books.
I mean, it seems really powerful.
And it also has some authentication options.
You can actually be, that's my one thing is.
Yeah, that's a whole other layer here.
Yeah.
I don't have that kind of security with Ranteo
or however you say it.
And this even supports two-factor authentication,
which could be really nice when you
want to put sensitive information in there.
And I could then take it to the next level.
And it'll also integrate with a single sign-on provider
and that kind of stuff.
So I'd love to know if anybody has experience with Bookstack.
Send me a boost or send me an email
and let me know what your experiences are with it,
if you have.
Because I'm considering it, but it seems like a big jump.
And then last but not least, I think
it's pronounced Heemdall, H-E-I-M-D-A-L-L.
This is what I'm going to set on our home
pages for our browsers at home that is a really easy
to build home dashboard, where I'll have links
to the knowledge base, links to Home Assistant.
You can have widgets in there.
I'll have the Bitcoin price in there
because I like to torture myself like that.
And you can have news headlines in there, feeds in there.
Very easy to set up.
And just about all of this is even available as a Linux server
I.O.
Oh, cool.
Great.
I don't know if all of it is, but most of it, if not all of it.
So this is my journey I'm starting.
My goal is by August to have all of this implemented.
The reason why I'm giving myself that much time
is because I'm still considering hardware changes.
I'm going to go into a lot more detail and self-host it
once I have it all figured out.
And I'll document the journey there
and what I end up with it all.
But I'm at the very beginning phase
right now with the idea of really taking this offline home
that I have in our in-juice right now, which
is made up of two to three pies, depending
if I want my camera recorder going or not.
And I'm curious to know how I can refactor that
and what this next generation of software is looking at.
I'm kind of reconsidering doing my entire home assistant setup.
Like, it's a big summer project coming up.
Yeah, I like this.
Yeah, I think it's going to be good.
And I suspect it's all going to really come down
to just the least friction for the family
to get the information they need.
Like, whatever system they take, whatever they're good with,
I can adapt.
I'll adapt to that.
Yeah, you just need them to buy into the system at all, right?
That's going to be part of this process
is you've got to get family buy-off.
Otherwise, for example, if my wife, Adia,
isn't inputting the information, then we're
only capturing half the stuff.
And she keeps really good track of all of the repair records
and stuff.
And that's a great example of something
I'd love in a system like this.
So we shall see.
But I'd love to hear people's experience with it.
And it was an adorable picture of Levi, wasn't it?
Oh, I could share the link, couldn't we?
Yeah, I'll put a link to the show notes
if you want to run that through a decrypter.
That's my Levi right there.
Can you tell us which piece of software
to throw your information behind to Levi?
Your Dagonography, let's say?
You know, I tried a couple of desktop apps.
But then I realized I wanted to just do it here
at the studio machine.
I didn't want to install anything.
So I just Google searched a web's Dagonography tool,
which is why I think it botched my markdown.
If I'd used a proper app.
You're throwing shade on the tool, huh?
Oh, yeah.
My markdown's not solid, dude.
What are you talking about?
My markdown is absolutely solid.
It's not my fault.
And now, as the French say, it is time for Le Boost.
Why don't we do, before we get to the Boost, just some super
compact follow-up to last week's episode.
Last week, we talked about the Umbral project,
which lets you run containers and do self-hosting
with their front-end UI.
And they followed up on our episode
and let us know that one of the features they're rolling out
in the near future is the ability
to uninstall the Bitcoin node aspect of that.
So Umbral sounded interesting, but you
didn't want to dedicate the disk space to a node.
That's going to now just be like one of the apps
that you'll be able to install or remove.
Nice.
Yeah.
Also on the topic of Umbral, a software update
included the Snowflake Tor proxy, which is really easy.
Just one click to install now.
They're doing this to help Ukrainian and Russian
journalists and activists and civilians that
are trying to bypass internet restrictions
and really anyone who needs to use the Tor project to help
bypass censorship.
This Snowflake Tor proxy is a standalone project on its own.
I'll have a link to it in the show notes
if you're interested.
And it's a way to add some capacity to the Tor network
without revealing your own IP.
It uses an IP from the Tor node internally.
And you're helping route some of that.
And it's run by volunteers.
And now it's a one-click app install on Umbral
if you would like to do so.
Slick.
But we do have some boosts.
We do have some boosts.
Batvin321 sent this in two days ago.
50 sats, which is like 0.2 cents, I think.
Something like that.
But Bat lives on the East Coast.
And he's looking to hitch a ride with somebody from Maryland
for five hours to get to the meetup.
So if you want a road buddy from Maryland on,
send a boost to us with your contact info.
And we will put you guys in touch.
Heck yeah.
We got another boost from Dave Jones.
He seems to be one of our favorites.
He says, 8 terabytes.
Holy crap.
You have enough room for 50 years of blockchain.
Huzzah.
Yeah, but I got to run multiple nodes, right?
I got to have space for it.
I'm running other nodes.
Yeah, you're on all kinds of chains.
I love it.
George Boosts in with 1,000 sats.
Trying out the Lightning Network.
Thanks for the awesome recommendation.
Thank you, George.
One of the reasons we are featuring the boosts
in the show, because seriously, that's not a lot of money,
although we really do appreciate it.
I think the more we build this out,
and it's a peer-to-peer network, the more possibilities
we have down the road of finding other alternative ways
to finance free software.
And we have free software developers in Ukraine right now
that their whole world's just changed.
We have free software developers in Russia.
Their whole world just changed.
We need to have a system that maybe runs parallel
to all of that.
And so as the audience of the world's largest Linux podcast
begins to adopt a system like this,
we are building out a peer-to-peer network that
is the same exact kind of audience
that is likely to help contribute to free software.
So I think there is, when George gets all hooked up here,
he's trying out the Lightning Network.
He's building a pathway now that if his favorite free software
project down the road starts doing this,
starts running free software and taking a free software
currency over the internet, he now
has all the plumbing to support that project.
I think that's huge.
Also, Matt wrote in as well.
He says, y'all should really check out Start9's embassy.
Same idea as Umbral with a different approach.
I personally use Umbral and love it.
But it seems like the Start9 guys
are focused on the long term.
Great interview with one of the guys from Start9,
and he linked to us.
Guys, have you heard of Start9 before?
We got a few people writing in about it,
and I hadn't heard of it before.
I don't think I had either.
No, no.
It looks great.
Same kind of idea.
You can either buy a box.
So they got a $630 box that has a two terabyte SSD connected
to a Raspberry Pi 4.
And it's that same idea of a plug and play private server
that allows one click installation with some good
sane defaults of some of the most powerful popular self
hosted applications that allow you to take sovereign control
over your data, or your finances, or your chat,
or whatever it might be.
And what do you know, a DIY guide with a Raspberry Pi.
Yeah, that's pretty nice.
I thought their model was kind of interesting too.
You can buy Start9 OS for like $180 USD,
or you can build it yourself, which
is their seemingly, I think, only sort of do
yourself open source version.
So I thought that was fascinating,
and hopefully it keeps the project going as well.
Seems like they're doing some interesting work.
Yeah, I mean, imagine, dude, if this thing
helped you de-Google completely, that's
probably worth $180.
Oh, I'd say so.
Yeah.
Sometimes it's nice to see that they've at least,
whether or not you like it, they're
at least thinking about how to support themselves and keep
development going.
So if you're going to buy into the platform,
that's probably good.
The reality is putting a price on it that's $180 is real money.
That's $5 isn't going to pay the bills.
$180 maybe actually makes a difference,
and it makes a project sustainable.
I think we're going to have to come around and realize
that boutique software, anything that's a small boutique team
working on something for a niche audience
is always going to be struggling to monetize.
And that comes for content, or it's
true for free software development.
And that's why I look at the price $630 for a machine,
that's probably not even a lot of profit in that for them.
But there's definitely some, because they're
building around a pie and a case and a whole setup.
So hopefully start nine is something
that could be around for a while.
Because sovereign computing, as this term
is becoming more popular, I can really
wrap my head around that.
It doesn't have to have anything to do with Bitcoin.
It can just mean you switched to Bitwarden from LastPass.
Maybe it means you switched from WhatsApp to Matrix,
or something like that.
It is, I think, going to be a really important topic
on the show for a while, is applying self-control where
you decide it's appropriate, and not being a hardliner about it,
not being a purist about it, but being
sensible and realistic and practical about it,
and realize that each one of us has our own comfort level.
So let's talk about what some of our options are.
Yeah, Chris, I agree.
And Dave also wrote in about start nine.
He sort of clued us onto that.
But he asked a question about Tor, specifically.
And I thought that was worth mentioning,
since we forgot to mention it last week.
He said, I've been hearing you guys rave about Umbral.
And it sent me down the rabbit hole
of this type of all-in-one server solution, which
I'm diving in with you.
While doing my research on Umbral,
I caught a post about start nine.
On the surface, it seems very similar to Umbral,
with a focus on Bitcoin and privacy-based apps.
What I found interesting was their use of the Tor network
to allow secure access to your home lab remotely.
Have you seen this before?
I currently rely on WireGuard via TailScale
for my home lab access.
But I was intrigued by the Tor idea.
That is really handy.
Umbral does this as well.
We didn't really get into it.
But my methodology is actually to use TailScale.
I'm a little more comfortable with that.
And I prefer to turn the Tor stuff off.
However, the nice thing is some developers
are building Tor support into the client app on your phone.
And so you can connect to your Umbral services
or your start nine services over Tor.
The advantage to that is, besides the obvious privacy
advantages, which are not insignificant,
the advantage is that you don't have
to fumble around with NAT or port forwarding
or any of that junk.
You don't have to start bringing in outside connections
from any WAN address into your LAN.
You don't worry about any of that.
These systems help generate Tor addresses
for your individual applications running on them.
Now, you can look into the security or safety of that.
I have preferred just to turn it off.
But it's certainly nice, because if you leave it on,
then you get one of these apps like BlueWallet
or some of these other apps that can
connect to these different services.
And you give them your Onion address,
or whatever it's called, or whatever the URL is.
I really don't use Tor enough to probably talk
about it intelligently.
But then the app can connect to it without, again,
any ports being opened or anything like that.
It's really nice.
Yeah, you can see it acting as sort of the standard, right?
That, yeah, different parties can come to,
and then you're all in the same high-level network.
Yeah.
You know, what I loved about these platforms is that,
and I think I mentioned this last week, is that for me,
it was just maybe a touching stone
on investigating a bunch of technologies I'm curious about.
And so getting to play with Tor, I've heard of it for decades.
But to have it just be accessible so easily via Umbral,
it was really fun, actually, just booting up the Tor browser
and seeing kind of how that works.
Maybe we should do an episode on unique use cases for Tor.
And maybe, because that kind of would go well with our IPFS
episode.
Yeah.
I don't know, something to think about if people have any ideas.
Send us a boost.
Boost a grant.
Get a new podcast app at newpodcastapps.com.
And then send us a boost and let us
know what you think we should cover with Tor or IPFS.
That would be pretty great.
I think that could be an area that we could probably
find some unique uses for.
I wonder if there's a way we could get access
to a system in the studio using Tor,
and then people could do something.
I think we could have fun with that.
Come find us at a future Onion address.
Yeah.
We may have one for you soon.
Or join us live and hang out while we're
producing these shows.
We do them on Sundays at noon Pacific, 3 PM Eastern,
at jblive.tv, or you can t'watch us at twitch.tv
slash Jupiter Broadcasting.
And then you get a t'watchification
when we go live.
And that seems pretty useful.
See you next week.
Same bad time, same bad station.
If you haven't caught Linux action news yet,
what are you doing?
How about some accurate, concise coverage
that tells you exactly what you need
to know without any of the stupid drama
added in with clear explanations on how it impacts you
and the wider industry?
Because that's Linux action news.
That's what you're missing.
Oh my god, that's embarrassing.
Linuxactionnews.com.
Go get it.
More Westpane over there as well.
So how could you miss it?
Links to everything we talked about today
are at linuxunplug.com slash 448, our contact page
for your emails, which we love, linuxunplug.com slash contact.
Thanks so much for joining us on this week's episode
of the Unplugged program.
And we'll see you right back here next Sunday.
Oh.
Mm-hm.
All right, while we vote on the title at JBtitles.com, I think we should give some airtime to One
Note because I know it has its lovers. And in full balance, I think it's only appropriate.
So none of us use it. So New West has offered to be the One Note guy.
You know what I appreciate on a Linux show, a guy who's willing to come on
and admit he uses One Note. So tell us why you love it so much.
I don't know if I love it so much is the right term. Try and save a little bit of face there,
right? Fair enough. But I like how it's so incredibly easy to set up and get going and
you don't have to worry about manually syncing anything. You don't have to worry about self
hosting. It's kind of along those lines of why your average person doesn't have a NextCloud
instance, right? Because there's a lot of things that you have to do in order to get that kind of
functionality working. And so I've never looked into note taking apps. And y'all always talk
about, oh, I just take my notes in Markdown or whatever. It's like, I'm not great at Markdown.
Not yet. So I can't really, that doesn't come as easy to me. And so the fact that One Note just
syncs and I can access it via a web UI as well, right? Which is how I use it on Linux.
Oh, I was going to ask about that. Yeah. Okay. Hold on. Wait, wait, tab the brakes.
Is this a hosted OneNote that you're accessing? Is it your own local instance over the web? Like,
how does that work? It's Microsoft. So, so you just, so it's like a hosted thing. Yeah. It's
like a hosted thing. Yeah. Okay. Yeah. And then I log into my Microsoft account and it syncs
all of my OneNote notebooks that I have. I've got the apps on my phone and my tablet too,
which is great. It's got really good pen support. So I've got like a Tab S6 Lite. And so if I want
to do handwritten notes, I just pull out my pen, I pull out my tablet and I just write handwritten
notes down. That part's tempting too. Best of both worlds right there. I would like to try that.
Man, I would like to try. Yeah, it's really, it's, it's super easy. And I think the one thing I don't
like about it, aside from obviously the privacy concerns, right, is probably that it gets a little
messy. I feel like I have to go in and prune my notebooks because I've got a whole bunch of them.
And because you don't really control the data, like I haven't, I, and I haven't really dedicated
a lot of time to this either, but I find that I have like a bunch of old notebooks that I've kind
of like created and jotted one or two notes down. And now they're just like forever. They're getting
synced across all of my devices. Yes. All right. Well, thanks for the OneNote perspective.
Here's to you, Microsoft.
