I'm having a rough day, Wes.
I've officially wrecked my uptime
and I'm struggling with that.
Had to reboot, eh?
What happened?
Well, had to shut down.
Had to shut down.
Yesterday, we were in the studio
and it started to heat up
and we're looking at the forecast
and it's saying 104, 105 Fahrenheit.
And I just said, no way.
We don't have air conditioning in the studio.
The little portable unit that I have running right now
basically becomes worthless after about 90, 95 degrees.
So I just, I shut everything down.
I said, we're shutting the studio down.
We bumped Coder from Monday
and we're gonna record it on Wednesday.
And I turned off the mixer, which we never do.
I turned off the recording systems, which we never do.
I didn't turn everything off,
but I turned a lot of stuff off.
And I got out of here.
I evacuated, everybody evacuated.
And I kind of had a, I had like a brilliant moment.
You know, sometimes I impress myself, Wes.
It's really like a Star Trek scene here, you know,
where you've got to turn down all the power
so we can hide in the nebula.
Although, I don't know if we can really hide from the heat.
Ooh.
Got it all shut down.
Yeah, so I decided to go out and play in the snow.
So the wife and I loaded up in the car with Levi
and we headed out to Mount Baker,
which is about 45, 5,000 feet up in the air.
So it was like mid eighties, which is still pretty warm.
And you found honest to goodness snow.
Yeah, we had a snowball fight.
So I'm out there having a snowball fight.
And I checked my phone because it was the first time
we were in reception in about two hours
and they have a tower up there.
And I got a message from Daniel Fore.
This last weekend, Wes and I helped them
with their elementary developer weekend.
We ran the stream.
We were like the wizards behind the curtain.
And I had forgotten to upload day two's file before I left.
So I'm up there on the mountain, playing in the snow.
And I see a message from Dan saying,
hey man, I'm at my desk.
I'm like ready to edit and stuff.
Like, but I don't have the file.
And I feel like such a jerk.
So we had to pack up.
We threw a few more snowballs, but we had to pack up,
get back in the car and drive for two hours
back to the studio.
I pull into the studio.
I open up the garage.
I pull into the garage, which is also the server room.
But at this point, I had the server off.
And Hadeen and I, kind of at the same time,
we open our doors, we step out
and we're just hit with this wall of heat.
Like somebody sitting there with a blow dryer in our face.
It was so hot.
We look at each other and all we can do is say,
oh my God, and run for the door.
We get to the door and you know how they tell you
if the doorknob's hot, there might be a fire
on the other side?
The doorknob was hot, Wes.
The whole door was hot.
The whole room, every object was radiating heat.
It might've been like 120 degrees
because probably since about 2 p.m.,
the sun had been directly on the garage front door
and the heat in there had just built and built and built.
So we bust out of there as fast as possible,
get into the main studio, power up the OBS rig,
get that file uploaded that I promised Dan I'd get to him.
And then I went through the studio
and I did a complete shutdown like I've never done
since we've moved in here.
Every single device off, Wi-Fi access points powered off,
cable modem unplugged, everything totally turned off
because I didn't want anything to die
because the heat was outrageous, 120 maybe in the garage
and 100 degrees in the main studio itself.
It was horrible.
So I just turned everything off
and then I came in early this morning before the show
and it was like the bad old days of my IT gig
where I would have to go around
and get a client back online after a power outage.
So I start with the edge devices,
you get the cable modem going,
get the firewall up and running,
then I get the server booted
so that way all of our network services are available.
Then I go get all the client machines online.
And then last but not least is the studio,
which that has to be booted up in a very particular order.
So I get everything turned on here,
I sit down and now we're doing a show.
So hopefully everything works.
Yeah, I can't believe you actually made it back online
to the live stream.
We'll see, hopefully I have all the buttons
in the right place.
I have a feeling I forgot something.
Hello friends and welcome back to your weekly Linux talk show.
My name is Chris.
My name is Wes.
Hello, Wes, good luck keeping cool during this episode,
which is brought to you by the all new A Cloud Guru,
the leader in learning for the cloud, Linux,
and other modern tech skills.
Hundreds of courses and thousands of hands-on labs.
Get certified, get hired,
get learning at acloudguru.com.
Well, coming up in a very warm edition
of the Linux Unplugged program,
we are setting out to try something
that I think has been sort of rattling around
in the back of our minds for a while now.
When Fuchsia gets to a certain point,
is it gonna become a threat to Linux?
We got an email into the show
and they asked some really good questions.
So we're setting out to find out.
Wes is gonna try the absolute state of the art
of Fuchsia on the desktop
and try to determine if long-term it's a threat to Linux.
And at the same time,
I'm setting off to test something else.
I wanna try out the latest state-in-the-art
of desktop Linux for new users.
I think there might be one true distro out there
that we should start considering
we recommend to all new Linux users.
And I'll tell you about that in a little bit.
But before we get there,
we have to say hello to our virtual lug.
Time-appropriate greetings, Mumble Room.
Hello, hello.
Hello. Hello.
Howdy.
Namaskaram.
Well, hello everyone.
It is great to see all 24 of you in there,
including the mayor, AKA Jack from Alma Linux.
Jack, welcome to the Unplugged program.
Hey guys, how are you?
Great.
And we have lots to talk about today.
So if you wanna chime in at any point,
just tag me in the chat room and I'll try to work you in.
The Mumble Room is open to our community
and we invite people to join us.
You can get details at linuxunplugged.com slash mumble,
and then join us live on Tuesdays.
But let's start with the new goodies
that your future Linux desktop will be getting really soon.
Linux 5.13 was released.
And I think the headline feature here, Wes,
is really the M1 bring up support
that is landed now upstream.
Of course, it's still early days there.
There's no accelerated graphics and a lot more to work out,
but it's in and that should provide a pretty nice base
for development going forward.
There are also new Linux 5.13 security features in the mix,
like a new Landlock Linux security module,
Clang control flow integrity support,
and optionally randomizing the kernel stack offset
at every system call.
There's also some AMD fun this cycle though, don't worry,
around FreeSync HDMI support, nice.
Yes, I love to see the FreeSync support landing.
The Landlock LSM stuff is a really interesting story.
And if that type of thing appeals to you out there
in the audience, let us know.
We would happily do a deep dive.
We just don't know if it's too niche or not,
but let us know at linuxunplug.com slash contact.
Linus says, this is a fairly big one.
It's not like the biggest we've seen,
but it's one of the bigger five series releases
with over 16,000 commits.
And if you count, I guess, all of the mergers,
it's more like 17,000.
And 2000 different developers participated
in this release of the Linux kernel.
And it's not slowing down.
5.14 has some big things in the works,
including dropping its legacy IDE code.
Sorry, Wes, your IDE disks are gonna have to go.
Oh, no, not my legacy NAS.
I thought you'd be worried about your CD-ROM writers.
But Neil says that's not actually true.
We're not losing IDE support.
This is the completion of, gosh,
I think like 20 years of effort to kill this code.
So a long, long, long time ago,
the code around supporting what we call IDE drives,
which formerly I think are called parallel ATA
or PATA drives, was unified with the code
that manages SATA drives.
And so that's all through the same subsystem.
That's why you tend to,
that's why you see SDA for drives,
even on older systems,
like the legacy IDE subsystem uses the older HDA
or HDB or HDC.
We haven't seen those in forever.
And that's what this code controls.
I believe, I'm not totally certain.
I think the only thing that still uses the legacy IDE code
is the M68K port in Linux.
All the rest of it uses the newer stuff.
So the M68K code was ported to the new stuff.
And so the legacy code can go away.
Let me tell you something.
Linux was the best back when we called it HDA.
It's been crap since then.
No, actually, I'm also really excited to see
ButterFS is getting more performance tuning
and other solid improvements in 5.14.
We talked about this one before,
but the Raspberry Pi 400 is getting mainlined.
Dell's been working on privacy screen support
for a long time.
That's gonna make it into 5.14.
Whoa.
And Intel and AMD CPUs are getting some nice solid features
that are getting added,
including Thunderbolt 4 and USB 4 support.
Plus don't think you have to be a file system hipster
to get some goodies in 5.14.
No, no, XFS improvements for large scale deployments
are coming down the line.
And one thing that really caught my eye,
latency reduction work for USB audio devices.
Hey.
Yeah, that's exciting.
And you combine that with the improvements
we're seeing in PipeWire.
PipeWire is getting really great.
They've done some big improvements
with their jack stability.
And you combine that with a low latency kernel
and the improvements that are going into 5.14.
Early, early tests are seeing latency,
audio latencies in numbers
that we've never achieved before in Linux right now.
Hackaday has been experimenting
and they're seeing two milliseconds
in the entire chain right now,
which would be record breaking for Linux.
And that's not even with the 5.14 improvements yet.
Wow.
Yeah, very excited about that.
Did you see the other kind of,
I don't know if this is really a feature of software
so much, but it's gonna make PipeWire
at least more intelligent with Bluetooth devices.
Oh yeah, this is kind of a big deal
they're talking about at least with the release of 0.3.31,
which is a database of quote unquote,
weird Bluetooth hardware.
That way PipeWire can apply specific tweaks
for each of those devices.
It's basically a bunch of stuff
that Android has figured out over the years
that now PipeWire can take advantage of
to hopefully work a little bit better.
And I think it underscores
the one little nice benefit of PipeWire
that I didn't really appreciate or tune into at first
was all this Bluetooth stuff.
It's turning into a really nice implementation
and a place where all of it can just work
instead of sort of the weird like,
oh, you can't do it in also anymore,
only you have to rely on Pulse.
It was just a mess.
It's such a practical solution,
but yet it's not really been done yet.
And it's, well, we're gonna make a list
and we're gonna make a list of stuff
that just needs tweaks to work right.
And we'll catch probably 80%
of the most popular devices out there.
And what they've done is they've grabbed
the original data set from Android.
So they have a massive data set
of popular headset devices to start with.
So it's just like a ton of well-supported,
well-known headset devices are just gonna work
with these out of the box,
assuming you can get it connected to your system
in PipeWire 3.3.1, in 0.3.3.1.
That is really great to see.
And the project just continues to crank out
really, really solid releases.
So a big congratulations to them.
We love seeing this kind of stuff.
Keep up the great work.
Linode.com slash unplugged.
Go there to get $100 in credit and you support the show.
Linode is how we spin everything up in the cloud these days.
And when it's crazy hot here
and I had to shut down everything,
I was so glad Linode had my infrastructure
for the listeners covered in their data centers.
They got 11 of them around the world
and they've got air conditioning.
I mean, they've been around since 2003.
So they've been able to build
like just these ultimate network pipelines
between their data centers.
They've become their own ISP
and they're able to invest in machinery
that is just killer performance.
So these are sort of like the top level reasons
why I love Linode.
But you know, Linode was so receptive to the idea
of the Linode on the road road trip.
The idea kind of was like a baby seed
of like, hey, let's do a meetup.
And then it kind of widened into a conversation
where Linode was like, you know, we've got a few ideas.
And they have been instrumental
in creating what I think is gonna be
a super important team reunion for the JB crew.
I think it's gonna be just totally critical
because we haven't seen each other really
since the whole transition to going independent
because the pandemic's been going on
and we've all been sort of isolated in our homes
and we haven't had that human to human connection
that makes working together a lot more possible,
but also I think just sort of regenerates
our creative energy.
Linode's gonna make that trip possible.
And I am so grateful for them
because they're supporting our network,
they're making these shows possible,
they're making this reunion and our meetups possible,
but they've also supported things
like Linux Fest Northwest for years,
the Kubuntu project, there's a list on their website.
There's a lot of projects they've been involved with
for over the years and that's really how I met them
the first time was at,
I think it might've been Texas Linux Fest,
it was some event I was at and they had a booth there.
And when some of the other vendors weren't taking the time
to really do all of the things necessary
to have a good booth, Linode was there enjoying it.
They were just enjoying it, you know?
And that was when I was, that was a couple of years ago.
I was like, yeah, I'm gonna try out Linode.
That experience.
And then it transitioned into kind of a passion
and now here they are supporting our independent work
and making our team reunion possible.
And they just have such a great suite of options
from object storage to super fast systems
to $5 a month rigs and they're 30 to 50% cheaper
than the major cloud providers like AWS
and they've been around longer than AWS.
They started years before them
and they do everything with Linux.
They are all in, everything they're doing with Linux
and that means you can take it as deep as you want.
If you wanna build it up from scratch
and build the whole stack, you can,
or if you just wanna do the one app click deployment thing,
you can do that as well.
And they support a lot
of your infrastructure management tools
like Terraform and Kubernetes and Ansible.
So you can pop it into your existing infrastructure
with ease.
So go get that $100 credit and support the show.
It's a really nice way to get going
and help your buddies here make a podcast.
That's linode.com slash unplugged.
So Deepin has a release this week
and we actually haven't really discussed Deepin much
but 20.2.2 came out this week
and it introduces a lot of interesting features
that caught my attention.
And I have to be fully transparent with you guys.
One of the reasons I haven't talked about Deepin a lot
on the show is I don't fully understand
the owner model behind Deepin.
I've read their EULA and I've read their privacy policy
and everything seems good there.
I've monitored the network traffic to a degree.
It's only been like 24 hours
and I haven't seen anything sketchy
but I don't really totally fully appreciate
and understand that whole relationship there.
And so I've been hesitant just to cover it on air.
But after today, I couldn't hold my tongue anymore.
I mean, I'm gonna make that disclaimer to you
and it's something I'm going to investigate more
and it's something I recommend you investigate.
However, there is clearly some neat stuff happening here.
So what Wes and I did today is we decided to divide
and conquer the work on the show
because we wanna cover both Deepin and Fuchsia.
So Wes went off into Fuchsia town
and I went off into Deepin town
and I thought I'd come back and tell Wes
that it was cutesy and it had a nice little UI
on top of like Plasma or something, but move on.
I thought that's what I was gonna come here.
I really did.
That was my bias towards this.
That's what I'm expecting.
Is that not what you're doing?
I'm gonna start with what I would normally
end the review with.
And that is, I think this is the distribution
with some disclaimers I'm about to make
that people should look at and consider giving
to new users of Linux who are just looking
for a Windows replacement.
They're not necessarily looking to become
a quote unquote Linux user.
And they want something that is fancier
than say Windows 11.
And I mean it.
And what they've done now in Deepin
is a brand new app store that includes
the ability to install Android apps.
So they're right there with Windows 11
on that feature as well.
Now in my version, does not work at the moment.
And I'm gonna continue to play with that.
But that wasn't really why I downloaded this distro.
Deepin is also the first Chinese distribution
to support Secure Boot.
And they've been working with Microsoft
to get that signed.
Interesting.
That adds a layer to your conversation around
trust in some sense.
Yeah.
It's not just you making some assessments about them.
At some level, Microsoft is too.
Whether you trust Microsoft, that's another question.
But it's a point anyway.
And you know what else, Wes,
is it's something we need to kind of start
paying attention to more as Windows 11
is gonna force this issue.
And so Linux distributions are gonna need
to have Secure Boot support for a lot of Windows 11
compatible hardware.
Especially if you're targeting new users, right?
Right.
So Deepin checks that box.
And then they have a nice calendar application,
which God, that's like giving a glass of water
to a man in the desert when you're on Linux.
They have a really, really clean, clean, consistent UI
across all of their default album, draw, image viewer,
mail applications.
Fact, I took some screenshots of what I thought
were some of its UI highlights,
and I put them in an imager album
that I'll have linked in the show notes
and I've just put in the IRC.
And their desktop, their Deepin desktop,
which is their own thing, is pretty special.
It's pretty unique.
This latest version's pretty great.
And they're really clever and polite
about the way they ask you if you wanna go
into total efficiency mode or would you like eye candy.
And they'll walk you through it in a way
that is totally approachable to either get a system
that has all of the fancy turned up
or is just really kind of lean, mean on the GPU.
And I liked that a lot.
The Deepin menu is clean.
It's very simple.
The most recently installed applications
are highlighted with a blue dot.
Your most frequently run applications are in a list,
most frequent at the top.
And then of course, things are also sorted by category.
The task bar is the cleanest little system bar
I have ever seen in an operating system, not in Linux,
in a desktop operating system.
They just nail it so hard.
Everybody needs to steal what they're doing.
It's clean, it's simple,
it's easy to see the icons in the system tray.
They've taken the best of what macOS
and what GNOME 40 is attempting to do
with virtual desktop management and multitasking overview,
and they've nailed it.
It's easy and simple to move windows
between virtual desktops.
They use a vertical layout,
but the way the vertical layout works,
you can see all of the applications
and you can move them easily.
The terminal is clean,
it's consistent with the rest of the UI,
and it gives me more functionality and tweaking
than GNOME Shell does,
but not like a crazy amount like console does.
It like just hits that sweet spot.
Happy medium, huh?
And then the system monitor
is one of the best dang looking system monitors
out there, Wes.
Yeah, I'm looking at this right now and sexy.
Yes, I mean, it's really well done.
The whole thing really comes together.
Their appearance,
configuration and personalization is fantastic.
You can choose between light mode, auto,
if you wanted to switch, dark mode.
They support accent colors,
like is coming in elementary six.
They let you dial up and down the transparency
and the window effects with simple controls.
You can even turn off the rounded corners
or make them just slightly less rounded,
but it's all done in a way that's so clean.
It makes the other configurator screens
on other distributions look complicated
while giving you more options.
I mean, I'm telling you, this is so slick
and it's got built in backup options
into the system settings that are crazy easy to use.
The file manager starts really big and clear,
but then can be kind of refined
into a more typical power users file manager.
Again, striking a great balance
between configuration options and not overdoing it
and also making those configuration options easy
and approachable.
And honestly, somehow they lay out in a way
that makes it easier visually to go through the list
and decipher what options are available.
It makes it more approachable that way.
And it's all running on top of Debian
and something else they do that's kind of fun
is they ship it with this,
what they call dual kernel mode.
Dual kernel mode, huh?
Yeah, how about this trick?
Two kernels are installed at the same time.
They by default are using like a more conservative LTS kernel
but in the grub advanced menu,
you can choose a newer kernel
with better newer hardware support.
And it'll just boot that and everything works just great.
And you know, the Deepin package manager,
which is apt with their own repos, keeps it all up to date.
Oh, so it's not like you have to do a one time,
point in time pick, like, I mean, they're going LTS
or, you know, something a little newer.
No, you can choose as per boot if you want.
Yeah, and I tried swapping between them
and I think you need the later one
for the Android app support.
So I just went with the later one, cause why not?
And then, you know, I don't know how that's gonna work out
because like I said,
the software center never quite worked right for me.
That's not why I'm using this distro though.
And there was still parts of the software center
of the UI that are in Chinese.
When you launch the browser, which is based on Chrome,
the latest version of Chrome, when you launch that,
you get the Baidu search engine,
which gives you results in Chinese.
So you definitely would need to, and this is my disclaimer,
besides just research the back of the company,
but all of that, but you also would need to tweak
some of this stuff for a new and new user.
Cause some of it comes up in Chinese
and you have to maybe switch the search engine
to your preferred search engine, which is obviously Bing,
and then tweak those kinds of things.
But I imagine as every release goes on with Deepin,
these problems become less and less
because I have followed the distro for a while.
I just haven't talked about it a lot.
And these items have slowly been getting corrected
and it's been making it more and more approachable
to a Western audience for a while now.
And it's been trending in that direction.
So you'd have to tweak some of those things
and before a new user could sit down
and really fully use it and have a great experience,
but it truly feels like something different and fresh.
It feels very well thought out.
It is a new experience to the face of Linux
and it installs very fast.
It's probably the fastest Linux distro I've ever installed.
And it's probably the fastest setup time
because I was just on board to experience Deepin
as they have it by default.
I didn't want to tweak it much.
I just turned on dark mode
and then pretty much was happy there.
And then when I'd open up each individual application,
I'd maybe have to make some kind of tweaks,
maybe to the file manager or to the terminal,
but it'd take me about 15 seconds and then I'm done.
And I was up and going in this thing in probably an hour.
Yeah, okay, that's not bad.
It's a fresh take.
And you can absolutely use the Deepin desktop
on other distributions.
I'm not saying you only have to use Deepin Linux
to try out the Deepin desktop.
What are the advantages there?
I'm curious how that experience might differ
to just getting the benefits, the surface level,
sort of DE experience versus something
like that dual kernel stuff,
which I imagine you need the whole system to have.
Yeah, I mean, to me, it's like akin
to running Pantheon on Fedora or Arch.
It's like you get some of the experience,
but it's not quite the full representation
and it's not definitely what they intended.
So I wanted to try their take on it.
I'm kind of, I think, in part of this, Wes,
when I do these tests, I think part of me is hoping
to just fall in love with a Debian based Linux
that I could just use for a long time.
A base you're comfortable with,
but something that keeps you happy on the surface.
Yeah, but still none of them have quite scratched the itch
like Fedora is recently.
That really seems to be with DNF and toolbox.
And then the concept of just really close to rolling,
but not quite there.
I like their term of leading edge.
That's where for me, as my personal desktop,
I'm gonna, I think stick there
because I like being pretty current.
I think it's overall, it's better
if in the free software ecosystem,
if you're fairly current and you're not lagging behind.
And sometimes Debian does tend to lag behind
in certain areas.
And while Deepin makes up for that in some places,
ultimately it's not quite the workstation recipe I want,
but I wasn't just being obnoxious when I said earlier,
I think this could be the distro for new Linux users.
Right now, if you're recommending Linux Mint to people,
then you're who I'm directly addressing at this moment.
I want you to try Deepin out and take a look at it
and see if maybe you could start recommending this to people.
Now I'm not saying you have to change
and Mint could be working great,
but there's something really special here
because it's a real fresh take on the desktop
that feels more modern
than what Apple or Microsoft are putting out right now.
Even with their Mozarati coming out and the Windows 11,
I think it feels like it's still ahead
of where they're going.
And the team is really putting a lot of thought into it.
And whenever you see a Linux distribution
that's getting that much love and care and thought
put into it,
and they're doing something new and fresh like that,
it's worth anybody's time to check out.
But if you're in right now,
and you're in that area where you're a Mint recommender,
think Deepin has to be on your try list.
Yeah, sounds like maybe there's some ideas over there
that need to be more widely enjoyed and shared
and thought about,
and that injection of some of those fresh ideas
into perhaps an otherwise stale Linux ecosystem.
I'm gonna stick with it for another week,
even though I think ultimately I'll be back on Fedora.
I have it on my ThinkPad,
and I think I'll probably reload that.
I had Windows 11 on there,
so I'm kind of in this weird area right now.
I was trying out Windows 11 for Coder Radio,
which I'm gonna talk about tomorrow in Coder Radio.
And then I thought,
well, now that I'm done with Windows 11,
I'll try Deepin out.
And that's been really great.
And I think I'm gonna stick with it for another week,
but then I've got to make that decision after that.
Think I'll probably go back to a Fedora distro,
but I don't know if it's gonna be a Plasma Spin
or the GNOME one.
I just, I'm in this weird phase right now.
So while I let that thought simmer,
I'm gonna enjoy Deepin for just a bit longer.
Now, Wes, we got some cleaning up to do around here.
This is ridiculous.
Ooh, yeah, messy.
Yeah, I stormed out of here and just made a mess.
Like right here, look at this.
It's just laying on the floor.
This says right here,
hey, meetups, two of them coming up.
One in Denver and one in Salt Lake City.
Details are at meetup.com slash Jupiter Broadcasting.
Let's go see.
Are people signing up?
Let's find out.
I hope so, because, you know,
otherwise, why are we going to Salt Lake City, right?
Look, so far we have 20 that are going to Denver.
Nice.
And nine that are in Salt Lake City.
I think that means those things are happening.
That's awesome.
Right there.
Very nice.
If you'd like to join us, get accounted.
You know, be accounted for.
Get counted.
Meetup.com slash Jupiter Broadcasting.
Our Telegram group's going right now, you know.
That's where the conversation continues.
The show wraps up.
You can always send us an email.
But every now and then, it's just a quick thing.
You might want to grab,
maybe one of us are hanging out in there at that moment.
You want to grab us, something like that.
We got a Telegram group.
You go in there and do that.
Jupiter Broadcasting.com slash Telegram.
That's over there.
Matrix Info Two is at our website, LinuxUnplugged.com.
And then, of course, those emails
at LinuxUnplugged.com slash contact.
And then the last little bit of housekeeping wisdom
that I will depart with.
Don't steal our wisdom.
Yeah, wouldn't that be great, though?
That'd be my power.
That'd be a great superpower.
So if I had a superpower,
it would be that I would take wisdom
and transmit it to you
that Luplug is going on every Sunday.
And that it is wise to attend the Luplug.
Because hanging out with like-minded Linux users
rejuvenates the soul in a way
that even antisocial, inverted,
like totally don't want to talk to people,
people benefit from.
How do I know that?
Because I've done it and I've benefited from it.
I don't want to get on a thing
and talk to people I don't know on a Sunday.
But you know what?
Every single time I've done it,
I've absolutely enjoyed the experience.
It feeds you.
And it happens every Sunday.
LinuxUplug.com slash mumble, join our virtual log
and hang out.
And then, then you've got that mumble software all set up
and you can join us here in the pod on a Tuesday.
I'm sorry I called it pod.
It's weird housekeeping.
What can I say?
All right, so we've got some fuchsia fears
that I think reflect the thoughts of some of our listeners.
Do you want to take this email from Mr. Light fixture?
Mr. Light fixture wrote in.
Hey, just wanted to write in
because I know you people like to keep up with fuchsia.
Did you know there's already a desktop OS based on fuchsia?
It's called Dahlia OS and they have two additions.
One based on the Zircon kernel
and the other based on Linux.
It's open source, has an eye candy desktop called Pangolin.
And the devs seem to focus on flutter based apps
as the main kind of programs on the system.
If you did check it out,
I'm curious to know your thoughts.
Does it have potential?
What does fuchsia on the desktop mean
for Linux distros as we know them today?
Could fuchsia supplant desktop Linux
or even Chrome OS in the future?
Big questions there, Chris.
That's a good question.
You and I have been kicking that around a little bit
because we follow the development of fuchsia
pretty closely for Linux action news.
And there's more movement there than in the past.
Google has recently rolled out fuchsia
to the first generation Google Nest hubs.
And they're positioning it very much as a modular OS
that could work for IOT
but eventually make its way up to phones
and yeah, Chromebook style devices.
And one wonders, what would that mean for Linux?
You know, what is truly the concern there?
Would it be necessarily useful in server workloads?
You know, I don't know,
but desktop workloads potentially,
mobile workloads potentially.
And if that's true, the ramifications of that
could be a significant drop-off in kernel developers.
Because when you look at a lot of the source code
and development time coming into the Linux kernel right now
and the things that are driving features
like even having an LTS kernel,
a lot of that comes from mobile right now.
A good portion of that developer time
comes from companies that are bringing up mobile support
or fixing something so it's more efficient on mobile,
which often has great, great effects too on desktop.
You know, we get better power efficiency
or we get something that comes along
as a knock-on effect of that.
And I think if you were successful,
say in the Android marketplace,
devices say five years from now have a fuchsia base
and Chromebooks five years from now have a fuchsia base.
I think the impact would not be directly felt
by Linux users from that,
but it would be a reduction in kernel development
and contributors to the kernel.
A lot of what happens at these huge scale companies
is that kind of like custom development.
We need X, we need a system that meets our needs here.
And in the current times,
that Linux is the easiest way to get that done.
It makes the most sense.
You can kind of leverage what other folks are doing,
but there are also some impediments, right?
Like Linux is an old kernel.
It's got the design decisions it's made
from a long time in computing.
And sometimes you might have to, you know,
go back and forth a little bit,
look at some of the stuff like features
in the Android kernels that have been hotly debated,
whether they should or could be merged up to mainline,
eventually did, some still haven't been.
So there's also some friction there.
And I think maybe some of the worry is that
if fuchsia or something like it gets far enough along,
the value proposition might change
where Google or Facebook
or some of these other big companies decide that,
oh, hey, this OS over here,
it's just easier for us to get what we need here
because we don't need it to support
all the hardware in the world
or every possible type of computing, right?
We have six different product lines.
We need it to support that.
And otherwise we don't care.
Yeah, I think that is very reasonable.
And it's not just maybe as simple as that.
And we're gonna talk about more about this in a moment,
but fuchsia being the modular OS that it is,
it may be very simple to bring up fuchsia support
on older hardware as well for compatibility purposes.
That may be a very straightforward process
with the way that fuchsia is designed.
Maybe this is the context in which we talk about Dahlia OS,
which is trying to kind of bring together
the best of Linux and fuchsia into a desktop experience.
And so we thought let's have Wes try this out
and see how practical and realistic this is,
is maybe a one day Chrome OS replacement
or something like that.
All right, well, right out of the gate,
it's still super early days for fuchsia
and the whole Zircon kernel.
And because of that and because of their goals,
Dahlia OS is looking to provide a fast and stable experience
on nearly every computer, at least so they say,
and including from their little notes here,
including the 2004 desktop tower,
all the way up to the latest generation of mobile notebooks.
So right now they've got a dual kernel approach
so that users with the newer hardware in theory
at some point would be on Zircon,
but to get all that legacy software support,
all those older devices, they plan to use good old Linux.
So it's interesting, maybe it represents
an approach of the future, a bridge,
but right now the only thing that I could actually get
to boot was the Linux version.
Okay, and like we were kind of alluding to earlier,
it doesn't seem like that's a weird
kind of stretch for fuchsia.
It seems like you kind of can plug and unplug
these different parts of the fuchsia stack
and plug in a Linux kernel to get access
to device drivers and whatnot.
How does that work exactly?
Well, I mean, I think it depends
on what we're talking about in the fuchsia stack.
So one thing here about Dahlia is, yeah,
a lot of it is targeting Flutter
and Flutter and Dart, of course,
work just fine on Linux, right?
It's got its own render, it's got its own setup.
So that makes that part of the stack flexible.
And then on the Zircon side, it's just so new, right?
Like from the developer perspective,
it's just exciting to see something
where you can make changes,
you can learn from your past mistakes.
And because it has this history of being quite minimal
and leaving a lot of things out of the kernel,
especially with some of its more
asynchronous non-blocking nature,
it seems like if needed, there's a lot of areas
where Zircon could be extended to support stuff
that Linux previously did if it actually needed to.
Yeah.
One aspect here is because of like
the asynchronous non-blocking stuff,
it might make it really easy for system calls
to be serviced on a different core
than say the one making the call.
Just some other sort of like nitty gritty details like that
that make me wonder if Zircon might end up
being a better fit for some of these new architectures
we're seeing with more custom different cores
than say Linux and being targeted at general computing.
I think that is part of the concern
that's gnawing at some of us long timers just a little bit.
Like we know in the back of our mind,
it's a low threat likely on the desktop
and in its current state for sure, sounds like.
However, the thing about Fuchsia is the whole entire thing,
the entire OS stack is being built
with Google's lessons learned with Android and Linux
and all of that.
Like they're taking, oh, this didn't work.
So let's build it this way.
And they're really clever people there at Google.
And so I think we all kind of implicitly know
they've solved some problems
that are gonna be appealing to developers
and Google has the might and the scale
to really push something if they want.
And those things are concerning
because if it's gonna save developers time and money
and if the simplicity means it's quicker
and perhaps a little more secure,
that's gonna be very attractive.
Like for example, the Zircon kernel only supports ARM
and x86 and 64 bit versions of that.
Like they don't have to mess
with all the old legacy architectures that Linux supports.
Like they don't have to play.
That's not in their wheelhouse of targeted devices.
They just, they don't have to do that.
There's a lot of stuff like that in the security world too,
right, where there's just some more flexibility
or compromises that were chosen a different way
in the Linux world that they can choose
a different path on in Zircon.
So when you're using it, Wes, do you get a sense
that they're building it to work as a workstation
because in the screenshots that you have linked
in the show notes, I see that they have like a VM manager
and stuff for virtual machines.
Yes, so again, we should be clear
at what different things we're talking about here.
This is going back to Dahlia OS,
which I think in some sense is a hedge.
So, you know, we're worried about future.
We're worried about Zircon and some of these things.
Part of that worry to my mind is,
I mean, we're not worried that it's not open
because of course it is, you know,
at least it's open source.
But one thing that's been so amazing about Linux
is that it's community driven, right?
Like it's not just, yes, as we mentioned a second ago,
there are some huge companies
that have major influences on it.
But at the end of the day,
it's the kernel maintainers and it's Linus
and it's the community of people actively developing it
that are making those calls.
Google and Facebook don't get to do whatever they want.
But Fuchsia has been this weird little skunk work project
in the background.
And of course we've got some kind of bad taste
left in our mouth from, you know,
the AOSP sort of just code dumps over the wall.
I wonder if Dahlia, I mean,
with their kind of clever different kernel approach
and building this technology on Flutter
and in theory to support a future
more developed Zircon kernel,
I wonder if this is a hedge against that success,
you know, because instead of just Google
and some of these more companies building,
I don't know, you know, smart devices
or running it on some like container security system
in the cloud, this might be an area
where it could be generating a real community
that we might actually recognize.
That is a wild thought.
So this is a hedge.
If the Fuchsia on the desktop thing ever does take off,
at least we've got some community driven,
community built workstation OS.
And it doesn't look too bad.
So they've got their custom,
some desktop environment called Pangolin.
And it's kind of pretty.
I mean, it looks like a Flutter app.
It's got a strong sort of Google design inspired aesthetic.
And a lot of it is still super early days.
They've grayed out all of the apps
that just don't work at all.
But even in the ones you can open,
well, not all of them work as nicely as you might think,
but there's a lot in here to like,
including a sort of Android style settings menu
that's very accessible, easy to use.
And a clever custom process and container monitoring app
that looks like once it's working a little bit nicer,
could be pretty great.
And these are Flutter applications essentially?
These are, yeah.
Okay, I mean, it looks very touch friendly,
but you could still use it with a mouse.
Yep, and I was using it to virtualize with a mouse,
no problem, but you're right.
I think a lot of the elements here,
they could be touch friendly.
It's definitely not anything radical,
if you're familiar with sort of a Chrome OS
or a material or an Android design,
yeah, you're gonna know what this looks like.
Yeah, I'm getting strong Chrome OS material vibes
from this, which is I guess what you would expect.
Though having Deepin on the same episode as Dahlia,
it so is at opposite ends of the spectrum.
Deepin is this complete, polished,
fully feature rich desktop environment
with desktop applications in an app store
and a Chrome web browser
and a full Linux Debian based subsystem, right?
And then Dahlia is this weird fusion of Linux and Fuchsia
with the Pangolin desktop on top of it all.
And I have a hard time even keeping it straight, Wes.
It seems like a whole new hybrid monster to me.
Yeah, that's what's kind of fascinating too,
is seeing it all work out in these different ways.
Like I guess we could have a whole, you know,
Flutter based desktop running on top of Linux.
Sure, some folks might wanna run it on Zircon and Fuchsia,
but maybe it's just fine for us to run it on Linux too.
I don't know, I'm not saying I'm in love with Flutter
or the look of this,
but I do find it really interesting
to see these ideas sort of built out
and see more community involvement with it.
Maybe Flutter could be a really great technology
for us to build toolkits, you know, and desktop apps,
just like we use GTK and Qt today.
And I agree with ByteBitten in the IRC,
like this could be a compelling environment
for the Pinebook Pro kind of device.
Oh yeah, very true.
You know, a nice ARM64 machine
with a good desktop environment on it
that really could have some decent features.
I just am still adjusting to the entire concept.
And I think I'm part of this
where I'm kind of having to reassess
is where I've come down on Flutter to a degree
because, you know, when Canonical kind of went all in
and announced their installer was gonna be in Flutter
and kind of suggested that other developers
follow them in that direction,
I thought, ah, I don't think that's it chief.
I don't think that's quite it.
I don't think they are, but you know what?
When I see this and when I play with Flutter
and I've gotten emails in from people
who are building Flutter apps,
I think to myself, maybe I misread Canonical's read.
Maybe they got it right.
And then you go through this album
that you've linked in the show notes
and a lot of these apps are like 80% there already.
And it's not like they've been around for years.
They've been able to catch up
to what we would consider modern standard features
in a remarkably short time.
And that's noteworthy because we really, really could use
a healthy third-party developer ecosystem.
And I'm not saying Flutter is necessarily it,
but I think going through this
and having you explain this to me, Wes,
I think it's made me reevaluate
that I need to be more open-minded to it
and that if we wanna see an influx of apps
that are not Electron,
I think I've gotta consider this
a little bit more freely than I had before.
I have to be a little more open to the idea
of Flutter apps on the Linux desktop.
I think it's hard to maybe separate its origin
and who's pushing it and all of that from,
at the end, the technical merits
and what sort of interesting stuff do people make with it.
Unpluggedcore.com, thank you to our core contributors.
This episode, the last few have been brought to you
right by, in this spot right here in the show,
they've been brought to you by our members.
Just members, people out there making this show possible.
Thank you everybody who's become
an Unpluggedcore contributor.
You, you're my sunshine.
I don't know, what else can I say?
I mean, you make the show possible.
We've been in a tight spot this month
and a lot of you stepped up.
And I'm really, just really very grateful.
The summertime sale is going on for a little bit longer,
a $1 off membership for the lifetime
when you go to unpluggedcore.com
and you use the promo code SUMMER.
I could go on such a soapbox
about how I think member-driven media
is so critical right now
and how I just am so grateful for everybody who stepped up
and provided some support,
but there are still, still spots.
We could still use more.
We're definitely not at the spot
anywhere close to where it would replace a sponsor yet,
but maybe one day we'll get there, unpluggedcore.com
and use the promo code SUMMER for just a little bit longer
and you can get a dollar off the lifetime of your membership.
John writes in regarding the AUR on Ubuntu.
This was last episode where we kind of dove into
just about any approach we thought might work
to get our favorite AUR hot apps
on our boring old Ubuntu or Debian desktops.
John runs LTS Ubuntu 2004 with LXD and LXC and says,
I can run just about any secondary Linux OS
in a container, Arch, Fedora, Alma, whatever,
with pretty much a full system, sans kernel, of course,
and they run blazingly fast and almost like the real thing.
I can even run them in a VM if I so choose,
although that's still a pretty early feature of LXD.
I know Docker is the future,
but I find myself using LXD more than I do Docker, frankly.
Here's how he does it, though.
By loading an X11 profile
that automatically displays to my host system
when I spin up a new instance,
I can run, e.g. Arch,
and install anything I want from the AUR,
displays to my host as if it's native
and if it's truly running in Arch,
which seems much simpler to me
and more stable than some kind of hackery
running the AUR compiled directly.
Now, I don't have a full desktop, of course,
but that isn't what you said you wanted anyway.
At any rate, with this setup, I've been pretty happy.
I can run any application I want from almost any distro,
and it runs as if it's native.
Takes seconds to spin one up, and it's great.
Clever setup, that is not bad, John.
I think that's a perfect use case in that scenario.
I love using Toolbox right now.
It sort of solves what I needed from it,
but I could see you using a setup similar to this, Wes.
I mean, yeah, you had me at containers,
and I'm a big LXD fan.
And I'm sure you could set up something similar
with Wayland, too, if you had some need
or just desire for Wayland-specific apps.
I kind of feel like I'm not feeling Docker is the future
as much as it once was.
I think it's going to have a very, very healthy
long-term future.
But Podman is getting more and more love,
and it's getting used just sort of as a back-end tooling
more and more by orchestration tools.
And there's LXD.
I mean, hell, there's still FreeBSD Jails.
I think what we're going to have is the concept of containers
and an OCI standard, and we're going to just sort of mix
and match the runtime depending on the application and use.
And it's going to be part of our jobs.
I use that term very loosely.
But it's going to be part of people
that are in the industry's jobs to figure out
which runtime and tools are correct
for the right application.
And I think it's less of a default
that it's Docker more than ever these days.
Yeah, really.
I mean, especially if you're getting
into some kinds of weirder use cases,
more system-specific or admin-type use cases.
I think Docker, especially with all the changes
that happened to that company and their now focus on desktop
and developer tooling, it seems like they're
focused very much on that container runs one thing.
It's meant there to be like running microservices,
isolating stuff out and deploying it into the cloud
or onto your container cluster.
And that's all great.
And of course, you can do those things
with Podman and everything else.
But between systemdnspawn, LXD, or even just the container
primitives that are being leveraged by stuff like Flatpak,
I think you're totally right.
You just need a file system image.
Maybe you want to build one yourself
or pull it out of a virtual machine.
And then at the end of the day, you're
kind of just assembling a collection of cgroups
and some namespaces and running a process.
And I think for a long time for me personally,
it'll be either Docker or Podman using Docker Compose
compatibility, because I do really like that.
But I'm a multi-container gentleman.
What can I say?
It's a lifestyle.
We have another pick, one of our famous picks for you here,
a classic, a real spinner.
It's called Mix, M-I-X-X-X.
And we've talked.
No, it's not dirty.
It's like DJ software.
We've talked about it before on the show.
You remember, don't you?
And it lets you be a smooth operator.
It mixes music together like a pro.
And it has new looks, new tagging capabilities.
And it also has new hardware support.
And very happy to say it now has support for recording
and streaming in Opus and high quality AAC codecs.
It can stream from the software itself out to your endpoint.
Wow.
Yeah.
We love Mix.
I've used Mix a lot on our live streams over the years.
So that's why I've mentioned it before on the show.
It's so neat, though.
If you just want to throw something on your machine
and just have it mix together music for you,
if you've got a couple albums or something,
and if you do that local music thing, it is so cool.
And the way it displays the music
and lets you crossfade everything,
it just is the neatest.
And it's just a fantastic open source app.
Or maybe you're just a nerd who's forced to socialize.
You're having folks over to your party.
You don't really want to talk to them.
But you can be there playing with Mix in the background,
playing great tunes.
Are we both just introverts?
Because both of us, it'd have to be a forced thing
to have people over.
It's not just something we do.
But some people do, Wes.
Some people, some people.
You could probably also pipe it into your Zoom calls
using PipeWire.
Now, there you go.
Right.
Thanks to our sponsor, Cloud Guru Sponsor.
You can find them on social media.
Pretty much anywhere that's a social media website,
they're just slash a Cloud Guru.
It's really easy.
So they're just about everywhere, slash a Cloud Guru.
We've got that thing, too, that social media thing.
The show's at Linux Unplugged.
And the network is at Jupiter Signal.
And then if you just want a website,
if you're old school and you just
want a website in your Mosaic compatible web browser,
you can go to jupiterbroadcasting.com
And if you are not catching Linux Action News,
you're missing all the news, the stuff that's
going on in the industry all the time in open source and Linux.
We're covering it there.
There will be a episode next week.
It'll just be a little bit later,
because Wes is going to be traveling,
like the gentleman man about town that he is.
And like a pro, even after traveling,
we're going to sit down and we're
going to record an episode of Linux Action News.
I mean, the news doesn't stop.
That's right.
I can't either.
No, just can't stop.
Won't stop.
So go get that at linuxactionnews.com.
But for us here, we do it live.
We do it every single Tuesday at noon Pacific.
See you next week.
Same bad time, same bad station.
We'd love to have you join us.
Participate in our open Mumble Room
and conversate with us in the real times in the IRC.
irc.geekshed.net pound Jupiter Broadcasting.
Yeah, we're still on Geek Shed.
I've had people asking.
And I feel like we want to support an open IRC ecosystem.
So come hang out.
I'm plugging it right now.
It's been a while.
It's been years.
It's been years.
irc.geekshed.net pound Jupiter Broadcasting.
I'm hardly in there, but come say hi.
All right.
Links at linuxunplug.com slash 412.
Thanks so much for joining us on this week's episode
of the Unplugged program.
And we will see you right back here next Tuesday.
It's for people who like to mess with computers.
Everybody head over to elementary's YouTube channel.
I'll put a link in the show notes, actually.
Their EDW went pretty great.
Wes and I had a great time hanging out with those guys.
And they had people talk about accessibility and usability.
They talked about creating great looking icons on Linux
and all kinds of topics.
Dan did a State of the Platform video too.
It's all on the elementary YouTube channel.
So I will put a link in the show notes,
but you can go find it over on YouTube's.
