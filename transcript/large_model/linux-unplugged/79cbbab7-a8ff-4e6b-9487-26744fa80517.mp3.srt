1
00:00:00,000 --> 00:00:01,880
You know what, screw the pre-show.

2
00:00:01,880 --> 00:00:03,120
It's not the boss of us.

3
00:00:03,120 --> 00:00:03,720
Yeah.

4
00:00:03,720 --> 00:00:05,800
Or you could make the pre-show just you saying,

5
00:00:05,800 --> 00:00:07,680
I think we're going to skip the pre-show.

6
00:00:07,680 --> 00:00:09,180
Yeah, but that's so cliche.

7
00:00:09,180 --> 00:00:10,060
We shouldn't do that.

8
00:00:10,060 --> 00:00:11,260
We've got to stop doing that.

9
00:00:11,260 --> 00:00:13,040
Just admit you're failing, Chris.

10
00:00:13,040 --> 00:00:13,920
No, I could.

11
00:00:13,920 --> 00:00:14,480
I could.

12
00:00:14,480 --> 00:00:16,880
I could come up with a pre-show if I wanted to.

13
00:00:16,880 --> 00:00:17,880
If I wanted to.

14
00:00:17,880 --> 00:00:19,080
I'm sure I could, you know?

15
00:00:19,080 --> 00:00:20,880
But I figure, why bother?

16
00:00:20,880 --> 00:00:22,400
You know what, who needs a pre-show?

17
00:00:22,400 --> 00:00:24,120
Nobody needs a pre-show.

18
00:00:24,120 --> 00:00:26,200
You know, pre-show, it's not even the actual show.

19
00:00:26,200 --> 00:00:28,200
So if it was, we'd put it in the show.

20
00:00:28,200 --> 00:00:29,280
So we might as well just get rid of it.

21
00:00:29,280 --> 00:00:31,200
These folks just want extra free show.

22
00:00:31,200 --> 00:00:32,120
That's not fair.

23
00:00:32,120 --> 00:00:32,620
I know.

24
00:00:32,620 --> 00:00:43,640
Hello, friends, and welcome back to your weekly Linux talk show.

25
00:00:43,640 --> 00:00:44,480
My name is Chris.

26
00:00:44,480 --> 00:00:45,480
My name is Wes.

27
00:00:45,480 --> 00:00:46,720
Hello, Wes.

28
00:00:46,720 --> 00:00:47,360
Guess what?

29
00:00:47,360 --> 00:00:47,860
What?

30
00:00:47,860 --> 00:00:48,600
Big news.

31
00:00:48,600 --> 00:00:50,680
This episode's brought to you by the all new Cloud

32
00:00:50,680 --> 00:00:52,320
Guru, the leader in learning for Cloud Linux

33
00:00:52,320 --> 00:00:53,800
and other modern tech skills.

34
00:00:53,800 --> 00:00:55,760
Hundreds of courses, thousands of hands-on labs.

35
00:00:55,760 --> 00:00:57,520
Get certified, get hired, get learning

36
00:00:57,520 --> 00:01:00,320
at acloudguru.com.

37
00:01:00,320 --> 00:01:04,040
Coming up on today's episode, this is one of those episodes.

38
00:01:04,040 --> 00:01:05,960
This is one of those.

39
00:01:05,960 --> 00:01:07,080
It's one of those, really.

40
00:01:07,080 --> 00:01:07,920
You know what?

41
00:01:07,920 --> 00:01:10,040
I don't even need to say more than that, but I'm going to.

42
00:01:10,040 --> 00:01:12,080
It might just be one of the most exciting releases

43
00:01:12,080 --> 00:01:12,720
in a long time.

44
00:01:12,720 --> 00:01:15,720
Fedora 34 is out today as we record.

45
00:01:15,720 --> 00:01:17,800
And we have a comprehensive review coming up.

46
00:01:17,800 --> 00:01:22,120
But loads of new tech are packed into this Fedora release

47
00:01:22,120 --> 00:01:26,120
beyond just GNOME 40, which is big on its own.

48
00:01:26,120 --> 00:01:28,000
And basically, all of it that we're

49
00:01:28,000 --> 00:01:30,600
going to talk about today will be coming to a distribution

50
00:01:30,600 --> 00:01:32,520
near you very soon.

51
00:01:32,520 --> 00:01:35,400
Plus, as always, we've got some community news,

52
00:01:35,400 --> 00:01:37,160
some pics, and more.

53
00:01:37,160 --> 00:01:39,080
So before I get into any of that,

54
00:01:39,080 --> 00:01:41,000
I got to holla at that virtual lug.

55
00:01:41,000 --> 00:01:42,720
Time appropriate greetings, Mumble Room.

56
00:01:42,720 --> 00:01:43,220
Hello.

57
00:01:43,220 --> 00:01:43,720
Hello.

58
00:01:43,720 --> 00:01:45,440
How's it going?

59
00:01:45,440 --> 00:01:47,000
We've got a strong group today.

60
00:01:47,000 --> 00:01:47,680
Yeah.

61
00:01:47,680 --> 00:01:48,480
Look at that.

62
00:01:48,480 --> 00:01:50,400
Jeez, how'd you all fit in here?

63
00:01:50,400 --> 00:01:51,120
Wow.

64
00:01:51,120 --> 00:01:53,720
You know, this is why we had to get the mega studio.

65
00:01:53,720 --> 00:01:55,880
Because all the social distancing and whatnot,

66
00:01:55,880 --> 00:01:57,800
we needed the 40,000 square feet.

67
00:01:57,800 --> 00:01:59,120
And the room for the grills.

68
00:01:59,120 --> 00:02:00,240
Right, of course.

69
00:02:00,240 --> 00:02:02,840
Let's get into some community news.

70
00:02:02,840 --> 00:02:06,080
And this week, we wanted to talk a little bit

71
00:02:06,080 --> 00:02:09,920
about this University of Minnesota kernel ban story.

72
00:02:09,920 --> 00:02:12,760
Please do check out Linux Action News 186, where we

73
00:02:12,760 --> 00:02:14,080
went into some details there.

74
00:02:14,080 --> 00:02:16,600
But if you didn't know, I want to make

75
00:02:16,600 --> 00:02:19,140
sure we cover some of this in this here episode.

76
00:02:19,140 --> 00:02:23,560
Because this is a very thick and complicated story

77
00:02:23,560 --> 00:02:28,360
with a lot of finger pointing and mail list posts to read.

78
00:02:28,360 --> 00:02:30,600
And if you didn't know the details,

79
00:02:30,600 --> 00:02:33,360
you might not fully understand and appreciate

80
00:02:33,360 --> 00:02:35,320
the scale of this problem.

81
00:02:35,320 --> 00:02:38,520
You might maybe just sort of brush it off as drama

82
00:02:38,520 --> 00:02:40,980
or just sort of not even really pay attention.

83
00:02:40,980 --> 00:02:43,720
But there is a real problem here.

84
00:02:43,720 --> 00:02:46,760
Three hypocrite patches, as they are called by the researchers,

85
00:02:46,760 --> 00:02:50,780
made it into the Linux kernel around August of 2020.

86
00:02:50,780 --> 00:02:53,320
If you didn't know that, you should be listening to LAN.

87
00:02:53,320 --> 00:02:54,920
Because I think a lot of people right now

88
00:02:54,920 --> 00:02:57,480
think that nothing made it, that a maintainer caught something

89
00:02:57,480 --> 00:03:00,920
in April and rejected it, and these patches never made it in.

90
00:03:00,920 --> 00:03:02,440
But that's actually not the case.

91
00:03:02,440 --> 00:03:04,080
In fact, there's really no evidence

92
00:03:04,080 --> 00:03:05,520
that indicates the patch in April

93
00:03:05,520 --> 00:03:08,120
is linked to these hypocrite patches at all.

94
00:03:08,120 --> 00:03:11,460
So it's a great example of why Wes and I go above and beyond

95
00:03:11,460 --> 00:03:12,920
to really try to get the facts right.

96
00:03:12,920 --> 00:03:15,000
I contacted Greg KH directly to try

97
00:03:15,000 --> 00:03:17,080
to get some of the details as accurate as possible

98
00:03:17,080 --> 00:03:18,320
for the story.

99
00:03:18,320 --> 00:03:21,680
And one thing that I feel like hasn't been properly talked

100
00:03:21,680 --> 00:03:25,320
about is a pretty valid concern that was going

101
00:03:25,320 --> 00:03:26,760
to be raised by the research.

102
00:03:26,760 --> 00:03:28,920
Super quick recap, Wes, you totally correct me

103
00:03:28,920 --> 00:03:31,160
if I'm wrong, just jump right in.

104
00:03:31,160 --> 00:03:33,400
But if you're not familiar with the story, back in August

105
00:03:33,400 --> 00:03:36,400
of 2020, some researchers at the University of Minnesota

106
00:03:36,400 --> 00:03:40,460
around that time submitted a series of stealthy fixes

107
00:03:40,460 --> 00:03:43,860
that weren't really fixes that when combined actually

108
00:03:43,860 --> 00:03:46,380
sort of created a vulnerability, but not necessarily

109
00:03:46,380 --> 00:03:48,280
each individually on their own.

110
00:03:48,280 --> 00:03:50,440
And three of those patches were accepted

111
00:03:50,440 --> 00:03:52,880
by the maintainer of that particular subsystem

112
00:03:52,880 --> 00:03:55,620
into the Linux kernel in August of 2020-ish time.

113
00:03:55,620 --> 00:03:57,400
We don't actually have all the details yet.

114
00:03:57,400 --> 00:03:59,880
That's one of the things the Linux Foundation is asking for.

115
00:03:59,880 --> 00:04:01,960
And it is a little nuanced because it sort of relied

116
00:04:01,960 --> 00:04:03,640
on the workflow of the maintainers.

117
00:04:03,640 --> 00:04:05,040
They weren't looking for the code

118
00:04:05,040 --> 00:04:06,960
to actually make it into a git tree.

119
00:04:06,960 --> 00:04:08,120
They were just looking for the maintainer

120
00:04:08,120 --> 00:04:10,560
to sign off on it saying, like, yeah, this looks good.

121
00:04:10,560 --> 00:04:11,360
Right.

122
00:04:11,360 --> 00:04:13,640
They never shipped like a distro or even making it

123
00:04:13,640 --> 00:04:14,780
a Linus's tree, right?

124
00:04:14,780 --> 00:04:17,000
It wasn't like it never made it that far.

125
00:04:17,000 --> 00:04:19,280
And I think it's also worth mentioning just as a side note

126
00:04:19,280 --> 00:04:21,560
here, my understanding is, again,

127
00:04:21,560 --> 00:04:23,680
the university has not given us all the details yet.

128
00:04:23,680 --> 00:04:26,360
But my understanding is when the maintainer accepted

129
00:04:26,360 --> 00:04:29,120
the patches, the university actually reached out and went,

130
00:04:29,120 --> 00:04:31,400
oh, oh, actually, we just caught the mistake.

131
00:04:31,400 --> 00:04:33,400
Here's the actual patch instead, and then sent them

132
00:04:33,400 --> 00:04:34,000
working code.

133
00:04:34,000 --> 00:04:35,480
That's their claim.

134
00:04:35,480 --> 00:04:37,280
I don't know how true that is.

135
00:04:37,280 --> 00:04:39,680
But that is important to understand.

136
00:04:39,680 --> 00:04:43,160
So then we fast forward to April of 2021

137
00:04:43,160 --> 00:04:45,380
when a PhD student submitted a patch,

138
00:04:45,380 --> 00:04:46,920
and it was rejected by the maintainer

139
00:04:46,920 --> 00:04:48,640
for being just crap code.

140
00:04:48,640 --> 00:04:50,320
And not really fixing anything, right?

141
00:04:50,320 --> 00:04:51,720
Well, you're saying you're fixing

142
00:04:51,720 --> 00:04:53,580
this use after free thing, but we've already

143
00:04:53,580 --> 00:04:54,840
taken care of that elsewhere.

144
00:04:54,840 --> 00:04:55,920
This doesn't do anything.

145
00:04:55,920 --> 00:04:56,520
Right.

146
00:04:56,520 --> 00:04:59,600
And so there was a little bit of suspicion about,

147
00:04:59,600 --> 00:05:00,860
like, why did you submit this?

148
00:05:00,860 --> 00:05:03,920
Because your university has a history here

149
00:05:03,920 --> 00:05:06,780
of kind of screwing with the kernel for your own research,

150
00:05:06,780 --> 00:05:08,520
and now you submit me this patch that

151
00:05:08,520 --> 00:05:10,080
looks kind of like garbage.

152
00:05:10,080 --> 00:05:12,200
This is either just you not knowing what you're doing,

153
00:05:12,200 --> 00:05:13,440
or malicious.

154
00:05:13,440 --> 00:05:15,640
And so that triggered a series of events

155
00:05:15,640 --> 00:05:18,680
that eventually led to the University of Minnesota

156
00:05:18,680 --> 00:05:20,320
from being banned to contribute to the kernel,

157
00:05:20,320 --> 00:05:21,920
and the kernel team going through and reviewing

158
00:05:21,920 --> 00:05:24,520
any patch they've ever made, and the Linux Foundation

159
00:05:24,520 --> 00:05:27,080
sending the university a letter saying,

160
00:05:27,080 --> 00:05:29,200
you need to tell us about every patch you've ever

161
00:05:29,200 --> 00:05:31,200
committed to open source projects, period,

162
00:05:31,200 --> 00:05:32,720
and you need to kill that paper.

163
00:05:32,720 --> 00:05:34,640
Essentially, you need to shut that paper down

164
00:05:34,640 --> 00:05:37,080
that you are about to announce in less than a month

165
00:05:37,080 --> 00:05:39,600
at the IEEE convention that happens virtually

166
00:05:39,600 --> 00:05:41,880
on May 23rd through the 25th.

167
00:05:41,880 --> 00:05:43,440
You got to shut that paper down.

168
00:05:43,440 --> 00:05:46,080
Because the researchers were writing a paper essentially

169
00:05:46,080 --> 00:05:47,700
about doing these hypocrite patches,

170
00:05:47,700 --> 00:05:50,400
about how they could gain the trust of open source

171
00:05:50,400 --> 00:05:53,560
developers, and then trick them into accepting bogus code

172
00:05:53,560 --> 00:05:55,800
to build a vulnerability via multiple patches.

173
00:05:55,800 --> 00:05:57,920
And they were going to write a paper, and they did,

174
00:05:57,920 --> 00:05:59,680
and they were going to publish it.

175
00:05:59,680 --> 00:06:00,340
It's all done.

176
00:06:00,340 --> 00:06:01,640
It's written.

177
00:06:01,640 --> 00:06:03,760
That's not what the recent news is about.

178
00:06:03,760 --> 00:06:06,720
The recent news is just sort of perfectly timed

179
00:06:06,720 --> 00:06:08,520
so that when that paper does announce,

180
00:06:08,520 --> 00:06:09,760
or they're going to have to kill it,

181
00:06:09,760 --> 00:06:11,200
that paper is dead, basically.

182
00:06:11,200 --> 00:06:13,760
The news is perfectly timed to kill the news story that

183
00:06:13,760 --> 00:06:16,880
was about to be landing as a bit of a bombshell,

184
00:06:16,880 --> 00:06:19,440
potentially, around the end of May.

185
00:06:19,440 --> 00:06:21,680
And the question that I think the researchers

186
00:06:21,680 --> 00:06:24,880
were trying to raise is, in one part, no duh.

187
00:06:24,880 --> 00:06:26,560
If you trick somebody for a while

188
00:06:26,560 --> 00:06:29,160
and then you stealthily slip in bogus code that

189
00:06:29,160 --> 00:06:31,200
builds to a vulnerability, I think

190
00:06:31,200 --> 00:06:34,600
even without doing any studies, pretty good guess,

191
00:06:34,600 --> 00:06:37,120
you could probably get that pass to maintainer.

192
00:06:37,120 --> 00:06:38,780
But what about that problem?

193
00:06:38,780 --> 00:06:41,760
It's truly possible it could happen at Microsoft, or Apple,

194
00:06:41,760 --> 00:06:44,720
or Oracle, or some other proprietary organization.

195
00:06:44,720 --> 00:06:46,120
Absolutely.

196
00:06:46,120 --> 00:06:48,080
But it's not as easy, because there's

197
00:06:48,080 --> 00:06:50,600
going to be, in the case of the Mac OS kernel,

198
00:06:50,600 --> 00:06:53,180
about four people at Apple that are allowed to actually commit

199
00:06:53,180 --> 00:06:54,240
that code.

200
00:06:54,240 --> 00:06:56,880
And so you'd have to compromise one of those four people,

201
00:06:56,880 --> 00:06:59,760
at least their GPG key.

202
00:06:59,760 --> 00:07:02,760
And on top of that, there is a clear repercussion system

203
00:07:02,760 --> 00:07:05,640
in place if somebody were to make a compromise like that.

204
00:07:05,640 --> 00:07:07,040
It's not impossible.

205
00:07:07,040 --> 00:07:11,200
But it's much harder to happen with a Windows kernel

206
00:07:11,200 --> 00:07:12,680
or the Mac OS kernel.

207
00:07:12,680 --> 00:07:15,760
And then imagine for a moment if this was something higher up

208
00:07:15,760 --> 00:07:19,160
in the stack, if this wasn't a kernel,

209
00:07:19,160 --> 00:07:22,240
if this was maybe NGINX, or something even higher up

210
00:07:22,240 --> 00:07:24,280
in the stack in the user land that really

211
00:07:24,280 --> 00:07:25,640
doesn't have as many eyes.

212
00:07:25,640 --> 00:07:28,480
Could it be just a common library that you have, right?

213
00:07:28,480 --> 00:07:31,040
Who really cares what gets merged into left pad?

214
00:07:31,040 --> 00:07:33,000
And so what do we do about this problem, Wes?

215
00:07:33,000 --> 00:07:34,080
Because it's there.

216
00:07:34,080 --> 00:07:36,320
It's probably not super critical,

217
00:07:36,320 --> 00:07:38,600
because in reality, it would eventually be caught.

218
00:07:38,600 --> 00:07:39,820
It would be worked out.

219
00:07:39,820 --> 00:07:41,320
The way the systems and tools work,

220
00:07:41,320 --> 00:07:43,160
we'd know when it was committed and who committed it

221
00:07:43,160 --> 00:07:44,580
and every commit they'd ever made.

222
00:07:44,580 --> 00:07:46,760
So there are tools in place in that regard.

223
00:07:46,760 --> 00:07:49,760
But doesn't it seem like there should be something in place,

224
00:07:49,760 --> 00:07:52,920
screening or doing some kind of automated checking

225
00:07:52,920 --> 00:07:55,720
at best we can to see if what they claim it does,

226
00:07:55,720 --> 00:07:56,800
it even does?

227
00:07:56,800 --> 00:08:00,640
Well, to some degree, there are some automated tooling.

228
00:08:00,640 --> 00:08:03,440
I think the question of can we have more things that help,

229
00:08:03,440 --> 00:08:04,640
that's always true.

230
00:08:04,640 --> 00:08:05,760
We have to think about it.

231
00:08:05,760 --> 00:08:07,120
There's just bugs that get merged,

232
00:08:07,120 --> 00:08:10,160
both malicious and accidental.

233
00:08:10,160 --> 00:08:12,920
That's a problem that happens in all software

234
00:08:12,920 --> 00:08:15,480
and in the kernel as well.

235
00:08:15,480 --> 00:08:17,800
I think we need some more research to help understand,

236
00:08:17,800 --> 00:08:19,800
what's the scope of this problem?

237
00:08:19,800 --> 00:08:22,760
And how does the maintainership process really work?

238
00:08:22,760 --> 00:08:25,840
I think scholarship around that and what's happening there

239
00:08:25,840 --> 00:08:28,000
is worthwhile, just clearly not in the way

240
00:08:28,000 --> 00:08:29,160
these researchers did it.

241
00:08:29,160 --> 00:08:30,040
No kidding.

242
00:08:30,040 --> 00:08:33,040
Talk about messing around with a development team

243
00:08:33,040 --> 00:08:35,160
that has very limited time and resources

244
00:08:35,160 --> 00:08:37,200
and messing around with software that literally

245
00:08:37,200 --> 00:08:41,200
ships in mission-critical, life-critical applications.

246
00:08:41,200 --> 00:08:44,320
There is satisfying intellectual curiosity,

247
00:08:44,320 --> 00:08:45,760
and then there is crossing the line.

248
00:08:45,760 --> 00:08:48,440
And I agree with the kernel team that from the evidence

249
00:08:48,440 --> 00:08:50,680
that's available to us at this time, in my opinion,

250
00:08:50,680 --> 00:08:52,400
they definitely crossed the line.

251
00:08:52,400 --> 00:08:54,400
And they are right to ban future development

252
00:08:54,400 --> 00:08:55,720
until they sort this whole thing out.

253
00:08:55,720 --> 00:08:57,400
They've been sent a letter.

254
00:08:57,400 --> 00:09:01,160
The Linux Foundation has made reasonable requests,

255
00:09:01,160 --> 00:09:02,440
in my opinion.

256
00:09:02,440 --> 00:09:07,320
And now it's really kind of the balls in the university's court.

257
00:09:07,320 --> 00:09:10,360
They released on the 24th of April an apology.

258
00:09:10,360 --> 00:09:13,720
But the apology sort of just says, well,

259
00:09:13,720 --> 00:09:16,080
if I'd asked you for the cookie, you would have said no,

260
00:09:16,080 --> 00:09:17,480
so I just took the cookie.

261
00:09:17,480 --> 00:09:19,400
And so I know I shouldn't have taken the cookie,

262
00:09:19,400 --> 00:09:21,640
but I really wanted the cookie, is essentially

263
00:09:21,640 --> 00:09:23,120
what their apology says.

264
00:09:23,120 --> 00:09:23,920
Not good enough.

265
00:09:23,920 --> 00:09:25,880
No, and a lot of folks pointed out

266
00:09:25,880 --> 00:09:27,960
that, well, you could have tried to come up

267
00:09:27,960 --> 00:09:29,400
with other methodologies.

268
00:09:29,400 --> 00:09:32,360
And then there's just sort of the arrogance or isolation

269
00:09:32,360 --> 00:09:35,480
of researchers in academia who need to publish.

270
00:09:35,480 --> 00:09:36,320
They have an idea.

271
00:09:36,320 --> 00:09:37,640
They think they just want to go about it.

272
00:09:37,640 --> 00:09:39,360
Clearly, they didn't give that much thought

273
00:09:39,360 --> 00:09:42,320
to how to get the institutional review or what level

274
00:09:42,320 --> 00:09:44,760
or really what the potential consequences of that work

275
00:09:44,760 --> 00:09:45,720
might be.

276
00:09:45,720 --> 00:09:49,120
And I think there's also sort of a trust between academia

277
00:09:49,120 --> 00:09:52,680
and open source, because there's a lot of principles shared

278
00:09:52,680 --> 00:09:54,480
there and a lot of shared history.

279
00:09:54,480 --> 00:09:57,200
So that's just even more rude.

280
00:09:57,200 --> 00:10:00,720
Yeah, and not to bang this drum too much,

281
00:10:00,720 --> 00:10:02,880
but the details are in Linux Action News 186.

282
00:10:02,880 --> 00:10:04,840
And the reason why I'm hitting that drum so hard

283
00:10:04,840 --> 00:10:07,000
is Wes and I spent our entire Sunday

284
00:10:07,000 --> 00:10:10,000
getting the details of that story as accurate as we could.

285
00:10:10,000 --> 00:10:11,920
Listening back, I'm pretty happy with it.

286
00:10:11,920 --> 00:10:14,000
I think I would have likened maybe one more

287
00:10:14,000 --> 00:10:19,400
crack at covering it, but we spent all day on it

288
00:10:19,400 --> 00:10:21,120
on a Sunday to get that story right.

289
00:10:21,120 --> 00:10:23,440
And so the details, I think, matter in this one,

290
00:10:23,440 --> 00:10:25,320
because there's multiple timelines.

291
00:10:25,320 --> 00:10:27,280
There's multiple he said, she said.

292
00:10:27,280 --> 00:10:30,800
And so it is a fascinating topic, and the bigger question

293
00:10:30,800 --> 00:10:32,960
it raises, I think, is worth considering.

294
00:10:32,960 --> 00:10:36,040
And we should say, I think that question is being considered,

295
00:10:36,040 --> 00:10:38,120
maybe not as much as it showed or not as publicly.

296
00:10:38,120 --> 00:10:40,440
But you did see in the mailing list,

297
00:10:40,440 --> 00:10:42,800
there were even conversations around people asking,

298
00:10:42,800 --> 00:10:44,840
how much review do you give to these folks?

299
00:10:44,840 --> 00:10:47,320
Some maintainers saying, oh, someone like that,

300
00:10:47,320 --> 00:10:48,320
I'd be very skeptical.

301
00:10:48,320 --> 00:10:50,880
And others saying, well, we have to admit many of us

302
00:10:50,880 --> 00:10:53,080
are very busy maintainers, and if the code looks good,

303
00:10:53,080 --> 00:10:54,000
we might just merge it.

304
00:10:54,000 --> 00:10:56,720
So I think there's also a cultural thing at play

305
00:10:56,720 --> 00:10:58,840
beyond tooling, and that conversation

306
00:10:58,840 --> 00:10:59,600
should happen too.

307
00:10:59,600 --> 00:11:01,520
And while all of this is going on, of course,

308
00:11:01,520 --> 00:11:03,760
business still is normal, usual.

309
00:11:03,760 --> 00:11:05,880
Development continues for the Linux kernel,

310
00:11:05,880 --> 00:11:09,480
and version 5.12 was released this weekend.

311
00:11:09,480 --> 00:11:12,440
And Linux can now run as a root partition on Hyper-V.

312
00:11:12,440 --> 00:11:14,800
There's also more support for that lightweight hypervisor

313
00:11:14,800 --> 00:11:18,560
Acorn, as well as some RISC-V support landing.

314
00:11:18,560 --> 00:11:21,920
Broadcom's VK video accelerators, instead of CPU

315
00:11:21,920 --> 00:11:24,040
load, can now be chip-based.

316
00:11:24,040 --> 00:11:27,800
Support for the PlayStation controller for PS5,

317
00:11:27,800 --> 00:11:30,280
Nintendo 64, and more all land.

318
00:11:30,280 --> 00:11:31,800
Nintendo 64 console's in there too,

319
00:11:31,800 --> 00:11:34,040
which we noted on LAN as well, but just hilarious.

320
00:11:34,040 --> 00:11:36,880
That thing runs at like 94 megahertz.

321
00:11:36,880 --> 00:11:39,960
You could just swap it in for a couple of your pies, right?

322
00:11:39,960 --> 00:11:41,880
You don't need more than eight megs of RAM.

323
00:11:41,880 --> 00:11:43,560
You know what I found fascinating, though,

324
00:11:43,560 --> 00:11:46,080
around 5.12, Wes, was actually just some of the details

325
00:11:46,080 --> 00:11:47,600
of what make up a kernel.

326
00:11:47,600 --> 00:11:50,320
So if you look at it, in some senses,

327
00:11:50,320 --> 00:11:53,600
Linux 5.12 was one of the slowest development cycles

328
00:11:53,600 --> 00:11:58,240
we have seen in the kernel since version 5.6, which was not

329
00:11:58,240 --> 00:12:00,240
released that long ago, about a year ago.

330
00:12:00,240 --> 00:12:01,520
But there's still plenty of things that landed,

331
00:12:01,520 --> 00:12:02,360
like we mentioned.

332
00:12:02,360 --> 00:12:04,600
And you still have some serious numbers here.

333
00:12:04,600 --> 00:12:09,720
1,873 developers contributed to Linux 5.12.

334
00:12:09,720 --> 00:12:12,880
262 of those were first-time contributors.

335
00:12:12,880 --> 00:12:14,460
That's about an average number, but it's

336
00:12:14,460 --> 00:12:15,360
pretty neat to see that.

337
00:12:15,360 --> 00:12:15,880
Oh, yeah.

338
00:12:15,880 --> 00:12:17,200
No, that is nice to see.

339
00:12:17,200 --> 00:12:19,480
Of course, on the other side, there's some heavy hitters.

340
00:12:19,480 --> 00:12:22,000
Folks like Lee Jones, who was the most active chainset

341
00:12:22,000 --> 00:12:25,080
contributor this time around, working on compiler stuff,

342
00:12:25,080 --> 00:12:27,480
docs, and warnings throughout the tree.

343
00:12:27,480 --> 00:12:31,960
Chris Wilson doing a lot of work on the Intel i915 graphics

344
00:12:31,960 --> 00:12:35,360
driver, which, hey, as an Intel user, I appreciate that.

345
00:12:35,360 --> 00:12:37,340
And Christopher Helwig continues to clean up

346
00:12:37,340 --> 00:12:40,160
the code in the block layer and file systems.

347
00:12:40,160 --> 00:12:41,240
Also important work.

348
00:12:41,240 --> 00:12:42,400
Yeah, that looks really good.

349
00:12:42,400 --> 00:12:44,220
And it's nice to see the IOU ring subsystem

350
00:12:44,220 --> 00:12:45,120
get some improvements.

351
00:12:45,120 --> 00:12:46,720
The network subsystem is in there,

352
00:12:46,720 --> 00:12:48,920
as well as some cleanup code in the block layer and file

353
00:12:48,920 --> 00:12:49,740
systems.

354
00:12:49,740 --> 00:12:51,780
So it's a good, solid kernel in there.

355
00:12:51,780 --> 00:12:53,840
It's a handsome kernel, you might say.

356
00:12:53,840 --> 00:12:56,720
And it was supported by 211 different employers

357
00:12:56,720 --> 00:12:59,080
that LWN was able to identify.

358
00:12:59,080 --> 00:13:01,440
So LWN went in and looked at this stat.

359
00:13:01,440 --> 00:13:04,840
They say it's a small decrease, but the top contributor

360
00:13:04,840 --> 00:13:10,000
by chainsets in 5.12 is Intel at 10.9% of the changes.

361
00:13:10,000 --> 00:13:12,160
Interestingly, though, by lines changed,

362
00:13:12,160 --> 00:13:16,160
Lonaro is at the top with 17.4%.

363
00:13:16,160 --> 00:13:19,280
When you go by the pure number of lines of code change,

364
00:13:19,280 --> 00:13:21,280
Lonaro was really crushing it this time.

365
00:13:21,280 --> 00:13:23,920
I guess just due to a flurry of code removal patches

366
00:13:23,920 --> 00:13:25,200
that they sent out this time.

367
00:13:25,200 --> 00:13:27,280
All right, keeping things clean, I like that.

368
00:13:27,280 --> 00:13:27,960
That counts, man.

369
00:13:27,960 --> 00:13:28,920
That counts.

370
00:13:28,920 --> 00:13:32,400
Unknown represents 7.7% of changes

371
00:13:32,400 --> 00:13:34,620
by just looking at chainsets.

372
00:13:34,620 --> 00:13:36,760
And then in the number three slot

373
00:13:36,760 --> 00:13:40,520
is Red Hat with 872 chainsets.

374
00:13:40,520 --> 00:13:42,200
Red Hat's also in the number three slot

375
00:13:42,200 --> 00:13:43,840
when you look at just lines changed,

376
00:13:43,840 --> 00:13:48,480
with 38,000 lines of code changed just in this kernel.

377
00:13:48,480 --> 00:13:50,920
Oh my god.

378
00:13:50,920 --> 00:13:54,160
Wow, that's just the scale, Wes.

379
00:13:54,160 --> 00:13:57,000
The scale of this project and the fact

380
00:13:57,000 --> 00:13:59,080
that they managed to ship and ship reliably

381
00:13:59,080 --> 00:14:03,280
and produce something usable is, well, it needs to be,

382
00:14:03,280 --> 00:14:05,440
it's going to have to be studied by historians at some point.

383
00:14:05,440 --> 00:14:06,140
Well, yeah, right?

384
00:14:06,140 --> 00:14:09,100
That's kind of why some scholarship is warranted here,

385
00:14:09,100 --> 00:14:11,480
because they incorporate a huge number of changes

386
00:14:11,480 --> 00:14:13,360
in a reliable way, in a predictable way.

387
00:14:13,360 --> 00:14:15,800
I mean, we're going to be running a pretty new kernel

388
00:14:15,800 --> 00:14:17,200
with 5.11 here on Fedora.

389
00:14:17,200 --> 00:14:19,240
And I'm not worried about that at all,

390
00:14:19,240 --> 00:14:21,200
and I wouldn't really be worried about switching

391
00:14:21,200 --> 00:14:22,200
to 5.12 today either.

392
00:14:22,200 --> 00:14:24,760
Yeah, in fact, 5.13 is shaping up to be a big boy.

393
00:14:24,760 --> 00:14:27,760
Torvalds wrapped up the announcement of 5.12

394
00:14:27,760 --> 00:14:32,680
by kind of prepping people for the size and scale of 5.13.

395
00:14:32,680 --> 00:14:34,720
He says, quote, please spend a bit of time

396
00:14:34,720 --> 00:14:37,920
running and checking out 5.12 before we start sending

397
00:14:37,920 --> 00:14:39,240
a merge request for 5.13.

398
00:14:39,240 --> 00:14:42,960
Because despite the extra week, this 5.12

399
00:14:42,960 --> 00:14:44,900
was actually a fairly small release overall.

400
00:14:44,900 --> 00:14:47,560
And judging by the Linux Dash next tree,

401
00:14:47,560 --> 00:14:51,360
5.13 is going to be making up for it.

402
00:14:51,360 --> 00:14:53,600
And in 5.13, as just a reminder, we're

403
00:14:53,600 --> 00:14:57,640
going to get initial support for Apple's M1 chips,

404
00:14:57,640 --> 00:14:59,480
the addition of a new wireless WAN

405
00:14:59,480 --> 00:15:05,080
subsystem, more RISC-V support, and Intel's standalone GPUs,

406
00:15:05,080 --> 00:15:06,200
if they ever ship.

407
00:15:06,200 --> 00:15:09,320
Well, 5.13 will have support for them.

408
00:15:09,320 --> 00:15:10,200
Just can't wait.

409
00:15:10,200 --> 00:15:11,480
Yeah, you know what, Wes?

410
00:15:11,480 --> 00:15:13,480
You look at this and you go, there

411
00:15:13,480 --> 00:15:15,440
is so much happening in kernel land

412
00:15:15,440 --> 00:15:18,300
that by the time you could actually get caught up,

413
00:15:18,300 --> 00:15:19,880
by the time you get to a distro, it's

414
00:15:19,880 --> 00:15:22,320
like a whole other generation of hardware is out.

415
00:15:22,320 --> 00:15:24,720
The kernel team, though, just continues to just crush it.

416
00:15:24,720 --> 00:15:28,120
And to get, again, some of this RISC-V stuff and Intel stuff

417
00:15:28,120 --> 00:15:32,580
in and the M1 stuff in, years maybe, in some cases,

418
00:15:32,580 --> 00:15:35,120
before anybody needs it, is going to lay some groundwork

419
00:15:35,120 --> 00:15:35,880
for the future.

420
00:15:35,880 --> 00:15:37,320
Can't stop, won't stop.

421
00:15:40,000 --> 00:15:42,760
Linode.com slash unplugged.

422
00:15:42,760 --> 00:15:44,440
Head over there and check out Linode.

423
00:15:44,440 --> 00:15:46,760
They're our hosting provider, and everything

424
00:15:46,760 --> 00:15:48,920
we've built in the last couple of years is on Linode.

425
00:15:48,920 --> 00:15:50,840
So you go to linode.com slash unplugged

426
00:15:50,840 --> 00:15:54,120
to get a $100, 60-day credit towards your new account.

427
00:15:54,120 --> 00:15:57,240
And of course, you support the show at linode.com slash

428
00:15:57,240 --> 00:15:58,120
unplugged.

429
00:15:58,120 --> 00:16:01,040
Unlike entry-level hosting providers or the big clouds

430
00:16:01,040 --> 00:16:03,760
like AWS that try to tie your hands and lock you down,

431
00:16:03,760 --> 00:16:06,480
Linode gives you the tools to get the most out

432
00:16:06,480 --> 00:16:08,320
of their crazy fast systems.

433
00:16:08,320 --> 00:16:10,080
You get 11 data centers to choose from,

434
00:16:10,080 --> 00:16:12,580
and every service level is backed by the best customer

435
00:16:12,580 --> 00:16:15,000
support in the business.

436
00:16:15,000 --> 00:16:16,380
And that really matters.

437
00:16:16,380 --> 00:16:18,520
I mean, that really matters.

438
00:16:18,520 --> 00:16:21,520
It makes all of the difference when you're in a tight spot.

439
00:16:21,520 --> 00:16:23,760
And it's not just like one great thing

440
00:16:23,760 --> 00:16:26,800
like the support that makes Linode fantastic

441
00:16:26,800 --> 00:16:29,720
and our go-to choice for anything we're building.

442
00:16:29,720 --> 00:16:32,800
It's all of the great things about Linode coming together

443
00:16:32,800 --> 00:16:34,560
that make them special.

444
00:16:34,560 --> 00:16:37,120
And at every step of the way since 2003,

445
00:16:37,120 --> 00:16:39,460
Linode has asked themselves, how can we

446
00:16:39,460 --> 00:16:42,480
use Linux to accomplish this next task?

447
00:16:42,480 --> 00:16:45,080
How can we use Linux to do what we want in a way

448
00:16:45,080 --> 00:16:46,960
that people are not yet using it?

449
00:16:46,960 --> 00:16:49,720
Their love and dedication to that is baked into the product.

450
00:16:49,720 --> 00:16:51,960
And as a long-timer, I can tell it.

451
00:16:51,960 --> 00:16:54,360
And that's something I really love about Linode.

452
00:16:54,360 --> 00:16:56,400
And if you're not catching Linode's new tutorials

453
00:16:56,400 --> 00:16:58,840
by HackerSploit, you're missing out on something great,

454
00:16:58,840 --> 00:16:59,800
some chances to learn.

455
00:16:59,800 --> 00:17:01,560
I'll put a link in the show notes

456
00:17:01,560 --> 00:17:04,240
to a video on learning the various tools and commands

457
00:17:04,240 --> 00:17:05,560
for logging and monitoring.

458
00:17:05,560 --> 00:17:07,160
These are some great basics.

459
00:17:07,160 --> 00:17:09,680
And if you can learn that from a YouTube video in like 15

460
00:17:09,680 --> 00:17:12,680
minutes, well, that's going to change your server game.

461
00:17:12,680 --> 00:17:15,760
So get started by going over to linode.com slash unplugged.

462
00:17:15,760 --> 00:17:18,340
Get that $100 for your new account.

463
00:17:18,340 --> 00:17:19,880
And try this stuff out.

464
00:17:19,880 --> 00:17:21,680
Try out the object storage.

465
00:17:21,680 --> 00:17:23,360
This could be an amazing way to get

466
00:17:23,360 --> 00:17:26,520
your configs, your server stuff, off-site

467
00:17:26,520 --> 00:17:30,400
in a system that's in the cloud, that's reliable, that's fast,

468
00:17:30,400 --> 00:17:33,360
but doesn't require running an entire server in front of it.

469
00:17:33,360 --> 00:17:35,800
Go build something, or maybe learn something.

470
00:17:35,800 --> 00:17:38,640
With that $100, there's a lot you can get access to.

471
00:17:38,640 --> 00:17:41,280
So go to linode.com slash unplugged.

472
00:17:41,280 --> 00:17:43,160
There's a lot of ways to host something.

473
00:17:43,160 --> 00:17:45,760
And there's a lot of various companies

474
00:17:45,760 --> 00:17:47,440
that will do it for you.

475
00:17:47,440 --> 00:17:50,960
Go see why we choose Linode every time.

476
00:17:50,960 --> 00:17:53,360
Linode.com slash unplugged.

477
00:17:56,600 --> 00:17:59,280
So Flatpak has a new version that's in the works.

478
00:17:59,280 --> 00:18:01,900
So you have an interim release as they develop stuff.

479
00:18:01,900 --> 00:18:04,900
And then we're going to have the final release that

480
00:18:04,900 --> 00:18:07,580
is the actual stable version for end users.

481
00:18:07,580 --> 00:18:11,600
And the development version is 1.1.1.1.

482
00:18:11,600 --> 00:18:13,460
And the release version that we'll actually

483
00:18:13,460 --> 00:18:17,120
get our hands on eventually is going to be 1.1.2.

484
00:18:17,120 --> 00:18:18,520
And why am I telling you about this?

485
00:18:18,520 --> 00:18:20,500
Because this is actually the first time

486
00:18:20,500 --> 00:18:24,800
we've ever covered a Flatpak interim release on the show.

487
00:18:24,800 --> 00:18:26,780
But this time, they're taking a few steps

488
00:18:26,780 --> 00:18:28,080
towards something kind of cool.

489
00:18:28,080 --> 00:18:31,240
Yeah, they have some notable feature changes already

490
00:18:31,240 --> 00:18:34,920
in just 0.1 here, one of which that's worth mentioning

491
00:18:34,920 --> 00:18:37,760
is allowing sub-sandboxes to have

492
00:18:37,760 --> 00:18:41,600
a different slash user or slash app.

493
00:18:41,600 --> 00:18:42,600
Why would you want that?

494
00:18:42,600 --> 00:18:45,320
Well, right now, initially, it's being

495
00:18:45,320 --> 00:18:48,800
used by the Flatpak Steam effort to launch games

496
00:18:48,800 --> 00:18:51,480
within its own container runtime showing up

497
00:18:51,480 --> 00:18:53,240
with a replaced slash user.

498
00:18:53,240 --> 00:18:54,920
That's why they need the new feature.

499
00:18:54,920 --> 00:18:57,400
Basically, the goal is to be able to handle the Steam Linux

500
00:18:57,400 --> 00:18:59,960
runtime within a Flatpak sandboxed environment

501
00:18:59,960 --> 00:19:02,040
and sort of merge those two systems together.

502
00:19:02,040 --> 00:19:03,360
Whoa.

503
00:19:03,360 --> 00:19:05,280
My mind is blown by this.

504
00:19:05,280 --> 00:19:06,560
And it's not just that, too.

505
00:19:06,560 --> 00:19:09,760
Flatpak's also working on support for better command line

506
00:19:09,760 --> 00:19:12,340
text user interface type programs,

507
00:19:12,340 --> 00:19:15,300
like the Nano Text Editor was specifically mentioned.

508
00:19:15,300 --> 00:19:17,440
So that's pretty great.

509
00:19:17,440 --> 00:19:19,320
To make it clear here, they're making

510
00:19:19,320 --> 00:19:22,320
it possible to support Steam's pressure vessel.

511
00:19:22,320 --> 00:19:24,900
They're not using pressure vessel.

512
00:19:24,900 --> 00:19:26,000
They're making it possible.

513
00:19:26,000 --> 00:19:28,880
And that's Valve's project to put Linux runtimes

514
00:19:28,880 --> 00:19:33,040
in containers to make old libraries and whatnot available

515
00:19:33,040 --> 00:19:36,360
to games, even on newer OS releases.

516
00:19:36,360 --> 00:19:38,920
And unlike certain other use cases for containers,

517
00:19:38,920 --> 00:19:42,600
that one, the pressure vessel, the pressure vessel stuff

518
00:19:42,600 --> 00:19:45,880
is just for compatibility with old games.

519
00:19:45,880 --> 00:19:47,800
They're not really trying to get security right.

520
00:19:47,800 --> 00:19:50,800
They're not really bothering about sandboxing.

521
00:19:50,800 --> 00:19:54,080
The idea is that you could ship this stuff inside a Steam

522
00:19:54,080 --> 00:19:57,360
Flatpak and have support for these containers

523
00:19:57,360 --> 00:20:03,480
and do all of it with bubble wrap and a universal package,

524
00:20:03,480 --> 00:20:04,360
I suppose.

525
00:20:04,360 --> 00:20:06,000
The idea is pretty neat.

526
00:20:06,000 --> 00:20:08,160
It feels a bit like turtles all the way down to me.

527
00:20:08,160 --> 00:20:11,080
But I understand that it's necessary for compatibility.

528
00:20:11,080 --> 00:20:13,800
Really, it's just exciting to see these technologies both

529
00:20:13,800 --> 00:20:14,280
working.

530
00:20:14,280 --> 00:20:18,000
And I mean, I'm already using a lot of the Flatpak stuff anyway.

531
00:20:18,000 --> 00:20:21,160
Seems like this is a good test of using it in anger,

532
00:20:21,160 --> 00:20:22,960
making it work for more and more use cases,

533
00:20:22,960 --> 00:20:25,280
and just ironing out the whole setup.

534
00:20:25,280 --> 00:20:27,320
OK, Wes, this next one here, it's

535
00:20:27,320 --> 00:20:30,160
kind of one for the virtual lug a bit.

536
00:20:30,160 --> 00:20:32,880
I think we've kind of got it wrong.

537
00:20:32,880 --> 00:20:35,760
I think we've all been worried about WSL, especially now

538
00:20:35,760 --> 00:20:38,840
WSLG, which supports GUI Linux applications.

539
00:20:38,840 --> 00:20:41,080
Right, yeah, everyone's a little worried about that.

540
00:20:41,080 --> 00:20:42,560
Yeah, we're all worried about it.

541
00:20:42,560 --> 00:20:46,760
But if you look at Linux's true successes in the market

542
00:20:46,760 --> 00:20:49,160
at scale, it's the server, right?

543
00:20:49,160 --> 00:20:51,800
Like, the desktop, as much as we love it,

544
00:20:51,800 --> 00:20:54,760
the desktop doesn't even really show up on the radar, right?

545
00:20:54,760 --> 00:20:56,240
It's just a teeny, teeny, tiny blip.

546
00:20:56,240 --> 00:20:57,480
But the server is like this.

547
00:20:57,480 --> 00:21:00,120
It's this massive worldwide phenomenon.

548
00:21:00,120 --> 00:21:07,280
So even if WSL were to rob all of the Linux desktop market,

549
00:21:07,280 --> 00:21:10,600
every single Linux desktop user, which is never going to happen,

550
00:21:10,600 --> 00:21:13,680
but just for the sake of argument, if WSL with WSLG now

551
00:21:13,680 --> 00:21:16,320
on Windows 10, or Windows 11, or whatever,

552
00:21:16,320 --> 00:21:18,860
one day were to take every single Linux user

553
00:21:18,860 --> 00:21:21,240
and get them to convert somehow, it wouldn't actually

554
00:21:21,240 --> 00:21:23,200
radically change the market dynamics

555
00:21:23,200 --> 00:21:27,400
of where Linux is a powerhouse, really.

556
00:21:27,400 --> 00:21:29,240
It wouldn't really change the server dynamics.

557
00:21:29,240 --> 00:21:32,800
So WSL can't really harm Linux.

558
00:21:32,800 --> 00:21:34,260
In fact, if anything, it's probably

559
00:21:34,260 --> 00:21:36,560
just going to mean more Windows developers are writing

560
00:21:36,560 --> 00:21:38,400
server-side Linux applications.

561
00:21:38,400 --> 00:21:40,520
It's probably going to actually further the Linux

562
00:21:40,520 --> 00:21:42,080
server dominance.

563
00:21:42,080 --> 00:21:44,480
Maybe it's not great for the desktop, but overall,

564
00:21:44,480 --> 00:21:46,680
it's going to be good for Linux.

565
00:21:46,680 --> 00:21:51,000
But AWS and companies like them, like other companies

566
00:21:51,000 --> 00:21:52,440
that have these app platforms.

567
00:21:52,440 --> 00:21:54,760
These sneaky cloud services, huh?

568
00:21:54,760 --> 00:21:56,740
Right, or these serverless services

569
00:21:56,740 --> 00:21:59,840
that are working to essentially abstract Linux away.

570
00:21:59,840 --> 00:22:01,580
I think they take this argument that we

571
00:22:01,580 --> 00:22:04,400
used to worry about with WebMint or services like Cockpit,

572
00:22:04,400 --> 00:22:06,920
that, oh, the GUI makes it so you don't even

573
00:22:06,920 --> 00:22:07,960
have to learn Linux.

574
00:22:07,960 --> 00:22:10,080
And you don't even know how your system works.

575
00:22:10,080 --> 00:22:15,480
Well, that seems like a quaint concern compared

576
00:22:15,480 --> 00:22:19,000
to how things like serverless application platforms

577
00:22:19,000 --> 00:22:21,520
work now, where everything is simply

578
00:22:21,520 --> 00:22:24,080
an implementation detail behind the scenes,

579
00:22:24,080 --> 00:22:27,280
and the user and the developer never have to know any Linux.

580
00:22:27,280 --> 00:22:29,200
They never have to know a single command line.

581
00:22:29,200 --> 00:22:30,440
They don't have to know the name of any

582
00:22:30,440 --> 00:22:32,440
of the open source applications under the hood,

583
00:22:32,440 --> 00:22:33,860
making it possible.

584
00:22:33,860 --> 00:22:37,720
And this continues to be what all of these platforms push.

585
00:22:37,720 --> 00:22:40,360
It's the primary marketing point of DigitalOcean.

586
00:22:40,360 --> 00:22:43,600
It's the primary marketing point of AWS to small to medium

587
00:22:43,600 --> 00:22:44,560
business segments.

588
00:22:44,560 --> 00:22:46,680
It really is true.

589
00:22:46,680 --> 00:22:48,120
At the day job, same thing.

590
00:22:48,120 --> 00:22:49,480
There's a lot of rigmarole I have

591
00:22:49,480 --> 00:22:52,380
to even get something close to Docker exec

592
00:22:52,380 --> 00:22:53,800
into the container, despite all of it

593
00:22:53,800 --> 00:22:56,120
being running on Linux and powered by Container Tech.

594
00:22:56,120 --> 00:22:57,440
Right.

595
00:22:57,440 --> 00:23:00,800
And so I think while we are kind of looking over at WSL,

596
00:23:00,800 --> 00:23:02,920
worried that it's going to eat our lunch,

597
00:23:02,920 --> 00:23:04,640
it really would only take companies

598
00:23:04,640 --> 00:23:08,880
like Amazon and one or two others to flip a switch

599
00:23:08,880 --> 00:23:10,680
and start changing the implementations

600
00:23:10,680 --> 00:23:11,560
behind the scenes.

601
00:23:11,560 --> 00:23:14,000
As long as they're still executing the code that end

602
00:23:14,000 --> 00:23:16,760
users are expecting, the customers are expecting,

603
00:23:16,760 --> 00:23:18,680
I don't think they're going to care if it's a Mac

604
00:23:18,680 --> 00:23:21,120
on a power PC chip, executing the code as long as it

605
00:23:21,120 --> 00:23:23,080
runs fast enough and gives them the output they want

606
00:23:23,080 --> 00:23:24,040
at the price they want.

607
00:23:24,040 --> 00:23:26,320
The fuchsia subsystem for Linux, right.

608
00:23:26,320 --> 00:23:29,720
So I actually think that these companies that

609
00:23:29,720 --> 00:23:35,640
are abstracting Linux away are more dangerous than WSL is.

610
00:23:35,640 --> 00:23:39,880
They're more of a risk to Linux's actual core strength

611
00:23:39,880 --> 00:23:43,640
and position in the market, because you can kind of come in

612
00:23:43,640 --> 00:23:46,300
and sell on compatibility and ease,

613
00:23:46,300 --> 00:23:49,120
and then over time, Amazon could switch it on the back end

614
00:23:49,120 --> 00:23:51,240
to whatever they want, or Azure, or Digital Ocean.

615
00:23:51,240 --> 00:23:52,440
It could be any one of them.

616
00:23:52,440 --> 00:23:54,320
They could just flip a switch one day.

617
00:23:54,320 --> 00:23:56,120
And now it's running on their new platform,

618
00:23:56,120 --> 00:23:59,120
but all of the compatibility for the end user is still there.

619
00:23:59,120 --> 00:24:02,360
And so I wonder if Amazon is essentially

620
00:24:02,360 --> 00:24:05,360
over time in a position more and more

621
00:24:05,360 --> 00:24:08,320
to kill server Linux, which is actually

622
00:24:08,320 --> 00:24:10,140
the market of Linux that matters.

623
00:24:10,140 --> 00:24:13,040
And I wonder if anybody in the Mumble Room has thoughts.

624
00:24:13,040 --> 00:24:15,840
I don't think that they're going to do that.

625
00:24:15,840 --> 00:24:17,480
If you want to talk about anyone who

626
00:24:17,480 --> 00:24:19,520
would have any incentive to do that sort of thing,

627
00:24:19,520 --> 00:24:20,840
it'd be Google.

628
00:24:20,840 --> 00:24:25,160
AWS, I know AWS is often the boogeyman here,

629
00:24:25,160 --> 00:24:28,680
and I don't have much skin in this game at all.

630
00:24:28,680 --> 00:24:34,240
But AWS actually makes their own Linux distribution derived

631
00:24:34,240 --> 00:24:35,920
from Red Hat Enterprise Linux.

632
00:24:35,920 --> 00:24:39,840
They actively contribute to Fedora and the Fedora

633
00:24:39,840 --> 00:24:41,880
ecosystem and other distribution ecosystems.

634
00:24:41,880 --> 00:24:45,720
There's folks involved in SUSE Linux distributions, Debian

635
00:24:45,720 --> 00:24:46,480
and so on.

636
00:24:46,480 --> 00:24:50,080
And they even work with FreeBSD people.

637
00:24:50,080 --> 00:24:52,280
I think of the big cloud providers,

638
00:24:52,280 --> 00:24:55,100
AWS is actually the most open source friendly

639
00:24:55,100 --> 00:24:59,280
and the least likely to screw over the Linux ecosystem.

640
00:24:59,280 --> 00:25:02,040
I think few people remember how critical it

641
00:25:02,040 --> 00:25:05,720
was that Fedora supported Zen properly for them

642
00:25:05,720 --> 00:25:07,680
to even launch EC2.

643
00:25:07,680 --> 00:25:10,040
Fedora was the first Linux distribution

644
00:25:10,040 --> 00:25:11,080
that was available there.

645
00:25:11,080 --> 00:25:13,040
And there's a strong relationship

646
00:25:13,040 --> 00:25:17,600
between AWS and the Linux community as a whole.

647
00:25:17,600 --> 00:25:19,560
I don't think we have the similar strength

648
00:25:19,560 --> 00:25:22,400
of that relationship with the other cloud providers.

649
00:25:22,400 --> 00:25:25,080
And that's where I tend to be more worried.

650
00:25:25,080 --> 00:25:26,880
Microsoft has every incentive to do that,

651
00:25:26,880 --> 00:25:30,040
because they build an operating systems platform that

652
00:25:30,040 --> 00:25:32,880
is directly competing against Linux on all fronts.

653
00:25:32,880 --> 00:25:35,800
And they're winning on one out of three fronts.

654
00:25:35,800 --> 00:25:37,760
And the stuff that they're doing with Wizzle

655
00:25:37,760 --> 00:25:43,680
makes it a lot easier to chip away at it with Google.

656
00:25:43,680 --> 00:25:46,080
They're making Fuchsia.

657
00:25:46,080 --> 00:25:47,960
That is their project.

658
00:25:47,960 --> 00:25:51,400
Fuchsia has the ability to, if not now,

659
00:25:51,400 --> 00:25:54,200
will eventually have the ability to emulate enough

660
00:25:54,200 --> 00:25:56,240
of the user syscall interface to be

661
00:25:56,240 --> 00:25:59,960
able to run Linux applications in the same way WSL1 did.

662
00:25:59,960 --> 00:26:03,840
But in server workloads, the scale of syscalls and stuff

663
00:26:03,840 --> 00:26:05,860
that's being used is considerably more limited.

664
00:26:05,860 --> 00:26:08,760
And with containers, you already have so much filtering going

665
00:26:08,760 --> 00:26:11,520
on that you kind of have a good idea of what kind of surface

666
00:26:11,520 --> 00:26:13,800
you need to cover to be able to make stuff work.

667
00:26:13,800 --> 00:26:15,160
And so if you target it that way,

668
00:26:15,160 --> 00:26:17,920
you can do exactly what you're talking about.

669
00:26:17,920 --> 00:26:19,880
So AWS isn't the one I'm worried about.

670
00:26:19,880 --> 00:26:21,320
I'm worried about the other two.

671
00:26:21,320 --> 00:26:24,200
Carpino, you think you agree because Google's Fuchsia

672
00:26:24,200 --> 00:26:27,440
project could be this bait and switch swap?

673
00:26:27,440 --> 00:26:29,240
Yeah, I think so.

674
00:26:29,240 --> 00:26:31,840
I think it's not likely to happen anytime soon.

675
00:26:31,840 --> 00:26:35,220
But because Fuchsia is offered under a different license that

676
00:26:35,220 --> 00:26:39,640
is not GPL, it could provide a different kind of value

677
00:26:39,640 --> 00:26:40,680
for some companies.

678
00:26:40,680 --> 00:26:44,460
Therefore, the idea of investing in it

679
00:26:44,460 --> 00:26:46,760
may sound attractive for some people.

680
00:26:46,760 --> 00:26:48,920
There's kind of two things going on.

681
00:26:48,920 --> 00:26:51,840
There are maybe some competitors to Linux like Fuchsia coming up.

682
00:26:51,840 --> 00:26:54,000
But then also, I think the abstraction layer

683
00:26:54,000 --> 00:26:57,040
is just continuing to raise like it does, right?

684
00:26:57,040 --> 00:26:59,800
Like we are programming to higher standards.

685
00:26:59,800 --> 00:27:02,000
And so Linux is just becoming more and more truly

686
00:27:02,000 --> 00:27:04,340
of infrastructure, as it always has been.

687
00:27:04,340 --> 00:27:06,120
It's just that the infrastructure is just

688
00:27:06,120 --> 00:27:08,120
getting farther away from us as we go up the stack.

689
00:27:08,120 --> 00:27:10,280
Yeah, and somebody has to set up those systems

690
00:27:10,280 --> 00:27:12,640
to host those applications serverlessly.

691
00:27:12,640 --> 00:27:13,320
Yeah, right.

692
00:27:13,320 --> 00:27:14,600
There'll still be a lot of cloud providers

693
00:27:14,600 --> 00:27:18,240
using them at least for a while until it makes sense not to.

694
00:27:18,240 --> 00:27:19,820
And if they don't have to do that,

695
00:27:19,820 --> 00:27:22,160
and Linux means they don't have to reinvent the real,

696
00:27:22,160 --> 00:27:24,200
that seems like a good idea.

697
00:27:24,200 --> 00:27:26,840
Hey, Wes, let's duck over here.

698
00:27:26,840 --> 00:27:28,600
A little production side meeting.

699
00:27:28,600 --> 00:27:30,680
I think we should probably do this privately, though.

700
00:27:30,680 --> 00:27:34,640
The cone of silence.

701
00:27:34,640 --> 00:27:37,480
All right, this is a little awkward.

702
00:27:37,480 --> 00:27:41,360
So before we mention this on the show, you know, in the past,

703
00:27:41,360 --> 00:27:43,720
I've promoted a lot of the humble bundles.

704
00:27:43,720 --> 00:27:45,400
And they seem like a pretty good cause.

705
00:27:45,400 --> 00:27:47,240
Yeah, I mean, I've definitely bought a few.

706
00:27:47,240 --> 00:27:49,320
Yeah, yeah, I've bought more than a few.

707
00:27:49,320 --> 00:27:51,680
But I think they got like bought out.

708
00:27:51,680 --> 00:27:55,000
And I think they're making like weird, awkward changes.

709
00:27:55,000 --> 00:28:00,040
And like they don't allow you to contribute your payments

710
00:28:00,040 --> 00:28:02,240
to only devs who supported Linux anymore.

711
00:28:02,240 --> 00:28:04,360
And they're kind of like restricting how much you

712
00:28:04,360 --> 00:28:05,600
can give to charity now.

713
00:28:05,600 --> 00:28:07,480
And like no more than 15% now.

714
00:28:07,480 --> 00:28:09,200
They got a cap.

715
00:28:09,200 --> 00:28:10,480
I don't know, it's awkward, man.

716
00:28:10,480 --> 00:28:11,800
Do I say something on the show?

717
00:28:11,800 --> 00:28:13,600
Think you might have to?

718
00:28:13,600 --> 00:28:15,340
We should observe it at least anyway, you know?

719
00:28:15,340 --> 00:28:17,140
They've been pretty consistent over the years.

720
00:28:17,140 --> 00:28:18,480
So this is a big change.

721
00:28:18,480 --> 00:28:19,280
Yeah, it's awkward.

722
00:28:19,280 --> 00:28:20,240
It's definitely awkward.

723
00:28:20,240 --> 00:28:21,040
OK, all right.

724
00:28:21,040 --> 00:28:21,920
The cone of silence.

725
00:28:21,920 --> 00:28:26,200
Oh, dang it, I left my keys in the cone.

726
00:28:26,200 --> 00:28:28,280
Oh, Wes, dang it.

727
00:28:28,280 --> 00:28:30,240
Well, we'll have to go back in later.

728
00:28:30,240 --> 00:28:31,680
We have, because we have, first we

729
00:28:31,680 --> 00:28:33,080
have a public service announcement.

730
00:28:33,080 --> 00:28:37,800
The humble bundle pricing situation's

731
00:28:37,800 --> 00:28:38,840
getting a little weird.

732
00:28:38,840 --> 00:28:41,260
If you know what's going on, go to linuxunplug.com

733
00:28:41,260 --> 00:28:43,280
slash contact to let us know.

734
00:28:43,280 --> 00:28:45,600
Yeah, it seems like they've forced a certain set

735
00:28:45,600 --> 00:28:47,080
of default splits.

736
00:28:47,080 --> 00:28:49,340
And you just kind of go with that.

737
00:28:49,340 --> 00:28:51,040
And you don't have any choices, which

738
00:28:51,040 --> 00:28:53,480
was all the fun before, really.

739
00:28:53,480 --> 00:28:54,520
And so I don't know why.

740
00:28:54,520 --> 00:28:56,240
Maybe they just, it wasn't sustainable.

741
00:28:56,240 --> 00:28:59,700
Maybe the new owners need some different revenue goals.

742
00:28:59,700 --> 00:29:01,160
I don't know what it is, but I wanted

743
00:29:01,160 --> 00:29:03,480
to let you guys know that they have capped the amount you

744
00:29:03,480 --> 00:29:06,160
can give to charities at 15%, and they have changed it

745
00:29:06,160 --> 00:29:09,680
so that you can no longer adjust your payments so that only

746
00:29:09,680 --> 00:29:12,560
developers who supported Linux would get paid,

747
00:29:12,560 --> 00:29:14,840
which I understand that everybody should get

748
00:29:14,840 --> 00:29:16,120
some value for their product.

749
00:29:16,120 --> 00:29:17,840
But I really liked trying to give

750
00:29:17,840 --> 00:29:20,240
the bulk of my contribution to Linux developers

751
00:29:20,240 --> 00:29:22,680
to kind of vote with my wallet.

752
00:29:22,680 --> 00:29:24,960
So Wes didn't want to let you guys know.

753
00:29:24,960 --> 00:29:27,440
He said don't tell you, but I thought you should know.

754
00:29:27,440 --> 00:29:29,560
Well, I thought it would really get them down.

755
00:29:29,560 --> 00:29:32,520
You know, there's enough bad news these days already.

756
00:29:32,520 --> 00:29:33,240
That's true.

757
00:29:33,240 --> 00:29:33,740
That's true.

758
00:29:33,740 --> 00:29:36,760
I have some good news.

759
00:29:36,760 --> 00:29:39,200
MailRoute.net slash Linux.

760
00:29:39,200 --> 00:29:41,160
Try out MailRoute today and get 10%

761
00:29:41,160 --> 00:29:43,000
off the lifetime of your account and start

762
00:29:43,000 --> 00:29:46,120
with a 30-day free trial, no credit card required.

763
00:29:46,120 --> 00:29:48,160
That's right, MailRoute's back for another episode

764
00:29:48,160 --> 00:29:49,920
because it just is such a great fit.

765
00:29:49,920 --> 00:29:52,000
We heard from a bunch of you last week

766
00:29:52,000 --> 00:29:53,400
that tried out MailRoute.

767
00:29:53,400 --> 00:29:55,480
They've been doing MailRoute for 24 years.

768
00:29:55,480 --> 00:29:57,680
Yeah, they've been focused on one thing,

769
00:29:57,680 --> 00:29:59,520
providing cutting-edge email security.

770
00:29:59,520 --> 00:30:00,960
And you know I respect that.

771
00:30:00,960 --> 00:30:02,580
MailRoute protects your email server

772
00:30:02,580 --> 00:30:04,160
with a suite of services designed

773
00:30:04,160 --> 00:30:08,760
to remove spam, prevent viruses, and debilitating downtime.

774
00:30:08,760 --> 00:30:12,200
And with our audience who likes to host stuff on their own,

775
00:30:12,200 --> 00:30:14,640
you guys know sometimes it's tricky with your ISP

776
00:30:14,640 --> 00:30:15,640
or for your own security.

777
00:30:15,640 --> 00:30:18,880
Maybe you want to run SMTP on a different port.

778
00:30:18,880 --> 00:30:22,580
Or maybe for some stupid reason, your perfectly legitimate email

779
00:30:22,580 --> 00:30:24,240
server has ended up on a blacklist

780
00:30:24,240 --> 00:30:26,120
that you are constantly fighting.

781
00:30:26,120 --> 00:30:28,600
Oh, no more.

782
00:30:28,600 --> 00:30:32,400
MailRoute solves all of those problems and more.

783
00:30:32,400 --> 00:30:34,560
And they make it super easy for your business

784
00:30:34,560 --> 00:30:38,160
to migrate if you use Google Apps or Office 365.

785
00:30:38,160 --> 00:30:39,440
It's like one click.

786
00:30:39,440 --> 00:30:42,880
But really, even if you don't, I just

787
00:30:42,880 --> 00:30:44,420
set it up with our mail server that we

788
00:30:44,420 --> 00:30:46,000
built over the last couple of weeks.

789
00:30:46,000 --> 00:30:47,800
And it's crazy straightforward.

790
00:30:47,800 --> 00:30:50,920
If you know anything about managing a mail server,

791
00:30:50,920 --> 00:30:52,320
you can make this work.

792
00:30:52,320 --> 00:30:55,440
It's probably, you're probably done in 10 minutes,

793
00:30:55,440 --> 00:30:57,360
assuming you know the logins to your DNS

794
00:30:57,360 --> 00:30:59,960
and to your MailRoute account.

795
00:30:59,960 --> 00:31:02,000
But the one click migration is really sweet.

796
00:31:02,000 --> 00:31:04,020
And they do have API level integration

797
00:31:04,020 --> 00:31:06,760
for getting information in and out of MailRoute, which

798
00:31:06,760 --> 00:31:09,320
I really appreciate, especially if you want to make sure

799
00:31:09,320 --> 00:31:11,280
that you only allow mail from certain accounts

800
00:31:11,280 --> 00:31:13,400
and you want to sync it with your master mail server.

801
00:31:13,400 --> 00:31:14,560
Their API is great.

802
00:31:14,560 --> 00:31:16,480
If you do business with the federal government

803
00:31:16,480 --> 00:31:18,060
or you're a contractor where you have

804
00:31:18,060 --> 00:31:20,920
to meet certain types of requirements,

805
00:31:20,920 --> 00:31:23,000
well, they got you covered there as well.

806
00:31:23,000 --> 00:31:25,520
And as an admin, you're going to love the fact

807
00:31:25,520 --> 00:31:27,480
that they have real time log searches, which

808
00:31:27,480 --> 00:31:30,280
was super useful when we were setting up our mail server.

809
00:31:30,280 --> 00:31:34,560
And you also can queue mail up at MailRoute for up to 15 days

810
00:31:34,560 --> 00:31:36,440
or whenever you release it, which

811
00:31:36,440 --> 00:31:38,440
is perfect for covering you during an outage

812
00:31:38,440 --> 00:31:42,560
or maybe just a window for some maintenance.

813
00:31:42,560 --> 00:31:45,400
Like before that, I don't know what I would have done.

814
00:31:45,400 --> 00:31:47,760
Like what, just take the mail server down and hope nobody

815
00:31:47,760 --> 00:31:50,320
emails us during that time?

816
00:31:50,320 --> 00:31:51,560
It's so silly.

817
00:31:51,560 --> 00:31:55,160
So having something just in front of your mail server,

818
00:31:55,160 --> 00:31:57,720
it's just a higher quality, higher production grade.

819
00:31:57,720 --> 00:31:59,760
And of course, they know how to do this stuff.

820
00:31:59,760 --> 00:32:02,200
So go try out MailRoute today and get 10%

821
00:32:02,200 --> 00:32:05,520
off the lifetime of your account and get a 30-day free trial

822
00:32:05,520 --> 00:32:08,680
by visiting mailroute.net slash linux

823
00:32:08,680 --> 00:32:12,080
to protect your business and your email server.

824
00:32:12,080 --> 00:32:14,340
MailRoute makes email better.

825
00:32:14,340 --> 00:32:16,920
mailroute.net slash linux.

826
00:32:16,920 --> 00:32:20,840
Fedora 34 is a big release.

827
00:32:20,840 --> 00:32:21,640
It's huge.

828
00:32:21,640 --> 00:32:24,400
And there's a lot to talk about in here.

829
00:32:24,400 --> 00:32:27,160
So much to cover from both the desktop side,

830
00:32:27,160 --> 00:32:30,320
but also in the other Spains and Core technology.

831
00:32:30,320 --> 00:32:31,920
Whew, Wes.

832
00:32:31,920 --> 00:32:33,280
I don't even know where we start.

833
00:32:33,280 --> 00:32:35,600
Well, before we get too far along,

834
00:32:35,600 --> 00:32:39,280
maybe we should take a moment to address the long-term future

835
00:32:39,280 --> 00:32:40,640
of Fedora.

836
00:32:40,640 --> 00:32:44,680
I think it's safe and probably more secure than ever.

837
00:32:44,680 --> 00:32:46,920
Even after those recent CentOS changes.

838
00:32:46,920 --> 00:32:48,400
But I know there's a lot of people

839
00:32:48,400 --> 00:32:51,760
that have been worried about that, thinking maybe,

840
00:32:51,760 --> 00:32:54,200
well, look at the changes happening to CentOS.

841
00:32:54,200 --> 00:32:57,080
Could something like that happen to Fedora?

842
00:32:57,080 --> 00:32:58,560
But I mean, I don't see it.

843
00:32:58,560 --> 00:32:59,960
I don't think it really makes sense.

844
00:32:59,960 --> 00:33:03,120
It seems like Fedora's role really is needed.

845
00:33:03,120 --> 00:33:05,040
It's the place where everything happens first,

846
00:33:05,040 --> 00:33:07,160
where these things get integrated and tested

847
00:33:07,160 --> 00:33:07,800
and tried out.

848
00:33:07,800 --> 00:33:11,000
And the needed development can actually happen.

849
00:33:11,000 --> 00:33:13,240
Packages come in and they're ready to go.

850
00:33:13,240 --> 00:33:17,720
They happen, packages can be tweaked, bugs fixed.

851
00:33:17,720 --> 00:33:18,880
Core system stuff.

852
00:33:18,880 --> 00:33:21,720
Yeah, new approaches to both the server and the desktop,

853
00:33:21,720 --> 00:33:22,760
they all happen there.

854
00:33:22,760 --> 00:33:24,840
And Red Hat needs that.

855
00:33:24,840 --> 00:33:26,680
Right, they want it to happen there.

856
00:33:26,680 --> 00:33:29,280
It seems like it's now sort of integrated

857
00:33:29,280 --> 00:33:32,360
to the process of development in a way that is,

858
00:33:32,360 --> 00:33:33,720
I think you'd say it's codified.

859
00:33:33,720 --> 00:33:37,640
It's clear that for RHEL to be a successful product,

860
00:33:37,640 --> 00:33:39,840
when you look at it from a corporate org chart

861
00:33:39,840 --> 00:33:43,120
standpoint, Fedora is square one.

862
00:33:43,120 --> 00:33:44,960
It's like you start at Fedora.

863
00:33:44,960 --> 00:33:47,200
And for the end product that they make all the money

864
00:33:47,200 --> 00:33:50,760
from to be successful, Fedora has to be successful.

865
00:33:50,760 --> 00:33:55,240
And this new arrangement with CentOS Stream sort of codifies

866
00:33:55,240 --> 00:33:56,160
that, I think.

867
00:33:56,160 --> 00:33:56,960
Yeah, exactly.

868
00:33:56,960 --> 00:33:58,360
I mean, it makes it more clear, at least,

869
00:33:58,360 --> 00:34:00,240
to some of the stuff that was happening internally.

870
00:34:00,240 --> 00:34:03,480
Now you can just see it laid out in this pipeline of how things

871
00:34:03,480 --> 00:34:05,760
get created and how those changes eventually make

872
00:34:05,760 --> 00:34:08,280
themselves into a Red Hat release.

873
00:34:08,280 --> 00:34:11,400
But regardless of the details, I think we can just not worry.

874
00:34:11,400 --> 00:34:13,600
Don't be scared to try out Fedora 34.

875
00:34:13,600 --> 00:34:14,840
It's great.

876
00:34:14,840 --> 00:34:16,240
We should probably just highlight

877
00:34:16,240 --> 00:34:18,240
all the awesome things going on and maybe a few

878
00:34:18,240 --> 00:34:19,520
of the things we don't love.

879
00:34:19,520 --> 00:34:21,560
Yeah, and I think it's worth mentioning that there

880
00:34:21,560 --> 00:34:22,680
are many spins of Fedora.

881
00:34:22,680 --> 00:34:25,240
So we're going to talk at first a lot about the workstation

882
00:34:25,240 --> 00:34:27,680
version, which ships with GNOME Shell.

883
00:34:27,680 --> 00:34:29,600
But there's a plasma spin.

884
00:34:29,600 --> 00:34:30,760
There's a server spin.

885
00:34:30,760 --> 00:34:33,200
There's a lot of different versions here.

886
00:34:33,200 --> 00:34:34,560
And some of it is core technology

887
00:34:34,560 --> 00:34:36,440
that applies to all of them.

888
00:34:36,440 --> 00:34:38,440
If you want us to cover another one specifically,

889
00:34:38,440 --> 00:34:41,680
like a specific spin, totally let us know at the contact page.

890
00:34:41,680 --> 00:34:42,560
I would love to.

891
00:34:42,560 --> 00:34:43,720
I just don't want to overdo it.

892
00:34:43,720 --> 00:34:45,200
So if there's something you'd like

893
00:34:45,200 --> 00:34:47,040
us to look at specifically in this realm,

894
00:34:47,040 --> 00:34:48,980
please let us know, because otherwise, we

895
00:34:48,980 --> 00:34:50,520
are just sort of restraining ourselves

896
00:34:50,520 --> 00:34:52,200
and trying not to overdo it.

897
00:34:52,200 --> 00:34:54,200
Like the server spin, I think that's

898
00:34:54,200 --> 00:34:56,960
particularly interesting this release, potentially,

899
00:34:56,960 --> 00:35:00,120
because I believe, correct me if I'm wrong, guys,

900
00:35:00,120 --> 00:35:04,400
but I believe that the next rel is ultimately

901
00:35:04,400 --> 00:35:06,440
going to be based on Fedora 34.

902
00:35:06,440 --> 00:35:08,440
So what happens here is particularly interesting

903
00:35:08,440 --> 00:35:11,600
for several reasons beyond the immediate reasons.

904
00:35:11,600 --> 00:35:14,160
And no matter what variant of Fedora you use,

905
00:35:14,160 --> 00:35:16,440
you're going to get the latest in what the open source

906
00:35:16,440 --> 00:35:17,800
world has to offer.

907
00:35:17,800 --> 00:35:20,040
And really, all of what we're about to cover

908
00:35:20,040 --> 00:35:22,740
will show up in just about every distro near you soon,

909
00:35:22,740 --> 00:35:24,440
at least most of it.

910
00:35:24,440 --> 00:35:26,480
So let's start with the big headline feature

911
00:35:26,480 --> 00:35:31,160
in the workstation spin, which is GNOME 40, which we've

912
00:35:31,160 --> 00:35:32,520
talked about a little bit before.

913
00:35:32,520 --> 00:35:34,180
Yeah, I mean, it's not new in the sense

914
00:35:34,180 --> 00:35:35,760
that it was already released.

915
00:35:35,760 --> 00:35:38,640
But the first time it ships in a big name distro,

916
00:35:38,640 --> 00:35:40,020
that's something of a milestone.

917
00:35:40,020 --> 00:35:40,560
It is.

918
00:35:40,560 --> 00:35:41,400
And it's the first time you're going

919
00:35:41,400 --> 00:35:44,880
to really see it land in front of a lot of end users.

920
00:35:44,880 --> 00:35:46,720
And it's predominantly recognized for the change

921
00:35:46,720 --> 00:35:50,140
to horizontal workspace layouts, which

922
00:35:50,140 --> 00:35:52,560
is similar to how elementary OS has already been doing it.

923
00:35:52,560 --> 00:35:55,640
It's how I actually have my plasma setup configured most

924
00:35:55,640 --> 00:35:56,520
commonly.

925
00:35:56,520 --> 00:36:00,640
And it's a lot how Mac OS has done it for several releases.

926
00:36:00,640 --> 00:36:01,880
And I think how Windows 10 does it

927
00:36:01,880 --> 00:36:03,880
if you enable virtual workspaces, where everything

928
00:36:03,880 --> 00:36:06,440
is left to right, essentially.

929
00:36:06,440 --> 00:36:08,880
And once you learn it, it feels fast and natural.

930
00:36:08,880 --> 00:36:12,520
And actually, because it is so common with the other desktop

931
00:36:12,520 --> 00:36:15,720
platforms, it makes moving between all of those

932
00:36:15,720 --> 00:36:18,840
a little less frictiony, a little smoother on the brain.

933
00:36:18,840 --> 00:36:20,240
I like that a lot.

934
00:36:20,240 --> 00:36:22,160
But I think the other thing that hasn't really

935
00:36:22,160 --> 00:36:27,920
gotten a ton of appreciation in GNOME 40 is GTK 4.

936
00:36:27,920 --> 00:36:32,240
And GTK 4 is like at step one of getting awesome.

937
00:36:32,240 --> 00:36:34,280
And each inner release we're about to get,

938
00:36:34,280 --> 00:36:35,720
it gets even more awesome.

939
00:36:35,720 --> 00:36:39,520
And the awesome that I'm talking about is performance.

940
00:36:39,520 --> 00:36:43,000
I'm talking Vulkan rendering performance.

941
00:36:43,000 --> 00:36:44,320
And it's looking real good.

942
00:36:44,320 --> 00:36:46,680
And GTK 4 apps, snap.

943
00:36:46,680 --> 00:36:47,560
They really do.

944
00:36:47,560 --> 00:36:48,040
Yeah, man.

945
00:36:48,040 --> 00:36:50,920
And when you combine that with GNOME Shell 40 itself,

946
00:36:50,920 --> 00:36:52,480
that's a nice little package, right?

947
00:36:52,480 --> 00:36:55,360
I mean, I've just been playing with 2104 for a while

948
00:36:55,360 --> 00:36:57,920
and was thinking about keeping it around.

949
00:36:57,920 --> 00:37:00,620
It already felt much faster than the plasma desktop

950
00:37:00,620 --> 00:37:01,520
I'd been using before.

951
00:37:01,520 --> 00:37:03,800
But GNOME 40 is just the next level.

952
00:37:03,800 --> 00:37:07,360
Yeah, and I've been impressed at how fast extension developers

953
00:37:07,360 --> 00:37:09,480
are updating to support GNOME 40.

954
00:37:09,480 --> 00:37:12,360
They have to implicitly update their extension.

955
00:37:12,360 --> 00:37:14,840
Now, there are a few cons that I've noticed.

956
00:37:14,840 --> 00:37:16,960
And I want to preface these cons with I

957
00:37:16,960 --> 00:37:20,440
suspect they're all going to be addressed in future releases.

958
00:37:20,440 --> 00:37:22,200
But the reality is it's not as easy

959
00:37:22,200 --> 00:37:25,600
to get a quick overview of what apps are on which workspaces.

960
00:37:25,600 --> 00:37:27,960
In the vertical layout, you would have a right there,

961
00:37:27,960 --> 00:37:30,200
like a film strip on the side of your screen.

962
00:37:30,200 --> 00:37:33,040
And you would see all the different application windows

963
00:37:33,040 --> 00:37:35,960
across all of your desktops at once.

964
00:37:35,960 --> 00:37:39,820
With the horizontal layout, you see like 1.3 of a desktop

965
00:37:39,820 --> 00:37:40,400
at a time.

966
00:37:40,400 --> 00:37:41,860
It's just not quite as efficient.

967
00:37:41,860 --> 00:37:44,040
But it's so quick to slide through them.

968
00:37:44,040 --> 00:37:46,400
And they do have little tiny, tiny, tiny previews

969
00:37:46,400 --> 00:37:48,400
at the top that kind of give you an indication.

970
00:37:48,400 --> 00:37:50,760
Right, that where did I put that terminal problem?

971
00:37:50,760 --> 00:37:53,200
Yeah, that app I launched two days ago.

972
00:37:53,200 --> 00:37:55,520
Also, it's kind of hard to move the workspaces

973
00:37:55,520 --> 00:37:56,960
around themselves.

974
00:37:56,960 --> 00:37:58,640
Say you start a chat app.

975
00:37:58,640 --> 00:38:01,120
Maybe you've got two chat apps on one screen.

976
00:38:01,120 --> 00:38:03,320
And on the second desktop, I open up my browser.

977
00:38:03,320 --> 00:38:05,400
And then I decide I want to swap those two things.

978
00:38:05,400 --> 00:38:06,920
So the browser's on desktop one.

979
00:38:06,920 --> 00:38:09,880
And my two separate chat applications are on desktop two.

980
00:38:09,880 --> 00:38:12,200
The only way to do that right now in GNOME 40,

981
00:38:12,200 --> 00:38:14,560
instead of just being able to grab the virtual workspace,

982
00:38:14,560 --> 00:38:16,760
the whole workspace itself, and move it,

983
00:38:16,760 --> 00:38:19,520
you have to reshuffle all of the applications.

984
00:38:19,520 --> 00:38:21,320
So move all the apps over to one screen.

985
00:38:21,320 --> 00:38:23,520
And then move the other apps over to the other screen.

986
00:38:23,520 --> 00:38:25,800
And these tiny little boxes at the top of the screen

987
00:38:25,800 --> 00:38:28,040
in this little bitty, bitty preview,

988
00:38:28,040 --> 00:38:30,920
you just can't swap the workspaces around easily.

989
00:38:30,920 --> 00:38:33,080
But when you do get that layout right,

990
00:38:33,080 --> 00:38:34,560
after you've spent the day with it,

991
00:38:34,560 --> 00:38:37,360
and you figured out, OK, I like these apps on these screens

992
00:38:37,360 --> 00:38:40,000
and all of that, man, it rocks.

993
00:38:40,000 --> 00:38:41,400
And it rocks, really.

994
00:38:41,400 --> 00:38:44,520
It rocks in a way that feels super polished.

995
00:38:44,520 --> 00:38:46,400
And the only thing it leaves me wishing

996
00:38:46,400 --> 00:38:49,440
is that I could then somehow save and restore that layout.

997
00:38:49,440 --> 00:38:52,000
So I just log into GNOME Shell.

998
00:38:52,000 --> 00:38:55,440
And my applications always open up on those virtual desktops.

999
00:38:55,440 --> 00:38:57,440
Right, something that Plasma makes pretty easy.

1000
00:38:57,440 --> 00:38:59,000
Yeah, but man, is it smooth.

1001
00:38:59,000 --> 00:39:00,880
It feels very, very professional.

1002
00:39:00,880 --> 00:39:02,000
So that's GNOME Shell 40.

1003
00:39:02,000 --> 00:39:05,160
Really, overall, pretty much a positive take.

1004
00:39:05,160 --> 00:39:07,760
I'd like to see some work with additional external monitors,

1005
00:39:07,760 --> 00:39:09,120
but I know that stuff's coming.

1006
00:39:09,120 --> 00:39:11,800
I do think you hit on something that I noticed as well.

1007
00:39:11,800 --> 00:39:14,080
It is really great, but it is clearly

1008
00:39:14,080 --> 00:39:15,800
the start of a development chain.

1009
00:39:15,800 --> 00:39:18,000
There's some new ideas that are being explored and have

1010
00:39:18,000 --> 00:39:20,500
been recently implemented that are still getting worked out,

1011
00:39:20,500 --> 00:39:22,280
and that changes will happen too.

1012
00:39:22,280 --> 00:39:25,280
And that really felt contrasted to 2104,

1013
00:39:25,280 --> 00:39:27,680
sticking with the previous release, which, you know,

1014
00:39:27,680 --> 00:39:29,680
they'd polished out a little more of those things.

1015
00:39:29,680 --> 00:39:31,000
So depending on which way you like

1016
00:39:31,000 --> 00:39:32,180
to interact with your desktop, that

1017
00:39:32,180 --> 00:39:33,720
might be one way to sort of choose,

1018
00:39:33,720 --> 00:39:35,760
which of these new distros do I stick with?

1019
00:39:35,760 --> 00:39:40,680
In 2007, Fedora 8 was released.

1020
00:39:40,680 --> 00:39:43,640
And one of the headline features of Fedora 8,

1021
00:39:43,640 --> 00:39:47,000
I listened to my review this morning from Linux action show

1022
00:39:47,000 --> 00:39:48,840
like 67 or something.

1023
00:39:48,840 --> 00:39:49,640
Amazing.

1024
00:39:49,640 --> 00:39:52,780
Yeah, was Pulse Audio.

1025
00:39:52,780 --> 00:39:54,520
That was the release of Fedora that they

1026
00:39:54,520 --> 00:39:56,080
switched to Pulse Audio.

1027
00:39:56,080 --> 00:39:59,520
And I think everybody knows how that went.

1028
00:39:59,520 --> 00:40:03,360
In Fedora 34, this is the release

1029
00:40:03,360 --> 00:40:05,960
where they switched to PipeWire by default,

1030
00:40:05,960 --> 00:40:09,680
and it is a completely different migration.

1031
00:40:09,680 --> 00:40:12,040
Seems to be far more successful.

1032
00:40:12,040 --> 00:40:15,420
I mean, it's only just started, but at least in my testing,

1033
00:40:15,420 --> 00:40:17,380
you basically don't notice anything's different,

1034
00:40:17,380 --> 00:40:19,500
unless you use some, you know, there are picky apps.

1035
00:40:19,500 --> 00:40:21,760
There's still some Pulse modules that are getting

1036
00:40:21,760 --> 00:40:22,840
implemented here and there.

1037
00:40:22,840 --> 00:40:25,800
But by and large, it just works.

1038
00:40:25,800 --> 00:40:28,480
Not only does it just work from an end user experience,

1039
00:40:28,480 --> 00:40:31,480
but the project has been much more successful in reaching out

1040
00:40:31,480 --> 00:40:34,440
to the individual, quote unquote, stakeholders,

1041
00:40:34,440 --> 00:40:36,760
if you will, and getting them on board.

1042
00:40:36,760 --> 00:40:39,240
And even making changes, like I think in particular,

1043
00:40:39,240 --> 00:40:41,400
there was a lot of feedback from the Jack community

1044
00:40:41,400 --> 00:40:43,240
that influenced some of the design decisions

1045
00:40:43,240 --> 00:40:47,920
with PipeWire that meant that as PipeWire went along,

1046
00:40:47,920 --> 00:40:50,800
instead of turning people off and pissing them off

1047
00:40:50,800 --> 00:40:54,520
and kind of creating a divisive atmosphere,

1048
00:40:54,520 --> 00:40:56,680
it created this momentum of support.

1049
00:40:56,680 --> 00:40:58,680
And we started picking up application support

1050
00:40:58,680 --> 00:41:01,760
and library support and distribution support

1051
00:41:01,760 --> 00:41:04,340
and Linux media support.

1052
00:41:04,340 --> 00:41:07,520
And it all kind of really worked well.

1053
00:41:07,520 --> 00:41:10,140
Like, it was a good community management and code management.

1054
00:41:10,140 --> 00:41:11,480
Which is what you need if you're going

1055
00:41:11,480 --> 00:41:12,960
to try to be the unifier, right?

1056
00:41:12,960 --> 00:41:15,560
I mean, that's part of the promise of PipeWire,

1057
00:41:15,560 --> 00:41:18,280
is all of this stuff happening in one go, your Pulse

1058
00:41:18,280 --> 00:41:20,840
and your Jack, and you're also all happy together.

1059
00:41:20,840 --> 00:41:23,000
And in particular, one thing you get out of this now

1060
00:41:23,000 --> 00:41:25,800
if you're using Jack is way better and easier access

1061
00:41:25,800 --> 00:41:28,440
to Bluetooth devices, thanks to PipeWire.

1062
00:41:28,440 --> 00:41:30,640
Yeah, and really just, I think, an easier time

1063
00:41:30,640 --> 00:41:32,560
kind of getting up and going and configuring

1064
00:41:32,560 --> 00:41:34,400
Jack applications.

1065
00:41:34,400 --> 00:41:38,340
It sort of solves some of the fundamental plumbing

1066
00:41:38,340 --> 00:41:39,880
that you used to have to worry about

1067
00:41:39,880 --> 00:41:41,800
and makes it just all of a sudden,

1068
00:41:41,800 --> 00:41:43,600
like these applications that have been around for a while,

1069
00:41:43,600 --> 00:41:45,540
even easier to use in some respects.

1070
00:41:45,540 --> 00:41:48,760
It is neat as a moment right now of PipeWire happening.

1071
00:41:48,760 --> 00:41:51,160
I think we all had a lot of confidence in the project just

1072
00:41:51,160 --> 00:41:53,960
because of the folks developing it and their history and skill

1073
00:41:53,960 --> 00:41:56,480
and just sort of the previews we'd seen along the way.

1074
00:41:56,480 --> 00:41:59,040
And we've certainly covered it a lot on this show.

1075
00:41:59,040 --> 00:42:02,240
But the fact that it is not used for audio yet,

1076
00:42:02,240 --> 00:42:04,920
but deployed in 2104 and now shipping

1077
00:42:04,920 --> 00:42:08,060
with audio in Fedora 34, I don't know.

1078
00:42:08,060 --> 00:42:09,840
If this goes well, it seems like PipeWire

1079
00:42:09,840 --> 00:42:11,600
is here to stay after this.

1080
00:42:11,600 --> 00:42:14,720
I think this is the part of the technology stack of this release

1081
00:42:14,720 --> 00:42:16,240
that you and I are the most excited about.

1082
00:42:16,240 --> 00:42:18,160
And we don't know what the line is.

1083
00:42:18,160 --> 00:42:20,880
Should we talk about it a lot?

1084
00:42:20,880 --> 00:42:23,840
Or is it like inside baseball podcaster stuff

1085
00:42:23,840 --> 00:42:26,200
and so we just cover the high details and move on?

1086
00:42:26,200 --> 00:42:27,200
So let us know.

1087
00:42:27,200 --> 00:42:29,060
That's another area we'd like feedback.

1088
00:42:29,060 --> 00:42:31,400
But something that's a bit of peace of mind for me

1089
00:42:31,400 --> 00:42:33,960
in this release is that this version of Fedora

1090
00:42:33,960 --> 00:42:36,900
ships with ExWayland standalone.

1091
00:42:36,900 --> 00:42:38,360
This is nice because you've probably

1092
00:42:38,360 --> 00:42:41,920
heard that Xorg releases are a bit unmaintained.

1093
00:42:41,920 --> 00:42:44,880
The current upstream release has stuck to the 120 branch

1094
00:42:44,880 --> 00:42:49,440
for years with no real foreseeable major update,

1095
00:42:49,440 --> 00:42:50,440
at least.

1096
00:42:50,440 --> 00:42:53,520
But what they've done with this standalone ExWayland session

1097
00:42:53,520 --> 00:42:56,680
is they've built it from the Git snapshots of current code

1098
00:42:56,680 --> 00:42:58,720
upstream rather than the stable branch,

1099
00:42:58,720 --> 00:43:00,420
so where the fixes have kind of landed.

1100
00:43:00,420 --> 00:43:03,480
And they've broken it off out from Wayland itself.

1101
00:43:03,480 --> 00:43:04,400
It's nice to see that.

1102
00:43:04,400 --> 00:43:06,160
And it could probably even, I mean,

1103
00:43:06,160 --> 00:43:08,160
not only could it result in better performance,

1104
00:43:08,160 --> 00:43:11,040
but maybe even in some use cases better battery life

1105
00:43:11,040 --> 00:43:13,680
if you're not running any X applications now,

1106
00:43:13,680 --> 00:43:14,960
this won't be running at all.

1107
00:43:14,960 --> 00:43:15,840
Yeah, definitely.

1108
00:43:15,840 --> 00:43:17,500
And it just sort of wasn't accessible.

1109
00:43:17,500 --> 00:43:19,080
There were fixes going in, and that

1110
00:43:19,080 --> 00:43:20,800
was the main part of the sort of X repo

1111
00:43:20,800 --> 00:43:22,280
actually seeing any development.

1112
00:43:22,280 --> 00:43:24,200
But when they weren't being shipped,

1113
00:43:24,200 --> 00:43:25,760
no one had access to them.

1114
00:43:25,760 --> 00:43:28,520
You don't want to just pull from that without having tested it.

1115
00:43:28,520 --> 00:43:30,960
So it's nice to see that there was enough developer

1116
00:43:30,960 --> 00:43:33,920
effort to sort of bootstrap this, keep it alive,

1117
00:43:33,920 --> 00:43:35,080
and functioning nicely.

1118
00:43:35,080 --> 00:43:37,140
Yeah, I bet you'll see other distributions

1119
00:43:37,140 --> 00:43:39,640
follow this particular suit.

1120
00:43:39,640 --> 00:43:42,680
Another nicety, and for several reasons,

1121
00:43:42,680 --> 00:43:46,040
is that Wayland is now the default for the plasma spin.

1122
00:43:46,040 --> 00:43:47,480
So you know, Plasma's Wayland support

1123
00:43:47,480 --> 00:43:51,000
has been getting pretty good and pretty much daily

1124
00:43:51,000 --> 00:43:53,560
drivable in 5.20, and even better in 5.21,

1125
00:43:53,560 --> 00:43:55,800
which is what's shipping with Fedora 34.

1126
00:43:55,800 --> 00:44:00,560
And so it's a great kind of milestone that was set.

1127
00:44:00,560 --> 00:44:02,140
Because when the Fedora project said,

1128
00:44:02,140 --> 00:44:05,960
we're switching to Wayland by default for our plasma spin,

1129
00:44:05,960 --> 00:44:10,040
the Plasma project saw that and realized,

1130
00:44:10,040 --> 00:44:11,860
we've got to double down on this code.

1131
00:44:11,860 --> 00:44:14,080
We've got to get this shippable and working.

1132
00:44:14,080 --> 00:44:17,840
And not in a bad way, like in a very kind of cooperative,

1133
00:44:17,840 --> 00:44:19,760
well, this project set a goal, and we're

1134
00:44:19,760 --> 00:44:22,160
going to work hard to help them succeed at that goal,

1135
00:44:22,160 --> 00:44:24,240
and it's going to be good for our project, too.

1136
00:44:24,240 --> 00:44:27,360
And it was a good example of how Fedora 34

1137
00:44:27,360 --> 00:44:30,200
played a role in a wider ecosystem improvement

1138
00:44:30,200 --> 00:44:31,280
for Wayland support.

1139
00:44:31,280 --> 00:44:33,520
Yeah, you can really see that even just in the change here

1140
00:44:33,520 --> 00:44:35,520
and on their post about it on the Fedora Wiki,

1141
00:44:35,520 --> 00:44:37,220
where they write, Fedora has long

1142
00:44:37,220 --> 00:44:39,480
been a leader in advancing the adoption of the Wayland

1143
00:44:39,480 --> 00:44:40,200
protocol.

1144
00:44:40,200 --> 00:44:41,920
Much of the quality of Wayland for GNOME

1145
00:44:41,920 --> 00:44:44,560
can be attributed to the work done by the Fedora Workstation

1146
00:44:44,560 --> 00:44:45,680
working group.

1147
00:44:45,680 --> 00:44:47,800
It's now the KDE special interest group's turn

1148
00:44:47,800 --> 00:44:50,000
to do the same for the KDE platform.

1149
00:44:50,000 --> 00:44:52,680
So I think there really is this sort of shared responsibility

1150
00:44:52,680 --> 00:44:55,600
and help and goal to sort of push things over the hill

1151
00:44:55,600 --> 00:44:57,400
and get it nicely working now that we've

1152
00:44:57,400 --> 00:45:00,880
got stuff like NVIDIA proprietary support working,

1153
00:45:00,880 --> 00:45:03,160
screencasting, middle click paste,

1154
00:45:03,160 --> 00:45:05,720
all the sort of 90% little paper cut

1155
00:45:05,720 --> 00:45:07,440
stuff that needed to be in there before you

1156
00:45:07,440 --> 00:45:08,960
could really ship it.

1157
00:45:08,960 --> 00:45:10,600
Yeah, there's still edge cases.

1158
00:45:10,600 --> 00:45:14,320
The other day I had this problem where for whatever reason

1159
00:45:14,320 --> 00:45:16,760
until I rebooted, my Wayland applications could not

1160
00:45:16,760 --> 00:45:19,140
copy and paste to my ex-Wayland applications.

1161
00:45:19,140 --> 00:45:20,600
It's a problem that's been solved,

1162
00:45:20,600 --> 00:45:22,600
but it just started hitting me the other day.

1163
00:45:22,600 --> 00:45:25,520
And so it's not all there.

1164
00:45:25,520 --> 00:45:29,880
But I am such a performance nut that I

1165
00:45:29,880 --> 00:45:32,240
will live with those paper cuts to get

1166
00:45:32,240 --> 00:45:34,240
the smoothness of Wayland.

1167
00:45:34,240 --> 00:45:38,360
On my X1 Carbon with the full Fedora stack,

1168
00:45:38,360 --> 00:45:42,040
it's so damn good that I think you could hold that up

1169
00:45:42,040 --> 00:45:45,520
as an example of a premier Linux experience.

1170
00:45:45,520 --> 00:45:47,600
And it makes me really excited for this technology

1171
00:45:47,600 --> 00:45:50,680
to land in other distributions as well.

1172
00:45:50,680 --> 00:45:53,960
I also decided to give it a spin on something a little different,

1173
00:45:53,960 --> 00:45:54,640
Wes.

1174
00:45:54,640 --> 00:45:58,880
I tried out the ARM64 image on my Raspberry Pi 400.

1175
00:45:58,880 --> 00:45:59,560
Oh, yeah, right.

1176
00:45:59,560 --> 00:46:03,320
There's a new ARM64 KDE Plasma desktop image

1177
00:46:03,320 --> 00:46:04,760
available this time around.

1178
00:46:04,760 --> 00:46:05,240
Yep.

1179
00:46:05,240 --> 00:46:06,560
What did you think?

1180
00:46:06,560 --> 00:46:09,760
You know, it's not super fast, Wes.

1181
00:46:09,760 --> 00:46:12,400
It's a little bit faster, I felt like, than the GNOME Shell

1182
00:46:12,400 --> 00:46:15,240
images, which is probably not too surprising.

1183
00:46:15,240 --> 00:46:17,240
But not fast enough for daily use.

1184
00:46:17,240 --> 00:46:18,600
Not fast enough at all.

1185
00:46:18,600 --> 00:46:21,000
The command line interface, perfectly fine.

1186
00:46:21,000 --> 00:46:23,720
If you wanted to use this thing to host some file services

1187
00:46:23,720 --> 00:46:27,960
for yourself or make it a LAN server, fine, great.

1188
00:46:27,960 --> 00:46:28,600
It'd be good.

1189
00:46:28,600 --> 00:46:33,440
But as a desktop environment, Wes, it's just not quite there.

1190
00:46:33,440 --> 00:46:34,880
We're not there yet, huh?

1191
00:46:34,880 --> 00:46:37,920
Or maybe you needed something more lightweight, I guess.

1192
00:46:37,920 --> 00:46:42,400
And I was running it from a SSD over USB 3, not from an SD card.

1193
00:46:42,400 --> 00:46:44,600
So I was kind of giving it a performance advantage.

1194
00:46:44,600 --> 00:46:45,720
You were trying, yeah.

1195
00:46:45,720 --> 00:46:48,600
And the Pi 400 is slightly faster than the Raspberry Pi

1196
00:46:48,600 --> 00:46:51,000
4 vanilla.

1197
00:46:51,000 --> 00:46:53,840
Someday, those things will be a regular desktop.

1198
00:46:53,840 --> 00:46:55,960
What I really want, actually, my goal,

1199
00:46:55,960 --> 00:46:58,000
and I think they're going to get there eventually,

1200
00:46:58,000 --> 00:47:05,800
my goal is to have a Pi device of some kind that is on 24-7

1201
00:47:05,800 --> 00:47:07,780
that's logged into all my stuff.

1202
00:47:07,780 --> 00:47:10,760
So if my desktop ever breaks, or an update goes haywire,

1203
00:47:10,760 --> 00:47:13,320
or I want to reload for a day for some crazy thing

1204
00:47:13,320 --> 00:47:16,680
we're doing on the show, I want to have an appliance that

1205
00:47:16,680 --> 00:47:20,840
has my chat apps, my email, and my web browser ready to go

1206
00:47:20,840 --> 00:47:25,360
for me all the time, just like a mission-critical console that's

1207
00:47:25,360 --> 00:47:27,880
in my office that takes up very little space.

1208
00:47:27,880 --> 00:47:30,640
And the great thing about the Pi 400 for this job

1209
00:47:30,640 --> 00:47:33,120
is that it's the keyboard and the computer in one.

1210
00:47:33,120 --> 00:47:35,480
And as silly as that sounds, it means

1211
00:47:35,480 --> 00:47:37,280
it takes up a lot less space, because I just

1212
00:47:37,280 --> 00:47:41,000
have an HDMI cable, and a USB-C cable, and a mouse.

1213
00:47:41,000 --> 00:47:42,120
It's simple.

1214
00:47:42,120 --> 00:47:42,760
It's great.

1215
00:47:42,760 --> 00:47:45,160
I actually do ethernet too, but it's really nice.

1216
00:47:45,160 --> 00:47:47,320
So I'm hoping, and I honestly just,

1217
00:47:47,320 --> 00:47:51,240
I think maybe Manjaro has invested more in this area.

1218
00:47:51,240 --> 00:47:52,880
They've spent more time here.

1219
00:47:52,880 --> 00:47:55,960
But the Manjaro versions on the Pi 400

1220
00:47:55,960 --> 00:47:58,680
are significantly better, like absolutely I

1221
00:47:58,680 --> 00:48:01,920
can do that job with Manjaro or Ubuntu 20.04.

1222
00:48:01,920 --> 00:48:04,440
OK, so maybe there just needs to be a little more tuning.

1223
00:48:04,440 --> 00:48:05,920
That's hopeful.

1224
00:48:05,920 --> 00:48:06,840
Could be, could be.

1225
00:48:06,840 --> 00:48:08,240
I learned a valuable lesson, though,

1226
00:48:08,240 --> 00:48:10,680
thanks to Neil, who responded to a quick question I

1227
00:48:10,680 --> 00:48:11,880
had during the week.

1228
00:48:11,880 --> 00:48:15,000
To make it work, you need to really, for the best time,

1229
00:48:15,000 --> 00:48:16,840
I mean, there's probably 1,000 ways to do it,

1230
00:48:16,840 --> 00:48:18,660
but you really should use the Fedora media

1231
00:48:18,660 --> 00:48:21,480
writer to make the whole thing actually bootable.

1232
00:48:21,480 --> 00:48:24,960
And there's some cool options it gives you, some nice-to-haves,

1233
00:48:24,960 --> 00:48:28,400
like turn off the boot splash so you can see all of the output,

1234
00:48:28,400 --> 00:48:30,320
or turn on SSH, or some options you

1235
00:48:30,320 --> 00:48:32,360
might use if you didn't have a monitor hooked up.

1236
00:48:32,360 --> 00:48:33,640
So it's a really nice tool.

1237
00:48:33,640 --> 00:48:36,360
Also nice to see that you can use it from the Mac and Windows

1238
00:48:36,360 --> 00:48:37,080
too, if you need.

1239
00:48:37,080 --> 00:48:37,720
Oh, really?

1240
00:48:37,720 --> 00:48:40,120
They have, oh, well, OK, I did not know that.

1241
00:48:40,120 --> 00:48:41,680
So they have Mac and Windows versions

1242
00:48:41,680 --> 00:48:43,240
of the Fedora media writer?

1243
00:48:43,240 --> 00:48:45,600
That's great.

1244
00:48:45,600 --> 00:48:46,600
Good for them.

1245
00:48:46,600 --> 00:48:50,080
All right, well, moving down the stack a little bit,

1246
00:48:50,080 --> 00:48:51,920
another kind of headline feature here

1247
00:48:51,920 --> 00:48:55,040
is ButterFS transparent compression.

1248
00:48:55,040 --> 00:48:57,600
And if you're like me, and you are around

1249
00:48:57,600 --> 00:49:00,680
during the drive-doubler days of the DOS era,

1250
00:49:00,680 --> 00:49:03,320
this is a totally different beast,

1251
00:49:03,320 --> 00:49:06,200
and it could be particularly great for SSD users.

1252
00:49:06,200 --> 00:49:07,560
So where do you want to start, Wes?

1253
00:49:07,560 --> 00:49:09,480
Well, maybe we should start and say,

1254
00:49:09,480 --> 00:49:11,840
this isn't a new feature for ButterFS,

1255
00:49:11,840 --> 00:49:15,400
but what's new here is Fedora adding it on by default.

1256
00:49:15,400 --> 00:49:17,360
You could add it if you'd like, but I don't even

1257
00:49:17,360 --> 00:49:19,880
think it's a default. Just when you make a ButterFS file

1258
00:49:19,880 --> 00:49:22,760
system, you have to manually go in there and add the mount

1259
00:49:22,760 --> 00:49:25,040
flags to say, hey, do compression.

1260
00:49:25,040 --> 00:49:27,600
So like with a lot of things in Fedora,

1261
00:49:27,600 --> 00:49:30,280
this is some trust in saying, this makes sense.

1262
00:49:30,280 --> 00:49:33,280
It works in enough use cases that we think all of our users

1263
00:49:33,280 --> 00:49:35,880
should have it, at least if they're using ButterFS.

1264
00:49:35,880 --> 00:49:36,880
I'm going to use this.

1265
00:49:36,880 --> 00:49:38,800
Totally think this is a great feature.

1266
00:49:38,800 --> 00:49:41,600
But it did cross my mind, like, what if something goes wrong?

1267
00:49:41,600 --> 00:49:43,880
Am I risking my data here?

1268
00:49:43,880 --> 00:49:46,960
Sounds like they checked that out as part of this change.

1269
00:49:46,960 --> 00:49:49,840
And as far as we know, known compression-related

1270
00:49:49,840 --> 00:49:54,080
bugs are just kind of cosmetic, nothing that is data loss.

1271
00:49:54,080 --> 00:49:56,840
And this has been in the file system for a while.

1272
00:49:56,840 --> 00:49:57,880
Seems like it just works.

1273
00:49:57,880 --> 00:49:58,240
OK.

1274
00:49:58,240 --> 00:50:00,080
Yeah, I know it's been in ButterFS for a while.

1275
00:50:00,080 --> 00:50:03,080
The change here is they're turning it on.

1276
00:50:03,080 --> 00:50:04,640
And I say good on them.

1277
00:50:04,640 --> 00:50:06,160
I say, too, if you're in CFS, you

1278
00:50:06,160 --> 00:50:07,720
should consider doing the same.

1279
00:50:07,720 --> 00:50:09,600
And they went with this compression algorithm

1280
00:50:09,600 --> 00:50:12,760
because I assume they must have looked at the impact on the CPU

1281
00:50:12,760 --> 00:50:14,360
and disk straight off and decided, OK,

1282
00:50:14,360 --> 00:50:15,520
this is the right one to use.

1283
00:50:15,520 --> 00:50:17,000
Yeah, they're using the Z standard.

1284
00:50:17,000 --> 00:50:19,560
Then they picked a specific default compression level

1285
00:50:19,560 --> 00:50:20,960
because it's tunable here, and you

1286
00:50:20,960 --> 00:50:22,360
can kind of choose different parameters, you know,

1287
00:50:22,360 --> 00:50:25,000
speed and how well does it compress and kind of pick

1288
00:50:25,000 --> 00:50:27,240
the one that made the most sense in terms of CPU usage

1289
00:50:27,240 --> 00:50:28,880
and memory and disk space savings.

1290
00:50:28,880 --> 00:50:31,000
What do you actually get out of it?

1291
00:50:31,000 --> 00:50:34,240
It's just so neat that because of the way our architectures

1292
00:50:34,240 --> 00:50:37,400
are and how fast CPUs are and how slow it can be sometimes

1293
00:50:37,400 --> 00:50:40,160
to talk to the disk, even a fast disk just

1294
00:50:40,160 --> 00:50:41,680
makes sense to compress things first.

1295
00:50:41,680 --> 00:50:43,320
And you don't ever have to worry about it.

1296
00:50:43,320 --> 00:50:46,280
Right, just get it to the CPU.

1297
00:50:46,280 --> 00:50:48,960
Just get that data to the CPU, then let it do its thing.

1298
00:50:48,960 --> 00:50:51,240
And this is probably available on the disk

1299
00:50:51,240 --> 00:50:52,240
you're using now.

1300
00:50:52,240 --> 00:50:56,080
You could make a partition and use compression today,

1301
00:50:56,080 --> 00:50:57,600
and you probably should consider it.

1302
00:50:57,600 --> 00:50:59,360
There's just one thing to remember.

1303
00:50:59,360 --> 00:51:01,720
It's kind of tricky when you're checking your free disk

1304
00:51:01,720 --> 00:51:03,760
space going forward due to the nature

1305
00:51:03,760 --> 00:51:04,880
of transparent compression.

1306
00:51:04,880 --> 00:51:06,400
It's transparent.

1307
00:51:06,400 --> 00:51:09,600
So utilities like DU are only going

1308
00:51:09,600 --> 00:51:12,320
to report the exact uncompressed file space

1309
00:51:12,320 --> 00:51:15,440
usage, which is not the actual space that they take up

1310
00:51:15,440 --> 00:51:16,080
on the disk.

1311
00:51:16,080 --> 00:51:17,560
So it gets a little tricky.

1312
00:51:17,560 --> 00:51:19,160
I assume there must be tools, Wes.

1313
00:51:19,160 --> 00:51:23,040
Yeah, the Fedora magazine had a good write-up about this feature,

1314
00:51:23,040 --> 00:51:25,840
and they recommend that they comp size utility.

1315
00:51:25,840 --> 00:51:27,960
If you're curious, of course, that'll be in the show notes.

1316
00:51:27,960 --> 00:51:29,480
And they've also got a good tip if you

1317
00:51:29,480 --> 00:51:31,360
want to go back and retroactively compress

1318
00:51:31,360 --> 00:51:33,840
older files if you've just added this mount option now,

1319
00:51:33,840 --> 00:51:36,400
because it only applies to future files.

1320
00:51:36,400 --> 00:51:38,320
Now a little bit further up in the stacks,

1321
00:51:38,320 --> 00:51:42,360
on the systemd layer, I thought we talked about this feature

1322
00:51:42,360 --> 00:51:44,840
in episode 351, but we're getting

1323
00:51:44,840 --> 00:51:47,960
systemd out of memory daemon now, which I guess

1324
00:51:47,960 --> 00:51:51,040
is different than the early OOM we've talked about before.

1325
00:51:51,040 --> 00:51:54,040
Yeah, it turns out there's a lot of options here.

1326
00:51:54,040 --> 00:51:57,800
Yeah, so last year at this time, I guess Fedora 32,

1327
00:51:57,800 --> 00:52:00,800
it would have been early OOM shipped in Fedora.

1328
00:52:00,800 --> 00:52:03,040
And that was a big change, and we talked about it.

1329
00:52:03,040 --> 00:52:04,800
Of course, there's also Facebook has some work,

1330
00:52:04,800 --> 00:52:06,240
which we talked about in this space.

1331
00:52:06,240 --> 00:52:07,800
They were interested and also helped

1332
00:52:07,800 --> 00:52:12,600
get new statistics like memory pressure, PSI metrics

1333
00:52:12,600 --> 00:52:13,640
into the kernel.

1334
00:52:13,640 --> 00:52:15,680
So they've got a tool that uses that,

1335
00:52:15,680 --> 00:52:19,480
also kind of enabled cgroups, and now systemd is in play.

1336
00:52:19,480 --> 00:52:21,080
Because if you have a daemon, it's

1337
00:52:21,080 --> 00:52:22,560
doing something on your Linux system,

1338
00:52:22,560 --> 00:52:23,840
you better just do it in systemd.

1339
00:52:23,840 --> 00:52:25,200
It's going to work out better.

1340
00:52:25,200 --> 00:52:27,880
Managing processes does make sense, right?

1341
00:52:27,880 --> 00:52:28,360
It does.

1342
00:52:28,360 --> 00:52:30,200
It does make sense to have that in systemd.

1343
00:52:30,200 --> 00:52:32,400
Yeah, and it's nice and smart and integrated.

1344
00:52:32,400 --> 00:52:35,080
It can do stuff per cgroup, lots of cleverness

1345
00:52:35,080 --> 00:52:38,000
with fancy new kernel features to try to get this right,

1346
00:52:38,000 --> 00:52:40,240
and do a better job of not killing stuff that

1347
00:52:40,240 --> 00:52:42,240
doesn't need to be killed, but also trying

1348
00:52:42,240 --> 00:52:44,440
to kill things early enough that it actually

1349
00:52:44,440 --> 00:52:45,840
helps save your system.

1350
00:52:45,840 --> 00:52:48,600
And I actually, I have not looked at this myself,

1351
00:52:48,600 --> 00:52:50,240
but I have been led to believe this

1352
00:52:50,240 --> 00:52:53,640
is simpler than, at least from a configuration standpoint,

1353
00:52:53,640 --> 00:52:55,600
than the previous stuff made by Facebook.

1354
00:52:55,600 --> 00:52:56,640
Yeah, sounds like it.

1355
00:52:56,640 --> 00:52:59,400
And it's neat that it's using that memory pressure indicator.

1356
00:52:59,400 --> 00:53:00,400
And so what it does, audience, I don't

1357
00:53:00,400 --> 00:53:01,960
think we've clearly explained this,

1358
00:53:01,960 --> 00:53:05,280
is it's monitoring applications and processes and whatever,

1359
00:53:05,280 --> 00:53:08,520
and it's checking for memory pressure and availability.

1360
00:53:08,520 --> 00:53:10,800
And if it has to, before your system gets really

1361
00:53:10,800 --> 00:53:12,960
crappy in a low memory situation, which

1362
00:53:12,960 --> 00:53:15,680
Linux is famous for, this thing will

1363
00:53:15,680 --> 00:53:19,280
kick in and essentially kill it to save the overall system.

1364
00:53:19,280 --> 00:53:21,320
Yeah, this systemd OOMD, I guess,

1365
00:53:21,320 --> 00:53:23,600
can also monitor similar stuff for swap

1366
00:53:23,600 --> 00:53:25,800
and act there to try to free up swap.

1367
00:53:25,800 --> 00:53:28,560
And according to Neil in the IRC room just now,

1368
00:53:28,560 --> 00:53:32,600
I guess early OOM was really just something of a stop gap

1369
00:53:32,600 --> 00:53:36,720
to try to get this feature out there while systemd OOMD was

1370
00:53:36,720 --> 00:53:37,600
in the works.

1371
00:53:37,600 --> 00:53:38,640
OK, and then there's one last thing

1372
00:53:38,640 --> 00:53:40,640
that I was waiting for you to kind of explain to me.

1373
00:53:40,640 --> 00:53:43,720
And that is, I think I must be mistaken,

1374
00:53:43,720 --> 00:53:45,040
but I guess it looks like they've

1375
00:53:45,040 --> 00:53:48,800
removed support for disabling the SELinux runtime.

1376
00:53:48,800 --> 00:53:52,520
What is this outrageous thing, Wes?

1377
00:53:52,520 --> 00:53:55,640
Oh, yeah, so people might be kind of confused by this.

1378
00:53:55,640 --> 00:53:59,680
So we should probably note upfront that by disabling SELinux,

1379
00:53:59,680 --> 00:54:02,080
what they mean is that the kernel doesn't call

1380
00:54:02,080 --> 00:54:04,200
into the SELinux subsystem at all.

1381
00:54:04,200 --> 00:54:07,440
Switching SELinux between permissive and enforcing,

1382
00:54:07,440 --> 00:54:10,600
using set enforce, that's not affected.

1383
00:54:10,600 --> 00:54:11,520
That's fully functional.

1384
00:54:11,520 --> 00:54:14,040
You can still set it to permissive mode.

1385
00:54:14,040 --> 00:54:16,280
What's changing here is kind of subtle.

1386
00:54:16,280 --> 00:54:18,200
You may never have used it.

1387
00:54:18,200 --> 00:54:19,680
Right now, SELinux can be disabled

1388
00:54:19,680 --> 00:54:22,480
by passing SELinux equals 0 on the command line

1389
00:54:22,480 --> 00:54:26,640
as you're booting, or in user space by a config file

1390
00:54:26,640 --> 00:54:29,600
in etsy SELinux slash config.

1391
00:54:29,600 --> 00:54:31,920
And then there's a library in user space lib SELinux

1392
00:54:31,920 --> 00:54:32,960
that reads that file.

1393
00:54:32,960 --> 00:54:36,560
And during boot, if you've told it to disable SELinux,

1394
00:54:36,560 --> 00:54:38,520
then that user space library actually

1395
00:54:38,520 --> 00:54:41,320
writes into the kernel unmount slash sys slash fs

1396
00:54:41,320 --> 00:54:43,880
slash SELinux and sort of disables it.

1397
00:54:43,880 --> 00:54:46,920
But doing it that way, while very flexible

1398
00:54:46,920 --> 00:54:49,720
and sort of helped out distros that had a harder time

1399
00:54:49,720 --> 00:54:53,000
or environments systems that had a harder time changing

1400
00:54:53,000 --> 00:54:55,400
or adding on to kernel parameters,

1401
00:54:55,400 --> 00:54:57,400
it did make some security trade-offs

1402
00:54:57,400 --> 00:54:59,320
when you're trying to use Linux security modules

1403
00:54:59,320 --> 00:55:01,120
like SELinux.

1404
00:55:01,120 --> 00:55:02,680
So now that's getting ripped out.

1405
00:55:02,680 --> 00:55:03,720
The only way to do it,

1406
00:55:03,720 --> 00:55:05,480
you can't use that config file anymore.

1407
00:55:05,480 --> 00:55:09,200
You have to pass SELinux equals 0 on the command line.

1408
00:55:09,200 --> 00:55:12,080
Ah, man, I polished this pitchfork and everything.

1409
00:55:12,080 --> 00:55:13,160
It was really shiny.

1410
00:55:13,160 --> 00:55:14,800
That sounds perfectly reasonable.

1411
00:55:14,800 --> 00:55:16,200
Yeah, it sure is.

1412
00:55:16,200 --> 00:55:18,400
You'll have to look elsewhere for drama today.

1413
00:55:18,400 --> 00:55:21,560
I'm also really, really liking what I see

1414
00:55:21,560 --> 00:55:23,680
for the future of grub configuration.

1415
00:55:23,680 --> 00:55:25,560
It looks like it could be a lot simpler

1416
00:55:25,560 --> 00:55:27,760
regardless of what platform you're on.

1417
00:55:27,760 --> 00:55:30,880
Fedora 34 uses unified grub config.

1418
00:55:30,880 --> 00:55:32,680
So the grub configuration file layouts

1419
00:55:32,680 --> 00:55:34,880
depend on the platform you're using.

1420
00:55:34,880 --> 00:55:37,800
So if you've got an old bio system or an open firmware

1421
00:55:37,800 --> 00:55:41,320
or an EFI system, it's gonna be different.

1422
00:55:41,320 --> 00:55:44,520
And that's confusing for your old podcast host here.

1423
00:55:44,520 --> 00:55:45,560
So the proposal,

1424
00:55:45,560 --> 00:55:46,960
and I don't know if it's actually shipping yet,

1425
00:55:46,960 --> 00:55:49,080
is to always store the grub config

1426
00:55:49,080 --> 00:55:52,400
and grub environment files in the same place,

1427
00:55:52,400 --> 00:55:54,400
slash boot, slash grub2 directory,

1428
00:55:54,400 --> 00:55:56,120
that place right there.

1429
00:55:56,120 --> 00:55:57,960
And then making small tweaks in another directory

1430
00:55:57,960 --> 00:56:00,280
and it always being consistent across all platforms.

1431
00:56:00,280 --> 00:56:02,120
Seems like it has some obvious benefits.

1432
00:56:02,120 --> 00:56:05,240
Yeah, it's just kind of more of what you'd expect.

1433
00:56:05,240 --> 00:56:06,200
And I don't know about you,

1434
00:56:06,200 --> 00:56:07,240
maybe there's a lot of users

1435
00:56:07,240 --> 00:56:09,320
who hopefully don't ever have to mess around with grub

1436
00:56:09,320 --> 00:56:10,680
or what goes on in slash boot.

1437
00:56:10,680 --> 00:56:11,960
But for whatever reason,

1438
00:56:11,960 --> 00:56:13,880
I'm fascinated by booting the kernel.

1439
00:56:13,880 --> 00:56:15,080
So I'm always mucking around in there,

1440
00:56:15,080 --> 00:56:17,360
even when I don't need to or just checking things out.

1441
00:56:17,360 --> 00:56:19,440
And on EFI systems in particular,

1442
00:56:19,440 --> 00:56:21,080
there's been a lot of variants around

1443
00:56:21,080 --> 00:56:22,920
how does the EFI partition get managed?

1444
00:56:22,920 --> 00:56:24,320
How does it get mounted and where?

1445
00:56:24,320 --> 00:56:25,880
And then what things go in there

1446
00:56:25,880 --> 00:56:27,800
versus go on like a slash boot partition

1447
00:56:27,800 --> 00:56:31,360
that's not the fat one, but like an ext4 version.

1448
00:56:31,360 --> 00:56:32,680
So now that's being simplified.

1449
00:56:32,680 --> 00:56:33,680
Everything's gonna be consistent

1450
00:56:33,680 --> 00:56:35,280
no matter where you're running Fedora.

1451
00:56:35,280 --> 00:56:37,520
And it's gonna be under slash boot slash grub

1452
00:56:37,520 --> 00:56:40,440
slash grub.cfg, like you'd expect.

1453
00:56:40,440 --> 00:56:41,960
And Neil says it has shipped.

1454
00:56:41,960 --> 00:56:44,440
That is so brilliant.

1455
00:56:44,440 --> 00:56:45,880
You know, and it's kind of thankless work.

1456
00:56:45,880 --> 00:56:47,200
Sure, it's like it doesn't really change anything.

1457
00:56:47,200 --> 00:56:48,640
It's not a new feature or anything.

1458
00:56:48,640 --> 00:56:50,080
I mean, there are benefits,

1459
00:56:50,080 --> 00:56:52,520
but it's just that kind of nice cleanup and maintenance

1460
00:56:52,520 --> 00:56:54,200
that is really nice to see.

1461
00:56:54,200 --> 00:56:56,920
Oh, 34 is such a solid release.

1462
00:56:56,920 --> 00:56:58,320
There's so much we could dig into.

1463
00:56:58,320 --> 00:57:00,880
If you have any specific questions or area of interest

1464
00:57:00,880 --> 00:57:02,520
that you found that you think maybe Wes

1465
00:57:02,520 --> 00:57:03,440
and I could geek out on,

1466
00:57:03,440 --> 00:57:07,120
let us know at linuxunplug.com slash contact

1467
00:57:07,120 --> 00:57:09,480
and congratulations to the entire team.

1468
00:57:09,480 --> 00:57:11,240
It is yet another fantastic release.

1469
00:57:11,240 --> 00:57:13,640
And it's, I think maybe an extra special one

1470
00:57:13,640 --> 00:57:17,040
with GNOME 40 and plasma switching to Wayland

1471
00:57:17,040 --> 00:57:20,840
and pipe wire landing and this unified grub stuff.

1472
00:57:20,840 --> 00:57:23,920
Wow, just really just very impressed.

1473
00:57:23,920 --> 00:57:25,480
Good work everybody.

1474
00:57:25,480 --> 00:57:28,920
Now, before we wrap up today,

1475
00:57:28,920 --> 00:57:31,760
we do just have a spot of housekeeping around here

1476
00:57:31,760 --> 00:57:35,640
because Minimac has a special Luplug announcement.

1477
00:57:35,640 --> 00:57:36,880
Yeah, thank you, Chris.

1478
00:57:36,880 --> 00:57:39,240
You know, Chris, I had a dream.

1479
00:57:39,240 --> 00:57:40,640
I always wanted to do a talk

1480
00:57:40,640 --> 00:57:43,160
about the MyCraft voice assistant project

1481
00:57:43,160 --> 00:57:46,000
and guess what, my dream will come true.

1482
00:57:46,000 --> 00:57:47,840
I'm in contact with Chris Gessling,

1483
00:57:47,840 --> 00:57:50,840
the community manager of the MyCraft project.

1484
00:57:50,840 --> 00:57:52,560
And we both hope to be able

1485
00:57:52,560 --> 00:57:55,440
to put together a cool talk for you.

1486
00:57:55,440 --> 00:57:58,960
The talk will be scheduled the 9th of May,

1487
00:57:58,960 --> 00:58:01,400
but we'll be already be playing around

1488
00:58:01,400 --> 00:58:04,240
with MyCraft next Sunday during Luplug.

1489
00:58:04,240 --> 00:58:06,640
So in case you want to give MyCraft a try,

1490
00:58:06,640 --> 00:58:09,320
we will give you a hand next Sunday.

1491
00:58:09,320 --> 00:58:11,800
Chris himself, so Chris Gessling himself

1492
00:58:11,800 --> 00:58:13,480
might not be available for the talk

1493
00:58:13,480 --> 00:58:15,720
because he is living in Down Under.

1494
00:58:15,720 --> 00:58:16,800
So I mean, for him,

1495
00:58:16,800 --> 00:58:20,040
the talk will be in the midst of the night.

1496
00:58:20,040 --> 00:58:22,840
So this is a call for participation

1497
00:58:22,840 --> 00:58:27,600
for our MyCraft talk of the 9th of May

1498
00:58:27,600 --> 00:58:29,720
and even for next Sunday.

1499
00:58:29,720 --> 00:58:31,840
Of course, we will also invite

1500
00:58:31,840 --> 00:58:33,680
the MyCraft community for that talk.

1501
00:58:33,680 --> 00:58:36,320
I don't understand, but I'm learning new things every day.

1502
00:58:36,320 --> 00:58:38,400
And now I was interrupted by MyCraft.

1503
00:58:38,400 --> 00:58:40,640
That will be our special guest.

1504
00:58:40,640 --> 00:58:42,480
Hey, MyCraft.

1505
00:58:42,480 --> 00:58:44,600
Hey, MyCraft.

1506
00:58:44,600 --> 00:58:46,520
Sing a song for us.

1507
00:58:46,520 --> 00:58:49,240
I would be happy to sing for you.

1508
00:58:49,240 --> 00:58:54,160
She packed my bags last night, pre-flight.

1509
00:58:54,160 --> 00:58:55,760
Hey, MyCraft.

1510
00:58:55,760 --> 00:58:57,120
Stop.

1511
00:58:57,120 --> 00:59:00,200
So Chris, I'm sure we will have a lot of fun

1512
00:59:00,200 --> 00:59:01,040
and that's all from me.

1513
00:59:01,040 --> 00:59:01,880
Thank you.

1514
00:59:01,880 --> 00:59:02,720
Thank you, Mini Mac.

1515
00:59:02,720 --> 00:59:04,960
Check out the Luplug every Sunday.

1516
00:59:04,960 --> 00:59:06,800
It's noon Pacific, 3 p.m. Eastern,

1517
00:59:06,800 --> 00:59:07,880
or get it in your time zone

1518
00:59:07,880 --> 00:59:11,360
at jupiterbroadcasting.com slash calendar.

1519
00:59:11,360 --> 00:59:13,640
That sounds like that's going to be a really great one.

1520
00:59:13,640 --> 00:59:15,400
And it's always fun to hang out in the lounge

1521
00:59:15,400 --> 00:59:17,480
in our Mumble server and just chat with people

1522
00:59:17,480 --> 00:59:18,840
that think like you do.

1523
00:59:18,840 --> 00:59:22,320
Information for the Mumble server is at linuxunplugged.com.

1524
00:59:24,600 --> 00:59:27,160
And thank you to our Unplugged Core contributors

1525
00:59:27,160 --> 00:59:28,800
at unpluggedcore.com.

1526
00:59:28,800 --> 00:59:31,400
I have a special note for you.

1527
00:59:31,400 --> 00:59:33,320
So check your feeds.

1528
00:59:33,320 --> 00:59:36,320
It's also in the member download area

1529
00:59:36,320 --> 00:59:40,400
for a very special exclusive deal to get 15%

1530
00:59:40,400 --> 00:59:43,000
off an item I have created for our members

1531
00:59:43,000 --> 00:59:45,400
in the Jupiter Garage at jupitergarage.com.

1532
00:59:45,400 --> 00:59:47,840
So go check your feed or the download area.

1533
00:59:47,840 --> 00:59:49,240
You'll see it there.

1534
00:59:49,240 --> 00:59:51,160
And then you can take 15% off for something,

1535
00:59:51,160 --> 00:59:52,920
which is the reason why it's 15% off

1536
00:59:52,920 --> 00:59:54,680
is really because that's the cost.

1537
00:59:54,680 --> 00:59:57,040
That's our, so you just get it at cost.

1538
00:59:57,040 --> 00:59:58,720
And it's a very limited item.

1539
00:59:58,720 --> 01:00:01,400
But our members make this show really possible

1540
01:00:01,400 --> 01:00:02,240
at the end of the day.

1541
01:00:02,240 --> 01:00:04,080
So we thank them at unpluggedcore.com

1542
01:00:04,080 --> 01:00:05,600
and a discount on something like that

1543
01:00:05,600 --> 01:00:07,940
is just one of the ways we can thank them.

1544
01:00:07,940 --> 01:00:11,280
But I also get two feed options,

1545
01:00:11,280 --> 01:00:14,080
a limited ad version of the show, same full production,

1546
01:00:14,080 --> 01:00:16,600
all the Joe Lovin, just less ads,

1547
01:00:16,600 --> 01:00:19,120
or the full live stream, which is like

1548
01:00:19,120 --> 01:00:21,080
another 1.5 shows really.

1549
01:00:21,080 --> 01:00:23,420
All our screw ups, which is a lot this week.

1550
01:00:23,420 --> 01:00:26,080
I had a liquid lunch.

1551
01:00:26,080 --> 01:00:27,120
On my way into the studio,

1552
01:00:27,120 --> 01:00:28,680
I grabbed me a See Ya Next Tuesday

1553
01:00:28,680 --> 01:00:30,460
because I just missed lunch.

1554
01:00:30,460 --> 01:00:31,800
So I grabbed a See Ya Next Tuesday

1555
01:00:31,800 --> 01:00:33,840
on the way into the studio and popped it open

1556
01:00:33,840 --> 01:00:35,520
and chugged it before I started the stream.

1557
01:00:35,520 --> 01:00:36,760
And I'm paying the price.

1558
01:00:36,760 --> 01:00:37,600
But you know what?

1559
01:00:37,600 --> 01:00:39,320
Joe cleans it all up.

1560
01:00:39,320 --> 01:00:42,060
If you'd like to see all of the hard work he does,

1561
01:00:42,060 --> 01:00:43,600
you can get the full live stream version

1562
01:00:43,600 --> 01:00:44,480
where you hear all of it

1563
01:00:44,480 --> 01:00:46,440
and you get all the extra content as well.

1564
01:00:46,440 --> 01:00:48,840
So thanks to our members at unpluggedcore.com

1565
01:00:48,840 --> 01:00:52,160
and make sure you go look for that special message.

1566
01:00:52,160 --> 01:00:53,840
It's like a phone call between me and you

1567
01:00:53,840 --> 01:00:56,680
and it's a discount and more information

1568
01:00:56,680 --> 01:00:58,300
on what I'm hinting at right now.

1569
01:00:58,300 --> 01:00:59,240
So thank you everybody.

1570
01:00:59,240 --> 01:01:00,540
We do appreciate you.

1571
01:01:01,940 --> 01:01:04,760
Couple of quick bits of feedback.

1572
01:01:04,760 --> 01:01:08,280
Jim wrote in after hosting email for six plus years.

1573
01:01:08,280 --> 01:01:09,800
You wanna take this one, Mr. Payne?

1574
01:01:09,800 --> 01:01:12,320
Jim wrote, I've hosted my own email server

1575
01:01:12,320 --> 01:01:15,480
for six plus years with almost all that time

1576
01:01:15,480 --> 01:01:17,320
performing minimal maintenance.

1577
01:01:17,320 --> 01:01:19,720
There's hope for us yet, Chris.

1578
01:01:19,720 --> 01:01:21,040
Servers pretty much remain the same

1579
01:01:21,040 --> 01:01:23,240
except for maybe compiling Dovecot a couple of times

1580
01:01:23,240 --> 01:01:24,980
to get new versions.

1581
01:01:24,980 --> 01:01:26,240
Originally, I'd followed a guide

1582
01:01:26,240 --> 01:01:29,040
and installed the email server on dedicated hardware.

1583
01:01:29,040 --> 01:01:31,920
But as I evolved in my Linux experience,

1584
01:01:31,920 --> 01:01:33,560
I actually implemented Proxmox

1585
01:01:33,560 --> 01:01:35,600
and was able to move that dedicated install

1586
01:01:35,600 --> 01:01:38,240
into a container without reinstalling.

1587
01:01:38,240 --> 01:01:39,340
Nice.

1588
01:01:39,340 --> 01:01:40,180
Interesting.

1589
01:01:40,180 --> 01:01:41,360
Here's another part that I had missed out on.

1590
01:01:41,360 --> 01:01:43,720
I guess two years ago,

1591
01:01:43,720 --> 01:01:47,240
Jim implemented Proxmox mail gateway container

1592
01:01:47,240 --> 01:01:49,480
which sets up a backend post effect server

1593
01:01:49,480 --> 01:01:51,360
while still using the web UI

1594
01:01:51,360 --> 01:01:54,320
of this Proxmox mail gateway to access it.

1595
01:01:54,320 --> 01:01:56,580
So you can still keep this existing setup

1596
01:01:56,580 --> 01:01:58,600
but just get a nice web GUI for free.

1597
01:01:58,600 --> 01:01:59,420
Awesome.

1598
01:01:59,420 --> 01:02:01,120
That is nice.

1599
01:02:01,120 --> 01:02:01,960
You know what?

1600
01:02:01,960 --> 01:02:02,840
That's the second mention I've heard

1601
01:02:02,840 --> 01:02:04,180
of this Proxmox mail gateway.

1602
01:02:04,180 --> 01:02:05,920
So that seems pretty, pretty good.

1603
01:02:05,920 --> 01:02:08,280
He said he has had some blacklist issues

1604
01:02:08,280 --> 01:02:09,880
but he just tries to ignore those ones.

1605
01:02:09,880 --> 01:02:12,320
He's lucky because I've had a lot worse.

1606
01:02:12,320 --> 01:02:14,200
But we also got a neat trick

1607
01:02:14,200 --> 01:02:16,480
for another self-hosted mail solution.

1608
01:02:16,480 --> 01:02:19,600
One that may be a solid replacement for mail in the box

1609
01:02:19,600 --> 01:02:20,720
if that doesn't work for you.

1610
01:02:20,720 --> 01:02:22,720
It's from Sir Lurksalot.

1611
01:02:22,720 --> 01:02:24,720
He says, apparently having been dropped

1612
01:02:24,720 --> 01:02:25,840
on my head at some point,

1613
01:02:25,840 --> 01:02:27,520
I also run my own mail server.

1614
01:02:27,520 --> 01:02:30,160
And I thought I would mention a neat feature of doing so

1615
01:02:30,160 --> 01:02:31,240
that I take advantage of.

1616
01:02:31,240 --> 01:02:32,360
So here's a reason why you might wanna

1617
01:02:32,360 --> 01:02:33,800
host your own mail server.

1618
01:02:33,800 --> 01:02:35,000
We also heard, by the way,

1619
01:02:35,000 --> 01:02:36,040
side note, Wes, we also heard

1620
01:02:36,040 --> 01:02:36,980
from a lot of people out there.

1621
01:02:36,980 --> 01:02:38,280
They're just like, hell yeah,

1622
01:02:38,280 --> 01:02:39,840
I'm still running my own mail server.

1623
01:02:39,840 --> 01:02:40,740
Good on you guys.

1624
01:02:40,740 --> 01:02:41,580
Go for it.

1625
01:02:41,580 --> 01:02:42,400
That's awesome.

1626
01:02:42,400 --> 01:02:43,240
Which I appreciate.

1627
01:02:43,240 --> 01:02:44,080
Yeah.

1628
01:02:44,080 --> 01:02:46,880
But he says that he uses this wildcard feature

1629
01:02:46,880 --> 01:02:50,360
which are aliases that any non-existing email address

1630
01:02:50,360 --> 01:02:52,240
that gets sent, like somebody emails something

1631
01:02:52,240 --> 01:02:55,040
at Bob at his server that doesn't exist,

1632
01:02:55,040 --> 01:02:58,520
it'll just forward to his main email account.

1633
01:02:58,520 --> 01:03:01,060
The reason why that's nice is he can easily make up

1634
01:03:01,060 --> 01:03:03,420
an email box name on the spot

1635
01:03:03,420 --> 01:03:05,220
when registering for an online service,

1636
01:03:05,220 --> 01:03:07,240
like make something specific for them.

1637
01:03:07,240 --> 01:03:09,280
And then never really have to worry about it

1638
01:03:09,280 --> 01:03:11,060
because it'll just show up in his mailbox.

1639
01:03:11,060 --> 01:03:13,040
And then if he ever wants to reply to it,

1640
01:03:13,040 --> 01:03:15,520
he just goes and creates a quick alias first

1641
01:03:15,520 --> 01:03:17,020
and then sends it off.

1642
01:03:17,020 --> 01:03:19,480
But he also wanted to recommend this tool

1643
01:03:19,480 --> 01:03:21,140
that's called Modoba.

1644
01:03:22,940 --> 01:03:24,080
Modoba.

1645
01:03:24,080 --> 01:03:27,760
M-O-D-O-B-O-A.org.

1646
01:03:27,760 --> 01:03:30,520
And it is an easy way to get up and running with mail,

1647
01:03:30,520 --> 01:03:32,300
perhaps a mail-in-a-box replacement.

1648
01:03:32,300 --> 01:03:35,660
It gives you Python and Django-based front-end interface

1649
01:03:35,660 --> 01:03:37,280
to manage Postfix, Dovecot,

1650
01:03:37,280 --> 01:03:39,560
and all of the related components.

1651
01:03:39,560 --> 01:03:41,100
We'll put a link to that in the show notes.

1652
01:03:41,100 --> 01:03:42,840
Wow, yeah, it looks like it's got web mail,

1653
01:03:42,840 --> 01:03:46,800
calendars, address book, filtering rules, auto response.

1654
01:03:46,800 --> 01:03:47,720
Fancy.

1655
01:03:47,720 --> 01:03:50,200
And you know, I love that first tip there

1656
01:03:50,200 --> 01:03:51,560
because it's kind of like what you can do

1657
01:03:51,560 --> 01:03:53,520
with Pluses and Gmail or Outlook,

1658
01:03:53,520 --> 01:03:55,100
but way more flexible,

1659
01:03:55,100 --> 01:03:58,100
especially for those picky websites that won't take a Plus.

1660
01:03:58,100 --> 01:04:01,600
["Pomp and Circumstance"]

1661
01:04:06,200 --> 01:04:09,120
And we have a Rust pick, not just any pick,

1662
01:04:09,120 --> 01:04:12,720
a Rust pick, and this one's a workspace

1663
01:04:12,720 --> 01:04:14,380
that's aimed at developers.

1664
01:04:14,380 --> 01:04:16,120
I think they call it like a terminal

1665
01:04:16,120 --> 01:04:18,360
with all batteries included.

1666
01:04:18,360 --> 01:04:20,360
Tell us about this little discovery, Wes.

1667
01:04:20,360 --> 01:04:24,320
Yeah, it's called Zelj, Zelj, I don't know.

1668
01:04:24,320 --> 01:04:28,860
Z-E-L-L-I-J, and of course, yes, it's written in Rust.

1669
01:04:28,860 --> 01:04:30,040
And while that part is exciting,

1670
01:04:30,040 --> 01:04:31,300
I think what's most exciting to me

1671
01:04:31,300 --> 01:04:32,700
is just sort of this new approach

1672
01:04:32,700 --> 01:04:34,400
at a terminal multiplexer.

1673
01:04:34,400 --> 01:04:36,820
And that's what it is at its core,

1674
01:04:36,820 --> 01:04:38,960
but that's just the infrastructure layer

1675
01:04:38,960 --> 01:04:41,080
because it also includes a layout system

1676
01:04:41,080 --> 01:04:44,640
and a plugin system allowing you to create plugins

1677
01:04:44,640 --> 01:04:47,560
in any language that compiles to WebAssembly.

1678
01:04:47,560 --> 01:04:49,960
Yeah, Rust and WebAssembly,

1679
01:04:49,960 --> 01:04:51,720
that's double hype for this project.

1680
01:04:51,720 --> 01:04:54,680
That's right, that is pretty great, and it looks good too.

1681
01:04:54,680 --> 01:04:56,160
And of course, because it's Rust,

1682
01:04:56,160 --> 01:04:58,240
there's a sketchy, just pre-compiled,

1683
01:04:58,240 --> 01:05:00,360
Musal-linked binary you can go download

1684
01:05:00,360 --> 01:05:02,120
to give it a try with minimal friction.

1685
01:05:02,120 --> 01:05:04,200
What could go wrong?

1686
01:05:04,200 --> 01:05:05,620
I would run it with pseudo privileges.

1687
01:05:05,620 --> 01:05:06,460
I would just do pseudo,

1688
01:05:06,460 --> 01:05:07,880
and then I'd run the binary directly.

1689
01:05:07,880 --> 01:05:09,400
It looks nice, though, I will say.

1690
01:05:09,400 --> 01:05:11,400
Like, I've got it up, and it's got fancy fonts

1691
01:05:11,400 --> 01:05:13,960
and a really nice banner at the bottom by default.

1692
01:05:13,960 --> 01:05:15,600
It might stick around.

1693
01:05:15,600 --> 01:05:16,440
Yeah, no, I tease.

1694
01:05:16,440 --> 01:05:17,440
It does look really great.

1695
01:05:17,440 --> 01:05:20,180
And don't run random binaries from the internet as pseudo.

1696
01:05:20,180 --> 01:05:21,800
Do I even have to disclaim that?

1697
01:05:21,800 --> 01:05:23,400
Should be obvious, I'm kidding.

1698
01:05:23,400 --> 01:05:25,160
Jeez, jeez.

1699
01:05:25,160 --> 01:05:26,360
Anyways, that looks really good.

1700
01:05:26,360 --> 01:05:30,320
It's Z-E-L-L-I-J?

1701
01:05:31,240 --> 01:05:35,780
Link in the show notes at linuxunplugged.com slash 403.

1702
01:05:35,780 --> 01:05:37,080
You can find a lot there.

1703
01:05:37,080 --> 01:05:40,480
Also, you can find our sponsor, Cloud Guru, on social media.

1704
01:05:40,480 --> 01:05:43,120
They're just slash a Cloud Guru just about everywhere.

1705
01:05:43,120 --> 01:05:44,600
That's a social media website.

1706
01:05:44,600 --> 01:05:45,600
It's really easy.

1707
01:05:45,600 --> 01:05:48,400
Slash a Cloud Guru about everywhere.

1708
01:05:48,400 --> 01:05:50,400
The Jupiter Garage is rocking.

1709
01:05:50,400 --> 01:05:53,480
We have a little more Linux action show retro merch

1710
01:05:53,480 --> 01:05:57,140
in there, including the beloved zip-up hoodie.

1711
01:05:57,140 --> 01:05:58,520
One left is in there,

1712
01:05:58,520 --> 01:06:01,520
as well as a couple of brand new low-code items,

1713
01:06:01,520 --> 01:06:04,360
all in the garage sale at jupitergarage.com.

1714
01:06:04,360 --> 01:06:06,320
Wes, I know you already know this,

1715
01:06:06,320 --> 01:06:08,120
but I'm very proud.

1716
01:06:08,120 --> 01:06:13,120
We have shipped damn near 300 items from the garage sale.

1717
01:06:14,840 --> 01:06:16,920
Two NASs in the last week.

1718
01:06:16,920 --> 01:06:17,920
That really is something.

1719
01:06:17,920 --> 01:06:21,040
And it shows, just if you take a look at the studio,

1720
01:06:21,040 --> 01:06:23,920
which is now definitely more of a packing and shipping place

1721
01:06:23,920 --> 01:06:25,640
than it is an audio recording studio.

1722
01:06:25,640 --> 01:06:29,200
We have got, I'm very proud of it, actually.

1723
01:06:29,200 --> 01:06:30,920
Took those lessons from that robe,

1724
01:06:30,920 --> 01:06:32,560
and we have really gotten our game together.

1725
01:06:32,560 --> 01:06:35,560
And we had so much old merch that I was hanging onto

1726
01:06:35,560 --> 01:06:37,120
because of these emotional attachments

1727
01:06:37,120 --> 01:06:40,480
that I realized we could be sharing with our audience.

1728
01:06:40,480 --> 01:06:42,200
And it's going, it's going out the door.

1729
01:06:42,200 --> 01:06:43,640
And we still have more gear and more stuff,

1730
01:06:43,640 --> 01:06:46,620
so check out jupitergarage.com for all of that.

1731
01:06:46,620 --> 01:06:47,640
If you do the Twitter thing,

1732
01:06:47,640 --> 01:06:49,920
you can follow this show at Linux Unplugged.

1733
01:06:49,920 --> 01:06:51,840
The network is at Jupiter Signal.

1734
01:06:51,840 --> 01:06:56,840
And we have a whole network of shows, fantastic shows,

1735
01:06:57,040 --> 01:06:58,960
over at jupiterbroadcasting.com.

1736
01:06:58,960 --> 01:07:00,080
Lots of great shows.

1737
01:07:00,080 --> 01:07:02,820
Go check those out, including Linux Action News,

1738
01:07:02,820 --> 01:07:05,720
where we break down lots of stories in the Linux world

1739
01:07:05,720 --> 01:07:08,000
that you need to know about every single week.

1740
01:07:08,000 --> 01:07:09,320
See you next week.

1741
01:07:09,320 --> 01:07:11,880
Same bad time, same bad station.

1742
01:07:11,880 --> 01:07:13,920
Keep the Linux rolling, and make it a Linux Tuesday,

1743
01:07:13,920 --> 01:07:17,640
and join us live, 12 p.m. Pacific, 3 p.m. Eastern,

1744
01:07:17,640 --> 01:07:19,680
at jblive.tv.

1745
01:07:19,680 --> 01:07:21,600
Links to everything we talked about today,

1746
01:07:21,600 --> 01:07:25,880
how to contact us, the Mumble Room, Matrix Info,

1747
01:07:25,880 --> 01:07:28,040
probably even the garage sale.

1748
01:07:28,040 --> 01:07:30,200
We link it up at linuxunplugged.com.

1749
01:07:30,200 --> 01:07:32,440
Isn't that a great idea?

1750
01:07:32,440 --> 01:07:34,080
It's like one website.

1751
01:07:34,080 --> 01:07:35,320
You just go to that one website

1752
01:07:35,320 --> 01:07:37,040
for all the crap we talk about.

1753
01:07:37,040 --> 01:07:38,520
How easy is that?

1754
01:07:38,520 --> 01:07:41,480
We do that because we love you, linuxunplugged.com.

1755
01:07:41,480 --> 01:07:42,480
Thanks so much for joining us

1756
01:07:42,480 --> 01:07:45,680
on this week's episode of the Unplugged program.

1757
01:07:45,680 --> 01:07:49,760
And we will see you right back here, next Tuesday.

1758
01:07:51,060 --> 01:07:51,900
Tuesday!

1759
01:07:51,900 --> 01:08:16,760
How to Get Rid of the Linux

1760
01:08:21,900 --> 01:08:35,500
All right, JBtitles.com. Let's title this here show. It's a long one, and we cover it

1761
01:08:35,500 --> 01:08:40,460
a lot. I mean, obviously, mostly the focus is Fedora 34, but there's a lot of ground.

1762
01:08:40,460 --> 01:08:42,700
There's a lot of ground to cover.

1763
01:08:42,700 --> 01:08:43,700
No kidding.

1764
01:08:43,700 --> 01:08:49,960
Uh, Fedora 34, the worst release ever. Oh, that would be a good idea. Yeah, get him clicking

1765
01:08:49,960 --> 01:08:50,960
with that one.

1766
01:08:50,960 --> 01:08:51,960
Oh, jeez.

1767
01:08:51,960 --> 01:09:20,960
Clicks!

