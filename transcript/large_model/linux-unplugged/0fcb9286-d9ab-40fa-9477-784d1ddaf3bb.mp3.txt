People don't talk about this, but birds fight all the time.
And if you think about how absurd that is, like humans, at least when we fight,
we're fighting over territory and resources on this rock.
But the birds have the whole frickin sky and they they land on my roof
and they fight on my roof.
They have like battles on my roof and I can hear them charging each other.
Tap, tap, tap, tap, tap, tap, boom.
And then they collide.
And then it's smack, smack, smack, smack, smack all over the place.
And they take off and they come back and then it's tap, tap, tap, tap.
And they collide and they ram each other on my roof.
I think that it won't be a problem if we just get a live stream of the roof action.
And I can sort of the IRC room that goes out to the tubes.
We'll make it a patron exclusive.
Put that behind the paywall.
And then we'll have to be disappointed when that becomes more popular
than this show itself. Yeah, that's true.
Yeah, crows fight a lot.
I know. I know. It's weird.
It's it's really strange because it's it's like,
um, I think like they don't care at all that I'm down here yelling at them.
Plus, then that also means I'm down here yelling at them like a lunatic.
Right. You look crazy.
This is Linux Unplugged Episode 250 for May 22nd, 2018.
Oh, welcome to Linux Unplugged, your weekly Linux talk show
that's definitely gotten bitten by the new laptop bug.
My name is Chris. My name is Wes.
Hello, Wes.
This week, we're going to talk about something that's been on our minds for weeks.
The perfect Linux laptop for 2018.
We've got a few suggestions.
We'll take your suggestions and we'll start a little elimination
and decide which one might be the best, at least for a lot of our needs.
Plus, I've really cracked notes on Linux now.
I mentioned this recently, but I'll go over my final setup,
how I'm using Nextcloud 13 QO notes, cloud notes for the iPhone
and notes for Nextcloud to get markdown compliant synchronized notes
across my desktops, my laptops, my phones and the web.
That's the holy grail.
It is. Plus, we've got some great app picks, some really useful tools,
some great community news like Gnome's performance hack fest,
building cute apps with Rust and some robots that are picking up balls
and Tesla's GPL compliance battle,
as well as why Mycroft might be integrating blockchain into future devices.
Yeah, I said that. Mycroft integrating blockchain.
The Mycroft coin could be nigh.
So we have so many things to talk about on today's episode.
So we can't go any further without bringing in the Mumble Room.
Time appropriate greetings, Mumble Room.
Good evening.
Hello.
All right, guys, we have some serious stuff
to get into, so I thought maybe before we got all really serious,
we could start with something light, an automated ball boy.
It's a robot powered by Ubuntu.
And you guessed it, it's a Kickstarter right now.
Players and coaches everywhere know the frustration and tediousness
that goes into collecting balls during the practice session.
And this is why we invented Tenabot.
Tenabot is the world's first robotic ball collector.
Tenabot perfectly integrates computer vision and artificial intelligence
to detect tennis balls on the court and collect them for players.
You can let Tenabot work autonomously using the station
that easily attaches to the net post,
or use Tenabot's app to customize where in the court the device will clear.
Tenabot easily syncs to your phone and even your Apple Watch
to make activation quick and seamless.
The app also keeps track of how many balls are collected during a session
and how often you practice.
So feel free to brag to your friends about how you're stepping up your game
while never having to pick up another tennis ball.
Of course. That's right.
This Ubuntu powered autonomous ball boy is launching here in the US.
And they started as a Raspberry Pi product, then moved it on to an Arduino
and then eventually their own custom SBC.
And they say that Ubuntu was a natural choice
because it was easy to get working with the team,
it provided the stability that needed,
and there was plenty of support, and they crammed it into this robot
that's got all kinds of crazy cameras and sensors.
And Wes, I don't know if you knew this, because I'm not a sports guy.
Don't believe in it. Don't believe it.
Don't believe in sports.
But I'm told by these people that do that they spend sometimes more time
picking up balls than they do hitting balls.
Yeah, right. I mean, everyone hates it.
You want to play the fun part of the game.
You don't want to do all the rest of the maintenance work.
This thing's got an 80 ball capacity.
So I don't know how much time you play, but that's more than enough for me.
Yeah, that's probably going to do me for my whole life, I tell you.
So this thing comes with a companion app that tracks like how many games you play
and lets you like section it off to a certain area of the court,
which is kind of neat.
And it is up on Kickstarter if you want to get in on it, right?
So you can get it for like 600 bucks right now.
Eventually it's going to be like a thousand.
They've already smashed their goal.
They had $35,000 goal.
They've raised $68,243 with 96 backers and they still got 16 days left to go.
Tenobot, we're on Ubuntu.
I mean, I wouldn't buy it for me.
But if you were like a private tennis club, it kind of seemed, you know, $650,000.
That's not that much for a nice piece of equipment if it lasted you a couple of years.
And it looks really handy and it's so cute.
I was asking Popi before the show, I said,
so did you hear anything in the halls of canonical about this robot?
And he said, no, but you did have a good idea for what you could use a robot like this for.
What was that, Popi?
Right.
Well, you know, the whole thing about Ubuntu Core is with Snaps,
you can deliver additional functionality after the thing has been deployed.
So it's not like a router that you install and then it's a fixed set of functionality.
With Snaps, you can add functionality.
So you could add an application and add a bit of extra hardware
and make it shoot out rotating knives instead of picking up balls.
It could do anything.
It's brilliant.
Yeah, it could.
It definitely could.
It could chase some of those.
It could chase some chickens.
It could throw knives.
I mean, you know, yeah, maybe even maybe like an automated barbecue.
Put a little barbecue on that thing and grill some hot dogs while you're playing.
Wait, that's probably not the idea.
This is getting to fantasy land.
Autonomous Linux powered ball boy.
And you can back it right now.
They got an early backer, although those are all gone.
You could get it now.
You can still get it, though, for 600.
Nope, that's all gone.
Wow, this thing's really doing good.
So there you go.
Did that make you feel good?
That was your feel good story to start us out because the next story is a bit heavy.
I feel great.
Good.
I'm glad that worked.
So let's talk about Tesla's GPL compliance.
Oh, yeah, you may have seen this story.
It started out with a blog post from the Software Freedom Conservancy on the status
of Tesla's GPL compliance issues.
So what's happened?
So here's the practical aspect of what's happened.
Tesla has just recently done a big dump of their Linux kernel branch.
They just had like a generic user on GitHub called Tesla Open Source.
And it looks like at some point they branched or forked the Linux kernel.
They have made 676 changes in their code dump with 413,000 additions and 336 deletions.
Also, in Buildroot, there's one commit per release.
So there's like 643 change files in there, a bunch of additions, things like that.
But it's nothing major.
It's just this big, obtuse dump of code.
And you can't really suss much out of it other than maybe there's some things that are missing.
And that's where the Conservancy's blog post comes in.
So the Software Freedom Conservancy wrote on May 18th, Bradley Kuhn did,
that the Conservancy rarely talks about this stuff, that they try to keep the stuff under wraps
as part of their community oriented GPL enforcement policy.
They say they usually keep compliance matters confidential, not for their own sake,
but for the sake of the violators who request discretion and want to fix their mistakes
without fear of public reprisal.
I guess that would be like GPL shaming, Wes?
Yeah, probably.
And I can see that if they're showing goodwill, they're showing that they do want to get this corrected.
Sometimes, much like in security, you can have things go public a little too soon
and they don't have time to get the public face that they want.
Now, that may not seem fair, but I think from a pragmatic angle of,
we just want this code to be released and for the public to benefit, it probably makes sense.
Yeah.
So they write, they being the Conservancy, right, that we're glad that this week,
Tesla has accepted to publicly address its GPL violations,
and they've taken their first steps towards compliance.
The Conservancy has been engaging with Tesla on its GPL compliance issues since June 2013.
That's when the Conservancy advised Tesla that they had received multiple reports of GPL violations
regarding Tesla's Model S.
Customers who had purchased the Tesla Model S received onboard systems that contained BusyBox
and Linux, and did not receive any source code nor an offer for the source.
In parallel, we also asked other entities to advise Tesla about GPL compliance.
We know that Tesla received useful GPL compliance advice from multiple organizations
in addition to the Conservancy.
Let's pause here for a second, though.
So what they're saying in here is that Tesla owners,
and some of them are going to be Linux users, they got their new shiny car,
and they start looking at the UI, and all of a sudden, they're like,
wait a minute, this is BusyBox.
This is Linux. Well, where's the source?
But you also have to wonder if maybe BusyBox didn't raise a red flag,
because they seem to come up a lot.
Like BusyBox seems to bring up GPL compliance issues more than most projects we talk about.
Like I think the VMware case is famously a BusyBox case.
So this is one of those where is what's going on here is BusyBox being aggressive.
I've heard people suggest that perhaps BusyBox is GPL shaming Tesla into doing this.
Bobby, do you have any thoughts on that?
No, I think this is reasonable.
Like BusyBox comes up a lot just because they're not necessarily significantly more
litigious than anyone else, but the significant copyright holder in BusyBox
is quite active in ensuring people are compliant with the law under which they receive the software,
the license under which they receive the software.
So it's perfectly reasonable who someone who has spent some time and effort making a visa software
and has licensed it on a free license should be able to expect the people who use that
should give back in the way that's expected under the license. I think that's reasonable.
Yeah, and BusyBox just seems to be one of the projects that's more active in doing that.
Other projects seem to be a little more relaxed.
And I think both approaches, you could argue, one is probably more corporate friendly,
but one is more defensive.
It seems like in this space too, BusyBox ends up getting shipped in embedded spaces
where you end up with some sort of appliance-like device or somewhere not necessarily directly accessible.
It's not a desktop Linux environment most of the time. So it's a bad situation on both sides.
Yeah, and I bet you there's way more abuses in those embedded spaces
where they think they're getting away with something.
Oh, there's only going to sell a few hundred thousand, nobody will even know.
And they sneak it in there.
I think it's twofold in the sense that they now have also the deniability when something wrong happens
that they have to investigate first if the car was hacked or modified,
because ultimately they release part of their source code.
And that's something that they, of course, can benefit from while also looking good for open source communities.
So it's just like it's win-win-win in all fronts.
Yeah, I see what you're saying. And for the conservancy's part,
they said that when they first contacted Tesla, they started working in different ways
to try to convince upstream providers like Nvidia and Parrot to disclose complete course management.
Corresponding source code. So you're going to see this acronym tossed around a lot in these cases.
CCS. That stands for complete corresponding source code.
And it's like, so you got some GPL code that also touches some other code.
We'd like to have that too. Nvidia.
During that time, Tesla privately provided the conservancy with multiple rounds of
complete corresponding source code.
And then the conservancy spent a considerable amount of time digging through that
and trying to validate if it was complete or not and then sending it back and saying, no, this is missing.
And that is the longest, most grueling part of this process.
And this week, that's when things changed.
This week, Tesla took a new and different approach.
They elected to publish their incomplete, incomplete, complete corresponding source.
So like their candidates for complete source on GitHub.
They're working on it.
Yeah, it's going to be almost there. And this is what we got so far.
Now, of course, it's sort of also going to open up Tesla for people knocking on their door,
just drive bys that are going to look through that and go, hey, I've noticed you're missing this.
And that can be a good thing or a bad thing.
It might help nudge Tesla into compliance.
But you got to wonder, was there some ticking clock behind the scenes that forced them to do
this big code dump all of a sudden?
And when you read through this post, it's clear that the conservancy is trying to position this as,
hey, guys, this is some of the work that we do on a routine basis that we don't get to tell you about.
Would you please donate?
Please donate.
We're over here.
We're doing a lot of good work because they don't normally get to talk about this stuff.
So I think they wanted to take the opportunity.
Karen and Bradley want to take the opportunity to point that out.
Yeah, it's nice to see Tesla.
You know, I think there's oftentimes where where it can be contentious, right?
They don't they want to the company wants to admit the minimal version that they can.
They struggle to go to the licenses, right?
And it's just a big hassle.
So Tesla can feels comfortable doing this in the open, especially as not a traditional automaker,
but something that we see a little bit more as a tech savvy tech first company.
It's nice to see them going in the right direction.
Yeah, yeah, that's a good point.
OK, let's now let's pick it back up again.
Let's keep moving.
I want to talk about a video game.
Haven't talked about games in a while on this show, so I had to have a good reason to finally do it.
And it's slipstream.
It released yesterday as we record this.
And here's the cool thing about slipstream.
It's a retro inspired arcade racer that was developed exclusively on Linux, Ubuntu and
Arch Linux to be specific, using free software tools such as Corita, Blender and GIMP for the graphics,
IntelliJ for the IDE, and not a single sprite of the game was made using any proprietary or
Windows software such as Photoshop.
And the author of the software says it's not really even a political statement.
It's just feels better when I work on Linux and free software.
So that's what I do.
How do you like that?
That's awesome.
That's kind of perfect.
It's not.
It's not annoying.
It's not nagging.
It's not some sort of Linux centric evangelism.
It's just, hey, guys, this platform works.
I got this done.
Check out the cool shit I made.
Yeah.
And it started as a Kickstarter.
Four hundred and forty three pledges.
They raised seven thousand dollars to get things finished and now it's available on Steam.
And it is really nice.
It's it's very authentic in a way, but at the same time, it's it's got newer features like the
parallax scrolling looks way cooler than it ever did back in the day.
It's still a 2D sort of 3D pursuit of game pseudo game.
Twenty different tracks, three different game modes, a lot like Mario Kart, five car models,
supposedly a pretty good soundtrack, too, and a variety of different options to customize the
game's visuals, including a high flute and 30 frames per second mode.
And if you are a masochist, it also has a CRT mode, which no, just don't.
I just don't.
That's awesome.
I don't know.
Can you use the CRT mode on your CRT if you have one or is that too much?
That's double the that's double the punishment.
I was going to say double the pain, but that you'd probably that's something else.
Yeah.
So that's pretty cool.
It's called Slipstream Retro Inspired Racer.
It's available up on that next cloud right now.
Hey, I want to talk about speaking of hitting the road, my trip to Texas, just a couple of quick
public service announcements.
I'm going to Texas Linux Fest, as I've mentioned, and so we have officially launched the Jupiter
Broadcasting Telegram group, and you can find that at jupitabroadcasting.com slash Texas.
And that's where we're going to be planning all of our meetups, our barbecue events and just
shenanigans around Texas Linux Fest, which is June 8th through the 9th in Austin.
And that's jupitabroadcasting.com slash Texas to join that where we'd love to chat with you.
If you're in the area and you can follow me on my way down there, jupitabroadcasting.com slash
Rover if you want to meet up.
But I want to tell you a little more about why I'm going on this trip to Texas.
It's not just for Texas Linux Fest.
And I mean, it kind of is now, but that wasn't the spark for this Texas fire.
Maybe I should use a different analogy, but that's not what started this thing.
What started this thing was an email that I sent Linux Academy, who is based out of Keller,
Texas a month or so ago, and maybe a little more than that.
And what it basically was, was, hey, I was watching your live stream.
And I noticed a couple of technical issues.
Would you like to chat more?
And maybe I could help consult for free.
I wasn't trying to charge them.
I just wanted to help them out because they've been a great sponsor for years.
And they said, yes, we would love to talk.
In fact, we'd love to talk a little more about that.
And so a long story short, Linux Academy has grown like crazy in the last year and so.
I don't know how much of this.
I think they have talked about this on their live stream.
It's over 100 employees.
I think it might even be over 110 employees.
That's huge.
Yeah.
Can you imagine a small business as adding employees like that?
And it's a lot of instructors and developers.
I mean, it's just they're bringing, they're onboarding people like crazy.
And it's a huge process to scale out like that.
And Anthony, the CEO of Linux Academy, has built a really solid team around him.
I had a good chat, and I was really impressed with that aspect of the company.
But they've had the main challenge is just getting all those people on board, you know,
not wrecking the culture.
And the one thing that sort of slipped was the Linux doctrine, you know, the following.
Everything's Linux because you just at that scale, you really can't mandate that everybody
coming on board be a Linux desktop user and that everything they do be done from the Linux
desktop.
You just that's sort of impractical.
And so they're like, what we want to do, though, is start a Linux Academy.
And so they're like, what we want to do, though, is start addressing that now.
We want to get back to Linux.
You start make start writing that ship.
And what they want to do is take the experience that we have, Noah and I, converting Jupyter
Broadcasting from Mac OS and Wirecast to OBS and Linux and Kubuntu specifically, because
that's their setup now.
Like they've they've really they've really done a good job of integrating live services
into their courseware, into their service offering.
And they've really pulled off some amazing stuff, but they're just doing it all on a
Mac with Wirecast.
And, you know, it's functional.
It works.
But they're Linux Academy, so they want to do it on Linux and they want us to come down
there and help them essentially do what we've done semi recently here in the studio while
it's still fresh.
And we're really enjoying it.
It's working rock solid.
And the great thing about it is like one of those things I'm excited to do because it's
not just, oh, we're replacing a Mac for for because sake, it's a better solution.
You know, it's better performance, better stability.
It's way more sustainable.
The way more hardware options is much more flexible.
It's a better long term solution.
It's Linux and OBS.
Whenever you can build your your infrastructure around open source software just gives you
way better sustainability and flexibility down the road.
That's true for broadcasting as well.
So sensibly, the trip was about going to Linux Academy to convert their broadcast systems
to Linux.
And then the time you worked out, Texas Linux Fest sort of came up and now it's really become
one of the core focuses.
And so along this whole trip, I'm going to try to do the shows.
I'm going to try to keep things going.
And we wanted to put a shirt out there that might help cover some of our expenses while
we do this, while we get down to Texas, while we keep doing shows from the road, while we
do the meetups.
So we've launched a new shirt.
It's teespring.com slash J.B.
Texas.
Check this thing out.
Now this is a couple of things have gone into the shirt.
You may you may have noticed we haven't done any swag for a while.
It's because we've been thinking about this a little bit.
There is something we want to do with our swag that makes it uniquely ours.
Whenever we have tux on our swag, we want tux with a beard because we think our tux
has earned that beard.
After 11 plus years of the Linux action show, we earned that beard.
So our swag is going to have a bearded tux.
That's going to be one of the trademark things about Jupiter broadcasting.
And this is one of the only second times we've done this.
The last time was the final Linux action show shirt.
This is a Jupiter broadcasting, limited edition, Texas 2018 shirt.
It's got the circular logo like last used to have, but a special Texas edition of tux
with a beard holding the rocket, teespring.com slash J.B.
Texas.
It's a great t-shirt.
I love this particular material.
And I really, really like the way the white pops on some of the bolder colors and also
the way it really pops on that blue and on the purple.
It's slick looking teespring.com slash J.B.
Texas.
Yeah, you'll be sure you're looking hot.
Sure.
Yeah, right.
I'm going to get you one, Wes.
So don't you worry about we'll get you one.
Thank you.
Yeah, I am.
I am supremely looking forward to this trip.
I'll wear it with pride.
Yeah, you will.
You know what, Wes?
You'll look dapper in it, too, and put it put like a scarf and I like a hat with it.
I mean, yes, I'm just saying you'd be a lady killer out in the town of Seattle.
So anyways, super excited about the trip.
Really looking forward to it.
You can track me on my way down there if you want to meet up.
And then if you're going to be in the Texas area, join that telegram group,
Jupiterbroadcasting.com slash Texas.
We'll have a link to all this stuff if you don't want to worry about the URLs.
It'll just be linuxunplug.com slash 250.
So new swag, big trip coming up.
I leave after Linux Action News this week.
We finish up that and then I hit the road.
I'll be on my way to Tejas.
Now you make sure to drive safe, OK?
Because we need you here at the network.
I'm not.
It's going to be an interesting juggling act because doing the shows
while I drive to Texas adds a ton of time to the travel time
because you have the time it takes to record the shows.
Plus, I edit a handful of the shows and the time to prep the shows
and the time to find connectivity.
It's going to be challenging, to say the least.
So if you're not subscribed to a show and you want to make sure you don't miss it
in case there's something that floats, now would be a good time.
But let's change gears.
Let's talk about Mycroft.
It's time to get to the bottom of what are beans.
And Mycroft is introducing blockchain.
And I'm going to give you a challenge, Wes.
Are you ready?
Oh, yeah.
The challenge is I will read this.
I've gone through and I've surmised it into a few choice quotes.
I'll read through them.
And then I want you to describe to me how the blockchain
will be functional on Mycroft, OK?
Yes.
OK, so we'll start with is the blockchain necessary?
One of the biggest themes was determining the necessity of adding blockchain.
After all, we could simply build a distributed system
using peer to peer technology or better yet,
focus on the core technology to build something that's valuable without blockchain.
As we examined blockchain and debated the tough questions,
it felt like technology could be a very it felt like that technology
could be a very good fit for Mycroft and our ideals.
Oh, and that's another thing.
Does it make sense for Mycroft to develop its own chain?
Yes, unequivocally, yes.
We've carefully evaluated solutions from existing blockchain communities
and none have the features we are looking for.
We need to protect user privacy, store large volumes of data
and securely distribute API services.
Finally, we get a lot of questions about what a Mycroft crypto mining community
might look like.
Will it be large enough?
Yes, a Mycroft token would be designed so that the mark one, the mark two
and the mark three, which you don't know about yet,
will be able to mine the coin.
That means we'll instantly have thousands of devices
participating in the network, of course, if they choose to opt in.
OK, Wes, so how is the Mycroft using blockchain?
OK, it's not really clear from this article a little bit a little bit lower down.
They do talk about some things they want to incentivize.
Things like secure storage for the network,
development and maintenance of useful skills.
And in an earlier blog post, they talk about a little bit of the motivations.
I like the motivations.
I like the idea that they want to become more decentralized.
They don't want to have the usefulness of these open source devices
reliant on some centralized incorporated entity.
But there's a lot of hopeful speculation in here.
Yeah, and it seems like a way to kind of grab some attention.
You know, we've seen Kodak and other companies,
you just sort of attach blockchain to a project or product
and all of a sudden you get a lot more interest.
Well, it lowers the cost of the product, for sure.
That's one.
They don't have to host the data
and they don't have to comply necessarily with GBPR and this kind of stuff.
I mean, I don't have anything. It's in the blockchain.
So you think they're going to use it for distributed user data?
Probably. I mean, if it's encrypted and protected, why not?
It's going to serve the same purpose.
But what about the idea of the Mycroft sitting there mining coin?
Like, Popi, you've used one before.
Is it a high-performance device?
The one I had was the first generation, which is based on a Raspberry Pi.
And if any of you have seen the videos that I've made,
it's not super high-performance.
And I guess part of that is because it was like version zero.
You know, it wasn't a production-ready device.
It was a dev. Fair enough.
Which, you know, is fair.
And I would expect consumer-level units.
We're talking 18 months later.
I would expect consumer-level devices to be a lot faster.
I mean, I still have to wait for my Amazon Echo to reply.
It's relatively quick.
But there's a significantly higher delay with Mycroft
than I think if you added in lots of heavy computational overhead on top of that.
It's not going to get any quicker, is it?
I would like to know some of the technical implementations
because there's lots of types of coins that don't necessarily need a CPU or a GPU
to do what they do.
They don't need a CPU or a GPU.
Where do they do their computing?
No, I mean, they do.
But I mean, they don't sit there and run the CPU at full peg.
They're more like storage-based.
I mean, I don't even know if my Amazon Echoes around the house
are mining crypto coin or doing blockchain activities.
I have no idea because it's all closed source.
So the good thing is the stuff that's on Mycroft is,
as I understand it, all going to be open source.
So you could inspect that and see what it's doing
and optimize it if you're so inclined.
Yeah, the more we talk about it, I kind of like the idea.
Right.
I was kind of mocking it at first.
But the more we talk about it, it does kind of make sense.
And if you could do some sort of storage coin-based system,
I'd actually be kind of into that.
And if you think about it, if it could somehow,
they would probably have to combine it with some sort of hosted blockchain
because anything that got relatively large,
you wouldn't want to waste storage or bandwidth
to download and upload that thing.
But you could maybe cache some of it.
And so if you had some of your own information,
it could store in a local chain
and it could do lookups in the blockchain.
That could be pretty compelling.
And then it would be completely divorced from any cloud infrastructure
other than the hosted part of the chain that could be offline.
I don't know.
I'd really like to know more about how they're going to do it.
Depending how it's done potentially could mean that,
let's say if the encryption is to a degree that they,
for example, would have access to mine some of the data
to improve the voice recognition, et cetera.
Now they would still have access to that data.
I'd hope at least to be able to do that.
Having a key that they can access the voice records
to be able to do that to improve voice recognition, for instance.
And nothing says that they couldn't release the mining software
for desktop computers like a Linux binary
that you could run on a pretty powerful Linux desktop
that could help add the value to your contribution
to your Microsoft's contribution to the network.
So, OK, all right.
This is sounding less and less crazy.
You know what this means is we're just going to have a future full of blockchain.
Every blockchain, all the things, and it's going to get really annoying.
That's what that means.
No, it's until the energy bill is too high to people start realizing
that we need something like blockchain,
something decentralized, but not really blockchain.
Yeah, or at least something that doesn't require so much compute power to verify.
And I know there's some different projects that are working on that.
I feel like, Wes and I, you and I looked at some,
at some point, different projects that were using other means to validate the network,
but none of them, I'm drawing a blank on all of them right now.
Yeah, I mean, there's lots of different types of proof of stake
or other schemes of distributed consensus.
I think it's more of a question of how well is it proved out
and will it actually scale?
Will they really be able to transition from a centralized standard API design
to a distributed blockchain that could actually provide
the quick services needed for an interactive device?
I don't know, but it would be really cool.
Yeah, and I'm ready to hook it up to my Linux desktop now.
You guys got me so excited.
All right, let's take a moment and thank Linux Academy,
linuxacademy.com slash unplugged.
You can go there to support the show and sign up for a free seven-day trial,
linuxacademy.com slash unplugged.
It's a platform to learn more about Linux,
and they really are a company that's passionate about Linux.
I mean, that's why they want me to come down there,
is to help write that ship and make sure that they're using Linux throughout the company.
And they have professionals that are there full-time
that can help you whenever you have questions.
And they really know their stuff.
They have hands-on labs, scenario-based labs that give you real experience on servers,
self-paced in-depth video courses on every Linux cloud and DevOps topic.
And they have simultaneous servers they spin up for you simultaneously with the courseware.
So as you're going along with the courseware, the servers spin up,
you SSH in, you do work on real servers, that kind of stuff.
It's really slick.
And they have a course scheduler if you're busy,
you got a lot of stuff going on, you can pick a course,
set a time frame to fit your schedule, and set some learning goals.
And if it's time for certifications, they've got courses created specifically
to prepare you for those exams.
And if you have just a little bit of time, maybe an evening here or there,
they have deep dives, single topic deep dives, you can just choose.
I have 15 minutes.
Here's what you can do.
I got five minutes, I got two hours.
It's pretty nice.
And then to combine all that together and really kind of put the sprinkle on top,
they got stuff you can do offline, like study guides and lesson audio,
which is super useful, like if you're on a road trip,
just saying, and they also have iOS and Android apps as well.
So get started by going to linuxacademy.com
slash unplugged.
That's linuxacademy.com slash unplugged.
And a big thank you to Linux Academy for sponsoring the Unplugged program.
Linuxacademy.com slash unplugged.
Boobaladoop, boobaladoop, boobaladoop, boobaladoop.
So there is some hot canonical rumors on techcrunch.com today.
It always strikes my fancy when I see TechCrunch writing about canonical,
like they're this nebulous company.
I don't know, it's this weird detached form of writing.
It's fascinating.
And they say, don't expect the Ubuntu maker to IPO this year.
And they got some choice quotes with Mark Shuttleworth
when he was at OpenStack Summit in Vancouver,
which sounds like it was a hell of a party.
And they say that, Mark says that we decided as a company,
and it's not just my decision, but we decided
that we want to have a commercial focus.
So we picked cloud and IoT as the areas to develop that.
And being a public company, given that most of our customers
are now global institution, it makes for us also
be a global institution.
I think it would be great for my team to be part of a public company.
It would be a lot of work, but we're not shy of work.
And think about what he's saying there.
We serve global companies.
We should be a global company.
Now, Shuttleworth didn't really necessarily
want to talk about a timeline for the IPO.
He said we will do the right thing at the right time.
But that's likely not this year.
There is a process that you have to go through, and it takes time.
We know what we need to hit in terms of revenue and growth,
and we're on track.
The company's focus is squarely on enterprise,
and they have big offerings now with OpenStack and Kubernetes.
But it doesn't necessarily mean they've forgotten the desktop.
Shuttleworth told TechCrunch the desktop team
has remained the same size as before.
And he noted that the desktop is still a passion for him.
We took some big risks a year ago.
We cut a bunch of stuff that people loved about us,
but we had to see if people were going to respond commercially.
That move is paying off now, though.
During a keynote earlier at OpenStack,
Mark Shuttleworth noted that Canonical
is now in talks for about 200 new deployments for 2018.
And I don't know what kind of deployments they're talking about.
I assume OpenStack deployments up from about 40 in 2017.
They're kind of vague with some of the details there.
But since it's an OpenStack conference,
I would assume that is the context for that quote.
Hmm, so no IPO this year.
I thought an IPO in 2018, when that was sort of bubbling up,
seemed pretty aggressive.
But it doesn't really seem like it changes anything.
It just seems like, OK, this is noteworthy.
Yeah, exactly.
And it makes sense that if you're already well-positioned,
if you're already doing well, that you'd
want to wait until you're at the right stride at the moment,
you have a lot of prospects, and that people
are excited about you because you want your IPO to go well.
Yeah, it really is all about striking
the moment at the right time.
And part of doing this right is knowing when that moment is
and not shooting before it's arrived.
There's a risk also if doing it in the wrong time
to lose control, which is the risk of IPO.
What do you have in mind when you say that?
Sounds like you have something specifically in mind.
No, it's just you're allowing other people
to be part of your company.
That's what an IPO does.
And that comes with other people having a say at times.
So you definitely want to do it in a time
that you have a good vision, strong position,
that it's hard to move away, so you
benefit from having the cash flow,
but not necessarily have the pressure
to conform to new owners.
Yeah, I follow you.
All right, I think that's probably enough on that.
So let's talk about an app pick that you
might find pretty useful.
It will launch commands when you press a combination of keys
on your system.
Like, think of an auto-destruct or maybe just something
more benign, like mounting, unmounting,
or something like that.
But what it is, it's shortcut D. It reads kernel input device
nodes directly, so there's no need
for any graphical environment.
It works on whatever the software stack you're using is,
supports blocking and non-blocking command spawns,
and it's resilient to keyboard hot plugs.
So you can plug your keyboard in only when needed,
execute the combo, and then unplug it.
And it will actually tolerate that.
It's written, though, as your favorite part, in Node.js.
And it's been designed to execute low-level
administrative commands, like so, say, systemctl start
sum.service.
And you just press a combo on your keyboard
or on a headless system.
How useful could this be on a headless server in your house?
Or even a little arm box.
And it'll execute a series of things.
Pretty nice, Wes.
You found this.
I got to say, this is pretty nice.
Did you have anything in mind when you found this shortcut D?
You know, I don't have any actual direct day-to-day use
cases, but I've been playing with it.
And I can see now just sort of small things in my life
that I could make more convenient.
And personally, I was interested.
It seems like kind of a good idea.
For me, I usually end up having Node the runtime installed
anyway, so a Node script is fine.
But I was also kind of wondering,
I wonder if anyone else has seen a similar program,
but maybe something written in Go,
static binary, or just a classic C program
that does the same thing.
I've seen worse.
Node OS still releases and still up there.
I mean, last release was in June 12, 2017, but it is there.
Like, your primary shell is Node.
So that exists.
Animals.
Animals is what that is.
That's just barbaric.
OK.
Well, while we're talking about performance,
let's talk about Gnome.
Gnome is having a performance hack fest.
It had one, I guess.
I think it's actually done now.
And when I grabbed the story, I believe it was going on.
But it's happening in Cambridge, and that always
means good weather and pub evenings, as they say.
And there's a couple of tidbits that I pulled away
from a blog post from Carlos.
Number one that I noticed is that xwayland1.20
seems to have some large improvements for battery life
on a laptop.
They managed to drop it down to a significant,
from a 20-watt draw to eight or nine-watt draw.
That's a good drop right there.
And some other improvements, like work
towards having Mudder dump a detailed per-frame information
so that way they can visualize.
They can actually graph and visualize
where every single little nuance and slowdown is.
Nice.
And it sounds like some other projects
might be doing that, too, yeah.
And there's some other nice progress
towards getting GDM to consume as little resources as possible
when switched away, which has been
one of my complaints about GDMs.
It's like a whole other Gnome session running,
and so they're working on actually tightening that up.
There has been some work to make 2D sessions work better
in Gnome Classic, where you have what they call purely 2D
actors, which is kind of a cool OpenGL term, I think.
And ways to prove no memory usage
when it's just in the background, in general,
were talked about.
Nothing, no work done yet, but they were discussing it.
Overall, it was a nice and productive event,
he writes, with knowledgeable people getting deep
inside the Gnome stack now, trying
to figure out where all the little performance issues are.
That's good.
We had developers from the Ubuntu Desktop team
participating at that event.
Oh, do tell.
Well, that's as much as I know.
The only things I've seen is a photo stream from Marco.
Marco is the same developer that you
saw in Taipei doing the fractional scaling work
last year, and he's been in Cambridge helping
with the Gnome Shell Hackfest.
Going deep, going deep on Gnome performance.
Can I ask, is this work is still valid
if we go Gnome 4 and we retool the way all this stuff works?
Or does this work kind of go out the window?
I shouldn't imagine that any of these developers
are reinvesting time and effort into something that's
disposable.
That's what I would think, too.
It just makes me wonder if it's more of a sign
that we're not fixing Gnome in Gnome 4
and we're keeping things the way they are, or if it
is a sign that this code is going
to be usable in Gnome Shell 4.
I just don't know which one of those two things it is.
Well, didn't they change so that it supports multiple versions?
So it wouldn't matter, as your newer apps
would use the newer version, and the older one
would use the old one.
It's no problem.
I mean, isn't that the reason that they did that effort
before?
I suppose if it's going to be around for a while,
it's good to have it as good as, it's best
to have it as good as possible.
I just like seeing the updates from them, you know?
It's cool to see the insight and see
that they're taking it seriously,
they're concerned about it, and seemingly getting
a lot of good work done.
Yeah, you know, the Gnome project
has gotten a rep for ignoring performance and not listening
to users.
But this week, we've seen this blog post
about a performance hack fest, where
people are making an effort to show up and do work there.
And we saw they rolled back that decision
to remove binary execution from Nautilus, which is a good sign
that they're listening.
People wrote in, they said, here's my use case,
why I need to be able to execute binary files from my file
manager.
And the developers said, OK, all right, well,
we'll punt this decision for now.
We're going to keep talking about it, but we're going to punt.
So that, to me, sort of busts both those myths.
At least it doesn't add a data point to that line.
And on a similar vein, in Joe's new show, Late Night Linux
Extra, that just released its second episode,
he interviewed Jonathan Riddle.
And Jonathan Riddle is a well-spoken member
of the KDE community who I think we should hear more from.
And I'm really glad that he sat down and talked to Joe,
because he busted one of those myths
that KDE is really, really sluggish,
and it's got bad performance.
He busted that myth in that show.
And I think, again, it's one of those things that just
propagates over and over again.
I saw somebody on YouTube installed all of the Ubuntu
1804 flavors, and where possible,
installed the full version and the minimal version,
and then profiled their memory use.
And KDE, or rather, Kubuntu, was among the lowest.
That's quite a bit of work to do, isn't it?
Yeah, and I agree.
In my testing, it was surprisingly fast.
I loaded it on that 10-year machine
for an episode of Last I did a while ago.
And it was the most modern desktop
I could get on there that was really, I guess,
the best way to put it is it just sort of worked.
It just degraded to a point where it was still very usable.
It was very modern.
I didn't really notice that anything wasn't working.
But when you compare it side by side to a brand new machine,
I could see, OK, it's got a little less shiny,
a little less shadows.
But I didn't really have to do much.
It just worked on a 10-year-old system.
And I think the system only had four gigs of RAM,
and it just worked great.
So it gets a bad rap.
Gnome gets a bad rap.
I say, you know what?
Take all of those reputations, all those myths
with a grain of salt, because there's more nuance
to all of these situations.
Still using it three months after the KDE challenge here.
Yeah, good work, sir.
Yeah, yeah, it's going great.
Hey, I'm going to go all the way down to Texas
and put Linux Academy on it for their broadcast system.
I'm so into it.
I really think it's solid, and I've been super happy with it.
And I'm keeping Neon on a couple of systems,
too, because I like the fresh plasma goodness
on a couple of my machines that are really in production.
So one of the machines I'm working today from the RV
is actually a Neon system.
So yeah, I agree.
It's gone really well.
So yeah, I am remote today.
Wes is remote.
Today is like a test episode, where yeah, we're super exciting.
We're getting ready for the big trip.
And so we thought, well, before I actually
am going down the road, we should
make sure everything works, because it's
tricky to route all this audio for the Mumble Room
and Wes and myself and record everything.
So this is a test episode.
That's why it might sound a little different or whatever.
It's not because our editor fell asleep at the wheel.
It's just because we're testing different stuff.
And so far, it's gone pretty well.
And that's why I'm about to talk about Ting,
because this would be the really awkward spot in the show
if I had to say my connectivity was dropping out,
our live stream had been bonkers,
and none of our hosts could hear me.
But fortunately, I don't have to say that.
It's been rock solid, linux.ting.com.
This is how I'm getting down to Texas and staying connected.
And the great part about Ting is they've got two networks.
Right now, I'm on their GSM network.
While I go through the mountains,
I often switch over to CDMA.
Now, I'm not going to lie.
I don't do some sort of fancy switcheroo.
I just have two devices.
It's just the way I prefer to do it.
It's simple.
I just switch Wi-Fi networks on my laptop.
So the GSM device has a Wi-Fi network,
and the CDMA device has a Wi-Fi, because they're little access
points.
And I just, in my desktop or on my laptop,
I just choose whichever one I want to be on that's
going to be stronger in that area.
So a lot of times when I'm in hills and trees,
CDMA is just the better choice.
But if I'm in town or if I'm in a valley, GSM is rock solid.
I'm getting, right now, 9 milliseconds.
Bouncing between 9 and 14 milliseconds on my ping.
I have a little thing in my status bar
that tells me what my ping is, with a 0% packet drop.
And I've got VoIP connections back to the studio, to Wes,
all kinds of things.
And I'm doing it over Ting.
Now, the reason why I tell you all of this
is because this is never how I use Ting, unless I'm traveling.
Otherwise, I just use Ting as like a backup data network.
I use Wi-Fi when I'm at the studio or when I'm at home.
And I download my podcast, and I pin my music there.
And I don't really make any phone calls.
I don't do text messages.
I do telegrams.
And so it's like $23 a month for a phone.
That's usually after your minutes, your messages,
your megabytes.
That's your average, $23 per phone, per month, $6 for the line.
And so for this month, I'm going to use Ting for data.
I'll pay a little more this month.
Next month, I won't.
It's pretty simple.
Also, if you're interested in Ting's fiber internet,
they have a new frequently asked questions
post up on their blog.
Totally worth checking out.
So go check it right now, linux.ting.com.
Take $25 off a device or get $25 in service credit.
That's linux.ting.com.
And thanks to Ting for keeping me on the road.
And see, the nice thing, too, about having those different
Mifis is you can just pay the $6 if you're not really using it.
And I can afford a $6 line.
And it's great.
It's great.
I don't have to fuss with changing things around
or activating or reactivating.
It's always there whenever you need it.
Yeah, right?
$6, that's great.
Exactly.
So Rust is coming to Qt, possibly, to Qt and QML.
There is a new project out there called the Rust Qt Binding
Generator.
That's a pretty clever name.
And it's a generator that helps you quickly use Rust code
in Qt applications.
So you can create a Qt or QML GUI on top of Rust code,
which kind of seems like my peanut butter and my chocolate
are coming together into a delicious technology sandwich.
I love everything about this, Wes.
Yeah, right?
I mean, come on.
Qt, Rust.
Those are your favorite things to hype.
Yeah, exactly.
And they say to combine Qt and Rust,
you write an interface and a JSON file.
From that, the generator creates Qt code from the Rust code.
And then the Qt code can be used directly.
The Rust code has two files, an interface
and an implementation file.
Seems like a mess.
You bastard, I'm excited about this.
See, OK, OK.
There had been plans in the past by Rust community
to make a Rust toolkit.
But they've been talking about it.
It's a lot of work to make a toolkit that is decent,
that people will adopt it.
And it's going to compete with Qt, more fragmentation.
So I find it good that there's efforts
to go and integrate with Qt.
And there's actually already efforts that integrate with GTK.
It actually already worked, was the first one to work,
because Rust works with C and therefore works with GTK.
Everything kind of works with GTK.
That's one thing aside.
But it feels like a mess to have now a process
that you are not really going to be writing Qt,
nor really going to be writing Rust.
So this is like an intermediate step.
And honestly, this is what usually makes
applications kind of crap.
Go to crap directions.
You are going to too many hoops in the between.
And there's no clear, concise way of handling.
They're not doing a proper port of Qt to Rust,
nor making a dynamic system that you bind to Qt objects.
You are now having a generator tool.
How is that any different from what Vala did?
See, I kind of disagree.
Because you're still writing good, genuine Rust.
It's not like it's some sort of weird Qt Rust hybrid.
You'd hope that.
But then if you're really going to be writing genuine Rust,
you will lose the ability to write genuine Qt.
No, no.
See, I think this is cooler than you're giving it credit.
Because this isn't going to be perfect.
But this is an early step to getting
some really solid Qt applications where
you take a core Rust core, their application core of Rust,
and then there is this description JSON file
that the interface, the Qt interface, genuine Qt
is generated from, which isn't really all that different
from how Qt applications are done today.
It's just now making it possible to do it with Rust.
That's how a lot of applications are being done on the Linux
desktop already.
It's just they're not using Rust.
I think that's been proven to work.
I wonder also will that mean, will this build momentum,
even if it's not an ideal interface, will people be like,
oh, yeah, hey, I'm already writing Rust.
I wanted to write a UI.
Turns out Qt's pretty cool.
And maybe that'll be more momentum
to build a better binding.
That's probably more likely what will happen.
Yeah, and Dar, did you want to finish?
Yeah, just the other part that I really see here
is also loses a little bit on the opportunity
to build something that Rust would actually benefit from.
And the principles that we currently
have in Rust, for example, like borrowing.
It's a concept very unique to Rust language,
not quite available in C++.
And you can kind of half-bake it,
but you still have to do the hard work as a developer
yourself.
Those benefits are not going to be necessarily there.
And if the automated tool starts doing it,
it's like code that people can't really inspect very well,
because it's going to be generated code.
And generated code lacks in that transparency aspect.
So I think there is a side effect that
is potentially negative that is often overlooked.
And it doesn't matter.
And yet, Dave, we get good applications, great.
That's awesome.
But I'd prefer to see more genuine attempts
of making Rust Toolkit, even though it's
a harder, longer task, than to just go with that route.
I agree, ultimately, that would be definitely best.
And if you're going to have a really good desktop application
that's really robust, that's probably
the route it would have to go.
So ultimately, I want to get to our thoughts on the best Linux
laptop in 2018.
And I've kind of rounded up the ones that come to my mind.
And they're sort of US-centric.
So I want to eliminate a couple off the list.
I want to get a couple of more on the list,
and also get at least, if nothing else,
honorable mentions of ones outside the US.
So that's where we're going.
We're not quite ready to go there yet,
because I want to close the loop on replacing
Evernote and a Note system.
I've been really, really tempted, because those bastards
over at Canonical just released Tusk as a snap.
I assume it was probably you, Popi, you tempting jerk.
It was upstream.
Oh, really?
We had nothing to do with it.
The upstream developer worked on it, created the snap,
put it in the store, job done.
Yeah, it looks good.
So if you just want to stick with Evernote,
check out Tusk, snap install Tusk, because that looks clean,
and almost made me want to give up on this whole thing I'm
doing.
But I'm trying to get away from Evernote,
because I think that eventually is going to be a dumpster fire.
And I've also just wanted to try to self-host this stuff as much
as I could.
And I mentioned a couple episodes ago
that I've been playing around with Fedora 28 and Nextcloud 13.
And I consolidated my years, and years, and years, and years,
and years of upgrades Fedora box onto this new 28 machine,
moved over the Nextcloud container,
and all that kind of stuff.
And so since I sort of spent the time doing that,
at the same time I installed this app in Nextcloud
called Notes.
And it started just sort of casually.
And then I installed QO Notes on my desktop.
And by last week's episode, I was using QO Notes
and syncing it up to Nextcloud.
And I thought, oh, that's working pretty good.
It's nice.
You know, it just has a little spot in there.
You plug in your server.
It connects, checks to make sure everything is OK.
You're good to go.
And then I started to realize that I'm using this thing
on a daily basis now.
I've completely stopped using Evernote.
And I'm taking lots of notes right now,
because this going down to Linux Academy
to get them to move over to Linux is a hell of a job,
right?
Because it's a project.
It's a full-fledged project.
Because they have all kinds of crazy stuff they do down there.
It's a real production.
And I've got to keep track of the hardware,
all the different hosts, the connections, the types,
like all this stuff.
And I've been using the hell out of QO Notes
to do this, and prepping for the road trip and Texas Linux Fest.
It's been really reliable and handy.
And so I wanted to take it to the next level
and get it across all my devices and see
if that could really do the Evernote replacement.
And I achieved nirvana, note nirvana this week.
And to kind of help maybe get you started,
I'm going to link you in the show notes, linuxunplug.com
slash 250, a guide that was posted by Marco
over on linuxjournal.com.
And it's getting started with Nextcloud,
how and why you should.
And this is the more traditional approach,
actually installing all of the software and the Apache stuff,
configuring my SQL.
I, on my latest go-about, did not do this.
Oh, no?
I'm using a container.
I know.
I thought I looked at you.
I'm, mm-hmm, I did the Docker thing.
But see, Nextcloud makes an official container.
So I kind of feel like that was the way to go.
Yeah, you know that they're updating it.
They're publishing it.
It just works.
You don't have any crazy operational concerns.
Yeah, nice.
Yeah, but I'll link to the guide.
I'll also link to all the stuff I'm about to talk about.
So then I installed the Notes app in Nextcloud 13,
because they have an app marketplace, I guess.
I don't know.
There's nothing.
I don't think there's anything charged in there.
So I installed the Notes app, which is just
a basic markdown notes.
And whatever you create in here, it
saves it to a Notes folder in Nextcloud,
which then, if you install the Nextcloud client,
syncs that folder down to your desktop.
And everything in there is just plain text markdown.
And that's also the same directory
that qownotes looks at.
So then I installed qownotes, which
is a cute note-taking application that, again, uses
markdown and has full support for own cloud and Nextcloud.
And it has a dark theme, which I happen to like.
It previews markdown.
And Wimpy, I know that you are also a qownotes user,
because I think you mentioned that in a recent Ubuntu
podcast.
Yeah.
Yeah, I've been using that since that
was the snap that brought my awareness of the project
around.
And I've been using it ever since.
I really love it.
Are you doing any kind of syncing,
or are you just using it on a local file system?
Kind of both.
So the way I've set it up is to store its data
in a prescribed directory.
But that directory happens to be a directory that I sync.
So I get syncing via other means.
So it hasn't got the native Nextcloud integrated.
But I was just able to place the data in a location
where I already sync the stuff.
Yeah, and that works perfectly fine.
I think off the top of my head, you don't really lose much
other than if I click the Share button in qownotes,
it actually generates a Nextcloud preview URL
that renders the markdown to HTML,
and then it hosts it on the Nextcloud server,
which is kind of cool.
Then you can give somebody a URL,
and they can look at your notes.
Oh, wow.
I didn't realize they did that.
Just by clicking a button in qownotes.
Yeah.
That's pretty cool.
Yeah, it's nice.
So I was playing around with that.
I prepped this whole show in qownotes this week,
and I loved it.
And so the only other piece I wanted,
because the other thing I was using qownotes for
is I'm taking notes for a bunch of stuff with our mixer,
trying to keep track of some different things.
And I wanted to be able to read them off from my phone
while I'm actually standing over the mixer working on it.
So I had to get those notes down on my phone.
And that's where Cloud Notes, now there's plenty of solutions
for Android, including, of course, for both platforms,
just the Nextcloud app would be able to just browse
the directory structure and view the files, right?
But I wanted something that was specifically
designed to take notes, supported markdown,
supported doing lists and things of that nature.
And that's where Cloud Notes, which specifically positions
itself as an own cloud client, but it works just fine
with Nextcloud, it's $1.99 in the iOS app store.
And it's not perfect, but it does native connections
to Nextcloud or own cloud, supports SSL,
and it syncs all of the changes back and forth.
It'll render the markdown, and it lets you share the notes.
It's not a perfect note client, but it does put my notes now
on my desktop, my laptop, my phone,
and on the Nextcloud web, and it's
marked down across all of them if I want to.
And they all support, they all render it,
they all do highlighting, syntax highlighting.
And that happens to just be my preferred way to write notes.
Anyways, I've done that since I was an IT contractor.
It's pretty great.
I'm just closing the loop on this topic.
I won't spend a lot of time on it,
but it really does feel like a solid, self-hosted, secure
solutions.
Everything's SSL.
QownNotes has AES-256 encryption by default,
but this is pretty cool.
It has a plug-in to use Keybase as a key to actually do,
yeah, to do GNU PG encryption of all of your notes
signed to your Keybase profile.
That is slick.
Yeah.
So there's a couple other really cool plug-ins
that it supports in there, including swapping up
the markdown engine and all kinds of stuff.
QownNotes is, I really think it's
an underrated application for the Linux desktop.
It has so many uses.
Even if you don't want to ever use any kind of sync system,
you just want to have files on your local hard disk
or on a thumb drive or whatever, it would do great at that.
Is there anything you haven't been able to get quite right
yet?
Yeah, but Google Photos, I think, could fill in the gap.
But the thing that Evernote is great at and kind of had
kept me around is when I travel, I
could take pictures of business signs,
and it OCRs text in the photos.
That is nice.
Yeah, and it's got support for business cards and stuff
like that.
But I've got other apps on my phone
now, like ScanBot, that can do that kind of stuff.
So it's not as necessary.
When I first had that functionality in Evernote,
it was the only app that really did that.
But now I could use ScanBot to take a photo of a sign
and let Google Photos sync it up, and I could search it.
I haven't actually done that yet because I'm still
on the fence about going back to Google Photos.
But it would be an alternative.
Right, you have some options now.
Yeah, yeah.
I'd love to know if anybody else has any solutions.
I don't know how to replace that functionality.
I do miss that the most.
I don't know if Tusk even supports that,
because it's a search thing, so it might.
And the Evernote client is just really heavy,
so I really kind of liked having a clean, fresh start, too.
And I'd love to know your solutions for how
you're doing all of this and what your thoughts are
on notes.
Like, I'm trying to use this system for notes
on mechanical information about my RV, everything from types
of oil to part numbers.
I'm trying to keep track of how our mixer is configured.
There's a wide range of stuff I'm trying
to use a note system for, so I need
to be able to categorize it a little bit.
I need it to be across all the devices.
I want it to be secure, and I'd rather it not
be on a hosted service.
I mean, I'm paying for the droplet,
but I'd rather it not be on a hosted service.
I'd rather it be on something I control.
And now I'm making backups of that Nextcloud instance,
plus I have it in plain text on all of my hard drives.
It feels like a pretty solid solution,
but I'd like to know what other people are doing.
You can send in a contact note at linuxunplugged.com
slash contact.
All right, well then, let's get to the laptop stuff.
So first, let's talk about DigitalOcean.
Go to do.co slash unplugged to get a $100 credit
at DigitalOcean do.co slash unplugged for 60 days.
If you sign up with a new account,
you'll get $100 in DigitalOcean service credits.
Now, my favorite rig is $0.03 an hour,
so that's going to get you quite a while
on their super fast infrastructure.
Everything is using SSDs, from the $0.03 an hour
to the ones that have huge amounts of memory and CPU
and disk, it's all SSD.
When you attach block storage, it's SSDs.
It's fast, plus 40 gigabit connections
coming into the hypervisor.
And then they've strategically placed data centers
all around the world, so it has great connectivity
to those regions.
Plus, when you combine that with their predictable cost
and billing, the different optimized compute types,
including their new flexible droplets
where you can mix and match resources,
it's really hard to beat DigitalOcean.
And then they have services built in,
like Cloud Firewalls, monitoring and alerting,
easy to manage DNS, and of course, that API.
That API and that dashboard really bring it all together.
They're easy to use, like the API is super clear,
it's easy to read, and there's lots
of open source applications already built
that you can just start using today.
You can just start taking advantage of them.
Plus, they have fantastic uptime.
My next cloud instance that I've been using this whole week,
of course, that's up on DigitalOcean.
I put it in the San Francisco region.
I am predominantly on the West Coast of the United States.
And not always now, but almost always.
And so that made sense for me.
But I could move it around, I could
have set up a separate one somewhere else.
I like that functionality.
And they have such great pricing.
$0.03 an hour for my favorite one.
It's just, it's crazy.
So go take advantage of that $100 credit,
go build something great.
Go play around with an entire stack of open source software,
or build something from the ground up.
dio.co slash unplugged.
Big thank you to DigitalOcean, that's dio.co slash unplugged.
Going to have a straw poll linked in the show notes
on the best Linux laptop for 2018.
I'm going to drop it in the chat room too right now.
I know not everything's on there,
so here's the way this is going to work.
I would like you to go vote on this,
because whatever gets the least amount of votes
gets eliminated off this list, and we'll
put something else on there.
But right now, these are the laptops
that seem the most appealing to me.
And I'll bust through them really quick,
and then we'll talk about each one of them individually.
Again, I acknowledge there's some missing,
like all of the Intraware products, for example,
are not on this list.
But here is the top ones that I have so far.
The ThinkPad X270, the Aurex Pro newly updated,
the XPS 13 Developer Edition, ThinkPad X1 Carbon,
and the Librem 15 are sort of my top choices
right now for a 2018 Linux laptop.
And each one has pros and cons, and the ones
I probably know the least about are the Lenovo ThinkPads.
But from what I've heard about NOA's 270, which isn't even
the current model anymore, it seems
like a pretty compelling device.
You're probably a resident ThinkPad expert,
Popi, do you know the difference between the 280 and the 270
and why NOA says the 270 is the one you want to get?
Not really.
My most current laptop is a 250.
I generally go for the one that's a year older,
just because it's cheaper.
And I can get it second hand.
You get a half price than the one that's brand new.
Yeah, I know that the one big difference
is a crazy proprietary ethernet dongle port on the 280.
They've dropped ethernet.
That's a shame, that's been one of their selling points.
But the reason the 270 is high on my list
is having watched the way NOA works with his,
it has incredible battery life.
It really is an all day battery.
And it's got a three cell battery integrated into it.
They don't call it a battery, but it's got a three cell
battery, a power station I think is what they call it,
integrated.
And then he's got a nine cell battery hanging off the back.
And the cool thing about that integrated battery
is he can hot swap batteries.
He can just rip the battery off and slap a new one in.
And that three cell internal keeps it going for a while.
Yeah, I do that with my T450.
It's a fantastic feature.
I have three spare batteries for my T450.
So if I want to, I can go all day and beyond
and just swap out while I'm running.
And it just keeps on running on the internal
while you swap it out.
It's great.
Like I don't need that all the time.
But when I need it, I super need it.
So on this trip to Texas, I am the whole way down there.
We are running off of batteries.
And when we drive, we charge the batteries.
And when we park, we drain the batteries.
And it's going to be 100 degrees in some areas.
So the fridge will be sucking batteries down like crazy.
So if my laptop can avoid being plugged in,
because the double damage with my laptop
is it's converting DC to AC back to DC.
It's just this brutal process where
if I can avoid doing that when I'm running off of batteries
and I can just go off of the laptop battery,
that would be very, very beneficial.
And that kind of kicked this whole thing off.
No, it gets like 12, 14 hours.
What kind of battery life do you get, Popi?
Probably not as much as that.
But then I'm doing quite brutal things, lots of compiling,
lots of VMs, electron apps, all the kind of things
that you probably don't want to run if you want that.
Now, Wes, you have been shopping for a laptop.
You've got the original Sputnik Developer Edition.
And you were just looking at the X1 Carbon,
which is the second ThinkPad on this list.
Yeah, it is really handsome.
I just happened to be in a store the other day,
and there was the XPS 13 right next to an X1 Carbon.
Oh, really?
Boy, they're both handsome.
I love how light the XPS is.
It's just light and thin and feels super minimal.
The Carbon, though, does have a certain,
it still has that ThinkPad style feel.
It feels a little more rugged.
It feels sort of like you could really throw it in a bag
and just not worry about it.
Yeah, the XPS is a little delicate.
Now, I have the fifth generation.
I'm actually talking to you through my old XPS right now.
That's the last laptop I have right now.
And I broke it.
And so the side, it squishes when I pick it up.
It's starting to fall apart a little bit on me.
So over the three years I've had it,
it's maybe not held up quite as well as I wanted.
But it's still fully functional, and I'm still
using it as a full-fledged production machine.
So it's just maybe the build quality
could have been a little bit better.
And I would bet you it has improved since then.
When I was at scale, I saw quite a bit of the X1 Carbon
floating around.
Seemed to be a popular one.
Seemed like it was fine running Linux.
You do lose that ethernet port again, though,
which that's a bit of a deal breaker for me.
I really want an ethernet port.
What's most important to you, the portability of the device
or the size and comfort of the screen?
Do you mind about how heavy it is?
Not a lot.
The screen is probably slightly more important,
and a good keyboard is pretty important.
I don't want it much bigger than the XPS 13,
so somewhere around 13 inches, I think,
is kind of what I'm looking at.
So you're not going to be video editing on this thing, then?
No, no, I don't plan to.
No, it's more for web, email, and audio.
Right, OK.
You have something in mind?
Well, I was just wanting to clarify.
There's no point in me going into it
if you know what your use case is.
But as an owner of two XPS 13s and having also
reviewed their current model, they're really solid devices.
Yeah, I am predisposed to be inclined to go with the XPS 13
because it's got a really solid accessory market, too,
like Docs and USB-C hubs and things
like that that are really reliable,
and that's attractive to it.
Another advantage is that it doesn't matter
what Linux you put on it.
You'll be able to update the firmware via Linux
with the XPS 13.
Also, the new Hades Canyon NUC also
has its firmware in LVFS, so I discovered at the weekend.
Oh, really?
A little side tangent, how is the Hades Canyon NUC going?
That is going to be many weeks of hard work
to get Linux working well on it is the TLDR there.
Yeah, it's all in flight at the moment.
So the GPU is not supported in current kernels.
It's scheduled for inclusion in 4.18.
So it's building kernels from Git with DRM next branches
and stuff.
Yeah, I think the XPS 13 is my strongest lead right now.
The Lenovo only pulls ahead because of that power station
feature where I could swap batteries.
And the 270 has ethernet, which the XPS does not.
And it has USB-C charging.
But you raised a good question, like the screen.
Well, what if I wanted to go with a slightly larger screen?
Because if it's going to be my main system for production
while I'm on the road.
Then the Librem 15 or the Oryx Pro, I think,
become pretty solid contenders.
I have the Librem 15 and the One Rev behind that they sent to me.
And I think it's a really good system.
I'm not a huge fan of the screen, but other than that,
I think it's a great system with a good keyboard.
And then System76 just updated the Oryx Pro.
And it looks pretty nice.
It's got 8th Gen i7 CPUs, up to 32 gigs of RAM.
And it's a lot thinner.
It's way thinner with a GTX 10 in it.
The only complaint I have with it is the battery, I think,
is like around somewhere in the 50 watt range.
And that's not so bad on a XPS 13.
But on an Oryx Pro slightly larger,
when I'm trying to optimize for battery life,
that's sort of not the right use case for me.
If I could be plugged in most of the time,
I think it would actually be a good system for me.
But the battery life is a killer.
And I can't seem to find one that
beats that ThinkPad for battery.
So this is where I kind of punt to the audience a little bit.
I'd like to know what they think, linuxunplug.com
slash contact.
And we also have that poll in the show notes.
I wonder if anybody's voting.
Because what I was thinking was, is obviously,
this is not an inclusive poll.
So if we can pull a couple of these off the list right now,
the ThinkPad X270 and the Librem 15
are trailing behind the most.
And the XPS 13 is pulling ahead, which
is the live voting that we have with the live audience.
So I'll link that in the show notes.
I'd like to have the rest of the download audience
vote on that a bit, or at least those of you that are willing,
just so we can kind of get a sense of which laptop
we should remove from that list, and then
let us know on the contact page which laptop we should add.
Wes and I are not necessarily either one of us
buying a laptop today.
But Wes, you've got to be getting close, right?
Yeah, I think it now is the summer.
I've got some traveling coming up.
But then after that, I think it will really, really be time.
Striking distance for you.
Yeah, and that'll be nice.
That way, when you launch Slack, your little fan
doesn't have to spin up every time.
Yeah, exactly.
That'd be good.
I can run two Electron apps.
Oh, my.
Yeah.
Yeah.
Yeah.
I know this Chrome app that we're using to talk right now
really spins my CPUs up pretty bad on this XPS 13.
That's what's pegging it.
Not all the other stuff I'm doing, but that Chrome app.
Yeah, so check out that poll.
Go vote and let us know what you think.
Mumble room, any other thoughts on laptops or hardware
before we wrap this sucker up?
The Galago Pro gets a mention.
Yeah, somebody in the chat room is saying,
mention the Galago Pro.
Yeah, I don't think, again, that comes back
to the battery and the fan stuff with the Galago Pro
are not going to make an optimal for my use case.
The Dell XPS 15 is getting a mention.
The Latitude E6440.
OK, those are good mentions from the chat room, too.
Ones with two 9-cell batteries?
Oh.
Dang, that is great.
Yeah, I'm kind of curious if there's these sleeper hits
that we've just been missing that turned out
to be a really reliable Linux laptop that no one's ever
heard of because it's an Acer or something.
Speaking of Jonathan Riddle, he did a pretty hard sell
for the Pine Book.
And it kind of made me really interested.
You can only get them in limited quantities
because they don't build them until there's
enough of an order.
But the Pine Book sounded pretty cool, like $100 somewhere
around there for a ARM laptop that's
actually decent performance.
I got to be honest, that piqued my interest.
That piqued my interest.
All right, well, go check out more Popeye and Wimpy
over at the excellent Ubuntu podcast, which
is coming right along and always a great listen.
Just caught the latest episode the other day
and thought it was quite enjoyable.
Good work, gentlemen, as always on the podcast.
I recommend people go check it out.
Thank you very much.
And Mr. Wes and I do a full breakdown
of the big bad new version, the new variant of, what was it,
the store bypass variant.
Of course, I'm totally blanking out now
because I didn't plan to mention this.
Spectre v4.
Yeah, Spectre v4.
We do a full breakdown on this week's episode of Tech Snap.
Wes did an excellent job of digging
through some of the documentation
that Red Hat released, which was really good stuff.
And we have a digest of all of that and more things you need
to know in this week's episode of Tech Snap.
So check that out at techsnap.systems.
Now, this show continues on as we go down the road.
I don't know exactly how or when.
But it will.
But it will.
It will.
linuxunplug.com slash subscribe.
Just get it every single week whenever it does come out.
And we will attempt to stream it live.
You can find that at jbliv.tv.
And you can find the live times at jupyterbroadcasting.com
slash calendar.
Links to everything we talked about at linuxunplug.com
slash 250.
How's about that for a whole bunch of Earls?
How about one more for the Texas shirt?
teespring.com slash jbtexas.
Go get some swag.
And we'll see you next week.
All right, we got a title, jbtitles.com.
Oh, Hadidah's getting home.
Hadidah has arrived home just as we finished.
Perfect timing.
jbtitles, jbjbtitles.
All right, we'll see what we get.
It's nice to have JBot back.
See if it'll load, though.
jbtitles.com.
How did it feel doing it from home, Wes?
Not too bad.
A little bit different.
I miss your smile and face, of course.
But hey, workable.
Oh, you're such a gentleman.
You're such a gentleman.
No, I mean, it was kind of nice to be
able to take a breather between techsnap and live.
That was kind of fun.
Levi enjoyed the sunshine.
So that was good.
My air conditioning kicked on midway through the show
because it started to get really, really hot in here.
How come JB Titles isn't loading, Wes?
Uh-oh.
Yeah.
Yeah.
It's no good.
It's no good.
How are we ever going to title it?
You know, we also didn't title TechSnap.
This is a double title jam up.
What's happening with us?
Oh, man.
Mamba Room, thanks, guys.
You guys were great, as always.
Hello, darling.
Hello.
Welcome home.
Did you bring home beer?
I brought home beer for me and cider for you.
Thank you.
Cider for me and beer for her.
I was just thinking, I can't believe we did the show
and I don't have any booze in the show.
Like, I don't have to drive anywhere.
I'm at home.
I could have had a brewski.
