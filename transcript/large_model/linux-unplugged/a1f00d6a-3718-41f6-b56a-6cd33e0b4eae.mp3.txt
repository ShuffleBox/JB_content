You know about Amazon Echo, and you got Alexa, you got Google Now, you got Cortana, you got Siri.
How about Mycroft?
You ready for this? Mycroft, an open-source artificial intelligence for everyone.
31 backers, they're trying to get $99,000. They currently have about $4,000.
29 days to go on this Kickstarter, you know we got to play this video. This is like an open-source,
open-source, here it says it uses a natural language, like this is a natural language, you speak to it,
Internet of Things device built on a Raspberry Pi.
It can play media, controls lights, and more.
They have all these nice little logos here. Now I'm gonna play the video for you, and then we'll talk more about it.
So it's supposed to be powered by all open-source technology and all this good stuff, so let's take a look.
Go. Go. Go. Sarah, it's time to wake up.
The weather in Lawrence is 73 and sunny. It will be warm today with a 10% chance of rain.
Mycroft, start some coffee, will you?
Mycroft, connect to Alice's room.
Alice? Sweetie, it's time to wake up.
Mycroft, play the best of the 80s on Pandora.
All right. All right. Okay, go. Okay.
Heading up in here. I like her tuck shirt, too.
Mycroft, play Avengers Assembly.
So it starts a Netflix video. As she eats her breakfast of something.
Is that a cookie? What's that she eating for breakfast? Toast, baby.
Mycroft, what's on the schedule for today?
Sarah has a meeting with Tim at 10 a.m. Alice has soccer at 4 30 p.m.
Tucks in the window.
He didn't arrive at the airport at 7 p.m.
Mycroft, lock up for the day.
Turns off the coffee pot, sets the temp and locks the doors.
That's Mycroft. An open-source home personal assistant.
Introducing Mycroft, the first open-source artificial intelligenceâ€¦
I just said that. I just said that.
I just said that.
The first open-source artificial intelligence in the world.
I just said that. I just said that. Come on.
That's key, right? You can tell he's got to have that.
Look at that. How slick is that? That's neat.
All right. You can watch the rest.
About another minute left in the video here. I'll just jump ahead and see if there's anything
outrageously cool about it, but it does look like actually there's some fun left in the
video if you guys want to go check it out. So they talk a little bit more in the video
too about the Mycroft AI. They're also open sourcing the artificial intelligence software
that powers this thing. So it's not just the cool hardware. And they have different levels.
It looks like if you want to get any hardware, you're going to get it at $99. And they have
just a few left. Oh, no, they have a lot left. 488 out of 500. And that includes a Mycroft
unit, the enclosure with the LED display, a Raspberry Pi 2, a Wi-Fi module, standard
Mycroft backplate, ethernet port. Oh, interesting. It also has ethernet and a DC 5-volt barrel
plug. And then they have a $120 or $130 one, which includes a lot more stuff. Wow, look
at this. They have one that includes HDMI out too. Yeah, it looks like next summer.
Yeah. So what do you think, Wes? You know, it might be worth it just if all that AI software,
you know, just getting that kind of stuff out with open licenses is pretty interesting.
Geez, yeah. In fact, one of the things I've thought about when the Amazon Echo came out
is, man, I really wish open source had a solid answer here. And, you know, listeners Scooby
Sprite and Seth, he was in the chat room or in the mumble room a week or two ago telling
us about his radio controller project. He loves his Echo. And he says it's really, really
slick. And it kind of makes me want one a little bit every now and then because I kind
of like the, you know, the Tony Stark kind of Jarvis type future. We really do need a
competitor in the free software world that can modular supports people who want to customize
and add their own features. All right. So what do you think, Jarem? What do you think?
You guys, any doubters? I think I found the setup for the new horror story that I'm going
to be writing. All right. Go ahead. Yeah, go ahead. I just want to say that actually
the name Microsoft was used before for a plugin list for Firefox. Oh, interesting. Yeah. So
they go through they go through also it includes Roku integration, Chromecast integration,
smartphone app integration and a lot of different home automation systems are really kind of
slick, I think. I would just love to see I'm really enthusiastic because I'd love to see
something like this that's open source that I could be proud to have and not be a little
creeped out by. And it'd be really interesting to see if it does get funded, if how quickly
if they get enough community support to make it continue to be relevant, because that might
be where it's, you know, where it can actually last rather than the smart TV syndrome. This
is Linux Unplugged, episode 105 for August 11th, 2015. Welcome to Linux Unplugged, your
weekly Linux talk show that's ready for the Vulcan revolution. Live long and prosper.
My name is Chris. And this is Wes. Hey there, Wes. I'll let you do it yourself this week.
I figured we change it up a little bit. So Wes, I'm really glad to have you here. I guess
last week you were off getting married or something. I sure was. Lots of fun. You made
it back for a great show this week, Wes. Episode 105. We're going to talk about something pretty
cool right off the top. Artificial intelligence that's open source in just a moment. And then
after that, we're going to revisit the topic of file synchronization under Linux. It's
really heated up. And Wes here has a pretty cool solution with sync thing and another
open source tool that sort of stitches all of his machines together, regardless if it's
on the LAN or a digital ocean droplet or his Android phone. And then he can use sync thing
across all of them. We're going to talk about that in the show. It's really neat. Plus there's
a new version of Spider Oak out that has some specific improvements for Linux. And also
the Ubuntu one sync source code went open source this week. Then later in the show,
it has just announced support for Vulkan, the graphics API. This is huge, huge news
for Linux gaming, for desktop Linux gaming. We'll talk about why. And then at the end
of the show, our friends over at Firefox have been listening to the unplugged program and
they have a new update out specifically to address some of the issues we've complained
about under Linux in Firefox. So if you are a Firefox user under Linux or consider trying
out Firefox again under Linux, you might want to stay tuned because it's a pretty slick
update for Linux users. Just don't mention it to Chris. I mean literally slick user.
Yeah, don't tell me. Don't tell me. Cause I like slick features. I'm a slick operator.
I'm a slick operator. Yeah. All right. So in the pre show we were talking about this
really cool Kickstarter called the Mycroft and in between literally in between a few
moments ago and now since we started the show, we've had somebody from the Kickstarter join
us in the mumble room. I believe he's their chief technology officer. So I want to bring
him onto the show right now. Ryan, welcome to Linux Unplugged. Welcome back, I should
say. Yeah, it's good to be back. I love this show so much. Okay. So Ryan, in your own words,
what is the Mycroft device and what's your involvement with the project? So in my own
words, have you ever wanted to walk into your house and have it be like you're on the Starship
Enterprise? Yes, every day. Well, this project allows you to do that. It's an artificial
intelligence for controlling your entire home from entertainment to your appliances to your
lights to your music. Everything can run through Mycroft because it's powered by Linux. And
how much of an infrastructure is there to to just like if I'm a consumer, if I had something
like this is set up, put it on my table, am I am I ready to start using it or is it like
I have to write the apps for it? Absolutely. You you do not have to write anything if you
don't want to. That's actually a lot of questions I've gotten is, okay, it's open source. Drop
the code on us right now. And we're like, no, we want to, but we are putting in place
ways to easily manage it and contribute to the project. And and and we before we ever
started on this, we actually this came out of a self selfish endeavor. We wanted we had
this place. It's a maker space here in Lawrence, Kansas, and we wanted to power the whole place
using an artificial intelligence. And so we went through all these different open source
projects that were already out there, you know, this personal assistance type things.
And none of them did what we wanted. We wanted to control the lights. We wanted to be able
to add new modules and essentially make it power the entire space. And everything was
limited or really hard to install or really hard to configure. And we were like, this
is not a good shape for this to be in. I mean, we've already got things like Google Now and
Siri and Echo coming out, and they're all super tied into their own ecosystems and proprietary.
And we were like, this is something open source can actually do better. Well, you know, and
so the big differentiator here and maybe also the biggest question mark is it's running
a local A.I. local A.I. that seems to be powering a lot of the recognition and and all of that.
Is that is that all done locally? Is there no cloud component to this? There is a cloud
component. And we've received a lot of questions about that. We use pocket Sphinx for the keyword
recognition. Pocket Sphinx is a local library that analyzes, you know, it doesn't go anywhere.
It's just listening for its keyword. Until then, you can say anything and it's not going
anywhere. And that's good because you don't want everything you say in your house to be
streamed up to a server. Right. So the voice processing for the trigger words is done locally.
Yeah. But at that point, we actually send it off to a few different places and essentially
whichever comes back first, we analyze it for quality. Like, how how accurate do we
think this is? And then, you know, depending on how accurate that first speech to text
thing is and we have our own ways of kind of figuring that out, we either accept it
or we wait for the next one to come in. And we're hoping that people will be able to make
decisions for themselves, at least our technical users, for which which services they want
to use for analyzing, you know, the queries and then go from there. The machine itself
actually decides what to do with the query when it gets it back. So when it analyzes
what you say and this is really complicated and I'm sorry, there's not really a great
way to to encapsulate this into it's actually so the the the decision, the action taken
isn't made up in the cloud service. It's the answer is provided to the local box. And that's
where the decision is made on what to do. That's correct. That's correct. That's nice.
It comes back with a confidence. It says this is what we think it said. And then the local
machine goes through its modules very, very quickly to decide which one applies to that.
So if Chris Fisher says, I want you to play the Deadpool trailer on my TV in the living
room, it's going to come back. It's going to look at the media module. The media module
is going to say, I'm pretty sure he wants YouTube. Then the YouTube module is going
to be activated, which is going to cast that to the to the Chromecast in your living room
TV. Sure. Huh? That that's pretty slick. And I guess the nice thing here is if this really,
really reaches its goal, regardless of how well the device does, there could be a significant
contribution by having this open source A.I. project. So can you tell me more about that?
Like, is it a server client thing? Is it all open? Is there is there a proprietary aspect
to it? What's going on with this A.I. and what's it called exactly? So the A.I. itself
is called Mycroft. It's named after Mycroft Holmes, which is Sherlock Holmes brother.
It's also there's this book called The Moon is a Harsh Mistress, which has an artificial
intelligence in it named Mycroft. And Mycroft is important because Mycroft being Sherlock's
home brother was supposed to be super intelligent. He was supposed to be able to just you know,
he had an excellent memory, was able to just pull information out of his head at a moment's
notice. And so that's where the inspiration came from for the name. The actual device
itself is is completely open, open hardware, open software and the entire unit and everything
related to it is going to be open. The only thing I can imagine maybe having some parts
being held back would be some of our back end infrastructure for, you know, like we
we want everything that comes through our servers to be encrypted and anonymized. Right.
And so I don't know how much of our back end we're going to open source right away. I being
that I've your show actually was something that I grew with as I grew in my Linux abilities.
I started listening to it. Oh, God, like I don't want to guess how many years ago. But
and so my goal is as a result of being kind of raised in this culture and having like
a lot of my my tech knowledge grow with the open source community and my involvement in
it, I would eventually like to get everything that we that we create open source. But there's
also we have to find the best way to do that. We have to do it at the right time or else
people will be like, this software is crap. And so the the way it interfaces with home
automation devices, is that through like the APIs that those vendors provide? Like so SmartThings
Hub or Philips Hughes, that's essentially it's just interfacing with those APIs that
exist out there already. Yes, that's exactly right. Anything your Linux box can do, my
craft can do. Because it's built on top of Raspberry Pi. And so anything you can you
can run on a Linux box. The way that the modules are created is it can just send off a command
through, you know, through the Raspberry Pi to a device. How is that? So how is that then
how is that done from the user? How is that set up from a user perspective in a device?
It's all done with voice commands. Is there some sort of web interface? Or how do you
I know it's getting down to the details. I'm just curious, how does an end user do interface
with something like this? So there there are two ways I see it. There's the for grandma,
you know, and then there's for someone like Chris Fisher. And grandma will use an application
to install modules that others have created. Okay. And then when they're installed, like
if she installs Pandora, it'll say on her on her phone or on her computer, it will say,
you know, log in, okay, we've imported your stations, you know, and then and it'll say,
would you like to create custom names for these stations, you know, beyond their normal
name. So if you say, play my jam, it will go directly to the station you've designated
as my jam. But for Chris Fisher, you might want to actually create a module that does
something related to your studio over there. And the and the way that that works is, is
you can create a module and install locally on your machine just by logging into your
machine. And then if you want to contribute it back to the community, you can and we'll
have a community repo where people can contribute their own modules back. We at the makerspace,
we have a whole bunch of drones, and we fly them. And we've also got them so we can design
flight paths for them. And so right now we're working on a module where we say Mycroft launched
the drone to do a perimeter check, and he goes on a predefined flight path. And so,
so that's the point, though, is I was getting very upset that I could get an echo or, you
know, one of these other devices in my house, but I would have no control over what services
I could use with it. Yeah, it'd be whatever Amazon told me I could use. And that's where
I think the big difference is people are like, I don't understand what's different. And it's
like, well, if you get an Amazon echo, Amazon is going to control every single thing that
can interface with there's that there's that, you know, they're going to because they're
proprietary because they're this ecosystem that's going to put their own products and
services ahead of others. You know, that's that's something you don't run into with Mycroft
because Mycroft is open and we're not going to prioritize anybody because frankly, we
can't, you know, there's people will be able to install whatever modules they want when
we don't want to limit what they can install on their own device.
$99,000. Is that enough to build an open source artificial intelligence and manufacture and
ship units like this out to customers?
So that's a really good question. The $99,000. So we've already bankrolled this a lot. We
come from a background of most of the people on the team. This isn't their first rodeo.
This isn't their first company. And our CEO, Joshua Montgomery, has been featured in Arstechnica
and a few other, you know, big online publications for his work on the Wicked Fiber Initiative
in Lawrence, Kansas to get one gigabit, you know, internet service to everybody in the
in the town. And so we've had we've had experience and we all come from different backgrounds
and maybe in different companies that we've played a role in, in starting and everything.
What this says $99,000, yes, will allow us to ship our first units, you know, that would
be great. But it will also allow us to be able to have that reassurance that we're doing
something that people want. And we're ready to invest more in it. Because of that, you
know, we we think that first off, we have a little bit of, you know, funds that we're
willing to pour into the project, if we know that there's some actual desire for a product
like this. And secondly, if we actually do fund that allows us to go to investors and
say, hey, you know, we want to take this to the next level. And here's the here's the
interest, you know, and everything. But I would love to see us get I'd love to see us
beat our Kickstarter goal and have enough have enough resources to actually completely
fund this from our fans, you know, and not have to go to investors if we don't have to.
But I'm but you know, we we've already planned for the next step in the event that we fund
and everybody will be able to get their unit and will be very in pretty decent shape for
a good long time. So I would say if something like this interests you, head over there and
back it. Yeah. And if you have any questions, you know, hit us up. You can message us on
Kickstarter. I'm in the chat, you know, occasionally. But you can also find me on Google Plus and
Twitter at Ryan Lee Sipes and just ask me a question. Ryan, more than happy to answer
them. I don't know if you're going to be around for the whole show, but if you are, I was
thinking maybe we could do like some Q&A with the Mumble Room in the in the post show and
see if maybe people have some questions and answer them, give people time to check over
the page and maybe come up with some questions because it looks really cool. I mean, I'm
really excited about an open source artificial. Yeah, we both are. Yeah, I think that could
be big. And so even nothing else right there. I'd love to see that. I'd love to have a little
unit like that in the studio, too. You know, just seems fun. Have it work, you know, come
in here in the morning and be like, MyCraft, MyCraft, activate studio and like it turns
on the Hughes lights and it turns on the studio, like all that kind of stuff. That's actually
something called a scene. And I'm glad that you said that because you can set things that
are called scenes, which are multiple presets. So you can say something like, you know, activate
studio and it turns on the lights, starts up, you know, certain machines, gets your
coffee going, plays like an awesome music in the background. Exactly. And so and that's
something that's that's really interesting that we've had a lot of fun working on. And
so really, I know you're going to maybe be doing a road trip at some point. That's about
that. If you work your way through Kansas, we'd love to take you around our space and
show you all the different things. And maybe even send you with a unit of your own once
you leave. All right. We'll have to talk more and we'll have to talk more. And I want to
come in and be like, MyCraft, activate Star Trek mode. And it like it makes like I have
all my doors in my house have to make like the Star Trek sound effect and like the bridge
sounds are in the background. Red Alerts. Yeah, there you go. Yeah, that'd be great.
If you Chris, if you back the Kickstarter, I'll make you a Star Trek. I'll personally
make you a Star Trek. I love it. I love it. All right. Thank you. Thank you. All right.
So if you want to stick around, we'll we'll do some follow up questions in the post show.
But I first before we go any further, I have to throw something down right now right here
on the show. You guys, the Gnome Foundation is very excited in their own words. They are
excited to announce publicly the search for an executive director of the foundation. And
I say search no further. Ladies and gentlemen, right here I have your director, Chris Fisher.
He is happy to step up and fill the role of the Gnome director. I second that nomination.
Thank you. Thank you. The executive director. Now let's see, what do I have to do here?
The executive director is critical for the foundation. That sounds like a good role for
me. This is the public face of Gnome. I could do that. You love Gnome. And I have a face
and I have a camera. So I can be a public face. I'm a liaison to the Gnome advisory
board. Well, as long as they're okay with a little bit of an ass kick. And I think I
could do that. Yeah, I could do that. All right. The primary fundraiser for the foundation.
Well friends, let me tell you about Ting.com. See, I can do that, right? Maybe I could get
Ting to sponsor the Gnome Foundation. That'd be super cool. All right. Yeah, I'm in for
that. All right. Yeah, I can do all of these things. So no, hold on a second. What's this
say? Uh oh. The executive director will execute the daily business of the foundation and work
with the directors of the Gnome Foundation on a regular basis. That sounds like a lot
of work. That sounds like a lot of work. Wes, you want this job? I don't think so. All right.
Well, anyways, if you want that gig, the Gnome Foundation is officially looking for a director.
And I don't know, it's always kind of weird when you have to publicly announce these kinds
of things. Yeah, it makes you think like, have they been looking and not finding? Yeah,
exactly. You're like, yeah, they haven't got anybody yet. I do have a Gnome face. Thanks.
Jordan says, I have a face for Gnome. Yeah. Could I manage that token ring, says Anne
podcasting. Well, maybe I could just do podcasts about Gnome. Yeah. There you go. Solves that
problem. And I'll just every now and then. Yeah. Widget Cyber says, but you have to cyber
everything and we need more hack toasters. Oh, okay. I could put Gnome on a toaster.
Yeah, definitely. All right. Well, before we get into, actually, Wes' super cool sync
solution. Oh, and Wimpy showed up too. So maybe Wimpy will be happy to talk to us about
sync thing. And I see Poppy's here. Maybe Poppy can rub it in her face that Ubuntu 1
sync has been open source. So that'll be good. All right. Should be a good segment coming
up. I think that'll be really nice. And actually, Wes was teasing me on the pre-show, I think
before we turned on the microphones, right? So I don't even think the pre-show folks tuned
in know your secret to how you make sync thing rock so hard. Oh, secret, secret. I'm really
looking forward to this. After you told me this, I'm like, I'm totally doing this. I
might even do a segment on just this one piece of it. It's so exciting. So stay tuned because
sync thing just got really super cool in my book. And plus, like I said, there's been
some other updates in the space, like syncing solutions just went from ho-hum in the last
six months to pretty badass. It's pretty interesting. I think they're badass. I think even the commercial
solutions, but I'm, hold on. I'm getting ahead of myself first. We got to talk about Digital
Ocean. DigitalOcean.com. Use the promo code DOUNPLUG to get a $10 credit. DOUNPLUG over
at DigitalOcean.com. That supports the show, keeps us going. It lets Digital Ocean know
you heard about it here. So why Digital Ocean? What is it? It's Linux infrastructure on demand.
If you need to deploy a server, if you need to deploy an application, don't really worry
about the details there. Digital Ocean has a VPS infrastructure, and they call those
VPS as droplets. And the reason why they do that is because they're a little more, well,
they're a lot more flexible than a regular VPS. You can scale them up as you need. The
pricing is very straightforward. If you go to Digital Ocean site, they have it broken
out. It starts at $5, then you go to $10, you go to $20, $40. And each along those steps,
you get an increase in your CPU, your hard drive, your total transfer, all of that. And
they also even offer hourly pricing that start at below a penny an hour. I mean, that's kind
of crazy. So that's a great way to do testing or if you just need to scale up on demand.
So that's a really nice thing about Digital Ocean is it's Linux infrastructure in a really
well built out cloud, all backed by Linux KVM. And it's super reliable. They have data
centers in New York, San Francisco, Singapore, Amsterdam, London, and Germany. They're really
great connections. Like the one in Germany has 40 gigabit connections to each hypervisor.
Yeah, that's something. And with the connections on these machines are nuts. So we're going
to talk about syncing here in a minute. And I've used it a lot for own cloud file sync.
And one of the really nice things, I've had to resync like an entire huge directory in
own cloud a few times. And being able to pull that down from my Digital Ocean droplet as
fast as my ISP connection can take it is nice. It's just very, it feels like you're getting
a high class, well put together system. I really like that. And so they also have one
of the best interfaces to manage this out of anyone in the business. Their control panel
is super intuitive and they have an API to take all the functionality of that control
panel and really push it into something bigger.
Oh, you got to love that API.
Yeah, because you got great apps built around that. You can snap into your management infrastructure.
And the thing is like, okay, so I've told you all of this and you're like, well, this
sounds like a really great expensive solution. And the nuts part is it starts at $5 a month.
$5 a month, you get 512 megabytes of RAM, a 20 gigabyte SSD, because they're all SSDs,
one CPU and a terabyte of transfer. And if you use our promo code DOUNPLUGGED, DOUNPLUGGED,
one word, get a $10 credit, try out Digital Ocean two months for free, digitalocean.com.
And a big thanks to Digital Ocean for sponsoring Linux Unplugged. And thanks to you guys for
using the promo code, DOUNPLUGGED, digitalocean.com.
All right, let's start with the really good news, the open source news. The thing that
I think is really, I think a lot of people are happy to see, Canonical announced that
they are open sourcing the file sync code for Ubuntu One. They say, today we're happy
to be open sourcing the biggest piece of Ubuntu One's file syncing service. The code we're
releasing is the server side of the desktop clients connected when syncing local or remote
changes. This is so nice. The client side code is really, really, really, I think, a
weak area where my own cloud setup failed me. The code is where most of the innovation
and hard work went throughout the years, where we faced most of the scaling challenges and
on the basis of whether other components were built upon. They've released it under the
AGPL version three, hoping it'll be useful for developers to read through fork on their
own projects. That is so cool.
Popey, do you have any inside dope or comments or just opinions to share on this particular
story? I think this is...
Only, you know, we kept getting nagged about this for a long time because, you know, it
was actually quite a long time ago. We said we would do this and even our CEO posted,
you know, a blog post that said we would do it. And, you know, we got a little bit of
a stick for shutting down the service and not making the code available immediately
so people could spin up their own, you know. But it talks a little bit in the blog post
about how they had to do a bit of code cleanup and stuff and they just didn't have the resources
to do it because they're all busy doing other stuff. But they did in the end and it's available
and it's on Launchpad and if you want, it's on GitHub as well.
I heard some people say, oh, maybe your own cloud will use this. It's probably not likely
because I think they use a CSYNC or something under the hood. I can't remember.
I don't know. I mean, yeah, they may get some inspiration from it. They may be able to learn
something from it even if they don't actually fork the code or use it in any way. You know,
the code's out there. Someone may. And that's good. That's what it's there for.
Yeah, that's really neat. It's great to see that happen. And so I don't really talk about
my use of Spideroak much. I talk more about my use of BitTorrent Sync and Dropbox on the
show. But Spideroak actually is when I'm using anything that is a peer-to-peer sync solution
like BitTorrent Sync or SyncThing, I use Spideroak to sort of have my quote unquote offsite backup
history. I have one copy on a DigitalOcean droplet, but that's a production copy that
I sync to. And so I want to have something that has offsite revision changes, and I want
something I can trust because I have pictures of my kids and stuff in there.
Spideroak. And the only downside to Spideroak has been its atrocious, horrible, awful, real
bad slow UI. And it's so bad, in fact, that I just opted not to use it on any of my computers
except for my one main, most powerful workstation because I felt like it could handle the luggage
hug. But yesterday, they announced a new modernized look and feel, which includes a new UI under
Linux. They're calling it Spideroak 1. And Spideroak, they're also going to provide a
Spideroak 1 backup and sync product for groups and other enterprises. I'll be looking out
for that.
Here's a new feature for Linux users that's actually kind of nice for those of us who
have multiple machines or like those of us under maybe like Linux terminal services,
or anybody who has a shared Linux box. They fixed an issue with Linux users that would
sometime prevent multiple users of a local machine from using Spideroak concurrently.
So that's been resolved. Like if you sit down on somebody's machine and they already logged
in on one X session and you log on another X session and you both start Spideroak, there
would be some issues.
Something else that's kind of nice is they've updated, upgraded the tool chain with updates
to Qt, Python Qt, Python and OpenSSL. On Linux system, the symlink is placed in the previous
location where path used to be. So they've moved locations, but they thought ahead and
symlinked to old locations, including cron jobs and stuff will continue to operate. So
if you've cron Spideroak stuff in scripts, it's not going to break with this update even
though they're moving file locations. So it's nice to see them thinking of Linux users pretty
thoroughly it seems.
Yeah, definitely first class support or almost.
Yeah, it's not open source, all of it, but components of it are. It's a pretty good product.
So it's nice to see them releasing Linux support. And then last but not least, I was kind of
hoping Wimpy would share a little bit about his more recent successes with SyncThing and
just kind of an update if it's still, if he's still recommended because I know we've kind
of, you and I have sort of shared our woes over BitTorrent and their changes to a paid
model and then I sort of fell back to Dropbox and you kind of moved forward to SyncThing
Wimpy and have been pretty happy with the result. And so I kind of wanted to check back
in with you and find out how you use it and what kind of challenges you had to overcome
if you want to share them with us.
Yeah, sure. So, well, I'm using SyncThing on some Debian servers, some Ubuntu servers,
some Ubuntu desktops and Arch Linux workstation as well. So across those different platforms,
it all works just fine. On the desktops, I'm also using SyncThing GTK, which is a front
end to SyncThing, which makes it much more familiar, you know, if you've used Dropbox
or anything like that and the UI and how to add shares.
So this is an alternative to the web UI, so you don't have to use the web UI.
Yeah. So what it does is it sits in front of SyncThing, it uses the SyncThing API locally.
You can still open the web interface and all of the same facilities are exposed through
that user interface, but they're just wrapped in a, you know, desktop GUI. So everything
you see works. And one of the nice things is they've added all of the integration for
the different file managers. So they've got plugins in the file managers for Kaja and
Nemo and Nautilus.
So you get like sync status icons in the folders and whatnot?
Yeah, you get, you know, those right click content menus, you know, add this to sync
and all the rest of it. So it all works very well. And what has improved is you've now
got this concept of one of the SyncThing nodes being an introducer. So when you say this
is an introducer, when you add a client to it, it then tells all of the other nodes,
this new box has been added to the cluster. Do you want to have it added as well? Which
alleviates some of the key exchange, but it's still not, you know, it's still...
It requires I approve it, but I wouldn't, it makes it much more seamless. I just basically
have to click hitting yes, yes, yes, yes, yes, yes, yes. Right.
But if you've got, if you've got five machines, for example, you've got to go to all of those
machines and at some point you've got to go and approve it. Yeah.
That's a bit of a bummer.
Yeah.
Because I'm talking hundreds of people.
Yeah. It's not, it's not a suitable replacement for what, how you were using BitTorrent sync.
You know, you can't use it to syndicate content in that, in that fashion.
Okay. Okay. But speed wise and like moving large and small files around, everything's
worked good there?
Yeah. I've not, it's not eaten any data. It synchronizes the files just fine. There's
a number of different versioning schemes you can use. So you can have no versionings. If
you delete stuff, you know, there's no history of that. Or if you modify files, there'll
be no history. And then there are different versions of how it retains history and how
many versions it will retain history for. And you can configure that on a per node basis.
So that's quite nice. So if you know that one of your nodes, you really don't need the
history, you can turn it off there. You can also designate one of the nodes, the master
copy. So it will syndicate the content everywhere, but you can't delete or alter the content
on the, the cluster nodes that aren't the master copy. So the master copy is the read
write copy and everything else is a read only copy. So that's quite useful because
if I want to use it, for example, to backup the family photographs off site, I know that
my master copy is authoritative. And I know that if anything untoward should happen on
one of the nodes and accidentally delete a load of stuff, I haven't just deleted the
master.
Oh, yeah, it's very handy. Yeah. So Wes, Wes here is also using SyncThing quite a bit.
And so I'm curious, is your experience kind of reflecting Wimpy's so far? Oh, yeah, definitely.
I think Wimpy covered most of the key features. The introducer especially has been very helpful.
One thing I'm actively looking at is it's mostly just configured with an XML file under
.config slash SyncThing. So I'm working on trying to get that into Ansible. I think it
should be possible to be able to replicate those files so that you could set up nodes
and have them added, you know, without... And then deploy with Ansible. Right. So you
can configure all the ones you wanted, which ones you wanted those added to, and then hit
deploy and have them all spread out without... That might make it a little easier. I think
that's the one limiting factor. Wimpy, what are you doing for your setup when you're going
across multiple machines? What's your solution for that? Are you just doing it by hand each
time? On the desktop machines, I eventually visit those at some point and I'll just click
a button. You know, it doesn't matter that there's a node waiting to introduce itself.
When that machine gets turned on and used, just accept. On the servers, I'm using SSH
Tunnels to create a connection to the web UI on SyncThing on the remote server instances.
So I actually connect to the web UI in order to accept the new nodes and to change the,
you know, which computers are in the sync network for that particular folder. Because
on each node you can say who's, you know, participating in this synchronization. So
you don't have to have all of them synchronizing all of the folders. You can be discreet about
that. Yeah, I back up my phone's pictures this way and so I don't want my gigs of pictures
going to every one of my nodes. You can just easily choose. I want it to go to my home
machine, I want it to go to my bigger droplet, etc. And the apps on the phone are pretty
good for that too? Honestly, I've just been using the web interface on the phone as well.
I use the web interface for pretty much all of my devices. Oh really? Yeah. The app on
the phone is pretty good. I'm still kind of playing with the always on. I've had some
issues but that might be the status of the phone. So let's use this moment to jump in.
You do something kind of cool you were telling me about in the pre-show is you are looping
in something called Tink, T-I-N-C. And Tink is a virtual private network daemon that uses
tunneling encryption to create an open source secure private network between hosts. It's
kind of like, I don't know if mesh VPN is the right phrase or what you want to call
it, it's almost like a peer-to-peer VPN because you can have a bunch of different desperate
machines that will interconnect over this sort of ad hoc VPN. So imagine a machine on
your LAN, a digital ocean droplet, and an Android device, right? Exactly. And can you
explain a little bit about how you use Tink and how different ways to use Tink? Because
you were saying there's a couple different ways you could use it and how you're using
it. Yeah, you can use it kind of like a traditional site-to-site VPN or like a layer two bridge.
So you can have it, you can use it to play StarCraft with your friends over broadcast.
For LAN gaming. For LAN gaming. You can use it to bridge two sites so that you can access
all of your home stuff from your office or et cetera. Right now, I'm using it just as
a layer three VPN. So I have an entirely separate subnet set up so that one of the nice things
about Tink is that it runs entirely as a, as long as you have, you know, tune tap support,
then it runs entirely as a user space application. So you don't need lots of crazy setup. You
don't have to compile a kernel module. Right. You know, it also has support for a lot of,
you know, let's see here. It says Linux, FreeBSD, OpenBSD, NetBSD, OSX, Solaris even, Windows
2000, XP, Vista and more. Yeah. So you can pretty much run it. It also has a very good
Android app. So mine set up that all of my devices have a statically assigned P on their
Tink, IP on their Tink interface. And so I just have all those IPs. And so you can set
it up. It has a system D service. So when you install it, it creates a virtual interface
and this virtual interface has like, it gets a 192 address or whatever the heck. And each
machine that gets your, each machine you install Tink on sets up a virtual interface and you
set the 192 IP on. So they're all on the 192 subnet. Exactly. Okay. And then they can all
instantly see each other. And the way it's set up is that it uses certificates, which
can be a pain to manage. But if you've got a configuration management solution already,
it's not too much of a big deal. Not all of us do, Wes. Not all of us do. I'm still working
on that myself in all fairness here. But you, you only need the certificates for hosts that
you want to directly connect to. Okay. So I have one droplet, actually I have two droplets
that serve kind of an, you know, an HA system where all of my nodes try to connect to both
of those. So if one goes down, it still works. But once you have a certificate and you've
connected to one node, it can connect through that node to any other one. And once it's
established that connection, it negotiates how to directly connect those two peers. Oh,
so Exciter just takes care of that for you. Yeah, exactly. And so that's the mesh aspect
of it. I gotcha. So that once you, as long as you have enough nodes that each node knows
about and as long as there's some route between all of them, they can actually work it out.
They can work it out and talk to each other. That's like, and so are you throwing a couple
of droplets in there? That probably helps quite a bit. Yep. I've got another server
of over in the Netherlands that the bigger hard drive that just sits there so I can mirror
stuff. So when you're looking here at your SyncThing set up, is that a, are you looking
at a droplet you're doing? Are you on your Tink network when you're doing that? Cause
when you were pulling up here at, what is that? What is that? Yeah. So here I've just
SSHed into my home connection from one of the machines. Yeah, yeah, yeah. And then just
did a tunnel there or what? Yeah. And so the way I've set it up is that SyncThing is running,
I've configured it so that everything, SyncThing only connects over the Tink VPN. Right. And
so each one I've just set in, when I've added a peer to the SyncThing, it just has the local,
you know, the private address on the Tink network. Yeah. And they all just instantly
find each other. Yeah. And that way I can go to any, you know, I know like. You're syncing
over the internet, but over a VPN over the internet. Right. And so it doesn't matter
if I change or if I bring my laptop here, you know, once I've turned on Tink, which
it does at boot, then it has the same address. Everything else can instantly find it. It's
worked really well. Hmm. That's pretty slick. That's a nice way. And so you also have Tink
on your Android device? And honestly, it's been, I've been very impressed with the Tink
Daemon. I'm not sure if it requires root, but it's very aggressive. Do you have root?
I do have root. Oh, okay. I know that's the funny thing. Like once you root your device,
you kind of lose track of what requires root. Yeah, definitely. But it's very aggressive
when you change connections, you know, from, from wifi to LTE. Yeah. You can even run it
over OpenVPN if you have like really choice on that. I've had some problems with that.
And so it's, it's good about you're changing network conditions. You're, you know, moving
between wireless and LTE and it's not sucking down your battery like crazy? No, hardly at
all. So your phone has an interface that's on your Tink network. Yeah, so wherever my
phone is, I can just ping it. I know the IP. I have a static host file set up so I can
just ping Nexus 5 and it will automatically route over the Tink network. If it can't,
if there's like some really crazy firewall and it can't, you know, initiate a connection
directly, it'll go through the droplet if it needs to. It kind of just... And do you
have any problems like when you bring the device back home and you put it on your local
LAN, stuff doesn't try to talk it over the Tink interface, it starts talking over the
LAN interface or? Not generally. I have most things I've configured at this point to just
do it. So like on the Tink thing, I've set it up to only talk over Tink. Yeah. And so
you can do that too. So you can set up like, you know, if you want, if you only want SSH
to listen, you can just have it listen on that port. I like, the chat room's impressed
that it has Celera support. I know, it's kind of crazy. You know, and I would be interested
in listening, you know, the Mumble Room if there's other mesh VPNs. I know I've looked
at Freelan, there's peer VPN, and a lot of them looked maybe easier. The one thing that
Tink has going for it is it's kind of like, it's already 10 years old, it has a long established,
it has an active development. It also has the Android app, which a lot of the other
solutions might not have. That's nice. And it sounds like it's an actual functional
Android app too, which is nice. Yeah, it definitely works really well. Yeah, I don't know, does
anybody in the Mumble Room know of any other sort of mesh VPN kind of solutions like this?
I don't know if I do. I remember that there used to be like a... Amagi. Yeah, Amagi, the
Amagi from LogMeIn folks used to have that, but that's not around anymore, is it? I thought
they shut that down. It still is, but it's hard to get. Okay, all right. And then there
was kind of a long end-to-end as being mentioned by API. I think that's been no longer developed,
right? Yeah, and then like you mentioned, Freelan is also available, peer VPN, the open
source peer-to-peer VPN, and ServoMesh. So, okay, there's another topic, there's another
kind of sync that we don't really talk about when we talk about taking control of sync
in your own files, and that is the browser sync. And that's, you know, my favorite feature
about Chrome, honestly, is I think it's got the best browser sync. The tab sync is real
quick, but the Mozilla Firefox sync has gotten really good in the last couple of years, and
it's got a huge leg up over the Chrome stuff. And this came in from a link in our subreddit,
and I think it was also linked in the Linux subreddit. You can run your own Firefox account
server on your LAN, if you want, and sync your Firefox browser to your own sync server.
And so I have linked here, it's a guide, it's kind of early, it's, they say, the author
says it's quote-unquote vastly incomplete, but you can ask questions if you want to drop
by their IRC. They have some devs available, I think, for Ubuntu machines and things like
that, but this walks you through setting up a local Firefox sync server, and then how
you configure Firefox to use that local sync server. So, you know, you could put this on
a droplet, you could put this on a LAN server, this is another component to sync that we
don't talk a lot about, but I think this browser sync stuff is getting super important. The
browser for me is like one of my number one applications now.
And you kind of expect, you know, you expect it to come up with your history and your bookmarks
wherever you are.
Oh yeah, and my extensions.
Right, oh yeah, definitely.
You know, like now when I install Privacy Badger, I expect it, boom, Privacy Badger's
on every browser. Even though that has its downsides too, it's just kind of what I've
come to expect.
Exactly, and it doesn't feel like it's your setup if it's not there.
All right, MumbleRoom, any thoughts on the sync topic before we move on to our Vulkan
topic?
Put it out there. Go on once. No? Go on twice.
All right, now, you know, we've been using, we kind of fell back to Dropbox a little bit
because I needed a hell of a lot of space, I didn't want to manage anymore, I needed
like five terabytes of space. And Dropbox worked for that, it's working pretty well
for us, but geez, Louise, it's expensive. It's like $800 for five people to use the
enterprise version.
Oh, wow.
Yeah.
That is expensive.
Yeah.
So I don't know, yeah. But it gives you nice functionality, like I can revoke files, so
I can, if we got rid of somebody, I can pull all the files off their machine and things
like that. So those kinds of things are nice.
Yeah, definitely.
Creepy, but nice.
And they have seemed to make Linux support, you know, they definitely support Linux pretty
well, which is really nice.
Yeah, they do. All the Linux clients have worked well. Yeah, what was that?
Did you see that there's a small business slash enterprise version of Spideroak that
has unlimited data?
I saw that there's a couple of different, like they have, and they have like a enterprise
edition, they have a backup only edition. I didn't see it was unlimited storage though.
Holy crap.
Yeah, it's like $50 per person, I think, but you get, it sounds like if you're paying $500,
you know, for five people, then that might be something to look into.
Yeah, I'm not sure.
I use the, I use the one terabyte subscription and I love it.
I think I got it like, I got it like on a, like they had like a crazy deal for the one
terabyte, like a one day deal. And so I bought in on that one day deal for like $9 for the
year I get a terabyte or something. I can't remember. It was really super great. And so
I jumped in on that and I love it. And Spideroak for me has been really good except for the
UI. So I was really super happy to see them update the UI.
Same here.
I have not updated my machine yet, but I'm hoping it comes down soon. All right. Well,
let me take a moment and let's thank our friends over at Ting. You know, if you go to linux.ting.com,
you can support the unplug program, but also you'll get a discount on your first Ting device.
Or if you have a Ting service or if you have something that's compatible with Ting service,
I mean, you can get a $25 service credit. So Ting is, it's a wireless network that is
able to offer certain advantages that the sort of established duopolies can't. Because
the big guys that are duopolies have this massive, massive amount of money that is just
totally sunk into those towers. Those antennas they put up, and it's not just the antennas
and all of the negotiation to get those. I had a client that they did the architect for
cell towers. They were the architects for cell towers. And you think, oh, that sounds
like an interesting gig. It was a super boring place because 90% of their office was for
all of the legal stuff they had to do to get the towers approved and all the different
places they want to put cell towers. And the process and work is a multi-year process for
a single tower. And then you have to trench and install all the fiber and connect all
of that and get all those negotiations and secure the line. It is an unbelievable cost.
And you can kind of understand why these duopolies have to turn into such jerks after all of
that. I mean, I guess I'd kind of be a jerk if I had done all that too. Ting rolls in
and they say, you know, we're going to do mobile differently. Now that this has all
been laid in, it's been commoditized, we're going to come in here and what we're going
to do is we're going to buy off the top of your wireless infrastructure. And so we'll
take what has now been commoditized. And that way, Ting can spread across GSM and CDMA networks.
They can bridge the two different types of networks, and then you can take advantage
of it as a consumer for whichever one fits you better. That's really slick. Then they're
also able to focus on things like customer service, no whole customer service, or a super
awesome web app that lets you manage your account in just every single way you could
possibly want. And they're able to focus on things like crazy good deals. Here's what
it is, $6 a line. That's it, plus any taxes that your local state's going to apply. It's
$6 a line, and then it's just your usage on top of that. Ting takes your minutes, your
messages, and your megabytes to add them together. And they're able to offer a crazy competitive
deal that nobody else can offer because they didn't have to spend all the billions on putting
all of those things in the ground. They're able to come around later on and say, okay,
thank you very much for all that hard work. Here, now we'll just take some of that for
you. We'll borrow some of that. We'll give you this here, and we'll sign on the dotted
line. And boom, then Ting became an MVNO of these networks, and it allows them to be competitive
in a way that nobody else can. No contracts, no early termination fees. They even have
early termination relief programs, so if you're stuck in a contract right now, they're going
to help you get out of it. How slick is that? And they have some really, really, really
great devices, GSM and CDMA, basically the best of the bunch. They have really great
value devices. They have all the high-end phones. Like the S6 is super slick. They got
the iPhone 6. Anything that basically works on that huge GSM network, and they have a
coverage checker, it's probably going to work on Ting, including just they have $9 SIMs
that you can just go grab, throw on your device, and boom, Bob's your uncle. You got cell service.
Bob is indeed your uncle. Just ask Robert. Go to linux.ting.com. You get $25 off your
first device. If you already have a Ting-compatible device, and you might, because let's be honest,
cell phones have been around for a while now, and there's a lot of GSM and CDMA devices
out there.
They support so many devices. It's incredible.
Yeah. So you could probably get a $25 credit, and if you do, well, that'll pay for more
than your first month if your usage is around mine, especially if you're Wi-Fi savvy. It's
really awesome. It's really awesome. And there's a lot of cool ways to interact with
Ting as well. They have the no-hold customer service. They have their forms. They also
have the Ting subreddit. You can go to reddit.ting.com. They have the Ting social pages like their
Google+, Instagram, Twitter, Facebook, and their YouTube channel where they're posting
stuff all the time. Go check them out. Linux.ting.com. Linux.ting.com. Support the show. Put Linux
in your browser bar. Get it in your history after all. Just go check them out. Try the
savings calculator. Visiting them and just exploring Ting and learning more is also a
way to show your support for this show. Linux.ting.com. Mobile that really does make sense.
Okay. Maybe somebody can talk me down, but I don't often have extremely, extremely good
things to say about Google, but holy moly am I really, really, really excited about
them announcing support for Vulkan on Android. This to me is a ginormously huge deal. And
so in a very wordy post, they essentially say, in order to address some of the sources
of CPU overhead and provide developers with more explicit control over rendering, we've
been working to bring the new 3D rendering API Vulkan to Android. Like OpenGL ES, Vulkan
is an open standard for 3D graphics and rendering maintained by the Khronos Group. Vulkan is
being designed from the ground up to minimize CPU overhead in the driver and allow for your
application to control GPU operation more directly. Vulkan also enables better parallelization
by allowing multiple threads to perform work such as command buffer construction at once.
And Vulkan is sort of being touted as the successor to OpenGL. Apple introduced Metal.
Are you familiar with Metal?
I am.
Can you describe Metal for me, Wes, while I take a sip of my soda? Go for it. You got
it? You want to take a crack at that?
Well, it was their version of a new low-level API on the iOS platform.
Yeah, and didn't they just reintroduce it for Mac OS? Didn't they just introduce it
for Mac OS?
I believe they did, which I believe you predicted.
I think I did. Now, here's the thing. That is a little precarious for OpenGL.
Definitely.
Because one of the things that put more momentum recently behind OpenGL was the fact that mobile
developers to target iOS...
Which is one of the biggest platforms for games and other graphics.
Were writing to OpenGL. And same with Android.
Definitely.
And so if Android came along and said, all right, we're going to introduce Liquid, the
new low-level API for graphics on Android, I almost feel like that would be a death nail
for OpenGL in a way. I mean, not in a huge way, but it definitely slowed down momentum.
So I guess death nail isn't the right word, but it feels like it would slow down momentum
in a big way.
And as Linux users, OpenGL is kind of the one thing we have.
Yeah, and so Vulkan is... They're already working on getting Linux support. In fact,
I think this video here might be being done under Linux right here. I'm not sure, but
I have a video I'm playing. It's gnomes per second, and on the right is OpenGL, and on
the left is Vulkan. And as I zoom out here, you'll really see the difference between OpenGL
and Vulkan.
And you'll see there's a CPU reader there, and OpenGL is just punishing the CPU, and
it's still dropping frames like crazy. And then as Vulkan continues to go up, Vulkan
does hit the CPU when things get really crazy, but way, way, way, way less than OpenGL is.
So look at these gnomes per second differences between OpenGL and Vulkan.
Pretty big... The Vulkan is much smoother, much less CPU overhead, especially when you
start applying real-time coloring effects. Then OpenGL really starts beating the CPU.
And not only that, but you see how much better Vulkan is. It's a little hard to see there,
but Vulkan's much better at parallelization across CPUs, too. So once it does start punishing
the CPU, OpenGL hits like two threads, where Vulkan's hitting all four threads.
Yeah, it's designed from the ground up to be easily to parallelize like that.
Yeah, and these are on PowerVR graphics chips, so these would be like on Nexus devices or
something like that. That's where this is being done on this demo.
And so Vulkan's supposed to be the big hotness. Ryan, are you familiar with Vulkan? And what
do you think about this?
Well, specifically in regards to Android getting support for Vulkan, I just think that this
is another instance where there's so many things that we're doing now with our mobile
devices that it's almost like a foregone conclusion. Like, we need to have the best on this platform
to manage these 3D games and applications that we're inevitably getting more and more
of every day. And I just think that I've been watching some younger relatives on their mobile
devices and they go to it for everything, for like games, entertainment. And it's so
funny because it's like this is the same type of thing we used to do back with our desktop
rigs that we made and everything. And they're talking about the differences between their
devices and these are just their phones that they have around with them and what games
are playing on them and everything.
And so while some people, like I know a couple of people who are my friends who can't see
how it's a gaming platform and how it needs these different, like for instance, Vulkan
to make that experience all the more better when you're playing 3D games or interacting
with 3D applications on the platform. They don't see the need necessarily, but there's
a bunch of people who they do everything, you know, including gaming on these devices.
And so it makes sense that they would try to, you know, A, close that gap between them
and the iPhone with metal, but also B, just improve their platform and add this so that
more people will consider creating 3D applications on the platform and will feel comfortable
taking advantage of this.
This is not my strong suit and I hope to learn more about Vulkan as it becomes more relevant.
But my understanding is that Vulkan is pretty capable of when it starts up Vulkan can start
up and sort of assess the graphics capability of the system and developers just sort of
write to Vulkan.
And instead of like having to wonder if there's going to be a certain OpenGL extension available
on this system and just maybe assuming it's not there so just not being able to do that
thing, they'll write to Vulkan and Vulkan will just sort of expose what's available
sort of on demand based on the hardware and it's going to range from PowerVR chips all
the way up to NVIDIA's big rigs.
In fact, NVIDIA has just announced they're going to be showing off a couple of different
demos at an upcoming conference using Vulkan under Linux. So obviously these demos we just
watched here on the show are on PowerVR chips, but NVIDIA in a couple of weeks will be showing
it on Linux desktop rigs. So Vulkan's going to scale across the entire spectrum there.
So Google throwing in behind this is a huge deal because through Coder Radio I've gotten
emails from developers who tell me we moved our game over to Linux because we learned
more about Linux than we expected when we started developing our game for Android.
That's awesome.
Yeah.
And so, yeah.
Finally Android's paying off.
And I was like, really? And they're like, yeah, well when you really, you know, when
you make a game you're not making a Java app. When you're making a serious game for Android
it's a native app.
Right.
And when you start playing with that stuff you start monkeying around with the Linux
level a little bit. And you start, you know, learning a little bit about this stuff. And
it's not a one to one, but it gave us a starting point. And this isn't one or two times I've
heard this either. It's a couple of times, but I mean, it's been a little while, but
I've probably heard it, you know, half a dozen times over the history of Coder Radio. And
so I've got to imagine Vulkan's only going to play into that even more. So that's why
I think it's a bigger deal than we can even realize right now that they're doing this.
It's like the biggest favor that Google could do for desktop Linux gaming. And just seeing
all these people actually supporting it even at this early stage is heartening.
Yeah. Yeah, that too. Yeah, that too. That very much is. So, and I know, yeah.
Oh, I was just going to say, and Chris, this is just something that your show has been
tracking for a while now, but as, as SteamOS, you know, gets out there, it's going to, I
feel like it's going to be the Android of, you know, gaming PCs because it's, everybody's
going to just license it and throw it on a machine. And there's going to be this, I think
that the, all these different platforms are being built on Linux now that developers are
getting introduced to it and they're saying like, oh, it's not that it's not as big of
a problem as I thought it was to go ahead and write, you know, this application for
this platform. And, and so I'm really excited to see maybe as more people get introduced
to like Vulkan, for instance, through Android, like you said, that they see, okay, well,
maybe it won't take that much more time to port this over to the desktop. And frankly,
there's really not a downside because it's just potentially more customers because I've
already done a bulk, you know, a lot of the work.
That's the hope. North Ranger, you wanted to make a comment about how Vulkan is sort
of hopefully going to avoid the extensions hell that OpenGL found itself in after years.
Yeah, definitely. I think, you know, Kronos has a leg up here. And one thing that they
did lessons learned from OpenGL versioning and all of the proprietary extensions and
the vendor specific extensions that these engines and these games had to test for is,
you know, grouping up all the individual extensions into feature sets. So instead of having a
separate OpenGL ES and an OpenGL 4, you know, your engine just tests for the feature set
and the real key, I think, you know, improvement in the process is that Kronos will be able
to define those feature sets if the platform owner doesn't step in. So Google will take
care of it for Android. Valve might take care of it for Steam OS. But if Microsoft doesn't
define a feature set for Windows Vulkan, then they'll just step in and go ahead and work
with the driver vendors directly.
That's actually really great. So we could still have a first class implementation on
Windows. That could be nice. Actually might even be better if you take Microsoft out of
the picture.
Hey-oh. All right, cool. That's really, boy, that's, I think, some of the best Google news
that I've seen in a long time. I mean, I think it was really, that was a really good guy
Google, and that was actually an example of them being a good open source citizen too
there.
Definitely.
All right. Let's talk about somebody else who's a good open source citizen and that's
Linux Academy. In fact, they have a $5,000 grant program where their stakeholders can
help them decide where they're going to contribute that money out to open source projects. And
the reason is because they're a bunch of open source and Linux nuts. Enthusiasts, just like
we are. They have a great platform for you to go over there and learn about Linux and
all of the technology around it associated with it. OpenStack and the Red Hat technology
stuff for the certified courses. And of course, all of the things like Android development
and Ruby on Rails that kind of run on top of Linux, but the core fundamentals of Linux
itself too. They've got almost 1,700 videos to give you the experience you need. And they
have a really nice system that allows you to choose from seven plus distros. And then
it automatically will adjust the courseware to match the distro you've chosen. And then
when the courseware has a virtual machine, it matches the virtual machine. All of that
all syncs up. But I think what I really like about it is how they all sort of map it out
in their management dashboard. You go in there, you see all the stuff you're currently taking,
what percentage you're at, how long it's going to take you, how long you've spent, any notes,
any comprehensive study guides you want to download. And I think something else they've
done that really helped me sort of actualize what I was reading and learning is the scenario
based labs. So you get lab servers and then you go in there and you get put in the middle
of a common task in an everyday environment. And you work in these advanced lab environments
and complete these scenarios from beginning to end. And you walk away feeling, gosh, I've
actually done this now. And if you ever get stuck, they have instructor help available.
They have live stream sessions that are really great and they often will post them online
later for the community. And speaking of the community, it's stacked full of Jupyter broadcasting
members which is kind of fun. And these nuggets are a great source if you just want to do
a deep dive into something that lasts two to 60 minutes. They're constantly adding new
material. Go over to Linux Academy. Check them out. See what they've got. Like, you
know, I think one of the things that really helped me click with the Linux Academy was
when I decided, well, what would it take to learn Python? What would it take to learn
Ruby? And how would you answer that question? How do you answer the question, what would
it take to go learn a new language? Well, the answer is pretty obvious. I log into Linux
Academy. Oh, it's going to take me six hours. Well, it's going to take me five hours, whatever.
You know, it depends. I think like one was an hour longer than the other. I can't remember
which one was longer. That's ridiculous. You're telling me I could learn how to do Python
development in five hours? What? That's amazing, right? And it's pretty inspiring. And you
could just go try it out for a little bit, and you get a 33% discount. LinuxAcademy.com
slash unplugged. Try out some of their nuggets as well. And they have an availability planner,
which is really great. Check them out. LinuxAcademy.com slash unplugged. And a big thank you to Linux
Academy for sponsoring the unplugged program.
Okay, so there's this really great update from Mozilla about Firefox. And I sometimes
give Firefox a hard time. But version 40. That's a big ass version number. Holy crap.
I remember, I remember when Firefox was announced. So version 40. Support for Windows 10. There
you go. There you go. I bet you like it about that. They're blocking unsigned extensions.
That's a big one. But here's the one for Linux users that I'm pretty, I'm pretty, I think
each one of these could have been a bullet point, and they just put it all in one bullet
point. Improved scrolling, improved graphics and video playback performance, and off the
main thread compositing. Under Linux only. Linux exclusive feature buddy. Finally catching
up to Chrome here. Off the main thread compositing. Improved scrolling, graphics and video playback.
Linux exclusive features. Come on. Well, at least in this update. Maybe they already had
them for Windows. Off the main thread compositor seems like a really big deal to me though.
Definitely. I think that's one of the main Firefox's pain points in the past is its main
thread heavy. Yes, yes. So they have also smoother animation and scrolling on Windows via hardware
v-sync. So the Windows got a little something too. You know, those guys over in Windows.
A bunch of other new changes as well, but I just thought it was particularly cool. So
there you go, Poppy. You can relaunch your Firefox challenge now. Wait, are you still
on? Not happening. Oh, you went back to Chrome. You did go back to Chrome. Yeah, I'm back
on Chrome now. You gave me such a hard time for going back to Chrome too, and then you
just never said anything to me. Because that's not how I remember it at all. Okay, okay,
all right. So, okay, why did you go back? Can I ask? I mean, I don't want to get into
the whole war again. I'm just kind of curious because I never heard. Because Firefox was
a crashy, horrible mess. No matter what I did. And everyone kept telling me, oh, it's
your extensions. That's what it is. It's the distro version of Firefox. They would give
me all the different reasons and I just gave up and switched right to Chrome. I heard those
reasons too. I totally understand as someone who's using the Ubuntu version of Firefox
right now. It's fine. It doesn't crash. That's always what we hear. That's always what we
hear. Yep. And you know what? It must be true. It must be true because it's still, and now
Rodden, have you, do you know anything about this off the thread compositing, off the main
thread compositing, all these Linux updates? Yeah, it's one of the stepping stones to electrolysis.
I thought so. Excellent. Okay, good, good. That will be just right around the corner
any day now, I'm sure then. That's good stuff. I think whatever we think about it, it's just
nice to see them keeping pace, right? Absolutely. Firefox, I think we need as a member of the
open source ecosystem. And to be honest with you, I have Firefox still installed in all
my machines. Me too, definitely. And totally going to get the update, totally going to
try it out. But yeah, I keep going back to Chrome, but you know what? I'm very, very
happy. Like you said, they're not leaving us Linux users out. That's a way to put it
on a positive note there, Wes. I like that. That's my job, I guess. So next week is some
crazy shenanigans going on. We're going to be hopefully live at LinuxCon for Linux Unplugged.
I have no idea how we're going to do that. I have no idea how we're going to do the mumble
room from down there. And Wes is going to be out of town on his honeymoon. So Wes won't
be here, but I think that probably, Noah will probably be in your seat. And if all goes
as planned, everybody should be able to show up at jblive.tv around our regular live time.
I'll try to be there from Hawaii. Really? Dude, no, come on. You should be humping
or something. You should hump and listen to the show. A man can do two things at once.
That's a good point. You know what? If you want to just send me a telegram, I'll just
start talking like this. I'll keep it low. So I don't know exactly how next week's show
is going to shake out, but please do try to show up because it would be so cool to have
like a nice showing at LinuxCon. I don't know exactly what we're going to do, but we want
to do something. And then we might also be live later in the evening next Tuesday for
the open source t-shirt contest that Angela is going to be judging for.
That's very exciting. So next week is going to be a little crazy,
and hopefully it'll all work out just fine. And one more bit of crazy shenanigans that
I wish I could kill with fire, but it's unavoidable. We're moving last from Friday back to Sunday
for one more week. Noah is going to be traveling Friday morning here to Seattle for LinuxCon,
and my dad's getting married Friday evening, which makes doing last on Friday totally impossible.
So we just moved it to Fridays, and then all of this stuff happened. So we're going to
go back to Sunday at our regular live time one more time. We'll probably go back to Friday
after that for a little while, for at least a little while, maybe through the summer or
something. But I know it's super confusing. Remember all this stuff, jupyterbroadcasting.com
slash calendar, and hopefully those of you who are still listening can get the heads
up and show up because we love to have a good live audience. And when you move it around,
it makes it super confusing, and it's only because of LinuxCon. But we're going to get
down there. We're going to hopefully get some great interviews. We've already got some stuff
planned. We're totally going to prank Linus. No, I'm kidding. Linus, if you're listening,
I'm kidding. I love you. It's amazing to have it so close. I mean, this is a serious conference.
Yeah, yeah. Having it in Seattle is great. It's great not to have to fly somewhere for
this. Well, Noah has to fly. Yeah, he's fine all the time. But he has to fly here, and
I don't feel like super guilty about it. Sometimes he flies out to the West Coast. I'm like, I'm
sorry, dude. But hey, I can't help it if the Linux Foundation decided to have LinuxCon
in Seattle, man. Out of your hands. Seattle's legit. That's what's up. That's what's up.
So we'll be giving out swag at LinuxCon. We'll be shaking hands. We'll be doing recordings
and all that stuff, maybe even getting interviews and clips from you, the people. So come say
hi to us. We'll probably have a meetup at some point, too. Meetup.com slash Jupiter Broadcasting
to finalize that. Of course, you can just come say hi to us at LinuxCon. So we might
not need it. I want to do something. I want to do something. So stay tuned to meetup.com
slash Jupiter Broadcasting for that. And I'd love to see you guys there. Popi's going to
be out there at LinuxCon, so that'll be good. What? What? What? Oh, man, Popi, I wish you
would come out to the West Coast. It's so nice out here. I'd take you around and show
you how great Washington is. I would love to. I'm sure someone will put you up. One
day, one day, you'll have to have an excuse to come out here. Maybe, maybe like so. I'll
see if I can orchestrate something. There you go. I'm telling you, we'll make it worth
your time. It's delicious, delicious. It's actually a little paper beer the whole time
you're here. Yeah, Popi, you'll be, you'll be drowning in Washington beer. So, and curry
if you want it, I guess. Do they do barbecue up there? Oh, don't get me started on the
barbecue. Don't do that to me. Oh, man. And you know, it gets worse. Oh, geez. Noah, Noah
scours Facebook and if anybody in my family or a social group calls anything barbecue
or grilling, he jumps on him in Facebook and he like, he starts like defining barbecue
and grilling in the comments. It's, it's horrible. When does he work? All right. I don't know.
Well, that's the, that's the amazing thing is he actually just doesn't sleep, I think.
That's actually how he does it. It's pretty impressive if you think about it. All right,
so we'll be live next week at some point. At least I think we will have an episode live
from LinuxCon. We should be on the air. Go to jupitabroadcasting.com slash calendar.
I'd love to get your feedback for this episode. Linuxactionshow.reddit.com also a great place
for topics, suggestions. We'll have a feedback thread for episode 105. All of the shenanigans
happens live over jblive.tv. Normally, if we're here and all that, it's Tuesdays at
2 p.m. Pacific, but you know, go to the calendar and get it converted to your local time. So,
all right, Wes. Well, thanks for joining me in studio. Thank you for having me. Pleasure
mumble room. Yes, thank you mumble room. And don't forget to follow the network at Jupiter
Signal for updates from LinuxCon and Jupiter Broadcasting on Instagram for pictures. See
you next week!
Man, that was a fun show. And I gotta say, if anybody in the mumble room has any questions
for Ryan. Ryan, you're still here, right? Yeah, Ryan's still here. Yeah, I'm still here.
If anybody has any questions about Mycroft, I'll open the room up to that or any post
show topics. What would you need to, what would someone who wants to code something
for Mycroft need to know to code? To code for Mycroft? It's in Python. All the modules
are in Python. We have templates already set up. And so we've tried to make it as easy
to just pull out, just plug your own stuff into the template. And then frankly, if you
understand the API you're working with, or the application that you're working with,
Mycroft shouldn't be, like, coding the Mycroft side of it shouldn't really be a problem.
If you're familiar with Linux, like, it takes no time to get up and going with whatever
module you're trying to create. Some funny titles over JB Titles. Mycroft, start the
show. That's kind of funny. Vulcan, the metal slayer. Mycroft, Holmes' smarter brother.
Sync everything. So we had some good topics today. Definitely. Yeah. Thanks both to Wimpy
and Wes for their sync thing stuff. Guys are making me really, especially with Tink, it's
really making me want to try that. We just don't want to have to hear about your horrible
syncing troubles anymore. Nose derail, data loss. It was bad. Boy, I guess we wrapped,
can you hear the lawnmower in the background? We wrapped up just in time. JBtitles.com,
JBtitles.com. That was a jam-packed show, too. About Mycroft, though, is it going to
have, like, I assume that could be done, stuff would be done with, like, with cron2, so you
don't have to do the voice automation, you could just use it as an automation tool. Yeah,
I mean, there's no, well, that's the thing. I get a ton of questions like, well, what
if I don't want, what if I don't want to use Mycroft in the intended way? Well, that's
the greatest thing is because it's open hardware and open software, you can adjust it and have
it do whatever the heck you want, however you want. There's no, we don't have anything
in place that would prevent you from, you know, just having these things. I mean, honestly,
if you look at the Mycroft extended version, it's got the HDMI port, so you can just literally
plug in and use it as a computer if you want to. That's cool. All right, we got to get
more titles, vote at JBtitles.com. Oh my gosh, I hate to be a title driver, but geez. We
need to break these ties up. Yeah, we got to, we got to, the votes are way too spread
out. We got to hunker in behind some titles. It's getting gross, getting real gross.
So Chris, can you explain a bit more about how you're using Spyderoak? I've not used
it for ages. I've just installed the new version six client.
Oh, nice. I'm not doing anything all that really sophisticated. I have, so I have like
my main workstation here at the studio has both my BitTorrent sync folders on it and
my syncing folders on it when I had it active, which are just now kind of dead, and my Dropbox
folder on it and my own cloud folder on it. So all of my different sync things, all my
different syncing are on this one machine, and then I point Spyderoak's backup folders
to those different individual folders and then let Spyderoak do the revisioning and
the offset backup, quote unquote, and that's how I kind of use Spyderoak. I don't use any
of the, what do they call it? They have like a mesh network that they have for syncing
files across the machines. I don't use that. I forget what they call that, but not using
that feature.
So they've got, they've got backup and sync and the Hive.
Now Hive, that's what I'm, I don't think I'm using.
Spyderoak.
I don't.
Okay. So when you, when you do a backup, that's sending new content to them as a backup.
Right.
It doesn't necessarily then mean that that data is restored stroke synced elsewhere.
Right. I mean, if I, if I do a restore, restores it back to one of the folders that's synced.
So then they would then sync that file back to all the other machines cause I have syncing
both ways on that, on that machine.
Hmm.
Yeah.
So they're, so they've got the Hive, which is like a default sync folder, but can you
add other folders that synchronize?
Yes.
That's one of the big selling points, right, is that you can pick folders from the whole
root directly down.
Yeah.
Yes.
Cause I'm confused about how you do that because it.
I'm not sure with Hive cause I don't use Hive.
Oh yeah.
That's precisely my point.
I don't want to use it cause it's in a place I don't want to have data stored.
Right.
With Hive, I don't know if you can, but with their other, with their other backup system,
you can just choose the folders that get backed up and it's kind of just, you go through it.
It has a tree of your file system and you just check the folders you want it to grab.
Well this is in the old UI.
I actually haven't tried it in their new UI yet.
Oh okay.
So actually you have to back something up before it appears in the sync options.
So the only things you can sync are things that you're actually backing up.
Okay.
Yeah.
And if I recall correctly, that essentially, like if I recall correctly, that essentially
seemed to me like the same thing that Hive was only from any folder.
I couldn't remember, I couldn't really grasp why I wanted Hive at all.
That's why I never used it.
Sync is like local folder syncing.
It's very confusing, I have to say.
I mean the UI is much improved, but it's still baffling.
It's still confusing.
Yes, I agree.
Yeah.
I think we're going to go with Vulkan the Metal Slayer.
It has the most votes and I think Vulkan is going to be a big deal and I think the audience
has some interest in it.
So I think it'll drive clicks.
I think that's a good tool, good tool.
So maybe we get the word out by Minecraft and I'd love to see some open source artificial
intelligence.
I'm going to try the update Wimpy.
So I'll try the update and maybe I'll just do a little five minutes on it as a follow
up on what I end up doing.
Yeah, I think I see how this works now.
So you have to have multiple devices.
So I've just got one device using this.
So when you choose sync, you choose the device and folder path that you want to sync.
I recall I have an Archbox on my home network and I have my Archbox here on this network.
And so it's also how I back up my home file server too.
Yeah.
Okay.
I think we're good.
I think that was everything.
I think 105 is in the can.
Thanks you guys.
You guys are great.
