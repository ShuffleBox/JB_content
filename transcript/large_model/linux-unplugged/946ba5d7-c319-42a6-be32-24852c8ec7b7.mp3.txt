We're introducing Chromecast Ultra, our most premium TV
streaming device today.
Chromecast Ultra brings everything
you already love about Chromecast,
plus even crisper picture and better performance.
You will now be able to cast your favorite content in up
to 4K Ultra HD resolution with HDR and Dolby Vision support.
I'm just going to say, this might be the coolest runs
Linux of the day, right there.
Right, don't you think?
That's pretty neat.
That is pretty neat.
This is Linux Unplugged episode 165 for October 4, 2016.
Welcome to Linux Unplugged, your weekly Linux talk show
that's full of possibilities.
My name is Chris.
My name is Wes.
I don't know what that means, but I'm going with the Wes.
We're going to find out today.
We do have a lot of possibilities.
Coming up on this week's episode of the Unplugged program,
major updates from our favorite open source projects,
at least some of them.
We'll give you a rundown of the news and updates
that I think you're going to care about,
including some really cool tools and something
that I've been geeking out about since Wes linked it to me.
You know it.
Then we'll tell you a little bit more about our trip
to the Open Daylight Summit.
I'm going to try to also pick Wimpy's brain
about his usage of Open Media Vault.
This is kind of a follow up to an episode
we did a little bit ago.
And then we have a couple of interviews
from the Open Daylight Summit.
And this time, since we talked about this in the past,
we tried to wrap our head around how a major company like Ericsson
is using it to roll out 5G networking.
How many Gs is that?
Five.
And we'll tell you what 5G networking is
and why software-defined networking and open source
standards are important.
Yeah, don't run away.
Don't run away.
I hope it may be applicable to your life.
And then we'll have an interview with Heather and Chris.
Heather's from the Linux Foundation,
and Chris is from Ericsson.
I think he's also sits on the Open Daylight project board.
And they talk about why the Linux Foundation cares
about this and a really cool continuous testing environment
they set up.
Remember that?
Oh, yeah.
That was cool.
Yeah.
Yeah, and that is it's geeky, it's nerdy, and it's so neat.
So we'll be talking about that on today's episode
of the Unplugged program.
But before we go any further, we must bring in that mumble room.
Time appropriate greetings, mumble room.
Hello.
Time appropriate greetings.
Hello.
I secretly use Arch Linux.
Hello, guys.
It's good to have you here.
Now, I don't know how many of you
were able to make it last week because I couldn't hear you.
Oh, I love you, Noah.
But I did want to give a shout out to Noah for episode
164 of the Unplugged program.
Dial up Linux.
Thanks, Brown Bear.
Yeah, that was great because we were down at Open Daylight.
And just as we were sort of wrapping up,
I tuned in to the very end of the show.
Yeah, me too.
And I think he was in full swing by then.
Now, a lot of you have written in and said you loved it.
Some of you have written in and said that, oh, my god,
my head hurts.
Don't ever change my Unplugged show again,
which I thought was kind of funny because it's
sort of a no-format show to begin with.
I mean, we kind of have a formula we follow a bit,
but that's just out of habit.
It's about the closest to the actual, I mean.
Yeah, but I thought that was pretty neat.
Anybody in the mumble room, anybody have any directors
hats that where they were wearing their hat?
They're like, gosh, from a director's perspective,
from a production perspective, or even
from a listener's perspective?
Do you have any feedback from the dial-in episode,
the call-in edition of the Unplugged show?
And keeping in mind that I think NOAA would very much
like to spin this off into its own show one day.
So this could eventually become its own separate additional
Linux program.
So if you have any thoughts on that, too, I'd like to hear it.
I open it up to you, mumble room.
There was only a few issues.
The main thing is that the mumble group
couldn't say anything.
Right, yeah, there was.
And I think he already has that figured out.
So that tech problem is solved.
I think he's got like a whole new audio rig to do it.
He went all in.
Other than that, it was great.
Yeah, I thought what was really exciting about it
is it really could potentially become, well, first of all,
we have a pretty big base to pull from just by people
that email into our shows asking us questions all the time.
And if we just write back, yeah, that's a great question.
Why don't you call in on Tuesday?
Because a lot of the questions, there's
one or two follow-up questions we have.
You need a little dialogue, and you can really
get to the heart of it.
So there's already a good base there
to pull from for calls.
And then on top of that, the word
could start spreading around that, hey,
if you switch to Linux and you end up having a problem,
there's this guy you can call, and he
is all about getting people to use Linux,
and he will totally help you.
And that could be a really good thing for Linux.
Probably got other people to do some time
on there answering questions.
Let's put it another way.
The business side of Linux was interesting to me.
Yeah, that's true.
Now let's put that, here's another way to think of that.
Imagine when you switch somebody to Linux.
There could now be a support number
that you could give them for them to call
when they have problems.
That would be pretty nice.
Isn't that great?
I really think the show has some potential
to offer some benefit.
So I thought, there's a lot I liked, a couple of things.
I've already given Noah my feedback.
So thank you to Noah for doing that.
It's a 164 if you haven't heard it yet.
Noah hosted while Wes and I were down to the Open Daylight
Summit.
And he took calls, answered questions.
He had a call screener with a queue.
I mean, he really went all out.
And the other thing that's really cool about it
is he's using free Linux software to do it all.
Exactly.
Now unless anybody else, I don't want to cut anybody out.
Any other thoughts in the Mumble Room before we go?
Yeah.
OK.
Like, I just want to reiterate what Michael said.
Without the Mumble Room participating,
it kind of felt boring to me.
And I'm not saying the show is bad.
I think if the Mumble Room was participating and helping Noah
out, or they had some insight on it,
it would have been a lot better of a show.
If it was its own show, I could see people tuning into it
for sure.
Yeah, I mean, just for having the backup support,
I think it's a good idea to have the Mumble Room there.
And extra color.
Yeah.
Yeah, and just to break up the voices a little bit,
Rekai points out, and I think this is something I think
I mentioned to Noah myself, is voicemail during the week.
So if calls run low or something like that,
maybe we could just have voicemails
that people can play.
Noah definitely wants for live calls,
so that way he can ask them back and forth questions.
So that's a key thing.
Maybe adding like a SIP endpoint so people
can call directly over SIP.
He could totally do that.
That would be really nice and save some money.
Because he was paying for, it was a 1-800 number,
but that means he pays for the time.
Which we'd have to figure that out too.
So this looks really exciting.
I think I've already got it downloaded on my machine,
just not quite installed yet.
KDE at 20 years old has released Plasma 5.8,
and it is a long-term support edition.
LTS.
An LTS.
Today, KDE releases its first long-term support edition
of its flagship desktop software, Plasma.
This marks the point where the developers and designers
are happy to recommend Plasma for the widest
possible audience, be they enterprise or non-techy home
users.
If you've tried a KDE desktop previously
and have been moved away, now is the time
to reassess Plasma is simple by default and powerful
when needed.
That feels like it's almost written specifically to me.
Yeah, right?
I think so.
Yeah.
I think that's that.
You're one of those people that could be easily corded right
back.
Yeah, and I have tried it before and sort of walked away
like a little, oh, well, I have this issue.
I have that issue.
I'm a little disappointed.
And so they are kind of like, if you've been moved away,
which is a good way to put it, too.
Yeah, that is a good way to put it.
Yeah.
Anybody in the moment room have the 5.8 release yet?
Yep.
Really?
You do.
Welcome, Mr. Tonello.
Tell me, what distro do you have it on,
and what are your thoughts so far?
Neon.
Oh, yeah, of course.
Yeah, that's what I've downloaded, too.
Yeah.
And what do you think so far?
I think it's awesome.
Like, Arch hasn't had it yet, so I couldn't test it on that.
But Neon, it was like the day of immediately.
It was actually available this morning
before the announcement even happened.
So I tested it on that.
And it's really good.
Like, it's very similar to 5.7.5, which I had on that Neon's
install as well.
But the upgrade from 5.7 to 5.8 was awesome,
because it was super easy.
It was just basically just an app upgrade, and that's it.
But the coolest thing about it is just
that there's nice polish now.
Like, it's not like they added a ton of new features.
It was mostly just polish.
Yeah, I think that shows in the release notes.
Yeah, they addressed a lot of things
that are complaints from most people,
like the whole MetaKey-only thing,
or fixing some widgets controls for the audio controllers
and stuff like that.
And they added a lot of cool, interesting things,
like the effort.
Why would you want it, other than just being awesome,
a video playing in the background when
you log into your computer?
But that is kind of one of those cool polish,
you know, show off the Linux desktop, which we need sometimes.
It's totally cool, and I did use it, and it is fun.
It's not necessary, but it is really cool
that you could change it in that extreme.
Yeah, that's fair.
Yeah, I agree.
I had some idea of what the headline features would be,
because I recorded the voiceover for the video weeks
ago, and so I had an idea of what they were focusing on.
And it was a good list of stuff, and I
think it kind of does echo something
they've been saying for a while.
We will tell you definitively, because they've been saying this
now for a little while, we will tell you definitively
when it's ready for the average folk.
Should I play the video?
Sure.
Even though it's myself, which is kind of weird?
I'd say do it.
Yeah, the EQing they've done is a little differently,
so it doesn't quite sound.
I don't know if it even quite sounds like me.
You can be the judge.
But I thought it was a great video that
highlighted a lot of their features, which I kind of ribbed
them about in the past when Five 7 or whatever came out.
I said, you know, you really kind of need it.
It's 2016, it's time to have a video.
Up to production.
Yeah, so they made me put my foot in my mouth,
or what's that saying?
What's it called when somebody calls you on your bus?
Money where your mouth is.
Huh?
Money where my mouth is, yeah, except there
was no money transaction here.
But your video production skills where your mouth is.
Metaphorical money.
This was just done for the project.
There was no money.
So it's more like, yeah, internet cookie in my mouth
or something like that.
In my mouth.
After a few hard months of work, the KDE community
is pleased to announce Plasma 5.8 Long Term Support Edition.
This version will be supported for at least 18 months.
So if you haven't tried Plasma Desktop yet,
take a look at some of its unique features.
With desktop widgets, you can easily organize your files,
monitor the system, and quickly launch favorite apps and more.
Plasma lets you easily search your desktop
for applications, folders, music, video files,
everything you have.
Plasma's default theme breeze has a unified look
across all common application toolkits.
Download wallpapers, window styles, widgets, desktop effects,
and many other resources straight to your desktop
from the KDE store.
Using KDE Connect, you'll be notified on your desktop
about text messages, can easily transfer files, and even
use your phone as a remote control.
Plasma is simple by default, but you
can customize it however you like with new widgets, panels,
screens, and styles.
But this isn't all.
Plasma 5.8 brings even more features and improvements
to your desktop.
This release brings an all-new artwork design,
giving you a complete breeze startup
to shut down experience.
Support for Semitic right-to-left written
languages, such as Hebrew and Arabic,
have been greatly improved.
Plasma wallpaper plugins, such as slide shows
and animated wallpapers, can now be used on the lock screen.
Yeah, they did a rickroll.
You can watch the whole video in the show notes
if you want, it's a couple minutes long.
So a pretty nice release.
So I think I got it downloaded, and I
think Noah's got it downloaded, and he's an LTS guy
to begin with.
This seems perfect for him.
So I think we're going to give it a review on Sunday's
Linux action show.
Something to look forward to.
Now we have kind of an interesting news item.
It's a little name collision today.
We're introducing Pixel, but not the Google Pixel,
not the Google kind.
No, this is the Raspberry Pi kind,
and it's their new fancy-schmancy desktop
environment.
Where does it?
I have a little definition somewhere here.
What did Pixel stand for?
Because I have the.
Oh, here we go.
Pi improved xWindows environment, comma, lightweight.
Yeah, Pi improved xWindows environment, lightweight.
And my main takeaway from it is it's not
like it's some new X server or something like that.
It's essentially a set of changes
that entirely are around the appearance of the desktop.
The first thing you'll notice when you reboot
is they now have a nice, pretty splash screen
that they say they've done a lot of work
to not slow down the Pi.
Once the desktop appears, you'll notice
a nice, stunning background taken by one of their very own,
and there's several of them preloaded.
You'll also notice that the icons on the task bar menu
and file manager have gotten a big makeover.
Big improvement there.
Sort of spiffing it up a little bit.
If you open up a window, you'll see the window frame design
has changed significantly.
The old window design always looked a bit dated
compared to what Apple and Microsoft are now shipping.
So they were keen to update it.
Windows now have subtle curves on the corners,
clear title bars, new icons for the open, minimize,
and close.
Fonts have gotten improved, even with a mention to Steve Jobs.
And this is an interesting one.
On, I guess, request by a lot of Raspberry Pi users,
they want to be able to shut off the wireless from within the UI.
So now there are options in the Wi-Fi and Bluetooth menus
to turn off relevant devices.
Works with Pi 3's onboard wireless hardware.
And should work on most external Wi-Fi and Bluetooth dongles.
I like this.
They're packaging in Chromium for the Pi
with hardware acceleration.
Yeah, so they're switching out from Epiphany to Chromium.
Chromium for the Pi, which is the Pi's hardware
accelerated playback for streaming content.
That's pretty slick.
Yeah, they're also including uBlock origin,
adblock by default, H.265 extensions,
which force YouTube to serve videos
in a format which can be accelerated by the Pi's
hardware.
And it's available for download right now.
That's awesome.
Yeah, it is.
It seems to be trying to make it a more user-friendly,
out-of-the-box OS.
But doesn't that sort of suggest?
I guess one of the things I liked about Raspberry Pi
was that it truly was divorced from any.
I know that there's always been Raspbian and they've been close,
but it always feels like there's been
a divorce there between a distance,
a separation of church and state, if you will,
between the OS you run on and the Raspberry Pi hardware.
I understand that they ship it sometimes
with an SD card preloaded, but that didn't necessarily
mean that there was an OS all of a sudden that they were
going to start throwing in behind to try to promote
as the primary OS you run all the time on a Raspberry Pi.
Maybe I misunderstood?
I mean, I guess that's true, but I
don't know if that is really changed with this.
I mean, maybe it feels more that way,
but I feel like a lot of people who use it who aren't more
experienced, aren't the power users,
aren't using it in a project that they know right away,
or maybe using it more just to play with, or there's a desktop,
they're going to follow one of the guides that
has them install one of the easier operating systems.
So in that effect, there kind of is already a default.
But I mean, there's not really because of the,
this doesn't change anything as far as how stuff is installed,
because most people are still going to use Noobs,
the Noobs installer, because it's such an easy process
to get installed.
And this is not going to be like only this,
and just they're still having OpenELEC, and PyDora,
and all this other stuff, and Noobs.
And it is nice that this will be better.
I mean, just making it look better
for having LXDE, because LXDE is about to fall.
Sure, yeah.
I mean, I agree.
And that is a good thing, absolutely.
I'm not by any way saying that's not a good thing.
But Wimby, I'm kind of curious what your thoughts are,
because I know that Ubuntu Mate is extremely popular
on the Raspberry Pi.
So it's a device you probably have some experience with.
Does this seem like a good move, something
that's worth their time?
Yeah, well, how do I answer this without coming
across overly negative?
The first thing is I think that the browser work with Chromium
and the video acceleration is probably
the most relevant and interesting stuff
come out of this initiative.
I think that's brilliant.
And I'm looking forward to finding the time
to have a little look around and see
how that's been implemented to see what I can borrow
from what they've done there.
The name collision is unfortunate.
And how that happened, I just can't imagine that seems.
Yeah, we've known the name Pixel now for.
I know.
We had the Google Pixel as a re-envision
of the already existing Google Pixel,
so they didn't really need to do that.
And they chose the, it was a backer in it,
they picked Pixel in the first place
and tried to make it work.
Yeah.
Yeah.
So that's.
Still, though, that doesn't necessarily
mean you have to go with the name.
But yeah, the naming collision is confusing.
Yeah, and the thing I'm a little bit perplexed about,
if you read the blog post, there's a couple of things
that stand out from this.
And that's that the guy that's done this,
and he's clearly put a lot of work into it,
he acknowledges that when he started on this,
he had little to no experience with Linux and X and X
desktops and all the rest of it.
And it looks like two years of effort
have gone into this based on LXDE
that people in the Linux community
know is yesterday's news is the thing that's being replaced.
So they've poured effort into this,
and it's immediately laden with technical debt.
And I think that that's really unfortunate that they've
built this around something that is effectively obsolete now.
And I think the art and the fonts and the icons
all look really good.
But there are also open source licensed theme packs
and icons out there that are also very, very good.
They're free to use.
It felt like, to me, it was a lot of work
on a system that doesn't have a lot of legs.
And it sounds to me also like it is the beginning of something
much larger.
Because the way they phrase it in the blog post is,
currently we focused on appearance.
But it sounds like the overall goal
is to make a faster, more dynamic desktop.
And part of the name, part of the backronym
includes the X to the.
It felt to me as if they were going
to do everything they could to make it faster on X with LXDE.
And I thought to myself, well, why LXDE and why X11?
Why are you going to invest in these things?
Why is that where you standardize, where you focus?
And that new boot screen they worked on,
it probably took a hell of a lot of work.
Because like Wimpy said, they spent a lot of time working
on that particular thing.
It's a very X-focused project.
So it does feel like investing on the past of Linux
when the Raspberry Pi is such a future-looking device, when
it comes to resources, availability, the ARM
platform, the price.
Right, yeah, exactly.
It seems to be sort of a mismatch.
It does seem like a mismatch.
Or perhaps just like things that could have been efforts
that perhaps would have been better in projects more
tightly knit with the community or that
have existing communities.
It kind of feels like they chose LXDE because just
for the sake of lightness, not for like,
basically ignoring everything else.
Yeah, you could be right.
Yeah, or just momentum.
They have momentum there.
That could be that.
It's weird because LXDE is only like 10% lighter than MATE.
Yeah, we've had that debate.
And I agree.
I think it also, you could make a lot of different desktops
lighter or heavier depending on how you configure them.
And also, we've been looking at LXQt
and looking at where its resources are.
And yeah, there's a little more there.
You're looking at a Raspberry Pi 3.
That's the desktop to watch right now.
I agree.
Really, really interesting.
Besides MATE, MATE.
Well, all Unity.
Yeah, apparently, maybe there's hope for Unity after all.
All right, well, I want to move into something
that I know Wimpy is going to be fired up about, real fired up
about.
So before we get there, before we go too much further,
we've got a big show coming up.
And I want to thank DigitalOcean for making it possible.
I want to thank all of you who use our promo code DOUNPLUGED.
It's one word.
Lowercase, you apply it to your account,
you get a $10 credit.
That's a vote to keep us on the air.
DigitalOcean is a simple cloud hosting provider
dedicated to offering the most intuitive and easy way for you
to spin up a server on their crazy great infrastructure.
Their pricing is nuts.
It's super valuable for the kind of rigs you get
and the performance you can get.
They've got data centers in New York, San Francisco,
Singapore, Amsterdam, London, Toronto, Germany, India.
I think I'm even missing one in there now.
Any more data centers?
You're going to run out of breath there, Chris.
No.
No, bring it.
Bring it!
Bring it!
Also, their interface, it's the best.
They have a really great intuitive control panel.
It gets me fired up about DigitalOcean.
Go over there and try it.
And then one of the nice things is
they have a really beautiful, well-documented, elegant,
listen to me, let me throw, what else can I throw in there?
Come on, give me another word, Wes.
Elegant.
Simple.
Well-designed.
Oh yeah, there you go.
Kind of need another, I need another buzz term.
Blue.
Blue, sure.
No, that's not, no, that's not good.
Cloudy, oh, cloudy.
Yeah, cloudy, manageable, scalable.
Oh, I'm on fire, Wes, I've got it.
I'm back in the flow.
Enterprise-friendly.
Yeah, ready, secure, implementable, auditable.
Oh, measurable!
I got it all, Wes.
But really, the DigitalOcean API, what's great about it
is it's well-documented and there's a ton of code
already written you can take advantage of.
In fact, when you look over there
at their community projects page,
one that might jump out at you if you are a Unity user
is the DigitalOcean indicator.
This indicator allows you to manage and manage
your droplets directly from your panel, fool.
You can quickly see which droplets are active.
You can reboot, power on, power down your droplets.
You can copy your droplet's IP like a boost for easy access.
And of course, there's all kinds
of other great code already written.
You can just take advantage of it.
Use our promo code DOUNPLUG, get a $10 credit.
Go spend up a $5 rig, guys.
$5 dollar dollar rig over at digitalocean.com.
Use the promo code DOUNPLUG and a big thank you
to DigitalOcean for sponsoring
the Linux Unplugged program.
Woo-woo.
All right, Wimpy, don't lie.
You're totally stoked about Jah-kasha?
Jahshaka.
Jahshaka!
Who now?
Now, this is a VR world creator that allows.
Oh, move on.
All right, and it's GPL, moving on.
So, this is actually a story that's worth talking about.
Unsafe at any clock speed, the Linux security,
the Linux kernel security needs a rethinking.
This is ours reporting
for the Linux kernel security summit.
And here is how they start it up.
This is how they spin it up.
The Linux kernel today faces an unprecedented safety crisis.
Much like when Ralph Nader famously told
the American public that their cars were unsafe
at any speed back in 1965,
numerous security developers told the 2016 Linux
security summit in Toronto that the operating system
needs a total rethink to keep it fit for its purpose.
AKA, not fit for the gerb.
Strong words.
Cars were designed to run, but not to fail.
This is Kees Cook.
He's the head of the Linux kernel self-protection project
at Googs, and he's an employee that's working at Googs
on the future of internet things security,
whatever that means.
And he said at the summit that while it's very comfortable
while you're driving to go down the road,
as soon as you crashed, everybody died in these old cars.
That's not acceptable anymore, he added.
And in a similar fashion, Linux kernel needs to deal
with attacks in a manner where it actually is expecting them
and actually handles them gracefully in some fashion
when it's being attacked.
Like don't just do your, he goes to point out
we approach security today as though we are just still
living in the world of the 1990s and 2000s.
Computers in a data center managed by knowledgeable people.
But most computers today, laptops, smartphones,
and internet of things devices are not managed
and secured by internet.
Boy, that last category. By IT professionals.
Especially, right?
Yeah.
And he points out that so the kernel has to be designed
in a way that it assumes it's going to be attacked.
And then he kind of rubs it in with some stats and details
and ours sort of does a beautiful job of summarizing this
if you guys want to check out the link in the show notes.
The clear consensus at the Linux Security Summit
was that the squashing of bugs is a losing strategy.
Many deployed devices running Linux will never receive
security updates and patching a security hole
in the upstream kernel code does nothing to ensure
the safety of an internet of things device
that could be used for a decade
and may forever be ignored by the manufacturer.
Exactly, right.
We've seen this with routers,
we see this with Android devices.
There's only going to be more.
I'm sure Chromecast will be like,
we started the show talking about Chromecast,
I'm sure Chromecast will be in this category one day.
Worse, the average lifetime of a critical security bug
in the Linux kernel from introduction during a code commit
to public discovery and having a patch issued
averages three years or more.
This is why everybody should be rolling.
According to Cook's analysis,
critical and high severity security bugs
in the upstream kernel have lifespans of 3 to 3.3 years
to 6.4 years between commit and discovery.
That's kind of a long time to be out there circulating.
That's a new graph we've got here too though.
Yeah, including they have some pie charts here
where they're looking at Android security bugs
and they're looking at where most Android
vulnerabilities come from
and this is an interesting statistic.
Only 15% of vulnerabilities in Android's kernel
came from upstream, only 15%.
85% of the bugs in the Android kernel
came from device driver manufacturers.
Sounds just like Windows.
It does sound the other way.
So he says the kernel maintainers
have to get ready for this kind of thing.
They have to build Linux to be expected for attacks.
To get it ready, you're gonna get attacked,
so just design in a way
where it can sort of manage that situation.
It's funny how much this is a symptom of Linux success.
Now that it's everywhere, you have to start designing
for that and it will be used in situations
where people don't understand it
or really know what's happening
and you have to plan for all of that.
And especially when you're gonna be in these,
they're gonna be built in so many embedded devices
that just sit on the shelf.
I think the line in there that sort of hit me the best
is that bug fixing is just not enough.
And because of enterprises where they have slow patch cycles
and device manufacturers who don't properly update,
we have Linux out there in these devices
where there's this really long tail of production
because they just work.
They just frickin' work forever.
Yeah, you don't need a super RAM upgrade
or whatever in your tiny...
And so that just means it's hanging out there
with its fly down for years.
It's got its D swinging in the wing.
I think it's nice to see more talks about this
because obviously a couple years ago,
there's lots of complaints in the community
and from outside people just about, you know.
It did feel like it was like the 90s or 2000s,
like it was a bunch of people just making this kernel,
they were just making it work
without really considering the full market effect.
And obviously that's hard when it's built
in this open source way,
but it's nice to see that people
are really paying it full attention.
Yeah, and what kind of changes will Linux have to make
in order to stay competitive?
If it doesn't make those changes,
will another kernel come along
for these types of devices that does?
And I hope they can do a good job
of looking at other kernels,
other projects that are more security focused.
OpenBSD comes to mind or GR Security people
and try to incorporate some of those approaches.
Yeah, and what are they doing that is more proactive
and not just squashing bugs?
Exactly. Yeah.
Inigo says, this seems like bad journalism
and thinking that developers are robots.
Well, it's coming from the developer community
and they're just saying, we need to rethink,
we can't just treat fixing bugs as...
So Linus was quoted as saying,
he doesn't look at security bugs
and regular bugs separately
because they're all just bugs that need fixed.
And there is absolutely some nice sound logic behind that.
But at the same time, there is also a conversation,
I think a conversation worth having around,
how do we design this thing to be planned to get attacked?
How does this thing operate
when it knows it's gonna get attacked?
It's not just, it's gonna assume
that once you're inside, everything's trusted.
How do we design this thing a little bit differently?
What can we tweak?
I think that might be worth discussing.
We'll see.
Yeah, I agree. A lot coming out of Google,
security wise.
Project Zero, they have their own fork of OpenSSL.
They have this guy who's working
on the Internet of Things future security.
And they're attending Linux events.
I mean, there's a lot, Google's really focused
on this right now.
They're putting some money in this.
Well, I feel like they're trying to be
in the consumer space and the vendor space
and people say, security is a huge thing
that you can be audited for,
you need to have to do this yourself.
All right, I wanted to ask the mummer room
because there was a thread on RLinux
submitted a few days ago by Dark Delta or something like that.
I can't remember the guy's name.
Darko Delta or something.
And he asks, what are things that you would do
to change Linux?
Like if you could just snap your fingers
and change something about Linux.
So we were just talking about the security thing
and that's what made me think about this.
If you could change anything,
and I want to really throw it to the mumble room,
but I'll give you an example.
Like it was pointed out,
this security thing could be something that you have.
If you could just snap your fingers
and change how a security is done, would you change it?
What about you, Wes?
If you could snap your fingers,
is there something you would change about Linux?
Hmm.
You like it.
I mean, I do like most things.
I think there could be something to said about a better,
not closeness, but there's something about right now,
I feel like, especially just like the,
even though there is like the core funding initiatives
and that kind of stuff, there's this disconnect.
Like I feel like we talk about the kernel a lot,
but are we excited as about like core utilities development
or a lot of the other parts of the user land?
And then the BSDs kind of have that a little more rolled in.
It's just cohesive.
And I wouldn't say that change that
because I think in some ways it's really cool, right?
We have different C libraries.
Over the long haul could be good, but yeah.
Okay, I follow.
I wonder if there could be a better ecosystem in there.
All right, let's pull the crank and ask the mumble room.
Mr. Tanel, I believe I heard you.
Did you have something you wanted to mention
you would change?
Yeah, the most important first thing
that came to mind is universal apps.
Snap packages for all.
Ooh, yeah.
App pack and flat pack.
Haven't you heard of Docker?
You don't even care.
He actually doesn't even care.
He just wants everybody to use it, right?
I don't care which one is successful.
I just want one to be successful
so that game developers, software developers,
doesn't matter.
They all have one thing to work on.
And no matter what distro you choose,
you can use the software that's made for the ecosystem.
Let's see, I wanna ask William if he's near his mic,
but I'll give him a chance to think about it.
I'd like to hear from WW too, but Wimpy,
I gotta go to you since you're a distro maker.
You know I was gonna ask you this.
If there was something you could snap your fingers
and change, would it be something about Linux itself?
Would it be something about the community,
the way we collaborate?
What would you change?
This is a really tough question.
I agree.
To think of one thing.
I'll be honest, I've got nothing solid in my mind
that I'm just gonna say this is the one thing.
I can think of lots of little things,
but no one big thing.
So ask around and if I come up with something,
I'll let you know.
That's how I actually feel myself,
is I don't have one thing.
I could think of the way the community interacts
from time to time, the way we process information.
I suppose, okay, I have one.
I have one.
All right, I have one.
I'll save it.
William, do you happen to have one by any chance?
I don't think so.
Go on once, go on twice.
What about you, Mr. WW?
Do you have one by any chance?
I do have one and it's kind of been a pet peeve of mine
since like the 90, well, since I first started
in getting into Linux with my friends back in the 90s.
And that is, I would remove the mindset of people
that they think that they should be running Linux
on old hardware all the time,
or this is the best way to do things because it's not.
This old hardware is holding us back and supporting it
and just keeping it around and it's just,
it's an old kind of way of thinking about the kernel
and development of Linux and not really letting us focus
on newer things.
So it's a mindset.
Yeah, a mindset.
All right, okay, I can follow that.
Mohs and Rath, you had one around collaboration.
Yeah, I was thinking that it'd be nice if,
because if you take a look at, say, DistroWatch,
all those different distros that you could say
didn't make it.
If you could somehow, I guess you would need
the most powerful in the universe, right,
American greenbacks, go and hunt down,
say like 50, 100 of those people worked on these things
and it just never really took off.
You get all of those people,
because they all had ideas.
Maybe they didn't have quite the chops individually,
but you get a legion of them, right?
And you just put them on to, say, different distros
which have made it, say like one of the top 20.
Not necessarily one of the top 10,
because those ones are usually backed by companies,
but you say one of the top 20 that doesn't have
a huge company behind it,
and you just have that legion of, literally,
of wisdom, of experience, of knowledge,
all focusing together in terms of,
hey, my project didn't work,
all of our projects individually didn't work,
but we get together as a team.
It's sort of like when you're lifting a log,
one person by themselves, that's gonna be real difficult.
You get 10, 20 of them, all of them,
also a couple of them say, dig a hole here,
couple of them say, get some rope here,
and all of a sudden, you can lift a whole bunch of logs
and make a nice little anything that you want with them,
because now you have a team of people all in one,
as the song says, one pimped-struck groove
to actually make it work.
Oh, I'm getting a little inspired.
Mozenrath, that open-sauce runs deep.
That's a good one, I like that.
I'll give you mine.
I got two, I was thinking about it.
Number one is not a huge one,
but I think it would better serve the Linux community
how they inform themselves, how they come to opinions,
and about what technologies they'd back
if we could get our heads out of our ass
and drop the whole cult of personality.
It's something that Aaron Seigo wrote about years ago.
I continue to think about it.
There are personalities out there
that people believe the things they say
simply because they have a name they've heard of
or somebody they've, that thing drives me nuts
because it allows people to get led around like sheeps.
And all of it, even people who are technically proficient,
like somebody I respect, like Lenart,
who I thought made a lot of great cognitive arguments
for System D, there were still people
who would just pick up pitchforks
because Lenart was for something or because,
on either side.
So that would be one thing I would change.
The other thing I would like to change, I think,
is how involved the community is with funding.
They're very involved with code, documentation,
and especially evangelism.
I would really love to see more money where our mouths are
in terms of funding open source projects,
contributing to them, and allowing the public
to fund things that deserve better focus,
better surfacing, so that way the projects
and the outlets that are funded
by maybe certain media backers
or certain corporate sponsors
that currently have a louder voice
or currently have a larger presence
could be more properly competed with
by smaller independent news outlets
and open source projects
in a way that's on a more competitive advantage
and it's up to the audience to kind of step up for that.
And if I could change one damn thing,
it would be to have more Linux users
and more open source users contributing money financially
back upstream to the projects
and the things that they use,
and maybe the content they consume.
You kind of get a nice perspective for it all
when you look at this website
that I've sort of been obsessed with
that Wes linked to me.
It's github.audio, and you're hearing it
in the background right now.
It's a sonification of what goes on at github.
Yeah, and there's representations with different tones
and blips on the radar.
Well-chosen, artfully chosen.
There's a big one.
That's a big one right there.
Something just dropped.
So you visualize commits to github, right?
That's what this is, is a perspective
with their size and whatnot.
It reminds me of something,
I don't know if you ever saw it for Bitcoin.
Did you ever see this for Bitcoin?
Oh yeah.
Yeah.
Visualize it or find blockchain.
And I left it up in a tab
while I worked on the show today
because it's just nice and peaceful.
It has like an organic kind of, you know, sounds natural.
Plus there's something sort of inspiring to know
that every one of those dings is a commitment of code.
Look at the community go.
That's kind of inspiring.
When you're working and you keep hearing people
that are committing something to projects
all over the world.
Open source projects.
Yeah, just run it in your tab.
github.audio.
You might even be able to find some projects this way,
right?
You're like, oh, these guys are just doing
a lot of cool stuff.
Maybe I'll check out that repo.
Yeah, I agree.
And also, like xMetals says in the chat room,
I could totally fall asleep to that.
You know what?
I might try that tonight.
I've been looking for things to leave on as background
for my dogs.
There goes a big one.
Look at that.
Big one.
Come on now.
Even if you just have the sound muted,
it's still kind of neat from a visual standpoint.
For those of you in the audio audience,
there are blips.
So how would you describe that, Wes?
Sort of like pings on a map that sort of expand
in proportion and their color and their size.
Like a 2D ripple.
Yeah, a 2D ripple and it's proportionally
to the size of the commit and all of that.
It's very fancy.
So look at you.
Look at you sending me a link that I love.
I know you so well.
github.audio.
And I have bookmarks for some old Bitcoin ones,
but they got bought out and now they serve malware.
So that's no good.
Hey, malware as a service is an important part of the book.
Malware as a service.
Yeah.
You know what?
Speaking of important services,
I want to tell you about my mobile service provider
and that's Ting.
Once you go to linux.ting.com,
linux.ting.com to learn more,
get a $25 discount off your first Ting device.
Or if you're like Ninja level and you bring a Ting device,
then you'll get $25 in service credit
and an average monthly Ting line is about 23 bucks.
So your service credit is going to pay for more
than your first month.
It did for mine too.
And that's kind of nice because Ting has CDMA
and GSM networks.
I'll say it again.
Ting has CDMA and GSM networks.
That's right.
CDMA and GSM.
So you get to pick which one works better for you
and bring a device.
They have radically good customer service.
Super good.
You get to speak to a real human being.
They can help you out,
but they back it up with an incredible dashboard
and an app for your mobile device.
You know, I laugh because Mr. Tonell
in the Mamba Room, Producer Tonell,
he had a really funny comment today.
He's like, hey, you ought to mention this in the Ting spot.
People could go pick up the LG Tribute 5,
which just landed on Ting for $121,
no contract, no termination fee,
and then go over to Amazon
and pick up a Rebel T5 digital SLR
and still spend less money
than you would spend for the new Pixel.
See, I think he was just trying to make fun of me
because I might buy a Pixel
and I'm buying a new camera this week.
Really?
Yep.
It's going to be an expensive week, Chris.
That is going to be a very expensive week.
So yeah, the Tribute 2 was kind of a famous phone
and the Tribute 5 is back and bigger
with a bigger display, bigger battery,
front-facing cameras, all this business.
It's actually a pretty decent phone for 121 bucks
and you'd have enough money left over
to get yourself a SLR.
Kids' phone, grandma's phone,
you know, they want Instagram and they want email.
Or if you just don't find yourself
all that enthused about phones anymore.
If smartphones are just not what floats your boat
and you just need something
that can do the basic things you want,
run a recent version of Android,
and no contract nor the termination fee.
Just having a recent version of Android,
that's pretty much everything you need.
And 121 bucks, no contract nor the termination fee.
That's a really great deal.
I want you to go over to linux.ting.com.
You get to put Linux in your URL bar,
which is good because you want Linux in your history,
let's be honest.
You want that in there.
You got to stuff that URL history bar.
I know what you've been up to, linux.ting.com.
They give you a discount off a device
or they'll give you a discount off service
if you decide to switch and they got a savings calculator.
I recommend you check it out.
linux.ting.com.
And a big thanks to Ting for sponsoring
the Unplugged program.
Wubba-dub-bub, wubba-dub-bub, wubba-dub-bub, wubba-dub-bub.
So I thought before we got into talking about
the Open Daylight Summit and our interviews,
rolling our interviews that we had
with some of the folks at Open Daylight Summit,
we should give one more crack at explaining
what the F, software-defined networking is.
JB does SDN.
Yeah, and why it matters.
And it is hard to describe
because it is literally a nascent industry
that is in flux and a lot of people
that are involved with it barely understand it.
Yep.
Well said, Chris, well said.
So it's really hard.
They won't say that, but it's true.
Yeah, so for us coming here
and then relaying the information to you,
we kind of look like we're jackasses,
but software-defined networking itself isn't,
Open Daylight isn't the only
software-defined networking controller game in town.
It is one of the more open and community-based ones
with multi-industry support,
and it's one that the Linux Foundation
has thrown their weight behind.
And as we've shown, has a active community.
So there's others, though, like OpenFlow, right?
That would be, would that be considered?
OpenFlow is the,
that's what is controlled by Open Daylight.
Okay, so this is like the controller-level stuff.
Yes, but there are several other,
like Big Switch has one,
there's a few other proprietary implementations
of OpenFlow controllers
or things that interact with OpenFlow hardware.
And so OpenFlow is able to be a controller
that plugs in with Open Daylight
because it follows a series of standards set forth
by Open Daylight and software-defined networking.
Like it follows these, it speaks these languages, correct?
Yeah, so OpenFlow is, as a protocol then,
it separates the control plane from the data plane
so that you can have this centralized,
standardized Open Daylight provides this
as the OpenFlow controller,
which then sends configuration
to all the OpenFlow devices
that actually end up switching your packets.
And then that gets,
that programs the ASICs and other forwarding paths
on the hardware to then implement your VPNs,
implement your layer two switches,
implement your routers.
Yep, yep, yep, your routes, your VLANs, all that stuff.
So we, to try to better understand what the F
all of this means,
we decided we would take a very precious Tuesday,
which is, you know, Wes has this time carved out
from his day job, we have this time set aside
with the mumble room to do this show.
It's not just like, it's not just a thing
we're flipping about, like we're gonna go somewhere
during Linux Unplugged,
it really kinda needs to be worth it.
And so we decided to go down to Bellevue and check it out.
And it was, the whole event itself was,
it felt like it was really something set up
for professionals that are in this industry
that wanna get information,
hey, this is what I'm working on,
this is what we're working on.
It was also, people were giving talks
that were sort of highlighting the fact
that we were two separate open source projects
kind of working on the same thing
and now we've come together as one open source project.
That was kinda neat to see.
I think that was a pretty neat theme
and it was interesting to see just how it kinda,
you know, it took the Linux community kind of a while
to get to this like different corporations
working together setup,
and that's where Open Daylight is right now,
where they're, you know, I think it's like different,
different interest groups all seeing like,
we have this shared interest
that we can all work on together.
Now, just from like our experience standpoint,
I have not stopped thinking about that burger I ate.
I'm like still thinking about that burger I got.
Oh man, right?
So I got, it was an homage to Dick's,
which Dick's is a burger restaurant here in Seattle
that is sort of famous.
Yeah, I think so.
And I think most people, when they come to Seattle,
they like to get, they like to go to Dick's
and get themselves a ridiculous Dick's burger.
They're super greasy burgers
and so this place made an homage to Dick's
and I decided I gotta give it a try.
It was really, really good.
But the bacon salt was impressive,
but damn, if Wes's burger,
and I have a picture of this in the show notes
if you're listening, you've gotta see this thing.
This thing is nearly as tall as,
this thing stands taller than your cell phone.
So imagine a burger that is literally taller
than your cell phone.
It's probably taller than a can of Coke, right?
It's taller than a can of Coke,
it's taller than your cell phone.
I think so.
It is a legit, do you remember what was on this thing?
Like there's egg and ham.
There was ham, egg, a burger, hash browns,
I think a hollandaise sauce was involved.
Is that coleslaw?
What's over here on the side?
That's a good question, I'm not sure.
Is it pulled pork?
I can't tell because it's, and then there's a sauce,
it's literally sitting in a pool of its own sauce.
Yeah, sauce, egg, there's a big bowl of tater tots
in the background there, slightly out of focus.
Yeah, yeah.
It was really a wonderful meal.
Perfectly out of focus, you might note.
Oh yes.
You might note.
Depth of field, lovely.
Depth of field without two cameras,
somehow I managed to pull it off.
How did you do that?
Yeah, so we had, I think it was neat to go down there,
it was neat to talk to people,
and we had a great chance to do some interviews.
It was fun to kind of just be outsiders
trying to understand this whole community.
There was definitely moments where it's like,
boy, some of this is going way over our head,
and it was kind of hard to follow,
but there were other moments where like,
these are just struggles that all open source projects have,
or these are common problems with organizing people.
How do you build this kind of community, this movement?
Yeah, so that kind of stuff was clear
and it was easy to sort of identify with and see.
So I had a good time going down there.
I really enjoyed the trip,
I enjoyed the opportunity to learn more,
and so I wanted to kind of relay to some of you
our experience, and I tried to do that
in the Linux Action Show last week,
and then I wanted to follow up on this episode
with a couple of more interviews
to kind of help you better understand
of how large enterprises are using this
and how open source projects are using this.
So, let's start on the business side of things.
Let's start with the enterprise side of things,
because this will be the most high level interview
that we have, the real big picture perspective.
And what's great about it is, this is Balaji,
and he starts out by explaining what 5G is,
what's 5G networking, and why software defined networking
is important in a 5G network.
So not only do you get to learn about 5G networking,
but you get to learn how this all comes together
to support 5G networks.
So that'll be Balaji,
and then we'll have one more after this,
and that'll be more of a, the next interview
will be more of like a community, real life testing project,
stuff like that.
All right, so here we go with the high level.
Yes, thanks for asking, that's a great question.
So 5G is, some people think 5G is,
okay, we upgrade from 4G to 5G.
But actually, it's partially true.
But 5G encompasses much bigger than that.
5G includes our access, as well as the transport,
and the data center, the cloud.
So pulling all together, more of a holistic view.
And then on top of that, also, in 5G,
you know, the logical slicing of the network,
it was already there in IP world,
what we call virtual private network.
In 5G, what we call network slicing,
it's on a whole new level.
So you slice the entire slice, network slice,
on an existing network, logically separated,
secured, isolated, to deliver, for example,
to automobile industry, or to a healthcare industry.
But it's all connected over the 5G network.
Exactly, it's all part of the 5G network.
And also, we also on the top,
how do you do the life cycle management
of the whole network slice?
So you have the management layer, which is key,
should be agile as well.
That management layer consists of management,
and orchestration, and analytics.
So analytics will use it to close the loop.
If there is a problem in the network,
you can dynamically close the loop.
Now you may ask me, what's the role of SDN?
Yeah, I'm curious.
Well, software-defined network goes across the board.
So you can have an SDN for transport.
So basically, the 5G requires to deliver services
faster, time to market.
And also, from design of your service,
if a customer asks, if a vertical industry,
like automobile industry, come to an operator,
hey, I need a service, network slicing,
sorry, I need a service.
So we could actually create, design the service,
create the service from the entire, you know,
the process, business process, service fulfillment,
all the way to delivering services.
All these things should happen in a few days.
I can't wait for a few months, right?
That's what the agility we're looking at.
So with, like, SDN, you kind of have the ability
to reprogram on the fly.
Yes.
SDN is a cornerstone.
It really is a catalyst, I call it,
catalyst to enable that 5G transformation,
and, you know, for network slicing.
For example, SDN applies in many areas.
For example, to set up end-to-end service,
connectivity service, for in-transport network,
you need to have a SDN-enabled transport network,
so I can dynamically set up the connectivity.
Also, you need to, you know, in 5G slicing,
you need to have this mobile core, which is virtualized.
So you need to connect all the VNFs.
The VNF could be virtual machines, or it could be containers.
So you need to make intra-data center connectivity.
SDN plays a role on that.
So orchestration, what the orchestration will do
is it will connect all the dots.
Sure.
So it's all-
And actually make it manageable.
Exactly manageable.
The full life cycle management.
So since you did a great point talking about manageable,
because any service is cradle to grave, right, the service.
So the dynamic nature of service is very critical.
So for example, if you create a mobile broadband service,
and the consumer are consuming that service,
and we are monitoring that, you apply the analytics,
something happens to the mobile broadband slide.
Remember, it's all virtual, right?
So what we can do is, using the orchestration
and analytics, and also leverage SDN,
you can actually create another network slice,
move your traffic, move the users, so you can-
Exactly.
This could be a stadium event.
Imagine if there's a stadium and they want a new,
you know, the network and services, right?
Even events like this.
Events like this, you want to build the whole thing
that'll cost time and money, right?
Absolutely.
This one is pretty easy.
Maybe in 30 minutes, you can create a mobile core
using orchestration and SDN, so.
Yeah, that is, what's really neat about that
is what we're talking about here is,
you could see how vendors could slice out
their whole network that would span across multiple systems,
multiple networks.
And I think he kind of highlights
how you can dynamically change it, right?
So you don't have to go back and change your switches,
or update the configs, or be like,
oh no, now I need a router here,
and we need switches all this way,
and we need all these access points.
You can fill places with generic hardware,
and then on the fly, you can be like,
nope, I need two network partitions of VPN connection
bridging these two networks,
and it just all gets programmed out there.
Right after that, I asked him, I said,
be honest with me, how hard was it for Ericsson?
They're a big telco vendor, for sure.
How hard was it for you to switch over
to something like this?
Like, was this one of those things
where your company fought this tooth and nail?
And he says, no, it actually,
it just makes a ton of sense for them.
It turned out it was obvious for them
because there's been enough left by open daylight,
and there's enough ambiguity
around software-defined networking
that there's a real need for people
that understand huge networks and expertise
to bring all this stuff together.
And so for Ericsson, they don't feel like
they're competitively disadvantaged
working with the open daylight platform.
They feel like, well, we've learned this thing,
and we know how to make all of them connect.
Like, I got a sense from them,
they're truly, they had a lot of people there.
They were really investing in something like this.
It seemed very legitimate.
And I was surprised because it seemed like
there's companies that would traditionally
be competing with each other,
like Ericsson and like Cisco,
and other switch manufacturers,
they traditionally are competing with each other,
and here they all are.
With vertically integrated platforms trying to lock,
you know?
Yeah, yes, with these massive vertical platforms
that have these huge support contracts,
and here they are all giving each other
these back-and-forth tips on how to make everything
work better with these different summits.
It's just unbelievable.
It's kind of a great compromise where it's like,
yes, there's still money in you
and providing solutions that can manage this stuff,
and at the same time building communities
to have a common foundation that anyone can use.
Yeah, if this stuff gets your interest going
or just building networks, building systems,
solving problems, solutions,
I encourage you to check out our sponsor, Linux Academy.
Linuxacademy.com slash unplugged.
They have labs and hands-on exercises
that give you scenario-based labs with real experience.
They have instructor mentoring from humans when you need it.
It's not some sort of digital bot.
It's not some sort of AI assistant.
It's real human beings.
Note cards that you can fork and make your own
or look at community versions of them.
Nuggets for when you don't have a lot of time.
You can deep dive into a tiny bit of wisdom
about a singular topic.
Video courses with self-paced, in-depth video courses
for every Linux cloud and DevOps topic.
Of course, they've got Courseware on OpenStack,
which plays well with Open Daylight,
and obviously Azure as well.
Check them out at linuxacademy.com slash unplugged
to support this show.
Get yourself a great price and learn more.
Linuxacademy.com slash unplugged,
and a big thank you to Linux Academy
for sponsoring the Unplugged program.
This is a great time to tie that in
because if any of this kind of stuff
is over your head a little bit,
there's great Courseware on all of this stuff.
So, I want to talk about Heather and Chris's experience.
They were great to talk to.
Heather's from the Linux Foundation,
Chris is from Ericsson,
and also works with the Open Daylight project.
And they talk about real world,
how they use it, why the foundation cares,
and all of that kind of stuff.
I'm here with Chris and Heather,
and Chris is from Ericsson,
and Heather is from the Linux Foundation.
And I'm hoping they're gonna fill in a few dots for us
from both cases.
So, Heather, let's start with you.
I'm really kind of looking forward to picking your brain
because I know a lot of folks listening
have heard of the Linux Foundation,
they've heard of Open Daylight,
maybe they don't know how the two are connected
and where you fit in.
So, fill them in.
Yeah, so the Linux Foundation has started doing
what they call collaborative projects,
where they are providing sort of the framework
for other open source communities
to sort of come together and form their project
and be affiliated with the Linux Foundation,
take advantage of the expertise that the LF has built up
over the years around open source governance,
communities, IPR, licensing, events,
all that kind of stuff.
And so, the Open Daylight was one of their very early
projects that they did in the networking space.
And that has been an area that has been growing a lot
for the LF in the past several years.
So, as sort of the networking industry is looking to both,
I think, take advantage of advances in software,
as well as sort of open source
as a sort of development strategy,
a lot of projects have been flocking to the LF.
So, it seems like the Linux Foundation
really made this connection at the right time
because this is an area that's growing like crazy.
So, do you have a project that's connected
with Open Daylight, where's your role in there?
Yeah, so I head up a project called OPNFV,
which is focused on network function virtualization,
which you may have seen in sort of Nila's keynote
this morning, but it's a big use case for SDN.
And it's the way the sort of the global operators
are modernizing and transforming their networks
to be more virtualized, more agile,
and more software based.
And so, we are a sister project to Open Daylight,
work with them quite closely, as well as other LF
and other open source organizations like OpenStack
and things like that that aren't affiliated with LF.
So, are you building on top of Open Daylight
to, for your project, is that my understanding?
So, our project is actually very interesting.
It's a systems integration project, really.
So, as an open source project.
And Chris is our technical steering committee chair,
so he can probably get into more details about that.
But what we do is we actually compose
sort of an end to end NFV platform based on components
that sort of fulfill different parts of the stack.
So, that could be Open Daylight
or other open source SDN controllers.
It could be OpenStack.
There's a new LF project called FD.io
that we also sort of integrated in this time.
We work with OVS, which is now newly a Linux Foundation CP.
And so, we sort of do that work of building
sort of a composed platform, doing system level tests,
and then taking feedback back to those upstream
organizations to make all of their components
more NFV ready.
Wow, that's super important.
So, Chris, how does this sort of translate
to real world things that matter to Ericsson?
So, the NFV journey affects everyone,
from the vendors to the operators.
It's obviously an operator journey
that the vendors need to be participating in.
When it comes to the NFV platform and how it's built,
for us being able to work collaboratively on,
for instance, bringing Open Daylight into an OpenStack
enabled end to end solution,
providing a framework for applications to run on,
for network orchestration, to overlay.
It's extremely important for us to be part of that,
to help facilitate how that's gonna work,
how it best serves the operators needs.
And of course, as a vendor, it provides us
with that foundation on which we can provide our product.
So, Ericsson has a booth here, right?
Yes, we do.
And there's several staff members here.
It seems to be something that's getting
an area of a lot of focus.
What's Ericsson's history with Open Daylight?
So, we are a founding member.
I have been serving on the Technical Steering Committee
myself for Open Daylight for the period that it's existed.
So, that's, well, yeah.
And he has been serving as RTSC Chair at OPNFV
since it has existed.
Exactly.
So, from an Ericsson perspective,
we see Open Daylight as extremely important.
When it comes to transforming the network,
when it comes to enabling new use cases
and new capabilities in a carrier environment,
it is our platform of choice.
It's what we believe is the best long-term
and short-term bet to really bring that out
and leverage a cohesive and diverse ecosystem.
It fits into OPNFV projects.
It fits into the whole ecosystem
and provides not just a vertical piece.
A lot of components and a lot of CPS
will solve a specific problem and do it very well.
Open Daylight's a platform that provides you
with the freedom to iterate and to sort of throw something
on the side that can then interwork
with what's sort of there.
Provides a place to innovate
within the context of a broader network.
So, for us, it's extremely important
that Open Daylight is healthy,
that it feeds the whole ecosystem,
and that it enables us, our competitors,
and our customers to really just innovate
and create that new network.
So, what drew you to get involved personally
with the project so long ago?
So, I was actually doing network management
back in the day when Open Daylight started.
And what we were finding in network management
is that we were trying to propose new capabilities
that we saw were really needed.
And something like Open Daylight comes along
and it's like, we're gonna build these capabilities.
And it's like, aha, okay, this is where we need to be.
And it was really clear.
And Open Daylight brings the ability
to modernize existing networks
and adopt new technologies at the same time.
So, it's not just the, here's the new technology
or here's an old NMS or something.
It finds that difficult place in between
that allows you to move forwards.
So, what's next in your eye for Open Daylight?
More of the same.
Well, no, not more, more.
Just more.
More adoption, more involvement.
More.
More is more.
More is more in this case.
More momentum, all that stuff is in there.
So, Open Daylight grows.
Release over release over release.
Every release I've been participating in,
the things are more stable,
the community's bigger,
there's more commercial engagement.
So, from that perspective,
this is what I think is next for Open Daylight as well.
What we see coming in the industry
that can take advantage of that momentum
is the ability for Open Daylight to work
very smoothly with OpenStack,
to extend OpenStack capabilities,
bring in carrier and access technologies
into that environment,
and also work with how containers
are gonna integrate into that environment as well.
Can you elaborate on that a bit?
No.
No.
I don't want to be here.
Just Docker, I don't know.
Nobody uses that.
So, here's a plug.
So, in the Colorado release,
which we released yesterday.
Yesterday.
It's still yesterday.
Wow.
Our third release, exactly.
On schedule, no, I missed that.
On schedule to the day that we had agreed to,
like eight months ago, or seven months ago.
Seven months ago.
So, in that release, the Colorado release of OPNV,
we have an NFV environment
which contains LXD containers and VMs,
and you can plug Open Daylight into that,
and you can use Open Daylight
in order to be able to network
between the containers and the VMs.
So, you can then orchestrate your whole network.
Exactly.
End-to-end, front-to-back, you know,
and that's why we're in OPNV,
because we're able to bring these technologies
on board, new concepts,
provide a platform upon which Open Daylight
and others can integrate, build out,
and test new capabilities, and prove them.
So, not just write a bit of code
and put it through their compiler
and have a thing at the end,
but actually prove and test end-to-end use cases.
That's the real value.
Seems like you're modeling that way,
like kind of how it's necessarily going to end up
being deployed in the real world.
That's what we're trying to do, exactly.
I mean, we have, in OPNV,
we have things like the Pharos tests.
I'm gonna let Heather talk.
I talk too much.
But, Pharos.
I talk too much, too. Tell us about Pharos.
Yeah.
So, Pharos is our federated community test lab project
where both end users and vendors are bringing test labs
in different environments.
So, different hardware from different vendors
and hardware across different architectures.
And it's tied into our CICD pipeline
so that we actually are deploying
sort of various flavors of an NFV platform
into multiple environments on multiple hardware.
And we do that many, many, many times
heading into a release.
So, not only do we feel fairly comfortable,
we've gotten, say, OpenStack and ODL
working with each other.
We know that OpenStack and ODL
are working with each other on, you know,
sort of the OEMs that folks like Ericsson
or Huawei or Cisco are using or Intel Whitebox
or this time we added in ARM architectures
or Dell or HPE.
So, you know, we're really sort of, yeah.
And it's, you know, and tied in and automated.
So, we actually are sort of both scaling
our ability to do testing,
but then also sort of doing
a lot of the vendor interoperability testing
sort of just as part of our development process.
Wow.
So, if I wanted, if I'm listening,
I want to learn more about OPNFV,
where would I go?
Wiki.opnfv.org.
Easy peasy.
So, they were both great to talk to
and we chatted some more.
And we wrapped up,
there'll be some other stuff
you might hear from them in the future,
but a little bit after that,
you had a chance to go to a conference
and talk a little bit more about
what's going on with OPNFV
and what's going on with OPNFV.
So, if you're interested,
you can go to OPNFV.org
and find out more about OPNFV
and you had a chance to go to another session.
Yes, I did.
And which was that?
I went to a talk about bringing some Scala
into the Open Daylight code base.
Right now, it's mostly a Java code base
and then I guess it's mostly configured in XML,
which are not everyone's favorite things.
I'm sure Linus would not love that.
Not everyone's favorite,
but they're obviously very much used
in enterprise environments.
And the talk was kind of interesting.
There's not a large deployment of Scala right now,
but I know some companies involved in Open Daylight
are kind of playing with it.
It brings a more elegant approach.
It's kind of a merged language
that has both object-oriented
and functional design patterns included in it.
So, it can be scaled a little bit nicer.
They showed some really interesting examples
showing like, here's all this Java boilerplate.
The Scala language also includes a lot of type inference,
that sort of thing.
So, you can save on boilerplate code.
Nice.
As well as, at least for the current version of Scala,
the XML parsing,
XML is pretty much integrated into the language.
So, it kind of makes it very elegant
to work with the configurations
when it's already valid Scala code.
Yeah, not to mention if you've already got
a lot of time spent with Scala.
It's really nice that then you can move that time,
that investment, and that knowledge over.
And then, at the same time,
the Scala code base can very,
or at least somewhat easily,
reference Java code bases, Java libraries.
Oh, yeah, okay.
Saves a lot of time.
Yeah.
Now, that is our experience.
That's our Open Daylight Summit experience.
We might have some future clips coming up
that aren't exactly Open Daylight Summit related.
They were recorded there,
including creating a new distribution around this
and also managing community and infrastructure around this.
But those felt more like those could be applicable
to a lot of different open source projects.
So, I think we'll probably play those
in future episodes of The Unplugged Show.
Now, Wes, flash check there.
Mr. Wimpy, are you still on the line over there?
Over.
I see that name that I love.
Yeah.
Wimpy, hello, Wimpy.
This is even cooler.
Wimpy, I wanted to ask,
what are you learning now about Open Media Vault
and sort of your reactions and follow-up
to the review we did recently on the Linux Action Show?
I know starting with perhaps your thoughts
on how to actually get UPS monitoring working,
which was a complaint I had in my review of Open Media Vault.
Okay.
So, I have decommissioned my Open Media Vault 2 servers
and now have Open Media Vault 3 servers in place.
All in.
Nice.
Not even stable yet and you're all in.
Yeah.
Yeah.
And I did that with 2 as well, actually.
I was running 2 whilst it was in beta for some time.
Nice.
And that's really because I have faith in the project
and the plug-ins that I need are available,
so I'm making the switch.
Yeah.
I've got a simple UPS.
It's connected via USB.
And the plug-in in Open Media Vault is the NUT plug-in,
which is the...
Oh, okay.
It's the network UPS tool or something like that.
Right.
I did see that, but that seemed like that was only applicable
to UPSs connected by IP that manage multiple machines.
Yeah.
It's, I think, a misnomer from the heritage of the project.
It's been called NUT forever, but in actual fact,
it can monitor UPSs that are plugged in over RS232 and UPS.
Oh, that's great.
Okay.
I have one of those.
So, yeah, if you've got a UPS that is compatible with NUT,
it will work with Open Media Vault.
And, yeah, the configuration changes that you might stick in
Etsy default, there's a little text dialog within Open Media Vault
to send your UPS any additional config should it need it
for listening to the data.
So there's some specifics allowed there.
That's nice.
Yeah.
And then you can hook that up.
So the network piece is that you can have one box monitor the UPS,
and then you can have other boxes monitor that machine,
or that machine tell the other boxes.
So in my case, when that main server detects the UPS has gone active,
it then tells everything else to shut down.
Yeah.
Right.
So if I had multiple servers, I could use that.
That is nice.
Yeah.
That is really nice.
Okay.
That's worth spending some time setting up then.
Yeah.
And then generally speaking, I've got the Plex plug-in up and running.
That's doing all of that.
I use NFS because I've got all of my local stuff sitting there running.
I access that way.
I've got one Samba share for when family visit,
and they might want to deposit some photos somewhere.
So I just have a general purpose Samba share up and running for them too.
It's actually very useful.
Data into.
Yeah.
And then without using Open Media Vault itself, I have a Dropbox,
headless Dropbox running.
And I do that so that I have an always LAN sync copy of my Dropbox on the network.
I've done that too.
That makes sense, yeah.
But then what I also do is I do an R snapshot backup of that Dropbox.
So if Dropbox ever go away for whatever reason,
I actually have a full offline copy of my Dropbox.
I should relook at how I do that.
I kind of do something similar, but I'm not using R snapshot,
and that would be a good tool for that.
Yeah.
And then I also have Act Cacher NG, which again is just installed
because it's Debian at the back end.
It's not through Open Media Vault itself,
and that's so all of the machines I have on my network here,
when they do their apt updates, they go through this caching proxy
rather than all sucking stuff down over the network each time.
Now, boy, that is something we should – let's talk about that more next week.
Let's talk about how you do that next week,
because I think that's like digital ocean level local speeds there.
I've got to talk about that.
Yeah, and when you're connected to the internet with a radio connection,
you want that kind of stuff.
Suddenly these optimizations become important.
You know, I wasn't sure if the review was fair or not.
I had a really hard time afterwards.
I wasn't clear because I think it's a really good project,
and I think it is much more competitive than people give it credit for,
or really like the name recognition.
It doesn't get the name recognition it deserves.
Yeah, it's bulletproof.
I mean, your criticism was you had a specific use case,
which was connecting a server to another server over NFS.
Or potentially a couple of back end.
Yeah, and I'd suggest that maybe iSCSI is the better tool.
I think you're right.
If iSCSI is supported by these storage appliances,
that would probably be a better tool, and that would work.
And it would show up in all of the applications as volume.
Yeah.
That would be nice.
I think what I walked away with was a sort of relief.
I know that sounds weird, but I have been feeling anxious
that Linux didn't have a FreeNAS competitor.
Yeah, no, that's very well said.
We don't have a great solid PF sense, at least in my estimation so far.
We don't have a great solid PF sense competitor,
and I thought the same was true with FreeNAS.
And then I looked at Open Media Vault,
and I realized it's a pretty damn good product.
In some ways, the way it is right now kind of echoes
how it is the Linux version of the way FreeNAS is more compared to FreeBSD.
Yeah, yeah.
And those things I like.
I like those things about it.
I like that it's based on Debian.
I like GrayHole.
I like the idea of managing my storage with GrayHole.
That really solved a problem for me that I had
that I couldn't quite figure out how I was going to solve.
And so it's a pretty competitive product, and it has a great heritage,
and it's based on a solid Debian base.
And I wasn't sure how the review came off, but then we got the emails.
The emails started coming in, and I got a few emails where people said,
Hey, after your review, I decided to give it a try.
I'm switching over.
I decided to give it a shot.
And that feels good because I didn't want to discourage people from trying it.
Yeah.
Because I'm actually going to put it into deployment at Angela's house,
and if you think about it, that's sort of the most trusting scenario because I –
You do not want to have to go deal with that.
Exactly.
I want to set it up.
I want to give her a UI for it to work, and I want it to be bulletproof,
and I want to learn from that over time, and I'm going to manage it,
but I want it to be really self-reliant.
Yeah, exactly.
And so that's where we're going to go next.
I was surprised to see that one of my coworkers had an open media vault with ZFS set up.
Oh, yeah?
And he's fairly technical but doesn't have a huge Linux history,
so I was like, well, that obviously works pretty well for you if you can get that going.
He's had it for a number of years.
Well, if you don't know what we're talking about because – who was – Mosinrath.
Mosinrath, if you don't know what we're talking about, open media vault,
go check out the recent episodes of the Linux action show.
If you go to jupitabroadcaching.com and you go to the Linux action show page,
we did an open media revolt just like two weeks ago, episode 436 of the Linux action show.
We did open media vault versus FreeNAS because bump, bump, bump.
Versus sells those clicks, man.
It does, and both Noah and I have a lot of experience with FreeNAS,
so it just made sense that we would be comparing it constantly to FreeNAS.
It's what the market, you know.
And it's what people are curious about.
So that was episode 4, Hyundai, and 36 of the Linux action show,
which is ridiculous that that number starts with a 4.
That's awesome.
That's crazy.
Linux action show is ridiculous.
And also, if you want more open daylight summit or software-defined networking
or just want to get a better feel for what it's like to go to a summit like that,
if you've never been, definitely check out the most recent episode,
437 of the Linux action show, or go to our YouTube channel,
youtube.com slash Jupiter Broadcasting.
There's a mini rover log posted of our trip to the open daylight summit.
Pretty fun.
Yeah, it was fun.
And we did a little video at that place that had the best burgers out.
Okay.
Now, you can stop me at any point if a lie is coming out of my mouth.
Okay, I will.
I absolutely will.
At the lunchbox, while we were sitting there, an intelligent, well-spoken,
attractive, well-dressed young lady came up and started a conversation with us.
And why did she do that, Wes?
That would be my Linux action show T-shirt.
Is it?
It was legit.
For the first time ever.
I couldn't believe it.
That was great.
And we didn't have it on camera.
But we actually got approached because we were wearing a Linux shirt by a girl.
And she was there, a lady, a woman.
I believe it was Intel.
Yeah, I think she was there as, you know, she was there.
But she was just, she loved Linux.
And she came up and said, hey, I saw you had a Linux shirt on.
I just want to talk.
Where can I find out more information?
So if she happens to be watching this episode of the Linux action show, I don't remember
your name.
So be sure to tweet me at Chris LAS.
Yeah, please.
We'd love to have you as part of the community, part of the Mumble Room here.
You should join our Mumble Room.
We're over at jblive.tv.
And here's the nice thing.
The Mumble Room is open to anybody.
So you could join us.
And I have been hoping to get a female voice on this show for a long time.
We get them from time to time when we invite them directly.
But I know our community has, yeah, it would be wonderful to have more.
I have a feeling that you just, you know, don't worry.
Don't worry.
It is a totally low pressure environment.
You come hang out with us.
We just check your microphone.
Go to jupitabroadcasting.com.
We make sure your microphone works and you can join us in our Mumble Room and take part
of our virtual lug.
You can all convert to the calendar page.
You can also leave us your feedback at jupitabroadcasting.com slash calendar or linuxactionshow.reddit.com.
Check out this Sunday's Linux Action Show.
Do it.
We're going to have our review of Plasma 5.8, the long term support edition.
We'll tell you how that goes.
I'm excited already.
Also, I'm sure in future episodes of the Unplugged program, we'll have a little more interviews
from the floor of Open Daylight Summit.
So look forward to that, too.
More community stuff, technical stuff, good stuff.
Thanks for being here.
And we'll see you right back here next Tuesday.
All right, guys, head over to JBtitles.com right now and get your submissions in and
vote, vote, vote.
You heard it right.
That's banksuggest.com.
That is just how I say it.
That was good.
JBtitles.com.
Go there now.
For a second, I thought it was Chris.
Hey, is that Chris?
That's not Chris.
For a second there, they thought it was.
JBtitles.
I mean, you already fooled them with that Plasma video that only kind of sounded like
you.
Who knows?
We keep you guessing on this week's episode of Linux Unplugged.
So, Mr. Wimpy, are you employed, unemployed, employed again?
What's your status right now?
I am employed.
I'm in my second week in the new job.
And how is it going?
Yeah, going very well.
Thank you.
Congratulations.
Glad to hear that.
And already hard at work?
Yes.
Yes.
So I've been getting to know the team and I've been assigned some stuff to get on with
and 1610's around the corner, so everyone's working on fixing the last bits and bobs for
that.
Huh.
That sounds delightful.
And do you get to share what bits and bobs you get to work on?
Well, I'm on the desktop team, so I'm working on desktop stuff.
So at the moment, for 1610, I'm mostly working on some fixes for Unity 7.
But then in a couple of weeks, all of the Ubuntu engineering staff are getting together
for a sprint to plan out the next six months and snaps, Snappy and Unity 8 feature in all
of that work.
I just saw a news item go by that the software center got support for screenshots of Snap
packages.
So Snap packages can have screenshots in the software center, which is really nice.
Yeah, they're just nice.
Yeah.
So the sprint that's coming up is an internal company one, but I was looking through.
There are some guests and some of the same community contributors that were at the Snappy
sprint are being invited back again, so that's good to see.
And are you able to work from home, Wimpy?
Are you going into an office?
I work from home all the time.
So one of the things I've been busy with is actually building my home office.
Oh, I would love to hear about that.
Yeah, so that's finished now.
What do you mean when you say build?
What's the extent of that?
Did you build a new room or did you redo a room or did you set up a desk?
What's that?
When you say build an office.
Yeah, I redid a room.
So I used to have an office in the house years ago, and then after my daughter was born,
that room sort of became the room of crap and boxes and everything that sort of gets
displaced when children enter a house.
And there are things that come in so many boxes, really.
Oh my goodness.
So it was just like six years worth of clutter and mess.
So yeah, it took about five weekends to clear it all up, redecorate.
So I've got three desks in here and two racks and several servers.
Oh, that's great.
Lots of laptops and computers all set up, all easy access.
So I've got lots of space to do my work.
Were you able to make any accommodations for that podcasting thing that you find yourself
doing so much now?
Yeah, so the desk I'm sat on here has got a Rode arm on it with the mic on it so that
can swivel away out of the way when I'm not using it.
And the mixer's on the desk here.
So yeah, it's all nicely arranged.
It's very comfortable.
It's nice when you get a chance to redo all that, when things have transitioned and you
do new things and you kind of have new things that you need to accommodate.
It's a great time to be able to redo the home office.
Yeah, it really is.
And I was reading about working from home, and one of the bits of advice was make sure
your work environment is comfortable and a nice place to be.
So I've worked hard on that.
My wife's helped as well.
So my wife has made this contraption where I've actually got a pull-down green screen
from the ceiling as well now.
Now look at this.
Now what's the green screen for?
Well, occasionally I do video stuff and green screen's handy for that.
Yeah, I've noticed.
Also, my wife is a little bit privacy conscious, so putting the green screen up means that
you can't see anything on her side of the office.
Oh, that's nice.
That is nice.
Yeah, so she's put this green screen so I can pull the green screen down from the ceiling
and tuck it away again when I don't need it.
That's nice.
I was thinking about doing something kind of like that in a workspace that I'm thinking
about using.
So was that actually like a kitsch you bought or how did you get a tuck away green screen?
My wife made it.
That's awesome.
So she bought the fabric a while ago and then she's bought all sorts of bits and pieces
and actually constructed it herself.
So I went away.
So one of the things I was doing a couple of weeks ago is I went to give some presentations
to some charities in this country about Linux and open source and the role it might play
in their organizations.
And whilst I was away doing that for a few days, I came back and found this green screen
hanging from the ceiling when I came back.
So yeah, that was her little job whilst I was away, which is pretty cool.
I didn't know she was going to do it.
That's awesome.
So you got the new computers.
You got a new workspace.
That's a good setup.
Yeah.
Yeah.
I'm all.
Yeah.
Yeah.
Yeah.
Yeah.
Well, that sounds really cool.
I would love to.
Do they take.
Do they have guests over there?
Of course, you don't.
Have you ever.
Have you gone to their officials?
So how did that work?
Like when your first couple of days and orientation, did you travel?
You traveled to an office.
You spent time there.
And then once your actual day to day work started, you went back to your home and started
working.
Nope.
Nope.
It was all done remote.
So I have been to the.
Yeah.
Yeah.
It was.
Yeah.
So I have been to the office once before, but that was, you know, as a community contributor,
right?
You might remember I took part in the user testing studies for Unity eight a while back.
So that's the only time I've been to the, to the main office.
But no, they the various departments liaise with you remotely and leading up to it, you,
you do things like sorting out your payroll and all of that with the HR departments.
Right.
And then on day one, you get all of your accounts allocated and you through launch pad you log
in and then you're able to access an area where you can access all of your credentials.
And then the first day is basically setting up all of your, you know, access to everything.
Yeah.
Yeah.
And and then as you access things, you then find out it's like, it's a bit like a, um,
an adventure game, you know, as, as you set up an account and access something, you then
find all those, all of these extra things you need to do first few days is sort of,
you know, chasing around and getting yourself set up on all the systems and everything is.
But yeah, that all happens, all happens remotely.
It's like.
Wow.
Impressive.
Yeah, it is.
Actually, it's, it's fairly impressive.
I guess, I guess that is probably, they've probably worked in a mode where so many of
their workers are remote for so long that they, that's exactly what you do.
And you think, you know, it's kind of, it's kind of funny because that's kind of becoming
more and more common because they've been kind of common for us.
We work with probably more people remotely than we do.
So yeah, I guess it's just kind of becoming the way more modern businesses is happening.
So you should get like a 4k video wall and it's like everyone's in the same room.
I just settle for mumble.
I'll settle for mumble.
Yeah, I have, I have put a TV up on one of the back walls in the office with a Roku attached
to it to have bits and bobs playing in the background whilst I'm working, you know, stay
up to speed on the news and things and listen to podcasts.
I have gotten a lot of distance out of a Roku and now the Android TV to the point where
it sort of changed the way I do my own content because it is, the YouTube algorithm is once
you start feeding it properly is actually pretty good in a weird like, it manages every
day now to expose something that I find interesting to watch on YouTube and now it's all just
sort of integrated into my television.
So I listen to a lot more YouTube shows than I used to and then I have ways from pocket
cast directly on my TV to Chrome casting it or whatever, you know, whatever method you
want to get the audio to move around so I can listen to podcasts on my TV too and then
continue to play them on my phone later.
It is getting to the point now where when I first started doing podcasts, the only people
that were listening were people that were downloading the files and then syncing them
to a device of some type that was capable of doing a playback of some kind and maybe
through like a tape adapter in the car or something like it's legitimately like it was
there wasn't really there wasn't Bluetooth in the cars, there weren't smartphone apps,
there weren't internet connected TV set top boxes and it was and now like you can get
the JB Roku app or the or the JB Cody add on which Rob Loach is working on right now.
You can get and then you can just like you can just watch all our stuff like it's just
it's just it's on this there's a there's a here's an icon for Jupiter broadcasting here's
an icon for CBS News it's like it's we're all like the same playing field you just have
to know about it we're not on the same just like discovery is still a challenge but the
availability from where it was eight nine ten years ago oh my god yeah so I love the
Roku I love the Android TV not huge on the fire but yeah yeah I've kicked my Amazon fire
TV into touch now it lasted about a year before the Roku the the new Roku just yeah surpassed
it in terms of media playback yeah the the gaming aspect of the fire TV was fun but it
wasn't enough to keep it keep it in the room that is that is a surprising that is coming
so I you know I have the shield TV at the RV and the kids are driving more gaming oh
really and I wasn't really something so that when you buy an Android shield TV thing whatever
it's called a video Android shield TV whatever it comes if you get the cheap one the one
that I actually I paid full price for it comes with a game controller and not a remote and
I thought and it's a it's a decent like Xbox 360 knockoff game controller I thought that's
weird and then if you get like the pro version it comes with a remote and a controller and
so they really put an emphasis on the controller and I I now have started to realize that what
Nvidia is doing is they're combining like a curation of really good Android games like
the really good ones the ones that like don't I don't even I don't even really know I didn't
know some of these games are even available for Android plus they're combining with like
some sort of remote GPU streaming service that they offer that was like online see that's
really nice I haven't tried that yet but so you can get all kinds of regular desktop games
for a $7 a month subscription and the kids that sounds great is for them it's it's it's
fantastic and so we're getting price there's probably a lot of games for them to try and
so like right now on the from the shield TV we have like a Mickey Mouse game and a Ducktales
game and Raymond runs games you know just really basic games but for for young kids
that can they can now get to play their their experience of gaming so far has been on an
iPad or an Android tablet like it's very it's very like it's a very vertical you know personal
gaming experience it's not a collaborative gaming experience it's not a whole the whole
family sitting on the couch all yeah all trying to figure it out and that's what's been really
interesting is now all of a sudden we've we've just sort of stumbled into this because the
shield TV has all this gaming capability just and we started you know a while ago on the
Roku with some of the simple games like Angry Birds and stuff like that and that's kind
of where I had a sense that they would be into it but I don't have the funds to buy
a gaming console but the shield TV has some legitimate graphics multi-purpose trying to
which I realize is not the newest game but oh my god just trying to look at 1080p on
your television I've had older laptops that struggle with that we just sit there with
our get with our mouth gaping it's so gorgeous it's just it's just really really really beautiful
and it's 60 frames a second smooth you know really nice and that has been a surprise is
because now it's dad can we dad can we not what do we want to watch but what we can what
can we play and what's been interesting is how adorable they all are working together
trying to solve the problem you know which is yeah that's that's that's the nice thing
about having on a TV that a console kind of brings into a family that having a computer
or a tablet doesn't really and just sort of fumbled into it a little bit yeah well
