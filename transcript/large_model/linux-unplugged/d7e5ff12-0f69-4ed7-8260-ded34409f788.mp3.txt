So there's one thing I thought we'd talk about before the show starts, and that's the Omega
2, a $5 Linux computer with Wi-Fi built in.
That is nuts.
And of course, it's on Kickstarter with Kickstarter music.
We use development boards to build all sorts of cool stuff.
Most development boards on the market fell short of our expectations.
They're bulky, confusing to set up and over complicated.
We usually spend far more time reading the documentation than actually using them to
build things.
Today, we're changing that.
That is one of the dumbest statements I've ever heard.
Say hello to the Omega 2, the world's simplest development board.
The Omega 2 is tiny.
At less than a quarter of the size of your credit card, it can easily fit into any project.
But don't be fooled by its size.
The Omega 2 is powerful.
It is a full Linux computer.
That's right, this tiny purple thing runs the same operating system that powers some
of the world's most efficient infrastructure.
The Omega 2 works out of the box.
It comes with built in Wi-Fi and onboard storage, so it comes to life the moment you power it
on.
Onboard storage for something that small is impressive.
Built in Wi-Fi too.
You can control it with apps just like your regular computer.
We even have an app store so you can discover apps created by the community.
The Omega 2 is easy to program.
In fact, you don't even have to write any code.
It supports Node-RED, a graphical tool that you can use to create programs by simple drag
and drop.
But if you are into writing code, the Omega 2 supports many programming languages.
So I was a backer of the Omega 1 and also TechSnap host Alan Jude, huge fan of the Omega
1.
They actually really delivered on the first Omega.
So they make some pretty funny claims, but they are already, because of their past success,
they are just, look at this, they are crushing it with a goal of $15,000.
They have raised $268,392.
Holy smokes, so the Omega 2 is coming.
I don't know, I'm interested, especially with the built-in Wi-Fi.
Incredible.
Yeah.
I wonder how...
This is considerably incredible.
Can I just back that right now?
With Wi-Fi and storage built-in for $5, will it really be $5 when it ships?
See if you pledge $10, you get your hands on the Omega 2 Plus, double the memory and
storage and double the fun.
And it includes a built-in microSD slot and shipping by November too.
Wow, really?
I guess that they've got the supply chain down.
Yeah, they've got the supply chain, look at that, look at that compared to a size, that's
compared to a cherry right there.
That is amazing.
That is amazing.
This is Linux Unplugged, episode 157 for August 9th, 2016.
Welcome to Linux Unplugged, your weekly Linux podcast that's wrenching all of the news out
of the dry August month.
My name is Chris.
My name is Wes.
Did I get that right, Wes?
Pretty good, pretty good, Chris.
I like it.
Actually, I thought at the beginning of the week we were going to have a small show for
you.
And I hate saying that.
Right.
And I thought, okay, maybe we might end up with a medium-sized show.
We were hoping for a nice, medium, average.
Yeah, because August tends to be a little slow.
People are on vacay.
Yeah, exactly.
But no, it turns out we have a big show coming up on 157.
Linux botnets are on a rampage, apparently.
And it's because you suck at managing them, at least according to experts, quote, unquote,
will tell you about this ridiculous story.
The guys over at Solace have a pretty nice, solid upgrade.
Humble has a bundle that actually includes some Linux games.
We've got some benchmarks that compare Ubuntu versus Ubuntu on Windows, native versus Windows.
And it's actually kind of interesting.
Snap's got some updates.
And then later on in the show, we're going to talk about our favorite SSH hacks.
One of the coolest tools ever invented for internet communications, built right into
our Linux box.
And there's so many neat things.
So we're going to go around the virtual log and talk about some of our favorite SSH tricks.
And Wes and I will share ours.
Plus, we'll tell you about a new feature in OpenSSH 7.3 that was just released that's
really cool.
Then after all of that, inspired by Noah's app pick this week, I'm going to talk about
how I have recently started using tag spaces to tag and manage my local encrypted text
files with a system that allows me to add keywords and groups and labels and metadata
information on top of my file system.
Whoa.
Yeah.
That's very interesting.
It's tag spaces.
The communities, all credit goes to them, really.
I tell you.
You know what?
Somebody pointed me in the direction.
I looked into it.
And I was damn impressed.
So I've just started messing around with it.
I'm going to give you my quick take on it.
But before we do that, we have community updates.
So let's bring in our virtual lug, time appropriate greetings, mumble room.
Hello.
Hello.
Hello.
Greetings.
Hello.
Hello.
So I'm excited to break this next story down with you guys.
Hello.
Hi.
This, you know, I just, I smiled when I saw the headline.
It was one of those where I saw it go by and I'm like, open a new tab, coming back to that
one later.
And it is now time to share it with you.
Linux botnets are on a rampage.
That's right, Wes.
Not just your average rampage.
Oh, no.
Oh, no.
A rampage of epic proportions.
Linux-operated botnet distributed denial of service attacks have surged in the year's
second quarter due to a growing interest in targeting Chinese servers and Wes.
This is according to Kaspersky Labs that was in a report released last week.
Now, I'm scared.
I'm just going to come on right and say it right now.
I'm scared.
How does Linux fit in?
Well, the Linux server is the go-to platform, they say, for orchestrating denial of service
attacks because of its latent vulnerabilities, said Charles King, a principal analyst at
Pund-IT.
A common problem is they're not protected by reliable security solutions.
He goes on to say.
Oh.
Is he perhaps a vendor of any of that I could buy for him?
Why don't you Google?
I have a hyperlink, but it's Pund-IT, P-U-N-T-IT.
Let's see.
Their URL is Pund-IT.com.
We shouldn't give them any promotion, but that means you got to look for me.
All right.
So he goes on to say, this is a quote from this principal analyst here.
What the hell is that even?
That makes them prime targets for hackers, especially those that leverage C&C servers
to centrally manage and carry out denial of service attacks.
This is what he told Linux Insider.
Deploying leading security solutions as well as utilizing and updating established Linux
distros can go a long way to protecting against these kinds of issues.
So what are you grokking when you visit their website there, Wes?
They have some solutions they could sell me, perhaps?
Actually not much.
It's a pretty minimal website.
So this guy's a BS guy?
Yeah.
Oh, my God.
I got to show this on the live stream.
This is embarrassingly bad.
You have to see this.
This is like a WordPress template.
This is as low-budge as it gets, and this is a leading principal analyst that is railing
against.
OK, so he goes on.
This expert goes on to talk about how, and by the way, listen to the logic in this.
Listen to the logic, and tell me how much sense this makes.
He goes on.
Remember, this is a botnet rampage, breaking news, you guys.
We don't see any changes in tactics.
Brute forcing passwords, exploiting common vulnerabilities in web applications, hijacking
or sniffing wireless communications.
These are old and well-known issues and threats.
Now brute forcing passwords, exploiting common vulnerabilities in web applications, and hijacking
or sniffing wireless communications.
How is this taking advantage of latent vulnerabilities, quote unquote, in Linux?
Stiffening wireless passwords and brute forcing passwords, that's not latent vulnerabilities
in Linux.
This is trash.
Mm-hmm.
Which, I mean, not to say that there aren't, or that Linux security is a very legitimate
topic, especially in IoT in that rain.
But yeah, you're right.
What he was saying before really seemed like it was going to be a kernel level or something
at the core here.
Yeah.
Now, John McCarty, he's got a Cisco cert, and he works for Aztec Consulting, and he
is a direct quote, Linux is becoming more commonplace and used in most embedded systems.
Okay, well, that's actually wrong too.
I mean, Linux isn't becoming commonplace in the server environment, which is the context
in which he's speaking.
Linux has been commonplace.
So that's, okay, that's a minor thing.
And in embedded systems, yeah, Linux is pretty successful, so is NetBSD, so is Android.
Those are other platforms that are also successful.
But he goes on to say, these implementations are often not hardened or patched or upgraded
regularly.
I agree with that.
Which has led to these systems being compromised and becoming part of a botnet.
I would like to see numbers, because to me, and I absolutely have participated in the
hysteria.
I hand up...
I thought you were going to say you participated in a botnet there.
No, no, hand up to the sky.
I have participated in the hysteria, but the hysteria goes something like this.
There are so many unpatched Linux devices all around the world that at any moment the
entire infrastructure could go Mr. Robot on us and we could all come crashing down.
Oh my God, all of the patches.
That's the hysteria.
But we actually haven't had a doomsday scenario yet.
There hasn't been that moment where everything's come crashing down.
It is definitely reasonable and logical to be concerned, prepared, and thoughtful about
this issue.
But it is not necessarily reasonable to be so hysterical to say that Linux botnets are
on a rampage because people can sniff Wi-Fi and crack passwords.
There's a cognitive disconnect here.
I also wonder who exactly this article is targeting, because it's either just the lazy
sys admins, but there's not a lot of technical details.
And it really doesn't help a desktop Linux user to do anything except for maybe go try
to buy antivirus software that they don't need.
You know what?
We'll bring up the antivirus software when it comes back to the Ubuntu on Windows benchmarks.
Turns out, big, big difference there.
All right, so just wanted to put that out there.
You'll see the news.
Linux botnets on a rampage and it just, I scratch my head.
I don't see Ikey or Josh in the mumble room today.
They're probably too busy blogging or something.
They do a lot of that.
They do have some new features though in Solus, which I wanted to just mention really quickly
because I'm always impressed with at the speed they get this cool stuff out.
They've upgraded their entire Gnome stack from version 3.18 to 3.20.
Nice.
Yeah, I know.
That's not just nice because Gnome 3.20 is pretty solid.
It also means you get things like Flatpak, but it's also, what's really nice is a lot
of the GTK desktop distros, not all of them, and with some significant missing notable
ones, but a lot of them are all landing on 3.20.
It seems like a milestone release.
Yeah, it's becoming a nice base, reliable.
I think the 3.20 will become the GTK platform for a while, and so it's really nice to see.
That's just, I think, I don't know.
Maybe not.
It'd be nice.
It's a nice round number.
Yeah, and it seems to have a pretty wide adoption.
Another major change in Solus is they've got Linux 4.7 in there now, which of course brings
better hardware support and under the hood improvements like AMD GPU support, PowerPlay
support, NVIDIA GeForce 800M support, and Maxwell support, as well as C720 trackpad
support, finally, and last but not least, USB 3.1 support, as well as support for third-party
generation or random generation of Thunderbolt IDs, Polaris architecture support, multiple
Radeon features, and Skylake improvements, as well as whatever SKL, RAPL support is.
In color management.
It's a color management thing that's way beyond.
Yeah, me too.
But apparently it's in Solus.
It sounds like a great kernel to have.
It does sound like a great...
You know what?
It sounds like a great distro.
Yes, it does.
Legitimately, me, I'm always the one that's like, oh, it doesn't have these packages.
But if Aiki could get over his apparent philosophical hump about SNAPs and more and more stuff started
coming out of SNAPs, I could use Solus's...
I mean, imagine if the world's largest Linux podcast was using SolOS, or however it's pronounced,
on its desktop.
And not only would I be using SolOS on my desktop, but I'd be screwing up that pronunciation
all the time, so they'd be getting multiple name mentions.
It's great.
It's great.
And so if they just implemented SNAP support, I could almost do it.
It's ironic, isn't it?
It's ironic.
Is this your tacit endorsement?
What's that?
Oh.
Hello, sir.
Wait a minute.
Wait a minute.
Wait a minute.
Did a wild Aiki just show up?
Like you say his name three times.
He pronounces distro wrong.
He's there.
Yeah, I love it.
Okay.
So wait a minute, because last time you and I talked, you were like the anti-SNAP guy.
Well, at least you very well articulated the other side, I should say.
Yeah.
I mean, it's a case of far and against, but I mean, we've been a little bit more flexible
about a couple of things lately, like Electron apps are now allowed in Solus.
Oh.
That is a big step.
Such as Slack.
Like I was vehemently against that and wanted it to die in a fire, but I've allowed it in
because at the end of the day, once you sit down there thinking, it's like, I'm a C guy
and I'm going to hate basically every bit of software that's ever been written by anyone,
including myself.
Yep.
So I was like, well, you know, it's not really about what I want, is it?
It's kind of what the users want.
So Electron apps and things like that are now finding their way into the repos.
I mean, we've had Kodi and everything going in in the last few days.
Really?
Wow.
We've had like huge growth in the last few days.
We've completely redone our infrastructure.
You know, we've solved massive bugs that have been there since 1.0 in the last few days.
Complete stack updates, Skylake, Maxwell, Polaris support, everything's just landed.
So what I've said is I would allow snaps as a secondary deployment mechanism, but never
as a primary.
I think that makes sense.
I mean, yeah.
I mean, if you wanted that available, like then yes, that could be done, but I mean,
as a primary mechanism, that's kind of what I'm trying to get across.
Mm-hmm.
Yeah.
And I don't know if everyone agrees with you on that point, but I can see your perspective
on it for sure.
Yeah.
I mean, we spoke about the difficulty of dev deployment, didn't we, before as one of the
main reasons for wanting something like Snap to exist.
But I mean, you've seen what we've done with this last stack of updates.
That's just kind of not really possible anywhere else ever.
So the way that we're built works for us, but as a secondary mechanism, yeah, I mean,
I can make some exceptions.
Yeah.
I think at least for our case, it comes down to like sometimes you just, even if it's a
little bit ugly, there are times where you just need some software.
Very practical.
Yeah.
It's not about, it's about like, oh, I have to have this.
Yeah.
I'd really love this thing.
Right now, it'll solve my problem.
I'll uninstall it later and be done with it.
Man, there's even apps where I'll make wine.
I'll use wine as a compromise for that.
And that really saves you something.
What I would really do, really, really, really strongly request though, like if you started
to use Snap, I'd always suggest like whatever the app is you happen to be using, just request
that we put it in a repo and we make sure it's integrated natively.
So do you remember we spoke before about having the maintainers between the package and the
distribution, right?
We just spoke about updating to GNOME 3.20.
One of the first bugs I hit was actually launching GNOME calendar, which all of a sudden decided
it absolutely required GNOME shell for this one particular setting, which happened to
be, do I show weekdays or not?
And these are the kind of bugs that come up where you need the maintainers because that
could have been deployed as Snap and it's like, yeah, I don't know what I'm doing.
I don't know how to run.
What the hell, what?
So I think that's where you need that middle ground.
And at the end of the day, we would like to get things integrated better, just so they
run that little bit better for solos.
Like I mean, we've just integrated Golang 1.6.3, Rust 1.10.0.
So you can build these things natively.
You can take advantage of more updates.
And you know, like if you've got an app or something, solos is, you know, we're kind
of going to bend over backwards for app developers.
So as an example, Budgie took something like five or six months to get into Debian after
going through all the political process with Debian and Ubuntu and then getting it sponsored
and monitored because that's how things roll over there.
And that's the same for any new app.
And solos, we kind of need the apps to be here.
So we're going to make sure your app is out there.
And you don't have to wait for a new major release for somebody to get your features
or rely on a snap.
We'll make sure it gets integrated and it's working properly.
So that's kind of our value add.
So having the native forms over the snap packages, it's always going to be preferable.
I will definitely give you this.
You know, you are catching my attention with these releases.
Yeah, me too.
I'm going, I'm looking at that.
And Ike, I swear I was thinking of you on Saturday because I went to go fire up a game.
I think it might have been Starbound, but I can't remember which one it was.
And I got a bunch of Intel driver errors.
That Solus runtime, man.
Yeah, I know.
I think about that too.
That's exactly what it was.
I had to go.
Essentially, there's just Arch, Intel, like you really the solution was go use all your
native libraries.
Go get rid of the steam stuff that installs.
I think we've been in the same place with it.
I thought the Solus, I thought, son of a gun.
Well, I've got news for you there.
So you've got, yeah, I was surprised to see this turn up.
So some nice soul has packaged up Linux Steam integration in the AUR.
Yeah, I saw that.
It doesn't install.
Yeah, I forgot why it didn't install for me.
There was.
Okay, so you have to move your user bin steam to wherever it's configured, the steam to
really exist, which is going to be like user lib steam or something like that.
Take a look at the package build to see how they're configuring it, but you need to mask
where the steam binary is, but then just install that.
And then, you know, you'll be using LSI instead.
God, I do love Arch though.
This could almost be Arch's slogan.
If it's great, it'll end up in Arch.
Well, and I think that's where something maybe that to go back to earlier, the snaps kind
of play a role, especially if people are good about asking you guys to upstream stuff.
That's kind of what the AUR does for Arch is like a proving gown.
How much interest is there?
Wouldn't that be interesting if you could derive user interest by watching snap packages
and seeing, okay, well, this is probably something we should just bring in house.
Huh.
Interesting.
All right.
So, let's take a moment and talk about snap since we've been talking.
There's just been a pretty cool update, and then after we talk about this, I kind of wanted
to pick Wimpy's brain because he published a snap package that I am particularly interested
in.
So, SnapCraft 2.13 and SnapD 2.11 landed with support for downgraded and installed snaps
as well as other things like new commands, buy, try, find private, disable, refresh,
and revert.
These new commands let users buy various applications that are being distributed in snappy stores.
Also, they obviously allow other, not just Ubuntu, but other distros to do the same thing.
They also allow you to find private snaps, which I think is an interesting concept, disable
installed snaps altogether as well as downgrade any snap package you've installed.
Now, this is definitely turning on some of the obvious features that snaps can provide.
When logged into a store, snap find dash dash private lets you see snaps that have only
been shared with you.
That's pretty interesting.
So, snaps are getting some pretty cool updates.
And I wanted to pick Wimpy's brain about one of the snaps he published recently about maybe
the process, what it was like.
It's called PodPublish, a tool for encoding and publishing podcast content and assets,
which has been, I think, a fork of something that Stuart Langridge started a while ago.
And I've seen people that work on some of our GitHub projects associated with this.
Wimpy, what is PodPublish and what was the process like of creating a snap of it and
then publishing it somewhere?
PodPublish is a re-implementation of BV Publish that's written by Stuart Langridge for publishing
the Bad Voltage podcast.
And is this like a bash script or is it something beyond that or is it like a series of prompts
that it asks you for information about the show and does like the tagging and encoding?
No, so Stuart's was a Python implementation and I know Python, so my implementation is
in Python as well.
You basically have, in its simple form, you have two commands, encode podcast.
And to invoke that, you point that at a configuration file.
And in the configuration file, you specify the paths to your artwork and show notes in
markdown and what the episode number is and all of that sort of thing.
And it supports string interpolation.
So you can define some sort of like global variables, if you like, in the configuration.
And then they'll be inherited into the various, yeah, exactly like, yes.
What does it assume is on the other end receiving this information?
At the moment, it will, for the encoding process, it'll encode to OGG and MP3 and MKV, which
is H264 with AAC audio.
And the MKVs are specifically designed to go into YouTube with little to no reencoding
on YouTube.
That is nice.
Good idea.
So in terms of the...
Yeah, go ahead.
And in terms of the publishing, it will publish to SSH or SFDP using just about every authentication
mechanism you can muster.
And it will also publish to WordPress, it assumes PowerPress at the moment as the only
backend.
In fact, actually, it doesn't assume any backend at the moment, it'll publish to WordPress
and also upload to YouTube.
You can define in the configuration which of those you have enabled or not.
So at the moment, the Ubuntu podcast YouTube channel is banned for the second time.
So we have that feature disabled in our configuration file right now.
How does that happen?
How do we get banned?
Yeah.
Because we've got out of copyright theme music from 1927 that somebody claims is in copyright.
Oh, here's the thing.
That literally happens to me three, four times a day.
So I don't understand why you got it.
Yeah, it's a long, it's a long, tedious story.
We uploaded a load of stuff at the end of last year.
We basically uploaded the whole back catalog of every of the previous eight years.
That'll do it.
Yeah, and that and we got community strikes for that and then got banned.
Yeah.
Yeah, it doesn't take much.
Then we persuaded them that we've been ignorant, but not malicious.
So we were unbanned.
But then we'd got a couple of strikes remaining on a few podcasts, you know, a few episodes.
So I filed an appeal against one and it was successful.
So I thought, brilliant, I'll just do the same appeal against the other seven.
And then we got banned again, because you're not allowed to appeal more than one at a time.
Yeah, isn't that a great system?
Wow.
And legitimately, I have, I have thought about on, you know, just sort of principle getting
off of YouTube.
But it really is, it really is a good platform for so many people.
Like I just asked him on the Linux action show on Sunday, hey, you know, give me a comment
if you watch the this entire show on YouTube, because it's not common for people to watch
long shows, lots of comments from people saying they did.
You know, I watched the entire show also, if you're on YouTube, thumbs up this video
right here.
Do it.
If you if you listen or watch the entire Linux unplugged on YouTube, give it a thumbs up
because what I want to demonstrate is there are a huge amount of Linux users that and
there's lots of reasons I hear work blocks RSS feeds like feedburner.
Oh, that's a common one that I hear is work blocks x and the only way I can get around
it is I use YouTube DL or something like this to pull your show down the playlists or whatever.
Yep.
So there's a there's a huge percentage of people that have like deals for YouTube.
Like if they watch YouTube, they get a they get it for free or they get a deal or doesn't
count against their cap or even for ISPs.
And so that's so there's a lot of reasons to be on YouTube.
Makes it really easy to do Chromecast, that kind of stuff.
Yeah.
So I feel you wimpy.
I'm curious about this stuff.
How from just from the Python angle from like, you know, like for the virtual env or pip
requirements, how is the snappy packaging gone?
That was actually quite straightforward.
The only complexity with snapping that application was originally the in snaps, you can stage
packages and that means pull in a deb and put that in my snap because I want to use
it or things that are in it and I originally staged FFmpeg and that didn't work.
But now snaps have got they originally called wiki parts and I think they might be called
online parts now, but a way of pulling in an existing snap source part into your snap.
So now the pod publish snap actually builds FFmpeg in the specific way that's required
by pod publish within the snap.
So it's got its own special version of FFmpeg integrated within it.
That's very interesting.
So that was the only on the only sort of caveat, but it works quite well.
It works better that way, actually, because you can, you know, customize it just enable
those codecs that you need and keep the size of that FFmpeg implementation minimal.
Yeah.
OK, so what when you hear something I think we haven't figured out yet with snaps and
it's probably going to be true with all the other universal application installers that
may or may not come to fruition.
There's there's no there's no contract.
There's no there's no guarantee on updates.
You know, I, for example, I'll use the snap for Telegram and then very quickly discovered
that it's several releases behind.
And then I realized, oh, yeah, of course.
Just because I'm using a snap doesn't guarantee I'm going to get updates back to Ike's argument
about just using, you know, the distro's repos or package management system.
But Wimpy, what are your thoughts on that?
When you publish a snap, what is sort of the implied contract there and and what are your
intentions with something like with like Pod Publisher or other snaps you publish?
So you talked about the new version of snap earlier, 2.13, and you mentioned the refresh
command.
That is the command that will update your installed snaps.
But it's still incumbent upon the snap author to actually...
At the...
Sorry, go on.
Carry on.
Well, I mean, that my issue appears to be that the snap the snap authors are not updating
their packages all the time.
So the issue is not so much that I don't have a mechanism to update the snap is that they
are not...
How will you know what the schedule is?
What?
And what is the...
There's no implied contract yet.
There's no established norm.
It seems like some it seems like it's just up to the whim of the...
Does it follow the master branch?
Does it follow stable releases?
Does it follow?
Yeah.
Nothing at all.
So the version of the snap should tell you what version it's using, whether it's, you
know, tip of git or a git snapshot or a stable release version.
And a lot of the snap activity that took place making snap packages that took place through
the snappy playing pen initiative was lots of people making snap packages to find out
where the edge cases were where it was difficult to, you know, create a snap or impossible
in some cases.
The product of that is to try and get those snap craft packages that were made adopted
upstream.
So the view of snaps is it's the upstreams that will actually maintain the snap packages
and they will release snap packages in accordance with their release schedules in the same way
that they release new tables, for example.
I see.
Like in a sense, you could have it almost integrated in with the CI systems or anything
else.
Yeah.
Yeah, you can.
I mean, everything in...
I think this is true.
If it's not true now, it will be.
Everything in the snappy playpen is actually built in Docker containers in Travis CI, for
example.
So, you know, it's quite easy to hook that stuff up.
I like that.
I have an idea for a new show, just a really simple show kicking around in the back of
my head that would probably be only an MP3 just because it'd just be for fun.
And I really like the idea of installing pod publish as a snap and then using that to publish
the show.
So that would be a totally cool workflow to just, you know, use a snap in a way that is
in a production workflow and something that would, you know, I just think it'd be a really
great experience.
Especially with these new updates.
That's where I'm kind of curious to see how snappy snap packages get deployed to enterprises.
That's one big thing where it's like, if we've deployed our new release, we really need to
roll back in the next 20 minutes.
And so having these kind of tools integrated in.
Yeah.
Yeah.
You mentioned snap revert, and that's the tool that does that now.
So you can manually roll back to the previous version.
And it doesn't just roll back the app, it also rolls back the data for that version
as well.
I see.
So if you've got, if you've interest in, you mean when you mean data, do you mean application
settings data or do you mean user data?
Yeah.
Okay.
Application settings data.
Well, it could be both potentially.
It depends how that application is, you know, whatever's in the sandbox or that sort of thing.
Yeah.
Okay.
Okay.
Wimpy, while we've got your ear, I would love to know more about what seems to be a pretty
neat development and kind of makes me want one of these BQM 10 tablets even more.
I saw it come across your Google Plus feed here.
This to me, and I'm, you know, just looking on Google Plus, but it looks like Ubuntu Mate
running on the BQM 10 tablet full on touch and everything.
But that couldn't be, that couldn't be because this is the Mate desktop and et cetera, et
cetera.
Yes, it is exactly that.
So like all of the best developments in Ubuntu Mate, this came from the community.
It came from a guy called Marius Quebec, I hope I'm pronouncing your name correctly.
And he had worked with somebody else to come up with the basic principle of how to get
this going.
And he posted on G Plus and I saw it and said, please document how you did this because I'd
be interested in taking a look.
So a few days later, he pings me and sends me a document on how we did it.
And then I looked at that and then started to think about how it could be refined a little
bit because, you know, that's what I do.
You know, when we had the first Raspberry Pi version, I took a look at that and figured
out how it could be slightly improved and the same with the power PC port and so on.
So I've taken a look at what Marius has done.
And essentially the way that he's done this is to take the Xenial pre-install image of
Unity 8, stick that into a CH root on the BQM 10, bind mount the relevant places, launch
Exmere and then spawn the, oh, and then what he does is he then installs the Ubuntu Mate
Core meta package over the top of the Unity 8 CH root and then spawns the Mate session
into that Exmere window.
So and it works, you know, touch works and you can rotate the screen and the screen resizes
and it does all the things you'd expect it to do.
And you know, you've got things like Firefox pre-installed, which actually work very well.
Curiously, it seems to work better than the version of Firefox that's shipped along with
the M10.
I haven't quite figured out why that can be the case, but it appears to be.
So because I've done the work with the Raspberry Pi images, I've got a build system for making
root file systems for RMHF.
So I've been tinkering with that so that instead of having to put the Unity 8 image on and
then install some extra stuff into it, I've made just a Mate core root file system that
you can just extract directly and use that directly.
And I'm just trying to clean up some of the rough edges and find out how to integrate
it a little bit more seamlessly because it requires a little bit of hackery in order
to sort of put the scaffolding up for XMirror and then run the session.
You have to do it all through the phablet shell and I'm trying to find a way to do it
directly on the tablet so you can just have a launcher icon, click it and it starts.
Here's my use...
Oh, go ahead.
Oh, maybe you're about to say it because I think my use case fantasy for this is not
so much in full on tablet mode, although that sounds useful when I need something quickly
and I'm on the go.
But to me, what feels like the real ace in the hole use case for this would be I connect
it to an HDMI hookup and a Bluetooth keyboard and mouse and now I'm using the Mate desktop
on a lower end resources machine on a large screen that has, you know, perhaps a better
response time.
But I don't know.
I mean, what is the use case here?
Because this seems...
It seems at first like not...
It seems like Ubuntu Mate is not itself lended, as you might say, to a touch environment.
It is not necessarily the one I think of when I think of a touch screen experience.
No, it's not.
I mean, you can do a surprising amount actually by touching the screen on Mate and in Mate
1.4 we added some new features so you can make the menu icon sizes and the panel icon
sizes much, much bigger without changing the DPI of the whole UI so you can actually make
those a little bit more touch friendly.
Honestly, myself, I would absolutely...
Even if there was, let's just say, a compromise in some of the usability in a touch experience,
if it meant it was a useful practical desktop experience and then I could have the same
information and the same state when I'm on the go and when I'm hooked up to a...
The same state.
That's really what it is.
If I have notes in gedit when I'm plugged into my desktop when I'm at the client's desk
sitting down trying to remember what it was or when I'm at work trying to remember that
great idea I had for the show, that same gedit doc is still up on the screen.
So what's important to understand here, this is not Ubuntu Mate running on the tablet instead
of Ubuntu Touch.
It's like running inside Ubuntu Touch, right?
It's running inside a CH root inside Ubuntu Touch and it's effectively like a full screen
app.
So you can still swipe in and switch to the native touch apps, but you can go back to
it as it is its desktop and it will work with Bluetooth mice and keyboards and all the rest
of it.
Is there a performance penalty there?
There doesn't seem to be.
It's running extremely well and because it's running in a CH root, you've got apt so you
can apt install those applications that you want into that CH root to add the functionality
or application richness that might currently be missing from the Ubuntu Touch ecosystem.
All kinds of tools I could think of.
Absolutely.
Hmm.
That's neat.
So Wimpy, in your estimation, what's sort of the fundamental thing that made this possible?
Is it once you get Ubuntu on a device like this, you can sort of just build out from
there?
Was there something else that made it?
Was it a firmware thing?
What was the quote unquote enabling technology for this?
It's two things.
It's Ubuntu and Exmere.
Right because this is running under Exmere, isn't it?
Yeah.
The whole that whole desktop environment is rendered with Exmere.
And the performance is still pretty solid.
It's great.
Boy, that's...
See, that's exciting.
Mm hmm.
Good.
Well, look at that.
And, and it's...
So there's there's quite a bit of refinement to make this a thing that people can use trivially.
I mean, it's fairly trivial to use if you're comfortable with the shell, but at the moment,
you have to have a computer hooked up to the tablet in order to, you know, bootstrap it
all.
I see.
You have to have a computer around that so you can bootstrap it from the tablet directly.
From the tablet without an external Linux system.
Exactly.
That is going to be something the iPad could never do.
No, right?
Like that's a fundamental...
Yeah.
And it doesn't have to be, you know, Ubuntu Mate.
That's obviously what I'm interested in.
It could be Zubuntu, Lubuntu, Kubuntu, Ubuntu Unity, Ubuntu GNOME.
You know, all of those will do it too.
Hmm.
Well, that sounds super awesome.
Now picture it, friends.
Picture it.
You take a BQ tablet like that and you combine it with a data connection from Ting.
Oh, I know.
I know.
It sounds impossible, but friends, it is possible and it just got better than ever.
In fact, if you go to linux.ting.com, you support the show and you get a little money
off your first Ting device.
Yeah, yeah.
In fact, if you...
You know, here's another thing.
If you bring a Ting device, something when I say a Ting device, that's just a GSM or
CDMA device that's compatible with Ting's network options.
They got a page that tells you all about that.
They give you a $25 credit, average first month, or actually every month if you just
have one device, $23.
What?
So the $25 credit is kind of a nice thing too if you already have a device.
But I want you to wrap your head around this.
Ting is just pay for what you use wireless, $6 for the line plus Uncle Sam's take and
then you just pay for what you use.
And the price for pay for what you use just got even better.
In fact, our friend Kyra is here to tell us all about it.
Data is now cheaper on Ting.
From now on, prices look like this.
Need more?
It's just $10 a gig.
That's what new customers pay.
That's what current customers pay.
It's simple.
We like simple.
See for yourself at ting.com slash rates.
You know what I hear the most though from people that switch to Ting after hearing our
spots?
Well, you wouldn't guess because I mean, I guess I do hear quite a bit OMG, I saved a
ton of money.
I can't believe I do hear that a lot, especially from folks that are small businesses.
But the surprising one is the is the stories I hear about the experiences with their customer
service.
So they have really good customer service and I get emails and tweets in a lot.
In fact, in fact, if you want to send those in, keep sending them and go to the general
comments and keep sending them in because people have been doing that.
I haven't really been soliciting this, but keep doing it.
And if you want to take a picture of the note or something that somebody from Ting sends
you, please do.
Like people are getting personalized and I'm not shitting you here.
People are getting personalized gifts from the Ting support.
Like little notes, little notes or like a little card or something like that.
And it's just it's blowing people's minds and it's, you know, it's I don't know if it's
something they do all the time or if it's just something they do from time to time.
I mean, nothing is like the Ting customer service.
You call them, you talk to a real human being and there's no BS.
They stick with you through a problem.
Let me tell you, I can testify to that.
The one time in over two and a half years I've used Ting, the one time I had to call
in was when I was doing the road trip to Noah's house and I don't know, I was in Montana or
some some crazy backward place and no offense, Montana.
And the Ting rep literally stayed on the phone with me for over an hour as we worked through
all kinds of bad connectivity problems with the CDMA network and none of it was Ting's
fault.
And they still stuck with me till the end to make sure it all got working.
They could have punted at any moment and they didn't.
They have tons of nice devices you can buy directly, all of them unlocked.
You own them outright or you can bring your own or just buy it directly from the Play
Store.
Check them out at Linux.Ting.com.
You want to go get a line for your tablet and only pay for the data when you have to
go off Wi-Fi from time to time?
Exactly.
Ting is a great option.
Linux.Ting.com.
So I want to just take a real quick moment to mention that the Humble Bundle Survive
This Bundle is out.
The Humble Survive This Bundle, I guess.
Oh, this looks great.
Yeah, and it is nice because they've got three actual games, which is somewhat progress.
Although all the ones I'm interested in, like this first one and this one that looks like
it's a Mars one, not available for Linux because apparently they hate me.
But there are a couple of good ones like Rust, Early Access, available for Linux.
I think this Colot one looks kind of interesting.
Tell me about it.
Colot?
Yeah, I actually haven't looked at the game.
I remember looking at it during the Steam sale, but it's narrated by Sean Bean.
It's an exploration adventure game, so you kind of have to be into more of that, like
a little slower paced, a little creepy, you know, kind of just going around.
But actually it follows this like really kind of creepy incident where a bunch of graduate
students died hiking this mountain.
Have you seen Rust?
Yeah, Rust looks fun too.
Yeah, it does.
And that's almost worth the price of admission right there if you don't have it already.
Especially it's nice to get a DRM free version.
It's not-
And when you give to the Humble Bundle, you can feel good about it.
Yeah, plus it's nice to see Linux stats on there.
Just saying, just saying.
But yeah, I would love to see all of the games.
All of the games.
Also, they have a discount on the Humble Monthly.
All right, I was teasing it earlier, and this is a little embarrassing to show on air because
I don't know what happened.
You know, Dustin, I like him.
You know, I've met Dustin.
He probably doesn't remember because it was years ago.
But I met him at, I think it was Ubicon or something like that.
And I just don't know about this picture of him over on linux.com.
It's like a picture for you, those of you listening, it's all inverted.
So what's black is white, and what's white is black.
And then they have the tux.
They have Dustin wearing a overcoat, which he either-
And then like a weird blue-green glowing skin tone.
Which he either sent them a picture of him like that, or he took it just for this, or
they shopped it.
Does it not look, just a little bit, kind of look like he might be offering you like
on the cheap organs in an alleyway somewhere?
In a futuristic like sci-fi post-apocalyptic like nuke war kind of movie?
Yes, it does.
New Noosepleen, sir.
Yes, it does.
So that said, he is rocking a bitchin' beard in that photo and reppin' that.
So pretty much, I'm not even joking, the beard makes the entire photo work, doesn't it?
It really does.
If it wasn't for that beard, that photo would suck.
But Tux needs a beard too.
Quite literally, the beard in that photo saves the rest of it because he's almost got a,
I mean I'm just, I'm getting wafts of Chuck Norris.
Yeah, you are.
Oh man, without the beard here, it would be very different.
Right, but with the beard and that jacket, I am getting wafts of Norris.
And then all of a sudden it's gotten my attention.
Oh, it also has the shitty Windows logo on there.
Anyways, if you scroll down, he talks about benchmarking Ubuntu under Windows versus Ubuntu
native.
And he's doing it on the Lenovo X250 with an Intel i7 5600 CPU, 16 gigabytes of random
access memory, and 512 gigabytes of transcend SSD and a two terabyte Samsung SSD.
So this is, in perhaps the kid's parlance, a hell of a machine.
And he's using sysbench for a lot of these, and what's nice is he just gives you the commands
to reproduce.
Yeah, it is really nice.
Yeah, you can just go on your machine and do this yourself.
Anyways, he had some interesting tests.
He wanted to nail the CPU, he wanted to check disk I.O., network performance, and of course
you've got to do the classic, he built the Linux kernel.
You've got to do that, that's required.
And so when he starts with the CPU benchmark, he said that he saw almost identical results
between Ubuntu native and Ubuntu under Windows.
It took basically 2.8 seconds to run 10,000 CPU instructions.
Not bad.
But I want to move on to the memory benchmark, because this is where things got interesting.
So he's going to move 100 gigabytes of data through memory.
Native Ubuntu was able to move data through memory at 4,235 megabytes a second.
Ubuntu on Windows was able to do it at 2,309 megabytes a second, so two gigabytes versus
four gigabytes.
That's a second, that's a huge difference.
This difference exposes a bit, not only the difference in I.O. performance between the
two systems, but also the overhead involved with Ubuntu under Windows.
So then another interesting look here was disk performance.
He says we're writing one gig file with just nothing but zeros synchroously to the disk.
Native Ubuntu yields about 147 megabytes average write speed to the disk.
Ubuntu under Windows manages to get 248 megabytes.
So a difference of 147 under native Ubuntu, 248 megabytes under Windows.
A massive difference!
How is this possible?
Well, it's a bit of trickery on Windows.
The flag that we're sending the DD command, the desync command, which is supposed to guarantee
synchronous writes to disk, ensuring that every single byte is in fact written to disk
and not cached in a buffer memory, you know, kind of cheating the throughput.
That same flag was used on both the Windows and the Ubuntu machines, but it seems the
implementation of Ubuntu under Windows does not yet quite support that.
And you got to wonder about that, like in how many cases they're like, you know, there's
a lot of stuff, things to implement in that layer.
So it makes sense that not everything is bit perfect.
And yeah, and that's a there's a big translation probably happening there.
Network throughput, specifically testing TCP bandwidth using IP perf.
The native Ubuntu machine averaged 935 megabits, while Ubuntu on Windows an average of 805
megabits.
A noticeable reduction there.
But the one we've all been waiting for, the Linux kernel compilation test.
The native Ubuntu build took five minutes, 38 seconds, while Ubuntu on Windows took eight
minutes and 47 seconds.
I don't want to wait that long.
No, no.
It's suggested, by the way, this is, remember, I mentioned this earlier.
So Dustin contacted some folks at Microsoft, and you know what their response was?
What?
I know we turn this on by default, but you might want to disable Windows Defender.
No way.
Yeah.
Yeah.
Yeah.
Really?
Wow.
Yeah.
So now he didn't have time to try it.
But that does that seems to be anyone else.
If anyone has a has this redstone.
Yeah.
They could try it.
Stuff built in.
Yeah.
Get back to us about it.
So he concludes from a performance perspective, CPU and network bound processes will perform
nearly identical in Ubuntu on Windows as native Ubuntu on bare metal would.
For heavily cached disk IO operations, Ubuntu on Windows might even outperform native Ubuntu
on bare metal.
But for heavily randomized reads and writes and memory heavy operations, Ubuntu on Windows
does introduce a bit of overhead that might be noticeable in some workloads.
Pretty cool test.
It is kind of an interesting, even though you introduced this translation layer, it's
kind of an interesting way now where you can benchmark a Windows system or a Linux system
and then use the very same tool regardless of it actually supports Windows or not and
run the same benchmark.
So that's kind of interesting.
Yeah.
And, you know, it really does also speak to the to the rather awesome technical implementation
that the Windows subsystem folks have done here.
I mean, that's pretty impressive.
It's damn near a wine quality, you might say.
Also it's probably a lot easier now you have Windows you want to I mean, you want to install
Linux, but you're kind of a purist and you want your own custom compiled kernel.
Makes it a lot easier to do that, too.
I want to continue to follow with like a remote distance.
Like I'm not going to install Windows 10 and try it.
Right.
We're not hosting the show from Linux.
No, I'm not that motivated.
But I will watch as things drive by me and I'll go, oh, that's interesting.
OK, I'll note that.
I do see a lot of excitement from like the people who use Linux professionally because
they have to deploy to servers, but like aren't they're not they're not watching the show.
They're not Linux enthusiasts.
And there seems to be a lot of excitement there, just like, oh, I don't have to use
a Mac.
It's a nice feature.
I don't have to install Cygwin.
Yeah.
You know, Rekai, editor of the show, and much more.
The beard ended up breaking down and taking advantage of the free upgrade.
I understand.
I understand Rekai.
I only slightly judge you.
And he went ahead and installed the Ubuntu subsystem.
And you know, it is the only the only thing I can the only way I can describe it as is
it's unnerving.
It's unnerving to all of a sudden see him using Linux commands in what is clearly a
Windows box.
See, that is weird.
It's like, oh, that's not LS.
That's not right.
You mean dir.
Yeah.
You mean dir.
Wimpy, can we go back to full bandwidth here for a second, full spectrum wireless bandwidth?
And can you chime in a little bit for the folks over here in the US that might not have
heard about it or those that missed out on what the heck FOSStalk is and how the hell
it went?
Because I listened to the Ubuntu podcast and it sounded like a pretty fun event.
Yeah, so FOSStalk, it was the first event.
It was organized by Joe Ressington from the Linux Luddites.
I happen to know Joe is trying to fall asleep at the moment with one earphone plugged in.
So if you can just pan me left to right a few times, I know that'll irritate him insanely
and wake him up.
So yeah, Joe Joe organized the event.
It was this Saturday just gone.
It was a small, small event.
Joe wanted to make sure that, you know, it was small enough that if lots of people didn't
turn up who'd said they were going to turn up, it wouldn't look, you know, like it was
a complete disaster.
As it turns out, I think pretty much everyone that requested a ticket turned up.
So there's about 50 people at this event.
It was at a pub in London.
So it was a gastro pub, so good food, good beer on the ground floor.
There was a small hotel above it and then a basement venue where the event itself took
place.
And we had the Linux Luddites do a 45 minute show.
The Aventive Podcast, we did one, and then Linux Voice did a podcast.
And then there was what was billed as the drunken mashup as the last show of the evening,
which was Joe and Stuart Langridge and Dave Meckerslippers from Geek News Radio, and a
lot of heckling from the audience by that time of night with the intake of beverages.
So yeah, four 45 minute podcasts with a half hour in between, an hour and a half or so
beforehand for drinks and chatting, and then late night drinking at another venue around
the corner afterwards.
So it was basically a big social gathering with some podcasts going on to keep people
entertained.
That that's a nice way to describe it.
I like that atmosphere.
You know, it makes me want to I just I want to go like, let's do this here in the States.
Let's figure out a time after scale or some some other Linux fest or something like that.
And let's just do one of these here because that's oh, man, that seems cool.
Yeah.
I wish you guys would have streamed it live.
If I could.
I would have watched that.
Yeah.
Or even listen.
I listen to I know that but you actually overall the audio turned out pretty good.
So I got to give Joe Joe knows what he's doing.
I was Joe's roadie.
So he just pointed at cables and told me what to do and I got on with it.
But yeah, I think I think the idea was to keep it as simple as possible this first time
round.
And yeah, and maybe there'll be another event.
I think the aspiration is definitely for there to be another one or this is the first of
many who knows the life the scope and scale will increase over time good, good approach
really very good approach because there's nothing like doing a live performance doing
it doing something that you normally have recorded in a in a setting where you're comfortable
you have everything you need your notes, you have time to collect your thoughts.
You're often in a room by yourself when you're podcasting right.
And to take what has been and you do that for weeks and weeks and weeks and weeks and
weeks and weeks and weeks sometimes years and years and years and all of a sudden you
do it in the same room with people.
So not only you not normally record looking at these people, but there's also a whole
bunch of other people there that are looking at you and you're always performing the performance
never stops.
I know downtown and there's nobody there.
Right.
There's no editing out that pause.
So what was that like for you, Wimpy?
It was good fun.
Yeah.
Yeah.
Yeah.
Joe Joe's actually telegramming me as we're talking he said that someone said to him that
that Fostalk was like the best bits of odd camp, but in one evening, which is a glowing
endorsement and it really was it was basically a condensed version of the social track of
odd camp with many of the odd campers in attendance.
Not all of them because it was obviously in London and all campus typically in the north
of England.
So we didn't have the full spread.
But yeah, the event venue is very small.
So we were only about three or four feet from the front row of the audience so you can see
the whites of people's eyes and you you could very definitely tell whether or not things
are going going well or not.
Thankfully it seems to go well just like with music where it's like it's a whole different
thing for the performer but also for the audience that kind of live interaction you really feel
much more close much more engaged with the presenter.
Basically you never live up to what people expect by listening to you.
It's just it's it's a winning it's a never winning thing it's.
So there's that initial awkward moment where they know you they have heard you they know
how you think how you talk and you have no idea who they are and it's it's it is funny
because I have I have entered I have I developed a response.
So when people like every now and then I'm out shopping it does happen where I'll run
into a listener and so people go Chris and and what do you do when somebody if somebody
walk to me go Wes you know you don't have a right.
What do you say.
My initial response is that's me.
And so when I started dating Hadeah she noticed that this is how it happens and that's that's
me.
So she makes fun of me every time it happens right.
And because people walk up to you and they're like oh I know you and I have no idea what
your name is so and you don't know if it's like someone you should know or if it's someone
you've never met or but at the same time then all of a sudden you get to put a face to like
an IRC name or like an email address.
Yeah so I say yeah there was there was lots of that lots of people introducing themselves
and saying it's good to put a face to the name.
And also lots of people very generously buying all of the podcasters beers Joe rather rather
optimistically had a large bucket in which to collect money to buy beers for the podcasters
and people were extraordinarily generous.
So yes my headache the following morning reflected people's generosity in that regard.
So I just have one last question and Poby's not here.
So I want the full real story.
What was the deal with the laminated show notes?
So the Ubuntu podcast has a reputation for being very well organized.
And in particular Graham from Linux voice finds this a point of much irritation.
So the laminating of the show notes was really.
And the passing of the biscuits.
Really just to wind up Graham.
Yeah.
That was pretty good.
That was.
Yeah.
That was good.
Now laminated show notes is I almost want to.
We'll have to copy that.
I almost want to continue that tradition because it's so brilliant.
I think it's a good reference.
You know it's right on top.
It's great.
Yeah.
Yeah you could.
It worked really well actually because we knew we had 45 minutes and so on our on our
show notes we had the times as you know at 7.30 7.33 you know the bits that we were doing
and we actually stuck to time perfectly.
So it worked out really well in the end.
Well it sounds like a fun event and if we ever get a few of you over here in the US
at one time we've got to.
Yeah it was.
So if anyone isn't hasn't heard so you can go to the current episode of Linux Luddites.
They've got their live recording published now.
The current episode it's episode twenty three and a half of the Ubuntu podcast is just the
live recording from Fostalk.
I don't know if Linux Voice are going to be recording their live recording because there
was a fair amount of beer had been consumed by that point in the evening but I think Joe
is planning to release the Drunken Mashup show as soon as he gets his domain whitelisted
with PodTrack.
So I think definitely three of the shows are going to be.
If you're listening at home I think the order to listen to would be Luddites 84 then the
Ubuntu podcast then Linux Voice if they get it out right.
That's if you want to order the night.
Yeah yeah so it's Linux Luddites, Ubuntu podcast, Linux Voice and then the mashup.
Love it.
Well that sounds like a fun event.
Yeah it really does.
And I think it really was.
Maybe we could see the laminated show notes traditionally continue on.
And thanks to Joe for organizing it because it's a new event in our schedule now and it
was a lot of fun.
How come we don't do more like that Wes?
We need that.
We're going to.
Yep.
Absolutely.
We'll figure that out.
We're resolved.
Janice!
Janice would you get on that?
Get right on that.
I just want to talk about SSH hacks.
We got to move in.
That was the community updates and there's a hell of a lot of them it's good stuff too
so thank you everybody.
Let's get ready for the next segment by mentioning DigitalOcean.
Now this a lot of what we're about to talk about you could easily try out on DigitalOcean.
Simple cloud hosting provider dedicated to getting it your whole system up and running
in no time.
Really simple straightforward and intuitive.
Great UI to manage it all.
You can get a system spun up in less than 55 seconds and for about five dollars a month
you can run a system with 512 megabytes of RAM, a 20 gigabyte SSD, one CPU and a terabyte
of transfer.
I say about because I actually would look at DigitalOcean more like in the hourly context.
If you go over to their pricing switch over to the hourly button there and then you can
really see how this rocks.
Use our promo code DOUNPLUGGED DOUNPLUGGED all one word lowercase.
You smash it together you put it in there you apply it and they'll give you a $10 credit.
Now here's what I did this morning just to give you an example of how handy this is.
I wanted to try out a local wiki and I don't really want to learn docu wiki syntax although
I might just end up doing that but I wanted to try out I think it's MD wiki it's markdown
wiki because I use markdown every single day for our show notes and I thought well wouldn't
it be great if my wiki was marked down.
Oh here we go and so I looked at MD wiki which apparently has been updated for 20 by since
2014 but I thought I don't care.
If I use this I'm gonna put it on my own local LAN.
So I could live with that but I'll be honest with you I didn't feel like installing Apache
on my system and setting up PHP.
I just I have better things to do but I want to try don't set up PHP just don't do it don't
do it.
I know right.
I have better things to do and I just don't want to chunk up my system but I wanted to
see if MD wiki was a viable solution because if it is I will set it up on a home server
that's on my LAN for my notes about things like warranty information about appliances
or you know the model of surge protector I got for this or that you know these kinds
of stupid things that you kind of want to keep track of especially when you're in warranty
stuff.
But you don't want to keep the papers around you don't want to keep anything like that.
So I thought okay MD wiki it is so instead of junking up my system in just seconds I
spun up a San Francisco based droplet with Ubuntu 14.04 Apache MySQL and PHP all good
to go.
So I log in I change my root password first time I log in I change my root password right
there in the message of the day it tells me this is my web directory.
Drop your HTML files in here.
This is the oil to go to.
This is your info dot PHP if you want to see what your PHP install can do.
I mean I love that.
I up I FCP up the MD dot wiki dot HTML file and I mean within two minutes and 45 seconds
I was able to determine that MD wiki was a total waste of my time.
Like it just sucks.
It doesn't render properly.
It hasn't been updated for years.
It was a and you know what I immediately destroyed the drop.
I just like kill it.
One API call away.
Did I even pay a penny for that.
I don't know.
That's why if you use the promo code deal unplugged this is just a scenario where you
apply a ten dollar credit to your account and leave it in there and when you want to
try something like this you I deployed the entire stack uploaded the file and determined
that it was a garbage project.
Now within minutes I didn't have to junk up my local host.
I could have installed all of that stuff on my Linux box but I don't really I don't want
Apache installed on my Linux box.
You don't need it and that's why it's great to get that.
So even if you if you want to try out the five dollar machine and run it two months
for free that's awesome.
But if you just want to apply the credit you can try out like they're super powerful machines
just for minutes.
Try them create something and then destroy them.
And if you want to end up.
And here's the other thing like if I was trying something other than empty wiki because I
would always run that locally but if I was trying something else and it worked fine then
I'm done.
It's in production.
It's on a production grade system.
It's ready to go.
Bam.
You have backups you have snapshots whatever you need.
Yeah and they have an API that makes it super easy to interact with open source apps that
have already been written.
So check it out.
Use the promo code D.O.
Unplugged and a big thank you to DigitalOcean for sponsoring you know they got a they got
a brand new fancy looking website.
I was about to comment on that.
It's nice right.
Yeah.
Nice and clean.
All right.
So we're going to talk about SSH hacks and I definitely want to hear from our virtual
lug on their hacks but you know tricks.
But we should start by mentioning that open SSH version 7.3 was released recently.
And it has a feature that I want to talk about kind of right off the top before we get into
this thing because this is so cool.
It added some new features to the proxy jump option proxy jump a command line flag to allow
simplified indirection through one or more SSH base stations or jump hosts.
So we have an article linked in the show notes how to use a jump host in your SSH client
configurations.
So my having never actually surprisingly use this and it seems really useful very useful.
But my understanding is I SSH to one machine which then proxies my SSH connection to an
entirely separate machine.
And maybe I do this because I could have SSH running on host a on some crazy like port
four four three kind of config and then it could connect to my actual client.
Well it's also if you're part of like a larger enterprise or like I'm sure I know border
SSH server.
Yeah.
OK.
These are the things.
And a lot of in the past a lot of people use net cat or other things to like proxy the
ports between these.
But for a while now SSH has supported this directly.
They have the capital W command here which takes care of it for you so you don't need
to evoke any other third party system as you can do it all itself.
So this is just the like tip of the iceberg of stuff that you don't even think about when
you when I don't want to think about SSH and we have like a whole line of of SSH type tricks.
But there's one I wanted to kind of talk about that you've installed earlier today that's
sort of the opposite of this stuff.
It's it's really for fun or maybe even for a little bit of research on your own and it's
called cow wire or co wire.
I guess it's cow or I don't know co wire.
I like cow wire because I like it.
I like the idea of like a trip wire.
That's right.
But I think it's a co wire.
Let's go with co wire.
It's co wire.
I love it.
And it's an SSH honeypot that Wes has set up on one of his servers for us to talk about
here.
Yeah I love this.
And I'm kind of curious you've had it going for a couple of hours.
Yeah that's true.
Let's go look.
Yeah.
So let me tell folks what co wire does is it's an SSH honeypot designed to log brute
force attacks and shell interactions performed by the attacker.
Here's some of the interesting features.
You ready for this.
It creates a fake file system with the ability to add remove files a full fake file system
resembling resembling I'm sorry a Debian 5.0 install.
How wonderful is that.
Nice and secure.
Yeah.
You have the possibility of adding fake file content so the attacker can cat files such
as Etsy password.
Only minimal file contents are included by the default.
Open logs are stored in a UML compatible format for easy replay and co wire saves the file
downloads with wget and curl or uploaded with SFTP and SSCP for later inspection.
So you if they if they if they transmit something up to the box it stores it away for you to
look at later.
Which is great.
What are they trying to do.
Mm hmm.
It's a honeypot.
Yeah it's it's a very easy to set up honeypot.
How easy was it to set up.
I think they might need I'll see about maybe sending them some pull requests.
There's a couple dependency things that maybe need to be update updated or on like at least
on they had some instructions for Debian at least with 16 or four there's a few things
like their PIP requirements were slightly off but I mean no more than like 10 minutes
of once you've got the Python dependencies installed they have a very nice start and
stop set of bash scripts for you that you can specify even like a virtual environment
for you to use that so you don't have to set up anything like that.
So I thought it was pretty easy to get going.
I do recommend that you have a non root user that you run this as because all of the SSH
sessions will be in that user's name.
Oh yes.
Is that what you did.
Yes.
So do you.
So OK.
So could we give the live stream a URL SSH into I mean an address SSH into but they would
they would have to know the I mean so essentially it's a it's a honeypot they could bang on and
then we could watch what they do.
It does legitimately have like a username and password they would have to know like
there they'd actually have to be able to hack it right.
Well you can configure that so that actually that's sorry no that's exactly that that's
exactly the point of a honeypot.
You don't just give direct access you need to make it you know challenging so that it
seems real.
The first right yeah for yeah for legitimate honeypot but if we want to let the audience
bang on it and so it actually starts out the way this one's configured as it denies them
the earliest the default config they ship with it denies the two most common root passwords
which is one is just root and the other is like ABC one two three or something like that
or one two three four five six I think is what it is.
It denies those two.
But right now it's configured so that pretty much any password and any user name you want
to put the host name in the chat room we'll see if people want to hack away.
And then it's so I have up on this screen over here is this the is this the correct
log file.
It looks like it.
So you would have maybe refresh it right now though.
OK what have you used to generate this live log file that I'm looking at here.
That is SOCAT and tail dash F. There are some better there are some fancier ones that like
WebSocket D is kind of like a Unix philosophy style WebSocket thing.
It just takes a little bit of JavaScript on the client side to get you to render it.
So in the future I'd like to have a better prepared live log file.
But here is a very hacky.
So we put it in there.
It's a wasp nest.
Is that what it is.
Wasp nest.
Yep.
That noble pain dot com.
I'm seeing some incoming connections right now coming into your system West.
I'm going to zoom in on the text so we can we can see it.
So if in theory would we see what they do on the file system go to the log here or we
just seeing their connection.
You know and it does at least like it logs.
It doesn't necessarily log all the output seemingly but it does log and they have a
separate audit log I can show too.
It does log all of the commands that people try to run.
So it'll say like like it and it denies some.
So like if config IP it won't let you run but like it'll it'll show you when it finds
curls w gets that kind of stuff.
I know I would instead of it so I won't show people's IPs on the screen but I see people
like honey Alex I see trying to log in right now.
This is interesting.
New keys looks like I don't see if anybody's gotten access yet to you.
I see authorization failed.
This is really should have.
So if you I mean I think even with a blank password you should be able to get in.
That's easy to act.
Actually maybe these people are connecting here because I don't see failed logins for
these ones.
Oh here we go.
Oh boy.
So we got some we got some activity happening now.
We got some Python scripts running.
This is this is getting so this is going south real fast.
Oh my gosh Wes.
Oh I don't know if this is a good idea after all.
But this is pretty fun to watch.
It is pretty fun to watch because we get to we get to watch from like this sort of like
admin perspective and watch people go crazy.
This is kind of a fun real easy or I mean relatively easy to set up honeypot co wire
will have a link in the show notes if you guys want to check it out.
That's pretty neat.
Are you watching this.
That's pretty fun.
So in the future I'd like to have a live log that like scrolled as you update right now.
Yeah.
Keep scrolling.
Yeah.
But that's still some people.
It's surprising how many people can't log in and is command not found L.S. you don't
have L.S. on this thing.
That is weird.
I think it should.
I mean when when I it's interesting I can see what commands are attempting to run.
Yes.
Yeah.
I like that a lot.
Yeah.
This is the future of pair hacking.
Yeah.
There's already a pair program.
We could have competitions around this legitimately.
We could set up because we can populate that thing with like rewards and like things for
people to find.
Oh yeah.
And it seems very configurable hackable.
It's just like a Python.
Imagine if we if we seeded that with with a pretty big user land full and we had files
in there they had to find and get access to as part of a challenge so you have to get
access to the remote S.H. box and get in there and find certain things on the file system.
That could be a fun game.
And you could watch it all in real time.
Now everybody so I'm just going to mention it real quick and we have a great tutorial
linked in the show notes.
Everybody knows you can use S.S.H. to copy files right.
You guys all know that.
I think that's pretty basic.
You probably if you're listening to this show know that.
But if you don't or you haven't messed around with a lot if you've ever heard that Linux
is hard to copy files around on networks then you don't know about S.C.P.
So we have a link in the show notes that walks you through how to use it.
I use it almost every single day almost almost but you're just moving something down from
a droplet to my machine or something like that.
Like I just.
Especially if you're doing it right and you already have your key off authenticated that
kind of stuff set up.
It makes it very easy.
And we have we have some instructions on that too.
There are commands you can do to remotely copy your keys around and we're going to we're
going to get to that.
Before we go any further though I before I go through my list does anybody in the Mamba
room have something they use S.S.H. for all the time like you know copying files with
our sink or something like that that they want to mention because I think there's some
uses that people have come up with for S.S.H. like publish something remotely or grab something
or update something remotely that a lot of us don't think about because we don't have
those use cases.
If somebody has an interesting S.S.H. uses I'd love to hear it.
I heard in my in the company I work in if any of the developers is using S.S.H. to connect
to somewhere to do some administrative work usually means somebody's getting fired.
Why?
Because system administrators should be just have everything magically working for the
developer not to have to go there and set anything up.
Yeah so they want them and they basically don't want them having shell access.
Yeah they shouldn't be needed.
Like we're trying to get rid of system administrators and now we're just praising apps for system
administration.
Well there I mean there is a certain amount of truth there it just in that like ideally
and it depends very much on the case and how much technical debt you have etc etc but ideally
you should have like a log server set up you should have that being absorbed somewhere
you should have configuration management set up so that ideally the need to S.S.H. is minimal
but there are lots of cases QA etc where you really do need that S.S.H.
Yeah sure.
I'd love to hear the use cases over at Solace.
So in Solace we had to come up with a scalable build system as you can imagine and we use
S.S.H. in a couple of ways to achieve this basically the there is a couple of rules whenever
writing any software.
Rule number one never write your own crypto algorithm never do it.
It's rule number one rule number two behind that really apart from don't use GLib it should
probably be don't reinvent authentication.
So have any of you guys used anything like Garrett or get a light or anything like that.
Yeah I've seen it get a light before.
Okay so one of the very unknown features of S.S.H. is you can actually tell it to run
a command associated with a public key.
Oh yeah.
So what we've taken advantage of there is there is an isolated S.S.H.D. which is completely
separate from the Solace infrastructure itself.
This one is public key based only and exists only to serve our build system.
So you have to have a public key and what it does is it S.S.H. is to our script that
runs behind this as a server if you like which then controls all the builds and uses a database
to store the builds there.
So we've got public key authentication and we've got Unix PAM authentication going on
in the background there.
We didn't have to reinvent any of that.
The build servers as well do it though so we can just revoke a key immediately for any
of these servers that are doing it in a pull based system instead of a scheduler and pushing
them out.
On top of that our packages are also uploaded with SCP over another S.S.H.D. with only one
there's only one that can upload to this S.S.H.D. which is a true directory where the files
then land before an I notify team in the background then pulls those files in to index them into
the unstable repo.
So it's all S.S.H. powered.
That's pretty nice.
I like that.
Nice and secure and easy to understand too.
Now Wimpy you said you use something that does hardware acceleration for S.S.H.
What do you what are you talking about or in combination with hardware elaborate sir.
Well so you've got the different crypto algorithms that you can negotiate to establish a S.S.H.
connection and if you're just you know at the terminal that's kind of irrelevant but
if you're R-syncing or S.C.P.ing data then you should elect the crypto algorithm that
is most accelerated on your platform.
So there are ways to evaluate what the hardware capabilities are both ends and you can then
configure your S.S.H. config so that when you're connecting to particular hosts it forces to
use the most accelerated crypto algorithm.
And generally those are the AES 128 GCM and AES 256 GCM algorithms and they can run just
over more than twice the speed of the others.
So you can on the line get nearly up to 400 megabits per second transfer speed as opposed
to the default which will be maybe 160 170 megabits.
That is a good one.
And Darsani you have kind of an interesting use case where you wanted to remotely watch
a server's traffic to do some troubleshooting.
Tell me about this.
Well I was testing a, first of all can you hear me?
Yeah yeah we hear you.
Okay okay.
I was testing this man-in-the-middle sort of software it would watch outbound packages
to make sure that you know no one was suspiciously sending bad, sorry secret stuff to the network
right.
And so we had to use a regex and it would watch the outbound traffic using regex.
So I ran a, well I had to do both of the things on my server right.
I had to watch the wowza traffic which is a RTMP server and I had to run that on my
local machine and then I had to run the client to the local machine.
So I had to use a SH tunnel to myself.
I could have used netcat but I didn't have that available at the time.
So I was able to watch the traffic inbound on the wowza server and then like TCP dump
it or was it Wireshark it so I can read it.
Yes that is super super useful and a nice little, well not a hack but it's a hack in
like the workflow sense a hack where you can sort of put yourself over there.
You know you heard us mentioning keys there is a command called ssh-copy-id and then user
at host and this is a nice way to enable passwordless logins, copy your keys around.
We have a couple of articles.
I have a couple that I highlighted like you can output, here's a good one.
You can output your microphone to a remote computer speaker.
If I don't have not tried this but supposedly using DD and then piping it over to SSH and
then at the remote host using DD to go to their sound device the output of the sound
from your microphone port to the SSH target's computer speaker port, sound quality is very
bad so you hear a lot of hissing.
I haven't tried it but that sounds freaking ridiculous.
Also you can attach to a screen over SSH which that's probably a hack worth mentioning right
there is use screen with SSH, use screen with SSH and also how to establish a remote GNU
screen session that you can reconnect to right by starting the SSH command.
You SSH in to the machine and then you execute the user bin screen command dash lowercase
X capital RR and then start with the screen session.
That's a good tip right there.
Screen with that.
Just reading the SSH man page is a great tip I think honestly.
There are so many arguments there that just are gold mines.
Did you find this hacker news thread where a bunch of people posted their favorite quote
unquote things you can make SSH do and there's some very good ones over here that we'll link
in the show notes too also.
So I think I have probably shared this story before but I'll risk sharing it again.
I don't know if I actually have shared it on the show but before I do it, is anybody
else in the – oh there we go, Mr. Fax.
You had – Auto SSH, right.
Yeah, I saw that earlier.
Tell me about Auto SSH.
Well, Auto SSH is very cool.
For example, if you have a remote computer that cannot open a firewall port but you have
a server at home that can open the port, then you can set up Auto SSH that the server automatically
– that the client connects to the server automatically and then you do a reverse, tunnel
to the client and get a shell of the client.
And so you can use Auto SSH for backing up the client via Orsync or something else.
It's really, really cool.
That is – I like that.
And so it's Auto SSH.
So Wimpy, you were talking about fwknop which is like a – I'm guessing a port-knocking
tool.
What's this?
It's not port-knocking.
It's a single packet authentication mechanism so it's like an additional layer on top
of SSH.
So like instead of port-knocking, something maybe – like an alternative, cool, cool.
So it's sort of a key-based packet authentication mechanism that then enables you the rest of
your SSH connection to then establish.
So you can have SPA and then you have your key-based authentication.
So this is the way we have things.
We have SPA, key-based authentication and then you get a one-time password as well.
And it actually prints the QR code on the terminal that you can scan with your phone
to get your then second factor as well.
So it's like three-factor authentication to an SSH jump server.
That's awesome.
I guess I almost feel like I have to mention, yes, you can do X11 forwarding with SSH too.
I think people would be like, how come you didn't mention this?
And probably remote command execution.
You can just send a remote command over there, which is amazing.
The other one is –
Socks proxying.
Yes.
Socks proxying is huge.
Of course.
I have to mention that, yeah.
I will say too, like you were talking about SCP, which works great, but when you're doing
a recursive copy, a lot of times piping tar over SSH will be better.
Yeah.
Or rsync.
I used rsync in combination.
So rsync is managing the file copy, but it's doing it through SSH, which if you think about
it, is such a brilliant combination of two of the best things.
It's legitimately like Nutella and peanut butter, which really does go well together,
and peanut butter and jelly, which my kids don't think go well together, but one day
I will convince them does go well together.
It is so great, because you get the power and really the reliability and peace of mind
of rsync with the encryption and protection of SCP or SSH.
So that's a great combo too.
So I feel like I'd be probably remiss, because a lot of comments would be, how come you didn't
say this?
Those are sort of the obvious ones too.
Yeah, the proxying stuff is really nice.
I've seen a lot of articles online called the poor man's VPN using SSH.
There's a lot of articles that cover how to do that.
Oh yeah, especially the SOCKS proxy, aka the capital D flag.
It's better than rsync thing.
Hmm.
Yeah, maybe.
Yeah, that might be true.
All right, Mumble Room, anybody else have an SSH tip or trick or hack that they love
about SSH before we move on?
Going once.
You do?
I do.
I just want to mention the lowercase w flag for setting up ton slash tap devices.
SSH can be your layer two, layer three VPN.
It's all over TCP.
So if you're super performance critical, it's not the thing to do.
If you're on a good connection, I've gotten speed ups over bad links using DigitalOcean.
Or if you just want something like you have some apps that don't respect SOCKS proxies,
but you want to proxy them through SSH, on Linux you just bam, now you have a new interface,
bind them to that interface.
There you go.
And it's nice because everything you need is already installed, as long as you have
SSH installed.
Exactly.
And so it's, and you know it's there.
You just need to enable the right things in your SSH deconfig on the other end, but that's
the case for a lot of these.
Will you toss that in the show notes too, how to do that?
We'll have a link in there, how to do that.
You know, this is actually, so how to do it, I should really stop right here and I should
mention Linux Academy because if we're talking about this stuff and it's a little over your
head or you want to know more, Linux Academies would just be a fantastic resource.
Go to linuxacademy.com slash unplug to support this show.
Now they also have all the advanced topics around Linux, but it really is a great platform
for learning more about this kind of stuff.
They've got the essentials and really all of the things that have sort of been built
on top of it.
Stuff you really, if you haven't been through proper training, the little details you might
have missed that make a difference, plus on top of all of it they have instructor mentoring
to help you as you go.
Learning paths, series of courses and content planned by instructors for very specific types
of career tracks, and then if you're busy, they have learning plans, so you can pick
a course and set a time frame and fit to it that matches your schedule.
They have note cards that can be forked by the community to help with studying.
They have video courses with self-paced in-depth video guides on every single freaking topic
around Linux, the cloud itself, DevOps.
The labs and exercises are unique because they give you the real world confidence to
do this stuff.
You're walking away from something where you've really worked hands-on with it, so you have
the confidence to work with the real technology in production.
For me personally, that would be worth the entire Linux Academy subscription right there.
The Nuggets give you a deep dive into something when you just want to go into a single topic,
and they have iOS and Android apps to help you study from your mobile device.
They have a community stacked full of Jupyter Broadcasting members because they've been
advertising here for a while now, and they're constantly expanding.
They're always adding new content.
They're always improving the previous content.
From fundamentals to the advanced stuff, check them out at linuxacademy.com slash unplugged.
If anything we've mentioned today sounds new to you, you probably could have learned more
at Linux Academy, linuxacademy.com slash unplugged.
Over the years, I have bought into many management systems, systems to manage my photos, systems
to manage my mp3s, applications and systems to manage my notes, my personal notes, my
client notes, my family notes, my work.
Oh, Wes, you know what I've learned after all of these years?
Just put it on the damn file system.
Turns out we solved this in the early 90s.
Just make a damn file out of it.
If you have it on the damn file system, then I can get to it when I SSHN.
I can get to it when I bring up my file manager.
I can get to it from my Guake drop-down terminal.
I can get to it from an application that sits on top of it.
Not many times, I would imagine, in my adult life will I sort of completely start over.
The house I moved out of, it was unique because we had a lot of input on how it was built.
I had a lot of knowledge of how it was wired and where everything was done at and what
was what, but I didn't properly capture that information.
As time went on, the details became fuzzy.
I thought I'd memorize it, and today I couldn't even tell you how many Ethernet ports I had
installed, which to me just seems ridiculous.
Now that I've moved into LadyJubes and I've begun building a home network, which you and
I were talking about on the pre-show, I thought to myself, I am really at such a square one
position again, which is so rare, which I know you're kind of going through the same
thing having just moved.
It's rare when you're like, I can tear down everything I have right now and start fresh.
One of the things I have learned about myself is I will forget the little details over time
because life goes on.
I thought, wouldn't it be wonderful?
Wouldn't it be an accomplishment if I could document properly everything, serial numbers,
warranty information, support information, implementation, configuration details, and
have a spot to put it all that I could recall it fairly easily.
That started me down the path of trying to find the perfect wiki software.
I think I kind of blame Noah for this because he started talking about it on Linux Action
Show this Sunday.
It's a diary where he puts his thoughts and feelings into about clients and stuff.
And I thought, geez, I could really use a spot that was kind of safe.
Some sort of like personal store, you can come back to it.
It's there when you want it.
You can ignore it when you want to.
And maybe, and legitimately, Wes, years could go by before I have to reference information.
Without touching it.
It's like maybe my refrigerator's warranty information.
Or that old notebook you have and you come back and you're like, okay, yeah, that's right.
And so I started with DocuWiki, which is a very simple to use local wiki.
It's really nice.
I highly recommend it if you are very familiar with its Wiki Sinti.
But it didn't fit my needs.
So I was a little disappointed.
I looked at MD Wiki, didn't fit my needs, hasn't been updated.
So I've been a little disappointed.
So Wimpy, I want to hear about ZimWiki because it is definitely a name I've seen go by online,
even if mentioned by the community a few times.
Have you messed around with it?
Yeah, it's what I use for keeping all of my sort of documentation notes.
So it's a desktop wiki, a GTK desktop application for doing wiki and note taking.
And it does, you know, document linking, just like how wiki works.
But all of the documents are just text documents.
So I've got those synchronized to all of my machines.
Now the syntax, is it like its own unique little special syntax?
Or is it?
Well, I'll tell you what, I'll bring one up in a text editor rather than Zim and I'll
tell you.
Oh, OK.
Yeah.
And and it just it just it just looks at local files on your file system.
And yeah, so I just got a folder called notebooks.
I think I have looked at ZimWiki in the past.
You know, it does seem very familiar.
Yeah.
But so why use this instead of just create files on your file system?
Why not just have a directory structure that makes sense and just put on the file system?
They its content type is text X in wiki and the markup looks like markdown ish.
Hmm.
Hmm.
I like markdown ish.
I mean, it depends on how close, but and and you find this to be more efficient than just
having a good file structure?
Yes, because you can cross link the documents and you can create like a higher level category
and then hierarchies within that.
And it does the wiki linking within it as well.
So if you want to link back to stuff, I think I mean, I don't use it for formatting.
I use it for hurling information in.
So when I'm chatting to people on IRC, I just grab whole conversations out of IRC, dump
them into Zim wiki.
So I've got a record of that and then I can go through and, you know, tidy up a later
date and turn it into something, you know, more useful.
In fact, I've got all of my documentation in there.
And how are you syncing that at all?
Are you just one machine has it all?
No, I'm I sync it.
Using?
I use Sparkle Share for that.
Oh, man, I want to use I want to pick it up.
I'm thinking about using Sparkle Share.
You know, that's the one I haven't tried.
Yeah, I like.
For this Sparkle Share works really well.
Yeah.
Because it's just text you come in, you can put screenshots and stuff in there.
And Sparkle Share is designed to do that sort of collaboration thing.
So it's got get behind the scenes, you just blast all up to GitHub, you just like slam
it all up there.
You don't have to do it.
Sparkle Share just does it for you.
It's the read and write operations and does all of the commits for you.
And it has a format for the commit.
So you can see what was an addition or an edit or a deletion or, you know, and so on.
So it just takes care of it all for you.
As I recall, the last time I do remember now looking at this, you can do things like you
can set bolted lists, or I mean, lists that you can checkbox like checkbox lists, you
can have calendar embeds with reminders.
Oh, yeah, that is quite a lot of functionality.
Yeah, this is a good one.
This is Zim Wiki, I think has got to be top of my list.
Here's the other one I'm playing with right now.
And I don't know if you've had a chance to try it out.
It's called, it's been recommended before, I think I might have mentioned it even before,
and I've been intending to really give it a go.
It's called Tagspaces.
And you can find it at tagspaces.org.
And it's an open source personal data manager, quote unquote, that helps you organize and
browse your files on every platform.
Now, here's a couple of the details.
And I'll tell you why I ended up using it too.
It's running completely offline.
There's no cloud integration at all, no login required.
And you can still use it on platforms like own cloud or Dropbox or BitTorrent Sync Sync
thing, Sparkle file, Spider Oak, whatever.
It's got a pay version, and it's also all open source.
So I like that it does have a sustainable revenue model that seems pretty reasonable.
Totally.
I'm going to be around for a while.
If I'm going to rely on it, yeah.
It is an Electron app.
I'll get that out here, but then I'll tell you a bit more about it.
You can organize your photos, eBooks, music, recipes, invoices, and you can do it on Windows,
Linux, OS X, Android, Firefox, and Chrome because they have plug-ins.
It features basic file management operations.
You can create edit notes in plain text, markdown, or HTML.
You can use Tagspaces to organize eBooks too, which I think is especially nice.
But on top of that, which is also especially nice, is managing PDFs.
This is something where I have gotten an influx recently of manuals and PDFs for pieces of
equipment that I now have in Lady Jupiter, and what the hell do I do with these PDFs?
How do I keep track of which one's for the water pump, which one's for the furnace, which
one's for the inverter, which one's for the converter, which one's for the black tank?
This is ridiculous, and so this kind of helps me put my head around all of this, and also
it does the same thing for photos, which is nice because I have photos of particular pieces
of equipment and electronics.
The application supports adding tags to files in a transparent, not vendor-locking way.
You can tag your files by simply drag and drop actions.
You can organize your tags thematically in groups.
It has smart tags too for date-based stuff.
Of course, it has file and search and all that.
It has a quote-unquote responsive design.
You can resize it.
You can browse by tag, and it has a pro version if you want to spend the money, and I've only
begun working with it.
And it sits right on top of whatever file system you have.
Exactly, and that's what I like is, so at the end of the day, I could SSH into a home
server and just browse the file system and get this information, but if I'm sitting at
a machine, there's a bunch of different filters I can get at and use based on tags or metadata
information or file creation date or category or by linking.
I could go look at the RV branch or the audio equipment branch and have all of the information
I need in there, and I like that I can also then include things like pictures and markdown
information so I can put links in there and all of it's offline.
See, that part is awesome.
So all I have to do is load up a computer with this to sit on top of the file system.
It scans the file system.
It gets this information.
Where does it store its configuration?
Now I haven't dug too far, but there is a database file.
So the way I currently use it is I downloaded the entire thing, and there's packages available,
but it's also an Electron app, so I just downloaded a single directory.
Everything is self-contained.
All the data files, config are all in this one directory.
I tar.gz this one folder, and I've got everything I need.
I extract that.
I've got everything I need to just have it once again point at the file system, and it's
good to go again.
So that's been working.
That's sort of a real portable setup because I've been able to replicate that a couple
of times now and have it look at the same network path, and that's been pretty solid.
So this isn't totally in production yet because my final plan would be I'm going to set up
a final file server in LadyJubes, put all of the data on that, and then from a laptop
front end point this at it.
So I've just been experimenting temporarily, and I'm liking this.
I'm not totally done yet.
So there is still room for something like ZimWiki or another solution, but the one thing
I do like about this is over the years I keep going back to just putting it on the file
system for my photos, my audio books, my MP3s, my docs.
Just put it on the file system.
And especially it excels at that if you can bin it and just stick it in a thing, like
a drill down hierarchy, and so if this can add that missing layer of kind of like how
do I find related things?
How do I find these?
I don't want to put them in the same folder, but I do want to know that they're related.
So if that could easily add that on top, that's very interesting.
And it's also available for Android.
Now I don't know exactly how this would work.
I don't know how I would point Android at the same data source.
However, they do have some WebDAV support, and I've included that in the show notes where
you can host it and then use WebDAV to connect to it.
Maybe that's how I could have my laptop and my Android client accessing the same information.
I'm not sure I'd want to expose it this way, but it's nice that it can look at a WebDAV
share and have the same functionality.
But if I was really going to go that route, I'd probably use something like Spider Oak
or C file or some sort of background syncing service, yeah.
So that's tag spaces.
I really have to think I'm going to give that a try.
I've looked at some like there's some fuse based tags, file systems, that sort of thing,
and none of them have really stuck.
Have you thought about as you're setting up your network in your new place, if you're
going to take down notes on how things are set up, like what the passwords are and...
Yeah, you know, and I do have my own key pass database and that kind of thing.
You just kind of keep notes in there right now?
I do that for like account based things, but there's a lot of stuff, kind of stuff you're
hitting on, a lot of that maintenance stuff, a lot of the just the little details in life
that I don't, you know, maybe they're in Google Drive.
Maybe they're on my own file server.
Maybe they're backed up in tar snap, but I don't have a lot of those linkages between
them and I rely on the find command or something like that.
So this seems like a really good way to be like, okay, these are all associated with
the network.
These are all associated with, you know, the appliances that I own.
So I'm very curious to see how that works out.
And I do think that the, you know, there's a lot of objections to being an electron app,
but this seems like also kind of a middle ground where it's actually kind of reasonable
because the features they want, I like that it's very pretty.
It seems usable.
It seems like something I could have someone who wasn't even a Linux user or a tech savvy
person jump right in and use it without worrying about it.
Seriously, when you first launch it, it steps you through sort of the logic of the application
and it gives you a good layout of how this is, how you interact with it.
This is where things are stored at.
Yeah, that's really nice.
Wimpy, you had a point of clarification about open filer or filler or I don't know unless
go ahead, sir, fire away.
At the end of this week's lash, you said that you were experimenting with open filer.
Yes, sir.
Did you mean open filer?
I don't know.
I guess.
Why would I not?
I don't think Chris knows what he's talking about.
Have you listened to the show before?
I have not installed it.
I intend to install on an Intel NUC attached to probably about three terabytes worth of
test storage open filer, but unless I'm calling for it.
You're getting name conflated.
With what?
So we were discussing Open Media Vault.
There are two of them.
Yes, that's right.
Yeah, maybe I was because I haven't downloaded it yet.
So maybe I was.
That's actually my to-do this week.
Open filer is like a sort of a dead project.
So you and I were discussing Open Media Vault.
I can't keep it straight anymore.
Yeah.
I guess I probably was.
It was probably that's what I give for it.
Was it an off-the-cuff comment that I make?
Was an off-the-cuff thing I said on the show?
Yeah, it was towards the end of the show.
Yeah.
Yeah.
Sometimes when I speak off-the-cuff, I don't really, I get, I do that, I got in trouble
last week for saying something off-the-cuff too, which was just a totally like, I just,
you know what I'm talking about.
I do.
I don't know what my problem is.
I don't know what it is.
And unless it's a prepared statement, take Chris's words with a grain of salt.
He probably means like two versions different.
I would like that not to be the case though.
Or around the name by a few letters.
The only reason I'm seeking clarification is because Chris and I've been discussing
Open Media Vault.
And if he downloads Open Filer thinking this is what I recommended, he's going to be very
disappointed.
Well, I did download Open Filer though.
So I guess I just won't even, I haven't installed it yet, but I have downloaded it.
And I don't know if I've downloaded Open Media Vault.
I feel like I should, so the project's not being, because I feel like I was going to,
I should at least look at it.
But if the project's not really being worked on, that sort of seals that deal for me.
I thought it had sort of stagnated and when, SP in the chat room says 2011.
Yeah when you look at their documentation, they talk about Linux 2.6.
So you are, this is probably, this is a good time to mention this.
So I don't want to overdo this.
I know I've talked about this a lot recently, but I'm currently in the process of redoing
my network storage and I want to try out a bunch of things.
And I had Rockstore on the list too, although I just recently eliminated that, I was talking
to Wes about that earlier today.
It sounds like Open Filer's off the list now.
Right now what's on my list is Open Media Vault and Free NAS and I have feelers into
QNAP because they have a rig that runs Ubuntu that I think would also be very cool.
Now I'm just crossing, I'm just going to cross Rockstore and Open Filer off the list, which
really brings it down to, if I'm going to roll it myself, Free NAS or Open Media Vault.
Like I'm down to two now and what's pushing me towards Open Media Vault in honesty is
Wimpy has got a great testimony for it.
He's really sort of sold me on it.
Do you want to talk about your implementation at all or at least why you've been happy with
it?
Yeah, I mean I've been using it for years and years now.
I think I started using it around the 0.4 period and it's 2. something is the stable
release and 3.0 is imminent I think looking at how that's been developing.
But it's a Debian based NAS solution.
The two series is based on Weezy and the three series is based on Jessie.
There's a site called omvextras.org which is the community maintained plugins and it
has plugins for quite literally everything imaginable including ZFS and SnapRaid and
Grey Hole and just about every disk management and redundancy strategy you can imagine.
So it's a fun thing to play with because you can really explore the options that best suit
you if you just want to add disks of unequal sizes there are redundancy strategies to support
that.
Or you can go with ZFS or you can go with LVMs and XFS you know there's a whole raft
of options.
But it's got plugins for MB server and Plex server and all of the stuff that some people
use sick beard and couch potato and stuff like that.
Nice.
The essential.
Yeah it just is just everything it just you know all in one thing and because it's Debian
under the hood when you need to you can just SSH into it and set up the bits that you need
that are specific to what you want to do.
This is exactly what I was talking about earlier this is yeah so if I so just to just to jump
in here is it if I'm correct is it based on Debian 8 is it or so 2.2 whatever the current
two series is which is the stable version currently that's based on wheezy which is
Debian 7 yeah the three series which is in beta at the moment and I get the impression
is very close to final that's based on Jesse which is Debian 8 nice okay I'm currently
running two instances of open media vault 2 and like you I'm preparing a nut to replace
both of those and that's going I'm going to I'm building that the moment that's running
version 3 and and how has that gone so far because that's I was thinking about starting
with 3.0 when it came to open media vault just to just so I got a sense of where they're
going because I'm not likely to want to reload my system a month from now or up and when
I when I went to version 2 a couple of years ago I did install the betas and upgraded them
to final so I you know I did the initial deployment on the beta so I've done that before and it's
been fine yeah it's fine it's got 30 terabytes hanging off the back of it so that's cooking
along just fine and how the plugins work for you yeah so that was the thing I've been sort
of keeping track on how the plugins are developing and the ones that I need are now all available
and as best as I can see all work perfectly fine so the first beta for version 3 came
out in sort of January of this year there was another beta release about a month ago
so you know this sort of six months development time and in that period I think a lot of the
work has really been around the having the community maintainers for the plugins update
their plugins to support the new API in version 3 so that on launch day all or most of the
plugins are available yes absolutely that's that's a good healthy community you know and
I was just talking to Angela too she has an old arch system that hasn't been updated for
like a year and wow I was thinking maybe we just the Chris ops special over there yeah
and I thought well whatever whatever in media open media vault or free nas or whatever solution
I end up on I should probably replicate because she has a knock at her house okay and so I
think I'm gonna it whatever when I end up on I'm probably gonna do a pretty wide deployment
of it and at least two maybe three installations well it would be really nice to have nailed
down that like storage appliance roll at your own something you understand that you don't
have to necessarily buy you can roll it your own and I like buying local aka having it
run Linux yeah I think that's nice not the free nas isn't a great product no totally
but you already open media vault is kind of a not spin-off exactly but a reaction to free
nas so the lead developer of open media vault was a free nas developer and he had a disagreement
with direction that free nas was going so created a media vault as a result interesting
and also sort of encouraging as well so I will put a link to open media vault org if
you guys have any implementation tips or experience let me know because I'll be kicking the tires
probably in the next couple of weeks I'll have I'm gonna I'm gonna try to get it installed
by Thursday afternoon so I have at least a couple of weeks of production experience with
it and you mean so you can tell Alan that you really don't need BSD to run your storage
appliance and then I'll probably review a little bit after that and then whatever I
end up on I'm going to deploy a stamp of approval yeah I'll go put I'm gonna go install under
some bench seats in in lady jibs cool so are you using a ZFS wimpy or you're using a different
file system I've got one of the boxes so the primary box is running XFS on an LVM and the
backup unit is running on ZFS cool that's and when I say backup this is an active passive
cluster so if for any reason I need to update or reboot the first one then the the other
one takes over that's the way to do it well betide I interrupt my daughter's viewing of
her favorite right so I'm looking back at their release log too and you know I see I
see updates in May I see updates I think two updates in May actually and I see an update
on June 15th so and then of course three I was just around the corner so the projects
boy what I mean compared to open file looking open filers releases this so there's definitely
a pulse here yeah and there's also images for the Raspberry Pi and the Odroid C2 and
the Odroid XU3 and 4 so there's you know and cue boxes and stuff so it's quite an interesting
project in that the the main OS is it's just bulletproof I mean it just runs and runs and
runs I've never had any problem with it and I've used it at work as well I've used it
for file servers in offices and stuff like that hmm now the big question though can I
use butter FS only if you're insane all right well very good I will put I'm I am I think
irrationally excited about the possibility of rebuilding we're setting up and picking
a new file server right figuring out how I'm gonna do all of this but I'll check back in
at the end of the day for Linux users here and it's just really exciting to be like yeah
free I can do it and it solves a real problem and stuff like open media vault didn't really
exist the last time I really gave us a thorough look a few years ago like it just wasn't there
and free nas was an option but so everything has changed which makes it all new and exciting
again that does bring us to the end of this week's broadcast thank you to everybody who
tuned in this week those of you who are also able to join us live in a special thank you
to our virtual lug joining us live in the mumble room you can participate we just have
a mic check and that's basically it mumble is an open source app you go into our IRC
bang mumble get the info and join us you can participate it's a virtual log you can attend
anywhere just go to Jupiter broadcasting comm slash calendar for the live times Linux action
show dot reddit.com for the feedback and Jupiter broadcasting comm slash contact to email us
in directly we'll see you right back here next week and thanks so much goodbye West
say goodbye West goodbye everybody.
So I get your you're traveling up to the Pacific Northwest.
Oh what.
Yeah I'm going to be in Portland well I'm leaving on Saturday so I'm going to be out
there and I'm going to be out in Hillsborough a lot as well for work going to be there for
two weeks.
Hmm.
Oh really.
Two weeks is a nice window.
Yeah are you going to have a vehicle.
Are you.
Do you have a means of.
I am not unfortunately but you know there's methods.
There may be there may be there because we have we have a fair amount of listeners in
Portland because here's the thing West is what do you think the J.B. one studios from
Portland that's about it what three hour drive.
Yeah depends on traffic but if we do it at the right time yeah three hours we should
be there.
Yeah interesting.
That'd be fun Nike.
That would be a lot of fun.
That would be too much fun.
Because what I want personally from you yeah so it's these kind of the whole user story
thing and so I kind of like to get your views there and then a solid as opposed to you know
like via text or you know remotely over the internet so you can just tell me to be faces
like this is a heap of shit you bollocks fix it you know hardcore user test case I see.
Yeah.
Hmm.
Wow.
So how far out is that.
Two weeks are you going to be there going to be here for two weeks.
How far out.
So I'm leaving on Saturday.
I'm going to be I'm going to be getting burgers that night because it's the end of the burger
week isn't it.
So I'm going to be getting me burgers that night then there for a whole two weeks.
Yeah I'll be staying in Portland downtown hanging with Linus actually met him in Dublin
last year I was presenting that Linux Con Europe so I saw him out the back there.
Yeah.
Yeah.
Linux Con is the place.
If you get to meet him that's usually the place to do it.
He doesn't otherwise really like to attend.
Well we also have conferences at work as well because my office is the Intel Jones well when
I'm there it's the Intel Jones Farm campus over in Hillsborough.
So we have the conferences up in Washington up in you know Skamania.
Yeah.
Yeah.
So like we go up there and he's there as well.
So I've met him there a couple of times but the first time I ever met him like I was kind
of new at the whole thing and I was getting trolled and set up with him.
So I kind of went running in the other direction to be honest with you.
Sure sure.
Yeah.
Yeah.
