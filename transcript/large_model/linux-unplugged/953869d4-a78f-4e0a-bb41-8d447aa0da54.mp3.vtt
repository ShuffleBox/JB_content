WEBVTT

00:00.000 --> 00:02.600
My latest Linux box has more connectivity

00:02.600 --> 00:05.000
than a MacBook before 2021,

00:05.000 --> 00:08.120
has a full QWERTY keyboard and it fits in my pocket.

00:09.000 --> 00:11.260
It's the pocket popcorn computer.

00:11.260 --> 00:13.820
It's still really early days with this thing,

00:13.820 --> 00:17.620
but it's a handheld Linux device with a 1080p display

00:17.620 --> 00:20.240
and a pretty nice battery that is user replaceable

00:20.240 --> 00:22.560
and they're thin enough that you could legitimately

00:22.560 --> 00:24.320
probably buy three or four off of Amazon

00:24.320 --> 00:26.120
and just keep them in your backpack.

00:26.120 --> 00:29.560
It's got a backlit RGB keyboard

00:29.560 --> 00:31.220
and of course it runs Linux, right?

00:31.220 --> 00:36.220
I mean, obviously it's not like fully done yet.

00:36.520 --> 00:37.800
It still has a few rough edges,

00:37.800 --> 00:39.320
but I really like it so far.

00:39.320 --> 00:41.360
I just got it this morning and I've been playing with it.

00:41.360 --> 00:42.900
How rough are the rough edges?

00:42.900 --> 00:45.400
Well, they're rough.

00:45.400 --> 00:47.560
I don't know if there's really even a full image

00:47.560 --> 00:49.280
that's done yet for it.

00:49.280 --> 00:51.160
So it's a pretty basic command line device.

00:51.160 --> 00:54.100
Yeah, and there's some things like

00:54.100 --> 00:55.720
if you turn the keyboard backlighting on

00:55.720 --> 00:57.580
and then you don't turn it off before you shut it down,

00:57.580 --> 00:59.020
it's stuck on.

00:59.020 --> 01:01.360
But it's stuff that's like totally understandable

01:01.360 --> 01:05.400
for an early device that seems solvable.

01:05.400 --> 01:08.040
So it's not like I'm too worried about it.

01:08.040 --> 01:09.700
And it's funny how nice it is to have something

01:09.700 --> 01:12.440
that you can pull the back off of and replace the battery.

01:12.440 --> 01:15.880
Like it just sort of, you run your finger under there

01:15.880 --> 01:18.300
and it just kind of pops right off.

01:18.300 --> 01:20.560
And it's within a second I'm in there

01:20.560 --> 01:22.180
and I can swap the battery out.

01:22.180 --> 01:23.280
What a concept.

01:23.280 --> 01:26.360
I'm picturing an ASMR battery swap session here.

01:26.360 --> 01:38.760
Hello, friends, and welcome back to your weekly Linux talk show.

01:38.760 --> 01:39.760
My name is Chris.

01:39.760 --> 01:40.760
My name is Wes.

01:40.760 --> 01:41.760
And my name is Brent.

01:41.760 --> 01:42.760
Hello, gentlemen.

01:42.760 --> 01:45.880
I'll be playing with this popcorn computer for a little bit.

01:45.880 --> 01:50.620
I'll try to give you early impressions slash review next week.

01:50.620 --> 01:52.600
But coming up on the show this week,

01:52.600 --> 01:54.880
we've talked about a tricky problem in the past.

01:54.880 --> 01:59.880
It's Linux fragmentation in a way that we don't normally consider fragmentation.

01:59.880 --> 02:04.520
It's an actual tricky problem specifically for shipping applications

02:04.520 --> 02:06.900
on Linux and desktop applications.

02:06.900 --> 02:09.280
And there are several different types of technologies out there

02:09.280 --> 02:14.200
to solve this problem from Docker and snaps and app images.

02:14.200 --> 02:18.700
And Flatpak is one of the best known ones in our community and on the desktop.

02:18.700 --> 02:21.360
But recently a very critical analysis was posted

02:21.360 --> 02:25.400
that brings using Flatpaks into question to solve the various software

02:25.400 --> 02:27.040
distribution problems we have on Linux.

02:27.040 --> 02:28.920
In fact, you may have seen it.

02:28.920 --> 02:33.320
The post was titled, Flatpaks are not the future or something to that effect.

02:33.320 --> 02:38.040
So this week, what we wanted to do was work through some of those criticisms,

02:38.040 --> 02:40.580
respond to the ones that make sense to respond to,

02:40.580 --> 02:43.840
and maybe even discuss some of the changes already being made in Flatpak

02:43.840 --> 02:45.760
that address some of those concerns.

02:45.760 --> 02:49.560
So in just a little bit, Will Thompson, the director of Endless OS,

02:49.560 --> 02:51.360
or the platform for Endless, over at Endless,

02:51.360 --> 02:54.440
he's sort of like the king of Endless OS, will join us to discuss some of this.

02:54.440 --> 02:57.240
And Endless OS knows their Flatpaks.

02:57.240 --> 03:00.200
I'll have to get the number from Will, but it's a lot of Flatpaks.

03:00.200 --> 03:04.120
So before we get into all of that, I wanted to say time appropriate,

03:04.120 --> 03:06.600
greetings, virtual lug, hello, Mumble Room.

03:06.600 --> 03:08.960
Hello, everyone.

03:08.960 --> 03:10.960
Namaste.

03:10.960 --> 03:13.720
We have quite the panel today, which is great,

03:13.720 --> 03:17.640
because this is a topic that has been on all of our minds.

03:17.640 --> 03:21.240
And it seems every solution we've come up with has its group of critics.

03:21.240 --> 03:23.600
So I think it's going to be a good little chat.

03:23.600 --> 03:28.920
Well, before we dive into the nitty gritty details of Linux packaging,

03:28.920 --> 03:31.800
we do have a bit of early housekeeping to do today.

03:31.800 --> 03:37.280
So a plan is coming together.

03:37.280 --> 03:41.440
This is a big deal, and I wanted to give everybody a heads up as soon as possible.

03:41.440 --> 03:45.720
We're really early days into this, so I don't have everything figured out yet.

03:45.720 --> 03:49.920
But brace yourselves, we have some announcements to make.

03:49.920 --> 03:53.440
We are moving our meetup for the new server christening party

03:53.440 --> 03:56.760
to January 2nd, 2022.

03:56.760 --> 04:04.720
We're going to have a new year, new server, and a new love party,

04:04.720 --> 04:08.520
as well as the launch of a new Linux show.

04:08.520 --> 04:11.680
So let's get this all out there.

04:11.680 --> 04:16.840
We want you to come up to the studio on January 2nd, horrible virus aside.

04:16.840 --> 04:18.160
We're going to have to keep our eyes on that,

04:18.160 --> 04:22.200
because we just don't know at this point in time where that's going.

04:22.200 --> 04:23.680
So we will be keeping an eye on the news.

04:23.680 --> 04:25.240
We will try to stay flexible in that regard,

04:25.240 --> 04:27.120
and we're going to have to ask that of you as well.

04:27.120 --> 04:33.280
But right now, assuming things are OK, January 2nd, 2022,

04:33.280 --> 04:36.840
LUP, from that point forward, will be live on Sundays.

04:36.840 --> 04:39.400
This is a massive change, and it's not one that we're making lightly,

04:39.400 --> 04:42.000
because we love our Tuesday time slot.

04:42.000 --> 04:43.680
But we're moving a few things around.

04:43.680 --> 04:46.520
We'll have more information in that regard soon.

04:46.520 --> 04:50.040
That's one of the changes that's taking effect, starting January 2nd.

04:50.040 --> 04:53.480
LUP will be live on Sundays the same time.

04:53.480 --> 04:56.360
I'm going to make an effort, though, to participate in a live stream

04:56.360 --> 04:59.080
on Tuesdays at the regular time most weeks.

04:59.080 --> 05:00.480
I'll have more information on that soon.

05:00.480 --> 05:04.600
So there will still be some live stream and mumble attendance at that time.

05:04.600 --> 05:07.680
We'll also launch the new server. It'll be the christening party.

05:07.680 --> 05:10.280
We'll have a potluck here at the studio with the audience.

05:10.280 --> 05:13.880
And then what we'll do is we'll launch the server, we'll eat,

05:13.880 --> 05:17.000
and then Brent, Wes, and I will go into the studio

05:17.000 --> 05:20.880
and record a Linux unplugged, and our guests are welcome to stay here

05:20.880 --> 05:23.600
and listen to us record the show live in the studio.

05:23.600 --> 05:25.240
We both have a living room, which you'll be able to wait in,

05:25.240 --> 05:27.520
and, of course, the studio itself.

05:27.520 --> 05:30.160
And then that point forward, LUP will be on Sundays,

05:30.160 --> 05:33.040
and we'll also have a brand-new Linux show that is launched

05:33.040 --> 05:36.680
that I'll have more information on soon that I am super excited about.

05:36.680 --> 05:38.200
So there's a ton of stuff going on.

05:38.200 --> 05:41.560
New year, new server, new LUP, January 2nd.

05:41.560 --> 05:42.880
Come hang out with us in the studio.

05:42.880 --> 05:45.160
We will also try to live stream that party.

05:45.160 --> 05:46.880
I don't know how the hell we will do that.

05:46.880 --> 05:50.760
So it's like a 50-50 shot, but, you know, I'm willing to, like,

05:50.760 --> 05:53.720
bring up some, like, a jitzy and set it up on a few devices

05:53.720 --> 05:55.680
around the house or something.

05:55.680 --> 05:56.920
We'll figure it out.

05:56.920 --> 05:59.160
And if you are in the area or you can make it,

05:59.160 --> 06:02.200
you're welcome to join us for the potluck and the new server christening

06:02.200 --> 06:04.520
and the new LUP live day.

06:04.520 --> 06:06.960
We can talk more about that, too, of course, in the post show.

06:06.960 --> 06:09.200
You're always welcome to join us on Tuesdays

06:09.200 --> 06:11.040
while we are remaining in this time slot.

06:11.040 --> 06:14.120
I think we're going to be live every week for the rest of the year,

06:14.120 --> 06:17.560
as far as I can figure, because LUP doesn't land on a holiday.

06:17.560 --> 06:19.320
So we will be live for a few more Tuesdays,

06:19.320 --> 06:21.200
and we would absolutely love to have you.

06:21.200 --> 06:22.600
So check in on us.

06:22.600 --> 06:26.200
Say goodbye, maybe, you know, if you're a Tuesday person.

06:26.200 --> 06:29.600
And if you're a Sunday person, pencil it in.

06:29.600 --> 06:31.240
Consider joining us.

06:31.240 --> 06:34.760
And hopefully, hopefully, you'll love the new show

06:34.760 --> 06:35.640
when it's launched and announced.

06:35.640 --> 06:36.920
But I'll have more information about that later,

06:36.920 --> 06:38.360
because we have a lot more to get into.

06:38.360 --> 06:40.480
And hey, don't forget jupyterbroadcasting.com

06:40.480 --> 06:45.040
slash calendar to actually find out when we're live.

06:45.040 --> 06:46.800
Yeah, that's very, very handy.

06:46.800 --> 06:51.760
So let's talk about one of the most popular solutions

06:51.760 --> 06:55.200
to solve the Linux desktop problem.

06:55.200 --> 06:58.400
And that is really that we have so many different distributions

06:58.400 --> 06:59.920
with so many different library versions

06:59.920 --> 07:01.400
and so many different this and that's.

07:01.400 --> 07:04.880
Plus, you have a general requirement

07:04.880 --> 07:07.840
to start sandboxing applications for security purposes.

07:07.840 --> 07:10.320
If you want users to be able to download things safely online,

07:10.320 --> 07:12.600
it'd be nice that those things are limited

07:12.600 --> 07:14.560
in what they can do to a system.

07:14.560 --> 07:16.720
And it solves a problem.

07:16.720 --> 07:18.280
And Flatpak isn't the only one.

07:18.280 --> 07:19.040
Snaps do this.

07:19.040 --> 07:20.760
App Images do this.

07:20.760 --> 07:24.680
In a lot of ways, just general containers can do this.

07:24.680 --> 07:26.920
But today, we're talking about Flatpak.

07:26.920 --> 07:29.440
And I like to think of it, for the end user,

07:29.440 --> 07:31.720
it solves a problem where you can

07:31.720 --> 07:33.480
be on an old version of Debian, and I

07:33.480 --> 07:35.160
can be on a brand new version of Fedora,

07:35.160 --> 07:37.360
but we can run the same application.

07:37.360 --> 07:39.760
In a lot of ways, that's how it's going to impact end users,

07:39.760 --> 07:41.000
ultimately.

07:41.000 --> 07:42.320
But in a lot of ways, it also means

07:42.320 --> 07:44.400
we have a way to preserve software.

07:44.400 --> 07:48.480
It also means we can run new software on old systems.

07:48.480 --> 07:52.360
And it gives users and developers predictability.

07:52.360 --> 07:54.920
You can always expect that a subset of runtimes

07:54.920 --> 07:56.280
will be supported and compatible.

07:56.280 --> 07:58.800
So you actually have a versioned thing on the Linux desktop

07:58.800 --> 08:00.640
that you can target.

08:00.640 --> 08:03.040
So Flatpak solves those kinds of things with runtimes

08:03.040 --> 08:06.000
and whatnot in there.

08:06.000 --> 08:08.000
And it solves the sandboxing problem.

08:08.000 --> 08:12.160
And it also lets vendors self-host their own repositories

08:12.160 --> 08:13.800
and projects.

08:13.800 --> 08:15.920
It does support commercial software.

08:15.920 --> 08:18.360
And it also has a very popular distribution mechanism

08:18.360 --> 08:21.680
through FlatHub that is being integrated into distributions

08:21.680 --> 08:23.280
like Fedora.

08:23.280 --> 08:25.920
But nothing is so perfect that it can't be criticized.

08:25.920 --> 08:28.800
And the reality is there is quite a bit of criticism

08:28.800 --> 08:31.480
out there about Flatpaks.

08:31.480 --> 08:33.640
And the one that's really been going around this week

08:33.640 --> 08:38.040
is a criticism of some of the design choices in Flatpak.

08:38.040 --> 08:39.360
And one of them really comes down

08:39.360 --> 08:44.320
to storage and just duplication of work and libraries.

08:44.320 --> 08:46.440
Well, Will Thompson wrote a blog post this week

08:46.440 --> 08:48.640
addressing this criticism.

08:48.640 --> 08:50.760
And with Will's role at Endless, he's

08:50.760 --> 08:53.160
pretty deep in this ecosystem and is definitely

08:53.160 --> 08:54.600
one of the people to talk about this.

08:54.600 --> 08:56.240
Will, welcome to Linux Unplugged.

08:56.240 --> 08:57.360
Thanks, it's really great to be here.

08:57.360 --> 08:58.640
Thanks for the invitation.

08:58.640 --> 09:01.360
So you are the director of platform at Endless OS.

09:01.360 --> 09:03.680
And I get a sense that means you're

09:03.680 --> 09:06.240
pretty familiar with how many Flatpaks you guys ship

09:06.240 --> 09:08.640
and the role of Flatpaks in the Endless distribution.

09:08.640 --> 09:09.280
Is that right?

09:09.280 --> 09:10.400
Yeah, I guess so, yeah.

09:10.400 --> 09:12.280
I'm the director of OS these days.

09:12.280 --> 09:13.600
Though it's a funny situation.

09:13.600 --> 09:15.840
You'd expect from the name of Endless OS Foundation

09:15.840 --> 09:17.320
we only do an OS.

09:17.320 --> 09:18.840
We do other things as well.

09:18.840 --> 09:22.240
But yeah, I'm responsible for the OS side of things.

09:22.240 --> 09:24.800
The whole distro is based around Flatpaks.

09:24.800 --> 09:29.040
We ship a small and shrinking number

09:29.040 --> 09:31.240
of apps baked into the system.

09:31.240 --> 09:35.080
And as much as possible is done with Flatpaks on top of that.

09:35.080 --> 09:37.040
So a typical installation of Endless

09:37.040 --> 09:40.760
comes pre-installed with 60, 80 Flatpaks out of the box.

09:40.760 --> 09:43.280
My system right here has 160-something.

09:43.280 --> 09:45.080
Wow, that definitely is more than anything

09:45.080 --> 09:46.120
I've got in any of my boxes.

09:46.120 --> 09:49.240
So you're really living the Flatpak lifestyle.

09:49.240 --> 09:52.040
And so you must be just completely out of disk space

09:52.040 --> 09:53.880
because one of the criticisms I've seen

09:53.880 --> 09:56.120
is that once you have that many Flatpaks,

09:56.120 --> 09:59.240
you have a hard drive full of runtimes and duplicate

09:59.240 --> 10:00.280
libraries.

10:00.280 --> 10:01.160
Is this true?

10:01.160 --> 10:05.120
Well, it depends what you think of as full and big.

10:05.120 --> 10:06.280
I ran some numbers on this.

10:06.280 --> 10:08.520
This is one of the things that jumped out at me

10:08.520 --> 10:09.200
from this post.

10:09.200 --> 10:12.280
Because one of the first projects I worked on at Endless

10:12.280 --> 10:14.760
was around a downloadable version.

10:14.760 --> 10:17.280
And although part of the thesis of Endless OS

10:17.280 --> 10:20.480
is that disk space, when you've pre-installed

10:20.480 --> 10:22.920
lots of offline content, is much cheaper

10:22.920 --> 10:26.400
than getting internet connectivity in a rural town.

10:26.400 --> 10:29.000
So you better use the cheap disk space

10:29.000 --> 10:30.400
to store as much as possible so you

10:30.400 --> 10:31.880
don't have to download it later.

10:31.880 --> 10:33.920
But then when you come to actually people wanting

10:33.920 --> 10:36.160
to download it, you start looking a little closer

10:36.160 --> 10:39.120
at how much space things are using.

10:39.120 --> 10:42.280
From those 160-something apps on my system,

10:42.280 --> 10:44.040
I can't measure the apps quite so easily.

10:44.040 --> 10:44.560
Maybe I can.

10:44.560 --> 10:45.040
We'll see.

10:45.040 --> 10:46.960
We'll do it live.

10:46.960 --> 10:47.760
Let's check.

10:47.760 --> 10:51.760
But while I type and see if I can type fast enough

10:51.760 --> 10:53.720
to type while I can talk.

10:53.720 --> 10:55.080
Hey, real-time data is worth it.

10:55.080 --> 10:55.920
Absolutely.

10:55.920 --> 10:58.360
That's what we're all here for.

10:58.360 --> 11:00.920
My fundamental point here is the data exists.

11:00.920 --> 11:02.080
You just have to look for it.

11:02.080 --> 11:04.400
So I'm running the numbers on the app.

11:04.400 --> 11:08.200
So I have 56 gigabytes of Flatpak stuff installed.

11:08.200 --> 11:10.840
And bear in mind, that includes a complete offline copy.

11:10.840 --> 11:12.160
No, not a complete offline copy.

11:12.160 --> 11:16.080
A large subset of Wikipedia in two languages,

11:16.080 --> 11:18.400
loads of offline reference material in video form

11:18.400 --> 11:20.520
and so on, as well as things you might normally

11:20.520 --> 11:21.920
think about as apps.

11:21.920 --> 11:27.320
And so that's 56 gigs of stuff, of which 8.7 gigs

11:27.320 --> 11:30.360
is the runtimes, excluding some noise

11:30.360 --> 11:32.280
around the edges for translations and stuff

11:32.280 --> 11:33.360
like that.

11:33.360 --> 11:39.400
So you may think that's 8.7 gigs of the runtimes for those apps.

11:39.400 --> 11:40.520
That sounds like quite a lot.

11:40.520 --> 11:42.600
But the basic OS is only 4 gigabytes.

11:42.600 --> 11:45.480
So I think if you have a more conventional Linux system lying

11:45.480 --> 11:47.160
around, it'll be interesting to look

11:47.160 --> 11:48.840
at how much storage you have on there

11:48.840 --> 11:51.440
for the apps versus the platform they depend on.

11:51.440 --> 11:53.160
A little harder to separate them, perhaps.

11:53.160 --> 11:53.880
Sure.

11:53.880 --> 11:56.600
And if you install your first Flatpak,

11:56.600 --> 12:00.320
maybe it's GIMP or Steam for some of our listeners,

12:00.320 --> 12:02.760
you'll see a lot of runtime dependencies pull down.

12:02.760 --> 12:04.360
And it does seem like, gosh, that's a lot

12:04.360 --> 12:06.040
to install one application.

12:06.040 --> 12:08.600
But then when you install your second application that

12:08.600 --> 12:10.080
uses some of those same runtimes,

12:10.080 --> 12:11.160
it's already on the system.

12:11.160 --> 12:13.560
And the next app installs much quicker

12:13.560 --> 12:15.160
and pulls down a lot less data.

12:15.160 --> 12:16.360
Yeah, that's exactly right.

12:16.360 --> 12:18.080
And I had a look at this as well.

12:18.080 --> 12:20.360
And although there are a few stragglers

12:20.360 --> 12:24.160
where there's one app using one runtime, which is not ideal,

12:24.160 --> 12:26.600
the vast majority of the apps on my system

12:26.600 --> 12:28.680
are shared across five runtimes.

12:28.680 --> 12:31.560
There's more than 100 of them across just five runtimes.

12:31.560 --> 12:33.640
So I think that if you amortize the cost out

12:33.640 --> 12:36.520
across of all the apps using the same runtime,

12:36.520 --> 12:39.080
it starts looking a little bit less scary compared

12:39.080 --> 12:40.800
to the first impression.

12:40.800 --> 12:42.840
That's exactly how I felt when I first

12:42.840 --> 12:44.820
started using a lot of Flatpak applications.

12:44.820 --> 12:46.960
When I went all in on Flatpak applications

12:46.960 --> 12:48.600
for a few of my Fedora installs, that

12:48.600 --> 12:49.840
was essentially my experience.

12:49.840 --> 12:51.720
So let's move to some of the other criticisms

12:51.720 --> 12:53.240
just to get your thoughts on it.

12:53.240 --> 12:55.600
I think one of the other criticisms that resonated

12:55.600 --> 12:59.060
for me was the sandbox still allows for essentially

12:59.060 --> 13:00.920
full access to somebody's home directory

13:00.920 --> 13:03.480
where a lot of their important information would be.

13:03.480 --> 13:05.080
And it allows for writing to something

13:05.080 --> 13:07.800
like the dot autostart directory, which could just

13:07.800 --> 13:11.760
reinfect a user's system upon login over and over again.

13:11.760 --> 13:13.680
And it makes the assertion that it's not

13:13.680 --> 13:15.560
like Android and iOS, so therefore, it's

13:15.560 --> 13:17.060
not good enough.

13:17.060 --> 13:18.400
What are your thoughts on that?

13:18.400 --> 13:21.000
Because this is obviously an important issue for Endless.

13:21.000 --> 13:23.520
Yeah, it is.

13:23.520 --> 13:26.200
I think it's a little bit more complicated than that post

13:26.200 --> 13:27.000
set out.

13:27.000 --> 13:29.320
Some apps can certainly write to those locations,

13:29.320 --> 13:31.600
but the Flatpak sandbox, by default,

13:31.600 --> 13:33.240
forbids all of that stuff.

13:33.240 --> 13:37.200
There's a kind of tricky balance of pragmatism and security

13:37.200 --> 13:37.880
here.

13:37.880 --> 13:40.440
FlatHub would be useless if the apps didn't work.

13:40.440 --> 13:43.040
And if the apps are written expecting

13:43.040 --> 13:45.120
they can write to your whole home directory,

13:45.120 --> 13:47.160
then they can't be made to work without that,

13:47.160 --> 13:48.840
without someone going and modifying them.

13:48.840 --> 13:54.200
And that may be intractable right now for various reasons.

13:54.200 --> 13:57.560
But the preferred way for this stuff to work

13:57.560 --> 14:00.080
is the apps don't have these kind of static holes

14:00.080 --> 14:00.920
in the sandbox.

14:00.920 --> 14:03.920
And they instead request access to just the resources

14:03.920 --> 14:04.720
they need.

14:04.720 --> 14:05.720
So that could be files.

14:05.720 --> 14:07.040
It could be a webcam.

14:07.040 --> 14:08.680
Hopefully, in the not too distant future,

14:08.680 --> 14:12.600
your microphone will be treated the same way.

14:12.600 --> 14:17.120
And one of the criticisms that I think is totally valid

14:17.120 --> 14:20.120
is that previous versions of GNOME software

14:20.120 --> 14:22.320
would claim that if an app is a Flatpak,

14:22.320 --> 14:26.160
then it has a nice badge saying it's sandboxed.

14:26.160 --> 14:28.160
And this gives you this false sense of security,

14:28.160 --> 14:29.680
which I think is totally true, which

14:29.680 --> 14:34.640
is why GNOME 41 software totally revamps this presentation.

14:34.640 --> 14:36.640
So one of the big changes in GNOME 41

14:36.640 --> 14:38.600
was a major revamp to GNOME software, which

14:38.600 --> 14:40.280
Endless contributed a lot to.

14:40.280 --> 14:43.200
And one of those changes is that now apps

14:43.200 --> 14:46.280
have a kind of traffic light system of, are they safe?

14:46.280 --> 14:47.600
Are they possibly unsafe?

14:47.600 --> 14:48.960
Or are they unsafe?

14:48.960 --> 14:51.160
And so this is based on sort of heuristics

14:51.160 --> 14:53.880
about the kinds of these kind of sandbox holes

14:53.880 --> 14:56.400
that they request access to.

14:56.400 --> 14:58.920
So you can make a somewhat more informed decision.

14:58.920 --> 15:02.540
I mean, whether people at the end of the day

15:02.540 --> 15:05.280
would prefer to have Zoom work or not is another question.

15:05.280 --> 15:07.760
But the information, I think, is a lot

15:07.760 --> 15:09.120
less misleading these days.

15:09.120 --> 15:10.600
And so if anything is shot in the other direction,

15:10.600 --> 15:13.800
there's lots of apps which have the word unsafe near them,

15:13.800 --> 15:18.600
which if you're taking a strict reading of this, they are.

15:18.600 --> 15:21.840
So I guess the hope is that this can act as a stick

15:21.840 --> 15:25.400
where the carrot is better APIs for getting out of the box.

15:25.400 --> 15:26.260
Right.

15:26.260 --> 15:29.360
I wanted to recommend a really nice graphical application

15:29.360 --> 15:33.760
to review and modify Flatpak application permissions called

15:33.760 --> 15:34.520
Flat Seal.

15:34.520 --> 15:36.020
We'll have a link to this in the show notes.

15:36.020 --> 15:37.360
And you can open that up.

15:37.360 --> 15:38.920
It'll show you your Flatpak apps.

15:38.920 --> 15:40.480
And it'll give you a really quick overview

15:40.480 --> 15:42.000
of what they can and can't do.

15:42.000 --> 15:45.480
And just even having that kind of information is nice.

15:45.480 --> 15:47.280
And that's something that Flatpak enables.

15:47.280 --> 15:49.440
So Flat Seal is that app.

15:49.440 --> 15:52.400
OK, so, well, there was one other criticism

15:52.400 --> 15:54.520
that I read in there that I thought, hmm, yeah,

15:54.520 --> 15:56.240
that doesn't seem great.

15:56.240 --> 15:58.240
And it's when he talks about namespace collision.

15:58.240 --> 16:00.640
He says Fedora publishes a Flatpak of GIMP

16:00.640 --> 16:02.880
as org.gimp.gimp.

16:02.880 --> 16:05.920
But that conflicts with the official org.gimp.gimp

16:05.920 --> 16:09.200
that is published by the actual GIMP developers on FlatHub.

16:09.200 --> 16:11.880
And he says they should have solved for this namespace

16:11.880 --> 16:13.080
collision problem ahead of time.

16:13.080 --> 16:15.160
And now it's sort of too late.

16:15.160 --> 16:16.160
Your thoughts on that?

16:16.160 --> 16:18.320
Yeah, this is an interesting one, right?

16:18.320 --> 16:22.240
Because one of the strengths of the Flatpak as a technology

16:22.240 --> 16:25.440
is that it's possible to have multiple repositories.

16:25.440 --> 16:29.080
And so Endless has its own app repo as well.

16:29.080 --> 16:32.560
So Endless OS systems come pre-configured to install apps

16:32.560 --> 16:34.240
and have apps pre-installed from FlatHub

16:34.240 --> 16:36.320
and also from our own apps repository.

16:36.320 --> 16:39.720
That's kind of mainly because we deployed and released

16:39.720 --> 16:43.880
Endless OS with Flatpak before FlatHub existed back in 2016.

16:43.880 --> 16:46.040
And over time, we've been careful to avoid

16:46.040 --> 16:47.160
this kind of duplication.

16:47.160 --> 16:48.560
So when an app appears on FlatHub,

16:48.560 --> 16:50.080
we would remove it from EOS apps.

16:50.080 --> 16:51.560
I mean, actually, in the early days,

16:51.560 --> 16:54.920
often we would be submitting the app from our store

16:54.920 --> 16:56.800
up to FlatHub.

16:56.800 --> 16:58.920
And for exactly this kind of reason,

16:58.920 --> 17:01.760
it makes for a pretty confusing user experience

17:01.760 --> 17:03.840
when you're offered two apparently identical ways

17:03.840 --> 17:04.680
to install the same app,

17:04.680 --> 17:06.360
and they may actually be pretty different.

17:06.360 --> 17:08.280
Maybe it wouldn't have been how I would have done it.

17:08.280 --> 17:11.120
But the other side of it, I suppose,

17:11.120 --> 17:14.760
is that because of the way the sandboxing works,

17:14.760 --> 17:16.720
apps only have access out of the box

17:16.720 --> 17:20.800
to data in a directory named for the app.

17:20.800 --> 17:22.600
So you might hope that if you've installed

17:22.600 --> 17:24.640
the Fedora version of the GIMP,

17:24.640 --> 17:25.480
and then you think, oh, actually,

17:25.480 --> 17:26.760
the version on FlatHub is fresher,

17:26.760 --> 17:27.600
and you switch to that,

17:27.600 --> 17:29.640
you would probably like it to not lose all your settings,

17:29.640 --> 17:32.560
to not lose all of the dynamic permissions

17:32.560 --> 17:34.760
you have given it through the portal system

17:34.760 --> 17:36.800
in a future month, such a year,

17:36.800 --> 17:39.840
when GIMP actually uses the portal APIs

17:39.840 --> 17:41.960
that FlatHub already provides.

17:41.960 --> 17:42.800
This is a problem,

17:42.800 --> 17:44.240
and it's one we've tried to avoid endless

17:44.240 --> 17:48.480
by just not doing this, if that makes sense.

17:48.480 --> 17:49.400
Yeah, I mean, it does.

17:49.400 --> 17:51.480
And that is sort of the nice thing is you can do that.

17:51.480 --> 17:52.920
You can have your own repository.

17:52.920 --> 17:54.720
There's also all these different types of apps, right?

17:54.720 --> 17:56.400
I mean, it's one thing when we talk about GIMP

17:56.400 --> 17:57.680
because it's free software

17:57.680 --> 17:58.960
that multiple people can package

17:58.960 --> 18:01.000
versus maybe some of the proprietary apps,

18:01.000 --> 18:03.040
which the blog we're discussing also

18:03.040 --> 18:04.360
maybe puts a little focus on,

18:04.360 --> 18:07.240
and it might not have that problem with, say, Slack.

18:07.240 --> 18:09.320
Yeah, it might not, and the nice thing,

18:09.320 --> 18:11.840
one of the, I think, upsides of Flatpack

18:11.840 --> 18:13.360
and the standard selection of runtimes

18:13.360 --> 18:14.520
as an app developer is it gives you

18:14.520 --> 18:16.920
the stable baseline to target,

18:16.920 --> 18:17.760
and I think that's important

18:17.760 --> 18:20.280
both for larger commercial developers

18:20.280 --> 18:22.320
but also for small indie developers.

18:22.320 --> 18:23.480
There are loads of apps

18:23.480 --> 18:25.880
which have been written in the past year or so

18:25.880 --> 18:27.720
which are popping up straight onto FlatHub,

18:27.720 --> 18:29.160
and they haven't had to run the gauntlet

18:29.160 --> 18:31.080
getting through, you know,

18:31.080 --> 18:32.800
someone has to painstakingly submit them

18:32.800 --> 18:34.720
to, you know, 20 distros or so.

18:34.720 --> 18:37.600
So, yeah, I think one of the most interesting examples

18:37.600 --> 18:40.320
is OBS, the live streaming software.

18:40.320 --> 18:42.200
But backing up a bit, most apps on FlatHub

18:42.200 --> 18:44.600
are maintained using a Git repository

18:44.600 --> 18:47.280
on the FlatHub GitHub org,

18:47.280 --> 18:49.960
with one historical exception has been Firefox.

18:49.960 --> 18:53.200
The Mozilla, when they make a new Firefox release,

18:53.200 --> 18:55.160
they publish the same official binary

18:55.160 --> 18:56.480
directly into FlatHub,

18:56.480 --> 18:57.560
so it's the same bytes

18:57.560 --> 18:59.400
that you can download from their website,

18:59.400 --> 19:00.600
which has its ups and downs,

19:00.600 --> 19:01.840
but one of the ups is that it's got

19:01.840 --> 19:04.560
all of the official Mozilla API keys baked into it.

19:04.560 --> 19:07.240
And FlatHub now has, or is about to have,

19:07.240 --> 19:09.160
I forget which, the second such app,

19:09.160 --> 19:12.080
OBS, the live streaming studio software,

19:12.080 --> 19:14.800
will now be published directly to FlatHub.

19:14.800 --> 19:16.840
And again, it has, for the first time,

19:16.840 --> 19:18.480
other than the Ubuntu package,

19:18.480 --> 19:19.480
so I suppose the second time,

19:19.480 --> 19:20.800
but non-Ubuntu users can get

19:20.800 --> 19:22.640
an officially supported version of that

19:22.640 --> 19:24.920
that has the API keys baked into it

19:24.920 --> 19:26.520
to access various web services

19:26.520 --> 19:28.960
that community source builds don't get.

19:28.960 --> 19:30.680
And by publishing it to this one place,

19:30.680 --> 19:32.560
they can reach all of the districts.

19:32.560 --> 19:34.280
That's really exciting to hear, actually.

19:34.280 --> 19:36.360
I think the other general criticism

19:36.360 --> 19:39.120
that really kind of comes down to philosophy,

19:39.120 --> 19:41.360
and not really a technical criticism,

19:41.360 --> 19:42.880
it's common in our community,

19:42.880 --> 19:44.000
and it's one that our community

19:44.000 --> 19:45.640
is particularly quick to go to,

19:45.640 --> 19:47.680
and that is just a general criticism

19:47.680 --> 19:51.160
around the complexity of all of this.

19:51.160 --> 19:53.160
It's getting so complex

19:53.160 --> 19:55.840
that it's getting beyond the scope

19:55.840 --> 19:57.960
of an average user's ability to understand,

19:57.960 --> 20:00.360
and therefore, it's a negative thing.

20:00.360 --> 20:01.440
What are your thoughts on that?

20:01.440 --> 20:03.280
Well, who is your average user?

20:05.280 --> 20:07.120
The technology seems,

20:07.120 --> 20:10.120
some of it is pretty complicated.

20:10.120 --> 20:13.240
The way that the portal APIs work

20:13.240 --> 20:17.800
to securely pass access to a single resource

20:17.800 --> 20:19.120
from the host into the Flatback is,

20:19.120 --> 20:20.600
yeah, that's certainly more complicated

20:20.600 --> 20:21.840
than just opening a file on disk.

20:21.840 --> 20:24.360
But I think we all here, perhaps,

20:24.360 --> 20:25.960
and I'm pretty sure the author of this post agrees,

20:25.960 --> 20:27.840
that actually sandboxing is a thing we really do want.

20:27.840 --> 20:29.520
We do want this fine-grained,

20:29.520 --> 20:31.400
user-interactive runtime permission system

20:31.400 --> 20:34.280
that requires the app to make Flatback-specific

20:34.280 --> 20:36.440
API calls to activate permission dialogues.

20:36.440 --> 20:37.880
I'm quoting directly from this blog post

20:37.880 --> 20:40.800
because I agree, and that is what Flatback provides.

20:40.800 --> 20:41.920
It has that.

20:41.920 --> 20:43.960
So this is a nice point.

20:43.960 --> 20:44.800
We agree on this.

20:44.800 --> 20:45.640
This is good.

20:45.640 --> 20:48.560
And you need some complexity that you don't have

20:48.560 --> 20:51.680
with just simple file system access to enable that.

20:51.680 --> 20:53.120
But one of the things that works well

20:53.120 --> 20:56.000
with Flatback for EndlessOS is that it makes,

20:56.000 --> 20:58.240
but by really wholeheartedly adopting it,

20:58.240 --> 21:00.680
it actually makes the whole platform simpler

21:00.680 --> 21:02.480
to administer, quote unquote,

21:02.480 --> 21:03.720
particularly if you're not the kind of person

21:03.720 --> 21:05.320
who essentially wants to administer a computer.

21:05.320 --> 21:06.720
You just want to use it.

21:06.720 --> 21:09.800
So Flatback uses OS Tree, which is this,

21:10.680 --> 21:13.280
it's a bit like Git for computer programs,

21:13.280 --> 21:14.920
or Git for file systems.

21:14.920 --> 21:17.400
One of the things that works really well in EndlessOS

21:17.400 --> 21:21.040
is that we've really adopted Flatback wholeheartedly.

21:21.040 --> 21:25.080
Flatback is a footnote about podman containers,

21:25.080 --> 21:28.120
but all apps on the system from a user

21:28.120 --> 21:30.160
who doesn't know what a terminal is, is perspective.

21:30.160 --> 21:31.400
They're all coming from Flatbacks

21:31.400 --> 21:32.960
or they're baked into the OS.

21:32.960 --> 21:35.360
And the OS is just like Flatbacks are,

21:35.360 --> 21:38.160
it's distributed as a single immutable blob.

21:38.160 --> 21:41.280
You can't add packages or remove packages from EndlessOS.

21:41.280 --> 21:44.200
It is a single unit and it gets updated atomically

21:44.200 --> 21:47.960
using the same duplication for updates as Flatback provides.

21:47.960 --> 21:49.640
You can roll back to the previous version,

21:49.640 --> 21:52.480
which is kept around in case of something terrible.

21:52.480 --> 21:54.320
And so this actually makes for a really simple system

21:54.320 --> 21:56.760
that for more than half a decade,

21:56.760 --> 21:59.520
EndlessOS systems have been automatically updating

21:59.520 --> 22:02.560
if they're online, both the OS and Flatbacks.

22:02.560 --> 22:04.960
If the network connection is not metered,

22:04.960 --> 22:08.320
this happens automatically in the background and safely.

22:08.320 --> 22:11.000
So the resulting complexity for a user,

22:11.000 --> 22:13.360
I would claim is actually less.

22:13.360 --> 22:14.960
You have one place to get your app.

22:14.960 --> 22:16.440
You have one button to hit to install it.

22:16.440 --> 22:18.400
If you press Remove, it's gone.

22:18.400 --> 22:19.640
You can't break the OS.

22:19.640 --> 22:21.560
I would say that's been my experience too,

22:21.560 --> 22:24.080
is there may be more going on under the hood,

22:24.080 --> 22:26.280
but it has, from an end user's perspective,

22:26.280 --> 22:27.680
especially when I'm using something like

22:27.680 --> 22:31.960
GNOME Software and Fedora 35, it is very simple.

22:31.960 --> 22:32.800
Will, if you wouldn't mind,

22:32.800 --> 22:34.560
I wanted to give Wimpy a chance to jump in here

22:34.560 --> 22:35.680
and a couple other people,

22:35.680 --> 22:37.240
because I know they've got a few questions.

22:37.240 --> 22:38.280
So Wimpy, go ahead.

22:38.280 --> 22:39.120
Hello there.

22:39.120 --> 22:40.960
This is a fascinating conversation.

22:40.960 --> 22:43.760
And I read the blog post that you're sort of citing

22:43.760 --> 22:44.760
in all of this.

22:44.760 --> 22:49.560
And I suppose I'm coming out in support of not just

22:49.560 --> 22:53.920
Flatpak, but, you know, containerized application delivery

22:53.920 --> 22:57.400
as a philosophy as a whole.

22:57.400 --> 23:01.880
The whole argument that it is complicated for people

23:01.880 --> 23:05.200
to install applications using insert name

23:05.200 --> 23:06.760
of your favorite, you know,

23:06.760 --> 23:08.680
containerized application platform.

23:08.680 --> 23:11.320
And by the way, I'm excluding app image from that

23:11.320 --> 23:13.280
because it is not that.

23:13.280 --> 23:14.480
It's bunkum.

23:14.480 --> 23:16.280
It's simply not true.

23:16.280 --> 23:19.120
The data that I had available when I worked at Canonical

23:19.120 --> 23:21.680
showed us that overwhelmingly,

23:21.680 --> 23:24.880
the people installing applications on the Ubuntu desktop

23:24.880 --> 23:27.680
were doing it through the software center,

23:27.680 --> 23:32.680
which was a rebranded version of GNOME Software.

23:32.840 --> 23:36.640
And application installs are but a click away,

23:36.640 --> 23:40.280
regardless of whether that's a Flatpak or a Snap.

23:40.280 --> 23:42.760
And it could not be easier.

23:42.760 --> 23:46.400
And all of that ability to do atomic updates

23:46.400 --> 23:49.520
and reliable updates and having a single source,

23:49.520 --> 23:53.360
authoritative source for application delivery

23:53.360 --> 23:57.680
is far simpler than it ever was in the past

23:57.680 --> 24:02.440
with, you know, scattershot copper repositories

24:02.440 --> 24:05.360
or PPAs that you have to, you know,

24:05.360 --> 24:08.240
tag on the end of your operating system

24:08.240 --> 24:11.200
or, you know, the AUR on top of Arch.

24:11.200 --> 24:13.160
So I completely reject that argument

24:13.160 --> 24:15.680
that it's complicated for new users

24:15.680 --> 24:17.440
because it could not be simpler.

24:17.440 --> 24:18.680
I'm curious, maybe what do you think?

24:18.680 --> 24:19.920
Because part of the thing in this blog post

24:19.920 --> 24:21.400
is that we're talking about a lot of different groups.

24:21.400 --> 24:22.520
There's the user perspective,

24:22.520 --> 24:24.760
but then there's also the distribution perspective

24:24.760 --> 24:27.200
and then the application developer.

24:27.200 --> 24:28.160
And it seems like to some extent,

24:28.160 --> 24:29.800
this post is maybe arguing, you know,

24:29.800 --> 24:30.840
not necessarily for PPA,

24:30.840 --> 24:33.440
but for the standalone simpler installations.

24:33.440 --> 24:35.000
Maybe you're downloading a tar file

24:35.000 --> 24:37.960
or you're running a standalone installer in the Windows way.

24:37.960 --> 24:40.040
Curious how that rings to you, Wimpy.

24:40.040 --> 24:42.000
I feel like it doesn't matter

24:42.000 --> 24:46.040
which of the contemporary packaging systems you're utilizing.

24:46.040 --> 24:48.880
Their integration with those software services,

24:48.880 --> 24:51.880
those software delivery services, make that easy.

24:51.880 --> 24:53.920
And the core principle,

24:53.920 --> 24:57.000
certainly from a SNAP perspective, was this.

24:57.000 --> 25:00.280
If you look at what popularized

25:00.280 --> 25:05.280
in the mainstream app stores, which is mobile phones,

25:05.280 --> 25:10.000
those applications are not curated, packaged,

25:10.000 --> 25:14.600
or maintained by a group of volunteer packages.

25:14.600 --> 25:17.880
Those applications are packaged and delivered

25:17.880 --> 25:22.880
directly to those stores by the application developers.

25:22.960 --> 25:27.960
So it's positive news that the authoritative publishers

25:28.360 --> 25:32.080
of things like Firefox and OBS Studio,

25:32.080 --> 25:33.760
and I know OBS Studio has been getting

25:33.760 --> 25:36.600
a massive leg up from the fine work from George

25:36.600 --> 25:40.400
and all that he's been doing in OBS in the last year or so.

25:40.400 --> 25:43.160
It's fantastic work.

25:43.160 --> 25:48.160
The fact that Flat Hub is pivoting to vendor published apps

25:48.280 --> 25:51.840
rather than community maintained apps is the right move

25:51.840 --> 25:56.760
because there are tens of thousands of applications

25:56.760 --> 26:01.760
in our distributions repositories maintained by volunteers.

26:01.760 --> 26:06.200
There are millions of applications in the app stores

26:06.200 --> 26:08.840
for the mobile platforms.

26:08.840 --> 26:11.080
And one of the big differences is

26:11.080 --> 26:14.640
there are millions of bits of software on GitHub,

26:14.640 --> 26:17.160
but they are not in our application repos.

26:17.160 --> 26:21.600
If we pivot to a developer publishes their app,

26:21.600 --> 26:25.600
that scales far better than spreading millions of apps

26:25.600 --> 26:29.240
across a few hundred enthusiastic maintainers.

26:29.240 --> 26:31.040
I couldn't put it better.

26:31.040 --> 26:34.560
I think one of the kind of pragmatic things

26:34.560 --> 26:36.160
about Flat Hub historically has been

26:36.160 --> 26:37.760
you've got to start somewhere, right?

26:37.760 --> 26:39.760
And so a larger proportion than I would like

26:39.760 --> 26:43.680
for the apps on Flat Hub are community maintained.

26:43.680 --> 26:45.240
And I think that is changing.

26:45.240 --> 26:47.560
And the work like, yeah, George's work

26:47.560 --> 26:51.840
on helping to get OBS Studio working well as a Flat Pack,

26:51.840 --> 26:54.640
integrating well with all the modern portals

26:54.640 --> 26:56.240
and getting this publication,

26:56.240 --> 27:00.440
this first party publishing working is really superb.

27:00.440 --> 27:02.360
The other interesting development in this area

27:02.360 --> 27:06.240
is that Flat Hub has just put out a call

27:06.240 --> 27:08.600
for contractors to work on Flat Hub.

27:08.600 --> 27:09.720
It's on the Flat Hub discourse.

27:09.720 --> 27:10.880
I can pop a link.

27:10.880 --> 27:13.440
Maybe I can send a link over to pop in the show notes.

27:13.440 --> 27:17.600
So the Gnome Foundation supports Flat Hub

27:17.600 --> 27:19.360
with various things.

27:19.360 --> 27:22.920
And they're looking to contract someone to work on,

27:22.920 --> 27:25.000
or someones to work on a short term project

27:25.000 --> 27:28.320
around these kinds of things, around identity,

27:28.320 --> 27:31.440
being able to verify that yes, this app is published

27:31.440 --> 27:35.480
by the person who or people or company that make the app.

27:35.480 --> 27:38.320
To the end of being able to accept payments

27:38.320 --> 27:40.080
to the app uploader, not to Flat Hub,

27:40.080 --> 27:42.120
which is something that's alleged in this post,

27:42.120 --> 27:43.400
to the app uploader.

27:43.400 --> 27:46.000
Because if you can make a vibrant place

27:46.000 --> 27:49.160
that individual developers, companies, organizations

27:49.160 --> 27:51.400
can publish their own software straight to users,

27:51.400 --> 27:53.160
the mobile platforms have shown us

27:53.160 --> 27:56.440
that people use orders of magnitude more apps there

27:56.440 --> 27:58.120
than they do on their computers.

27:58.120 --> 27:59.200
Both because they're available

27:59.200 --> 28:02.440
and because you can install them trivially and fearlessly.

28:02.440 --> 28:04.320
Hopefully this project can be made to happen

28:04.320 --> 28:05.760
and be really exciting to see it happen.

28:05.760 --> 28:08.280
Yeah, that is some great insight, Will.

28:08.280 --> 28:11.040
Thank you so much for taking some time late in your evening

28:11.040 --> 28:13.120
to join us and discuss some of this.

28:13.120 --> 28:14.800
I feel like I've learned a lot.

28:14.800 --> 28:18.000
And I just wanted to say also thank you

28:18.000 --> 28:21.360
for taking the time to originally post your response

28:21.360 --> 28:23.080
because that's really what kicked off the conversation

28:23.080 --> 28:24.840
between Wes, Brent and myself

28:24.840 --> 28:26.960
and led to kicking this off on the show.

28:26.960 --> 28:28.920
So again, thank you for all your work there,

28:28.920 --> 28:30.600
Endless and for joining us.

28:30.600 --> 28:31.440
Thanks very much for having me.

28:31.440 --> 28:32.280
It's been a pleasure.

28:32.280 --> 28:34.240
I'm glad to have sparked some useful conversation.

28:34.240 --> 28:38.240
Linode.com slash unplugged.

28:38.240 --> 28:41.520
Go there to get $100 in 60 day credit on a new account.

28:41.520 --> 28:43.280
And you go there to support the show.

28:43.280 --> 28:46.520
Linode is cloud hosting done right under your control

28:46.520 --> 28:48.560
with 11 data centers worldwide.

28:48.560 --> 28:50.320
And they've been at this for 18 years

28:50.320 --> 28:52.320
building the absolute best experience

28:52.320 --> 28:55.840
for running applications on Linux in the cloud.

28:55.840 --> 28:57.480
If you wanna build something yourself

28:57.480 --> 28:59.600
or deploy one of their many one-click stacks,

28:59.600 --> 29:02.720
Linode has excellent options for you.

29:02.720 --> 29:04.480
And the performance.

29:04.480 --> 29:07.360
The performance is incredible.

29:07.360 --> 29:10.320
They've been rolling out MVME PCIe storage.

29:10.320 --> 29:12.800
It's so blazing fast.

29:12.800 --> 29:14.480
And I just simply wouldn't host

29:14.480 --> 29:16.240
everything that Jupyter Broadcasting has built

29:16.240 --> 29:18.360
in the last couple of years on Linode

29:18.360 --> 29:19.600
unless it was super fast.

29:19.600 --> 29:21.480
You know, I'm a performance hound.

29:22.680 --> 29:25.280
Linode has screaming fast systems.

29:25.280 --> 29:28.560
If you need fast CPUs, they've got AMD EPYC processors.

29:28.560 --> 29:30.320
If you need super fast storage.

29:30.320 --> 29:31.760
And of course they can always help you

29:31.760 --> 29:34.000
dial in the right price to performance.

29:34.000 --> 29:36.120
That is something they excel at.

29:36.120 --> 29:38.200
They're typically 30 to 50% cheaper

29:38.200 --> 29:39.600
than the major hypervisors out there.

29:39.600 --> 29:42.080
They just wanna lock you into their crazy platform anyways.

29:42.080 --> 29:46.920
And there's no way they can support you like Linode can.

29:46.920 --> 29:49.960
Linode has the absolute best customer service

29:49.960 --> 29:51.160
in the business.

29:51.160 --> 29:53.800
They have super fast rigs, great networking.

29:53.800 --> 29:55.640
They are their own ISP.

29:55.640 --> 29:58.240
And a Linux culture that permeates throughout the company.

29:58.240 --> 30:00.800
I mean, that's why they started the company.

30:00.800 --> 30:02.920
So there's a lot of reasons to choose Linode.

30:02.920 --> 30:05.320
And I didn't even get into like the dashboard

30:05.320 --> 30:07.920
and the API and the one click applications

30:07.920 --> 30:09.200
that are so nice to use.

30:09.200 --> 30:10.040
I mean, they're there.

30:10.040 --> 30:11.360
But have you thought like how great it would be

30:11.360 --> 30:14.240
just to have your own GitLab or Jitsi server

30:14.240 --> 30:16.560
in just a couple of clicks?

30:16.560 --> 30:19.080
So I just, I really don't need to say much more

30:19.080 --> 30:21.120
because I think what puts it over the top

30:21.120 --> 30:23.680
is when you go grab that $100 and try it yourself.

30:23.680 --> 30:25.560
Because you get to try something rad

30:25.560 --> 30:27.320
and you get to support the show.

30:27.320 --> 30:28.520
It's a great opportunity to learn

30:28.520 --> 30:30.280
and a great opportunity to support the show.

30:30.280 --> 30:31.920
Linode.com slash unplugged.

30:31.920 --> 30:35.320
Go get that $100 in 60 day credit on a new account

30:35.320 --> 30:36.480
and support the show.

30:36.480 --> 30:38.920
Linode.com slash unplugged.

30:38.920 --> 30:44.120
Now, Chris, I think we have about two more criticisms

30:44.120 --> 30:45.160
that are worth mentioning.

30:45.160 --> 30:46.720
You wanna pick it up there?

30:46.720 --> 30:48.400
Just a few more from the post.

30:48.400 --> 30:50.200
One that's probably definitely worth talking about

30:50.200 --> 30:52.880
because it's one that end users are going to experience

30:52.880 --> 30:55.840
is it is complicated when it comes to

30:55.840 --> 30:59.080
specific software packages that require drivers.

30:59.080 --> 31:02.880
Like Nvidia video drivers, like the Steam package.

31:02.880 --> 31:07.280
Because you could be on like Ubuntu, I don't know, 18.04

31:07.280 --> 31:10.000
and Flatpak can't do anything about your kernel.

31:10.000 --> 31:12.480
It's gotta work with the host kernel's system.

31:12.480 --> 31:15.960
So it will then have to pull down a runtime

31:15.960 --> 31:17.640
that matches your specific kernel.

31:17.640 --> 31:18.800
So if you can imagine on the back end,

31:18.800 --> 31:19.640
that's a lot of work.

31:19.640 --> 31:20.720
It's a lot of different runtimes.

31:20.720 --> 31:23.800
It isn't an elegant solution,

31:23.800 --> 31:25.560
but it feels like the kind of problem

31:25.560 --> 31:28.280
you do solve for fragmentation.

31:28.280 --> 31:30.960
And yeah, it's a little bit technical on the back end,

31:30.960 --> 31:34.600
but as long as the end user experience remains consistent

31:34.600 --> 31:36.920
and the developer experience remains documented

31:36.920 --> 31:39.000
and workable, it actually seems like

31:39.000 --> 31:41.920
it's a pretty good compromise despite its complexity.

31:41.920 --> 31:44.800
But in all of this, I think we've kind of gotten

31:44.800 --> 31:47.880
a little carried away conflating a few technologies.

31:47.880 --> 31:49.360
A lot of things are getting thrown around

31:49.360 --> 31:51.920
like containers and sandboxing.

31:51.920 --> 31:54.480
And the implication might be in these conversations

31:54.480 --> 31:58.560
that you have to have Flatpaks or snaps to have sandboxing.

31:58.560 --> 31:59.880
But that's not necessarily the case.

31:59.880 --> 32:01.760
And Neil, I think you wanted to expand on that.

32:01.760 --> 32:03.440
It's actually never really been the case

32:03.440 --> 32:06.080
that security, sandboxing, these portals

32:06.080 --> 32:08.600
and all that stuff are necessarily requiring you

32:08.600 --> 32:11.960
to change the way the application is built and distributed.

32:11.960 --> 32:16.960
Because the OBS Studio, RPM and Fedora, for example,

32:16.960 --> 32:21.120
or Firefox and Fedora when running on Wayland,

32:21.120 --> 32:24.040
activates those portals and does all the same things.

32:24.040 --> 32:27.640
Your general computing experience

32:27.640 --> 32:30.200
can be more consistent in this regard

32:30.200 --> 32:35.200
if application developers know how to code to these APIs,

32:35.440 --> 32:39.640
whether it's shipped as an RPM or a Flatpak,

32:39.640 --> 32:43.120
a snap, a Debian package, or even just a bloody tarball

32:43.120 --> 32:46.920
that you download or an app image.

32:46.920 --> 32:51.920
And I don't think it's a good idea for us to conflate the two

32:53.240 --> 32:57.400
because that leaves a large gamut of applications

32:57.400 --> 32:59.920
that can benefit from these technologies

32:59.920 --> 33:02.960
when they cannot be distributed that way.

33:02.960 --> 33:05.360
Like system critical applications

33:05.360 --> 33:07.120
or stuff that should be part of the base OS

33:07.120 --> 33:11.600
so that you have a functional set of base software

33:11.600 --> 33:13.960
should also be able to take advantage of these things.

33:13.960 --> 33:16.440
There's no reason that you can't have

33:16.440 --> 33:19.480
the bubble wrap based sandboxing with the portals

33:19.480 --> 33:22.320
and all that stuff kick in for an RPM

33:22.320 --> 33:23.960
like you do for a Flatpak.

33:23.960 --> 33:25.840
Neil, I'm curious if you have any insights

33:25.840 --> 33:28.400
into how Fedora is approaching Flatpaks

33:28.400 --> 33:30.920
and especially some of those namespace concerns

33:30.920 --> 33:32.240
that have been floating around.

33:32.240 --> 33:33.280
The way we're doing it right now

33:33.280 --> 33:37.160
is that the software centers prioritize Fedora sources

33:37.160 --> 33:39.880
by default over third party ones.

33:39.880 --> 33:42.320
So there's a priority level and ours is higher.

33:42.320 --> 33:45.840
And if you click the button to install something,

33:45.840 --> 33:50.720
it will prefer the Fedora source over the third party one

33:50.720 --> 33:51.960
if the identifiers are the same

33:51.960 --> 33:54.240
and the user hasn't changed any settings.

33:54.240 --> 33:57.560
The reason why this comes up actually

33:57.560 --> 34:00.200
is a fairly interesting one.

34:00.200 --> 34:03.040
In some cases, it's just straight up

34:03.040 --> 34:05.640
not a good idea to distribute

34:05.640 --> 34:08.160
or a bundle the distribution

34:08.160 --> 34:10.520
of something from a third party,

34:10.520 --> 34:14.040
particularly when there are legal requirements

34:14.040 --> 34:18.000
or the upstream developer may have questionable character

34:18.000 --> 34:19.040
or things like that.

34:19.040 --> 34:22.560
For example, Audacity from earlier this year,

34:22.560 --> 34:24.240
the stuff that they're shipping

34:24.240 --> 34:26.040
has some of those things going on,

34:26.040 --> 34:31.040
but the Audacity RPM and Flatpak from Fedora don't.

34:33.000 --> 34:35.640
And I think it's important to recognize

34:35.640 --> 34:39.960
that there is actually a trade off to switching to a model

34:39.960 --> 34:41.800
where developers are the ones

34:41.800 --> 34:44.840
doing all of this distribution work themselves.

34:44.840 --> 34:48.320
And that is, you no longer have a review or a counterweight.

34:48.320 --> 34:50.960
That may be fine, that may not be fine.

34:50.960 --> 34:52.000
It really depends.

34:52.000 --> 34:55.280
Like a big part of in the Android ecosystem,

34:55.280 --> 34:56.720
I know a lot of people were talking about this

34:56.720 --> 35:00.120
about how people use apps more on Android and iOS

35:00.120 --> 35:02.440
and whatnot, but like in the Android ecosystem,

35:02.440 --> 35:05.080
there has historically been a problem of malware

35:05.080 --> 35:07.640
before Google started getting into it

35:07.640 --> 35:10.200
and started digging into all the things.

35:10.200 --> 35:13.600
And even with all that, it's still a problem

35:13.600 --> 35:15.920
because at the end of the day,

35:15.920 --> 35:19.000
developers have no check against them.

35:19.000 --> 35:20.720
There is nothing checking them.

35:20.720 --> 35:22.880
And yes, the Linux distribution model

35:22.880 --> 35:24.020
is certainly not perfect.

35:24.020 --> 35:27.040
And maybe a balance of the two is certainly better,

35:27.040 --> 35:29.280
but like, let's not get carried away

35:29.280 --> 35:31.000
and throw out the baby with the bathwater.

35:31.000 --> 35:34.080
It's still valuable to have people

35:34.080 --> 35:35.480
being checks against each other

35:35.480 --> 35:37.800
to make sure that we're all doing a good job here.

35:37.800 --> 35:39.640
Yeah, especially with security in mind.

35:39.640 --> 35:41.880
Wimpy, it looks like you have some thoughts

35:41.880 --> 35:43.200
and I know you have some experience

35:43.200 --> 35:46.240
on the deduplication conversation here.

35:46.240 --> 35:47.400
Can you fill us in?

35:47.400 --> 35:51.840
Yeah, so on the proliferation of libraries

35:51.840 --> 35:54.200
and what have you, there are mechanisms

35:54.200 --> 35:56.920
that exist in Snaps and Flatpak

35:56.920 --> 36:00.900
that allow you to create reusable runtimes,

36:00.900 --> 36:03.920
which still means there is some duplication,

36:03.920 --> 36:06.640
but that duplication is one time only

36:06.640 --> 36:10.160
for a common runtime that exists

36:10.160 --> 36:13.720
across most applications that you're gonna run

36:13.720 --> 36:15.080
on the desktop.

36:15.080 --> 36:19.320
But this is one of the sort of prices you have to pay

36:19.320 --> 36:21.640
for containerized applications

36:21.640 --> 36:25.560
that it does come with that sort of bundling approach.

36:25.560 --> 36:29.760
And there are technologies that are growing in popularity

36:29.760 --> 36:32.820
that address some of this in order to trim out

36:32.820 --> 36:35.760
some of that duplication of files.

36:35.760 --> 36:37.440
And I'm not gonna plug this too heavily,

36:37.440 --> 36:40.920
but where I work now, we have an open source project

36:40.920 --> 36:44.100
called Docker Slim, which does precisely this,

36:44.100 --> 36:46.840
using dynamic and static analysis,

36:46.840 --> 36:49.600
will pull out all of the cruft that exists

36:49.600 --> 36:52.160
in Docker and OCI containers.

36:52.160 --> 36:55.320
And there's no reason why those technologies

36:55.320 --> 36:59.520
couldn't be applied to the Linux desktop space.

36:59.520 --> 37:03.060
And speaking specifically about the Linux desktop,

37:03.060 --> 37:04.900
there are two very important points

37:04.900 --> 37:08.200
that people need to get on board with regarding

37:08.200 --> 37:11.200
contemporary application delivery on Linux,

37:11.200 --> 37:12.720
the Linux desktop.

37:12.720 --> 37:17.420
The first is, if you install, let's say Google Chrome,

37:17.420 --> 37:20.640
in the traditional way, you download the RPM or the deb

37:20.640 --> 37:24.260
from the Google Chrome website and install it on your system,

37:24.260 --> 37:28.680
go and S-trace Google Chrome when it starts up

37:28.680 --> 37:33.680
and go and look at just how much grubbing around it does

37:33.880 --> 37:37.680
in your home directory, trying to hoover up everything

37:37.680 --> 37:41.280
it can learn about you and your system.

37:41.280 --> 37:44.880
And you will start to appreciate the efforts,

37:44.880 --> 37:47.360
because I know that the Linux desktop users

37:47.360 --> 37:50.200
are a huge percentage of very privacy orientated,

37:50.200 --> 37:52.160
privacy conscious people.

37:52.160 --> 37:56.920
The sandboxed applications prevent that kind of,

37:56.920 --> 38:01.600
you know, just pillaging of your information and data

38:01.600 --> 38:05.520
before you even go to a website and you get, you know,

38:05.520 --> 38:07.400
tracked and traced there.

38:07.400 --> 38:11.680
So consider that the sandboxing does play a role

38:11.680 --> 38:13.360
in protecting your privacy.

38:13.360 --> 38:15.140
You need to be thinking about that.

38:15.140 --> 38:19.440
And the other is this, all significant investment

38:19.440 --> 38:22.580
that happens in the Linux ecosystem today

38:22.580 --> 38:26.720
is in container and virtualization technologies.

38:26.720 --> 38:30.520
It is a multi-billion dollar industry.

38:31.440 --> 38:36.440
Desktop Linux cannot refuse to get on board

38:36.740 --> 38:41.740
with containers and VMs as part of the OS landscape

38:43.040 --> 38:44.480
in the future.

38:44.480 --> 38:49.480
If we do that, we are paving a way towards obsolescence

38:51.500 --> 38:55.800
and irrelevance, because all the significant development

38:55.800 --> 39:00.800
is in those technologies and desktop Linux users

39:01.880 --> 39:05.480
need to embrace this sort of, it's an inevitable future.

39:05.480 --> 39:08.920
If we resist it, then it's over for us.

39:08.920 --> 39:11.200
You know, there is no future.

39:11.200 --> 39:14.920
So it's a matter of embracing the technology,

39:14.920 --> 39:17.460
the people that are competent and capable,

39:17.460 --> 39:19.960
improving and developing the support

39:19.960 --> 39:21.560
around those technologies.

39:21.560 --> 39:25.440
And you do a great job of putting it all into perspective.

39:25.440 --> 39:29.080
What we have to keep in mind is desktop Linux's bread

39:29.080 --> 39:31.480
gets buttered by the enterprise side.

39:31.480 --> 39:33.200
I mean, even like we've talked about recently here

39:33.200 --> 39:36.640
on the show, PipeWire is the direct result

39:36.640 --> 39:40.120
of businesses investing in automotive Linux.

39:40.120 --> 39:44.880
And what a lot of very clever developers

39:44.880 --> 39:48.280
have been very, very good at doing for a long time

39:48.280 --> 39:51.720
is leveraging the investments for enterprise Linux

39:51.720 --> 39:54.160
into desktop technologies.

39:54.160 --> 39:56.360
And that's what's happening here.

39:56.360 --> 39:58.600
And I think you make a great point, Wimpy.

39:58.600 --> 40:01.920
It's kind of like, even if you wanted to make the argument,

40:01.920 --> 40:03.880
well, the other desktop operating systems

40:03.880 --> 40:05.280
don't have to do this,

40:05.280 --> 40:07.480
well, they have a different business model.

40:07.480 --> 40:09.080
No, but they are.

40:09.080 --> 40:12.520
Mac OS is a hugely virtualized platform

40:12.520 --> 40:14.340
and so is Windows these days.

40:14.340 --> 40:18.080
It's just all transparent and hidden under the covers.

40:18.080 --> 40:20.160
And that's where we need to get to.

40:20.160 --> 40:22.280
Right, yeah, in fact, I broke this down

40:22.280 --> 40:24.200
on Coder Radio recently.

40:24.200 --> 40:26.680
The last three versions of Mac OS have,

40:26.680 --> 40:30.080
each version has just completely re-architected

40:30.080 --> 40:32.120
the file system directly underneath the user

40:32.120 --> 40:33.680
without even them noticing,

40:33.680 --> 40:36.960
to the point now where Mac OS is using

40:36.960 --> 40:40.160
an immutable file system for its primary OS.

40:40.160 --> 40:42.960
And the applications folder is a hybrid folder

40:42.960 --> 40:46.120
of immutable applications that are grafted in

40:46.120 --> 40:48.400
with the user applications that are stored

40:48.400 --> 40:52.960
in a writable section of the APFS disk system.

40:52.960 --> 40:57.040
And when they reboot and like stuff like that,

40:57.040 --> 41:01.160
they're checking like the signature of a snapshot image

41:01.160 --> 41:03.800
and they're booting into a snapshot.

41:03.800 --> 41:05.560
And then when they do updates,

41:05.560 --> 41:08.600
they're doing like the immutable switch over and reboot.

41:08.600 --> 41:11.560
Like we've been talking about in desktop Linux now

41:11.560 --> 41:12.920
for years with some of these things

41:12.920 --> 41:14.880
and they just incrementally rolled it out

41:14.880 --> 41:16.320
in the last three releases.

41:16.320 --> 41:18.640
It's also important to note that for both Windows

41:18.640 --> 41:20.960
and Mac OS, they did it without changing

41:20.960 --> 41:23.200
the way developers deliver applications.

41:23.200 --> 41:25.640
That's a huge difference from how the Linux world

41:25.640 --> 41:26.480
is approaching it.

41:26.480 --> 41:28.760
And that's, I think, a big part of why people

41:28.760 --> 41:30.480
are resisting so hard.

41:30.480 --> 41:33.440
Because in the commercial world,

41:33.440 --> 41:36.840
it is recognized that you cannot screw with people

41:36.840 --> 41:39.840
when you are trying to improve the user experience.

41:39.840 --> 41:44.160
And that is something that I don't think enough people

41:44.160 --> 41:46.960
on the free software side actually understand.

41:46.960 --> 41:48.680
We probably need to wrap it here

41:48.680 --> 41:50.120
because we have to wrap up at some point.

41:50.120 --> 41:52.120
But the other thing that's been interesting

41:52.120 --> 41:54.600
is I'm really getting a better sense

41:54.600 --> 41:56.840
of what the future looks like for Flat Hub.

41:56.840 --> 41:58.560
And I think I'm good with it.

41:58.560 --> 42:00.480
I think that's actually going to be a good thing.

42:00.480 --> 42:02.320
If it's some kind of paying mechanism

42:02.320 --> 42:04.240
that I'm comfortable with,

42:04.240 --> 42:05.880
assuming that it's something that's nice and clean

42:05.880 --> 42:07.560
and doesn't feel gross,

42:07.560 --> 42:09.600
I think that's going to be a great direction for Flat Hub.

42:09.600 --> 42:10.960
I mean, it's something we've kind of talked about

42:10.960 --> 42:13.320
needing more widely in our ecosystem, right?

42:13.320 --> 42:15.040
And I mean, so far, there's been various attempts,

42:15.040 --> 42:17.880
but none of them are necessarily widely successful.

42:17.880 --> 42:18.720
Yeah, yeah.

42:18.720 --> 42:21.080
I mean, I think the elementary OS App Center

42:21.080 --> 42:24.400
has proven it out on a certain scale.

42:24.400 --> 42:27.280
And I think Flat Hub would be the next scale up.

42:27.280 --> 42:30.560
And it's the thing that we've always looked for,

42:30.560 --> 42:34.600
even back when we had quite the software store on Ubuntu,

42:34.600 --> 42:37.360
we really always wanted something that was cross-distro.

42:37.360 --> 42:39.000
And a few different places,

42:39.000 --> 42:41.240
even the Lindos folks took a crack at that,

42:41.240 --> 42:43.400
but nothing quite like this.

42:43.400 --> 42:46.680
And part of it is because Flat Pack

42:46.680 --> 42:49.320
is solving those fundamental issues.

42:49.320 --> 42:51.920
And then Flat Hub is just a front end

42:51.920 --> 42:53.440
on top of getting access to the stuff

42:53.440 --> 42:56.800
and making it simple for the end user.

42:56.800 --> 42:57.640
But with all of that,

42:57.640 --> 42:59.320
I think we'd just like to leave it to the audience.

42:59.320 --> 43:00.920
So if you'd like to give us your thoughts

43:00.920 --> 43:02.280
or your opinions on this stuff,

43:02.280 --> 43:04.200
or perhaps you think we've missed something,

43:04.200 --> 43:05.560
please do let us know.

43:05.560 --> 43:07.200
Sometimes the pushback emails

43:07.200 --> 43:10.200
are our absolute favorite emails to respond to.

43:10.200 --> 43:12.960
So go to linuxunplugged.com slash contact

43:12.960 --> 43:14.160
and share your thoughts.

43:16.040 --> 43:19.880
Now we did a episode, Linux Unplugged 4.31.

43:19.880 --> 43:22.600
That's three episodes ago on command line love,

43:22.600 --> 43:26.800
which was a bit of an homage to the Ubuntu podcast segment.

43:26.800 --> 43:29.320
And we keep getting mail from that episode.

43:29.320 --> 43:30.800
It's just incredible.

43:30.800 --> 43:34.000
So here are three from that.

43:34.000 --> 43:35.840
Costas wrote in and he says,

43:35.840 --> 43:38.280
as a programmer, I would fight tooth and nail

43:38.280 --> 43:40.960
before anyone took my command line away from me.

43:40.960 --> 43:43.720
That said, I am familiar with two situations

43:43.720 --> 43:45.920
where the command line is a no-go.

43:45.920 --> 43:48.360
Any device without a physical keyboard at hand,

43:48.360 --> 43:50.840
mobile phones, tablets, integrated gaming PCs,

43:50.840 --> 43:53.480
think Steam Deck or its myriad predecessors,

43:53.480 --> 43:56.080
including my beloved One X player.

43:56.080 --> 43:58.400
These devices rely on software keyboards,

43:58.400 --> 44:01.120
which are ill-equipped for regular usage of the command line.

44:01.120 --> 44:03.720
I would have to totally agree.

44:03.720 --> 44:07.360
And Chris, maybe that device you teased in the pre-show

44:07.360 --> 44:09.520
is maybe solving that for you.

44:09.520 --> 44:12.720
He continues, the lack of English language skills

44:12.720 --> 44:14.480
is the other situation.

44:14.480 --> 44:16.120
Let's take my parents as an example,

44:16.120 --> 44:19.600
Greek retirees with a past end of life iMac

44:19.600 --> 44:21.080
that I'm about to install Linux on.

44:21.080 --> 44:24.680
My father was coding on a ZX Spectrum in his 20s

44:24.680 --> 44:28.240
and relied on books translated to Greek to get him going.

44:28.240 --> 44:30.520
I doubt he would be able to deal with man pages

44:30.520 --> 44:32.240
written in English to get stuff done.

44:32.240 --> 44:34.800
As far as I know, and correct me if I'm wrong,

44:34.800 --> 44:37.320
command line interfaces don't get translated

44:37.320 --> 44:38.920
as much as graphical ones.

44:38.920 --> 44:40.760
I believe that we can find a lot of people in communities

44:40.760 --> 44:44.200
where mobile phones are their primary computation device

44:44.200 --> 44:46.600
and English proficiency is low.

44:46.600 --> 44:48.200
The command line is cool and powerful,

44:48.200 --> 44:50.360
but not always an option.

44:50.360 --> 44:52.920
Now I was curious with that,

44:52.920 --> 44:56.560
does anyone use translations of the command line

44:56.560 --> 44:58.360
on a regular basis, maybe in the Mumble Room?

44:58.360 --> 45:00.560
Yeah, it's commonplace.

45:00.560 --> 45:02.200
Some people don't know this,

45:02.200 --> 45:06.400
but like one of the major innovations from GNU

45:06.400 --> 45:10.320
was adding first-class support for internationalization

45:10.320 --> 45:12.320
and localization to the command line.

45:12.320 --> 45:14.560
It didn't really exist in the way

45:14.560 --> 45:16.640
that we have it today in Linux.

45:16.640 --> 45:19.600
It didn't exist before then.

45:19.600 --> 45:21.960
One of the reasons why the GNU core utils is so complex,

45:21.960 --> 45:24.880
I know a lot of people say use BusyBox

45:24.880 --> 45:27.680
or some of the other ones because they're simpler,

45:27.680 --> 45:29.080
whatever, and less bloat.

45:29.080 --> 45:31.440
A lot of the bloat actually comes from the fact

45:31.440 --> 45:33.600
that they made internationalization

45:33.600 --> 45:36.960
a first-class aspect of their user space.

45:36.960 --> 45:39.280
And that has actually carried forward

45:39.280 --> 45:42.640
to most of the important command line tools,

45:42.640 --> 45:47.640
like your package managers, your monitoring utilities.

45:48.960 --> 45:50.360
A lot of those things tend,

45:50.360 --> 45:53.880
like even Docker has translations,

45:53.880 --> 45:57.640
Podman too, like it's a fairly common thing.

45:57.640 --> 45:59.280
Maybe not Manpages necessarily

45:59.280 --> 46:02.360
because the Manpage translation infrastructure kind of sucks.

46:02.360 --> 46:07.080
But even with that, go look at your file system sometime.

46:07.080 --> 46:11.040
There's actually a good chunk of translated Manpages.

46:11.040 --> 46:12.680
PyCrash, I wanted to give you a chance to jump in

46:12.680 --> 46:14.280
because I think you've been involved

46:14.280 --> 46:15.680
with some of these translations.

46:15.680 --> 46:17.400
I speak Spanish and German,

46:17.400 --> 46:21.840
and I provided translation for a couple of distributions

46:21.840 --> 46:25.920
and open source projects, and they actually get translated.

46:25.920 --> 46:29.120
I mean, the output from the command line,

46:29.120 --> 46:30.800
one of the biggest problems I had

46:30.800 --> 46:32.440
when I started using testing

46:32.440 --> 46:35.280
is I needed to set my command line

46:35.280 --> 46:37.480
to please do the output in English

46:37.480 --> 46:40.280
because most developers want the output in English

46:40.280 --> 46:42.040
when they look at the back.

46:43.160 --> 46:46.040
So a lot of the command line utilities

46:46.040 --> 46:49.400
actually are doing output in your language.

46:49.400 --> 46:52.240
The only thing that is not translated,

46:52.240 --> 46:54.800
it's usually the flags, for example,

46:54.800 --> 46:57.240
are for recursive or stuff like that.

46:57.240 --> 46:59.560
But otherwise, it's actually,

46:59.560 --> 47:03.600
the output is actually really good in non-English languages.

47:03.600 --> 47:05.520
Okay, that makes me feel a little better.

47:05.520 --> 47:07.160
This is why it's so great to have an open Mumble Room

47:07.160 --> 47:08.560
because I just really wasn't quite sure

47:08.560 --> 47:09.800
what the answer was to that.

47:09.800 --> 47:11.960
I felt like Manpages, that made sense

47:11.960 --> 47:14.080
because there's so many alternatives online now.

47:14.080 --> 47:16.120
Right, it's an area we're kind of blind to.

47:16.120 --> 47:17.240
Yeah, it is good to hear

47:17.240 --> 47:19.200
there's a lot of work, though, getting done there.

47:19.200 --> 47:21.880
Listener Kevin quickly mentioned and remind me,

47:21.880 --> 47:24.640
which I forgot, that in Brunch with Brent

47:24.640 --> 47:27.560
with Stuart Langridge, he mentioned

47:27.560 --> 47:30.200
that search engines are in essence a command line prompt

47:30.200 --> 47:31.600
with an understanding by the user

47:31.600 --> 47:33.920
that no mistake they make can harm their system.

47:33.920 --> 47:35.280
So check that out.

47:35.280 --> 47:36.960
We'll leave a link in the show notes.

47:36.960 --> 47:38.560
Mind blown, mind blown, right?

47:38.560 --> 47:41.080
It's a command line that average users

47:41.080 --> 47:43.600
have just adapted to, they've gotten used to.

47:43.600 --> 47:47.440
For a little piece of maybe some spicy mail that we got,

47:47.440 --> 47:48.840
Forrest Lake writes in,

47:48.840 --> 47:51.520
hey team, just listen to your command line love episode.

47:51.520 --> 47:53.920
I hate to say it, but that's the biggest bunch

47:53.920 --> 47:56.200
of elitist BS that I've ever heard.

47:56.200 --> 47:59.120
You, the show and guests always talk about productivity

47:59.120 --> 48:02.440
and how shaving off time can have such a big impact

48:02.440 --> 48:05.280
on your day, but we expect people to waste time

48:05.280 --> 48:08.160
jumping on forums, asking the hyper intelligent gurus

48:08.160 --> 48:10.120
how to do things on the command line.

48:10.120 --> 48:13.200
That is a waste of precious time and very unproductive

48:13.200 --> 48:16.760
as the general response for the elite is Google it.

48:16.760 --> 48:18.040
I'm not here to give you answers.

48:18.040 --> 48:20.600
You need to learn young Padawan.

48:20.600 --> 48:22.320
I've been a Linux user since the nineties

48:22.320 --> 48:24.600
and will always look for a gooey way of doing things

48:24.600 --> 48:26.960
as the forums provide no answers for people

48:26.960 --> 48:29.240
without receiving some attitude.

48:29.240 --> 48:31.140
If there was a gooey solution for every problem,

48:31.140 --> 48:33.960
just like windows, then the year of the Linux desktop

48:33.960 --> 48:36.240
would have been in the late nineties or two thousands.

48:36.240 --> 48:38.160
I guess the question is,

48:38.160 --> 48:41.080
do you want Linux to be omnipresent or an OS distro

48:41.080 --> 48:42.800
for those who camp in the forums?

48:42.800 --> 48:44.640
That is a very strong opinion.

48:44.640 --> 48:47.800
I have used Linux since the nineties

48:47.800 --> 48:51.320
and I could probably count on one hand

48:51.320 --> 48:53.720
how many times I've actually gotten like an STFU

48:53.720 --> 48:56.300
go Google noob kind of response.

48:57.160 --> 49:00.280
It did happen more often in the early days in IRC,

49:00.280 --> 49:02.720
especially when you come like charging into a room

49:02.720 --> 49:03.960
and there's like a conversation,

49:03.960 --> 49:05.580
they're all in the middle of like some heated debate

49:05.580 --> 49:07.280
for like the last half hour

49:07.280 --> 49:09.640
and you pop in there demanding an answer.

49:09.640 --> 49:12.360
Yeah, sometimes you get told to take a hike

49:12.360 --> 49:13.740
and that used to happen more often.

49:13.740 --> 49:17.160
But now we have so many platforms

49:17.160 --> 49:19.480
that are like specifically set up

49:19.480 --> 49:22.240
to come ask your question and get an answer.

49:22.240 --> 49:24.080
So the context has been set,

49:24.080 --> 49:25.960
the table has been set for you

49:25.960 --> 49:27.480
to come and ask your question.

49:27.480 --> 49:30.000
Then I find that to be a lot less of an occurrence.

49:30.000 --> 49:34.080
And then when you participate in more niche down communities

49:34.080 --> 49:37.060
like the podcast communities or a distro specific community

49:37.060 --> 49:39.080
or a project specific community,

49:39.080 --> 49:40.440
you find even nicer people there

49:40.440 --> 49:42.080
cause it's even a smaller group of people

49:42.080 --> 49:43.640
that are generally like-minded

49:43.640 --> 49:45.760
because they're organized around something.

49:45.760 --> 49:47.720
And so it's pretty common in those groups

49:47.720 --> 49:49.400
to have like people around that are like

49:49.400 --> 49:51.180
sort of the unofficial welcoming committee

49:51.180 --> 49:53.480
that are generally very nice on outreach.

49:53.480 --> 49:54.920
I really don't find this to be an issue

49:54.920 --> 49:59.640
and I'm just kind of using nearly 30 years of experience

49:59.640 --> 50:01.240
to derive that opinion.

50:01.240 --> 50:03.200
So from that, it's your experience

50:03.200 --> 50:05.060
but that's not everyone's experience, right?

50:05.060 --> 50:07.560
That's what my conclusion is from that.

50:07.560 --> 50:09.620
I think the other thing I just wanted to point out

50:09.620 --> 50:11.840
is that the response of how people talk

50:11.840 --> 50:12.860
about command line tools

50:12.860 --> 50:14.840
and the functionality of command line tools,

50:14.840 --> 50:16.080
those are two different things.

50:16.080 --> 50:18.320
And I'm not saying command line tool for every situation

50:18.320 --> 50:20.540
but how people tell you how to use them

50:20.540 --> 50:23.240
and what they are capable of doing are two separate issues.

50:23.240 --> 50:25.600
Right, and of course there's different modes here, right?

50:25.600 --> 50:27.360
You mentioned productivity in the feedback

50:27.360 --> 50:28.360
and yeah, okay, I mean,

50:28.360 --> 50:29.560
if you're having to learn additional tools

50:29.560 --> 50:30.560
that might slow you down now

50:30.560 --> 50:32.160
but you also have to think about the long-term

50:32.160 --> 50:33.840
and some of the reasons we love the command line

50:33.840 --> 50:36.360
is because if you do have stuff to get done,

50:36.360 --> 50:38.560
it can often be one of the most efficient ways to do it.

50:38.560 --> 50:40.960
Command line tools are just software

50:40.960 --> 50:44.040
in the same that graphical applications are software.

50:44.040 --> 50:46.380
And there are graphical applications

50:46.380 --> 50:50.880
that are complex to use like DaVinci Resolve

50:50.880 --> 50:54.040
and I had to spend hours watching videos

50:54.040 --> 50:58.360
and reading documentation to even scratch the surface

50:58.360 --> 51:00.580
of what's possible with that software.

51:00.580 --> 51:02.440
So I think it's fine

51:02.440 --> 51:05.120
that if you are doing something complicated,

51:05.120 --> 51:08.760
you might need to seek some resources,

51:08.760 --> 51:12.520
reference material, tutorials, use a group

51:12.520 --> 51:16.400
in order to learn how to manipulate that software

51:16.400 --> 51:17.960
to do what you need to do.

51:17.960 --> 51:20.160
And I don't think it's strictly the preserve

51:20.160 --> 51:21.920
of command line applications.

51:21.920 --> 51:22.760
Very well put, I mean,

51:22.760 --> 51:27.140
I've seen some really complex enterprise applications

51:27.140 --> 51:30.400
that you have to send end users to training sessions

51:30.400 --> 51:33.620
just so they can master 10% of its functionality.

51:34.760 --> 51:37.920
And when it comes to supportability and whatnot,

51:37.920 --> 51:41.520
like one of the positives and negatives, right,

51:41.520 --> 51:42.680
is the community support,

51:42.680 --> 51:45.520
but part of that is self-inflicted.

51:45.520 --> 51:48.860
We just don't have the, you know,

51:48.860 --> 51:53.220
outside of SUSE and I think also Canonical,

51:53.220 --> 51:56.400
I don't know of anyone that directly offers

51:56.400 --> 51:58.700
desktop Linux support anymore.

51:58.700 --> 52:03.000
And you kind of have to go with what's out there.

52:03.000 --> 52:06.540
And maybe in the future, if the desktop market share,

52:06.540 --> 52:08.760
desktop Linux market share grows a little more,

52:08.760 --> 52:12.200
we'll start seeing more and more of those supportability

52:12.200 --> 52:14.040
options show back up again,

52:14.040 --> 52:15.800
like they were in the nineties when everything,

52:15.800 --> 52:18.560
when everyone was like thinking that it was gonna take over

52:18.560 --> 52:20.040
the world immediately.

52:20.040 --> 52:22.720
But right now we just don't have it.

52:22.720 --> 52:24.960
You know, and I've thought about this since we've talked

52:24.960 --> 52:25.800
about it on the show,

52:25.800 --> 52:28.960
cause we have gotten a lot of feedback and I think where I,

52:28.960 --> 52:31.760
what I really believe when it comes to this command line

52:31.760 --> 52:36.500
tools or over graphical tools is I think if you're gonna use

52:36.500 --> 52:39.640
Linux as a system that's important to you,

52:39.640 --> 52:42.800
it's worth knowing some of the fundamental commands,

52:42.800 --> 52:46.200
like how to change directory, how to list the contents,

52:46.200 --> 52:48.760
how to look at processes, maybe how to read your logs,

52:48.760 --> 52:51.120
maybe how to stop or start a service,

52:51.120 --> 52:53.480
maybe how to reboot from the command line in case you get

52:53.480 --> 52:54.320
stuck, you know,

52:54.320 --> 52:56.420
you could drop to a terminal and reboot the thing.

52:56.420 --> 52:58.520
Maybe even if I could go as far as to say,

52:58.520 --> 53:01.760
maybe even kind of a rough understanding of grub or

53:01.760 --> 53:03.440
whatever your bootloader is, you know,

53:03.440 --> 53:06.560
those I think are, are things that are worth investing in

53:06.560 --> 53:08.200
that, you know, you spend your,

53:08.200 --> 53:11.960
you spend four to six hours learning that stuff.

53:11.960 --> 53:15.400
You know, maybe you even spend, I don't know, 48 hours,

53:15.400 --> 53:18.560
but it'll pay dividends for 15, 20 years.

53:18.560 --> 53:20.880
Maybe not grub. Well, maybe actually, I mean, how,

53:20.880 --> 53:22.160
I still see systems with Lilo.

53:22.160 --> 53:24.880
So that's a scary thought.

53:24.880 --> 53:25.720
I know.

53:26.640 --> 53:30.080
I saw a vendor system running Linux two recently.

53:30.080 --> 53:30.920
No.

53:30.920 --> 53:33.280
Yeah. With an Apache, an old version of Apache.

53:33.280 --> 53:34.120
Oh my God.

53:35.160 --> 53:37.760
So, you know, it's just like, and, and I, you know,

53:37.760 --> 53:39.100
the commands work, right?

53:39.100 --> 53:41.400
Got on that box, figured out how much disk space was,

53:41.400 --> 53:42.920
you know, did the old DF,

53:42.920 --> 53:44.520
figured out how much disk space was available.

53:44.520 --> 53:45.760
It was valuable still.

53:45.760 --> 53:47.160
It's a very old system.

53:47.160 --> 53:49.420
And so some of that stuff I think is, is worth learning,

53:49.420 --> 53:51.280
but like at the same time,

53:51.280 --> 53:53.800
if there's an application like flat seal,

53:53.800 --> 53:56.160
that's going to give you a nice graphical overview of what

53:56.160 --> 53:59.100
permissions your different flat packs have, I have at it.

53:59.100 --> 54:01.360
I think that's a great use of a graphical application.

54:01.360 --> 54:02.480
No kidding, right?

54:02.480 --> 54:03.520
There's just stuff that, you know,

54:03.520 --> 54:05.360
really makes sense to have in a GUI and there's other stuff

54:05.360 --> 54:07.280
that works nicely in the command line.

54:07.280 --> 54:10.160
We don't have to, as you often say, Chris, you know,

54:10.160 --> 54:11.760
it's, you invent a new thing.

54:11.760 --> 54:13.000
The old stuff doesn't go away.

54:13.000 --> 54:15.520
Like these kind of co-exist together and probably will for

54:15.520 --> 54:16.340
a long time.

54:16.340 --> 54:17.180
Right.

54:17.180 --> 54:20.200
Also, I think this has been sparked to some extent from,

54:20.200 --> 54:24.560
you know, Linus's comments during his Linux challenge.

54:24.560 --> 54:27.720
You know, he, he was very critical of, you know,

54:27.720 --> 54:31.680
the Linux command line as we have to get away from it,

54:31.680 --> 54:34.800
but actually the Linux command line is one of the

54:34.800 --> 54:37.960
fundamental things that defines Linux.

54:37.960 --> 54:41.720
If we do away with that, then what does Linux become?

54:41.720 --> 54:43.880
It's differentiator is gone.

54:43.880 --> 54:46.640
It's power tool goes away.

54:46.640 --> 54:50.680
The thing that makes Linux, Linux no longer exists.

54:50.680 --> 54:53.120
So I don't think we should throw it away or give it up.

54:53.120 --> 54:56.000
I think we should embrace it and we can have both.

54:56.000 --> 55:00.380
We can have fantastic command line utility and also great

55:00.380 --> 55:01.600
graphical applications.

55:01.600 --> 55:03.600
We don't need to choose one over the other.

55:03.600 --> 55:04.440
Yeah.

55:04.440 --> 55:06.280
I feel like we're really starting to see that too,

55:06.280 --> 55:08.760
with things like fwupdy,

55:08.760 --> 55:11.420
where you've got some command line components and some

55:11.420 --> 55:12.260
libraries,

55:12.260 --> 55:14.560
and then you're seeing different graphical tools being

55:14.560 --> 55:17.900
built because system 76 has one gnome has one canonicals

55:17.900 --> 55:19.900
building one based on flutter,

55:19.900 --> 55:23.200
but it's all using the same stuff under the hood.

55:23.200 --> 55:25.240
And those, if you wanted to,

55:25.240 --> 55:27.400
you could do those same firmware updates from the command

55:27.400 --> 55:28.240
line.

55:28.240 --> 55:29.320
And that's, that's kind of,

55:29.320 --> 55:32.800
I think what we have figured out over time and the kind of

55:32.800 --> 55:34.120
thing we're getting better at building.

55:34.120 --> 55:37.800
I think the aspect of what most people have an issue with in

55:37.800 --> 55:40.240
terms of the total command line is that there's a messaging

55:40.240 --> 55:41.080
problem.

55:41.080 --> 55:44.860
You have the problem of some people in the community talking

55:44.860 --> 55:47.480
about how the command line is easy.

55:47.480 --> 55:49.200
And while it is efficient,

55:49.200 --> 55:50.700
a hundred percent agreed there,

55:50.700 --> 55:52.740
you can do a lot things faster in there.

55:52.740 --> 55:55.600
Well, I wouldn't say FFmpeg or anything like that,

55:55.600 --> 55:58.140
but there are certain levels of complexity that the gooey's

55:58.140 --> 55:59.720
offer, like Wimpy said,

55:59.720 --> 56:02.520
but I think it's more of the messaging that people often

56:02.520 --> 56:04.740
say it's easy or simple.

56:04.740 --> 56:07.720
And when you're talking about people who just get started,

56:07.720 --> 56:11.640
there's not really a fair association to easy or simple,

56:11.640 --> 56:13.720
but what they're, what they think is easy.

56:13.720 --> 56:16.280
And what they think is simple is going to be different than a

56:16.280 --> 56:18.880
lot of people who use those terms.

56:18.880 --> 56:19.720
That's a good point.

56:19.720 --> 56:21.120
Hello, Michael, good to see you.

56:21.120 --> 56:23.400
I think what really kind of bears your point out is I think

56:23.400 --> 56:27.080
of it in some ways FFmpeg is such a great example as simpler

56:27.080 --> 56:30.120
than launching the gooey because I've got a terminal command.

56:30.120 --> 56:31.280
I've got fish installed.

56:31.280 --> 56:35.720
I type FF and like the whole thing just auto completes.

56:35.720 --> 56:36.720
I hit tab.

56:36.720 --> 56:38.360
I changed the file names and hit enter.

56:38.360 --> 56:42.040
And for me, that's simpler than launching a gooey.

56:42.040 --> 56:43.520
You have fish to help you.

56:43.520 --> 56:47.920
The poor soul who's working with the distro default of bash or

56:47.920 --> 56:52.440
God forbid busy box SH or something got nothing.

56:52.440 --> 56:53.120
They got nothing.

56:53.120 --> 56:53.800
That's true.

56:53.800 --> 56:58.320
If you do FF play or FFmpeg or FF convert,

56:58.320 --> 57:03.040
TAC TAC help your worse off than you were before you started.

57:03.040 --> 57:04.480
No, that's, it's absolutely true.

57:04.480 --> 57:06.640
I was really just making the joke that, you know, if you,

57:06.640 --> 57:08.640
if you've been using something for a while and you get

57:08.640 --> 57:10.480
comfortable with it, it's obviously the easier.

57:10.480 --> 57:13.560
That's the best part about command line tools is it's very

57:13.560 --> 57:17.800
easy to develop a rhythm for how to use things.

57:17.800 --> 57:19.880
And that's where we keep coming back to this, you know,

57:19.880 --> 57:22.800
to what extent are we embracing what we expect new users to

57:22.800 --> 57:25.240
know and how much do we expect them to embrace the new

57:25.240 --> 57:27.200
platform they're coming to and learn the tricks of the

57:27.200 --> 57:29.520
trade there. And it seems like it's often a balance.

57:29.520 --> 57:30.960
Where is that line? Yeah, exactly.

57:30.960 --> 57:32.120
Okay. Well, we got to wrap it up there.

57:32.120 --> 57:34.440
We could keep going all day, but listen,

57:34.440 --> 57:37.120
the changes in the air and we'd love to have you show up on a

57:37.120 --> 57:38.680
Tuesday while we're still here.

57:38.680 --> 57:42.360
See you next week. Same bat time, same bat station.

57:42.360 --> 57:44.840
I know, I know, but come join us on a Tuesday,

57:44.840 --> 57:45.840
hang out with us.

57:45.840 --> 57:48.120
And if you're around on a Sunday,

57:48.120 --> 57:52.000
our virtual lugs getting together at noon Pacific,

57:52.000 --> 57:53.680
having a good old time talking Linux,

57:53.680 --> 57:56.440
open source projects and things they've been working on and all

57:56.440 --> 57:58.680
kinds of folks from around the community pop in there and have

57:58.680 --> 58:00.280
a good time. It's nice.

58:00.280 --> 58:01.840
And then your mumbles ready to go for the show.

58:01.840 --> 58:04.240
And then in the future, when the show's on Sunday,

58:05.440 --> 58:06.960
well, you'll know where to find us.

58:06.960 --> 58:09.160
If you're in the industry, be sure you're not missing out.

58:09.160 --> 58:11.440
Go get Linux action news, linuxactionnews.com.

58:11.440 --> 58:12.800
Don't miss an episode.

58:12.800 --> 58:15.360
Join us back here Tuesday at noon Pacific,

58:15.360 --> 58:18.200
3 p.m. Eastern at jblive.tv.

58:18.200 --> 58:20.840
linuxunplug.com slash 434.

58:20.840 --> 58:22.840
See you next Tuesday.

58:50.840 --> 59:01.560
I don't know how we are going to title this one,

59:01.560 --> 59:02.560
but let's give it a shot.

59:02.560 --> 59:05.760
JBtitles.com. Let's go pick something.

59:05.760 --> 59:07.640
We need your help. We really do.

59:07.640 --> 59:09.560
We do. We do. We do.

59:09.560 --> 59:11.040
Michael, don't worry. Don't worry.

59:11.040 --> 59:13.080
The good news is we're going to be live on Sundays,

59:13.080 --> 59:15.560
but we're going to be noon and you guys are usually done by then.

59:15.760 --> 59:19.840
That is not why I joined, but also kind of partly why I joined.

59:19.840 --> 59:22.000
Wait, what?

59:22.000 --> 59:24.240
I'm just like, because I can't join anymore.

59:24.520 --> 59:26.200
I know. I know. There is that.

59:26.200 --> 59:27.920
Noon, what? Pacific.

59:27.920 --> 59:31.520
OK, yeah, because you're one Eastern, which is.

59:31.520 --> 59:33.280
Oh, yeah. Yeah, you're fine. Yeah, yeah.

59:33.280 --> 59:34.160
It's not our first choice.

59:34.160 --> 59:36.320
I actually really like being live on Tuesday because

59:37.360 --> 59:39.960
often, you know, guests like Will can join us and stuff like that.

59:39.960 --> 59:42.760
But we, you know, we can also record off air and things like that.

59:42.760 --> 59:45.360
But there's just a series of changes going on.

59:45.360 --> 59:47.640
And, you know, we're we got to make a few adjustments.

59:47.640 --> 59:49.160
And so that's one of them.

59:49.160 --> 59:50.960
There's a lot of positives to it, too.

59:50.960 --> 59:53.680
It also means that more often than not,

59:54.000 --> 59:56.920
Wes and I will be in studio together several times.

59:56.920 --> 59:59.840
It'll be Wes Brent and I in studio together, which is going to be really nice.

01:00:00.240 --> 01:00:02.480
I always really enjoy the shows where we can all be in the same room.

01:00:03.280 --> 01:00:05.880
So that's going to be something that happens more often.

01:00:06.160 --> 01:00:08.760
And we can do more meetups and things like that on Sundays and whatnot.

01:00:08.760 --> 01:00:10.920
So there's a lot of other nice positives to it as well.

01:00:10.920 --> 01:00:14.560
But changes are coming, and I'm both excited

01:00:14.560 --> 01:00:16.760
and anxious about new shows and all of that.

01:00:16.760 --> 01:00:20.120
So let's not stress about it and let's just title this thing.

01:00:20.120 --> 01:00:47.200
Let's just get it figured out. We can do this.

