WEBVTT

00:00.000 --> 00:03.640
OK, so we haven't come up with a preshow in the meantime.

00:03.980 --> 00:05.740
I think this is the preshow.

00:05.740 --> 00:08.740
No, can't be the preshow.

00:08.740 --> 00:10.740
This can't be the preshow.

00:17.940 --> 00:22.500
Hello, friends, and welcome into Linux Unplugged episode 383.

00:22.700 --> 00:24.400
This episode is brought to you by a cloud guru.

00:24.400 --> 00:27.140
You know, there's so many career possibilities in the cloud and so little time

00:27.140 --> 00:31.140
where cloud gurus' learning paths help you take the right course to prepare for the cloud

00:31.140 --> 00:33.140
to become a developer, an admin, or more.

00:33.140 --> 00:36.140
Get hired, get certified, get learning at a cloud.guru.

00:36.140 --> 00:37.140
My name is Chris.

00:37.140 --> 00:38.140
My name is Wes.

00:38.140 --> 00:40.140
And this is Linux Unplugged.

00:40.140 --> 00:44.140
And it's a big show today, Wes. We've got a lot going on.

00:44.140 --> 00:48.140
And I don't know, I thought maybe this could be an episode where we just didn't even have to prepare at all.

00:48.140 --> 00:51.140
Like, we just sit back and let everybody else do the work for us.

00:51.140 --> 00:55.140
Because this is one of those fun ones where we're bringing in different people for different topics.

00:55.140 --> 00:57.140
So, Alex is here from Self Hosted. Hello, Alex.

00:57.140 --> 00:58.140
Hello, there.

00:58.140 --> 01:00.140
Hello, sir. Thank you for joining us.

01:00.140 --> 01:04.140
He's going to be showing us something pretty darn neat that you can do with the Raspberry Pi.

01:04.140 --> 01:08.140
He has turned the Raspberry Pi into a KVM.

01:08.140 --> 01:10.140
You know, the keyboard video mouse kind of KVM.

01:10.140 --> 01:12.140
He's going to tell us about that in a little bit.

01:12.140 --> 01:14.140
So, that should be pretty exciting.

01:14.140 --> 01:17.140
Also, Hector Martin joined me earlier this week.

01:17.140 --> 01:21.140
He's the developer that is looking to port Linux to the Apple M1.

01:21.140 --> 01:24.140
And I asked him some common questions that people have raised

01:24.140 --> 01:26.140
a few of my own concerns and we had a great chat.

01:26.140 --> 01:28.140
And that will be coming up in the show in just a little bit.

01:28.140 --> 01:31.140
But before we get to that, we have community news.

01:31.140 --> 01:37.140
And before we get to that community news, well, it is my duty to say holler over to that virtual hug.

01:37.140 --> 01:39.140
Time appropriate greetings, Mumble Room.

01:39.140 --> 01:40.140
Hello.

01:40.140 --> 01:41.140
Hello.

01:41.140 --> 01:42.140
Howdy.

01:42.140 --> 01:43.140
Good evening.

01:43.140 --> 01:44.140
It's a big crowd today.

01:44.140 --> 01:47.140
A wonderful crowd. Wow. Impressed.

01:47.140 --> 01:49.140
Did you bring enough snacks for all of them?

01:49.140 --> 01:51.140
I better start working on some more.

01:51.140 --> 01:52.140
I think we should keep them for ourselves, Wes.

01:52.140 --> 01:55.140
I would take some more of that smoked Chex Mix that you had the other day.

01:55.140 --> 01:56.140
Takes forever.

01:56.140 --> 01:57.140
Takes forever to smoke the Chex Mix.

01:57.140 --> 01:58.140
Takes forever.

01:58.140 --> 01:59.140
All right.

01:59.140 --> 02:03.140
Well, we have really just one big community news story we're going to get to today.

02:03.140 --> 02:08.140
So, before we dive into that, I want to remind you that you still have a little bit of time left

02:08.140 --> 02:11.140
to cast your nominations for the 2020 Tuxes.

02:11.140 --> 02:14.140
Linux Unplugged is asking you to nominate your favorite projects.

02:14.140 --> 02:17.140
And we kind of use that term loosely in this context.

02:17.140 --> 02:22.140
So, it could be, you know, you could probably include devices in there and web services,

02:22.140 --> 02:26.140
but nominate your favorite devices and projects for the 2020 Tuxes.

02:26.140 --> 02:30.140
And we have a couple of different categories in there, like the best project,

02:30.140 --> 02:34.140
best open source project of 2020, the best new coming project of 2020,

02:34.140 --> 02:38.140
your favorite text editor of 2020, your desktop, your distro, and a few other things in there.

02:38.140 --> 02:41.140
And the idea is we want to collect as many of these as we can.

02:41.140 --> 02:45.140
Then our board will review them, and then we will award the Tuxes to the different categories

02:45.140 --> 02:50.140
at the end of the year, and then give them a special treat with a note from the Unplugged community

02:50.140 --> 02:52.140
thanking them for making something so great.

02:52.140 --> 02:56.140
It's a nice little way to spread some cheer and have some fun and recognize some projects

02:56.140 --> 03:00.140
and maybe get a few awesome projects to try out.

03:00.140 --> 03:03.140
Yeah, we're going to forget all the really good ones unless you guys help us.

03:03.140 --> 03:05.140
We need some good tips.

03:05.140 --> 03:07.140
Not only that, but the submissions are coming in, and I've seen a few.

03:07.140 --> 03:09.140
I was like, I never thought of that.

03:09.140 --> 03:11.140
Exactly. Yeah, so much more creative than we are.

03:11.140 --> 03:13.140
I think I know which one is yours.

03:13.140 --> 03:15.140
I think I can tell.

03:15.140 --> 03:18.140
It might have been Drew, but I think I know it was yours.

03:18.140 --> 03:21.140
There's maybe a slight bias, yeah.

03:21.140 --> 03:26.140
So we'll have a link in the show notes at linuxunplugged.com slash 383, right?

03:26.140 --> 03:27.140
That's the episode, right?

03:27.140 --> 03:28.140
Yeah.

03:28.140 --> 03:33.140
And it'll be at the top of the show notes, and you can go cast your votes.

03:33.140 --> 03:35.140
But we do have to get into the community news today.

03:35.140 --> 03:42.140
And I wanted to get enough time in the community news to kind of give this some room

03:42.140 --> 03:44.140
to let us kind of think about this and air it out,

03:44.140 --> 03:46.140
because it's going to have some ramifications.

03:46.140 --> 03:48.140
And it broke today.

03:48.140 --> 03:51.140
This is CNN Breaking News.

03:51.140 --> 03:55.140
The CentOS project is shifting its focus to CentOS Stream.

03:55.140 --> 04:00.140
CentOS 8 will reach end of life earlier than expected.

04:00.140 --> 04:06.140
It will be shortened from the end of May 2029 to the end of December 2021.

04:06.140 --> 04:08.140
That's a couple of years there, Wes.

04:08.140 --> 04:09.140
Wow.

04:09.140 --> 04:10.140
Yeah, what?

04:10.140 --> 04:11.140
Eight years different?

04:11.140 --> 04:14.140
And I mean, CentOS, it took a little while to show up,

04:14.140 --> 04:16.140
which we kind of talked about on the show, right?

04:16.140 --> 04:19.140
So a lot of people are still just getting on that bandwagon.

04:19.140 --> 04:20.140
Yes.

04:20.140 --> 04:31.140
At the same time, CentOS Stream 8 had its support extended from 2022 to the end of May 2024.

04:31.140 --> 04:34.140
There will be no CentOS Linux 9.

04:34.140 --> 04:39.140
There will be a CentOS Stream 9, but not the traditional CentOS Linux 9

04:39.140 --> 04:42.140
and have conceptualized it.

04:42.140 --> 04:47.140
So you could see how this will be a shift for some who may not want to use the stream CentOS.

04:47.140 --> 04:49.140
We'll get into that in a little bit.

04:49.140 --> 04:51.140
But it's a big announcement.

04:51.140 --> 04:55.140
It's kind of got so many different ramifications and areas to discuss

04:55.140 --> 05:01.140
that I wanted to kind of just sort of start down from the basics here.

05:01.140 --> 05:06.140
So, Carl, I was hoping you could help explain to me again what Stream is,

05:06.140 --> 05:10.140
what it differentiates from what people traditionally thought of CentOS,

05:10.140 --> 05:15.140
and how Stream is maybe not so much like a rolling distro as the name sort of implies.

05:15.140 --> 05:19.140
CentOS Stream is a separate distribution in a way,

05:19.140 --> 05:24.140
and the goal of it was to have a way to develop Red Hat Enterprise Linux out in the open.

05:24.140 --> 05:29.140
In the past, what people traditionally think of with the CentOS project is they think,

05:29.140 --> 05:31.140
okay, this is just a clone of RHEL.

05:31.140 --> 05:34.140
And that works great for a lot of people.

05:34.140 --> 05:35.140
It's what a lot of people want.

05:35.140 --> 05:39.140
That doesn't actually give people any way to contribute to what RHEL looks like in the future.

05:39.140 --> 05:42.140
It's a pure consumption relationship.

05:42.140 --> 05:44.140
So CentOS Stream is a way to change that up.

05:44.140 --> 05:49.140
It's an effort to change the CentOS community from just a community of consumers

05:49.140 --> 05:53.140
into a community of contributors and make it more like an actual open source project.

05:53.140 --> 05:56.140
Right, I've seen some announcement in the announcement from Red Hat today

05:56.140 --> 05:59.140
that CentOS Stream was designed as an upstream development platform

05:59.140 --> 06:02.140
for CentOS community members to actually contribute.

06:02.140 --> 06:09.140
But when we first heard about it, I mean, this was an addition to the existing downstream model of CentOS.

06:09.140 --> 06:10.140
That is correct.

06:10.140 --> 06:15.140
And the downstream-upstream analogy, as much as it gets overused, is really appropriate here.

06:15.140 --> 06:21.140
Originally, in the past, before Stream, we had just, you know, the flow would go from Fedora into RHEL,

06:21.140 --> 06:24.140
and then it would be rebuilt into CentOS.

06:24.140 --> 06:29.140
When we announced CentOS Stream, that changed to the very high level.

06:29.140 --> 06:36.140
There's a lot of details in between, but basically, you'd see updates go from Fedora to CentOS Stream into RHEL

06:36.140 --> 06:40.140
and then into CentOS Linux, which is how we're trying to clarify the difference between the rebuild

06:40.140 --> 06:43.140
versus the one that is the development platform.

06:43.140 --> 06:50.140
Now, what's been announced today is that Red Hat's going to focus all of our efforts onto just CentOS Stream

06:50.140 --> 06:56.140
and discontinue the rebuild to try and help boost that ecosystem and that community there

06:56.140 --> 06:59.140
to get more people developing and contributing to RHEL itself.

06:59.140 --> 07:05.140
And just to clarify, Stream, it's not really rolling as we traditionally think of rolling, right?

07:05.140 --> 07:08.140
Correct, and I've said this in a few places.

07:08.140 --> 07:11.140
The initial messaging around it was that it was a rolling distribution.

07:11.140 --> 07:17.140
That was actually before I got hired on, and I'm sure there are people that said that was a mistake to call it that,

07:17.140 --> 07:21.140
but that's coming up a lot today that it was a mistake to call it that.

07:21.140 --> 07:24.140
In fact, they've actually removed that mention from the website today.

07:24.140 --> 07:32.140
That was one of the live changes that happened, changing it from a rolling release because that already means something

07:32.140 --> 07:35.140
and trying to co-op that term is not working.

07:35.140 --> 07:39.140
They changed it to continuously delivered, I believe is the term they're using now.

07:39.140 --> 07:45.140
And that essentially means that RHEL upgrades or updates sort of are just continuously delivered to Stream.

07:45.140 --> 07:49.140
Right, and that fits how a lot of people already were consuming CentOS.

07:49.140 --> 07:55.140
Not everyone, but many CentOS users, they would just use, okay, I'm using CentOS 8 or CentOS 9.

07:55.140 --> 08:01.140
They didn't really think about what we call our point releases like 8.2 or 7.9.

08:01.140 --> 08:08.140
There are some enterprises that would focus real heavily on those because a lot of the vendors that interact with RHEL,

08:08.140 --> 08:11.140
they certify on specific point releases.

08:11.140 --> 08:15.140
And so that kind of translates through when someone's trying to just have a free clone of RHEL,

08:15.140 --> 08:17.140
they want to have the exact same thing that RHEL is.

08:17.140 --> 08:20.140
And that's basically what's changing and going away.

08:20.140 --> 08:23.140
The Stream is not going to have, doesn't have these point releases.

08:23.140 --> 08:28.140
You're just on Stream 8 or Stream 9 in the future or Stream 10 as we go on down the road.

08:28.140 --> 08:40.140
Right, and I think that has been, so I was participating in the CentOS development IRC chat, which was really lively today.

08:40.140 --> 08:43.140
There's a lot of people that are processing this.

08:43.140 --> 08:52.140
It was nice to see that the VP of RHEL was in there and the lead RHEL architect was also in there answering questions

08:52.140 --> 08:54.140
and taking a lot of heat.

08:54.140 --> 08:56.140
So you've got to respect the fact that they were in there doing that.

08:56.140 --> 08:59.140
And they were answering some of my questions I had about this as well.

08:59.140 --> 09:02.140
It's like where does Fedora fit in all of this?

09:02.140 --> 09:09.140
And so the analogy now really is pretty simple to understand from Fedora where the Fedora does have this phase,

09:09.140 --> 09:16.140
this staging area now for the enterprise-y stuff, so it goes from Fedora to CentOS Stream to RHEL now.

09:16.140 --> 09:26.140
And CentOS Stream is closer to RHEL than say like Fedora 34, where Fedora 34 might be the base of the next RHEL.

09:26.140 --> 09:35.140
Six, nine months from now, it's going to be not nearly as relevant or whenever, I guess it's probably next year,

09:35.140 --> 09:40.140
one of the next RHEL ships, that Fedora version will not be nearly as relevant as CentOS Stream.

09:40.140 --> 09:42.140
And that's where a lot of the development will be taking place.

09:42.140 --> 09:49.140
Yeah, I can definitely confirm that it's not just that maybe Fedora 34 is basically what RHEL 9 is going to be based on.

09:49.140 --> 09:53.140
And CentOS Stream, it sits a heck of a lot closer to actual RHEL.

09:53.140 --> 10:01.140
In fact, if you're using CentOS Stream 8 today, you're basically using RHEL 8.4 content and currently RHEL is on 8.3.

10:01.140 --> 10:05.140
So that's a better way to think of it is how close it sits in relationship to it.

10:05.140 --> 10:11.140
Okay, that makes sense. And then there will be a CentOS Stream 9, which will get six years of support?

10:11.140 --> 10:16.140
Roughly. We're saying five years because one of the things that was announced today that was a big change.

10:16.140 --> 10:21.140
Originally, the different streams like 8 and 9 were only going to overlap by about a year.

10:21.140 --> 10:30.140
And some of the stuff I want to say is going forward, not for 8 just because of how the timing worked out.

10:30.140 --> 10:35.140
Stream 8 actually came out after RHEL 8 and it's been this whole bootstrap effort.

10:35.140 --> 10:41.140
A lot of the things that I'm going to say about this doesn't really apply to 8 yet and it's what we're working towards with 9.

10:41.140 --> 10:45.140
But the original idea was to have Stream 8 and Stream 9 overlap by about a year.

10:45.140 --> 10:51.140
RHEL has announced that they're going to be on a three year lifecycle cadence with a new major version every three years,

10:51.140 --> 10:59.140
meaning that each stream release would only have, you know, once we got into that full cycle, it would only be supported for three years.

10:59.140 --> 11:00.140
Sure.

11:00.140 --> 11:10.140
The CentOS Board and Red Hat have agreed that as part of this, that CentOS Stream can be continued for the entirety of the RHEL full support cycle,

11:10.140 --> 11:16.140
which if you look at the actual definitions of that term on the Red Hat support pages, you'll see that that's a five year period.

11:16.140 --> 11:19.140
Five years of that ten year Red Hat lifecycle.

11:19.140 --> 11:26.140
Basically, when you see point releases, so you'll see eight point, you know, you'll see on up to like eight point ten.

11:26.140 --> 11:33.140
And at that point, there's no more point releases and it's just the critical only bug fixes and security fixes.

11:33.140 --> 11:35.140
That's what's not going to exist in Stream.

11:35.140 --> 11:40.140
By that point, CentOS Stream has been extended out to that point, but not further than that.

11:40.140 --> 11:44.140
Right. So at that point, it'll move on to future development on the next release.

11:44.140 --> 11:49.140
Yeah, it'll give it definitely five years of support, but it'll actually be closer to about six years,

11:49.140 --> 11:54.140
considering that we're expecting CentOS Stream 9 to come out about a year before RHEL 9.

11:54.140 --> 11:57.140
So that'll put it around six years of the lifecycle.

11:57.140 --> 12:04.140
OK, thank you for explaining that to me. It's all kind of changing and new, but I think I've got it now.

12:04.140 --> 12:10.140
I've heard a lot of different takes on this. Wes, I know you were in the IRC with me.

12:10.140 --> 12:14.140
Saw a lot of people saying, you know, this is not going to work for them, that they don't want Stream.

12:14.140 --> 12:18.140
They want they want something that's, you know, essentially free RHEL.

12:18.140 --> 12:25.140
A lot of what boiled down to it, and I know it represents millions of servers out there,

12:25.140 --> 12:29.140
but I think a lot of people today feeling like the game kind of changed on them.

12:29.140 --> 12:35.140
I saw some CentOS 6 admins in there who had just migrated to 8

12:35.140 --> 12:39.140
and now are seeing that they essentially have a year to migrate again.

12:39.140 --> 12:41.140
Yeah, that's maybe one of the trickier aspects.

12:41.140 --> 12:44.140
You know, things change, especially in the Linux world.

12:44.140 --> 12:49.140
So there's one aspect of this that is just the evolution of what CentOS is and is going to be.

12:49.140 --> 12:56.140
But I think that so many folks were just starting to get up and trying out version 8.

12:56.140 --> 13:02.140
It's all still new, right? That was that came out last year and expected that this was going to be the paradigm

13:02.140 --> 13:06.140
that they would continue to support for years on in their career.

13:06.140 --> 13:08.140
It's a lot to take in on a Tuesday.

13:08.140 --> 13:15.140
I've heard all the reactions from, well, how am I supposed to build packages for my open source project

13:15.140 --> 13:17.140
that I know are going to work on a certain version of RHEL?

13:17.140 --> 13:22.140
I've heard that version. I've heard other versions that have been just much more like,

13:22.140 --> 13:27.140
well, OK, I guess this kind of means I'm going to be using RHEL components as a container moving forward.

13:27.140 --> 13:32.140
There's been the whole gamut of reactions, but it does really suck for those CentOS 6 admins

13:32.140 --> 13:35.140
who did just upgrade to 8. I do feel for them.

13:35.140 --> 13:38.140
I got two points of clarification on that that I'd like to share.

13:38.140 --> 13:44.140
So the talking about, you know, getting RHEL for free, there is a program underway

13:44.140 --> 13:49.140
where Red Hat wants to actually give away a lot more free RHEL for personal use

13:49.140 --> 13:52.140
and like universities and development, things like that.

13:52.140 --> 13:58.140
All the details aren't final yet. Let me put this delicately.

13:58.140 --> 14:04.140
A lot of people advise that this announcement should have been delayed until that program was final.

14:04.140 --> 14:07.140
And that's not how it ended up in the end.

14:07.140 --> 14:12.140
But there is a program underway. From what I've heard, it's supposed to be the early part of next year.

14:12.140 --> 14:18.140
There'll be expanded access to free RHEL. And I can say that with all certainty.

14:18.140 --> 14:22.140
The other part that I wanted to talk about was the migrations.

14:22.140 --> 14:27.140
Users that upgrade, say, from CentOS 6 or 7 to CentOS Linux 8 right now,

14:27.140 --> 14:34.140
while they can't just do nothing because the updates for that distribution are going to end at the end of 2021,

14:34.140 --> 14:39.140
upgrading from CentOS Linux 8 to CentOS Stream 8 is really straightforward

14:39.140 --> 14:44.140
and not really any more complicated than upgrading from, say, 8.3 to 8.4,

14:44.140 --> 14:47.140
like they were going to have to do anyways if the distribution kept going.

14:47.140 --> 14:50.140
Right. So Stream is not too far from where it is in general.

14:50.140 --> 14:51.140
Exactly.

14:51.140 --> 14:55.140
There is a documented supported upgrade path from standard CentOS to Stream,

14:55.140 --> 14:57.140
which I think is key to kind of underscore there.

14:57.140 --> 14:58.140
Absolutely.

14:58.140 --> 15:02.140
Yeah, and that's nice because then essentially they just have an updated CentOS 8 installation

15:02.140 --> 15:05.140
and everything will probably just keep working or the chances there.

15:05.140 --> 15:11.140
And for a lot of people, this is an improvement because I know that I've seen people get frustrated in that month,

15:11.140 --> 15:15.140
month and a half time period where RHEL point release has been released

15:15.140 --> 15:19.140
and the CentOS rebuild of it is not final yet.

15:19.140 --> 15:24.140
Now, in this scenario with Stream, you're actually going to have those updates months beforehand.

15:24.140 --> 15:26.140
So it's not even going to be a question.

15:26.140 --> 15:30.140
You're getting the updates before RHEL gets them most of the time rather than after.

15:30.140 --> 15:32.140
I want to let others jump in here in a moment,

15:32.140 --> 15:41.140
but I thought it'd be interesting to go back to 2014, January 7th, 2014, way, way back.

15:41.140 --> 15:47.140
You may remember this as the day that Red Hat announced they were joining forces with CentOS.

15:47.140 --> 15:49.140
Stay a while and listen.

15:49.140 --> 15:53.140
And I thought, well, let's see what they kind of committed to back then.

15:53.140 --> 15:59.140
And reading it now, I remember how dodgy it seemed at the time.

15:59.140 --> 16:00.140
Here's what they say.

16:00.140 --> 16:04.140
With today's announcement, Red Hat extends its commitment to rapid open source technology

16:04.140 --> 16:08.140
and solution developments to deliver – and I thought this is an interesting one on here.

16:08.140 --> 16:09.140
There's three bullet points.

16:09.140 --> 16:14.140
The second bullet point is community integration beyond the operating system.

16:14.140 --> 16:21.140
CentOS, a community supported and produced Linux distribution that draws on Red Hat Enterprise Linux

16:21.140 --> 16:25.140
and other open source technologies to provide a platform that's open to variation.

16:25.140 --> 16:30.140
CentOS provides a base for a community adoption and integration of open source cloud storage

16:30.140 --> 16:33.140
network infrastructure technologies on a Red Hat based platform.

16:33.140 --> 16:35.140
That is super vague.

16:35.140 --> 16:41.140
Like this is one of the few areas where they actually talk about CentOS in this entire announcement.

16:41.140 --> 16:46.140
The rest of the announcement talks about RHEL and Fedora.

16:46.140 --> 16:48.140
That's like the main part where they talk about CentOS.

16:48.140 --> 16:54.140
Then later they say Red Hat and the CentOS project recognize the opportunity to begin a new era

16:54.140 --> 17:00.140
by collaborating to expand the CentOS project to address innovation, community contribution,

17:00.140 --> 17:07.140
which I think you could argue Stream does do that, and participation up the stack beyond the operating system.

17:07.140 --> 17:12.140
With Red Hat's contributions and investments, the CentOS project will be able to expand and accelerate

17:12.140 --> 17:21.140
serving the needs of the community members who require different or faster moving components layered on top of CentOS.

17:21.140 --> 17:31.140
It doesn't in there say that they commit to keeping CentOS as it was originally conceived around forever.

17:31.140 --> 17:32.140
They don't say that.

17:32.140 --> 17:38.140
In fact, in a very sort of corporate-y way, they kind of say, well, we're going to make it easier to contribute

17:38.140 --> 17:43.140
and we're going to make development, quote, faster moving, end quote.

17:43.140 --> 17:49.140
Right. They're already pushing some of those ideas or just at least showing what their priorities are internally.

17:49.140 --> 17:56.140
I read this from January 7th, 2014, and what I read here is this is something,

17:56.140 --> 17:59.140
some kind of change like this has been in the works for a really long time,

17:59.140 --> 18:03.140
making CentOS work for Red Hat, not be competing against Red Hat.

18:03.140 --> 18:06.140
I think that's been the strategy since January of 2014.

18:06.140 --> 18:09.140
And I don't think IBM had anything to do with this decision.

18:09.140 --> 18:14.140
And I've seen a lot of hot takes putting this on the bean counters at IBM.

18:14.140 --> 18:17.140
But this squarely puts it well before the acquisition.

18:17.140 --> 18:21.140
And I think when you read through this corporate lingo, it's obvious.

18:21.140 --> 18:26.140
What they really talk about here is their commitment to Red Hat Enterprise Linux, quote.

18:26.140 --> 18:31.140
In here they say, actually the whole thing is just, they say they hope this acquisition helps Red Hat

18:31.140 --> 18:36.140
deliver more subscriptions and value.

18:36.140 --> 18:40.140
So how are they going to do that when they're giving away the stuff for free, right?

18:40.140 --> 18:43.140
They obviously had to make a change like this.

18:43.140 --> 18:46.140
So I think it's obviously not the IBM thing.

18:46.140 --> 18:48.140
This was sort of in the works for a while.

18:48.140 --> 18:51.140
And I feel bad for some of the system administrators out there.

18:51.140 --> 18:55.140
A lot of people in the chat room were saying, you know, the product I'm building now is essentially dead.

18:55.140 --> 19:00.140
Another one that I saw was that, you know, I'm just going to switch to Ubuntu.

19:00.140 --> 19:02.140
Saw that a few times as well, of course.

19:02.140 --> 19:04.140
People always say those kinds of things.

19:04.140 --> 19:08.140
But I think it's a little unfortunate that this couldn't be pushed until CentOS 9.

19:08.140 --> 19:14.140
I think that's the other thing here is it shows you who kind of had the final say in the room in Red Hat.

19:14.140 --> 19:18.140
And it wasn't necessarily the engineers or the community people I'm suspecting.

19:18.140 --> 19:24.140
Because this clearly seems like something you roll out after you've met your CentOS 8 commitment.

19:24.140 --> 19:29.140
Right. I mean, there's all kinds of different internal departments and pressures and negotiations going on.

19:29.140 --> 19:35.140
But I think you're onto something there that it's, right, there is this pressure to help, you know,

19:35.140 --> 19:40.140
help RHEL and position CentOS to be in the best place to do that and to build the future of RHEL.

19:40.140 --> 19:45.140
But then, yeah, there must be pushback from the community or at least a sense of how do we do this in the best way

19:45.140 --> 19:49.140
that will help our community be prepared for the changes that we are going to make.

19:49.140 --> 19:52.140
And I don't know that this surprise was it.

19:52.140 --> 19:58.140
I think the number one use case for a lot of people using CentOS, perhaps even in the millions of people,

19:58.140 --> 20:04.140
was I need something that matches RHEL so I can test, produce, package, distribute.

20:04.140 --> 20:08.140
But I don't necessarily need to have a support contract for this box.

20:08.140 --> 20:11.140
I need compatibility assurances.

20:11.140 --> 20:16.140
But I don't need a support contract because of whatever calculus I'm making.

20:16.140 --> 20:23.140
But I don't necessarily think that same group of people want something that is not necessarily fixed to a version number.

20:23.140 --> 20:27.140
They want to be able to say it works with RHEL 8.3 or whatever.

20:27.140 --> 20:30.140
They want to be able to certify that on the box and ship it.

20:30.140 --> 20:36.140
And this is an area where in the short term I think Red Hat's going to get some conversions from this.

20:36.140 --> 20:37.140
No doubt about it.

20:37.140 --> 20:42.140
There's going to be some people who decide to buy a support contract and switch it up.

20:42.140 --> 20:48.140
But ultimately I think it's obvious someone else will come along and take this user base that I just talked about.

20:48.140 --> 20:51.140
And it's not going to be Red Hat now.

20:51.140 --> 20:56.140
And that's pretty bad considering they own CentOS.

20:56.140 --> 21:02.140
Somebody else is going to come along like the previous creator of CentOS is going to go create a fork like he's already said he wants to.

21:02.140 --> 21:05.140
Or scientific Linux will get started back up.

21:05.140 --> 21:10.140
Or people will start taking Oracle's unthinkable Linux more seriously.

21:10.140 --> 21:16.140
It's kind of funny in a way that they're going to get short term conversions at long term cost.

21:16.140 --> 21:19.140
And that's generally the game that Red Hat's pretty good at playing.

21:19.140 --> 21:25.140
But it's clear here that it's just the wrong people who are in the room or whatever.

21:25.140 --> 21:27.140
But I've talked on enough.

21:27.140 --> 21:29.140
I know, Neil, you want to get a word in on this.

21:29.140 --> 21:35.140
So what are your thoughts on the announcement here and specifically thoughts on Stream?

21:35.140 --> 21:40.140
I think last year when we were talking, I think it was last year, we were talking about Stream when it was announced.

21:40.140 --> 21:52.140
I came in and said like this is pretty cool because it will open the doors for getting people to be able to be part of the story that makes RHEL great.

21:52.140 --> 21:54.140
And I still believe that today.

21:54.140 --> 22:01.140
If anything about this announcement has told me is that Red Hat doesn't know how to do community PR if it slapped them in the face.

22:01.140 --> 22:13.140
Because any reasonable person who understands what's actually going on here from the mechanics of CentOS Linux becoming CentOS Stream and all these sorts of things.

22:13.140 --> 22:17.140
Anyone who's actually really working with this would actually like this.

22:17.140 --> 22:26.140
Because it gives you a closer relationship with the actual people who are making that code available to you.

22:26.140 --> 22:32.140
Part of this whole process is to open up RHEL development itself, as Carl has said.

22:32.140 --> 22:46.140
But more concretely, what's going to happen is that Red Hat Enterprise Linux development with the engineers maintaining the packages and code and integration testing and all that stuff around Red Hat Enterprise Linux.

22:46.140 --> 22:48.140
That's becoming public.

22:48.140 --> 22:53.140
That's moving to the CentOS project that is CentOS Stream.

22:53.140 --> 23:04.140
CentOS Stream will still reflect RHEL's promises to the community and to their customers because it is being built to be RHEL.

23:04.140 --> 23:07.140
This is the piece I think everyone's missing.

23:07.140 --> 23:13.140
Now, there are certainly some quibbles here that I am not particularly happy about.

23:13.140 --> 23:18.140
I am hopeful somebody will see some light here and reconsider.

23:18.140 --> 23:21.140
But on the balance of things, I think this is actually a good thing.

23:21.140 --> 23:24.140
I think that this could have waited until CentOS 9.

23:24.140 --> 23:27.140
I really, really wish this had.

23:27.140 --> 23:29.140
But I also kind of get why this happened now.

23:29.140 --> 23:30.140
It's not great.

23:30.140 --> 23:36.140
It's certainly going to cause more kerfuffles than was intended.

23:36.140 --> 23:41.140
What would you say is the pressure for it to happen now, just since you say you can see why?

23:41.140 --> 23:44.140
I have been involved as an early contributor to CentOS Stream.

23:44.140 --> 23:57.140
It has been amazingly difficult to bring everything online while Red Hat is splitting the difference between both RHEL and CentOS Linux and adding CentOS Stream in the middle of it.

23:57.140 --> 24:07.140
Refocusing those resources on CentOS Stream will make it easier for them to finish the bring up in the first place because everything's been split down the middle.

24:07.140 --> 24:14.140
And I don't think people realize this, but there's only two people working on CentOS Linux in its entirety for CentOS Linux 8.

24:14.140 --> 24:22.140
Carl, who's been in here, you know, gracious and talking about stuff and being a generally good guy around in the community.

24:22.140 --> 24:30.140
And Brian Stinson, who is the other engineer who works on CentOS Project for CentOS Linux 8.

24:30.140 --> 24:31.140
Don't forget Johnny.

24:31.140 --> 24:32.140
Oh, yeah.

24:32.140 --> 24:36.140
Johnny works on CentOS Linux 7, so I didn't really include him in this bucket.

24:36.140 --> 24:42.140
But when you split it down with three people or two people, really.

24:42.140 --> 24:48.140
So one person works on stream and the other person works on Linux, like that's it's ludicrous.

24:48.140 --> 24:52.140
Like, I don't think people realize how thinly stretched they were.

24:52.140 --> 24:59.140
There was there has been a lot of push and pressure to bring Red Hat and from within Red Hat.

24:59.140 --> 25:12.140
Not even saying from the community from within Red Hat to bring REL engineering into the open so that they can realize the benefits of having the CentOS project to help improve the Red Hat ecosystem.

25:12.140 --> 25:22.140
And the real issue here is the real sticking point is the fact that I as clued in as I was was kind of taken by surprise as much as everyone else was.

25:22.140 --> 25:30.140
And that's that's the more Red Hat is tripping over itself and can't do PR if a fish slapped them in the face over it.

25:30.140 --> 25:38.140
So it's not all bad news, though, because like we mentioned, you can still go to stream eight from the install of CentOS 8.

25:38.140 --> 25:45.140
Other than Oracle busted Linux, like this is you can get five years of support for free.

25:45.140 --> 25:48.140
That's still a really good deal in Linux town.

25:48.140 --> 25:52.140
And the REL sources are still getting pushed to get CentOS dot org.

25:52.140 --> 26:04.140
So if a project did want to come along and start scientific Linux backup or the original CentOS founder who says he wants to build another CentOS is even willing to hire people to do it.

26:04.140 --> 26:08.140
I mean, that could still happen. And so maybe that use case is still available.

26:08.140 --> 26:16.140
And I mean, my final thoughts on this are really that it's a clear sign that things are changing a little bit at Red Hat, that the calculus changes a little bit.

26:16.140 --> 26:19.140
And I saw it expressed in the chat room.

26:19.140 --> 26:28.140
And I have to agree that I think the biggest winner here will probably be AWS in this whole thing and canonical.

26:28.140 --> 26:33.140
I don't think the Red Hat sales team is going to get a huge win out of this other than the early conversions.

26:33.140 --> 26:36.140
And I'm sure there will be plenty of those.

26:36.140 --> 26:40.140
But long term, it's Mark Shuttleworth who's smiling tonight, no doubt about it.

26:40.140 --> 26:46.140
And on top of that, the folks at AWS are more than happy to spin up any workload you'd like.

26:46.140 --> 26:50.140
They'll work with you on it if you're coming from an on-premises CentOS installation.

26:50.140 --> 26:53.140
And oh, by the way, you don't need to use CentOS anymore.

26:53.140 --> 26:57.140
We've got a distro for you. It's based on REL.

26:57.140 --> 26:59.140
Have you tried Amazon Linux?

26:59.140 --> 27:02.140
It will be interesting to follow up on this, though, I think.

27:02.140 --> 27:10.140
What kind of adoption does Stream get? What place does it fill out in the marketplace? Which shops actually choose to adopt it? And which ones jump ship?

27:10.140 --> 27:15.140
I don't know. I mean, I don't think the CentOS name is going anywhere anytime soon. It just might evolve.

27:15.140 --> 27:19.140
Yeah. And as Colonel was asking in the chat room, it's still going to be a good place to learn REL.

27:19.140 --> 27:22.140
It'll still serve that use case just fine.

27:22.140 --> 27:26.140
And in some ways, and I'm not somebody who's putting this in production,

27:26.140 --> 27:31.140
I will actually find the project a little more compelling myself, just from an observer standpoint.

27:31.140 --> 27:36.140
And it would make me more likely to use CentOS.

27:36.140 --> 27:41.140
But I'm also enough of a lunatic where I'll run Arch on a server.

27:41.140 --> 27:45.140
So don't ask me on my opinion on this kind of thing. I'm clearly nuts about this stuff.

27:45.140 --> 27:51.140
I'm not particularly clued in to the CentOS side of things because I work mostly with containers.

27:51.140 --> 28:02.140
I just wonder if this isn't set against the backdrop of REL itself becoming a bit of a legacy platform compared to something like CoreOS.

28:02.140 --> 28:05.140
Just an interesting thought, perhaps.

28:05.140 --> 28:11.140
Well, and it may accelerate those trends is what I think. I think you're going to have those two things converging here.

28:11.140 --> 28:18.140
And maybe ultimately what the team at Red Hat sees is more people running their universal container

28:18.140 --> 28:25.140
than running actual physical rail boxes. I'm sure they must see a future where that's a possibility.

28:25.140 --> 28:30.140
And I think that container in some ways has less restrictions than the current freeways you can get rail.

28:30.140 --> 28:33.140
Now, it sounds like Carl was saying that they're going to expand that rail program.

28:33.140 --> 28:37.140
That would be really interesting to see what, if any, limitations they put on that.

28:37.140 --> 28:42.140
I think it'd be really great if they'd take out restrictions about production use, core use,

28:42.140 --> 28:45.140
because a lot of those things have shifted as the industry has moved on.

28:45.140 --> 28:49.140
Again, I could get Ubuntu or CentOS or whatever that would do it for free.

28:49.140 --> 28:54.140
Right. The current restrictions, I think, are something along the lines of one entitlement for non-production use.

28:54.140 --> 28:58.140
And they're specifically people specifically want to remove the non-production part of that.

28:58.140 --> 29:02.140
And I don't know if they're going to make it a set number or what or what it's going to look like in the future.

29:02.140 --> 29:04.140
But changes are definitely underway.

29:04.140 --> 29:11.140
Yeah. And from my perspective, as someone who who builds and releases and develops to target rail and CentOS simultaneously,

29:11.140 --> 29:16.140
because obviously there's people using both, actually CentOS Stream has been great for me

29:16.140 --> 29:23.140
because whenever I've discovered issues, I have filed bug reports and in some cases even provided patches.

29:23.140 --> 29:28.140
And they've been fairly responsive at taking those things, incorporating them in and pushing them out

29:28.140 --> 29:32.140
in CentOS Stream very quickly for me to verify that they in fact fix things,

29:32.140 --> 29:37.140
which means I can be relatively assured they're not going to break it going forward.

29:37.140 --> 29:40.140
And it's going to land in the next rail point release or wherever the customers are pulling it in.

29:40.140 --> 29:48.140
So in general, from my perspective, I think people aren't seeing where the value is going to start coming from

29:48.140 --> 29:52.140
because by and large, CentOS has been a non-participatory community.

29:52.140 --> 29:59.140
It's been largely consumption oriented because when you're a distribution, which has to rebuild rail and do nothing else,

29:59.140 --> 30:03.140
you can't form opinions. You can't really do anything about it.

30:03.140 --> 30:05.140
This is what you get. No ifs, ands or buts.

30:05.140 --> 30:10.140
Changing this dynamic is going to be extremely painful no matter what we do.

30:10.140 --> 30:19.140
But changing this dynamic is necessary because otherwise I don't think Red Hat Enterprise Linux has a future.

30:19.140 --> 30:20.140
That is my personal opinion.

30:20.140 --> 30:28.140
I believe that if they don't make this change, if they don't make it possible for the greater community to contribute to rail through CentOS,

30:28.140 --> 30:33.140
Red Hat Enterprise Linux itself will die because it has no opportunity to evolve

30:33.140 --> 30:36.140
based on the varied opinions of its community.

30:36.140 --> 30:45.140
And with universal base image and the expanded rail programs for offering Red Hat Enterprise Linux for free for more use cases,

30:45.140 --> 30:54.140
there's some work I've heard from folks that I've been in touch with about making Red Hat Enterprise Linux available as a first class citizen on various CI platforms,

30:54.140 --> 31:04.140
all sorts of things that are going on to make it so that if you want to use rail for any purpose, be it development, testing,

31:04.140 --> 31:10.140
or even in some cases production with low to no cost, that's going to be a thing.

31:10.140 --> 31:18.140
And I'm really excited about that for those people who needed that what previously was served by the regular CentOS Linux,

31:18.140 --> 31:28.140
because to be frank, if it goes the way that I hope it does, it means that Red Hat will have strategically made it possible for people to use rail from beginning to end in those cases.

31:28.140 --> 31:34.140
And they have an easier avenue to convert to paid subscriptions where necessary.

31:34.140 --> 31:41.140
In other cases, it's just going to be people are just going to go, you know, we need stream, we get the fixes, we're contributing to it.

31:41.140 --> 31:44.140
So we're we're replacing money with time and effort, and that's fine with us.

31:44.140 --> 31:48.140
I think that long term is what's got to be the strategy here.

31:48.140 --> 31:53.140
The key to making that work is having rail available in all of those places. And it's just simply not yet.

31:53.140 --> 32:01.140
And it seems like that's the step you make first before you make the radical change to the way it's done now with CentOS.

32:01.140 --> 32:06.140
But it's clearly that just wasn't the priority. But I mean, that's, you know, in a year and a half, two years,

32:06.140 --> 32:12.140
perhaps it will be a detail that we have long forgotten and things will have just shifted.

32:12.140 --> 32:14.140
We will have to wait and see for that, though.

32:14.140 --> 32:18.140
I think there's a lot of people that are going to be affected by this, so I don't want to minimize it.

32:18.140 --> 32:21.140
I think for myself, I actually am going to find it more compelling.

32:21.140 --> 32:25.140
And I know the biggest question now, which is clearly the most important question.

32:25.140 --> 32:29.140
Will it make a super killer workstation OS now, you know?

32:29.140 --> 32:35.140
I'm just kidding. I know. I know. I know. I know. I know. I know. Silver blue.

32:35.140 --> 32:44.140
Linode.com slash unplugged. Go there to get a $100 60-day credit towards a new account and go there to support the show.

32:44.140 --> 32:49.140
Linode is making it possible for this here humble Linux podcast to be delivered to you for free.

32:49.140 --> 32:53.140
And Linode is our cloud server provider. I started with them a couple of years ago.

32:53.140 --> 32:56.140
And then, well, you know, once you start to like something, you just go crazy with it.

32:56.140 --> 33:01.140
And now it runs JB 3.0. That's where we spun up all of our new infrastructure.

33:01.140 --> 33:06.140
And personally, one of the things that I think is great about Linode is all of the distributions they support.

33:06.140 --> 33:11.140
We were just kind of going on about this, but this is an area that's really nice about Linode.

33:11.140 --> 33:17.140
They've got the Alpines, the Arches, the recent CentOS releases, Debian, Fedora, OpenSUSEs.

33:17.140 --> 33:20.140
Of course, they got your important Ubuntu versions. They got it all on there.

33:20.140 --> 33:29.140
And that's really nice. They kind of have built a system that if you are a proud, happy, longtime slash enthusiastic slash

33:29.140 --> 33:35.140
whatever Linux user, you know, somebody who just kind of loves this kind of stuff, you're really going to find Linode appealing.

33:35.140 --> 33:41.140
But even if you're a new user, beginner, the UI is straightforward enough that you're going to get it, you're going to figure it out.

33:41.140 --> 33:46.140
But what I love about them, because I am a longtime Linux user, is their love for Linux and open source,

33:46.140 --> 33:52.140
supporting things like the open source initiatives that I find important, the conferences that I love to go to.

33:52.140 --> 33:58.140
You know, Linode started in 2003 as one of the first companies in cloud computing, three years before AWS.

33:58.140 --> 34:02.140
Three years because they were Linux users.

34:02.140 --> 34:06.140
And I love that. They're dedicated to offering the best virtualized cloud computing.

34:06.140 --> 34:08.140
If it runs on Linux, it runs on Linode.

34:08.140 --> 34:11.140
So go to linode.com slash unplugged.

34:11.140 --> 34:14.140
You support this here podcast. You get that $100 60-day credit.

34:14.140 --> 34:19.140
You make it possible for us to give this here podcast and our other shows away for free.

34:19.140 --> 34:21.140
And that's a big deal, too.

34:21.140 --> 34:24.140
So thanks to Linode for making it possible for us to go to independent.

34:24.140 --> 34:30.140
And thanks to the listeners out there who use our promo code linode.com slash unplugged to get that credit.

34:30.140 --> 34:34.140
All of it. It's like a circle of life podcast ecosystem.

34:34.140 --> 34:36.140
I just think you're all just great.

34:36.140 --> 34:38.140
Linode.com slash unplugged.

34:41.140 --> 34:44.140
All right, Mr. Alex, thank you for joining us.

34:44.140 --> 34:53.140
Sorry we had a little business to attend before we could get to what seems like a pretty awesome way to get an open and cheap IPKVM.

34:53.140 --> 34:56.140
If you just are willing to do a little do-it-yourself magic.

34:56.140 --> 34:59.140
Well, I knew I had to hit you up because there's a Raspberry Pi involved.

34:59.140 --> 35:05.140
Yeah, so I guess if you have a Raspberry Pi to begin with, like a Raspberry Pi 4, does it matter?

35:05.140 --> 35:09.140
Yeah, there's full details over at pikvm.org.

35:09.140 --> 35:16.140
And Pi 4 is good. I think the Pi 0W is a little underpowered, but will work.

35:16.140 --> 35:30.140
So the idea is you take a bog standard Raspberry Pi, you buy a $35 HDMI capture board, which plugs into the CSI interface of the Pi itself.

35:30.140 --> 35:38.140
And then you can use your Raspberry Pi like you would a KVM switch on any system that has HDMI output.

35:38.140 --> 35:42.140
So it captures this HDMI and then puts it into an interface for you to view?

35:42.140 --> 35:44.140
Into a browser. Yeah, this is the really cool part.

35:44.140 --> 35:52.140
You can then log into a browser with a web interface that lets you see the stream in real time up to 30 frames per second.

35:52.140 --> 35:56.140
So if you're a madman, you could watch video that way.

35:56.140 --> 35:59.140
Really? It performs that well in the browser?

35:59.140 --> 36:01.140
Yeah, believe it, buddy.

36:01.140 --> 36:11.140
Sounds like they actually created their very own MJPEG video server written in C, including multi-threading and GPU video encoding just to make that work so damn well. That's awesome.

36:11.140 --> 36:18.140
Wow. Now, the really nice thing for me is I already had a Pi 4 lying around and I didn't really know what to do with it.

36:18.140 --> 36:25.140
But, you know, such is the way with buying Raspberry Pis, you buy them with a future project in mind that one day it will be useful.

36:25.140 --> 36:29.140
And this is the project for me. Now, there's a bunch of different things you can do with it.

36:29.140 --> 36:39.140
You can connect it through a USB-C port to the computer you're controlling to do the keyboard video or to do the keyboard or mouse part video.

36:39.140 --> 36:41.140
Of course, it's the HDMI daughter board.

36:41.140 --> 36:51.140
But there are other mods you can do to this, which will let you control the power and reset buttons on the computer as well using the GPIO pins of the Raspberry Pi.

36:51.140 --> 36:53.140
Oh, brilliant. That's great.

36:53.140 --> 36:55.140
Yeah, that's where this gets really exciting, I think.

36:55.140 --> 37:00.140
So they build this as onboard ATX power control. So that's really cool.

37:00.140 --> 37:02.140
What else does it do?

37:02.140 --> 37:15.140
Yeah, you can add an optional OLED screen. So if you want to be a cool kiddie with a little OLED screen on your Pi, which will display some information about the network status or other desired information, you can do that as well.

37:15.140 --> 37:29.140
Now, the guy behind the project is doing some prototypes right now of a pre-made circuit board, a PCB that you can buy that you just slap onto your Pi like a hat, I suppose.

37:29.140 --> 37:31.140
And that will just do everything that you need.

37:31.140 --> 37:41.140
But I had no issues just doing it the self-hosted route, if you'll pardon the pun, of just buying a board off Amazon for 35 bucks and I was good to go.

37:41.140 --> 37:57.140
Of course, I had to order this HDMI cable that Alex was talking about because my first thought with this, Wes, was what if you could take a Raspberry Pi, you take this HDMI input and then create essentially an IP camera source that we could then feed into OBS.

37:57.140 --> 37:59.140
Oh, I like that line of reasoning.

37:59.140 --> 38:08.140
Right? You just drop it off each one of the machines. Each one gets a Pi with HDMI capture that's sending back like an RTMP stream to OBS. Good to go.

38:08.140 --> 38:19.140
This thing also supports wake on land, which you can imagine is kind of important. Macro scripts, which is kind of awesome. And then the embedded OS that runs this whole thing, of course, it's arch based.

38:19.140 --> 38:22.140
Ding ding. Yes, I'm glad you rang the bell.

38:22.140 --> 38:25.140
How did it get even better? Wow.

38:25.140 --> 38:29.140
So now think about something else that's useful when you want to access a system remotely.

38:29.140 --> 38:30.140
Oh, yeah.

38:30.140 --> 38:43.140
It's quite often that you want to plug in a USB drive or mount an ISO somehow. This Pi KVM project supports that as well. So you can upload the ISO to the SD card of the Pi through the web interface.

38:43.140 --> 38:47.140
Wow. So really, it's almost like a BMC powered by a Pi.

38:47.140 --> 38:57.140
Exactly right. Yeah. I mean, the feature parity is really good compared to proper IPMI implementations on server grade motherboards.

38:57.140 --> 39:07.140
Now, the really nice thing that this is going to let me do for self hosted is I'm now behind me, I've got a project spinning away.

39:07.140 --> 39:21.140
I'm building a NAS around consumer based consumer grade motherboards. So I can use things like Intel QuickSync properly now for Plex transcoding and, you know, consumer grade gear is a lot cheaper, even if you factor in buying a Pi per system.

39:21.140 --> 39:34.140
But my brain is now thinking, well, why don't I get an HDMI matrix, and then wire that in to the GPIO pins on the Pi and then use the Pi to control the input and output on the HDMI matrix.

39:34.140 --> 39:35.140
That's a great way to go.

39:35.140 --> 39:37.140
I don't know if it will work, but I want to try it.

39:37.140 --> 39:40.140
So all in all, it's just what less than $100?

39:40.140 --> 39:49.140
Yeah, if you factor in buying a Pi as well, I don't think you need the much more than the one gig model. But yeah, you could easily do this from under 100.

39:49.140 --> 40:00.140
You don't need a power supply because it's powered through the USB ports on the computer. They do recommend that you get a five volt splitter USB cable wired up, but I haven't found that to be necessary.

40:00.140 --> 40:05.140
I think I paid $15 for the little HDMI capture thingy. It wasn't very much.

40:05.140 --> 40:11.140
I'm sure if you order it through AliExpress, you can get it for that kind of price. I was impatient and went the Amazon route.

40:11.140 --> 40:20.140
Yeah, it was a little bit more on there. You're right. I did look on there first. But it was sold out at the time because I think people are hip to this idea.

40:20.140 --> 40:27.140
So we'll have a link to Pi KVM in the show notes if you're interested. They have all the details and even some diagrams and whatnot in there.

40:27.140 --> 40:32.140
It's a good one, Alex. There's other hot tips like this on that self hosted podcast I hear.

40:32.140 --> 40:41.140
Yeah, we're going to be doing a breakdown of different server power usage amounts this next episode. So make sure to tune in for that. Fascinating.

40:41.140 --> 40:43.140
I'm excited already.

40:43.140 --> 40:50.140
That strikes my fancy. LadyJuice is parked in the woods running off battery right now as we speak.

40:50.140 --> 40:53.140
Hot off the heels of that Helios 64 review.

40:53.140 --> 41:00.140
Yeah, that's right. The ultimate arm powered NAS was just on the latest self hosted. So check that out at self hosted dot show.

41:00.140 --> 41:06.140
Well, cool, Alex. Thanks for telling us about that. That sounds pretty neat. We appreciate it.

41:06.140 --> 41:08.140
I know you love a good slice of pie in the afternoon.

41:08.140 --> 41:11.140
Yeah, everybody knows you're such a big Raspberry Pi guy, right?

41:11.140 --> 41:14.140
Yeah, right.

41:14.140 --> 41:18.140
All right, let's do a little housekeeping. We'll just move right along there.

41:18.140 --> 41:23.140
Wes, you were supposed to tidy it up in here. Geez, I was distracted playing with the Raspberry Pi.

41:23.140 --> 41:24.140
What?

41:24.140 --> 41:28.140
Well, listen, I got a couple of things to tell you about.

41:28.140 --> 41:42.140
Number one, on Linux Action News this Sunday, Michael Larbel from Phronix joined us to do a little overview on the state of Linux hardware in 2020 and his thoughts on getting Apple on the M1.

41:42.140 --> 41:46.140
Also, so go check out Linux Action News because that was nice. It was great to have Michael on.

41:46.140 --> 41:50.140
And Phronix is such a resource for the community. It's good to hear from him.

41:50.140 --> 41:54.140
That's at Linux Action News dot com. I think slash 166.

41:54.140 --> 41:55.140
That's right.

41:55.140 --> 41:58.140
I knew if I just waited a second, you'd confirm.

41:58.140 --> 42:04.140
So then also heads up on Coder Radio time change. We're doing the Coder happy hour.

42:04.140 --> 42:08.140
You know, it's been kind of a rough year and we thought let's create a time, a slice.

42:08.140 --> 42:16.140
Monday suck. So Monday evenings at 5 p.m. Pacific, 8 p.m. Eastern, the Coder Radio live stream will start up.

42:16.140 --> 42:23.140
I'll be out there hanging with the chats, talking about stuff, perhaps having some drinks or some snacks.

42:23.140 --> 42:28.140
And then about a half hour after that, the Coder Radio program will start and it's new 5 p.m.

42:28.140 --> 42:31.140
8 p.m. Eastern time slot at JBLive.TV.

42:31.140 --> 42:38.140
And while we're talking about stuff going on on this live stream, there's one thing that you might be missing if you're only tuning in there.

42:38.140 --> 42:42.140
If you're not a Mumble member, then you well, then you're missing out on the Luplug.

42:42.140 --> 42:49.140
And this Sunday, the Luplug is doing another recorded session about blogging for yourself.

42:49.140 --> 42:51.140
MiniMech, you want to tell us a little bit about that?

42:51.140 --> 42:56.140
I would love to. So we do our last recorded session for the year 2020.

42:56.140 --> 43:05.140
And I can already announce that we will try to make all of our previous recording accessible starting from January next year.

43:05.140 --> 43:14.140
So as you said, the title of our Luplug session will be blog to yourself and we will talk about taking notes.

43:14.140 --> 43:20.140
I mean, you all know the problem. You found a solution to a Linux problem and you forgot to write it down.

43:20.140 --> 43:23.140
And a year later, you don't know the solution anymore.

43:23.140 --> 43:29.140
So we will give you some simple solutions to write down notes and keep them organized.

43:29.140 --> 43:33.140
So we have three parts. We have user West Text Jeff.

43:33.140 --> 43:39.140
He will be talking about the Zim Wiki, which is a GTK solution.

43:39.140 --> 43:44.140
It's all is a file solution for taking notes and organize them.

43:44.140 --> 43:52.140
Then I will be talking about TiddlyWiki, which is a well-known solution for all in one file Wiki.

43:52.140 --> 43:57.140
And maybe once you have a hundred notes, you might want to publish them in a blog.

43:57.140 --> 44:06.140
And there is user PieCrush. He will talk about the Hugo Static Web Generator, which is all is a file solution to create a web page.

44:06.140 --> 44:12.140
So that's all I can say. I hope to see you next Sunday and love to hear from you. Thanks.

44:12.140 --> 44:15.140
Plus one for TiddlyWiki, man. I love that thing.

44:15.140 --> 44:24.140
You could go in and join the love plug on Sundays at noon Pacific, 3 p.m. Eastern. Just got to get mumble set up and we have information about that linked to the top of Linux unplugged dot com.

44:24.140 --> 44:27.140
And then once you have that set up, when you have a Tuesday free, you could join us.

44:27.140 --> 44:34.140
And every now and then you'll find a wild Linux unplugged on that Sunday where we hop on and we just do a show on a Sunday.

44:34.140 --> 44:43.140
And so if you're set up, you're ready to go. And all of that, of course, is listed at Jupiter Broadcasting's calendar, Jupiter broadcasting dot com slash calendar.

44:43.140 --> 44:56.140
And that right there is all of the cleaning up. At least for now, Hector Martin is well, he's known for porting Linux to the PlayStation four.

44:56.140 --> 45:06.140
He also is maybe, if you remember, known for porting the connect to Linux. Do you remember Microsoft's connect? Oh, yeah.

45:06.140 --> 45:11.140
All right. Hector did that work. In fact, that work actually continues on in some universities around around the world.

45:11.140 --> 45:15.140
It's pretty neat. He's been involved in a lot of projects behind the scenes over the years.

45:15.140 --> 45:28.140
And he he joined me really early in the morning from Tokyo to talk about his latest effort, which is to attempt to get Linux up and running on the M1.

45:28.140 --> 45:37.140
And Hector has a bit of a following. So he launched a Patreon and very, very quickly reached the funding levels he was looking for.

45:37.140 --> 45:42.140
So that's where our conversation started when he joined me earlier. Well, Hector, welcome to the show.

45:42.140 --> 45:47.140
And when I first announced you'd be coming on the show, you had just launched the Patreon. How's it going now?

45:47.140 --> 45:55.140
It's going very well. Actually, I just passed over 50 percent on the second goal, which is like sort of the you know, I can work on this full time goal.

45:55.140 --> 46:00.140
So I'm very surprised that I got this kind of reception. Wow.

46:00.140 --> 46:09.140
OK, so assuming maybe you could even get to full time, what do you think is is even a rough, realistic timeline for just figuring out how to do all of this?

46:09.140 --> 46:18.140
Well, I mean, I'm already brainstorming sort of, you know, what approach I would like to use, which is something I have experience with because I've done this in the past for other platforms.

46:18.140 --> 46:24.140
Right. But I mean, I have no idea sort of what the long term time frame is going to be like, because there's no way of guessing that.

46:24.140 --> 46:27.140
But I have a pretty good idea of sort of, you know, what to expect in the short term.

46:27.140 --> 46:34.140
Now, I know you you do have some experience, like with the PlayStation 4, getting Linux up and running on the PlayStation.

46:34.140 --> 46:42.140
Do you feel like that's a translatable skill that that figuring out something like a console that's pretty unique is translatable to something like the M1?

46:42.140 --> 46:51.140
Oh, yeah. So the PS4 has a completely custom Southbridge, which is actually a bizarre thing that has an ARM CPU that then runs separately in like sleep mode.

46:51.140 --> 46:57.140
So you get like weird things like ARM peripherals on X86 and a completely bizarre interrupt system. Wow.

46:57.140 --> 47:01.140
The M1 also has a custom interrupt system and of course, completely new novel peripherals.

47:01.140 --> 47:05.140
So, yeah, like there's a lot of overlap, I think, in the approach.

47:05.140 --> 47:16.140
So you've spent a good portion of your time working on getting Linux running on devices that in probably every case, there was somebody arguing, this would be better spent on an open platform.

47:16.140 --> 47:21.140
This is this is time and energy that could be spent on RISC-V. What is your thoughts there?

47:21.140 --> 47:26.140
Is there is there utility in both? Is there one reason to focus on one over the other?

47:26.140 --> 47:33.140
Well, there's definitely value in both. Right. I mean, you know, I would always like to see like, you know, open platforms take over the world and things like that.

47:33.140 --> 47:41.140
But but, you know, working with the hardware we have and working with the hardware that that performs today, for example, in the case of the M1, it's kind of unique in that front.

47:41.140 --> 47:50.140
I think it's very valuable. And in the end, you know, anyone should be able to use whatever hardware they own or choose for whatever reason, you know, with whatever software they want to use.

47:50.140 --> 47:55.140
So I think there's room for both for both approaches. I really like that answer.

47:55.140 --> 48:01.140
I think you're so right. It's, you know, we are not going to ever exist in a world where there's not going to be Tivo's.

48:01.140 --> 48:10.140
And so as long as there's Tivo's out there, it would be really great if when when we own these devices, if we could have access to them and use them how we choose.

48:10.140 --> 48:14.140
And that's what your work is enabling. So I think it's tremendously important.

48:14.140 --> 48:18.140
Well, I also think the work on the open platforms is tremendously important.

48:18.140 --> 48:30.140
But I want to go back to kind of the difficulty of the task, because I think the other the other common response I get besides the open platform one is, well, there's just no way to get that GPU working under Linux.

48:30.140 --> 48:41.140
Well, I mean, yeah, people say that, but I mean, it's been done before, right? You know, we have NuVol, we have, you know, sort of less less successful, but not, you know, completely failed approaches for other, you know, GPUs in the embedded space.

48:41.140 --> 48:47.140
There's Lima for ARM, there's been some stuff for the Qualcomm GPUs, I think, for Vivado and other things like that.

48:47.140 --> 48:56.140
So was it Vivante was it? Sorry, I forget. But yeah, there's there's been little projects like that and they got stuff working and they got triangles on the screen and NuVol works very well.

48:56.140 --> 49:00.140
So, I mean, I think this is doable. I mean, it's not going to be easy, but I think it's doable.

49:00.140 --> 49:05.140
It would make a huge difference, right? If Apple were to maybe just release some documentation.

49:05.140 --> 49:13.140
Yeah, even, you know, things like, you know, if they use LLVM for any of the shader compiling, just releasing those patches would be very nice or things like that.

49:13.140 --> 49:16.140
So, yeah, we'll see what happens.

49:16.140 --> 49:25.140
What do you think about their use of metal, though? Does that make your job a little trickier if more and more of their hardware is tuned for metal and not really paying any attention to Vulkan and OpenGL?

49:25.140 --> 49:31.140
Well, I mean, they still have OpenGL on top. So obviously that has to work and has to support everything that OpenGL supports.

49:31.140 --> 49:38.140
But I mean, as I understand it, I'm not a graphics programmer. I've done, you know, graphics programming, but I'm not, you know, up to date on all the latest stuff.

49:38.140 --> 49:42.140
But ultimately, metal and Vulkan are kind of taking similar approaches, as I understand it.

49:42.140 --> 49:47.140
And I'd be very surprised if there's literally like, you know, feature set differences that make this very hard.

49:47.140 --> 50:03.140
There is, however, an advantage to Apple doing their thing their own way, which is that, you know, as far as not having legal issues with copying Apple code by accident, if they're doing something completely different, then that sort of forces you to rewrite everything from scratch, whatever, you know, one way or another.

50:03.140 --> 50:08.140
So that's it helps sort of the argument that what I'm doing is effectively clean room equivalent.

50:08.140 --> 50:14.140
Right. I hadn't thought of that, but it by by very nature has to be. So you're not going to get in trouble that way.

50:14.140 --> 50:28.140
Well, thanks, Apple. So do you think success would be measured by booting Linux and being able to get access to, say, an M1 device in a couple of years when Apple has moved on and they've kind of quickly abandoned these first arm versions?

50:28.140 --> 50:33.140
Is that success or is success measured by playing a video game on a MacBook under Linux?

50:33.140 --> 50:45.140
Well, I mean, I think the primary goal of getting Linux booting on the M1 is not going to take that long because Linux is actually very, very easy to port to new platforms.

50:45.140 --> 50:51.140
So the long term goal is the performance kind of thing. I would call it success somewhere in the middle.

50:51.140 --> 50:59.140
I would call it success if you can have a desktop environment running smoothly and have web browsers that can composite using the GPU and play YouTube videos and that kind of thing.

50:59.140 --> 51:04.140
I think that's where I personally would put success, because that's where I would really want to use the computer.

51:04.140 --> 51:10.140
Sure. Is that sort of the aspects of the M1 that have excited you enough to I mean, this is no small task.

51:10.140 --> 51:15.140
Even if you get to your goal of full time on Patreon, it's not like it's a huge paycheck.

51:15.140 --> 51:18.140
You're you're going to be living living pretty lean. So there must be a passion aspect to this.

51:18.140 --> 51:24.140
Oh, definitely. I mean, you know, all other platforms that I've done in the past have all been side projects, you know, basically passion projects.

51:24.140 --> 51:29.140
So, yeah, like this, this is something that really interests me because I really like reverse engineering.

51:29.140 --> 51:37.140
I really like him sort of figuring out puzzles and things like, you know, just kind of poking at the hardware to understand what every little bit in every register does and that kind of stuff.

51:37.140 --> 51:44.140
And sort of, you know, there's this platform that has like no documentation whatsoever that everyone is interested in that would make a great Linux platform.

51:44.140 --> 51:49.140
And it's not even, you know, academic or has a small user base. It's like, you know, a lot of people could use this.

51:49.140 --> 52:00.140
So this is very exciting. It also seems like it's rare in this era of computing where such a completely different platform emerges that is custom built to the work case.

52:00.140 --> 52:06.140
And it just almost immediately has a sizable large user base overnight.

52:06.140 --> 52:13.140
Yeah, like I think this is really unique, like sort of in the combination of it's just, you know, performs really well.

52:13.140 --> 52:21.140
It's completely new and it's open in the way that you can run your own code. And yet, you know, like anyone can buy it and it's all over the place.

52:21.140 --> 52:23.140
Yeah, it is very unique.

52:23.140 --> 52:28.140
Yeah. And you could see they're probably going to have a pretty compelling competitive story for a couple of years.

52:28.140 --> 52:34.140
And so interest is there's there's a lot of interest right now as you're seeing reflected in your Patreon and in our coverage of it.

52:34.140 --> 52:38.140
But it's actually just beginning. They're going to continue to iterate this platform forward.

52:38.140 --> 52:43.140
They're likely going to iterate on a new and interesting hardware designs around it.

52:43.140 --> 52:46.140
And I don't think Linux users are going to want to be left out.

52:46.140 --> 52:51.140
Oh, yeah, absolutely. I'm very curious as to what they're going to do with like the M2 or whatever they call it.

52:51.140 --> 52:57.140
Because, you know, I had a few sort of semi, you know, not really critical, but sort of, you know, like putting people back on Earth,

52:57.140 --> 53:02.140
threads about the M1 before the whole Linux story where people were saying, you know, it's this magical chip that is going to destroy everything else.

53:02.140 --> 53:08.140
And I'm like, well, it's not magic. It's really good. It's competitive. It's like, you know, suddenly ARM is in the x86 space.

53:08.140 --> 53:14.140
But it's not, you know, like 10 times better or something like that. Now, what Apple does after this, I have no idea what they can accomplish.

53:14.140 --> 53:17.140
So that's going to be very interesting. I'm sure they have a long roadmap.

53:17.140 --> 53:25.140
But some of that is going to present challenges for you because the ground is going to be changing underneath while you're still working on getting this part working.

53:25.140 --> 53:29.140
Yeah, that always happens. I'm sort of counting on the general idea that, you know,

53:29.140 --> 53:35.140
when people iterate on these platforms, when when companies and development teams just, you know, move forward,

53:35.140 --> 53:40.140
they usually don't rewrite things from scratch, much like we also don't in the software area.

53:40.140 --> 53:44.140
So there's going to be a lot of overlap. You know, of course, of course, the CPU is the CPU.

53:44.140 --> 53:48.140
I don't expect them to change the intro controller overnight. So, you know, the day the M2 comes out, chances are I can get Linux,

53:48.140 --> 53:52.140
you know, the bare kernel booting in like pretty much no time.

53:52.140 --> 53:55.140
The interesting thing is going to be, you know, what they've done to the GPU, for example, and things like that.

53:55.140 --> 54:00.140
That's where you're going to get the really interesting sort of, you know, how different is it? How how similar is it?

54:00.140 --> 54:05.140
Are they just, you know, will they ever do a major overhaul of the shader architecture?

54:05.140 --> 54:08.140
I'm sure they will eventually. But, you know, will the M2 do that?

54:08.140 --> 54:11.140
Or is it just going to be like, you know, like twice the cores? We don't know.

54:11.140 --> 54:18.140
Right, right. It may also still turn out that some of their Macs will ship with discrete GPUs from vendors like AMD.

54:18.140 --> 54:23.140
We don't actually know that yet. It doesn't seems possibly like that may not happen.

54:23.140 --> 54:28.140
But if something like that were to develop, that must make your job easier.

54:28.140 --> 54:34.140
Yeah, I mean, I would expect open source drivers for, you know, existing GPUs to pretty much just work.

54:34.140 --> 54:38.140
In fact, Apple doesn't support external GPUs on VM ones on paper.

54:38.140 --> 54:42.140
But I would be very surprised if there's literally a hardware reason for that not to work.

54:42.140 --> 54:47.140
So if I end up getting a hold of like a Thunderbolt dock for, you know, sticking a GPU in there,

54:47.140 --> 54:50.140
I pretty much expect the Linux drivers to just work with a fix or two.

54:50.140 --> 54:52.140
There's no real reason for them not to, as far as I can tell.

54:52.140 --> 54:54.140
Yeah, if it's true Thunderbolt, right?

54:54.140 --> 54:55.140
Yeah, it is.

54:55.140 --> 55:02.140
The only thing I was wondering is if that unified memory architecture could potentially make it impossible to have a discrete GPU or an eGPU.

55:02.140 --> 55:07.140
No, I mean, like that's just for the internal GPU, right?

55:07.140 --> 55:11.140
There's no reason why you couldn't have an external GPU and it's going to have as any other PCI device over Thunderbolt, right?

55:11.140 --> 55:19.140
So as long as the driver supports it properly, you know, all the apps are going to be written with support for that in mind because it's what they use on the X86 ones, right?

55:19.140 --> 55:27.140
True. Yeah, I guess so. I guess so. Well, Hector, I think it's bold and I hope that the Patreon continues to get the support

55:27.140 --> 55:34.140
because honestly, for myself, I could see using the efforts of a project like this in a couple of years

55:34.140 --> 55:38.140
when a family member gives me a used MacBook or they need something recovered

55:38.140 --> 55:44.140
and I could imagine if I could boot Linux on that thing and help recover data for them or breathe new life into it.

55:44.140 --> 55:46.140
So I really hope this materializes.

55:46.140 --> 55:52.140
Yeah, actually, I have a personal thing that I'm very curious about, which you might be interested in too, which is how good is it for audio production?

55:52.140 --> 56:01.140
Because one of the main issues that X86 has is that it's such a huge and legacy platform that they have so much stuff going on behind the scenes,

56:01.140 --> 56:06.140
like system management mode that sort of gets in the way of things like having good real time performance

56:06.140 --> 56:13.140
and embedded ARM platforms are great at that. Is the M1 also in that class? I hope so because I also do audio production on Linux.

56:13.140 --> 56:21.140
So I'm really curious as to whether you can get much better performance and fewer buffer underruns and things like that in this kind of environment.

56:21.140 --> 56:23.140
That'd be really nice, too, because they run so quiet.

56:23.140 --> 56:25.140
Yeah, that's right.

56:25.140 --> 56:27.140
Yes, that also would make them nice.

56:27.140 --> 56:30.140
Yeah, I'd love to have the character like gigs and things like that.

56:30.140 --> 56:34.140
Interesting. Well, Hector, thank you very much for coming on and running through some of this.

56:34.140 --> 56:38.140
We'll have a link to the Patreon in our show notes and to your Twitter.

56:38.140 --> 56:39.140
Yeah, thank you so much.

56:39.140 --> 56:45.140
I would say if you're interested in seeing this happen, for like some of the same reasons I am, that Patreon might be worth considering.

56:45.140 --> 56:52.140
What Hector wants to do is upstream all of this code so it is available to all Linux distributions.

56:52.140 --> 56:56.140
And he has done that before. He's upstreamed some of the code he's developed before.

56:56.140 --> 57:01.140
And he's thinking about it from a white room clean perspective, and he's really put a lot of thought into it.

57:01.140 --> 57:03.140
So if you're interested, we will have that link in the show notes.

57:03.140 --> 57:05.140
You know, it's really nice to get him on the program.

57:05.140 --> 57:10.140
Thank you, Hector, for joining us because I know last week we were a little unsure about just how this would go.

57:10.140 --> 57:12.140
But I feel he's somewhat reassured.

57:12.140 --> 57:16.140
You know, he's clearly, if anyone, he's the right person for the job.

57:16.140 --> 57:17.140
You know, I think so, Wes.

57:17.140 --> 57:20.140
He and I had a nice long conversation after that interview.

57:20.140 --> 57:25.140
And he went into more of his background, some of which he can't necessarily share publicly.

57:25.140 --> 57:28.140
And I think he's qualified.

57:28.140 --> 57:30.140
And I wouldn't say that lightly.

57:30.140 --> 57:38.140
And he's seen a lot of support because of some of his past successes that people are aware of, some of which are not as public.

57:38.140 --> 57:41.140
And he's already kind of got a game plan together.

57:41.140 --> 57:45.140
And I think he's got a timeline for when he's going to have Linux booting on that thing.

57:45.140 --> 57:48.140
Oh, geez, I better start budgeting right now.

57:48.140 --> 57:54.140
Maybe we will be at the point where you'll be able to breathe life into it down the road.

57:54.140 --> 58:02.140
And his point about when Apple does release M2s and M3s or M1Xs, they're going to be iterative releases.

58:02.140 --> 58:06.140
And the thing about the way they're built right now is if he figures it out on a Mac mini,

58:06.140 --> 58:10.140
he's essentially solved it for the MacBook Air and the MacBook Pro as well.

58:10.140 --> 58:13.140
And so there's a lot of return on his work right now.

58:13.140 --> 58:16.140
And so I'm going to follow with interest.

58:16.140 --> 58:21.140
I'm going to stay in touch with him and just keep tabs with him and see how it's going and keep an eye on it.

58:21.140 --> 58:24.140
And if anything super interesting develops, I'll let you all know.

58:24.140 --> 58:28.140
But in the meantime, how about a couple of pics to send you on your way?

58:28.140 --> 58:30.140
We've got a couple of fun ones.

58:30.140 --> 58:38.140
I'm going to admit one that I've been using to impress family and one that if you are on Team Red,

58:38.140 --> 58:40.140
yeah, I'm using the lingo now, you'll appreciate.

58:40.140 --> 58:47.140
You AMD Radeon users should check out Radeon Top where you can view your GPU utilization,

58:47.140 --> 58:54.140
both for the total activity and individual blocks in a terminal that I guess is top-esque.

58:54.140 --> 58:57.140
It's kind of like the wrong way going on the page.

58:57.140 --> 58:58.140
I don't know.

58:58.140 --> 59:04.140
But it certainly seems better than scraping through slash dev and trying to pull a bunch of facts out there.

59:04.140 --> 59:06.140
It is nice to get it all visualized for you.

59:06.140 --> 59:08.140
And it looks just fine.

59:08.140 --> 59:12.140
It's just everything's horizontal and that's not the structure of Top.

59:12.140 --> 59:16.140
But it's Radeon Top and we'll have a link in the show notes.

59:16.140 --> 59:19.140
But I'm moving right along to the next one.

59:19.140 --> 59:21.140
Because Wes and I were having a little debate before the show.

59:21.140 --> 59:27.140
We can't actually remember which one of these Top, like super Tops we've talked about

59:27.140 --> 59:30.140
because there's of course Bash Top, there's Go Top.

59:30.140 --> 59:33.140
If there's a Rust one, surely we've talked about it.

59:33.140 --> 59:34.140
Right, right.

59:34.140 --> 59:41.140
But now we're coming full circle and we're talking about a Python Top replacement.

59:41.140 --> 59:42.140
Now stay with me on this one.

59:42.140 --> 59:45.140
It's called, I'm going to say, what do you think, Wes?

59:45.140 --> 59:46.140
B Pytop?

59:46.140 --> 59:47.140
I think so.

59:47.140 --> 59:52.140
B Pytop because it's actually a port of Bash Top to Python.

59:52.140 --> 59:55.140
So you start with one alternative Top and then you go to the next level.

59:55.140 --> 59:59.140
Yeah, and it's no disrespect to the Bash Top project.

59:59.140 --> 01:00:05.140
But this is way, way cooler, way better, way everything.

01:00:05.140 --> 01:00:09.140
And I've been leaving it up on my screen to really impress the family.

01:00:09.140 --> 01:00:13.140
You combine this with like Retro Terminal and it doesn't always work right.

01:00:13.140 --> 01:00:16.140
And when it does work right, well, it's next level nerdy.

01:00:16.140 --> 01:00:20.140
So it's B P Y Top and we'll have a link in the show notes.

01:00:20.140 --> 01:00:22.140
It's very easy to install just with pip or whatever.

01:00:22.140 --> 01:00:24.140
Pip 3 install, B P Y Top.

01:00:24.140 --> 01:00:27.140
That's another thing that really struck me when I started playing with this.

01:00:27.140 --> 01:00:30.140
Not only is it pretty, it works really nicely, it's got some nice features,

01:00:30.140 --> 01:00:32.140
but it's packaged in a whole bunch of places.

01:00:32.140 --> 01:00:36.140
So if you couldn't get Linux running on your M1, well, don't worry,

01:00:36.140 --> 01:00:38.140
it's in Homebrew and Mac ports.

01:00:38.140 --> 01:00:42.140
It's in the Arch Repos, it's in Debian testing, it's in Fedora 33.

01:00:42.140 --> 01:00:45.140
So you don't even have to bother with pip if you don't want to.

01:00:45.140 --> 01:00:51.140
But put quite simply, this is the prettiest way I have ever seen my stats

01:00:51.140 --> 01:00:58.140
about my machine displayed on a command line or in a graphical application.

01:00:58.140 --> 01:01:02.140
Of course, it'll give you your aggregate CPU load, your overall core load.

01:01:02.140 --> 01:01:05.140
It'll read your temperatures if you have that stuff installed.

01:01:05.140 --> 01:01:08.140
It gives you disk stats, it gives you memory stats,

01:01:08.140 --> 01:01:11.140
it gives you network stats, it gives you top process stats.

01:01:11.140 --> 01:01:15.140
And it's really interesting thread information about what's taking your main thread,

01:01:15.140 --> 01:01:18.140
a great way to display memory usage in general.

01:01:18.140 --> 01:01:23.140
And all of them are really just displayed just so nerdily perfect.

01:01:23.140 --> 01:01:25.140
It's so great.

01:01:25.140 --> 01:01:28.140
And if you just want a great way to put something up on a monitor

01:01:28.140 --> 01:01:31.140
and look at how your system's doing, like when you're doing an encode of a video

01:01:31.140 --> 01:01:34.140
or something like that, I don't know.

01:01:34.140 --> 01:01:38.140
Because I don't know what you do, but you've got to be doing it with bpy top.

01:01:38.140 --> 01:01:40.140
You just need a little Python love.

01:01:40.140 --> 01:01:43.140
It's all on their GitHub that we have linked.

01:01:43.140 --> 01:01:47.140
It's truly one of the prettiest ways to visualize what the crap your box is up to.

01:01:47.140 --> 01:01:49.140
And I'm never going back.

01:01:49.140 --> 01:01:54.140
Bash top, I love you, but I got a new tool now, tell you what.

01:01:54.140 --> 01:01:59.140
Just like everything else, once it gets complicated, you switch from Bash to Python.

01:01:59.140 --> 01:02:04.140
Just like I knew I would, Wes, I knew I'd forget to turn off the Black Friday promo code

01:02:04.140 --> 01:02:05.140
for the core contributors.

01:02:05.140 --> 01:02:08.140
So if you haven't become an unplugged member yet and you'd like to support the show

01:02:08.140 --> 01:02:12.140
and get a limited ad feed, you can go to unpluggedcore.com.

01:02:12.140 --> 01:02:15.140
Until I probably remember before next episode, I'm going to leave the coupon code

01:02:15.140 --> 01:02:18.140
Black Friday going, which will take two bucks off.

01:02:18.140 --> 01:02:20.140
It's Black Friday in December.

01:02:20.140 --> 01:02:23.140
Get in there while you can before he eventually remembers.

01:02:23.140 --> 01:02:24.140
That's right.

01:02:24.140 --> 01:02:27.140
Take advantage of Chris having way too much to do to turn off that good deal.

01:02:27.140 --> 01:02:31.140
Unpluggedcore.com, just a little bit longer to get access to that.

01:02:31.140 --> 01:02:35.140
Plus, you get the option of two separate feeds.

01:02:35.140 --> 01:02:39.140
One feed that is the live take, it's a lot more show right now.

01:02:39.140 --> 01:02:40.140
Hey, how can I tell?

01:02:40.140 --> 01:02:42.140
How can I tell how long the file?

01:02:42.140 --> 01:02:43.140
Can I look at the file?

01:02:43.140 --> 01:02:47.140
Right now, it's an hour and 41 minute file as I say these words.

01:02:47.140 --> 01:02:49.140
That's not how long the release show is.

01:02:49.140 --> 01:02:51.140
So there's a lot more show in that feed.

01:02:51.140 --> 01:02:55.140
There's also all the times I screw up or if Wes has a dog that barks

01:02:55.140 --> 01:02:59.140
or maybe some guest audio doesn't work out, all that's in there too.

01:02:59.140 --> 01:03:00.140
It's everything.

01:03:00.140 --> 01:03:01.140
It's fully everything.

01:03:01.140 --> 01:03:05.140
It's raw and it's naked and it's available for you.

01:03:05.140 --> 01:03:09.140
But there's also a limited ad version which is well produced, cleaned up,

01:03:09.140 --> 01:03:13.140
tight and just limited ads.

01:03:13.140 --> 01:03:16.140
So that's the perks you get for becoming a member.

01:03:16.140 --> 01:03:20.140
Plus, you support this here podcast at unpluggedcore.com.

01:03:20.140 --> 01:03:23.140
All the ways to listen and you make sure that we'll be here every darn

01:03:23.140 --> 01:03:24.140
Tuesday doing it again.

01:03:24.140 --> 01:03:28.140
Darn tootin' unless I can come up with a workflow to move the show to Sunday.

01:03:28.140 --> 01:03:29.140
Maybe.

01:03:29.140 --> 01:03:31.140
And then we'll be here every darn Sunday.

01:03:31.140 --> 01:03:35.140
But I don't know, you know, because things like CentOS changing up the

01:03:35.140 --> 01:03:38.140
entire way that they manage their distro happen on Tuesdays.

01:03:38.140 --> 01:03:41.140
They don't happen on Sundays, you know.

01:03:41.140 --> 01:03:43.140
That's the gosh darn truth of it, Wes.

01:03:43.140 --> 01:03:44.140
See you next week.

01:03:44.140 --> 01:03:46.140
Same bad time, same bad station.

01:03:46.140 --> 01:03:48.140
So we keep it at Tuesday for now.

01:03:48.140 --> 01:03:50.140
We keep it at Tuesday for now.

01:03:50.140 --> 01:03:54.140
You can get the show on Twitter at Linux Unplugged if you want to get like,

01:03:54.140 --> 01:03:56.140
I don't know, release announcements that way.

01:03:56.140 --> 01:04:00.140
You can get all the ways to subscribe to the podcast at LinuxUnplugged.com

01:04:00.140 --> 01:04:01.140
slash subscribe.

01:04:01.140 --> 01:04:02.140
He's at Wes Payne.

01:04:02.140 --> 01:04:03.140
I'm at Chris Lass.

01:04:03.140 --> 01:04:08.140
Go get some more Alex at the self-hosted show at selfhosted.show.

01:04:08.140 --> 01:04:10.140
And I just want to say thank you again.

01:04:10.140 --> 01:04:13.140
Thank you to everybody who listens and shares the show with your friends

01:04:13.140 --> 01:04:16.140
or takes advantage of one of our sponsors or becomes a supporter.

01:04:16.140 --> 01:04:18.140
We really appreciate you just for doing all of that.

01:04:18.140 --> 01:04:20.140
Downloading the show and listening, we appreciate you.

01:04:20.140 --> 01:04:24.140
And I can't wait to go out to some events and send my near future and see

01:04:24.140 --> 01:04:25.140
y'all.

01:04:25.140 --> 01:04:27.140
See you next Tuesday.

01:04:55.140 --> 01:05:06.140
Okay, JBtitles.com.

01:05:06.140 --> 01:05:08.140
Let's go boat.

01:05:08.140 --> 01:05:12.140
Also, don't forget that the nominations are still open for the Unplugged

01:05:12.140 --> 01:05:13.140
Tuxes.

01:05:13.140 --> 01:05:20.140
You can get a link to that in the show notes.

01:05:20.140 --> 01:05:22.140
The Unplugged Tuxes for just a little bit longer.

01:05:22.140 --> 01:05:24.140
I'll drop a link in the IRC right now.

01:05:24.140 --> 01:05:26.140
Get your votes in while it's hot, folks.

01:05:26.140 --> 01:05:28.140
Well, I'm out in the woods again.

01:05:28.140 --> 01:05:31.140
It's been nice, you know, doing the whole off-grid thing.

01:05:31.140 --> 01:05:34.140
Putting the whole system through the tests, the whole new cellular system.

01:05:34.140 --> 01:05:36.140
You don't need no civilization.

01:05:36.140 --> 01:05:37.140
Ha!

01:05:37.140 --> 01:05:39.140
Except when you get hungry later.

01:05:39.140 --> 01:05:40.140
That's true.

01:05:40.140 --> 01:05:41.140
We have some supplies.

01:05:41.140 --> 01:05:42.140
What is it, Neil?

01:05:42.140 --> 01:05:43.140
What is it?

01:05:43.140 --> 01:05:45.140
This has been such a terrible day.

01:05:45.140 --> 01:05:47.140
You need to go to the woods.

01:05:47.140 --> 01:05:48.140
Take a big nap.

01:05:48.140 --> 01:05:51.140
I want to go away and I want to take a nap and I want to just hide from the

01:05:51.140 --> 01:05:53.140
world for a while.

01:05:53.140 --> 01:05:55.140
Well, first go vote.

01:05:55.140 --> 01:05:56.140
JBtitles.com.

01:05:56.140 --> 01:05:58.140
And then go to the woods and take a nap.

01:05:58.140 --> 01:06:00.140
Well, I would if JBtitles would load.

01:06:00.140 --> 01:06:03.140
You just got to give it a refresh a couple times sometimes.

01:06:03.140 --> 01:06:04.140
But not too fast.

01:06:04.140 --> 01:06:05.140
Don't overwork the bot.

01:06:05.140 --> 01:06:07.140
Yeah, you got to do it just right.

01:06:07.140 --> 01:06:10.140
I don't know if I feel bad about killing an Arch server.

01:06:10.140 --> 01:06:12.140
Well, what about an old Arch server?

01:06:12.140 --> 01:06:13.140
It's like the underdog, you know?

01:06:13.140 --> 01:06:15.140
It hasn't been properly maintained.

01:06:15.140 --> 01:06:17.140
Don't you have some sympathy for it?

01:06:17.140 --> 01:06:19.140
It tries so hard, you know?

01:06:19.140 --> 01:06:22.140
It's like that straggling CentOS 8 box that never got updated to stream.

01:06:22.140 --> 01:06:23.140
Yeah.

01:06:23.140 --> 01:06:24.140
Oh, no.

01:06:24.140 --> 01:06:25.140
That hurts too much.

01:06:25.140 --> 01:06:52.140
Sorry, too soon.

