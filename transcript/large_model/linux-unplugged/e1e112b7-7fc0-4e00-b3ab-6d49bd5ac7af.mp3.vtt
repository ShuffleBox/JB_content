WEBVTT

00:00.000 --> 00:02.220
Running Linux on a toaster, sure, that's cool.

00:02.220 --> 00:07.220
But what about a computer mouse that's a computer mouse?

00:07.300 --> 00:08.140
No, I mean it.

00:08.140 --> 00:09.100
Hey guys, how's it going?

00:09.100 --> 00:10.300
So what you're looking at is something

00:10.300 --> 00:13.340
I ingeniously named the computer mouse.

00:13.340 --> 00:15.140
This is a completely functional computer

00:15.140 --> 00:20.140
inside of a totally 100% completely normal sized mouse.

00:20.140 --> 00:23.180
Basically, I designed a mouse in Fusion 360, printed it out,

00:23.180 --> 00:26.500
and then added a Raspberry Pi Zero, a 1.5 inch screen,

00:26.500 --> 00:28.180
a battery, and a keyboard.

00:28.180 --> 00:29.300
Yeah, he said a screen, Wes.

00:29.300 --> 00:31.460
This mouse has a fold-out screen,

00:31.460 --> 00:32.740
and this thing runs Linux.

00:32.740 --> 00:33.580
How cool is this?

00:33.580 --> 00:36.340
I really think what you're gonna really use this for?

00:36.340 --> 00:37.780
Winning nerd battles.

00:37.780 --> 00:39.700
Sure, you're having a great LAN party.

00:39.700 --> 00:42.580
No one else has a computer inside their computer mouse.

00:42.580 --> 00:43.420
Right, you show up and they're like,

00:43.420 --> 00:44.300
hey, where's your computer?

00:44.300 --> 00:45.860
I'm like, this is my computer.

00:45.860 --> 00:46.820
It runs Linux.

00:48.260 --> 00:53.140
This is Linux Unplugged, episode 284, for January 15th, 2019.

00:53.140 --> 01:07.380
Welcome to Linux Unplugged, it's currently freezing,

01:07.380 --> 01:11.300
it's you-know-what off down in the heart of Tejas.

01:11.300 --> 01:12.260
My name is Chris.

01:12.260 --> 01:13.380
My name is Wes.

01:13.380 --> 01:15.420
Hello, Mr. Payne.

01:15.420 --> 01:17.340
Now, we have a heck of a show.

01:17.340 --> 01:18.740
It's good to be back.

01:18.740 --> 01:21.100
After getting all married up and traveling down to Texas,

01:21.100 --> 01:24.380
we put together a show packed full of community news,

01:24.380 --> 01:28.420
including some really surprising stories this week.

01:28.420 --> 01:30.580
Dalton will stop by from the Ubuntu Touch Project

01:30.580 --> 01:32.500
to tell us about their new release,

01:32.500 --> 01:35.100
and then Neil joins us to explain

01:35.100 --> 01:38.300
and really put into context all of the hubbub going on

01:38.300 --> 01:40.500
around ZFS on Linux,

01:40.500 --> 01:44.540
how the BSDs are rebasing their implementations

01:44.540 --> 01:46.460
on the Linux version,

01:46.460 --> 01:49.660
and the changes the kernel maintainers made this week

01:49.660 --> 01:54.500
to block the ZFS module from working with Linux 5.0.

01:54.500 --> 01:57.460
It's amazing, and there's a lot going on,

01:57.460 --> 01:58.860
and there's a ton to get into.

01:58.860 --> 02:01.420
We'll play that for you in a little bit in the show,

02:01.420 --> 02:04.100
and then, if we don't go too long,

02:04.100 --> 02:06.100
we have a big batch of pics.

02:06.100 --> 02:08.620
I'm gonna tell you about my trip down here a little bit,

02:08.620 --> 02:10.980
and then we'll put it all, wrap it up in a bow,

02:10.980 --> 02:12.020
and send it off to the internet,

02:12.020 --> 02:14.500
but the only thing missing

02:14.500 --> 02:17.020
from what would otherwise be a perfect recipe

02:17.020 --> 02:18.940
would be participation from the audience,

02:18.940 --> 02:20.300
some crazy idea,

02:20.300 --> 02:22.020
where a group of Linux-loving people

02:22.020 --> 02:24.260
could just join an open Mumble server

02:24.260 --> 02:25.900
and participate in our show.

02:25.900 --> 02:27.900
In fact, why don't we even do that?

02:27.900 --> 02:30.740
Time-appropriate greetings, Mumble Room.

02:30.740 --> 02:32.380
Hello. Hello.

02:32.380 --> 02:34.460
Hello, everybody. Hello.

02:34.460 --> 02:35.780
Hello, hello.

02:35.780 --> 02:38.820
Thank you for making it, even on Brexit Day over there,

02:38.820 --> 02:39.660
on Brexit vote day.

02:39.660 --> 02:40.700
Oh, it's always Brexit Day over there.

02:40.700 --> 02:43.460
We promise this is the last time we'll talk about it today.

02:43.460 --> 02:45.300
I don't know about, oh yeah, today, yes.

02:45.300 --> 02:49.460
Oh, Wes, so thank you to you and Joe

02:49.460 --> 02:51.700
for covering the show last week

02:51.700 --> 02:54.100
and talking about Fischel, my favorite shell ever,

02:54.100 --> 02:55.660
as I made clear in the interview.

02:55.660 --> 02:56.980
You sure did.

02:56.980 --> 02:57.820
You guys did great.

02:57.820 --> 02:59.900
I got a lot of good, positive feedback on that,

02:59.900 --> 03:02.860
and I appreciate it because it gave me a chance to,

03:02.860 --> 03:05.140
well, I head down to Texas, you know,

03:05.140 --> 03:07.540
as I said two weeks ago in the RV,

03:07.540 --> 03:10.260
and on day two, we hit some mechanical troubles.

03:10.260 --> 03:12.100
Oh no, of course you did.

03:12.100 --> 03:16.540
Yeah, it was a couple of different issues,

03:16.540 --> 03:18.260
but it all kind of came together

03:18.260 --> 03:22.860
to really cause a series of unfortunate events.

03:22.860 --> 03:23.740
I guess I'll put it that way,

03:23.740 --> 03:27.220
including a popped water heater and all kinds of things.

03:27.220 --> 03:32.220
But we persevered and got to our spot

03:33.180 --> 03:35.180
where we had our marriage ceremony,

03:35.180 --> 03:36.940
and it turned out really, really nice.

03:36.940 --> 03:40.900
We had a great marriage ceremony under the stars,

03:40.900 --> 03:43.500
and then it completed just as the sun rose

03:43.500 --> 03:47.380
in the Tucson desert, and it was right between storms.

03:47.380 --> 03:49.780
Couple of days ahead of time, it had snowed,

03:49.780 --> 03:51.420
and then a couple days after we left,

03:51.420 --> 03:53.620
it was windy and rainy, and we nailed it.

03:53.620 --> 03:55.140
Just perfect weather.

03:55.140 --> 03:56.660
It was wonderful.

03:56.660 --> 03:59.260
Had great cellular connectivity too in the desert.

03:59.260 --> 04:00.900
I had 30 megabits down and like-

04:00.900 --> 04:03.780
Only you would mention that in the same sentences.

04:03.780 --> 04:05.100
Oh yeah, you know, I drove through this desert

04:05.100 --> 04:07.180
on an amazing trip, got married,

04:07.180 --> 04:09.740
and the connectivity was great.

04:09.740 --> 04:10.820
These things matter.

04:10.820 --> 04:13.460
That puts it back on the we'll return to list.

04:13.460 --> 04:14.300
You know what I mean?

04:14.300 --> 04:15.540
Like, if it's got good connectivity,

04:15.540 --> 04:17.060
all right, now it's a contender.

04:17.060 --> 04:18.220
It's a candidate now.

04:19.260 --> 04:20.340
You're right though.

04:20.340 --> 04:21.380
I am such a nerd.

04:21.380 --> 04:23.420
But it meant really good connectivity,

04:23.420 --> 04:24.540
which meant we could keep up to date

04:24.540 --> 04:25.740
with what was going on in the world,

04:25.740 --> 04:26.940
and we could put together a great show today.

04:26.940 --> 04:28.620
So made it down to Texas,

04:28.620 --> 04:31.940
and it's been in the low 20s every night

04:31.940 --> 04:32.780
since I've been here.

04:32.780 --> 04:35.100
So it's been nice and cold.

04:35.100 --> 04:36.500
That's why you go to Texas, right?

04:36.500 --> 04:38.580
For that refreshing winter coldness.

04:38.580 --> 04:41.660
Yes, yeah, it's my luck.

04:41.660 --> 04:42.500
It's my luck.

04:42.500 --> 04:43.460
I was down here earlier this year

04:43.460 --> 04:45.220
when it was the hottest day of the year,

04:45.220 --> 04:48.100
117 degrees in Dallas.

04:48.100 --> 04:50.540
And now it's in the 20s.

04:50.540 --> 04:51.740
During the day, it gets up to the 40s.

04:51.740 --> 04:54.300
But what's fun is there's a huge crew here.

04:54.300 --> 04:56.780
We're doing live streams for a bunch of content releases.

04:56.780 --> 04:57.900
So a bunch of people are in,

04:57.900 --> 05:01.820
and it's just, it's a good atmosphere down here right now.

05:01.820 --> 05:03.980
Lots of, there's lots of temporary desks set up,

05:03.980 --> 05:05.380
and I get to check out everybody's rigs,

05:05.380 --> 05:06.780
which is always a lot of fun.

05:06.780 --> 05:09.220
So I've really enjoyed my time down here so far.

05:09.220 --> 05:10.580
And I'll be down here for a couple of weeks

05:10.580 --> 05:12.340
doing the shows and whatnot.

05:12.340 --> 05:15.580
And so far, enjoying the heck out of it.

05:15.580 --> 05:17.100
It's really cool to have the RV parked

05:17.100 --> 05:18.220
right next to the office,

05:18.220 --> 05:20.900
because I can just, in 30 seconds, I'm working from home.

05:20.900 --> 05:22.860
That is such an easy commute.

05:22.860 --> 05:24.540
Right, and like I need to go to a meeting

05:24.540 --> 05:25.620
or do something in the office,

05:25.620 --> 05:27.540
30 seconds later, I'm in the office.

05:27.540 --> 05:28.660
It's phenomenal.

05:28.660 --> 05:30.500
You've got your own private conference room.

05:30.500 --> 05:32.220
People kill for that kind of space.

05:32.220 --> 05:33.060
I do.

05:33.060 --> 05:34.500
People actually, a couple of times now,

05:34.500 --> 05:37.460
have stopped by the RV just to chill for a bit.

05:37.460 --> 05:40.100
So Lady Jeef is getting a rep for the place to chill.

05:41.140 --> 05:43.940
And anyways, just really loving it and enjoying it a bunch.

05:43.940 --> 05:45.580
So I really appreciate you guys covering the show

05:45.580 --> 05:46.420
while I was gone.

05:46.420 --> 05:48.820
I think it made it just,

05:48.820 --> 05:50.580
gave me just enough time to pull it all off,

05:50.580 --> 05:52.020
especially since we were compressed

05:52.020 --> 05:54.740
with that one lost day due to mechanical issues.

05:54.740 --> 05:56.700
Well, congratulations and welcome back.

05:56.700 --> 05:57.540
Thank you, sir.

05:57.540 --> 05:58.540
But that's not what we're here to talk about today.

05:58.540 --> 06:00.100
Let's get into the community news,

06:00.100 --> 06:03.060
and we're gonna start off the news

06:03.060 --> 06:05.860
with a story about Apple,

06:05.860 --> 06:07.860
which might be the first time we've ever done that

06:07.860 --> 06:09.500
in the history of this show.

06:09.500 --> 06:12.140
But they're releasing a pretty significant

06:12.140 --> 06:14.020
open source project this week

06:14.020 --> 06:15.980
that's caught a lot of attention.

06:15.980 --> 06:18.220
Now, Apple originally acquired a project

06:18.220 --> 06:20.980
called FoundationDB in 2015.

06:20.980 --> 06:24.300
And last April, it announced that it was making

06:24.300 --> 06:26.020
the cloud database open source.

06:26.020 --> 06:27.140
But that's not what we're talking about today.

06:27.140 --> 06:29.100
That was sort of done and, you know,

06:29.100 --> 06:30.900
it's, everybody's moved on.

06:30.900 --> 06:35.380
But things are taking a big leap forward this week

06:35.380 --> 06:37.860
as FoundationDB has announced it's open sourcing

06:37.860 --> 06:40.740
the FoundationDB record layer.

06:40.740 --> 06:43.620
And along with this, Apple is outlining

06:43.620 --> 06:46.380
how they are using their backend services

06:46.380 --> 06:47.660
with this open source software,

06:47.660 --> 06:49.980
which is something they've never done before.

06:49.980 --> 06:52.060
It's the first public confirmation

06:52.060 --> 06:55.500
that Apple is using this open source database

06:55.500 --> 07:00.260
to power file storage on iCloud.

07:00.260 --> 07:02.100
So we're talking about an open source project here

07:02.100 --> 07:05.660
that's being battle tested by millions of iOS

07:05.660 --> 07:08.580
and Mac users that's, the core part of it

07:08.580 --> 07:11.100
was released for free originally.

07:11.100 --> 07:12.780
But now we have this record layer.

07:12.780 --> 07:15.740
And Wes, can you help explain what this record layer is

07:15.740 --> 07:17.820
and maybe even how Apple might be using it?

07:17.820 --> 07:19.420
Yeah, well, okay, so they call their whole,

07:19.420 --> 07:21.900
their backend here cloud kit because,

07:21.900 --> 07:23.700
well, of course they do.

07:23.700 --> 07:25.100
Everything's a kit, Wes.

07:25.100 --> 07:26.180
Everything is a kit.

07:26.180 --> 07:27.460
And well, I mean, you want one for the cloud.

07:27.460 --> 07:29.020
Sure, that makes sense.

07:29.020 --> 07:32.220
The record layer, it's basically their own version

07:32.220 --> 07:35.060
of a traditional record oriented database.

07:35.060 --> 07:37.620
Things like the standard relational SQL databases

07:37.620 --> 07:38.660
you're probably used to,

07:38.660 --> 07:41.820
but built on top of FoundationDB.

07:41.820 --> 07:44.460
And one of the things that's kind of unique to FoundationDB

07:44.460 --> 07:47.660
is it provides something of a low level key value store.

07:47.660 --> 07:49.540
And then they've made it easy to extend.

07:49.540 --> 07:51.900
So FoundationDB is totally separate.

07:51.900 --> 07:52.980
They've added this record layer,

07:52.980 --> 07:54.220
which is actually a Java program

07:54.220 --> 07:56.180
that interfaces with FoundationDB

07:56.180 --> 07:57.940
and adds all these extra features.

07:57.940 --> 08:00.860
So they only have to concentrate on running

08:00.860 --> 08:03.100
all the complicated distributed system part of that.

08:03.100 --> 08:04.780
That's the base FoundationDB.

08:04.780 --> 08:06.580
And now they can add stuff like,

08:06.580 --> 08:08.500
something like a MongoDB

08:08.500 --> 08:10.980
or adding in this case, something like SQL.

08:10.980 --> 08:14.420
Now, the other part of this that is

08:14.420 --> 08:18.900
sort of the elephant in the room is MongoDB and AWS

08:18.900 --> 08:23.900
are at odds right now as Amazon has announced AWS DocumentDB,

08:24.700 --> 08:27.220
which is their own proprietary software

08:27.220 --> 08:31.180
that implements a MongoDB compatible API.

08:31.180 --> 08:32.740
The reason why this matters

08:32.740 --> 08:35.140
is what Amazon can essentially now do

08:35.140 --> 08:37.220
is offer MongoDB as a service,

08:37.220 --> 08:39.380
but it's not MongoDB under the hood,

08:39.380 --> 08:41.380
but it can talk MongoDB,

08:41.380 --> 08:43.940
the version right before they relicensed.

08:43.940 --> 08:48.620
And this is a huge,

08:48.620 --> 08:51.580
huge blow to the MongoDB project

08:51.580 --> 08:54.780
because they sell their own hosted service

08:54.780 --> 08:58.220
with very few customers, unfortunately.

08:58.220 --> 09:00.940
And so then a few days later after that,

09:00.940 --> 09:02.180
Apple makes this announcement.

09:02.180 --> 09:06.420
The timing is pretty coincidental, I guess.

09:06.420 --> 09:07.260
It's interesting too.

09:07.260 --> 09:08.860
I think it kind of compares and contrasts

09:08.860 --> 09:11.580
the different types of open source out there, right?

09:11.580 --> 09:14.780
Mongo has a venture backed company behind it.

09:14.780 --> 09:16.100
They're trying to make open source software.

09:16.100 --> 09:17.260
Yes, which is great,

09:17.260 --> 09:19.420
but also running and making that software

09:19.420 --> 09:21.020
is the core of their business.

09:21.020 --> 09:22.140
Not so with FoundationDB.

09:22.140 --> 09:22.980
Sure, it started that way,

09:22.980 --> 09:25.980
but now it's just an open source thing Apple's using.

09:25.980 --> 09:27.620
Downsides is you don't know,

09:27.620 --> 09:30.140
maybe Apple could pivot databases at any time.

09:30.140 --> 09:32.260
The upside, they're not really relying on it.

09:32.260 --> 09:33.580
This is not how they're making money,

09:33.580 --> 09:35.460
except as an implementation detail.

09:35.460 --> 09:36.740
Really, so in summary, what we have here

09:36.740 --> 09:39.780
is Apple releasing two more open source projects in total.

09:39.780 --> 09:41.660
You have the original FoundationDB

09:41.660 --> 09:43.660
and now this layer on top of it,

09:43.660 --> 09:45.940
which makes it more like a relational database,

09:45.940 --> 09:47.660
which people are very familiar with,

09:47.660 --> 09:51.540
but has the file extensibility and the state support

09:51.540 --> 09:54.460
everything they need for remote mobile apps.

09:54.460 --> 09:56.860
And I wonder if this isn't gonna be pretty successful

09:56.860 --> 09:59.820
because A, it's being used by millions of users already.

09:59.820 --> 10:02.340
B, when you're trying to justify it to the CEO

10:02.340 --> 10:04.780
or whoever you can say, Apple uses it.

10:04.780 --> 10:07.460
And C, it's addressing a real need

10:07.460 --> 10:09.060
that application developers have.

10:09.060 --> 10:10.980
Yeah, I mean, it's got a nice license

10:10.980 --> 10:11.900
and they've clearly learned.

10:11.900 --> 10:13.780
It's a more modern database.

10:13.780 --> 10:15.860
If you go back and look at when it was first,

10:15.860 --> 10:18.380
after they acquired the company and open sourced it,

10:18.380 --> 10:21.140
people are raving about it being open source

10:21.140 --> 10:24.500
just because it has such a new, modern, sophisticated take

10:24.500 --> 10:26.260
on concurrency and transactions.

10:26.260 --> 10:28.100
So you get a lot of nice guarantees

10:28.100 --> 10:29.660
and it's easy to administer.

10:29.660 --> 10:30.740
Yeah, yeah.

10:32.500 --> 10:33.340
That's really all I have.

10:33.340 --> 10:34.660
I don't feel like I need to talk about Apple anymore

10:34.660 --> 10:36.180
in the show, I think that's probably good.

10:36.180 --> 10:37.740
Let's move on, what do you say?

10:37.740 --> 10:40.540
And let's talk about the future of GNOME MPV,

10:40.540 --> 10:44.020
which is my favorite, favorite,

10:44.020 --> 10:47.300
favorite by a mile video player for desktop Linux.

10:47.300 --> 10:50.500
I mean, LVLC, you're great, I love you,

10:50.500 --> 10:53.180
but nothing beats MPV and GNOME MPV was a way

10:53.180 --> 10:55.060
to wrap it up in a nice minimal GUI.

10:56.500 --> 10:58.460
But I'm not so sure about this new name.

10:58.460 --> 11:01.180
Yeah, well, okay, so do you agree with this?

11:01.180 --> 11:04.180
Good app names should really be a single noun

11:04.180 --> 11:05.740
that's related to the app's domain.

11:05.740 --> 11:08.260
Something like fragments for a torrent app

11:08.260 --> 11:10.460
or peak for a screen recorder.

11:10.460 --> 11:13.540
Cause if you do, you're gonna like this new name.

11:13.540 --> 11:15.300
No, I mean, I still agree with all that.

11:15.300 --> 11:16.540
Don't really like the name.

11:16.540 --> 11:20.780
Okay, I'm gonna try to pronounce it, you ready?

11:20.780 --> 11:22.580
What do you, do you think I should,

11:22.580 --> 11:23.540
let's see, we should all take bets.

11:23.540 --> 11:26.540
Everybody bet if I'm gonna get this right.

11:26.540 --> 11:27.700
Celluloid.

11:27.700 --> 11:28.740
Yeah.

11:28.740 --> 11:29.580
I got it?

11:29.580 --> 11:30.420
Yep, I think that's good enough.

11:30.420 --> 11:31.260
You're telling me I got it?

11:31.260 --> 11:32.100
Yeah, it's celluloid.

11:32.100 --> 11:34.500
Oh, I got it, I can't believe it, I can't believe it.

11:35.820 --> 11:37.100
I don't know, man, I guess for some reason

11:37.100 --> 11:38.860
it makes me think of cellulite,

11:38.860 --> 11:40.380
which is not what I wanna think of

11:40.380 --> 11:42.780
when I'm thinking of watching a video.

11:42.780 --> 11:47.420
But, NomeMPV is clunky AF.

11:47.420 --> 11:51.660
And I do like the one word thing.

11:51.660 --> 11:53.100
And at least I can pronounce it,

11:53.100 --> 11:54.220
so it's got that going for it.

11:54.220 --> 11:55.060
Yeah, right.

11:55.060 --> 11:58.060
And it's also the name of the transparent flammable

11:58.060 --> 12:00.980
plastic made in sheets from camera four

12:00.980 --> 12:05.980
and nitrocellulose and formerly used in filmmaking.

12:06.820 --> 12:07.900
Yeah, right, so if you were,

12:07.900 --> 12:11.340
if we were making a video podcast in the film era,

12:11.340 --> 12:13.820
we would know all about celluloid.

12:13.820 --> 12:16.220
Yeah, yeah, I've heard of like celluloid cylinders

12:16.220 --> 12:18.940
and I've heard the term used before.

12:18.940 --> 12:21.220
So this is gonna happen, it's like the switch-o,

12:21.220 --> 12:25.420
will happen around the time of Nome 3.32's release in March.

12:25.420 --> 12:28.100
So if you just got the most recent version,

12:28.100 --> 12:31.460
or I should say the latest version, which was 0.15,

12:31.460 --> 12:32.980
then it's still using NomeMPV,

12:32.980 --> 12:33.900
you're not gonna see this yet.

12:33.900 --> 12:34.740
What do you think?

12:34.740 --> 12:36.220
So they also, they've got a new icon too,

12:36.220 --> 12:37.980
and that does sort of fit with the name

12:37.980 --> 12:39.540
because it looks like a piece of film.

12:39.540 --> 12:41.340
I say we go to the mumble room.

12:41.340 --> 12:43.060
What do you guys think of this name, celluloid?

12:43.060 --> 12:44.820
Is it ditch it or keep it?

12:44.820 --> 12:46.140
It's a keep it for me.

12:46.140 --> 12:47.860
Yeah, how come?

12:47.860 --> 12:50.260
It's a somewhat memorable name

12:50.260 --> 12:53.060
and it's pretty easy to identify.

12:53.060 --> 12:56.060
And the new icon is pretty stand out

12:56.060 --> 12:57.460
from video player icons.

12:57.460 --> 12:59.700
Yes, the new icon is the bee's knees.

12:59.700 --> 13:01.980
That is really nice, you're right.

13:01.980 --> 13:04.380
They should get credit for a great icon.

13:04.380 --> 13:07.380
Okay, the mumble room in its entirety.

13:07.380 --> 13:08.780
No, I'm kidding, actually we've got a good show

13:08.780 --> 13:10.420
and we've got Conan in there,

13:10.420 --> 13:12.980
we've got MiniMech, Sean, TechMav, Tyler,

13:12.980 --> 13:15.260
Universal Super Box, AKA Dalton,

13:15.260 --> 13:17.260
all hanging out in there today.

13:17.260 --> 13:19.540
And I'm gonna roll with it.

13:19.540 --> 13:20.900
I bet you it'll grow on me.

13:20.900 --> 13:23.660
I thought iPad was the dumbest name I'd ever heard

13:23.660 --> 13:25.340
when they first, and now people drop out,

13:25.340 --> 13:26.180
it doesn't even affect me.

13:26.180 --> 13:27.020
It's funny how that, you know, it has to,

13:27.020 --> 13:28.740
it's kinda like music, once it sinks in,

13:28.740 --> 13:29.980
you have a different perspective on it.

13:29.980 --> 13:31.500
Yeah, yeah.

13:31.500 --> 13:34.180
So Joe and I have been grousing

13:34.180 --> 13:35.780
on Linux Action News recently

13:35.780 --> 13:40.180
that Chrome OS is going to become the de facto desktop Linux.

13:40.180 --> 13:43.180
Like the one that average consumers use,

13:43.180 --> 13:45.940
the one that's gonna be used by millions of users,

13:45.940 --> 13:48.460
the one that's sold in Best Buy and electronic stores,

13:48.460 --> 13:50.700
it's Chrome OS, right, it's Chrome OS.

13:50.700 --> 13:54.140
And we all probably should sit with that for a bit

13:54.140 --> 13:55.660
and come to our own conclusions.

13:55.660 --> 13:59.780
I waffle constantly if that's a good thing or a bad thing.

13:59.780 --> 14:04.780
But I am really happy to report on the steady progress

14:05.420 --> 14:09.340
of Linux application integration into Chrome OS.

14:09.340 --> 14:13.260
And this week, thanks to some sleuthing,

14:13.260 --> 14:16.260
based on a code commit uncovered by Chrome Story,

14:16.260 --> 14:19.260
users of the Linux beta for Chromebooks

14:19.260 --> 14:23.220
will soon be able to search and install Linux apps

14:24.220 --> 14:27.300
from the Chrome OS launcher itself.

14:27.300 --> 14:28.260
That's a big deal.

14:28.260 --> 14:30.740
Yeah, right, I mean, it reads, add app search

14:30.740 --> 14:32.300
into the Chrome OS app launcher

14:32.300 --> 14:35.220
so that uninstalled Linux packages and apps

14:35.220 --> 14:38.100
can be searched for and installed via the app launcher.

14:38.100 --> 14:40.740
I mean, that's a pretty plain purpose.

14:40.740 --> 14:42.460
And it's a nice workflow, too.

14:42.460 --> 14:44.820
Yeah, not only is it convenient,

14:44.820 --> 14:46.740
but it actually is going to put it in front of the face

14:46.740 --> 14:49.860
of actual real users.

14:49.860 --> 14:51.420
That's, to me, the biggest thing

14:51.420 --> 14:53.300
is because it's in the launcher,

14:53.300 --> 14:56.020
they don't have to go to a command prompt,

14:56.020 --> 14:58.300
they don't have to go through all these different

14:58.300 --> 14:59.700
less-treaded paths.

14:59.700 --> 15:03.540
They are just using something they use all the time.

15:03.540 --> 15:04.860
And we may even get to a point

15:04.860 --> 15:07.340
where on some Chromebooks down the road,

15:07.340 --> 15:09.220
Linux supports turn on by default,

15:09.220 --> 15:11.100
that basic stuff's already installed.

15:11.100 --> 15:14.780
I mean, this could legitimately one day

15:14.780 --> 15:18.500
lead to the adoption of more open source desktop applications

15:18.500 --> 15:21.780
which could, hopefully,

15:23.460 --> 15:24.740
mean an increase in bug reports,

15:24.740 --> 15:26.780
an increase in development time, an increase in funding,

15:26.780 --> 15:28.300
it could mean an increase in quality,

15:28.300 --> 15:29.300
but these are all maybes.

15:29.300 --> 15:30.860
But with a broader market share, right?

15:30.860 --> 15:33.420
Exposure in a way where you don't have to go

15:33.420 --> 15:34.980
install your own distribution of Linux

15:34.980 --> 15:37.500
or even know what that is, but you can still run GIMP.

15:37.500 --> 15:40.220
Yeah, and people have asked me, like, why do you care, Chris?

15:40.220 --> 15:44.180
Why do you care if Adobe Premier comes to Linux?

15:44.180 --> 15:46.420
And it's like this, it may not be something I would use,

15:46.420 --> 15:48.180
maybe it would be, I'd have to evaluate it.

15:48.180 --> 15:50.220
And it's not that I want all this commercial software

15:50.220 --> 15:52.020
coming to Linux, I think we need it all.

15:52.020 --> 15:53.340
And I think we need all of it here

15:53.340 --> 15:54.820
because we need more users.

15:54.820 --> 15:56.020
We simply need more users

15:56.020 --> 15:57.700
because we need more representation

15:57.700 --> 15:59.260
and we need better software.

15:59.260 --> 16:00.620
And the only way we're gonna get there

16:00.620 --> 16:03.180
is if there's software to consume by users

16:03.180 --> 16:05.620
and if there's not users to consume that software,

16:05.620 --> 16:06.460
we won't get there.

16:06.460 --> 16:09.500
So we've been stuck in this chicken or the egg situation

16:09.500 --> 16:12.660
now for years and years, it just hasn't gone anywhere.

16:12.660 --> 16:14.660
And now, maybe,

16:15.660 --> 16:18.900
maybe Google is shifting that a bit.

16:18.900 --> 16:21.180
And they're gonna take a platform

16:21.180 --> 16:24.420
that has a ton of users and they're gonna turn this on

16:24.420 --> 16:26.260
and now all of a sudden there'll be a whole new audience

16:26.260 --> 16:27.420
for these applications.

16:27.420 --> 16:29.500
So, Minimac, I wanna get your take on this.

16:29.500 --> 16:31.340
Good news, this Linux adoption,

16:31.340 --> 16:32.940
and now this continued integration

16:32.940 --> 16:34.860
further and further of Linux applications?

16:34.860 --> 16:36.540
Very good news, but the problem is

16:36.540 --> 16:39.340
they don't support older Chromebooks.

16:39.340 --> 16:41.060
That's the major problem.

16:41.060 --> 16:43.820
I have this Intel Acer C720,

16:43.820 --> 16:47.580
which is perfectly capable of running Linux and everything.

16:47.580 --> 16:51.780
But on Chromebook, they have not yet opened

16:51.780 --> 16:55.020
these new features like Android apps, Linux apps,

16:55.020 --> 16:57.860
and Chromebook, the hardware is perfectly capable

16:57.860 --> 17:00.420
of doing that, of handling that.

17:00.420 --> 17:01.500
Good point.

17:01.500 --> 17:03.020
Yeah, it's not like these applications,

17:03.020 --> 17:06.060
you know what, in probably almost all cases,

17:06.060 --> 17:08.460
most of these applications that users would be using

17:08.460 --> 17:10.780
are lighter weight than its equivalent web app

17:10.780 --> 17:12.900
running in a big old browser like Chrome.

17:12.900 --> 17:15.260
Probably, yeah, definitely.

17:15.260 --> 17:16.500
That's interesting.

17:16.500 --> 17:19.980
So Dalton, do you think we're seeing a beginning

17:19.980 --> 17:23.940
of a path here of Fuchsia for the mobile

17:23.940 --> 17:26.380
and Chrome OS for the desktop?

17:26.380 --> 17:29.620
So what I think back to here is Google's gVisor

17:29.620 --> 17:32.540
that we talked about, oh, that was a while ago,

17:32.540 --> 17:35.660
which is their container runtime

17:35.660 --> 17:39.580
that re-implements all of the Linux kernel's interfaces.

17:40.580 --> 17:42.580
If they had that running on top of Fuchsia,

17:42.580 --> 17:45.380
then they could use their Apache-licensed kernel

17:45.380 --> 17:47.740
and they wouldn't even need Linux at that point.

17:49.300 --> 17:52.580
Jeez, Dalton, way to bring it down, man.

17:52.580 --> 17:53.820
Good point, though.

17:55.220 --> 17:58.100
You would end up with the core that they can have

17:58.100 --> 18:00.740
and with gVisor too, right, they only will implement

18:00.740 --> 18:02.340
the stuff that they know they can contain

18:02.340 --> 18:04.380
and actually run so they don't have to be exposed

18:04.380 --> 18:05.700
to that whole API surface.

18:05.700 --> 18:08.780
Right, it's a safe user experience, they'll say.

18:08.780 --> 18:10.820
And kind of just really quickly,

18:10.820 --> 18:12.500
just to tangentially mention this,

18:12.500 --> 18:15.300
we did cover this in more detail on Linux Action News.

18:15.300 --> 18:16.780
I think 88.

18:16.780 --> 18:20.060
But Chrome OS is also going to start letting

18:20.060 --> 18:23.220
managed company Chromebooks choose their own Linux distro

18:23.220 --> 18:25.060
for this layer.

18:25.060 --> 18:26.660
Right now, I think we've talked about it before,

18:26.660 --> 18:29.700
it's like a Debian derivative, essentially it's Debian.

18:29.700 --> 18:32.660
But now, you get to specify a URL

18:33.660 --> 18:35.740
of where your ISO image is at.

18:35.740 --> 18:39.380
And when the user chooses the option to enable Linux support,

18:39.380 --> 18:42.580
it'll pull it down from that customly specified URL

18:42.580 --> 18:44.540
and install the version or the image of Linux

18:44.540 --> 18:45.380
that you've set up.

18:45.380 --> 18:46.860
Well, that's the rub, right Chris?

18:46.860 --> 18:48.740
Because maybe it's you, but really,

18:48.740 --> 18:52.020
it's the device administrators, whoever they might be.

18:52.020 --> 18:53.860
Yeah, the IT department.

18:53.860 --> 18:55.500
Because I don't even, I think people are digging around

18:55.500 --> 18:57.180
in the source code and they didn't see a way

18:57.180 --> 18:58.700
for individuals to turn this on yet.

18:58.700 --> 19:01.940
Yeah, it really seems targeted at the enterprise use case,

19:01.940 --> 19:03.700
which does make sense, Chrome OS has made

19:03.700 --> 19:05.100
huge inroads there.

19:05.100 --> 19:07.020
Yeah, and I could definitely see certain enterprises

19:07.020 --> 19:08.820
that would want their own customer environment

19:08.820 --> 19:11.020
so that way, maybe their own internal development team

19:11.020 --> 19:12.900
could be developing on that environment,

19:12.900 --> 19:15.700
which then gets uploaded to their production servers.

19:15.700 --> 19:17.940
So, I think it could be a hit.

19:17.940 --> 19:19.100
I don't know if I buy the premise,

19:19.100 --> 19:21.620
but if the premise is true, I think it could be a hit.

19:21.620 --> 19:23.780
And you've got to assume that once the underlying tech

19:23.780 --> 19:26.860
is there, someone somewhere is gonna release a tool

19:26.860 --> 19:27.940
so you can do it yourself.

19:27.940 --> 19:30.620
That's what I'm counting on.

19:30.620 --> 19:32.780
When that tool comes out, I'll probably grab a Chromebook.

19:32.780 --> 19:34.580
I think I'm gonna do it, I think I'm gonna do it.

19:34.580 --> 19:37.940
Unless, unless those chaps over at UbiPorts

19:37.940 --> 19:41.140
can get me a tablet run in Ubuntu Touch that just sings

19:41.140 --> 19:43.020
and they're getting closer and closer

19:43.020 --> 19:44.500
with every dang release.

19:44.500 --> 19:46.220
And Dalton's there in the Mumble Room

19:46.220 --> 19:50.540
to talk about OTA 6, which is now shipping.

19:50.540 --> 19:51.460
Oh, wait, I'm sorry.

19:51.460 --> 19:52.580
No, I'm sorry, OTA 7.

19:52.580 --> 19:53.940
OTA 6 was the one that came out last month.

19:53.940 --> 19:55.500
Holy smokes, Dalton.

19:55.500 --> 19:58.140
You guys are really hitting that monthly stride now.

19:58.140 --> 19:59.100
We did.

19:59.100 --> 20:01.540
That's one of the big stories for this release

20:01.540 --> 20:04.260
where we finally got our release cadence down.

20:04.260 --> 20:08.500
So, we've got proper testing and a lot of work done

20:08.500 --> 20:09.660
in between the two releases,

20:09.660 --> 20:12.740
but we're still hitting that one month cycle.

20:12.740 --> 20:13.860
Congratulations.

20:13.860 --> 20:15.540
That probably took a lot of work as a project

20:15.540 --> 20:18.860
to get your heads around that and get that actually working.

20:18.860 --> 20:21.100
So, that's a big accomplishment in itself.

20:21.100 --> 20:23.820
But what are some of the new goodies in OTA 7

20:23.820 --> 20:26.020
that you're the most excited about?

20:26.020 --> 20:30.260
OTA 7's big headline feature for the users

20:30.260 --> 20:32.460
is keyboard theming.

20:32.460 --> 20:34.300
So, that might sound like a small deal,

20:34.300 --> 20:38.580
but someone in our community contributed the support.

20:38.580 --> 20:41.620
So, now you can change the colors of your keyboard.

20:41.620 --> 20:43.300
So, instead of being blinded

20:43.300 --> 20:45.700
by this really bright white keyboard,

20:45.700 --> 20:48.140
you can have a darker experience.

20:48.140 --> 20:51.860
And there are screenshots of this in our blog post,

20:51.860 --> 20:54.700
which you can find at u reports.com slash blog.

20:54.700 --> 20:55.540
Excellent, yeah, nice.

20:55.540 --> 20:57.580
So, when you're using the phone late at night,

20:57.580 --> 21:00.460
you don't get that blast of light in the face.

21:00.460 --> 21:02.380
It looks like Morph has gotten some nice improvements too.

21:02.380 --> 21:04.460
It's a steady improvement from now that Morph is in.

21:04.460 --> 21:05.820
It is.

21:05.820 --> 21:09.820
The Morph browser is our cute web engine based browser,

21:09.820 --> 21:13.380
which is based on Chromium Blink.

21:13.380 --> 21:16.140
And it's been getting more stable with every release.

21:16.140 --> 21:17.380
So, in this release,

21:17.380 --> 21:20.940
we've got fixes for multiple browser windows,

21:20.940 --> 21:22.940
which is always an interesting experience

21:22.940 --> 21:25.060
when you have a five inch screen,

21:26.380 --> 21:28.500
as well as fixes to tab switching

21:28.500 --> 21:31.980
and a bunch of other things that everyone will find nice.

21:31.980 --> 21:33.980
And we've heard some really great feedback on.

21:33.980 --> 21:36.380
Good, that's really nice.

21:36.380 --> 21:37.220
The other thing I learned

21:37.220 --> 21:39.100
when I was reading through your release notes,

21:39.100 --> 21:40.900
and I hadn't thought about it.

21:40.900 --> 21:41.740
And then when I saw this,

21:41.740 --> 21:43.540
I was surprised that the project is still active.

21:43.540 --> 21:45.860
I thought maybe it was a canonical project.

21:45.860 --> 21:49.540
But Libhybris, which is that magic translation layer

21:49.540 --> 21:51.580
that lives between the Android drivers

21:51.580 --> 21:53.860
and the libc based user space, right?

21:53.860 --> 21:57.580
So, Libhybris does this really, really important translation

21:57.580 --> 21:59.660
that lets you use all kinds of different hardware.

21:59.660 --> 22:02.100
And that's still an active project getting updated, yeah?

22:02.100 --> 22:07.100
Yes, Libhybris was originally maintained by the Mamo team

22:07.580 --> 22:11.100
when Nokia originally brought out their Linux.

22:11.100 --> 22:13.620
And that has moved into the Mer project,

22:13.620 --> 22:17.460
which is the base of Sailfish OS,

22:17.460 --> 22:19.860
which is supported by Sailfish.

22:19.860 --> 22:21.860
It's turtles all the way down,

22:21.860 --> 22:25.220
but it means that there's a great well supported project

22:25.220 --> 22:27.020
that other mobile platforms are also using.

22:27.020 --> 22:29.460
So, it kind of works out perfect, doesn't it?

22:29.460 --> 22:30.300
It is perfect.

22:30.300 --> 22:31.940
And it's nice to have that upstream there.

22:31.940 --> 22:34.260
Yeah, well, seriously congratulations

22:34.260 --> 22:35.380
on another great release.

22:35.380 --> 22:37.020
Good to see that new cadence,

22:37.020 --> 22:38.300
that new keyboard does look sharp.

22:38.300 --> 22:40.740
I'm looking at the screenshots in your blog post right now.

22:40.740 --> 22:43.820
And for the new Nexus 4 and Nexus 7 users

22:43.820 --> 22:45.540
with the Wi-Fi only version,

22:45.540 --> 22:48.100
also a release that I think you're gonna be

22:48.100 --> 22:49.540
particularly excited about.

22:49.540 --> 22:50.380
So, go check it out.

22:50.380 --> 22:51.380
We will have a link in the show notes

22:51.380 --> 22:55.580
to linuxunplug.com slash 284, yes.

22:55.580 --> 22:57.980
Dalton, thanks for stopping by to tell us

22:57.980 --> 22:59.420
anything else you wanna mention about this release

22:59.420 --> 23:00.820
or maybe the next release?

23:00.820 --> 23:03.660
People to keep a lookout for?

23:03.660 --> 23:04.740
Well, with this release,

23:04.740 --> 23:07.820
we brought in a bunch of changes to help with porting.

23:07.820 --> 23:09.180
So, I think people are going to be seeing

23:09.180 --> 23:11.060
some new devices pretty soon.

23:11.060 --> 23:12.900
In fact, I think that there might be

23:12.900 --> 23:15.020
one of those devices from that company

23:15.020 --> 23:18.500
that starts with X that Americans can't seem to pronounce,

23:18.500 --> 23:23.420
about to hit our devices page at devices.ubuntu-touch.io.

23:23.420 --> 23:24.940
It's in testing right now.

23:24.940 --> 23:27.980
Very cool, that is awesome to hear.

23:27.980 --> 23:29.940
Well, good work to you and the whole team.

23:29.940 --> 23:33.380
Tell everybody to keep it up and we'll keep watching.

23:33.380 --> 23:34.220
Keep watching.

23:34.220 --> 23:35.580
Dalton, I don't suppose there's any chance

23:35.580 --> 23:37.380
you're gonna make it out to Linux Fest this year?

23:37.380 --> 23:38.220
I'm not sure.

23:38.220 --> 23:40.260
I just booked all my tickets for FOSDEM,

23:40.260 --> 23:42.980
so I might need to be recovering at that point yet.

23:42.980 --> 23:44.700
Yeah, yeah, yeah.

23:44.700 --> 23:46.580
Well, good, I'm glad you're going to FOSDEM.

23:46.580 --> 23:48.500
So, let's just do a bit of housekeeping here for a moment.

23:48.500 --> 23:50.700
I don't really have a lot to cover,

23:50.700 --> 23:54.540
but Linux Fest Northwest is our next big public event.

23:54.540 --> 23:56.580
We're also gonna be at scale.

23:56.580 --> 23:59.140
So, that's now, we're locking that in.

23:59.140 --> 24:01.780
I think I'll be there, Wes is gonna be there,

24:01.780 --> 24:03.100
and a new member of our team,

24:03.100 --> 24:05.860
which we haven't had a chance yet to introduce y'all to,

24:05.860 --> 24:07.460
is gonna be there as well.

24:07.460 --> 24:09.500
Ooh, I'm so excited already.

24:09.500 --> 24:10.940
Just all the good ways to hang out

24:10.940 --> 24:12.740
with our wonderful audience.

24:12.740 --> 24:17.220
Yeah, but Linux Fest is gonna be the party.

24:17.220 --> 24:20.620
I have a list of people showing up I'm so thrilled about.

24:20.620 --> 24:22.220
I'm looking forward to hanging out with everybody.

24:22.220 --> 24:23.580
Linux Fest Northwest, if you can make it,

24:23.580 --> 24:26.980
please go April 26th through the 28th, 2019.

24:26.980 --> 24:28.620
That's all I really had for the housekeeping section though,

24:28.620 --> 24:31.940
because there is some stuff,

24:31.940 --> 24:34.860
there is some stuff that we have to talk about.

24:34.860 --> 24:37.420
You heard me mention it during the intro segment,

24:37.420 --> 24:42.420
ZFS on Linux is going to be the new upstream project

24:42.580 --> 24:47.580
that FreeBSD and Lumos and other operating systems

24:47.940 --> 24:51.580
that ship ZFS will base their implementation on.

24:51.580 --> 24:53.940
So, the FreeBSD project will likely still have

24:53.940 --> 24:56.260
their own project repository

24:56.260 --> 24:58.540
for their implementation of ZFS,

24:58.540 --> 25:03.180
but it will be downstream of the ZFS on Linux project now.

25:04.300 --> 25:06.300
This is a huge shift.

25:06.300 --> 25:08.180
This is a massive shift.

25:08.180 --> 25:10.020
And this was announced a few weeks ago,

25:10.020 --> 25:11.940
we covered it when it happened.

25:11.940 --> 25:16.300
Today, I came across what I thought

25:16.300 --> 25:18.220
was the end of days at first.

25:18.220 --> 25:22.100
Like, at first, my first pass of this story,

25:22.100 --> 25:24.140
I was really kind of in panic mode.

25:24.140 --> 25:27.660
And I PMed Wes, I'm like, Wes, talk me down.

25:27.660 --> 25:29.900
Tell me what this is about, because the headline

25:29.900 --> 25:32.460
and the ramifications are pretty big.

25:32.460 --> 25:36.340
ZFS on Linux has run into a snag with version 5.0.

25:36.340 --> 25:38.980
ZFS on Linux currently fails to build

25:38.980 --> 25:41.380
against Linux 5.0 kernel sources.

25:41.380 --> 25:44.500
This isn't due to just some trivial API change.

25:44.500 --> 25:46.300
In fact, actually, it's just because

25:46.300 --> 25:47.740
there are some kernel symbols,

25:47.740 --> 25:50.500
kernel FPU begin and end respectively.

25:51.420 --> 25:54.380
The kernel module for ZFS on Linux relied on those

25:54.380 --> 25:57.380
in part to basically have faster performance

25:57.380 --> 25:59.380
while doing some file system checksums.

25:59.380 --> 26:02.540
Those are no longer exported and the module can't build.

26:02.540 --> 26:07.300
Right, so these FPU symbols that allowed ZFS on Linux

26:07.300 --> 26:10.660
to do fancy fast checksums just disappeared in 5.0.

26:10.660 --> 26:13.740
And there doesn't seem to be a simple solution

26:13.740 --> 26:16.740
for this immediately, especially one that doesn't involve

26:16.740 --> 26:20.340
using GPL symbols due to license compatibility issues

26:20.340 --> 26:22.380
that, I mean, we talk about this with ZFS

26:22.380 --> 26:23.860
all the time with Linux.

26:23.860 --> 26:27.060
And Greg KH chimed in on the mailing list

26:27.060 --> 26:29.300
that's read about this on the kernel mailing list.

26:29.300 --> 26:33.140
He doesn't seem to be too inspired to make any concessions.

26:33.140 --> 26:36.220
Quote, Greg writes, my tolerance for ZFS

26:36.220 --> 26:37.780
is pretty non-existent.

26:37.780 --> 26:41.460
Sun explicitly did not want their code to work on Linux.

26:41.460 --> 26:43.140
So why would we do extra work

26:43.140 --> 26:45.300
to get their code to work properly?

26:45.300 --> 26:47.380
It's unfortunate, this one might not be the biggest.

26:47.380 --> 26:49.380
It looks like they'll probably just not have

26:49.380 --> 26:52.500
vectorized floating point implementations

26:52.500 --> 26:53.780
for these checksums in the future,

26:53.780 --> 26:55.580
at least for the short term.

26:55.580 --> 26:59.180
But at a time when suddenly the ZOL tree

26:59.180 --> 27:01.940
is the place where new development is happening,

27:01.940 --> 27:03.700
it just kind of seems like a downturn

27:03.700 --> 27:06.860
or not a great relationship between the Linux community

27:06.860 --> 27:09.820
and the large and the ZOL project in particular.

27:09.820 --> 27:11.660
And it wasn't, I mean, obviously those weren't great, right?

27:11.660 --> 27:13.620
I mean, it's an out of tree driver.

27:13.620 --> 27:16.500
And we should also note that those symbols begin

27:16.500 --> 27:17.860
with a double underscore.

27:17.860 --> 27:20.620
And so really they weren't super officially supported.

27:20.620 --> 27:22.260
They could have been removed really at any time.

27:22.260 --> 27:24.220
So here they are, they're gone.

27:24.220 --> 27:27.740
But just knowing that people as high up as great gay age

27:27.740 --> 27:30.380
have no interest in bending even a little bit to help

27:30.380 --> 27:33.300
our favorite little file system is pretty disappointing.

27:33.300 --> 27:36.980
Yeah, do you think Wes, it's a power play a little bit?

27:36.980 --> 27:39.420
Like they're looking at the situation, they're going,

27:40.300 --> 27:45.300
ZFS needs Linux more than Linux needs ZFS.

27:46.100 --> 27:48.900
And now you all just admitted that the ZFS on Linux

27:48.900 --> 27:50.100
is the best implementation,

27:50.100 --> 27:51.820
the one with the encryption you want.

27:51.820 --> 27:54.580
So why don't you just come play ball?

27:54.580 --> 27:55.980
Why don't you just come play ball?

27:55.980 --> 27:57.700
Is that the message they're trying to send here?

27:57.700 --> 28:01.460
That's one reading, I would assume that Greg in particular

28:01.460 --> 28:03.460
is probably a little more pragmatic than that

28:03.460 --> 28:07.180
and just can't be bothered to impose future support burdens,

28:07.180 --> 28:09.900
even if they might be minimal or seem to be minimal now

28:09.900 --> 28:13.540
on an out of tree incompatibly licensed module.

28:13.540 --> 28:15.420
Yeah, in fact, I think I agree with you

28:15.420 --> 28:19.340
because reading into it didn't look like there was

28:19.340 --> 28:22.460
sort of iffy support for these symbols for quite a while now

28:22.460 --> 28:23.780
and they've kind of been on the chopping block.

28:23.780 --> 28:25.540
Yeah, I think what we're really gonna have to try

28:25.540 --> 28:27.460
to pay attention to is the longer term story.

28:27.460 --> 28:28.860
How many more symbols disappear?

28:28.860 --> 28:32.060
How many symbols that we just can't rely on

28:32.060 --> 28:35.220
are hard coded into the currency well implementation

28:35.220 --> 28:36.620
and how big of a deal will these be?

28:36.620 --> 28:37.860
Because if it's just sort of like,

28:37.860 --> 28:39.460
this was gonna be deprecated anyway,

28:39.460 --> 28:41.540
now's the time where we have to go do the back porting

28:41.540 --> 28:43.180
and the updates, so be it.

28:43.180 --> 28:46.220
If it signals a real degradation in the relationship,

28:46.220 --> 28:47.220
that'll be disappointing.

28:47.220 --> 28:50.020
Well, and it also seems like 5.0

28:50.020 --> 28:51.660
is where you make some breaking changes.

28:51.660 --> 28:53.580
Like if this is something you've been thinking about

28:53.580 --> 28:54.980
and it's been on the chopping block

28:54.980 --> 28:56.380
and you know it's gonna break a couple of things

28:56.380 --> 28:59.660
because ZFS on Linux probably isn't the only

28:59.660 --> 29:02.580
software project to use this vectorized checksum support.

29:02.580 --> 29:04.980
It's probably other ones out there.

29:04.980 --> 29:07.540
But at the same time, like if you decided as a team,

29:07.540 --> 29:10.140
we're kind of done with this and it doesn't really fit

29:10.140 --> 29:11.820
with our overall licensing scheme anyways

29:11.820 --> 29:14.300
and what our intentions are and what the spirit of it all is.

29:14.300 --> 29:16.700
5.0 would be the time to make that change,

29:16.700 --> 29:19.060
it would be time to just rip that bandaid off, I would think.

29:19.060 --> 29:20.780
We've got some good questions too in the IRC

29:20.780 --> 29:23.100
just asking about, what about NVIDIA, right?

29:23.100 --> 29:24.460
Because that's the elephant in the room,

29:24.460 --> 29:26.660
it's the other really popular driver.

29:26.660 --> 29:27.900
That's why I was freaking out earlier.

29:27.900 --> 29:29.020
Now, it doesn't seem like this,

29:29.020 --> 29:30.580
obviously when you have a GPU,

29:30.580 --> 29:32.780
you probably don't need these particular symbols,

29:32.780 --> 29:35.180
but the same practices could be applied

29:35.180 --> 29:36.740
and does it mean there's a different relationship?

29:36.740 --> 29:39.180
Does the kernel value the NVIDIA driver

29:39.180 --> 29:41.540
more than say the relationship to the ZFS project?

29:41.540 --> 29:42.380
Yeah, yeah. I don't know,

29:42.380 --> 29:43.740
but it doesn't seem fair.

29:43.740 --> 29:44.900
I'm glad that question came up

29:44.900 --> 29:46.660
because depending on where you read this story,

29:46.660 --> 29:48.580
particularly on Reddit, if you read the comments,

29:48.580 --> 29:50.300
people are equating this to mean

29:50.300 --> 29:51.860
that the NVIDIA driver won't work anymore

29:51.860 --> 29:53.660
and that's not the case.

29:53.660 --> 29:55.540
That's not what's happening here.

29:55.540 --> 29:59.900
It's really just this one vectorized GP,

29:59.900 --> 30:00.740
I can't remember what it's called.

30:00.740 --> 30:03.620
Yeah, the vectorized floating point operation.

30:03.620 --> 30:06.620
And Conan Kudo in the IRC has a great point.

30:06.620 --> 30:07.780
It was removed basically

30:07.780 --> 30:09.940
because they did a bunch of changes in the kernel

30:09.940 --> 30:12.780
and entry modules no longer needed these symbols.

30:12.780 --> 30:14.620
So they were unwilling to support stuff

30:14.620 --> 30:16.380
that their code base wasn't using.

30:16.380 --> 30:17.620
I mean, there you go, there you go.

30:17.620 --> 30:19.660
So I thought what we would do here

30:19.660 --> 30:21.660
is we had an opportunity to sit down

30:21.660 --> 30:24.340
with an individual who contributes

30:24.340 --> 30:28.260
to the Fedora project, Mangia, OpenSUSE,

30:28.260 --> 30:31.540
and he's on the ZFS leadership council

30:31.540 --> 30:33.740
as part of his day job at Datto.

30:33.740 --> 30:36.700
And I've known Neil for a long time.

30:36.700 --> 30:39.180
And so when this story came up a couple of weeks ago,

30:39.180 --> 30:41.300
he was the first guy I thought about calling up

30:41.300 --> 30:44.020
and chatting and he gives us some great context

30:44.020 --> 30:45.260
about the situation.

30:45.260 --> 30:46.860
Well, with all this news recently

30:46.860 --> 30:49.820
about all the major projects that use ZFS,

30:49.820 --> 30:53.420
rebasing upstream on ZFS for Linux,

30:53.420 --> 30:55.780
I had to bring somebody on to process this.

30:55.780 --> 30:57.740
So Neil's joining us and Neil,

30:57.740 --> 30:59.140
you and I have chatted in the past

30:59.140 --> 31:01.020
and I always manage to mess up the last name.

31:01.020 --> 31:02.380
So help me with the pronunciation

31:02.380 --> 31:03.940
so that way on the record, I don't get it wrong.

31:03.940 --> 31:04.860
Neil Gompa.

31:04.860 --> 31:05.940
All right, so there you go.

31:05.940 --> 31:09.140
Hey Neil, thanks for joining us on Linux Unplugged.

31:09.140 --> 31:12.620
And why don't we start a little bit with your background

31:12.620 --> 31:15.740
because I know you're involved with the Fedora project,

31:15.740 --> 31:18.980
OpenSUSE, you have a day job at Datto

31:18.980 --> 31:21.220
and obviously work there with storage.

31:21.220 --> 31:22.660
Tell me a little bit about your background.

31:22.660 --> 31:26.740
Sure, currently I am a DevOps engineer at Datto,

31:26.740 --> 31:29.060
which is a disaster recovery,

31:29.060 --> 31:31.220
business continuity services company

31:31.220 --> 31:33.540
that's focused on managed service providers

31:33.540 --> 31:37.340
and people in that and all that kind of space.

31:38.460 --> 31:41.940
And we use ZFS or ZFS, however you'd like to pronounce it

31:41.940 --> 31:44.060
for a lot of our infrastructure

31:44.060 --> 31:45.780
and of course our backup appliances

31:45.780 --> 31:48.260
and stuff like that on Linux.

31:48.260 --> 31:53.180
And part of that has also made it so that I'm involved

31:53.180 --> 31:55.380
with the ZFS on Linux project upstream.

31:55.380 --> 31:57.300
What kind of amounts of storage roughly,

31:57.300 --> 31:58.220
you don't have to give me specifics,

31:58.220 --> 31:59.620
but just kind of roughly are you working with?

31:59.620 --> 32:02.380
I think the last time we talked about this publicly

32:02.380 --> 32:07.380
as a company, I think we were at almost 200 or so petabytes

32:08.060 --> 32:09.220
of data.

32:09.220 --> 32:14.220
Now, it's not like it's a enormous cluster of ZFS

32:14.580 --> 32:17.820
because for one, that's not a good idea,

32:17.820 --> 32:22.580
but it is 200 petabytes of computers that run ZFS

32:22.580 --> 32:24.780
as the data backing file system.

32:24.780 --> 32:28.420
And the model that our company uses is that basically

32:28.420 --> 32:32.060
we map a person, a customer's equipment

32:32.060 --> 32:36.860
to what we call a cloud storage node.

32:36.860 --> 32:39.980
And that node receives all of that customer's data.

32:39.980 --> 32:44.020
So it's not like you have this massive fabric or something

32:44.020 --> 32:47.660
that like along the lines of say like Ceph or Gluster,

32:47.660 --> 32:49.020
it doesn't work that way.

32:49.020 --> 32:54.020
It's more like we have a large set of computers

32:55.820 --> 32:58.100
that runs ZFS to store data.

32:58.100 --> 33:00.740
And so like the servers may have,

33:02.620 --> 33:05.340
they'll have, I think on average somewhere

33:05.340 --> 33:09.380
like 200 terabytes or so, maybe more per server.

33:09.380 --> 33:13.220
So it pushes the limits of a lot of things.

33:13.220 --> 33:15.900
And the workloads that we're doing on it are quite varied.

33:15.900 --> 33:20.820
So this Datto's use of ZFS so extensively,

33:20.820 --> 33:21.660
how does this work?

33:21.660 --> 33:23.940
So I know you were involved in the ZFS leadership

33:23.940 --> 33:25.220
and you were in the leadership meeting

33:25.220 --> 33:26.580
when they were discussing rebasing,

33:26.580 --> 33:29.700
like free BSDs implementation on ZFS for Linux

33:29.700 --> 33:31.380
instead of the Lumos version.

33:31.380 --> 33:32.900
How does that part of it work?

33:32.900 --> 33:36.660
So is it a lot of companies that have some sort

33:36.660 --> 33:38.900
of financial interest in the future of ZFS?

33:38.900 --> 33:41.260
Is it based on their contributions?

33:41.260 --> 33:43.980
How does the leadership team aspect of all of this work?

33:43.980 --> 33:46.420
Cause I think that's an interesting element

33:46.420 --> 33:48.740
to the ZFS project that, I mean,

33:48.740 --> 33:50.540
I don't think ButterFS has anything like that.

33:50.540 --> 33:53.580
So historically the leadership is more or less

33:54.780 --> 33:57.260
the companies that worked on the Lumos tree.

33:58.260 --> 34:00.420
And those were considered the people

34:00.420 --> 34:03.980
that kind of led the open ZFS umbrella.

34:03.980 --> 34:07.620
And would it be fair to say that a common conception

34:07.620 --> 34:10.060
was that the Lumos version was the...

34:10.060 --> 34:10.900
Mainline?

34:10.900 --> 34:15.900
Yeah, that was pretty much the historical basis.

34:16.220 --> 34:18.500
But a number of things have changed

34:18.500 --> 34:20.780
over the past three, four years.

34:20.780 --> 34:23.900
Like Datto as a company has contributed

34:23.900 --> 34:26.300
the ZFS native encryption to ZOL.

34:26.300 --> 34:27.660
And that has not been fully ported

34:27.660 --> 34:29.140
to other operating systems.

34:29.140 --> 34:30.420
Oh, I see.

34:30.420 --> 34:31.700
So that's sort of a big differentiator

34:31.700 --> 34:33.380
that the Linux version has

34:33.380 --> 34:35.380
that the other projects probably want.

34:35.380 --> 34:38.060
The library interfaces for ZFS are different

34:38.060 --> 34:40.220
across all three operating systems.

34:40.220 --> 34:43.220
Even the ZFS command works differently

34:43.220 --> 34:45.540
between the different operating systems,

34:45.540 --> 34:47.300
excluding the fact that native encryption

34:47.300 --> 34:50.100
only exists on ZOL right now.

34:50.100 --> 34:52.980
It's just the implementations are not the same.

34:52.980 --> 34:54.140
They are not at the same level.

34:54.140 --> 34:56.180
They don't exactly have the same feature sets.

34:56.180 --> 34:58.060
And in some cases their compatibility

34:58.060 --> 34:59.380
is a little bit wonky.

34:59.380 --> 35:02.180
So there has been this open question for a while

35:02.180 --> 35:03.900
of what we would consider the mainline.

35:03.900 --> 35:06.220
And historically it has been the Lumos tree.

35:06.220 --> 35:07.820
But with the changes that have happened

35:07.820 --> 35:08.940
over the last couple of years,

35:08.940 --> 35:11.420
that came into question again.

35:11.420 --> 35:13.980
And now it's the Linux tree is the one

35:13.980 --> 35:16.820
that's actually moving ahead and doing more.

35:16.820 --> 35:20.780
And the other trees are not doing as much.

35:20.780 --> 35:23.820
Like I think the most notable exception I am aware of

35:23.820 --> 35:26.340
is the Zstandard support that came to FreeBSD first

35:26.340 --> 35:28.860
because Alan Jude wrote it.

35:28.860 --> 35:31.660
It's not because it was,

35:31.660 --> 35:36.460
it didn't go to Lumos first and then go to FreeBSD.

35:36.460 --> 35:38.180
There wasn't already a single mainline.

35:38.180 --> 35:40.100
It was sort of just following where development

35:40.100 --> 35:41.020
is naturally taking place.

35:41.020 --> 35:42.580
It sounds like it was starting to get worse too,

35:42.580 --> 35:43.420
potentially.

35:43.420 --> 35:45.740
Yeah, and so nowadays,

35:45.740 --> 35:47.540
if we wanted to follow in terms of like,

35:47.540 --> 35:49.300
okay, where's the features going,

35:49.300 --> 35:51.420
then we have to consider ZOL as the mainline

35:51.420 --> 35:52.980
because that's where a lot of the feature development

35:52.980 --> 35:53.820
is happening.

35:53.820 --> 35:55.300
That's where the bulk of the usage

35:55.300 --> 35:57.460
of the ZFS file system is now happening,

35:57.460 --> 35:59.740
even though it is the redheaded ugly stepchild

35:59.740 --> 36:01.300
of the open ZFS family.

36:01.300 --> 36:02.380
Well, that's what I was gonna ask you.

36:02.380 --> 36:05.300
That seems like a really awkward contentious position.

36:05.300 --> 36:08.900
If the version of ZFS that perhaps has the largest

36:08.900 --> 36:11.140
user deployment is the Linux version,

36:11.140 --> 36:14.260
but a large portion of the ZFS community themselves

36:14.260 --> 36:18.620
considers the Linux version to be sort of second class,

36:18.620 --> 36:20.900
that's a bad position to be in because then in theory,

36:20.900 --> 36:24.900
the projects most passionate members

36:24.900 --> 36:27.540
aren't putting their best foot forward to the marketplace.

36:27.540 --> 36:29.340
And that is definitely,

36:29.340 --> 36:31.820
that has definitely been the case until very recently.

36:31.820 --> 36:36.820
What changed is that Delphix is moving from Illumos

36:37.740 --> 36:41.500
to Linux for their platform.

36:41.500 --> 36:45.180
And so that means that all the members of the,

36:45.180 --> 36:46.580
the main members of the leadership,

36:46.580 --> 36:50.700
like Matt Aarons and company are moving

36:50.700 --> 36:54.580
from the Solaris tree to the Linux tree.

36:54.580 --> 36:59.020
And so that means that for all intents and purposes,

36:59.860 --> 37:02.380
the majority is now Linux developers.

37:02.380 --> 37:04.300
What distributions are they using?

37:05.300 --> 37:06.820
Is it all Ubuntu?

37:06.820 --> 37:07.660
No.

37:07.660 --> 37:10.660
So, well, Delphix, I think will be using Ubuntu,

37:10.660 --> 37:13.020
which, eh, sure.

37:13.020 --> 37:14.620
Oh, wow.

37:14.620 --> 37:15.900
I thought, you know, I mean,

37:15.900 --> 37:17.380
at least they're shipping it, man.

37:17.380 --> 37:18.220
That's true.

37:18.220 --> 37:20.140
And Datto does as well,

37:20.140 --> 37:24.380
but the ZOL primary developers,

37:24.380 --> 37:27.180
which are the Lawrence Livermore National Institute,

37:27.180 --> 37:29.860
use, they use RHEL.

37:29.860 --> 37:31.860
And actually Red Hat Enterprise Linux

37:31.860 --> 37:35.780
and CentOS and Fedora are the primary test engines

37:35.780 --> 37:38.820
and the things that we test against

37:38.820 --> 37:41.700
because Fedora gives us the latest kernels

37:41.700 --> 37:45.060
and easy to test against along with the newer ABIs

37:45.060 --> 37:46.620
and stuff like that to make sure

37:46.620 --> 37:48.060
we're following the future well.

37:48.060 --> 37:50.380
That just feels like there's a bit of tasty irony in there,

37:50.380 --> 37:51.220
don't you think?

37:51.220 --> 37:53.740
Like, it's, in fact, right now,

37:53.740 --> 37:56.180
the leaders of those projects

37:56.180 --> 37:59.060
are actively working on Stratus to compete with ZFS.

37:59.060 --> 38:02.620
Ah, so Stratus is not about competing with ZFS.

38:02.620 --> 38:03.780
That is the- You don't think so?

38:03.780 --> 38:05.700
No, it's definitely not, look.

38:05.700 --> 38:07.260
So just a quick recap to the audience,

38:07.260 --> 38:09.540
Stratus is sort of a collection of existing tools

38:09.540 --> 38:13.300
as well as new APIs to use existing Linux management tools

38:13.300 --> 38:16.900
along with XFS to create a ZFS-like competitor

38:16.900 --> 38:18.660
is what, you know, a lot of people consider it,

38:18.660 --> 38:20.980
like myself and the people I've talked to.

38:20.980 --> 38:22.100
But what do you think?

38:22.100 --> 38:23.700
You think it's more of a stopgap

38:23.700 --> 38:25.540
for a ButterFS competitor?

38:25.540 --> 38:28.140
I don't consider it a competitor to ButterFS or ZFS

38:28.140 --> 38:32.220
in any reasonable way because the problem with it

38:32.220 --> 38:36.220
is that the layers don't know anything about each other.

38:36.220 --> 38:37.820
So there's going to be weaknesses

38:37.820 --> 38:40.140
and lack of optimization on certain parts of it.

38:40.140 --> 38:42.060
There's a lot you can do to make,

38:42.060 --> 38:44.540
like, this is more about making the user experience simpler

38:44.540 --> 38:45.860
rather than anything else, like-

38:45.860 --> 38:47.220
Right, I mean, it almost seems like that's the,

38:47.220 --> 38:48.460
that's where it's competing, right?

38:48.460 --> 38:49.980
It's not about the technical competition,

38:49.980 --> 38:52.580
it's about their customers want to do this X

38:52.580 --> 38:54.220
and if the performance is good enough,

38:54.220 --> 38:55.620
even if there are limitations,

38:55.620 --> 38:56.900
well, that's the same thing.

38:56.900 --> 38:59.940
The main impetches for the development of Stratus

38:59.940 --> 39:03.340
is that they want to have boot to Snapshot,

39:03.340 --> 39:04.700
the stuff that SUSE did.

39:06.060 --> 39:09.660
And boot to Snapshot is only functional on Linux

39:09.660 --> 39:12.940
properly with BTRFS.

39:12.940 --> 39:16.060
And if you try to use the other file systems

39:16.060 --> 39:17.460
or the other technologies,

39:17.460 --> 39:20.700
there's a whole lot of gotchas and quirks and problems.

39:20.700 --> 39:22.820
And even to be fair with BTRFS,

39:22.820 --> 39:24.820
you can't even do this with mainline grub

39:24.820 --> 39:27.140
because the grub people are bad about reviewing patches

39:27.140 --> 39:27.980
for this stuff.

39:27.980 --> 39:29.820
Uh, yeah.

39:29.820 --> 39:31.540
It is, I laugh, but it's frustrating.

39:31.540 --> 39:35.220
Yeah, no, SUSE has, I think, seven or eight patches

39:35.220 --> 39:38.700
to BTRFS that they wrote four or five years ago

39:38.700 --> 39:39.820
to make this work.

39:39.820 --> 39:44.420
I integrated them into Fedora with Peter Jones's help,

39:44.420 --> 39:46.900
Peter Jones and Dusty Maeb who are,

39:46.900 --> 39:48.220
Peter Jones is the guy at Red Hat

39:48.220 --> 39:49.620
who works on the boot stuff

39:49.620 --> 39:53.500
and Dusty Maeb is currently the guy

39:53.500 --> 39:56.780
that works on the Red Hat Atomic and CoreOS stuff.

39:56.780 --> 39:59.260
And back then he was just kind of the guy

39:59.260 --> 40:03.300
who just worked on all kinds of stuff related to whatever.

40:03.300 --> 40:04.140
The guy with the tie.

40:04.140 --> 40:06.100
Yeah, yeah, that's more accurate.

40:06.100 --> 40:10.180
But Dusty had been doing this for a while on his own,

40:10.180 --> 40:11.660
just like integrating the patches

40:11.660 --> 40:12.860
and then putting them into,

40:12.860 --> 40:14.460
and then writing up instructions

40:14.460 --> 40:17.700
on how to set up the SUSE style boot to Snapshot on Fedora.

40:17.700 --> 40:19.820
I wanted, I've been doing it myself,

40:19.820 --> 40:20.860
but like one of the downsides

40:20.860 --> 40:23.300
is if you're building grub yourself and all this stuff,

40:23.300 --> 40:24.940
you lose a lot of secure boot support.

40:24.940 --> 40:29.100
So I worked with Peter Jones and Dusty Maeb

40:29.100 --> 40:31.260
to integrate the SUSE patches into Fedora's grub.

40:31.260 --> 40:34.260
And so now the boot to Snapshot stuff can work

40:34.260 --> 40:39.100
if you like actually set it up on Fedora,

40:39.100 --> 40:40.620
it's just not set up by default.

40:40.620 --> 40:41.620
There's some work to be done,

40:41.620 --> 40:44.060
but like my main annoyance at this point

40:44.060 --> 40:47.500
is that grub is so bad about integrating grub

40:47.500 --> 40:49.340
and integrating these things.

40:49.340 --> 40:51.540
I have no idea what the hell happened

40:51.540 --> 40:53.260
the first time around when it came to,

40:53.260 --> 40:55.540
when they submitted the patches, assuming they did.

40:55.540 --> 40:57.140
I mean, again, I can't even prove that

40:57.140 --> 41:00.820
because navigating the grub patches mailing list

41:00.820 --> 41:05.460
is horrible because it's that horrible mailing interface

41:05.460 --> 41:07.380
that the GNU project uses for everything.

41:07.380 --> 41:09.700
So it's just terrible to search.

41:09.700 --> 41:10.700
Thank you, thank you.

41:10.700 --> 41:12.380
I always felt like the jerk for thinking that.

41:12.380 --> 41:13.380
It does seem a little bit like,

41:13.380 --> 41:14.780
we have such better technology.

41:14.780 --> 41:18.180
Like the Fedora mailing list with HyperKitty

41:18.180 --> 41:21.100
and Mailman 3 has a bloody search engine

41:21.100 --> 41:25.380
that can actually search properly across all the topics.

41:25.380 --> 41:28.300
You can tag things, you can favorite threads.

41:28.300 --> 41:29.220
That is pretty legit.

41:29.220 --> 41:31.500
Let's bring this back to ZFS.

41:31.500 --> 41:32.500
So now moving forward,

41:32.500 --> 41:36.340
we've got certain features that are only available

41:36.340 --> 41:38.020
on the ZFS for Linux implementation

41:38.020 --> 41:40.380
that the market wants, like encryption.

41:40.380 --> 41:43.020
You've got Delphix, which is switching their product

41:43.020 --> 41:45.540
from a Lumos over to Linux.

41:45.540 --> 41:48.580
But what seems to be the elephant in the room now

41:48.580 --> 41:52.740
is looking over at FreeBSD and the BSD projects

41:52.740 --> 41:56.260
that ship ZFS and thinking after, you know,

41:56.260 --> 41:59.340
kind of a couple of years of really, really hounding,

41:59.340 --> 42:02.380
you've got to ship BSD if you want the best ZFS,

42:02.380 --> 42:04.660
they're now shipping or will be shipping

42:04.660 --> 42:06.340
the Linux version of ZFS.

42:06.340 --> 42:08.540
Is that an awkward position for them, do you think?

42:08.540 --> 42:11.780
Or is that just in the eyes and minds

42:11.780 --> 42:13.420
of the internet commentators?

42:13.420 --> 42:15.780
So ironically, I think they're gonna have an easier time

42:15.780 --> 42:18.100
once they complete their rebase to ZOL.

42:18.100 --> 42:20.440
So one of the differences between the ZOL tree

42:20.440 --> 42:23.380
and the Lumos tree is that the ZOL tree

42:23.380 --> 42:25.020
is actually separated from the rest

42:25.020 --> 42:26.460
of the operating system.

42:26.460 --> 42:28.340
So it's easier for them to pick it out

42:28.340 --> 42:31.580
and plug in the BSD to Linux compatibility interfaces

42:31.580 --> 42:33.620
and plug the ZFS driver in.

42:35.300 --> 42:38.100
I think that from a community point of view,

42:38.100 --> 42:39.700
like the broader Linux community,

42:39.700 --> 42:42.340
ZFS on Linux will remain an ugly stepchild.

42:42.340 --> 42:44.620
And it's probably a very fair remark

42:44.620 --> 42:47.340
to consider it that way, given how antagonistic

42:47.340 --> 42:50.540
both sides have been to each other for various reasons.

42:50.540 --> 42:52.160
It's not worth getting into right now,

42:52.160 --> 42:54.420
but like that is not going to change anytime soon,

42:54.420 --> 42:56.660
unless Oracle waves a magic wand,

42:56.660 --> 42:58.300
which I don't think they'll ever do,

42:58.300 --> 43:00.160
but you know, they could,

43:00.160 --> 43:02.260
and then the problems will start going away.

43:02.260 --> 43:05.220
And then maybe ZFS would be integrated into Linux tree

43:05.220 --> 43:07.020
and you know, everything will kind of get better

43:07.020 --> 43:08.500
in ponies and unicorns.

43:08.500 --> 43:11.080
But while it might be an ugly stepchild

43:11.080 --> 43:12.220
in the broader Linux community,

43:12.220 --> 43:15.540
within the open ZFS community has gradually gotten

43:15.540 --> 43:17.340
a bigger sphere of influence.

43:17.340 --> 43:21.240
The current major developers of the ZFS file system,

43:21.240 --> 43:23.860
as in like the features and stuff like that,

43:23.860 --> 43:26.100
have increasingly been on the Linux side

43:26.100 --> 43:27.860
rather than the other sides.

43:27.860 --> 43:31.060
And for FreeBSD, they're going to find

43:31.060 --> 43:33.140
that it's actually going to be easier

43:33.140 --> 43:36.180
for them to integrate, once they've rebased

43:36.180 --> 43:38.980
from the Illumos version to the Linux version,

43:38.980 --> 43:41.260
I suspect they'll find that it will be much easier

43:41.260 --> 43:43.660
to integrate new versions faster.

43:43.660 --> 43:46.480
Now that being said, the FreeBSD development process

43:46.480 --> 43:48.900
doesn't allow them to move very fast, very easily.

43:48.900 --> 43:51.580
They have a lot of problems in terms of their,

43:51.580 --> 43:53.020
in terms of their development process,

43:53.020 --> 43:55.180
the size of the number of people contributing

43:55.180 --> 43:57.340
to the FreeBSD operating system,

43:57.340 --> 43:59.240
in terms of the kernel and the integration

43:59.240 --> 44:00.860
across the different layers.

44:00.860 --> 44:04.660
But I think that this will improve their ability

44:04.660 --> 44:09.220
to integrate things from ZFS overall.

44:09.220 --> 44:10.700
I think that's a different take than I've heard,

44:10.700 --> 44:12.620
but I think that syncs up.

44:12.620 --> 44:15.100
Knowing what I know from chatting with Alan

44:15.100 --> 44:16.180
about this too, behind the scenes,

44:16.180 --> 44:17.620
asking him what he thought of it,

44:17.620 --> 44:20.120
and I think his views kind of sync up with yours.

44:20.120 --> 44:23.260
And I wonder if then we can move beyond

44:23.260 --> 44:25.640
sort of who has the best ZFS implementation,

44:25.640 --> 44:27.780
and we just sort of achieve, finally,

44:27.780 --> 44:29.740
which I think has been one of the project's goals,

44:29.740 --> 44:31.060
maybe from the beginning, you can correct me

44:31.060 --> 44:33.460
if I'm wrong, Neil, but we finally kind of achieve

44:33.460 --> 44:37.100
one common upstream across all operating systems.

44:37.100 --> 44:39.140
That's the holy grail, right?

44:39.140 --> 44:40.020
Is it possible?

44:40.020 --> 44:41.380
Is that possible?

44:41.380 --> 44:44.480
The main thing that hampers it is that ZFS,

44:44.480 --> 44:48.220
each ZFS implementation is too tightly wound

44:48.220 --> 44:50.860
into the kernel that it is associated with.

44:50.860 --> 44:54.540
So today it is not, we don't have

44:54.540 --> 44:56.380
a modern open ZFS implementation

44:56.380 --> 44:59.060
that can operate entirely in user space, for example.

44:59.060 --> 45:02.540
If you remember from like five or six years ago,

45:02.540 --> 45:04.620
or even seven years ago, even,

45:04.620 --> 45:06.520
like there was the ZFS Fuse project,

45:06.520 --> 45:08.840
and that was one of the first implementations of it.

45:08.840 --> 45:11.260
And while it didn't last for very long,

45:11.260 --> 45:14.400
it was a fairly complete implementation, if not a bit slow.

45:15.400 --> 45:17.720
These days, Fuse is much faster and much more efficient,

45:17.720 --> 45:18.580
and if we did it again,

45:18.580 --> 45:21.340
it would probably be actually pretty good.

45:21.340 --> 45:25.980
But the problem today is that without a way

45:25.980 --> 45:29.140
to operate the ZFS file system entirely in user space

45:29.140 --> 45:31.540
with an agnostic API that can be used

45:31.540 --> 45:33.260
across different operating systems,

45:33.260 --> 45:36.240
there is no way we can have a unified file system tree,

45:36.240 --> 45:40.140
because we can't have an implementation that we can say,

45:40.140 --> 45:42.380
okay, this is the behavior that we expect

45:42.380 --> 45:44.540
and test all the kernel integrations against it.

45:44.540 --> 45:47.020
That's just not a thing we can do right now.

45:47.020 --> 45:48.820
How would you pull something like that off?

45:48.820 --> 45:50.460
Would there be additions?

45:50.460 --> 45:51.820
Would there, I mean, would it be something

45:51.820 --> 45:54.300
like a set of super feature flags?

45:54.300 --> 45:56.140
Is there a way to have a master branch

45:56.140 --> 45:59.880
and then have all of these considerations or compromises

45:59.880 --> 46:00.820
or whatever you want to call them

46:00.820 --> 46:02.860
for the different platforms this thing gonna run on?

46:02.860 --> 46:06.060
So sure, I mean, most modern file systems

46:06.060 --> 46:08.380
are actually built in a relatively self-contained way

46:08.380 --> 46:12.700
because they have to be able to understand

46:12.700 --> 46:14.780
their full context and state.

46:14.780 --> 46:16.380
ZFS is no exception to this.

46:16.380 --> 46:18.500
The only difference is because of the way

46:18.500 --> 46:20.580
that ZFS on Linux has been developed

46:20.580 --> 46:22.180
and all the other variants,

46:22.180 --> 46:25.440
it's been, they took out the common code

46:25.440 --> 46:28.680
and re-implemented everything inside the common code

46:28.680 --> 46:30.540
outwards into the kernel.

46:30.540 --> 46:34.740
So ZFS on Linux, for example, operates in like,

46:34.740 --> 46:37.680
I think it's like eight or nine kernel modules.

46:37.680 --> 46:40.820
Like it's a bunch of different kernel modules

46:40.820 --> 46:45.820
that make up ZFS, zfs.ko, ICP, Z comments,

46:47.380 --> 46:48.600
there's a whole bunch.

46:48.600 --> 46:50.700
And while we're talking about those kernel modules,

46:50.700 --> 46:52.660
let's talk to Neo live in real time.

46:52.660 --> 46:54.640
So we recorded that a couple of weeks ago

46:54.640 --> 46:57.340
and he's joining us in the mumble room.

46:57.340 --> 46:59.380
Neo, welcome to Linux Unplugged again.

46:59.380 --> 47:03.860
And what do you think of this latest news with Linux 5.0?

47:03.860 --> 47:08.060
Hey Chris, it's nice to be back again, this time live.

47:08.060 --> 47:09.540
It's really not that surprising.

47:09.540 --> 47:13.020
I mean, we actually kind of knew it was coming

47:13.020 --> 47:17.180
to some extent because as I mentioned to you

47:17.180 --> 47:21.220
the last time we talked, it was more about having the,

47:22.860 --> 47:25.020
we often test against with Fedora.

47:25.020 --> 47:26.540
We even test against Fedora-Raw height.

47:26.540 --> 47:30.500
So as snapshots are coming in of Linux kernel releases,

47:30.500 --> 47:31.800
we are actively testing in that.

47:31.800 --> 47:35.580
And we detect these kinds of problems basically like that.

47:35.580 --> 47:38.900
And because of that, it was no surprise

47:38.900 --> 47:41.700
to most of us in ZOL, the real,

47:41.700 --> 47:44.020
the kind of the kick in the teeth was that

47:44.020 --> 47:45.580
there were no other consumers left

47:45.580 --> 47:49.220
in the Linux kernel itself and they re-architected things.

47:49.220 --> 47:52.540
So it burned us in that regard.

47:52.540 --> 47:54.060
But you know, this is not all that different

47:54.060 --> 47:57.180
from what happens every other like seventh

47:57.180 --> 47:59.660
or eighth kernel release or something like that.

47:59.660 --> 48:02.260
I mean, it's just gonna make it so that configuring ZFS

48:02.260 --> 48:04.460
when you're building it from source is just gonna take

48:04.460 --> 48:07.140
two or three more minutes longer than it did before.

48:07.140 --> 48:11.400
I mean, at this point, I think we have 10 minutes worth

48:11.400 --> 48:14.620
of configure steps for detecting which functions we can use

48:14.620 --> 48:17.020
going all the way back to 2632.

48:17.020 --> 48:17.860
Oh wow.

48:17.860 --> 48:20.080
God, I'm looking forward to when RHEL 6 goes away

48:20.080 --> 48:21.880
because when RHEL 6 drops off,

48:21.880 --> 48:24.660
we can move the bar up to 310

48:24.660 --> 48:28.160
and that lets us drop a huge chunk of checks.

48:28.160 --> 48:29.460
I bet.

48:29.460 --> 48:30.380
Holy smokes.

48:31.260 --> 48:33.460
So is there going to be, as far as you know,

48:33.460 --> 48:36.280
like a checksum performance impact

48:36.280 --> 48:40.140
if it can't use this vectorized checksum methodology?

48:40.140 --> 48:41.320
I don't know this for certain

48:41.320 --> 48:43.840
because like I haven't dug too much into it,

48:43.840 --> 48:47.920
but I suspect that this is really only going to impact

48:47.920 --> 48:52.920
encryption really, because the FPU stuff,

48:53.020 --> 48:56.580
I think is more about accelerating floating.

48:56.580 --> 48:58.060
FPU is a floating point unit.

48:58.060 --> 49:00.700
So it's accelerating floating point calculations

49:00.700 --> 49:03.460
and that's primarily used in cryptography.

49:03.460 --> 49:04.940
So I suspect that's the only thing

49:04.940 --> 49:06.220
that's really gonna harm it.

49:06.220 --> 49:09.260
There's not a lot of accelerated code paths in ZFS.

49:09.260 --> 49:11.260
That's part of the reason why it's kind of

49:11.260 --> 49:14.100
a heavy file system compared to most.

49:14.100 --> 49:17.340
And the other part of it is just that it has a lot of stuff

49:17.340 --> 49:20.400
and it has to re-implement large aspects

49:20.400 --> 49:21.780
of what the kernel normally does

49:21.780 --> 49:24.480
because of the licensing and compat.

49:24.480 --> 49:27.680
So, I mean, it is what it is.

49:29.060 --> 49:29.900
It'll move on.

49:29.900 --> 49:32.020
Like there's already a little bit of,

49:32.020 --> 49:34.540
if you look at the CFS on Linux repository right now

49:34.540 --> 49:36.100
and look at the GitHub issues,

49:36.100 --> 49:37.580
they've already got the issues filed

49:37.580 --> 49:40.540
for like the different functions that have been,

49:40.540 --> 49:43.700
basically they're blocked off from starting with 5.0.

49:43.700 --> 49:45.180
And, you know, they're just,

49:45.180 --> 49:49.780
we'll just poke at and prod it and fix it as we go.

49:49.780 --> 49:52.140
I feel like we should maybe just

49:52.140 --> 49:55.500
more explicitly assuage Chris's fears.

49:55.500 --> 49:57.780
Are there changes to symbols or, you know,

49:57.780 --> 50:00.040
other upstream changes that would seem likely

50:00.040 --> 50:03.260
that could really endanger the future of ZFS on Linux?

50:03.260 --> 50:05.060
Look, the only way that ZFS on Linux

50:05.060 --> 50:06.200
will have a guaranteed future

50:06.200 --> 50:09.260
is if it was mainlined into the Linux kernel tree.

50:09.260 --> 50:12.620
That is not gonna happen until Oracle waves its magic wand.

50:12.620 --> 50:15.420
So, nothing in this life is certain

50:15.420 --> 50:18.660
when it comes to ZFS on Linux or ZFS on any platform.

50:19.980 --> 50:21.280
Just take it as it can come.

50:21.280 --> 50:24.820
And for now, I don't foresee a reason for it to disappear.

50:24.820 --> 50:26.800
Yeah, it does seem like,

50:26.800 --> 50:29.220
and I think I even put that in my episode

50:29.220 --> 50:32.480
where we all had our magic wands and we had our wishlist.

50:32.480 --> 50:34.300
If they dual licensed it even,

50:34.300 --> 50:36.140
or just, let's just say they win GPL,

50:36.140 --> 50:39.060
just for a hot second, let's just fantasize.

50:39.060 --> 50:40.820
It would enshrine that file system

50:40.820 --> 50:43.360
in the world's largest free operating system.

50:43.360 --> 50:46.660
It would essentially make ZFS a file system

50:46.660 --> 50:48.020
that could live on forever.

50:48.020 --> 50:50.140
Not that it can't on these other platforms,

50:50.140 --> 50:52.980
but as we've all seen with the GPL,

50:52.980 --> 50:54.180
it has that viral nature

50:54.180 --> 50:57.620
and that has worked out very good for Linux.

50:57.620 --> 50:59.540
And if ZFS could be included into that,

50:59.540 --> 51:02.740
it would be part of something larger.

51:02.740 --> 51:05.160
I mean, not to get all like meta about this,

51:05.160 --> 51:08.260
but being inside the Linux kernel

51:08.260 --> 51:11.100
is sort of like being in a time capsule.

51:11.100 --> 51:12.700
And the other thing about this

51:12.700 --> 51:15.100
that a lot of people don't realize

51:15.100 --> 51:19.700
is that we, in the ZOL implementation of ZFS,

51:19.700 --> 51:23.380
we re-implement quite a bit of what the kernel does.

51:23.380 --> 51:26.080
If we were actually allowed to be part of the kernel,

51:27.060 --> 51:30.740
that would probably simplify quite a bit

51:30.740 --> 51:34.140
of ZFS's implementation on Linux.

51:34.140 --> 51:37.500
And the magic wand here would be something,

51:37.500 --> 51:39.260
an arrangement similar to what we have

51:39.260 --> 51:42.820
for the GPU stack, the graphics stack in Linux.

51:42.820 --> 51:45.340
In the kernel side graphics stack,

51:45.340 --> 51:47.400
most of the code is dual licensed,

51:48.260 --> 51:52.300
ex-pat MITx11 and GPLv2.

51:52.300 --> 51:55.300
And so that allows large swaths of that code

51:55.300 --> 52:00.300
to be imported into operating systems like FreeBSD

52:00.620 --> 52:03.340
that prefer to have a more permissive

52:03.340 --> 52:05.500
pushover set of license terms

52:05.500 --> 52:09.380
versus the copyleft terms that the Linux kernel has.

52:12.300 --> 52:14.620
The thing to consider though is that

52:16.440 --> 52:18.660
if such an arrangement were to occur,

52:18.660 --> 52:21.900
like there's a whole lot of extra considerations

52:21.900 --> 52:26.900
around like how ZFS is going to be maintained,

52:27.100 --> 52:29.660
how will people make sure that the licensing providence

52:29.660 --> 52:32.940
remains, you know, sane, stuff like that.

52:32.940 --> 52:35.660
These are things that have been worked out as arrangements

52:35.660 --> 52:39.860
before it's been done with the Linux graphics drivers.

52:39.860 --> 52:42.300
It can be done for ZFS as well

52:42.300 --> 52:44.820
if we could get Oracle to wave its magic wand

52:44.820 --> 52:47.660
because if they make, like say for example,

52:47.660 --> 52:49.860
a new version of the CDDL,

52:49.860 --> 52:53.840
that new version could basically allow you

52:53.840 --> 52:57.420
to have the terms that would be compatible with it.

52:57.420 --> 53:00.700
That could be a way to do it via the CDDL.

53:00.700 --> 53:02.140
Cause there's no restriction currently

53:02.140 --> 53:05.500
in the CDDL license that specifically says,

53:05.500 --> 53:08.660
the way that it's termed inside of the ZFS tree

53:08.660 --> 53:10.940
that says that newer versions of that license

53:10.940 --> 53:12.220
cannot be used.

53:12.220 --> 53:14.660
And the license steward, which was Sun Microsystems,

53:14.660 --> 53:18.060
now Oracle Corporation, is allowed to make a new version

53:18.060 --> 53:22.140
and we are allowed to use that as our, if we want to.

53:22.140 --> 53:22.980
Just put that out there.

53:22.980 --> 53:24.020
Just going to put that out there, right?

53:24.020 --> 53:26.780
Just maybe send that out in waves out in the universe.

53:26.780 --> 53:28.260
Maybe something will come back.

53:28.260 --> 53:31.020
It's the same path that Fedora, Red Hat,

53:31.020 --> 53:35.780
Fedora and SGI did to fix the Xorg licensing problem

53:35.780 --> 53:37.860
back in the early 2000s.

53:37.860 --> 53:42.700
So it's not the, and the free software foundation

53:42.700 --> 53:46.860
did the same thing for the GFDL so that Wikipedia

53:46.860 --> 53:48.900
could move to Creative Commons licensing

53:48.900 --> 53:51.700
instead of remaining on the GNU free documentation license.

53:51.700 --> 53:52.860
It's not without precedent.

53:52.860 --> 53:53.960
It can be done.

53:53.960 --> 53:56.100
It's just a matter of getting the right ear

53:56.100 --> 53:59.700
at the, with the right people to make it happen.

53:59.700 --> 54:02.180
And if there's enough people who want it and there's,

54:02.180 --> 54:05.860
and somebody knows the right person, then it can happen.

54:05.860 --> 54:07.260
I'm holding out my hope.

54:07.260 --> 54:08.060
I like that.

54:08.060 --> 54:10.740
I think that's a, you know what, that's going to be the,

54:10.740 --> 54:13.380
that'll be like the little, little string of hope

54:13.380 --> 54:14.400
that I hold on to, Neil.

54:14.400 --> 54:15.980
Thanks for coming on and sharing your thoughts

54:15.980 --> 54:17.860
on this story as it developed today.

54:17.860 --> 54:19.420
I appreciate you stopping by.

54:19.420 --> 54:20.780
That was great timing.

54:20.780 --> 54:23.340
And I have a feeling we'll be talking more in the future.

54:23.340 --> 54:25.700
Yeah, I enjoy chatting with you, Chris.

54:25.700 --> 54:28.460
So happy to be on whenever you'd like me to.

54:28.460 --> 54:29.820
Thank you, sir.

54:29.820 --> 54:31.140
Well, before we scoot out of here,

54:31.140 --> 54:33.580
I wanted to just mention a couple of quick picks.

54:33.580 --> 54:34.660
Both are really neat.

54:34.660 --> 54:37.980
We've talked about dot file managers before on the show.

54:37.980 --> 54:40.540
And I thought what I'd do, instead of me pronounce this,

54:40.540 --> 54:43.420
I'm going to make Wes pronounce it, because he went and looked

54:43.420 --> 54:45.300
up the pronunciation.

54:45.300 --> 54:46.860
And I say there's a 50-50 shot.

54:46.860 --> 54:49.580
You remember how to actually say it, Wes.

54:49.580 --> 54:50.500
Betrayal.

54:50.500 --> 54:53.180
I see how it goes, sir.

54:53.180 --> 54:54.260
Shea moi.

54:54.260 --> 54:54.900
OK, all right.

54:54.900 --> 54:55.220
All right.

54:55.220 --> 54:55.740
Good job.

54:55.740 --> 54:57.120
It's not that I didn't have faith.

54:57.120 --> 54:58.360
It's just that it was a while ago.

54:58.360 --> 54:59.260
It was a while ago.

54:59.260 --> 55:00.140
Shea moi?

55:00.140 --> 55:01.500
Is it shea moi?

55:01.500 --> 55:02.460
This is on you now.

55:02.460 --> 55:06.340
You got the one reading, and that was it.

55:06.340 --> 55:07.980
So when you first linked this to me,

55:07.980 --> 55:09.020
I was a little skeptical.

55:09.020 --> 55:11.460
There's a ton of different ways to manage dot files,

55:11.460 --> 55:14.300
from a simple git directory to a ton of custom tools

55:14.300 --> 55:15.460
that exist there.

55:15.460 --> 55:18.460
Thankfully, this guy, they've got a great README.

55:18.460 --> 55:20.380
And a big section there, I already

55:20.380 --> 55:22.180
have a system to manage my dot files.

55:22.180 --> 55:23.380
Why should I use this?

55:23.380 --> 55:25.180
And there's actually some solid answers.

55:25.180 --> 55:27.540
If you haven't ever tried one, or you're not

55:27.540 --> 55:30.700
happy with what you got, this should be a serious contender.

55:30.700 --> 55:31.380
Yeah.

55:31.380 --> 55:32.260
I heard good things.

55:32.260 --> 55:33.140
I heard good things.

55:33.140 --> 55:34.340
That's why I tossed it in here, because I

55:34.340 --> 55:35.780
heard a lot of good things.

55:35.780 --> 55:37.620
And I'm thinking about it.

55:37.620 --> 55:38.980
There's also a bunch of other ones.

55:38.980 --> 55:41.660
Probably the most famous is gnu-stow, or stow,

55:41.660 --> 55:42.940
however you want to pronounce it.

55:42.940 --> 55:44.780
Yeah, I've used that for a long time.

55:44.780 --> 55:47.740
Yeah, that's, I think, probably the most common one.

55:47.740 --> 55:50.020
I think this is a little easier to start with myself,

55:50.020 --> 55:51.980
so I'll have a link to that in the show notes.

55:51.980 --> 55:55.300
And then our last pick this week is a new web

55:55.300 --> 55:57.660
browser called Ephemeral.

55:57.660 --> 55:59.540
And I think this is a really cool idea.

55:59.540 --> 56:02.660
It's the always incognito web browser.

56:02.660 --> 56:06.260
And it's by our buddy Cassidy, over at the elementary project.

56:06.260 --> 56:08.780
And he writes, it's an interesting idea,

56:08.780 --> 56:12.940
Firefox focus, just making privacy a habit by default,

56:12.940 --> 56:16.180
instead of a separate mode you manually enable.

56:16.180 --> 56:19.060
And from that, he was kind of inspired

56:19.060 --> 56:21.740
to make a really straightforward, nice looking,

56:21.740 --> 56:24.820
as you would expect, I suppose, web browser

56:24.820 --> 56:25.740
for elementary OS.

56:25.740 --> 56:27.700
And it's a Linux app, so there's probably other ways

56:27.700 --> 56:28.860
you can get your hands on it.

56:28.860 --> 56:32.940
But if you are on elementary OS, go in the App Center

56:32.940 --> 56:34.260
and check out Ephemeral.

56:34.260 --> 56:36.180
I hope this maybe gets around a little bit.

56:36.180 --> 56:38.900
I think this would be good publicity for elementary

56:38.900 --> 56:39.860
as a project.

56:39.860 --> 56:41.740
Yeah, and as you said, it's beautiful.

56:41.740 --> 56:42.540
It's streamlined.

56:42.540 --> 56:43.860
It's simple.

56:43.860 --> 56:46.140
And I think Cassidy hit it on the head

56:46.140 --> 56:48.960
with privacy as a default. Sure, you

56:48.960 --> 56:50.420
might need sessions for some stuff,

56:50.420 --> 56:51.940
for your work account, whatever.

56:51.940 --> 56:54.180
But if you're just trying to buy something on Amazon

56:54.180 --> 56:57.180
or look up plates, this seems perfect.

56:57.180 --> 56:59.260
Yeah, I actually just like it just

56:59.260 --> 57:04.060
for the idea of having an extra browser that's sort of like,

57:04.060 --> 57:05.660
just go log into this for a little bit.

57:05.660 --> 57:06.660
I do this all the time.

57:06.660 --> 57:09.620
I'll fire up an incognito window to maybe open up

57:09.620 --> 57:11.540
a Google account that's for one of the shows

57:11.540 --> 57:14.380
that I don't log into too often, and I just want a one off.

57:14.380 --> 57:16.220
And I just could always use this browser.

57:16.220 --> 57:20.440
But speaking of publicity for elementary OS,

57:20.440 --> 57:23.980
our buddy Jason, who was on the show last week,

57:23.980 --> 57:26.500
I think when I was gone, and talked about Adobe Premiere

57:26.500 --> 57:29.980
coming, possibly or possibly not coming to Linux,

57:29.980 --> 57:32.180
and also about their plans with Rush.

57:32.180 --> 57:35.420
Well, Jason has launched an elementary OS community

57:35.420 --> 57:36.540
challenge.

57:36.540 --> 57:38.340
And the gist of it is his challenge

57:38.340 --> 57:41.660
is use elementary OS for a certain period of time.

57:41.660 --> 57:44.540
It's not super, super long.

57:44.540 --> 57:46.460
The whole idea is, especially if you're on Mac or Windows

57:46.460 --> 57:48.120
today, so if you're listening to the show

57:48.120 --> 57:50.820
and you've been Linux curious for a while,

57:50.820 --> 57:51.940
this is perfect for you.

57:51.940 --> 57:53.500
And I would like you to consider this.

57:53.500 --> 57:56.140
The basic premise of the elementary OS challenge

57:56.140 --> 57:56.660
is simple.

57:56.660 --> 58:01.900
You ditch Windows or Mac OS for maybe elementary OS.

58:01.900 --> 58:02.860
Maybe choose your own.

58:02.860 --> 58:04.820
You know, elementary OS would be a great choice.

58:04.820 --> 58:05.340
Oh, come on.

58:05.340 --> 58:05.700
Come on.

58:05.700 --> 58:07.860
It's not called choose whatever you want, Chris.

58:07.860 --> 58:08.260
I know.

58:08.260 --> 58:08.820
I know.

58:08.820 --> 58:10.420
But I just want anybody to switch Linux.

58:10.420 --> 58:11.860
But his suggestion, I think is a good one,

58:11.860 --> 58:15.060
is you all are going to go in on elementary OS for two weeks.

58:15.060 --> 58:15.900
Think about that.

58:15.900 --> 58:17.020
You'll have a community of people

58:17.020 --> 58:18.180
that are all trying this out.

58:18.180 --> 58:22.420
There could be some really good results from that,

58:22.420 --> 58:24.580
especially if Jason is able to stay

58:24.580 --> 58:26.220
in contact with that community.

58:26.220 --> 58:30.020
And he says, since we'll be on this road together,

58:30.020 --> 58:31.900
he has a piece over on Forbes about this.

58:31.900 --> 58:34.020
He says, since we'll be on this road together,

58:34.020 --> 58:35.540
I'll be posting a bunch of content

58:35.540 --> 58:38.620
here to capture my ongoing experiences with the challenge.

58:38.620 --> 58:43.760
One day, may see a stream of consciousness journal.

58:43.760 --> 58:46.380
Other days, I'll be publishing short guides, software

58:46.380 --> 58:49.540
spotlights, interviews with elementary OS app developers

58:49.540 --> 58:52.940
and team members, and my own discoveries and hurdles,

58:52.940 --> 58:54.260
if any.

58:54.260 --> 58:55.820
I think it's a great idea.

58:55.820 --> 58:58.780
He's also at killyourfm on Twitter

58:58.780 --> 59:01.200
if you want to follow him there, because he'll probably be

59:01.200 --> 59:02.860
posting about it there as well.

59:02.860 --> 59:07.140
And I'll have a link to their challenge, his piece on Forbes,

59:07.140 --> 59:09.260
if you want to maybe get into that.

59:09.260 --> 59:10.980
I know a lot of people listening, Wes,

59:10.980 --> 59:13.120
that are probably on their own distro of choice.

59:13.120 --> 59:15.580
But you know, because you see the stats, actually.

59:15.580 --> 59:16.660
So you actually do know.

59:16.660 --> 59:20.820
We have a very large Mac and Windows audience

59:20.820 --> 59:23.660
that are likely listening because they're Linux curious.

59:23.660 --> 59:24.900
This could be great for them.

59:24.900 --> 59:25.660
It really could.

59:25.660 --> 59:28.540
And elementary, I mean, it just keeps making leaps and bounds.

59:28.540 --> 59:30.420
So maybe you're like me, and you hadn't used it

59:30.420 --> 59:31.980
since the last time around.

59:31.980 --> 59:33.180
It's really worth it.

59:33.180 --> 59:34.140
Two weeks is nothing.

59:34.140 --> 59:35.380
I mean, just give it a shot.

59:35.380 --> 59:36.220
Yeah, give it a shot.

59:36.220 --> 59:37.900
And if you do it, let us know too.

59:37.900 --> 59:39.540
I'd love to know your progress too.

59:39.540 --> 59:40.980
You could at Chris LAS me.

59:40.980 --> 59:42.440
He's at Wes Payne.

59:42.440 --> 59:44.440
Or you could just send us a contact form

59:44.440 --> 59:47.840
if you go to linuxunplug.com slash contact.

59:47.840 --> 59:49.660
It'll go right into our inbox there.

59:49.660 --> 59:51.160
Or wherever you like to do that.

59:51.160 --> 59:53.160
We would love to know how that journey goes too.

59:53.160 --> 59:55.620
And I encourage you, if you've been thinking about it,

59:55.620 --> 59:57.980
with Jason doing this, he has a pretty decent following.

59:57.980 --> 01:00:00.420
This is going to be a little community that crops up

01:00:00.420 --> 01:00:01.860
that can support each other.

01:00:01.860 --> 01:00:04.380
And you can follow him along as he goes through it too

01:00:04.380 --> 01:00:05.340
and writes about it.

01:00:05.340 --> 01:00:07.540
It just seems like a real, if I was getting into Linux,

01:00:07.540 --> 01:00:08.620
I'll stop talking about it.

01:00:08.620 --> 01:00:10.000
But I just think this is such a cool idea.

01:00:10.000 --> 01:00:11.620
If I was getting into Linux today,

01:00:11.620 --> 01:00:13.460
that would be the thing that pushes me over.

01:00:13.460 --> 01:00:14.740
And it's just really exciting.

01:00:14.740 --> 01:00:16.420
And I'm just fired up about getting some new users.

01:00:16.420 --> 01:00:18.420
And I think elementary is a great distro

01:00:18.420 --> 01:00:19.460
for that potential audience too.

01:00:19.460 --> 01:00:24.460
So with that, we're going to wrap up this week's episode.

01:00:24.620 --> 01:00:28.620
TechSnap has some great stuff in the works.

01:00:28.620 --> 01:00:31.320
Jim Salter from Ars Technica is joining Wes

01:00:31.320 --> 01:00:32.420
as the new co-host.

01:00:32.420 --> 01:00:33.840
And a new episode will be coming out soon.

01:00:33.840 --> 01:00:34.680
So go subscribe.

01:00:34.680 --> 01:00:38.980
Go to techsnap.systems slash subscribe and get that.

01:00:38.980 --> 01:00:40.700
It's going to be incredible.

01:00:40.700 --> 01:00:42.020
He's at Wes Payne.

01:00:42.020 --> 01:00:43.460
Thank you to the mumble room for joining us.

01:00:43.460 --> 01:00:45.780
I'm at Chris LAS.

01:00:45.780 --> 01:00:50.780
And from a very chilly Texas, thank you for joining us.

01:00:50.820 --> 01:00:53.280
And consider joining us live next Tuesday.

01:00:53.280 --> 01:00:55.340
You can get it at jupiterbroadcasting.com slash calendar

01:00:55.340 --> 01:00:58.660
for your time zone and jblive.tv for that stream.

01:00:58.660 --> 01:01:00.260
We'll see you next Tuesday.

01:01:00.260 --> 01:01:20.260
We'll see you next Tuesday.

01:01:30.260 --> 01:01:34.620
Well, thank you everybody.

01:01:34.620 --> 01:01:35.620
Really enjoyed it.

01:01:35.620 --> 01:01:36.620
Mumble room, you were great.

01:01:36.620 --> 01:01:38.660
Neil, thank you so much for making it.

01:01:38.660 --> 01:01:39.660
Man, that worked out perfect.

01:01:39.660 --> 01:01:40.660
I'll tell you what.

01:01:40.660 --> 01:01:41.660
It really did.

01:01:41.660 --> 01:01:42.660
Thank you.

01:01:42.660 --> 01:01:43.660
Sometimes it just comes together.

01:01:43.660 --> 01:01:47.260
Even when I'm doing live shows and oh man,

01:01:47.260 --> 01:01:50.420
we had a great live show today, but there was a moment.

01:01:50.420 --> 01:01:53.460
You know, and I don't, I mean, I guess I am a professional.

01:01:53.460 --> 01:01:54.460
You are, yeah.

01:01:54.460 --> 01:01:55.460
I don't consider myself one.

01:01:55.460 --> 01:01:57.980
What do you, what was the last 10 years?

01:01:57.980 --> 01:01:58.980
I know.

01:01:58.980 --> 01:01:59.980
I know.

01:01:59.980 --> 01:02:00.980
That's funny.

01:02:00.980 --> 01:02:03.780
But you know, I totally, if I, if I was a professional,

01:02:03.780 --> 01:02:09.300
I'm not anymore because I embarrassed myself so bad on the live stream.

01:02:09.300 --> 01:02:12.500
I don't know if I should say it or if I should just make people go watch it.

01:02:12.500 --> 01:02:16.420
But there was a moment where maybe because I wasn't directly on camera,

01:02:16.420 --> 01:02:18.420
something happened and I lost it.

01:02:18.420 --> 01:02:19.420
I laughed so hard.

01:02:19.420 --> 01:02:21.660
Like you ever see those outtakes when a cast just loses it

01:02:21.660 --> 01:02:23.200
and they can't keep it together anymore?

01:02:23.200 --> 01:02:24.200
That was me.

01:02:24.200 --> 01:02:25.200
Yeah.

01:02:25.200 --> 01:02:26.200
Normally that's like multiple people.

01:02:26.200 --> 01:02:28.180
And you know, you were definitely the loudest.

01:02:28.180 --> 01:02:30.460
I was the only one laughing.

01:02:30.460 --> 01:02:31.980
There was like one other ha.

01:02:31.980 --> 01:02:36.740
But I was crying off camera, crying off camera.

01:02:36.740 --> 01:02:58.860
Just because of one simple mistake.

