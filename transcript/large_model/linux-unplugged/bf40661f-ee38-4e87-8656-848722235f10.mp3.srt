1
00:00:00,000 --> 00:00:01,880
So we've been watching these videos on the pre-show

2
00:00:01,880 --> 00:00:03,440
before we actually started recording.

3
00:00:03,440 --> 00:00:04,440
The pre-pre-show.

4
00:00:04,440 --> 00:00:07,960
And I realized I just totally wrecked my YouTube algorithm.

5
00:00:07,960 --> 00:00:09,440
There's been this phenomenon where

6
00:00:09,440 --> 00:00:11,860
it seems like YouTube has certain types of videos

7
00:00:11,860 --> 00:00:14,240
they really want me to watch and other types of videos

8
00:00:14,240 --> 00:00:16,000
that they just completely forget.

9
00:00:16,000 --> 00:00:19,440
So the other day on YouTube TV at home,

10
00:00:19,440 --> 00:00:23,800
my wife brought up one of these like ASMR, rainy cabin

11
00:00:23,800 --> 00:00:26,800
background kind of music videos.

12
00:00:26,800 --> 00:00:28,440
Now when we're going through YouTube,

13
00:00:28,440 --> 00:00:31,200
we have like three rows of these videos.

14
00:00:31,200 --> 00:00:34,120
Watch it one time, and there's three rows of these.

15
00:00:34,120 --> 00:00:35,360
Have you experienced this?

16
00:00:35,360 --> 00:00:35,880
Yes, I have.

17
00:00:35,880 --> 00:00:38,440
You almost need just a separate throwaway YouTube account just

18
00:00:38,440 --> 00:00:40,000
for browsing random interests and then

19
00:00:40,000 --> 00:00:41,360
the one you carefully prune.

20
00:00:41,360 --> 00:00:43,480
Isn't the algorithm supposed to do this for us?

21
00:00:43,480 --> 00:00:47,840
Yeah, I feel like there's some big YouTube agenda, Wes.

22
00:00:47,840 --> 00:00:49,760
We've got to fight back against the machine.

23
00:00:49,760 --> 00:00:50,760
Big ASMR.

24
00:00:50,760 --> 00:01:02,760
Hello, friends, and welcome to episode 379

25
00:01:02,760 --> 00:01:04,720
of your weekly Linux talk show.

26
00:01:04,720 --> 00:01:07,200
This episode is brought to you by Cloud Guru, the leader

27
00:01:07,200 --> 00:01:08,120
in hands-on learning.

28
00:01:08,120 --> 00:01:10,240
The only way to learn a new skill is by doing.

29
00:01:10,240 --> 00:01:12,520
That's why ACG provides hands-on labs, cloud

30
00:01:12,520 --> 00:01:14,280
servers, and much more.

31
00:01:14,280 --> 00:01:16,920
Get your hands cloudy at acloudguru.com.

32
00:01:16,920 --> 00:01:18,040
My name is Chris.

33
00:01:18,040 --> 00:01:19,400
My name is Wes.

34
00:01:19,400 --> 00:01:25,240
And this is episode 379 of The People's Podcast, really.

35
00:01:25,240 --> 00:01:27,200
Let's talk about what this really is.

36
00:01:27,200 --> 00:01:28,800
This is a podcast for The People,

37
00:01:28,800 --> 00:01:30,920
and it's a special edition because right now we're

38
00:01:30,920 --> 00:01:33,520
joined by very special people.

39
00:01:33,520 --> 00:01:36,840
And let's start with Mr. Drew.

40
00:01:36,840 --> 00:01:38,280
Welcome back to the show, Drew.

41
00:01:38,280 --> 00:01:39,900
Oh my god, it's been so long.

42
00:01:39,900 --> 00:01:40,960
I missed you guys.

43
00:01:40,960 --> 00:01:41,460
I know.

44
00:01:41,460 --> 00:01:41,960
We missed you.

45
00:01:41,960 --> 00:01:43,240
Do you remember how to podcast?

46
00:01:43,240 --> 00:01:44,760
I think so.

47
00:01:44,760 --> 00:01:46,000
I guess we'll find out.

48
00:01:46,000 --> 00:01:48,720
I mean, yeah, this is the big test right now, live.

49
00:01:48,720 --> 00:01:51,800
We're doing this on a Sunday, which is unusual.

50
00:01:51,800 --> 00:01:53,060
Feels wrong.

51
00:01:53,060 --> 00:01:55,400
And Drew brought the vodka.

52
00:01:55,400 --> 00:01:58,960
So now that Drew's back, we're drinking.

53
00:01:58,960 --> 00:02:00,000
Drinking with Drew.

54
00:02:00,000 --> 00:02:02,140
And we're recording this a little bit early.

55
00:02:02,140 --> 00:02:03,360
We normally do it on a Tuesday, but we're

56
00:02:03,360 --> 00:02:04,460
doing it on Sunday this week, which

57
00:02:04,460 --> 00:02:06,000
means something else special.

58
00:02:06,000 --> 00:02:08,680
There's a bunch of really great people in our virtual lug

59
00:02:08,680 --> 00:02:10,520
that are normally here for Sunday for Luplug,

60
00:02:10,520 --> 00:02:12,680
but now they're here for the show.

61
00:02:12,680 --> 00:02:14,520
Time appropriate greetings, Mumble Room.

62
00:02:14,520 --> 00:02:15,020
Hello.

63
00:02:15,020 --> 00:02:15,520
Hello.

64
00:02:15,520 --> 00:02:16,020
Hello.

65
00:02:16,020 --> 00:02:16,520
Hello.

66
00:02:16,520 --> 00:02:17,020
Hello.

67
00:02:17,020 --> 00:02:18,200
Hello.

68
00:02:18,200 --> 00:02:19,040
Hello.

69
00:02:19,040 --> 00:02:20,440
I mean, it's a tighter crowd.

70
00:02:20,440 --> 00:02:22,440
I don't think we have nearly as many people watching live,

71
00:02:22,440 --> 00:02:23,320
but we have a handful.

72
00:02:23,320 --> 00:02:24,240
But they're vocal.

73
00:02:24,240 --> 00:02:25,960
And we have a great Mumble Room turnout,

74
00:02:25,960 --> 00:02:29,240
and some familiar friends and some new friends.

75
00:02:29,240 --> 00:02:30,880
Grim, welcome on to Linux Unplugged.

76
00:02:30,880 --> 00:02:32,300
I'm going to give away your secret.

77
00:02:32,300 --> 00:02:34,680
Grim is the Pigeon developer.

78
00:02:34,680 --> 00:02:36,000
You all remember Pigeon, right?

79
00:02:36,000 --> 00:02:37,040
Some of us still use Pigeon.

80
00:02:37,040 --> 00:02:37,440
Sure do.

81
00:02:37,440 --> 00:02:38,120
Love it.

82
00:02:38,120 --> 00:02:39,680
And Grim's joining us for the first time.

83
00:02:39,680 --> 00:02:41,960
Hey, Grim, welcome back to the, or welcome to Linux Unplugged.

84
00:02:41,960 --> 00:02:43,040
Hi, thanks for having me.

85
00:02:43,040 --> 00:02:44,880
I finally was able to make one of these times,

86
00:02:44,880 --> 00:02:46,240
just randomly sell your tweets.

87
00:02:46,240 --> 00:02:47,920
I was like, well, might as well show up.

88
00:02:47,920 --> 00:02:48,600
I'm glad you did.

89
00:02:48,600 --> 00:02:50,480
I almost said welcome back, because you and I

90
00:02:50,480 --> 00:02:52,440
have had conversations outside the show.

91
00:02:52,440 --> 00:02:53,920
But this is the first time you've been on the show.

92
00:02:53,920 --> 00:02:55,120
So I'm glad to have you here.

93
00:02:55,120 --> 00:02:57,680
And welcome to a weird Sunday edition.

94
00:02:57,680 --> 00:03:01,320
And then also, West Tex Jeff, who

95
00:03:01,320 --> 00:03:04,480
has been following the shows for a million years,

96
00:03:04,480 --> 00:03:07,000
he and I have shook hands dozens of times.

97
00:03:07,000 --> 00:03:08,840
I mean, we've met up in Texas several times.

98
00:03:08,840 --> 00:03:11,520
He was at Linux Academy headquarters once,

99
00:03:11,520 --> 00:03:13,280
and we got to show him around a little bit.

100
00:03:13,280 --> 00:03:14,720
He's finally joining us on the Mumble Room

101
00:03:14,720 --> 00:03:15,720
for the first time, too.

102
00:03:15,720 --> 00:03:16,560
Welcome aboard.

103
00:03:16,560 --> 00:03:17,600
Hey, can you hear me?

104
00:03:17,600 --> 00:03:18,840
I've never tried this before.

105
00:03:18,840 --> 00:03:19,640
It works, man.

106
00:03:19,640 --> 00:03:20,120
You got it.

107
00:03:20,120 --> 00:03:21,400
You got it going.

108
00:03:21,400 --> 00:03:22,600
Awesome.

109
00:03:22,600 --> 00:03:23,480
I'm glad you're here.

110
00:03:23,480 --> 00:03:24,240
I missed you, man.

111
00:03:24,240 --> 00:03:26,520
I can't wait till we start festing again.

112
00:03:26,520 --> 00:03:27,400
I know.

113
00:03:27,400 --> 00:03:28,040
Amen.

114
00:03:28,040 --> 00:03:30,440
I got one of those automatic, like you were doing this

115
00:03:30,440 --> 00:03:32,880
a year ago photos, or it was like a little more

116
00:03:32,880 --> 00:03:35,600
than a year ago, and it was Wes and I in Boston.

117
00:03:35,600 --> 00:03:36,680
Those were the days.

118
00:03:36,680 --> 00:03:39,440
I was like, oh, yeah, that used to be a thing we did.

119
00:03:39,440 --> 00:03:40,680
It'll happen again.

120
00:03:40,680 --> 00:03:41,920
It will happen again.

121
00:03:41,920 --> 00:03:43,640
But in the meantime, a lot of people

122
00:03:43,640 --> 00:03:46,040
are shifting virtual for those events.

123
00:03:46,040 --> 00:03:49,920
And Arch is one of them, ArchConf 2020.

124
00:03:49,920 --> 00:03:53,120
And it's kind of a special one because this year marks

125
00:03:53,120 --> 00:03:57,040
18 years since the first official release of Arch Linux.

126
00:03:57,040 --> 00:03:58,760
Wow, that is a long time.

127
00:03:58,760 --> 00:03:59,640
I know.

128
00:03:59,640 --> 00:04:03,360
And they organized this whole event using open source tools.

129
00:04:03,360 --> 00:04:04,880
We'll link to a bunch of their talks.

130
00:04:04,880 --> 00:04:06,440
They released them online.

131
00:04:06,440 --> 00:04:08,320
But I went through and watched a few of them,

132
00:04:08,320 --> 00:04:12,360
and they talk about how they loosely organized on IRC.

133
00:04:12,360 --> 00:04:14,120
And then they used Etherpad, which

134
00:04:14,120 --> 00:04:15,640
is that nice collaboration tool.

135
00:04:15,640 --> 00:04:16,400
Indeed.

136
00:04:16,400 --> 00:04:18,240
Yeah, they used Etherpad for a lot

137
00:04:18,240 --> 00:04:20,880
of the written organization.

138
00:04:20,880 --> 00:04:22,880
And then they held organization meetings

139
00:04:22,880 --> 00:04:25,680
over Jitsi or Mumble, which is just so cool.

140
00:04:25,680 --> 00:04:26,800
Those are all great tools.

141
00:04:26,800 --> 00:04:29,220
Yeah, those are all great tools to build an event like this.

142
00:04:29,220 --> 00:04:31,400
And it actually looks like ArchConf 2020

143
00:04:31,400 --> 00:04:33,000
went pretty good for them.

144
00:04:33,000 --> 00:04:35,640
And they had multiple streams, and they got lots of questions

145
00:04:35,640 --> 00:04:36,240
in.

146
00:04:36,240 --> 00:04:38,080
But you know me, Wes.

147
00:04:38,080 --> 00:04:39,600
I winged us a couple of clips.

148
00:04:39,600 --> 00:04:40,400
Oh, you.

149
00:04:40,400 --> 00:04:41,760
I don't even tell you about this.

150
00:04:41,760 --> 00:04:42,680
Sneaky clipper.

151
00:04:42,680 --> 00:04:43,200
I know.

152
00:04:43,200 --> 00:04:45,760
I snuck these in because I just thought it'd be fun

153
00:04:45,760 --> 00:04:46,760
to cover a couple things.

154
00:04:46,760 --> 00:04:48,840
So I got three clips, really quick ones.

155
00:04:48,840 --> 00:04:51,400
The first one here is from GregKH,

156
00:04:51,400 --> 00:04:52,640
and it's just short and sweet.

157
00:04:52,640 --> 00:04:56,240
GregKH is a happy, well, obviously Linus' number two

158
00:04:56,240 --> 00:04:57,000
kernel maintainer.

159
00:04:57,000 --> 00:04:59,640
He's a happy Arch Linux user, and so he

160
00:04:59,640 --> 00:05:02,040
prerecorded a welcome message to the conference.

161
00:05:02,040 --> 00:05:02,760
Hi.

162
00:05:02,760 --> 00:05:07,040
This is Greg Crow Hartman, and welcome to ArchConf 2020.

163
00:05:07,040 --> 00:05:08,960
As a longtime Arch Linux user, I'm

164
00:05:08,960 --> 00:05:10,800
really happy to see this conference happen,

165
00:05:10,800 --> 00:05:12,800
even when we're all stuck at home.

166
00:05:12,800 --> 00:05:14,160
Thanks to all the Arch developers

167
00:05:14,160 --> 00:05:15,880
for maintaining such a great system

168
00:05:15,880 --> 00:05:17,640
that I rely on every day.

169
00:05:17,640 --> 00:05:18,960
Enjoy the conference.

170
00:05:18,960 --> 00:05:20,760
I don't know why, but it just tickles me

171
00:05:20,760 --> 00:05:21,920
that Greg's an Arch user.

172
00:05:21,920 --> 00:05:22,760
Right.

173
00:05:22,760 --> 00:05:24,680
This is so great.

174
00:05:24,680 --> 00:05:28,560
And then Alan McRae, he did an early history of Arch talk.

175
00:05:28,560 --> 00:05:30,480
We'll have the full talk link because there's

176
00:05:30,480 --> 00:05:34,480
a lot of details, including some of the minor developments,

177
00:05:34,480 --> 00:05:38,280
some of the more significant political developments,

178
00:05:38,280 --> 00:05:41,040
like when Pac-Man came along, too, technical developments.

179
00:05:41,040 --> 00:05:42,600
But I captured a bit for us.

180
00:05:42,600 --> 00:05:48,800
So in the beginning, there was crux, and it was good.

181
00:05:48,800 --> 00:05:52,200
Highlights being it's simple package build scripts,

182
00:05:52,200 --> 00:05:57,240
simple configuration, utilities, but there

183
00:05:57,240 --> 00:06:00,160
was no dependency tracking.

184
00:06:00,160 --> 00:06:04,880
So the founder of Arch Linux, Judd, wrote Pac-Man,

185
00:06:04,880 --> 00:06:07,800
and it essentially spawned a distribution.

186
00:06:07,800 --> 00:06:12,360
So beginning in 2002, Pac-Man 1.1 was released,

187
00:06:12,360 --> 00:06:16,400
and then Arch Linux 0.1, codenamed Homer,

188
00:06:16,400 --> 00:06:18,920
was released not far after.

189
00:06:18,920 --> 00:06:20,600
Good quote from the release notes

190
00:06:20,600 --> 00:06:22,640
is the bad news is that you don't get

191
00:06:22,640 --> 00:06:26,520
a pretty interactive installer, so some things have not

192
00:06:26,520 --> 00:06:28,360
changed.

193
00:06:28,360 --> 00:06:30,160
The big selling points at the time

194
00:06:30,160 --> 00:06:33,720
were the I-686 optimization, when

195
00:06:33,720 --> 00:06:37,560
most other distributions were using I-386.

196
00:06:37,560 --> 00:06:41,160
And install once, continuously update,

197
00:06:41,160 --> 00:06:44,040
never have to reinstall policy.

198
00:06:44,040 --> 00:06:45,320
And it being simple.

199
00:06:45,320 --> 00:06:50,360
Now, simple was defined in terms of the packaging

200
00:06:50,360 --> 00:06:54,000
and the tools for administrating the distribution,

201
00:06:54,000 --> 00:06:58,400
not in terms of being simple to use, necessarily.

202
00:06:58,400 --> 00:07:01,880
Alan McRae is the developer, well, of a lot of Arch,

203
00:07:01,880 --> 00:07:03,000
actually.

204
00:07:03,000 --> 00:07:04,680
He maintains the tool chain that you

205
00:07:04,680 --> 00:07:08,160
use to build Arch, like binutils, the GCC packages,

206
00:07:08,160 --> 00:07:12,720
GLibc, Linux API headers, all of its dependencies.

207
00:07:12,720 --> 00:07:13,840
I've never used any of those.

208
00:07:13,840 --> 00:07:15,720
No, no, never.

209
00:07:15,720 --> 00:07:21,920
Package config, you know, those kinds of things make.

210
00:07:21,920 --> 00:07:23,520
So he's got an interesting perspective.

211
00:07:23,520 --> 00:07:26,160
We'll have a link to the entire video in there.

212
00:07:26,160 --> 00:07:29,040
But then further in, there is discussion

213
00:07:29,040 --> 00:07:31,040
about the future of Arch.

214
00:07:31,040 --> 00:07:33,640
They talk about some of the culture changes

215
00:07:33,640 --> 00:07:35,800
that they think need to happen, and then they

216
00:07:35,800 --> 00:07:37,480
talk about some of the tech changes

217
00:07:37,480 --> 00:07:39,560
that they think probably should happen.

218
00:07:39,560 --> 00:07:43,360
And one that caught my attention is faster package turnaround

219
00:07:43,360 --> 00:07:45,600
using new automated technology.

220
00:07:45,600 --> 00:07:49,720
Let's talk about actual future improvements.

221
00:07:49,720 --> 00:07:52,480
One major thing I want to talk about,

222
00:07:52,480 --> 00:07:54,400
and this is also the first bullet point,

223
00:07:54,400 --> 00:07:57,720
is accelerate delayed package updates.

224
00:07:57,720 --> 00:08:01,520
What I mean by that is timely package updates

225
00:08:01,520 --> 00:08:02,960
are our core value.

226
00:08:02,960 --> 00:08:05,320
We are a rolling distro, and users

227
00:08:05,320 --> 00:08:08,120
are expect that our packages are always up to date

228
00:08:08,120 --> 00:08:09,680
and we are rolling fast.

229
00:08:09,680 --> 00:08:13,080
This is really our core value.

230
00:08:13,080 --> 00:08:16,680
Now, some of you may ask why we need to accelerate

231
00:08:16,680 --> 00:08:18,280
and what I mean by that.

232
00:08:18,280 --> 00:08:21,360
The only thing I mean by that is that right now we

233
00:08:21,360 --> 00:08:26,280
don't really have a central way of detecting upstream updates.

234
00:08:26,280 --> 00:08:29,480
So basically, it's a per package maintainer effort

235
00:08:29,480 --> 00:08:33,160
to somehow keep track of upstream sources.

236
00:08:33,160 --> 00:08:34,800
In some areas, it works great.

237
00:08:34,800 --> 00:08:38,840
In some areas, it actually doesn't work out that well.

238
00:08:38,840 --> 00:08:44,880
And sometimes it takes weeks or months and multiple releases

239
00:08:44,880 --> 00:08:50,400
until a user flags a package as out of date and on Arch web.

240
00:08:50,400 --> 00:08:52,240
And then we finally roll an update

241
00:08:52,240 --> 00:08:57,040
because a package maintainer was not really aware maybe of that.

242
00:08:57,040 --> 00:08:59,760
And I don't think this is a people problem,

243
00:08:59,760 --> 00:09:01,800
so we should not start yelling at people

244
00:09:01,800 --> 00:09:04,320
while you're probably keeping track.

245
00:09:04,320 --> 00:09:06,560
But I think this is more like a tooling problem.

246
00:09:06,560 --> 00:09:08,760
We should solve it with technology.

247
00:09:08,760 --> 00:09:11,840
So I've been also lately playing around and toying

248
00:09:11,840 --> 00:09:15,920
with something we call ourselves Sandcrawler.

249
00:09:15,920 --> 00:09:18,960
So this is also something I will raise in the future,

250
00:09:18,960 --> 00:09:22,320
having something technologically integrated

251
00:09:22,320 --> 00:09:25,960
in Arch web which is able to automatically flag

252
00:09:25,960 --> 00:09:28,120
packages as out of date.

253
00:09:28,120 --> 00:09:32,000
And this will also accelerate at the end delayed package

254
00:09:32,000 --> 00:09:35,800
updates, one of our core responsibilities.

255
00:09:35,800 --> 00:09:40,320
Core responsibility, core value, you hear that over and over

256
00:09:40,320 --> 00:09:40,840
again there.

257
00:09:40,840 --> 00:09:42,920
I think that's interesting.

258
00:09:42,920 --> 00:09:45,960
And then also that they want to address this as a technology

259
00:09:45,960 --> 00:09:47,520
problem, not a people problem.

260
00:09:47,520 --> 00:09:48,680
Yeah, I like that approach.

261
00:09:48,680 --> 00:09:50,120
If we can just automate this, that

262
00:09:50,120 --> 00:09:52,880
means there won't be continued people failures.

263
00:09:52,880 --> 00:09:55,160
And I think all of us know that oftentimes these projects

264
00:09:55,160 --> 00:09:57,400
update a lot, or maybe they don't update for years

265
00:09:57,400 --> 00:09:58,760
and then suddenly update.

266
00:09:58,760 --> 00:10:00,880
And if you maintain more than a handful of packages,

267
00:10:00,880 --> 00:10:02,520
that's a lot to keep up with.

268
00:10:02,520 --> 00:10:06,240
There's also talks on Linux memory management at scale,

269
00:10:06,240 --> 00:10:10,240
GamerOS, which is an Arch Linux based gaming OS.

270
00:10:10,240 --> 00:10:14,680
There is a talk about matrix and how to host your matrix

271
00:10:14,680 --> 00:10:16,840
server on Arch.

272
00:10:16,840 --> 00:10:18,480
That's pretty cool.

273
00:10:18,480 --> 00:10:21,920
Packaging Rust applications, rolling your own security team

274
00:10:21,920 --> 00:10:26,160
for fun and profit, not at all it says.

275
00:10:26,160 --> 00:10:27,960
There's a lot of good ones on here.

276
00:10:27,960 --> 00:10:31,600
Oh, one that I'm absolutely going to go back and watch

277
00:10:31,600 --> 00:10:34,640
that I missed is the Arch Linux team Q&A.

278
00:10:34,640 --> 00:10:35,760
I'm really impressed.

279
00:10:35,760 --> 00:10:37,600
They pulled off a really good live event

280
00:10:37,600 --> 00:10:40,200
and the videos got turned around pretty dang quick.

281
00:10:40,200 --> 00:10:41,400
Yeah, I'm impressed with that.

282
00:10:41,400 --> 00:10:42,840
Especially if you haven't done this before,

283
00:10:42,840 --> 00:10:43,960
there's a lot of things that can go wrong.

284
00:10:43,960 --> 00:10:46,280
And in this case, a lot of things that went right.

285
00:10:46,280 --> 00:10:48,160
When we talk about firmwares, a lot of times

286
00:10:48,160 --> 00:10:49,820
you'll hear people talking about the effort

287
00:10:49,820 --> 00:10:52,840
to free the Intel firmware from the management engine

288
00:10:52,840 --> 00:10:55,320
and a lot of the stuff around Intel CPUs.

289
00:10:55,320 --> 00:10:59,760
But the conversation hasn't really covered the AMD CPU side

290
00:10:59,760 --> 00:11:01,000
too much.

291
00:11:01,000 --> 00:11:03,960
And not only are the Ryzen chips just totally dominating

292
00:11:03,960 --> 00:11:06,400
performance, but they seem to be of a lot of interest

293
00:11:06,400 --> 00:11:07,200
to Linux users.

294
00:11:07,200 --> 00:11:12,160
So Ferotics has an article about Project X, which apparently

295
00:11:12,160 --> 00:11:16,080
is someone at Google, Rob Minich?

296
00:11:16,080 --> 00:11:16,920
Ron Minich?

297
00:11:16,920 --> 00:11:19,960
Minich, yeah, who has been one of the original developers

298
00:11:19,960 --> 00:11:21,480
of Core Boot and Linux BIOS in the past

299
00:11:21,480 --> 00:11:23,560
has engaged in this Project X, which

300
00:11:23,560 --> 00:11:27,400
is trying to provide a pure open source support

301
00:11:27,400 --> 00:11:31,480
environment on AMD's Zen platforms.

302
00:11:31,480 --> 00:11:33,960
Yeah, Project X is about X-sizing.

303
00:11:33,960 --> 00:11:36,600
Hey, that's the X. X-sizing binary blobs

304
00:11:36,600 --> 00:11:39,680
from the x86 part of Zen CPUs.

305
00:11:39,680 --> 00:11:41,560
This open source AMD Zen support is

306
00:11:41,560 --> 00:11:46,200
being worked on both for Core Boot and the downstream OrBoot.

307
00:11:46,200 --> 00:11:49,120
That's written in Rust.

308
00:11:49,120 --> 00:11:50,520
I'm sorry, what did you say?

309
00:11:50,520 --> 00:11:52,320
Because I didn't catch that, Wes.

310
00:11:52,320 --> 00:11:55,240
Did you say it was written in Rust?

311
00:11:55,240 --> 00:12:07,080
It's not really all just about that, though.

312
00:12:07,080 --> 00:12:10,240
At OSFC 2020, there was some talks

313
00:12:10,240 --> 00:12:12,360
going on about the open source AMD support,

314
00:12:12,360 --> 00:12:14,360
and that's where we got some of this information.

315
00:12:14,360 --> 00:12:16,080
AMD's system management architect

316
00:12:16,080 --> 00:12:17,520
also said that they'll be talking

317
00:12:17,520 --> 00:12:21,760
about the company's work on their open source BMC firmware

318
00:12:21,760 --> 00:12:25,200
support for their platforms as well.

319
00:12:25,200 --> 00:12:27,320
Yeah, that's the baseboard management controller.

320
00:12:27,320 --> 00:12:29,440
So you know, folks like Facebook and others

321
00:12:29,440 --> 00:12:34,240
using open BMC to run their big fancy racks and servers.

322
00:12:34,240 --> 00:12:36,000
And we have a link to that.

323
00:12:36,000 --> 00:12:37,000
It takes place.

324
00:12:37,000 --> 00:12:38,480
Oh, it hasn't taken place yet.

325
00:12:38,480 --> 00:12:39,980
No, open source firmware conference

326
00:12:39,980 --> 00:12:42,160
coming up at the start of December 1st through the 3rd,

327
00:12:42,160 --> 00:12:42,760
2020.

328
00:12:42,760 --> 00:12:44,880
So we will be getting more information, you're telling me?

329
00:12:44,880 --> 00:12:45,400
Indeed.

330
00:12:45,400 --> 00:12:47,080
Oh, well, you know what I'm going to do?

331
00:12:47,080 --> 00:12:50,160
I'm going to keep an ear ball out for information

332
00:12:50,160 --> 00:12:51,560
that we can clip.

333
00:12:51,560 --> 00:12:53,880
If there's something in there about, I mean, whoa.

334
00:12:53,880 --> 00:12:54,600
I mean, whoa.

335
00:12:54,600 --> 00:12:56,960
Think about it here just for a hot second.

336
00:12:56,960 --> 00:13:01,080
A future where you have a totally, totally open Ryzen

337
00:13:01,080 --> 00:13:05,120
system with drivers built into your kernel.

338
00:13:05,120 --> 00:13:05,640
Right?

339
00:13:05,640 --> 00:13:06,760
I mean, when you think about it too,

340
00:13:06,760 --> 00:13:08,160
there was so long where there just

341
00:13:08,160 --> 00:13:11,080
didn't seem like much hope going on in the core boot area.

342
00:13:11,080 --> 00:13:13,040
And recently, there's been a lot more momentum.

343
00:13:13,040 --> 00:13:14,440
So I'm excited to see this, and I'm

344
00:13:14,440 --> 00:13:16,680
really excited to learn more once these talks are out.

345
00:13:16,680 --> 00:13:22,480
Linode.com slash unplugged, go there to get a $100 60-day

346
00:13:22,480 --> 00:13:24,200
credit towards a new account.

347
00:13:24,200 --> 00:13:25,720
Linode is our server provider.

348
00:13:25,720 --> 00:13:28,200
That's where we deploy our systems.

349
00:13:28,200 --> 00:13:31,000
Whenever we have something from back-end infrastructure

350
00:13:31,000 --> 00:13:34,280
to a tool to something we want to try out for the show,

351
00:13:34,280 --> 00:13:35,720
we're always using Linode.

352
00:13:35,720 --> 00:13:37,320
I just recently was experimenting

353
00:13:37,320 --> 00:13:39,800
with setting up a new VPN server for myself

354
00:13:39,800 --> 00:13:43,400
because I'm messing around with bonding LTE connections.

355
00:13:43,400 --> 00:13:45,520
I was actually talking to Wes about this too.

356
00:13:45,520 --> 00:13:48,880
And there's a really, really comprehensive set

357
00:13:48,880 --> 00:13:50,760
of documentation I discovered on Linode.

358
00:13:50,760 --> 00:13:53,440
And they are completely OK with giving me information

359
00:13:53,440 --> 00:13:56,960
on how to replace the image on a Linode

360
00:13:56,960 --> 00:13:58,840
with my own custom distribution.

361
00:13:58,840 --> 00:14:01,720
I followed their official documentation

362
00:14:01,720 --> 00:14:04,360
on how to re-flash a Linode to my own custom Linux

363
00:14:04,360 --> 00:14:05,120
OS for this.

364
00:14:05,120 --> 00:14:05,840
Isn't that something?

365
00:14:05,840 --> 00:14:07,240
I think it really shows they've been around too.

366
00:14:07,240 --> 00:14:08,880
They didn't just make the top 10 features you

367
00:14:08,880 --> 00:14:09,880
need to be a hosting provider.

368
00:14:09,880 --> 00:14:11,120
They've been in the game a long time,

369
00:14:11,120 --> 00:14:13,520
and they know what actual power tools users like you

370
00:14:13,520 --> 00:14:14,040
might need.

371
00:14:14,040 --> 00:14:15,600
They're Linux users themselves.

372
00:14:15,600 --> 00:14:17,680
And so unlike entry-level hosting services

373
00:14:17,680 --> 00:14:19,960
that will just lock you into this box,

374
00:14:19,960 --> 00:14:22,040
Linode gives you a full back end, access

375
00:14:22,040 --> 00:14:24,440
to anything you want to customize, anything

376
00:14:24,440 --> 00:14:26,160
you need to control your server.

377
00:14:26,160 --> 00:14:28,720
And they also give you that same level of access to things like

378
00:14:28,720 --> 00:14:29,440
DNS.

379
00:14:29,440 --> 00:14:31,320
They have S3-compatible object storage.

380
00:14:31,320 --> 00:14:32,560
They have node balancers.

381
00:14:32,560 --> 00:14:34,560
They started, like Wes was saying, a long time ago,

382
00:14:34,560 --> 00:14:37,840
in 2003, as one of the first companies in cloud computing.

383
00:14:37,840 --> 00:14:39,240
I've followed them for a long time.

384
00:14:39,240 --> 00:14:41,520
They often go to a lot of the same events that I go to.

385
00:14:41,520 --> 00:14:43,020
So I've seen them at Linux Fest.

386
00:14:43,020 --> 00:14:45,720
And they've been a sponsor of a lot of open source projects.

387
00:14:45,720 --> 00:14:47,280
So of course, I've known about them.

388
00:14:47,280 --> 00:14:48,880
But about two years ago, I started

389
00:14:48,880 --> 00:14:50,040
using them very seriously.

390
00:14:50,040 --> 00:14:52,200
And really, just as of a few months ago,

391
00:14:52,200 --> 00:14:54,080
I've gone all in for my business, too,

392
00:14:54,080 --> 00:14:56,760
because I really trust what Linode does here.

393
00:14:56,760 --> 00:14:58,400
They're an independently owned company.

394
00:14:58,400 --> 00:15:00,320
They've been around for a really long time,

395
00:15:00,320 --> 00:15:01,600
and they're not going anywhere.

396
00:15:01,600 --> 00:15:03,760
They've got 11 data centers worldwide.

397
00:15:03,760 --> 00:15:05,360
It's really easy to get started.

398
00:15:05,360 --> 00:15:07,040
It's only $5 a month.

399
00:15:07,040 --> 00:15:09,500
But you could play with a lot more, like the object storage.

400
00:15:09,500 --> 00:15:11,840
Maybe you want to make a super fast website for yourself,

401
00:15:11,840 --> 00:15:14,880
a resume or portfolio, or maybe just a blog.

402
00:15:14,880 --> 00:15:16,400
$5 a month gets you started.

403
00:15:16,400 --> 00:15:19,000
But when you go to linode.com slash unplugged,

404
00:15:19,000 --> 00:15:20,680
you get a $100 credit.

405
00:15:20,680 --> 00:15:22,060
You could really experiment.

406
00:15:22,060 --> 00:15:23,600
You could really test it and really see

407
00:15:23,600 --> 00:15:24,920
what I'm talking about.

408
00:15:24,920 --> 00:15:27,940
Also, keep an eye out for Linode's new Linux security

409
00:15:27,940 --> 00:15:29,720
series with HackerSploit.

410
00:15:29,720 --> 00:15:32,000
All the episodes are available on demand.

411
00:15:32,000 --> 00:15:34,420
And they go into detail on a lot of the basics

412
00:15:34,420 --> 00:15:37,960
around Linux security you need to know for either on-premises

413
00:15:37,960 --> 00:15:40,400
hosting or for a Linode system.

414
00:15:40,400 --> 00:15:42,240
It's like just good fundamentals.

415
00:15:42,240 --> 00:15:43,620
And it's something they worked with.

416
00:15:43,620 --> 00:15:46,080
HackerSploit is an individual who's well-known on YouTube.

417
00:15:46,080 --> 00:15:47,880
He covers a lot of, his name is Alexis,

418
00:15:47,880 --> 00:15:49,880
he covers a lot of security stuff.

419
00:15:49,880 --> 00:15:54,000
And he's done an SSH security essentials, securing Apache,

420
00:15:54,000 --> 00:15:59,140
securing NGINX, a complete guide to UFW,

421
00:15:59,140 --> 00:16:00,640
how to work with sudo, and maybe some

422
00:16:00,640 --> 00:16:03,340
of the more advanced things you can do with sudo.

423
00:16:03,340 --> 00:16:05,280
He's done guides for all of that.

424
00:16:05,280 --> 00:16:07,600
And you can check that out on Linode's blog.

425
00:16:07,600 --> 00:16:08,840
That's something worth just checking out,

426
00:16:08,840 --> 00:16:11,100
because it's good to know just how to do this stuff

427
00:16:11,100 --> 00:16:12,560
and implement it correctly.

428
00:16:12,560 --> 00:16:15,120
But you can learn all of this with $100 credit.

429
00:16:15,120 --> 00:16:17,120
This is a great opportunity to learn, too.

430
00:16:17,120 --> 00:16:18,920
Linode.com slash unplugged.

431
00:16:18,920 --> 00:16:20,920
Go there, get that $100 60-day credit,

432
00:16:20,920 --> 00:16:22,360
and you support the show.

433
00:16:22,360 --> 00:16:24,720
Linode.com slash unplugged.

434
00:16:24,720 --> 00:16:29,680
Do you remember when we talked about Linux

435
00:16:29,680 --> 00:16:32,280
mint breaking the Chromium snap?

436
00:16:32,280 --> 00:16:34,880
Just the whole experience was real bad for the end user.

437
00:16:34,880 --> 00:16:38,800
Somehow that was actually last June, June 30th or so,

438
00:16:38,800 --> 00:16:41,400
episode 360 of this year program.

439
00:16:41,400 --> 00:16:43,200
Explain the logic to me here, Drew, because to me,

440
00:16:43,200 --> 00:16:44,800
it seems like this is something they should have fixed

441
00:16:44,800 --> 00:16:46,080
before they broke it in the first place.

442
00:16:46,080 --> 00:16:48,800
And I know I could sit here and I could give them accolades

443
00:16:48,800 --> 00:16:51,480
for building their own version of Chromium and packaging it

444
00:16:51,480 --> 00:16:53,560
up and bundling in the IPTV player.

445
00:16:53,560 --> 00:16:55,280
But from where I sit, it seems like this

446
00:16:55,280 --> 00:16:57,920
should have been done, maybe the old saying,

447
00:16:57,920 --> 00:17:01,920
you fix the barn door before the horses come home and not after.

448
00:17:01,920 --> 00:17:02,840
You're right.

449
00:17:02,840 --> 00:17:05,720
I was not on board with their decision

450
00:17:05,720 --> 00:17:10,160
to just completely rip out snaps and make it devilishly hard

451
00:17:10,160 --> 00:17:13,720
to get them running again if you needed stuff that was snapped.

452
00:17:13,720 --> 00:17:15,640
I thought it was a bad decision.

453
00:17:15,640 --> 00:17:17,280
I still think it was a bad decision.

454
00:17:17,280 --> 00:17:20,080
And this is a little bit too little too late.

455
00:17:20,080 --> 00:17:23,240
I do like what the mint team does in general,

456
00:17:23,240 --> 00:17:25,680
but that was not their finest hour.

457
00:17:25,680 --> 00:17:27,640
Now, I know you're a big mint user there, Wes.

458
00:17:27,640 --> 00:17:28,720
I know you use it on all your system.

459
00:17:28,720 --> 00:17:29,760
You've used it for years.

460
00:17:29,760 --> 00:17:31,360
I run it right now on your laptop.

461
00:17:31,360 --> 00:17:33,840
You know, actually, I have used it a fair amount.

462
00:17:33,840 --> 00:17:36,400
I think it's still running on at least one of my family's

463
00:17:36,400 --> 00:17:37,000
computers.

464
00:17:37,000 --> 00:17:39,480
And most recently, actually since June

465
00:17:39,480 --> 00:17:42,800
and since we've played around a little bit with the 20 release,

466
00:17:42,800 --> 00:17:46,200
I was using it as a gaming PC just to try things out.

467
00:17:46,200 --> 00:17:46,720
Really?

468
00:17:46,720 --> 00:17:47,200
Yeah.

469
00:17:47,200 --> 00:17:48,720
So I have been using it.

470
00:17:48,720 --> 00:17:50,960
I did find it interesting they have had to allocate some

471
00:17:50,960 --> 00:17:52,040
resources here.

472
00:17:52,040 --> 00:17:53,280
So they weren't doing no work.

473
00:17:53,280 --> 00:17:56,840
They write that they've set up a new Ryzen 9 3900 CPU setup,

474
00:17:56,840 --> 00:18:00,200
128 gigs of RAM and NVMe disks just to get

475
00:18:00,200 --> 00:18:02,360
the build times under an hour.

476
00:18:02,360 --> 00:18:05,800
So not trivial, and they do thank folks for their patience.

477
00:18:05,800 --> 00:18:07,100
So I think they acknowledged, too,

478
00:18:07,100 --> 00:18:10,000
that it has probably been longer than anyone would like.

479
00:18:10,000 --> 00:18:10,880
Yeah, OK.

480
00:18:10,880 --> 00:18:13,920
I mean, what's all this hoopla around this IPTV player

481
00:18:13,920 --> 00:18:16,800
where people are saying they're wasting resources on that, too?

482
00:18:16,800 --> 00:18:17,920
What's the deal with that?

483
00:18:17,920 --> 00:18:19,240
I think it's just a little odd.

484
00:18:19,240 --> 00:18:21,960
Folks thought, you know, Clem taking time out

485
00:18:21,960 --> 00:18:24,760
to work on this IPTV player and sort of talk about it

486
00:18:24,760 --> 00:18:26,880
in a casual way where it's not clear if it's really

487
00:18:26,880 --> 00:18:30,120
going to get continued or if it'll be included in Mint.

488
00:18:30,120 --> 00:18:32,520
No problems with it existing, but it

489
00:18:32,520 --> 00:18:34,560
felt like a weird part to be part of the monthly Mint

490
00:18:34,560 --> 00:18:35,280
update.

491
00:18:35,280 --> 00:18:37,480
Don't let this happen to you.

492
00:18:37,480 --> 00:18:40,140
I think you just became our Mint correspondent,

493
00:18:40,140 --> 00:18:42,720
because you're a big Mint user.

494
00:18:42,720 --> 00:18:45,020
I shouldn't poke fun, because I know people that use it,

495
00:18:45,020 --> 00:18:45,760
and they love it.

496
00:18:45,760 --> 00:18:48,200
And I actually really respect what Clem and his team do.

497
00:18:48,200 --> 00:18:49,560
So I need to make that disclosure.

498
00:18:49,560 --> 00:18:51,740
But sometimes I just got to have a little fun at it,

499
00:18:51,740 --> 00:18:55,920
because this was a problem that didn't need to happen.

500
00:18:55,920 --> 00:18:59,740
You could have even punted this action for one release

501
00:18:59,740 --> 00:19:02,080
while you worked on this and then rolled in your solution

502
00:19:02,080 --> 00:19:05,120
to the next release and just eat the snapped version

503
00:19:05,120 --> 00:19:06,640
for one release.

504
00:19:06,640 --> 00:19:09,160
But it felt like emotions got involved here.

505
00:19:09,160 --> 00:19:11,200
It was a reaction without much planning.

506
00:19:11,200 --> 00:19:16,640
But I have to say, I'm not receiving the feedback.

507
00:19:16,640 --> 00:19:18,280
Clem and his team are receiving.

508
00:19:18,280 --> 00:19:22,140
Maybe their users have messaged to him very clearly

509
00:19:22,140 --> 00:19:23,880
they don't want snaps.

510
00:19:23,880 --> 00:19:26,080
It's not outside the realm of possibility.

511
00:19:26,080 --> 00:19:31,480
We had that chat with the Uno platform last week,

512
00:19:31,480 --> 00:19:34,840
and they released this tool to take Windows applications

513
00:19:34,840 --> 00:19:36,920
and build native versions for Linux.

514
00:19:36,920 --> 00:19:39,520
And the number one feedback they got from the Linux community

515
00:19:39,520 --> 00:19:41,280
was, don't use Snap.

516
00:19:41,280 --> 00:19:42,240
Isn't that something?

517
00:19:42,240 --> 00:19:44,360
And so it is possible that the Mint team was just

518
00:19:44,360 --> 00:19:46,640
receiving a lot of feedback saying, don't use Snap.

519
00:19:46,640 --> 00:19:47,600
Snap, snap back.

520
00:19:47,600 --> 00:19:52,760
And this is an interesting realization

521
00:19:52,760 --> 00:19:56,720
of what we think is just a squeaky wheel minority,

522
00:19:56,720 --> 00:19:59,000
but it turns out to have real world ramifications.

523
00:19:59,000 --> 00:20:01,720
So you've got this larger and larger group

524
00:20:01,720 --> 00:20:05,360
of probably more sophisticated Linux users

525
00:20:05,360 --> 00:20:08,280
that don't like Snap packages for various reasons.

526
00:20:08,280 --> 00:20:10,640
And they seem to advocate and try

527
00:20:10,640 --> 00:20:13,320
to persuade companies that are developing and deploying

528
00:20:13,320 --> 00:20:16,540
snaps to use other packaging formats.

529
00:20:16,540 --> 00:20:19,560
And you could see how a company like Adobe comes along

530
00:20:19,560 --> 00:20:22,080
and say they want to snap up Photoshop,

531
00:20:22,080 --> 00:20:25,120
and they release Photoshop, and they get several thousand

532
00:20:25,120 --> 00:20:28,040
people telling them, hey, idiots, don't use this.

533
00:20:28,040 --> 00:20:28,880
Use App Image.

534
00:20:28,880 --> 00:20:29,560
Don't use this.

535
00:20:29,560 --> 00:20:30,800
Use Flatpak.

536
00:20:30,800 --> 00:20:33,400
Each company is going to receive that feedback differently,

537
00:20:33,400 --> 00:20:35,440
and they're going to process that differently.

538
00:20:35,440 --> 00:20:37,840
And do they have developers on staff there,

539
00:20:37,840 --> 00:20:40,560
or folks in management who understand the Linux ecosystem?

540
00:20:40,560 --> 00:20:41,240
Yeah, maybe.

541
00:20:41,240 --> 00:20:47,360
I have to be frank with you is I don't see any indication

542
00:20:47,360 --> 00:20:51,800
from Canonical that they recognize that this is an issue

543
00:20:51,800 --> 00:20:53,720
and that they're even beginning to address it.

544
00:20:53,720 --> 00:20:55,840
I think they have written it off as, well,

545
00:20:55,840 --> 00:20:57,600
the people that always told us Launchpad

546
00:20:57,600 --> 00:21:00,040
needs to be open source, the people that always were giving

547
00:21:00,040 --> 00:21:02,740
us a hard time for Upstart, the people who hated Unity,

548
00:21:02,740 --> 00:21:05,240
now look at all these people using Unity.

549
00:21:05,240 --> 00:21:08,000
I think this, over the years, this mentality

550
00:21:08,000 --> 00:21:10,840
has developed where they just have created a thick skin,

551
00:21:10,840 --> 00:21:13,040
and they don't listen to all these detractors.

552
00:21:13,040 --> 00:21:15,740
Well, I think they also don't necessarily feel

553
00:21:15,740 --> 00:21:17,040
like they're designing Snap.

554
00:21:17,040 --> 00:21:19,640
They make it Snap for the Linux desktop users who don't know

555
00:21:19,640 --> 00:21:20,760
what package managers are.

556
00:21:20,760 --> 00:21:22,720
So there's sort of like just two different camps not

557
00:21:22,720 --> 00:21:23,600
talking to each other.

558
00:21:23,600 --> 00:21:24,120
Right.

559
00:21:24,120 --> 00:21:26,220
The issue is I can tell you that I

560
00:21:26,220 --> 00:21:27,880
have been told in confidence, and there's

561
00:21:27,880 --> 00:21:29,960
other instances which I can point to publicly,

562
00:21:29,960 --> 00:21:32,200
but I have been told more so in confidence

563
00:21:32,200 --> 00:21:35,440
that it is a item of feedback that the companies are

564
00:21:35,440 --> 00:21:36,120
struggling with.

565
00:21:36,120 --> 00:21:37,760
Like, you know how this works.

566
00:21:37,760 --> 00:21:39,420
For anybody that works in a business that

567
00:21:39,420 --> 00:21:42,080
puts anything out publicly, negative feedback

568
00:21:42,080 --> 00:21:43,440
gets a lot of attention.

569
00:21:43,440 --> 00:21:47,000
It gets in the Slack thread, and people are discussing it,

570
00:21:47,000 --> 00:21:48,840
and then the boss sees it, and he's

571
00:21:48,840 --> 00:21:50,560
got to get somebody on it to address it.

572
00:21:50,560 --> 00:21:52,680
It becomes this snowball.

573
00:21:52,680 --> 00:21:54,080
And I am telling you, I have heard

574
00:21:54,080 --> 00:21:55,960
from multiple developers in confidence,

575
00:21:55,960 --> 00:21:58,440
and I have heard from some developers on the record

576
00:21:58,440 --> 00:22:00,400
that this is an issue for them when they package

577
00:22:00,400 --> 00:22:01,960
their application as Snaps.

578
00:22:01,960 --> 00:22:04,040
And the problem is that Snaps are

579
00:22:04,040 --> 00:22:06,560
very attractive from a corporate standpoint.

580
00:22:06,560 --> 00:22:08,680
You're a business, and you can have a relationship

581
00:22:08,680 --> 00:22:09,360
with Canonical.

582
00:22:09,360 --> 00:22:10,780
You can do a business-to-business

583
00:22:10,780 --> 00:22:13,640
relationship, and you can distribute your application

584
00:22:13,640 --> 00:22:16,760
and package it in a single outlet that

585
00:22:16,760 --> 00:22:19,440
is very simple to install on almost all

586
00:22:19,440 --> 00:22:21,000
the major distributions out there.

587
00:22:21,000 --> 00:22:23,800
It's extremely attractive from a developer standpoint,

588
00:22:23,800 --> 00:22:26,120
and I actually can appreciate the value

589
00:22:26,120 --> 00:22:29,080
that Canonical brings to this process.

590
00:22:29,080 --> 00:22:30,880
But the people who are Flatpacker app

591
00:22:30,880 --> 00:22:33,840
images advocates, they couldn't care less

592
00:22:33,840 --> 00:22:36,280
about the business-to-business relationship.

593
00:22:36,280 --> 00:22:38,920
They could give two craps about it.

594
00:22:38,920 --> 00:22:41,680
And it really has shown me with these conversations

595
00:22:41,680 --> 00:22:44,080
that I've had, and with the conversation we had last week

596
00:22:44,080 --> 00:22:46,160
with the UNO platform, and what we were just

597
00:22:46,160 --> 00:22:51,440
talking about with Mint, it seems that using Snaps

598
00:22:51,440 --> 00:22:55,040
has become a liability.

599
00:22:55,040 --> 00:22:57,360
And I don't think Canonical is addressing it.

600
00:22:57,360 --> 00:23:00,520
I don't think they are fully appreciating the scope of it.

601
00:23:00,520 --> 00:23:03,400
And the worst part is, I think they're probably

602
00:23:03,400 --> 00:23:05,800
about eight months too late in addressing it,

603
00:23:05,800 --> 00:23:07,280
and the momentum is there now.

604
00:23:07,280 --> 00:23:10,200
And there's really nothing they can do about it at this point.

605
00:23:10,200 --> 00:23:13,000
And it is unfortunate, because what I see developing here,

606
00:23:13,000 --> 00:23:15,520
and I don't have any pleasure in saying this,

607
00:23:15,520 --> 00:23:17,840
because I'm personal friends with Poppy and Wimpy,

608
00:23:17,840 --> 00:23:19,560
and I don't like saying this, but I

609
00:23:19,560 --> 00:23:20,920
have to be honest with you.

610
00:23:20,920 --> 00:23:23,960
What I see developing here is a Betamax situation,

611
00:23:23,960 --> 00:23:26,240
where there is a lot of technological advantages

612
00:23:26,240 --> 00:23:27,020
to a Snap.

613
00:23:27,020 --> 00:23:29,380
There's a lot of business advantages to a Snap.

614
00:23:29,380 --> 00:23:31,560
There's a distribution advantage to a Snap.

615
00:23:31,560 --> 00:23:34,280
There's a lot of upsides, but it still

616
00:23:34,280 --> 00:23:36,040
isn't the one that wins out.

617
00:23:36,040 --> 00:23:39,560
And I think Canonical is too late to address it.

618
00:23:39,560 --> 00:23:41,600
And I wish I could share with you some of the stories

619
00:23:41,600 --> 00:23:43,920
that I have heard via email from developers.

620
00:23:43,920 --> 00:23:46,000
So you're just going to have to take my word for it.

621
00:23:46,000 --> 00:23:48,200
I have no motivation to say this otherwise,

622
00:23:48,200 --> 00:23:49,920
and I don't feel like it's being addressed.

623
00:23:49,920 --> 00:23:52,280
And here we see Mint now, and I've come on the air,

624
00:23:52,280 --> 00:23:54,400
and I've said, they're wrong for doing it this way.

625
00:23:54,400 --> 00:23:57,320
But for all I know, because I haven't heard from that team,

626
00:23:57,320 --> 00:23:59,240
they don't communicate with the media.

627
00:23:59,240 --> 00:24:02,920
For all I know, they have gotten pushback from their user base,

628
00:24:02,920 --> 00:24:04,640
and that's why they've taken this action.

629
00:24:04,640 --> 00:24:07,320
But either way, they seem to be on the way

630
00:24:07,320 --> 00:24:08,560
of fixing and addressing it.

631
00:24:08,560 --> 00:24:11,060
But like you said, I think it's too little too late.

632
00:24:11,060 --> 00:24:12,640
I think you're right in a lot of ways.

633
00:24:12,640 --> 00:24:17,000
But one thing that I really see is a parallel to the way

634
00:24:17,000 --> 00:24:19,080
that Pulse Audio rolled out.

635
00:24:19,080 --> 00:24:23,280
It wasn't ready, and people started shipping it.

636
00:24:23,280 --> 00:24:27,360
In the same vein, Snap I still don't think is quite ready.

637
00:24:27,360 --> 00:24:29,640
And Ubuntu is shipping it by default,

638
00:24:29,640 --> 00:24:32,320
and even pushing people towards using it for things

639
00:24:32,320 --> 00:24:35,640
like Chromium and other software that sometimes they

640
00:24:35,640 --> 00:24:38,280
can only get as a Snap.

641
00:24:38,280 --> 00:24:40,480
And the unfortunate thing here is

642
00:24:40,480 --> 00:24:43,440
it's going to be the same thing that we saw with Pulse Audio,

643
00:24:43,440 --> 00:24:45,180
where people were like, oh, I hate this.

644
00:24:45,180 --> 00:24:46,440
It doesn't work right.

645
00:24:46,440 --> 00:24:50,800
And even though it's 10 years later,

646
00:24:50,800 --> 00:24:53,960
and Pulse Audio works great, people still

647
00:24:53,960 --> 00:24:58,680
have that same bitter taste from when they first used it,

648
00:24:58,680 --> 00:25:01,040
and it wasn't perfect.

649
00:25:01,040 --> 00:25:07,080
So even if Ubuntu and Canonical fixes it tomorrow,

650
00:25:07,080 --> 00:25:08,840
you're right, it's eight months too late.

651
00:25:08,840 --> 00:25:11,840
They pushed it too soon, and we're never

652
00:25:11,840 --> 00:25:17,840
going to quite get that feeling out where people just

653
00:25:17,840 --> 00:25:21,040
don't like it because they had a bad experience before.

654
00:25:21,040 --> 00:25:24,040
And there's also the central app store aspect

655
00:25:24,040 --> 00:25:25,560
that seems to be unappealing.

656
00:25:25,560 --> 00:25:27,520
Yeah, I mean, there's lots of stuff

657
00:25:27,520 --> 00:25:31,760
to talk about there about why it's not perfect,

658
00:25:31,760 --> 00:25:34,440
and it could have been so good.

659
00:25:34,440 --> 00:25:36,880
They could have taken a few cues from Flatpak.

660
00:25:36,880 --> 00:25:39,440
They could have done it their way

661
00:25:39,440 --> 00:25:43,160
and really tweaked out the bugs to where fonts worked correctly,

662
00:25:43,160 --> 00:25:46,480
where they don't take forever to load, all of that

663
00:25:46,480 --> 00:25:49,820
before actually starting pushing it into the operating system

664
00:25:49,820 --> 00:25:50,320
itself.

665
00:25:50,320 --> 00:25:51,240
But yeah, that's fair.

666
00:25:51,240 --> 00:25:53,120
I can see part of what you're saying there.

667
00:25:53,120 --> 00:25:56,840
I don't know if the font stuff and the theme stuff,

668
00:25:56,840 --> 00:25:59,360
I mean, it definitely registers for us,

669
00:25:59,360 --> 00:26:04,560
but in average user deployments, corporate deployments,

670
00:26:04,560 --> 00:26:07,240
educational deployments, I think they're

671
00:26:07,240 --> 00:26:09,280
pretty used to applications just looking like crap.

672
00:26:09,280 --> 00:26:10,680
I don't think that was an issue.

673
00:26:10,680 --> 00:26:12,520
I think it just came down to two problems,

674
00:26:12,520 --> 00:26:14,600
and they're on the way to fix one of them.

675
00:26:14,600 --> 00:26:18,200
Problem number one is load time.

676
00:26:18,200 --> 00:26:21,860
Problem number two is the centralized app store,

677
00:26:21,860 --> 00:26:24,560
and that's where AppImage and Flatpak are

678
00:26:24,560 --> 00:26:27,120
considered superior by some.

679
00:26:27,120 --> 00:26:30,400
I will note it doesn't seem to be by developers generally.

680
00:26:30,400 --> 00:26:34,200
It is by end users who prefer to consume the application

681
00:26:34,200 --> 00:26:36,640
in the way they like and deploy it,

682
00:26:36,640 --> 00:26:39,280
or it is projects who want to host their own repositories,

683
00:26:39,280 --> 00:26:40,800
like elementary OS.

684
00:26:40,800 --> 00:26:44,040
But application start time may be

685
00:26:44,040 --> 00:26:45,880
on the path to getting fixed.

686
00:26:45,880 --> 00:26:48,200
My understanding is that future snaps

687
00:26:48,200 --> 00:26:50,680
may be using LZO compression, which

688
00:26:50,680 --> 00:26:53,760
means the snap file sizes themselves will be larger,

689
00:26:53,760 --> 00:26:56,640
but the opening time and the CPU load required

690
00:26:56,640 --> 00:26:58,640
to open those snaps will be reduced.

691
00:26:58,640 --> 00:27:00,680
Faster to actually get the application up into memory

692
00:27:00,680 --> 00:27:01,400
and start it.

693
00:27:01,400 --> 00:27:03,880
Yeah, so that could be good, but it

694
00:27:03,880 --> 00:27:06,000
would have been, I don't know, it's

695
00:27:06,000 --> 00:27:08,840
a hard technical challenge, so easy for me to say,

696
00:27:08,840 --> 00:27:10,920
but would have been good, like I was saying,

697
00:27:10,920 --> 00:27:13,880
eight, nine months ago at the beginning of 2020,

698
00:27:13,880 --> 00:27:16,200
not towards the end of 2020.

699
00:27:16,200 --> 00:27:20,440
And I worry that the reputational damage is done,

700
00:27:20,440 --> 00:27:25,040
not in terms of what businesses or developers will perceive,

701
00:27:25,040 --> 00:27:27,360
like companies like Adobe who may be someday

702
00:27:27,360 --> 00:27:29,920
looking to actually launch applications on Linux.

703
00:27:29,920 --> 00:27:33,440
I don't think these issues are going to surface for them.

704
00:27:33,440 --> 00:27:35,040
The way it will surface for them,

705
00:27:35,040 --> 00:27:38,240
based on the feedback in the conversations I've been having,

706
00:27:38,240 --> 00:27:41,720
is once they launch, they get this tidal wave

707
00:27:41,720 --> 00:27:45,120
of negative feedback about how they've chosen to package.

708
00:27:45,120 --> 00:27:47,280
And it kind of sucks for Canonical,

709
00:27:47,280 --> 00:27:49,760
because in some cases, Canonical nurse

710
00:27:49,760 --> 00:27:52,160
maids these companies in the Linux community.

711
00:27:52,160 --> 00:27:54,440
They're playing the role of host,

712
00:27:54,440 --> 00:27:56,040
and they're kind of introducing them

713
00:27:56,040 --> 00:28:00,120
on how to target for Linux, what to say, how to message,

714
00:28:00,120 --> 00:28:01,440
how to work with Linux.

715
00:28:01,440 --> 00:28:04,000
Please, help here, we'll help you make these apps for Linux.

716
00:28:04,000 --> 00:28:06,360
And then you just get bit when you step in the pool.

717
00:28:06,360 --> 00:28:08,640
Yeah, and then they release, and everybody's like, no, no, no,

718
00:28:08,640 --> 00:28:09,720
no, no, no, we don't like snaps.

719
00:28:09,720 --> 00:28:12,240
And then that company is forced to kind of distance themselves

720
00:28:12,240 --> 00:28:14,600
from that, and Canonical has invested all this time

721
00:28:14,600 --> 00:28:16,600
in getting the application actually over to Linux

722
00:28:16,600 --> 00:28:17,440
with them.

723
00:28:17,440 --> 00:28:20,920
And so it's kind of a lose-lose situation for both Canonical

724
00:28:20,920 --> 00:28:22,560
and for the developer.

725
00:28:22,560 --> 00:28:24,920
And I just feel like there has to be something

726
00:28:24,920 --> 00:28:28,080
that could be done there, or it's just simply not

727
00:28:28,080 --> 00:28:29,600
going to get addressed.

728
00:28:29,600 --> 00:28:31,640
And it is what it is.

729
00:28:31,640 --> 00:28:33,920
But it is something that I've been watching,

730
00:28:33,920 --> 00:28:35,440
and kind of as the year develops,

731
00:28:35,440 --> 00:28:37,880
getting a little concerned about because I

732
00:28:37,880 --> 00:28:39,640
think it has a lot of nice advantages,

733
00:28:39,640 --> 00:28:43,600
especially on the server side, and especially for developers.

734
00:28:43,600 --> 00:28:46,080
But for that, we'll just have to wait

735
00:28:46,080 --> 00:28:50,280
and see how things develop, you know, moving right along.

736
00:28:50,280 --> 00:28:54,560
So I wanted to get everyone's take on Starlink.

737
00:28:54,560 --> 00:28:56,480
I'm getting kind of excited about it here

738
00:28:56,480 --> 00:29:01,880
because it is in open beta in the Pacific Northwest.

739
00:29:01,880 --> 00:29:05,120
If you're in Washington state and a few other areas

740
00:29:05,120 --> 00:29:09,560
around us, you can actually get in on the Starlink beta.

741
00:29:09,560 --> 00:29:12,480
And when technologies like this start to roll around,

742
00:29:12,480 --> 00:29:14,520
one of the first things I wonder about

743
00:29:14,520 --> 00:29:17,240
is, what's the Linux support story going to be?

744
00:29:17,240 --> 00:29:20,160
I'm sure Starlink runs this whole thing on Linux, right?

745
00:29:20,160 --> 00:29:23,000
I'm like, I'm sure SpaceX is deploying these things running

746
00:29:23,000 --> 00:29:23,680
Linux.

747
00:29:23,680 --> 00:29:24,720
Satellites are running Linux.

748
00:29:24,720 --> 00:29:26,520
The systems that are launching it are running Linux.

749
00:29:26,520 --> 00:29:29,160
Seems like a darn good bet, at least from what we know.

750
00:29:29,160 --> 00:29:30,280
Yeah.

751
00:29:30,280 --> 00:29:32,400
But the question is, where will we

752
00:29:32,400 --> 00:29:37,040
be in terms of support for Linux as, like, end users

753
00:29:37,040 --> 00:29:39,040
on the Starlink network?

754
00:29:39,040 --> 00:29:42,160
And it looks like some of the early data from the beta

755
00:29:42,160 --> 00:29:43,960
testers is pretty positive.

756
00:29:43,960 --> 00:29:46,320
I mean, you've got to remember, this is beta,

757
00:29:46,320 --> 00:29:49,040
so it's not even final grade production here.

758
00:29:49,040 --> 00:29:52,600
But people are getting pretty good ping times

759
00:29:52,600 --> 00:29:55,840
in the 20s to 40s milliseconds.

760
00:29:55,840 --> 00:29:58,520
They're getting pretty good bandwidth, much better

761
00:29:58,520 --> 00:30:02,000
than you'd get on an average cellular connection.

762
00:30:02,000 --> 00:30:04,000
In some cases, 160 megabits.

763
00:30:04,000 --> 00:30:06,040
In other cases, more like 40 megabits.

764
00:30:06,040 --> 00:30:08,120
It all kind of depends, it seems.

765
00:30:08,120 --> 00:30:09,960
It's getting really close.

766
00:30:09,960 --> 00:30:11,880
And I just kind of wanted to take the temperature

767
00:30:11,880 --> 00:30:14,640
of the room and ask people what they think about.

768
00:30:14,640 --> 00:30:17,640
Because I'm obviously looking forward to it as a way

769
00:30:17,640 --> 00:30:20,160
to kind of expand my remote connectivity.

770
00:30:20,160 --> 00:30:21,660
Yeah, you're only a little excited.

771
00:30:21,660 --> 00:30:25,120
But I think remote users, like mobile users like myself,

772
00:30:25,120 --> 00:30:27,840
are going to be one of the later users that they get to.

773
00:30:27,840 --> 00:30:29,600
Colonel, I know you and I have talked about this a little bit

774
00:30:29,600 --> 00:30:30,840
during the Leplug.

775
00:30:30,840 --> 00:30:32,680
What are your current thoughts on it?

776
00:30:32,680 --> 00:30:34,720
I think it's going to be interesting to see

777
00:30:34,720 --> 00:30:38,960
what happens as they roll it out of beta.

778
00:30:38,960 --> 00:30:42,920
Because I know for certain types of cellular technologies,

779
00:30:42,920 --> 00:30:45,880
when they initially set it up as a beta network,

780
00:30:45,880 --> 00:30:47,040
everything worked great.

781
00:30:47,040 --> 00:30:49,720
Once they got the load on the network,

782
00:30:49,720 --> 00:30:53,920
things were still working, but not as good as in beta.

783
00:30:53,920 --> 00:30:55,520
So I think it'll be interesting to see

784
00:30:55,520 --> 00:30:58,120
what happens when it becomes a nationwide,

785
00:30:58,120 --> 00:31:02,680
as well as when it becomes a more commonplace thing

786
00:31:02,680 --> 00:31:04,320
for people to be using.

787
00:31:04,320 --> 00:31:08,160
And how they handle that load, as well as

788
00:31:08,160 --> 00:31:10,280
what are the privacy implications of this.

789
00:31:10,280 --> 00:31:12,520
Because it is a SAT network.

790
00:31:12,520 --> 00:31:15,280
So unlike a traditional SAT network,

791
00:31:15,280 --> 00:31:18,920
which broadcasts to a large area on the ground,

792
00:31:18,920 --> 00:31:20,800
my understanding with Starlink is

793
00:31:20,800 --> 00:31:24,240
that it's a lot of small satellites broadcasting

794
00:31:24,240 --> 00:31:25,560
to smaller areas.

795
00:31:25,560 --> 00:31:27,360
So is there any kind of tracking involved,

796
00:31:27,360 --> 00:31:29,040
just like there is with cell phones?

797
00:31:29,040 --> 00:31:34,400
Are they going to do any kind of blocks like some home ISPs do?

798
00:31:34,400 --> 00:31:36,360
It's also going to be interesting to see,

799
00:31:36,360 --> 00:31:37,840
especially because a lot of people

800
00:31:37,840 --> 00:31:40,560
are going to be looking at this for RV usage, what kind

801
00:31:40,560 --> 00:31:44,080
of power usage does the receiver use?

802
00:31:44,080 --> 00:31:46,040
And so I think there's a lot of questions

803
00:31:46,040 --> 00:31:48,880
that we won't really know until it either gets out

804
00:31:48,880 --> 00:31:51,840
of beta or becomes much more widely adopted.

805
00:31:51,840 --> 00:31:55,040
I think that the biggest insights we've gotten so far

806
00:31:55,040 --> 00:31:58,040
is an article over on Ars Technica.

807
00:31:58,040 --> 00:32:01,600
They worked with an individual known as wandering coder.

808
00:32:01,600 --> 00:32:03,160
So he's already speaking to me.

809
00:32:03,160 --> 00:32:03,840
Interesting.

810
00:32:03,840 --> 00:32:05,600
And he tested it out in a few locations,

811
00:32:05,600 --> 00:32:08,280
including some heavily covered tree areas and some that

812
00:32:08,280 --> 00:32:09,840
were more open to the sky.

813
00:32:09,840 --> 00:32:14,520
And at one point, he got 120 megabits download and an upload

814
00:32:14,520 --> 00:32:18,640
of 12 megabits with an average latency of 37 milliseconds.

815
00:32:18,640 --> 00:32:20,760
That's fantastic for satellite internet.

816
00:32:20,760 --> 00:32:23,400
That is absolutely fantastic.

817
00:32:23,400 --> 00:32:27,240
And he did move his item around for these tests.

818
00:32:27,240 --> 00:32:29,760
The beta for Starlink right now strongly

819
00:32:29,760 --> 00:32:32,960
encourages you to only use it at the registered location.

820
00:32:32,960 --> 00:32:35,160
So that's why I say I think maybe it'll

821
00:32:35,160 --> 00:32:38,000
be a little bit until individuals like myself

822
00:32:38,000 --> 00:32:39,520
are using it on their buses.

823
00:32:39,520 --> 00:32:40,320
Right.

824
00:32:40,320 --> 00:32:42,960
These are lower satellites that are constantly

825
00:32:42,960 --> 00:32:43,920
moving and switching.

826
00:32:43,920 --> 00:32:45,800
So if you already have to keep track of that

827
00:32:45,800 --> 00:32:47,320
and you're driving your RV around,

828
00:32:47,320 --> 00:32:48,480
that's a lot of moving parts.

829
00:32:48,480 --> 00:32:49,520
But here's a little comparison.

830
00:32:49,520 --> 00:32:51,640
So in some of the tests that they talked about here

831
00:32:51,640 --> 00:32:55,400
on Ars Technica, they were getting like an average

832
00:32:55,400 --> 00:32:57,680
when you look at it, maybe like a 42 milliseconds,

833
00:32:57,680 --> 00:32:59,680
let's say, latency.

834
00:32:59,680 --> 00:33:01,640
42 milliseconds latency is not as good

835
00:33:01,640 --> 00:33:04,640
as you're going to get on a nice high speed home broadband

836
00:33:04,640 --> 00:33:05,800
connection.

837
00:33:05,800 --> 00:33:10,360
But compared to VistaStat or VistaStat or HughesNet,

838
00:33:10,360 --> 00:33:14,680
you're looking at like a 600 millisecond difference.

839
00:33:14,680 --> 00:33:17,920
HughesNet is in the same testing area,

840
00:33:17,920 --> 00:33:20,800
has a latency of 728 millisecond.

841
00:33:20,800 --> 00:33:24,120
And VistaStat has 643 milliseconds.

842
00:33:24,120 --> 00:33:25,360
I think that's the biggest win.

843
00:33:25,360 --> 00:33:27,440
I mean, Starlink may also be faster in terms of throughput,

844
00:33:27,440 --> 00:33:29,120
but you can get some decent throughput

845
00:33:29,120 --> 00:33:31,440
if the latency isn't a problem on some existing satellite

846
00:33:31,440 --> 00:33:31,920
providers.

847
00:33:31,920 --> 00:33:34,920
But just because Starlink is so much closer to you,

848
00:33:34,920 --> 00:33:38,320
orbiting just closer to the Earth, latency is a huge win.

849
00:33:38,320 --> 00:33:40,680
I could see businesses using this as a backup connection

850
00:33:40,680 --> 00:33:41,180
too.

851
00:33:41,180 --> 00:33:44,000
Maybe they have their faster gigabit broadband.

852
00:33:44,000 --> 00:33:45,880
They have fiber, but it goes out.

853
00:33:45,880 --> 00:33:47,400
You had internet issues this weekend.

854
00:33:47,400 --> 00:33:48,040
I did.

855
00:33:48,040 --> 00:33:53,080
And if we were doing some sort of live television production

856
00:33:53,080 --> 00:33:54,680
and you were in a home studio, it

857
00:33:54,680 --> 00:33:58,040
may be worth your money to have a backup like that.

858
00:33:58,040 --> 00:33:58,680
Oh, I like it.

859
00:33:58,680 --> 00:33:59,440
A second backup.

860
00:33:59,440 --> 00:34:00,280
I've got LTE.

861
00:34:00,280 --> 00:34:01,080
I've got Starlink.

862
00:34:01,080 --> 00:34:03,960
And hey, don't forget, Amazon's getting in this game too.

863
00:34:03,960 --> 00:34:06,300
So I think there'll be some competitors to Starlink

864
00:34:06,300 --> 00:34:07,740
that will have to take into account too.

865
00:34:07,740 --> 00:34:09,500
Whatever happened to those Google balloons?

866
00:34:09,500 --> 00:34:11,400
I think, did they bail on that?

867
00:34:11,400 --> 00:34:12,000
I can't remember.

868
00:34:12,000 --> 00:34:13,640
Or Facebook had a project too.

869
00:34:13,640 --> 00:34:17,640
But I could see a future where LTE and 5G cover

870
00:34:17,640 --> 00:34:20,920
a lot of nomadic digital workers.

871
00:34:20,920 --> 00:34:24,840
And then when you settle down in a spot for a day or so,

872
00:34:24,840 --> 00:34:27,760
you can turn on Starlink and you get, hopefully,

873
00:34:27,760 --> 00:34:30,240
an unlimited higher speed connection.

874
00:34:30,240 --> 00:34:32,400
I think for that, the people who haven't already

875
00:34:32,400 --> 00:34:34,560
been served by fast broadband internet,

876
00:34:34,560 --> 00:34:35,800
it's going to be huge for them.

877
00:34:35,800 --> 00:34:36,300
Yeah.

878
00:34:36,300 --> 00:34:40,680
Hey, let's do a little housekeeping.

879
00:34:40,680 --> 00:34:42,280
If you haven't yet, you should consider

880
00:34:42,280 --> 00:34:47,200
joining the Luplug every Sunday at noon Pacific, 3 PM Eastern,

881
00:34:47,200 --> 00:34:48,520
in our Mumble Room.

882
00:34:48,520 --> 00:34:51,120
You can get information on how to set up Mumble.

883
00:34:51,120 --> 00:34:54,080
Just go to linuxunplug.com slash mumble.

884
00:34:54,080 --> 00:34:56,480
We have a really brief guide there as well as

885
00:34:56,480 --> 00:34:58,160
an extended guide.

886
00:34:58,160 --> 00:35:00,880
The thing is, you never know when we're going to show up.

887
00:35:00,880 --> 00:35:03,260
This Sunday, we just kind of popped in and said, hey, guys,

888
00:35:03,260 --> 00:35:04,440
we have a show to do.

889
00:35:04,440 --> 00:35:05,600
Can you join us?

890
00:35:05,600 --> 00:35:08,280
And now the Luplug is here doing the show on a Sunday.

891
00:35:08,280 --> 00:35:10,800
And we're going to do it next Sunday too.

892
00:35:10,800 --> 00:35:11,280
What?

893
00:35:11,280 --> 00:35:12,760
Yeah, I haven't told anybody yet.

894
00:35:12,760 --> 00:35:15,400
But I'm going to be out and about that Tuesday.

895
00:35:15,400 --> 00:35:17,440
And the timing is going to be really tight.

896
00:35:17,440 --> 00:35:19,760
So we're going to record next week's Linux

897
00:35:19,760 --> 00:35:21,960
Unplugged on Sunday as well.

898
00:35:21,960 --> 00:35:22,680
So join us.

899
00:35:22,680 --> 00:35:24,380
And you can start out in the virtual Lug

900
00:35:24,380 --> 00:35:25,640
because we come in a little bit later.

901
00:35:25,640 --> 00:35:26,920
So there's still some Lug time.

902
00:35:26,920 --> 00:35:30,920
But on November 15, we'll do the show live over jblive.tv,

903
00:35:30,920 --> 00:35:33,720
noon Pacific, 3 PM Eastern.

904
00:35:33,720 --> 00:35:39,000
And then the Sunday after that, November 22 in the Luplug,

905
00:35:39,000 --> 00:35:41,880
it's the Bugathon for Jellyfin 10.7.

906
00:35:41,880 --> 00:35:44,040
Oh, now that's a reason to join.

907
00:35:44,040 --> 00:35:45,720
Yeah, and you can help test Jellyfin

908
00:35:45,720 --> 00:35:48,720
and make it the best release ever with the virtual Lug.

909
00:35:48,720 --> 00:35:50,880
So that's all happening in the Mumble Room.

910
00:35:50,880 --> 00:35:53,320
Plus, it's that same Mumble configuration

911
00:35:53,320 --> 00:35:55,400
to join the show if you ever get the chance.

912
00:35:55,400 --> 00:35:56,800
And then you're just good to go.

913
00:35:56,800 --> 00:35:59,040
I also want to mention that Jupiter Broadcasting has

914
00:35:59,040 --> 00:36:01,480
an all shows feed where you can subscribe to that.

915
00:36:01,480 --> 00:36:02,980
And you just get every show we put out.

916
00:36:02,980 --> 00:36:03,940
Oh, that's like every show?

917
00:36:03,940 --> 00:36:05,240
Yeah, did you know Coda Radio's back?

918
00:36:05,240 --> 00:36:05,740
What?

919
00:36:05,740 --> 00:36:06,280
That's right.

920
00:36:06,280 --> 00:36:09,560
Linux Action News Now features a brand new co-host,

921
00:36:09,560 --> 00:36:11,200
a sharp young fella named Wes Payne.

922
00:36:11,200 --> 00:36:11,960
Hey, that's me.

923
00:36:11,960 --> 00:36:13,000
That's you.

924
00:36:13,000 --> 00:36:15,420
All that and this show and more, like self-hosted

925
00:36:15,420 --> 00:36:18,620
in the all shows feed, plus anything new we come up with.

926
00:36:18,620 --> 00:36:20,240
So consider that if you haven't already

927
00:36:20,240 --> 00:36:22,920
subscribed to the Jupiter Broadcasting all shows feed.

928
00:36:22,920 --> 00:36:25,800
You just search for it in your pod catcher of choice

929
00:36:25,800 --> 00:36:28,480
or find a link at JupiterBroadcasting.com.

930
00:36:28,480 --> 00:36:33,240
And that, Wes Payne, is all of the housekeeping.

931
00:36:33,240 --> 00:36:36,040
We wanted to talk about our favorite Linux desktop tweaks,

932
00:36:36,040 --> 00:36:38,960
which is going to include apps and command line

933
00:36:38,960 --> 00:36:43,560
tools, things that we use or deploy or leverage

934
00:36:43,560 --> 00:36:45,200
or take advantage of.

935
00:36:45,200 --> 00:36:46,280
Or come on, one more.

936
00:36:46,280 --> 00:36:49,080
What's one more?

937
00:36:49,080 --> 00:36:49,840
Leverage.

938
00:36:49,840 --> 00:36:51,960
I already said leverage.

939
00:36:51,960 --> 00:36:54,600
Come on, give me a good one.

940
00:36:54,600 --> 00:36:56,640
Nope, said deploy.

941
00:36:56,640 --> 00:36:57,480
Utilize.

942
00:36:57,480 --> 00:36:58,400
Yeah, utilize.

943
00:36:58,400 --> 00:36:59,200
You got it, Wes.

944
00:36:59,200 --> 00:36:59,920
Good job.

945
00:36:59,920 --> 00:37:01,320
Good job.

946
00:37:01,320 --> 00:37:02,960
I thought we weren't going to get that.

947
00:37:02,960 --> 00:37:05,680
First thing on the list, command line dictionary.

948
00:37:05,680 --> 00:37:07,600
Yeah.

949
00:37:07,600 --> 00:37:08,520
Yeah, we should have.

950
00:37:08,520 --> 00:37:09,720
Yeah, so these are just different things

951
00:37:09,720 --> 00:37:11,320
that we've collected over the years, some of which we've

952
00:37:11,320 --> 00:37:14,600
told you about on past shows, some of which are brand new.

953
00:37:14,600 --> 00:37:16,920
So I'll start with a couple here,

954
00:37:16,920 --> 00:37:19,240
one that I have absolutely talked about before

955
00:37:19,240 --> 00:37:21,800
on the show, but is such a game changer

956
00:37:21,800 --> 00:37:25,060
that I continue to use it day to day on every distribution

957
00:37:25,060 --> 00:37:26,240
that I set up.

958
00:37:26,240 --> 00:37:28,880
And I think you should try it if you haven't yet,

959
00:37:28,880 --> 00:37:31,200
unless you don't like speed, unless maybe you prefer

960
00:37:31,200 --> 00:37:32,840
your web browser to be slow.

961
00:37:32,840 --> 00:37:34,460
But if you like your web browser fast,

962
00:37:34,460 --> 00:37:37,480
check out Profile Sync Demon.

963
00:37:37,480 --> 00:37:40,280
It's essentially just symlinks your browser profile

964
00:37:40,280 --> 00:37:41,480
into a RAM disk.

965
00:37:41,480 --> 00:37:43,000
But it handles the synchronization

966
00:37:43,000 --> 00:37:45,560
from the RAM disk back to your actual profile

967
00:37:45,560 --> 00:37:47,000
on your disk for you.

968
00:37:47,000 --> 00:37:50,180
And it makes the browser so much faster.

969
00:37:50,180 --> 00:37:51,880
It never has to wait for your disk.

970
00:37:51,880 --> 00:37:53,240
And I know what you're thinking.

971
00:37:53,240 --> 00:37:57,240
You're thinking, Chris, I have me one of these fast PCIe MVME

972
00:37:57,240 --> 00:37:58,080
disk, man.

973
00:37:58,080 --> 00:38:00,080
It gets like one of them gigabits a second.

974
00:38:00,080 --> 00:38:00,780
It's real nice.

975
00:38:00,780 --> 00:38:02,160
It's got the gigabytes.

976
00:38:02,160 --> 00:38:02,980
I do too.

977
00:38:02,980 --> 00:38:05,000
And I'm telling you, it's still faster

978
00:38:05,000 --> 00:38:06,880
when you use Profile Sync Demon.

979
00:38:06,880 --> 00:38:07,960
It's great.

980
00:38:07,960 --> 00:38:10,640
It makes the UI more responsive.

981
00:38:10,640 --> 00:38:12,760
Because if you're hitting your bookmarks menu,

982
00:38:12,760 --> 00:38:13,880
it's got to check the disk.

983
00:38:13,880 --> 00:38:16,840
It just loads instant, fricking, taneously.

984
00:38:16,840 --> 00:38:18,580
And it makes web pages work better.

985
00:38:18,580 --> 00:38:20,400
It makes everything faster.

986
00:38:20,400 --> 00:38:23,200
And if you've got more than 16 gigs of RAM in your system,

987
00:38:23,200 --> 00:38:26,800
you've got enough to polish off a few hundred megabytes

988
00:38:26,800 --> 00:38:27,440
for this thing.

989
00:38:27,440 --> 00:38:28,600
So this is like when you're not yet

990
00:38:28,600 --> 00:38:31,680
ready to run your whole OS from RAM, like a starter step?

991
00:38:31,680 --> 00:38:32,960
Are you going to do that?

992
00:38:32,960 --> 00:38:33,880
Is that one of yours?

993
00:38:33,880 --> 00:38:35,640
No, no.

994
00:38:35,640 --> 00:38:36,280
Yeah.

995
00:38:36,280 --> 00:38:37,280
I mean, I could definitely see why

996
00:38:37,280 --> 00:38:39,080
you'd want to run the entire system from RAM,

997
00:38:39,080 --> 00:38:40,360
to be honest with you.

998
00:38:40,360 --> 00:38:43,160
But the nice thing about this is like even on my laptop,

999
00:38:43,160 --> 00:38:45,960
where I've got 16 gigs, this is running in the background.

1000
00:38:45,960 --> 00:38:47,080
I never think about it.

1001
00:38:47,080 --> 00:38:48,360
It just works super solid.

1002
00:38:48,360 --> 00:38:49,980
It just works, which is what you need

1003
00:38:49,980 --> 00:38:51,480
if you're going to be trusting all your browsing with it.

1004
00:38:51,480 --> 00:38:51,720
Yeah.

1005
00:38:51,720 --> 00:38:54,560
And you can set it up with one of them system D units

1006
00:38:54,560 --> 00:38:57,240
and have it run under your own account.

1007
00:38:57,240 --> 00:38:59,760
And I'll have a link for that information in the show notes.

1008
00:38:59,760 --> 00:39:01,920
Now, I want to tell you about a new tool that I use.

1009
00:39:01,920 --> 00:39:06,120
It's going to kind of pair with another tip I have that

1010
00:39:06,120 --> 00:39:08,200
is like a first world tip.

1011
00:39:08,200 --> 00:39:09,200
I'm going to admit that.

1012
00:39:09,200 --> 00:39:11,520
But I'll start with a tool that I have recently

1013
00:39:11,520 --> 00:39:15,960
started using called, very simply, GPU Viewer.

1014
00:39:15,960 --> 00:39:19,960
And I'm going to warn you, it's not the prettiest app.

1015
00:39:19,960 --> 00:39:22,080
But it is a graphical application

1016
00:39:22,080 --> 00:39:23,520
to give you front end information

1017
00:39:23,520 --> 00:39:25,480
to a bunch of under the hood apps,

1018
00:39:25,480 --> 00:39:30,760
like GLX Info, Vulkan Info, CLI Info, ES2 Info.

1019
00:39:30,760 --> 00:39:34,700
And what it does is it builds you a really nice media info

1020
00:39:34,700 --> 00:39:38,300
style list of information about your graphics card,

1021
00:39:38,300 --> 00:39:41,680
your driver, any of those kinds of details, even your CPU

1022
00:39:41,680 --> 00:39:45,280
information, your OpenCL support, your OpenGL support,

1023
00:39:45,280 --> 00:39:46,880
your Vulkan support.

1024
00:39:46,880 --> 00:39:48,280
So if you're trying to figure out

1025
00:39:48,280 --> 00:39:50,140
what your deal is with Steam games

1026
00:39:50,140 --> 00:39:52,800
or with any kind of performance issue,

1027
00:39:52,800 --> 00:39:54,320
this gives you everything you need

1028
00:39:54,320 --> 00:39:56,640
to know about your graphics card.

1029
00:39:56,640 --> 00:39:59,880
And where it comes in supes crazy handy

1030
00:39:59,880 --> 00:40:02,920
is my next kind of first worldy tip here

1031
00:40:02,920 --> 00:40:07,280
is if you've got an Intel graphics laptop

1032
00:40:07,280 --> 00:40:10,520
and you want to be a little foolish with your money,

1033
00:40:10,520 --> 00:40:12,000
I do, I do.

1034
00:40:12,000 --> 00:40:17,440
I really still today recommend an eGPU.

1035
00:40:17,440 --> 00:40:18,680
Use it as a dock.

1036
00:40:18,680 --> 00:40:20,120
It's such a thing of beauty.

1037
00:40:20,120 --> 00:40:22,360
You guys know I've talked about this before on the show.

1038
00:40:22,360 --> 00:40:24,520
And I'm here to tell you that this is still the setup

1039
00:40:24,520 --> 00:40:27,080
I'm using, and it's still working really well for me.

1040
00:40:27,080 --> 00:40:28,800
After, what has it been, a year or more

1041
00:40:28,800 --> 00:40:30,120
since we've talked about it on the show?

1042
00:40:30,120 --> 00:40:33,040
Yeah, you were just showing me your new setup in the RV.

1043
00:40:33,040 --> 00:40:33,560
It was fancy.

1044
00:40:33,560 --> 00:40:34,680
Yeah, I got a new stand.

1045
00:40:34,680 --> 00:40:35,720
So I've got the laptop.

1046
00:40:35,720 --> 00:40:37,720
It's even closer to me, and it's a little higher,

1047
00:40:37,720 --> 00:40:39,160
so that way I sit up better.

1048
00:40:39,160 --> 00:40:42,360
And I've got a little mini Clacky keyboard

1049
00:40:42,360 --> 00:40:43,700
that I ordered online after getting

1050
00:40:43,700 --> 00:40:44,820
one of those little tester kits.

1051
00:40:44,820 --> 00:40:48,060
I did the whole thing, and it's this little compact keyboard.

1052
00:40:48,060 --> 00:40:49,680
I've got a Bluetooth mouse.

1053
00:40:49,680 --> 00:40:51,640
I've got a game controller.

1054
00:40:51,640 --> 00:40:55,120
I've got my wireless headphones that we reviewed on the show,

1055
00:40:55,120 --> 00:40:57,120
still using those too.

1056
00:40:57,120 --> 00:41:00,760
Another great Linux tool is those wireless Corsair

1057
00:41:00,760 --> 00:41:03,080
headphones that use RF instead of Bluetooth.

1058
00:41:03,080 --> 00:41:05,160
And of course, I got a couple of other things

1059
00:41:05,160 --> 00:41:08,560
plugged in, like a phone and watch charging cable.

1060
00:41:08,560 --> 00:41:13,520
All of that, though, is all of it is plugged into the eGPU.

1061
00:41:13,520 --> 00:41:15,640
And one, oh, and power, of course.

1062
00:41:15,640 --> 00:41:16,200
Of course.

1063
00:41:16,200 --> 00:41:17,160
Power, of course.

1064
00:41:17,160 --> 00:41:21,560
One cable comes from the eGPU into the laptop.

1065
00:41:21,560 --> 00:41:23,040
One cable.

1066
00:41:23,040 --> 00:41:26,440
And I don't know exactly why, but now I

1067
00:41:26,440 --> 00:41:30,680
seem to be able to unplug and plug in the eGPU

1068
00:41:30,680 --> 00:41:32,460
without my OS freezing.

1069
00:41:32,460 --> 00:41:36,600
So I can just come and go as I please, at least as soon as,

1070
00:41:36,600 --> 00:41:39,160
I mean, Fedora 33, it hasn't been a problem yet.

1071
00:41:39,160 --> 00:41:40,660
So maybe it's a newer kernel thing.

1072
00:41:40,660 --> 00:41:43,000
Maybe it's because I don't use it as the dedicated GPU.

1073
00:41:43,000 --> 00:41:45,480
I kind of use it more as an on-demand GPU.

1074
00:41:45,480 --> 00:41:47,240
But man, does that work well for me.

1075
00:41:47,240 --> 00:41:47,960
That is so slick.

1076
00:41:47,960 --> 00:41:51,140
I have all my peripherals set up there, all the wires,

1077
00:41:51,140 --> 00:41:53,240
all that stuff go into the eGPU box.

1078
00:41:53,240 --> 00:41:56,440
One Thunderbolt 3 cable comes to my laptop.

1079
00:41:56,440 --> 00:42:00,440
And then the way I use the GPU is as an environment variable

1080
00:42:00,440 --> 00:42:02,700
before I launch the application or the Steam game.

1081
00:42:02,700 --> 00:42:05,200
And there's guides on how to do this.

1082
00:42:05,200 --> 00:42:08,160
I use an environment variable to say which GPU

1083
00:42:08,160 --> 00:42:10,080
I want the application on.

1084
00:42:10,080 --> 00:42:13,920
And so I essentially have an on-demand AMD GPU.

1085
00:42:13,920 --> 00:42:16,400
And since it's an open source driver,

1086
00:42:16,400 --> 00:42:17,800
there's no repercussions.

1087
00:42:17,800 --> 00:42:21,000
Like if I do an NVIDIA card in that eGPU,

1088
00:42:21,000 --> 00:42:23,160
then I always have the NVIDIA driver.

1089
00:42:23,160 --> 00:42:25,560
And I always have the NVIDIA management software

1090
00:42:25,560 --> 00:42:28,600
and admin stuff, whatever that application is.

1091
00:42:28,600 --> 00:42:30,600
I always have that stuff on my box.

1092
00:42:30,600 --> 00:42:32,500
And we have looked.

1093
00:42:32,500 --> 00:42:35,820
And it does look for the NVIDIA GPU.

1094
00:42:35,820 --> 00:42:37,400
And it can sometimes even freak out

1095
00:42:37,400 --> 00:42:40,000
looking for the NVIDIA GPU when it's missing.

1096
00:42:40,000 --> 00:42:42,360
And it will create a bunch of errors in your log.

1097
00:42:42,360 --> 00:42:44,000
You can see it happening when you run journal.

1098
00:42:44,000 --> 00:42:44,640
Not what you need.

1099
00:42:44,640 --> 00:42:46,720
And you also don't have to be disabling and re-enabling it

1100
00:42:46,720 --> 00:42:47,960
or handling any of that.

1101
00:42:47,960 --> 00:42:49,880
Which was the workaround we came up with is

1102
00:42:49,880 --> 00:42:53,080
different essentially grub entries

1103
00:42:53,080 --> 00:42:55,760
that disabled or enabled the NVIDIA card.

1104
00:42:55,760 --> 00:42:58,560
But because it's an AMD graphics card,

1105
00:42:58,560 --> 00:43:02,000
and it takes up 10% of the kernel code apparently,

1106
00:43:02,000 --> 00:43:05,040
but the kernel driver is built in,

1107
00:43:05,040 --> 00:43:06,800
it just works when it's there.

1108
00:43:06,800 --> 00:43:08,960
And it is fine when it's not there.

1109
00:43:08,960 --> 00:43:10,280
Like it just doesn't care.

1110
00:43:10,280 --> 00:43:14,660
And so I switch between an Intel graphics and an AMD graphics.

1111
00:43:14,660 --> 00:43:18,320
And I have all of my laptop cords going into that eGPU.

1112
00:43:18,320 --> 00:43:20,600
And it's such a nice experience.

1113
00:43:20,600 --> 00:43:22,600
It's like over a year since we talked about it.

1114
00:43:22,600 --> 00:43:24,400
And I was actually showing Wes a picture of my setup

1115
00:43:24,400 --> 00:43:24,960
this morning.

1116
00:43:24,960 --> 00:43:26,520
I'm still loving it that much.

1117
00:43:26,520 --> 00:43:29,840
And so GPU viewer makes it even easier

1118
00:43:29,840 --> 00:43:31,000
to kind of get information.

1119
00:43:31,000 --> 00:43:32,720
Is the system seeing my GPU?

1120
00:43:32,720 --> 00:43:35,160
What is the information it does detect about it?

1121
00:43:35,160 --> 00:43:36,080
All of that's in there.

1122
00:43:36,080 --> 00:43:37,720
And I really like it.

1123
00:43:37,720 --> 00:43:38,400
OK.

1124
00:43:38,400 --> 00:43:39,720
I have just a couple more.

1125
00:43:39,720 --> 00:43:40,080
You ready?

1126
00:43:40,080 --> 00:43:40,840
Yeah, almost.

1127
00:43:40,840 --> 00:43:41,680
OK.

1128
00:43:41,680 --> 00:43:45,480
This one you can probably guess is for unfilter mostly.

1129
00:43:45,480 --> 00:43:48,080
But it's just really handy if you.

1130
00:43:48,080 --> 00:43:49,680
There's a couple other tools to do this.

1131
00:43:49,680 --> 00:43:51,360
But there's nothing simpler.

1132
00:43:51,360 --> 00:43:53,600
If you just want to trim the ends of a video,

1133
00:43:53,600 --> 00:43:55,360
maybe you took something on your phone,

1134
00:43:55,360 --> 00:43:56,560
you've copied it over to your machine,

1135
00:43:56,560 --> 00:43:58,680
and you want to just trim it up a little bit,

1136
00:43:58,680 --> 00:44:01,520
there is a GTK application that's kind of new.

1137
00:44:01,520 --> 00:44:05,080
It's on Flat Hub and other places called, simply,

1138
00:44:05,080 --> 00:44:06,200
Video Trimmer.

1139
00:44:06,200 --> 00:44:09,080
And it lets you just cut out a fragment of video.

1140
00:44:09,080 --> 00:44:12,280
You give it a start and end timestamp.

1141
00:44:12,280 --> 00:44:13,780
And it will cut it.

1142
00:44:13,780 --> 00:44:16,760
The video is never re-encoded.

1143
00:44:16,760 --> 00:44:19,000
So the process is super fast.

1144
00:44:19,000 --> 00:44:21,200
And it doesn't reduce the video quality.

1145
00:44:21,200 --> 00:44:23,240
And that's the number one thing I like about it,

1146
00:44:23,240 --> 00:44:25,520
is it is designed to not re-encode video.

1147
00:44:25,520 --> 00:44:27,200
And you know, that's kind of a big deal.

1148
00:44:27,200 --> 00:44:28,320
It is.

1149
00:44:28,320 --> 00:44:32,720
The UI is a little tricky when you have an hour-long video.

1150
00:44:32,720 --> 00:44:34,720
But if you're working with a three-minute video

1151
00:44:34,720 --> 00:44:37,280
you took on your cell phone, or if you did a screen cap

1152
00:44:37,280 --> 00:44:39,120
and you want to cut off just the beginning

1153
00:44:39,120 --> 00:44:42,440
and the end of the screen cap, it's super great for that.

1154
00:44:42,440 --> 00:44:44,920
And it's a really straightforward UI.

1155
00:44:44,920 --> 00:44:47,560
And it's crazy easy to get installed as a Flat Hub.

1156
00:44:47,560 --> 00:44:51,280
You mean I don't have to do this manually with ffmpeg anymore?

1157
00:44:51,280 --> 00:44:53,480
AvidMux is my other favorite way to do it.

1158
00:44:53,480 --> 00:44:58,000
But this makes AvidMux's UI look like it's from 1992.

1159
00:44:58,000 --> 00:44:59,760
And I noticed you haven't mentioned this yet.

1160
00:44:59,760 --> 00:45:00,260
What?

1161
00:45:00,260 --> 00:45:01,840
It's written in Rust.

1162
00:45:01,840 --> 00:45:02,340
No!

1163
00:45:02,340 --> 00:45:02,840
No!

1164
00:45:02,840 --> 00:45:03,340
No!

1165
00:45:03,340 --> 00:45:03,840
No!

1166
00:45:03,840 --> 00:45:04,340
No!

1167
00:45:04,340 --> 00:45:04,840
No!

1168
00:45:04,840 --> 00:45:05,340
No!

1169
00:45:05,340 --> 00:45:05,840
No!

1170
00:45:05,840 --> 00:45:06,340
No!

1171
00:45:06,340 --> 00:45:06,840
No!

1172
00:45:06,840 --> 00:45:07,340
No!

1173
00:45:07,340 --> 00:45:07,840
No!

1174
00:45:07,840 --> 00:45:08,340
No!

1175
00:45:08,340 --> 00:45:08,840
No!

1176
00:45:08,840 --> 00:45:09,340
No!

1177
00:45:09,340 --> 00:45:09,840
No!

1178
00:45:09,840 --> 00:45:10,340
No!

1179
00:45:10,340 --> 00:45:10,840
No!

1180
00:45:10,840 --> 00:45:11,340
No!

1181
00:45:11,340 --> 00:45:11,840
No!

1182
00:45:11,840 --> 00:45:12,340
No!

1183
00:45:12,340 --> 00:45:12,840
No!

1184
00:45:12,840 --> 00:45:13,340
No!

1185
00:45:13,340 --> 00:45:13,840
No!

1186
00:45:13,840 --> 00:45:14,340
No!

1187
00:45:14,340 --> 00:45:14,840
No!

1188
00:45:14,840 --> 00:45:15,340
No!

1189
00:45:15,340 --> 00:45:18,240
Those are some good advice from a long time Linux user.

1190
00:45:18,240 --> 00:45:21,240
Come over here, sit by my fire for a moment,

1191
00:45:21,240 --> 00:45:23,280
I'd like to tell you a story.

1192
00:45:23,280 --> 00:45:25,680
Stay a while and listen.

1193
00:45:25,680 --> 00:45:29,160
I highly recommend, if you're a GTK desktop-er,

1194
00:45:29,160 --> 00:45:30,600
give POPtHeem a try.

1195
00:45:30,600 --> 00:45:32,800
Go all in and get all of the packages.

1196
00:45:32,800 --> 00:45:33,940
Get the ICIM theme.

1197
00:45:33,940 --> 00:45:35,040
Get the cursor theme.

1198
00:45:35,040 --> 00:45:36,200
Get the GTK theme.

1199
00:45:36,200 --> 00:45:37,740
You don't have to do the auto-titling.

1200
00:45:37,740 --> 00:45:39,560
Give POPt THEM a try.

1201
00:45:39,560 --> 00:45:43,080
They've put a lot of thought into what

1202
00:45:43,080 --> 00:45:48,200
be highlighted so that way your attention is drawn to the right part of the UI at the right time.

1203
00:45:48,200 --> 00:45:54,840
Open save dialogue boxes, pop-up boxes, they've put a lot of effort into that. And I've been using

1204
00:45:54,840 --> 00:46:01,560
it on pop, but I've also been using it on Fedora 33, which is wicked cool. And I have noticed over

1205
00:46:01,560 --> 00:46:06,760
the last few weeks that they have put sort of emphasis on like what should be the default and

1206
00:46:06,760 --> 00:46:11,320
what you click on if you don't want the default. And that kind of stuff is really nice. If you're

1207
00:46:11,320 --> 00:46:16,920
a plasma pal, I really want to suggest that you stick with Breeze, but give Breeze Dark a try.

1208
00:46:17,480 --> 00:46:23,720
Breeze just keeps getting better and better. And Breeze Dark, it kind of makes you not see some of

1209
00:46:23,720 --> 00:46:30,280
the unused white space that's in some of the plasma applications. And so not only do I find it just

1210
00:46:30,280 --> 00:46:36,760
simply easier on the eyeballs, but I also think it kind of, for lack of a better word, kind of

1211
00:46:36,760 --> 00:46:45,320
papers over some of the UI gaps and spaces that sort of drive me nuts sometimes. And the dark

1212
00:46:45,320 --> 00:46:49,160
theme makes that all real nice, kind of makes it smooth, and you don't notice that kind of stuff.

1213
00:46:49,160 --> 00:46:54,120
So GTKers, I just got to say, even if you just do it for a week, give the pop theme a try.

1214
00:46:54,120 --> 00:47:01,720
And plasma pals, go Breeze, but go Breeze Hard and go Breeze Dark. That's my sage longtime desktop

1215
00:47:01,720 --> 00:47:06,360
advice. I've got a million other things, but I feel like I've been talking for like five hours. So

1216
00:47:06,360 --> 00:47:09,880
Wes, why don't you give us some of your favorite apps, tweaks, tools?

1217
00:47:09,880 --> 00:47:15,000
I've been finding myself in the command line more and more these days. So mine mostly focus on

1218
00:47:15,720 --> 00:47:19,720
how do you make life a little bit better while you're there. One tool I've been using more often

1219
00:47:19,720 --> 00:47:27,240
is FZF, a command line fuzzy finder. And this is just great. It's a general purpose command line

1220
00:47:27,240 --> 00:47:32,600
fuzzy finder. And it can use with basically anything, a list, files, command processes,

1221
00:47:32,600 --> 00:47:37,320
history, host names. So let's say you want to SSH to a box. Once you've got this installed and set

1222
00:47:37,320 --> 00:47:41,960
up, you also add a star star and hit tab. And then this thing goes and looks through all your

1223
00:47:41,960 --> 00:47:46,840
SSH configurations, stuff like that, finds hosts that exists, offers right there with a really

1224
00:47:46,840 --> 00:47:51,320
slick curses interface that drops right down and lets you find it. One thing I didn't even realize

1225
00:47:51,320 --> 00:47:55,960
until looking over the main page again was it integrates with kill. So I'm trying to kill dash

1226
00:47:55,960 --> 00:48:01,320
nine something. Yes, there's tons of ways to find it. But you just hit tab and it pops an interactive

1227
00:48:01,320 --> 00:48:05,880
environment right there in your terminal where you can browse through hit enter process is gone.

1228
00:48:05,880 --> 00:48:12,200
That's super nice that that for kill right there is a winner. So that's the command line fuzzy

1229
00:48:12,200 --> 00:48:17,560
finder FZF. How have I not heard of this before? I don't know. You know, I think it's actually

1230
00:48:17,560 --> 00:48:21,960
pretty popular. I don't think it's been a pick here, although it's definitely elsewhere around

1231
00:48:21,960 --> 00:48:26,200
the Linux ecosystem. If you haven't tried it, I think it's worth a shot. And it slots into pretty

1232
00:48:26,200 --> 00:48:29,480
much all the shells they've got, you know, it's easy to install, they've got a little script that

1233
00:48:29,480 --> 00:48:34,920
will add it and customize your config so that it works nicely. It's great. Does it work with the

1234
00:48:34,920 --> 00:48:41,240
best show? Yes, it does. This has got to be one of your picks. It is. Yes. So I've been using a Mac

1235
00:48:41,240 --> 00:48:45,320
a little more for work as we've talked about. That's been that's been totally fine. Not what

1236
00:48:45,320 --> 00:48:49,720
this is about. But I had been using that as an opportunity to play with CSH more because that's

1237
00:48:49,720 --> 00:48:55,160
now the default shell over there in OSX. How is the SH? Not bad. You know, I like it. It's a good

1238
00:48:55,160 --> 00:48:59,560
shell. There's a lot of neat stuff. Certainly, you know, better than bash as you might say.

1239
00:49:00,840 --> 00:49:07,000
But I'm back on fish. Yeah, it's no fish, right? Fish is just so easy. And it does so many of these

1240
00:49:07,000 --> 00:49:13,240
things that I might otherwise want to customize or pull in or configure that fish just does for me.

1241
00:49:13,240 --> 00:49:17,800
And I love that there's things that I don't need to save and I don't need to automate or they're

1242
00:49:17,800 --> 00:49:21,960
just not worth the time of doing it. But fish bridges that gap. So if I'm going to go back to

1243
00:49:21,960 --> 00:49:25,560
a project and I'm in that folder again after three months, well, the build commands are just

1244
00:49:25,560 --> 00:49:30,680
right there in fishes memory. That is exactly what it is, is you go into an environment you

1245
00:49:30,680 --> 00:49:35,800
haven't been there in weeks or months, you kind of kind of remember the command you ran, but you

1246
00:49:35,800 --> 00:49:40,920
don't quite know what it was or what the flags were. And you start to type what you do remember

1247
00:49:40,920 --> 00:49:47,320
and fish auto completes the frickin rest. It's just it's so great. And there's other ways to

1248
00:49:47,320 --> 00:49:50,520
crack this too, right? Doesn't it? But I guess you don't have to use fish if you don't want to change

1249
00:49:50,520 --> 00:49:53,960
your whole shell. Yeah, there are things you know, FCF can help with some of this stuff. And then

1250
00:49:53,960 --> 00:49:58,440
there are a bunch of tools that I had been using in past installations, just around helping you get

1251
00:49:58,440 --> 00:50:02,040
around your file system. If you have common activities, common locations, you go for certain

1252
00:50:02,040 --> 00:50:07,160
workloads. There's all kinds of nice tools, things like auto jump or jump or smart CD is another one

1253
00:50:07,160 --> 00:50:13,000
that I've used. All this can be pretty handy if for some reason you just can't use fish. I saw

1254
00:50:13,000 --> 00:50:18,040
you had a you had an entry in here in the doc for the Chromecast lifestyle, which I don't know if

1255
00:50:18,040 --> 00:50:22,360
we fully added you for but you are like you are a hardcore caster. If I'm not watching it, like on

1256
00:50:22,360 --> 00:50:26,920
my laptop, on my phone, then it's definitely going on my Chromecast. That's the primary method. I

1257
00:50:26,920 --> 00:50:30,840
watch basically everything. But that's how you get like everything on your television. And so having

1258
00:50:30,840 --> 00:50:37,080
some tools to make that easier, definitely necessary. To start with just MK Chromecast.

1259
00:50:37,080 --> 00:50:40,440
That's a pretty popular application. It just lets you it integrates in and handles all the trans

1260
00:50:40,440 --> 00:50:44,760
coding, figuring things out plays really nicely with pulse audio, adds a device and then anything

1261
00:50:44,760 --> 00:50:50,040
you select to output there just shows up on your Chromecast. Oh, that's cool. If you're using Chrome,

1262
00:50:50,040 --> 00:50:53,320
you can just cast from inside Chrome. And that works pretty darn decently. But if there's other

1263
00:50:53,320 --> 00:50:57,800
application stuff you're doing on the desktop that isn't in a browser, this is the way to do it.

1264
00:50:57,800 --> 00:51:02,520
Could you do a full video that way? You know, I don't know if it can you can play the video file.

1265
00:51:02,520 --> 00:51:05,640
So that's pretty easy. I'm not sure about, you know, for streaming, you have to do a little more.

1266
00:51:05,640 --> 00:51:09,400
Yeah, why don't just play the file in? Okay. And so that's where the next two picks come in.

1267
00:51:09,400 --> 00:51:15,160
So that was MK Chromecast. All right, what do you got next? Cat, which has previously been a pick

1268
00:51:15,160 --> 00:51:20,280
on the shelf cast all the things and this guy is just great. You throw any file at it pretty much

1269
00:51:20,280 --> 00:51:23,880
it will figure out if it needs to transcode it spins up a little server automatically locally

1270
00:51:23,880 --> 00:51:30,680
to play it on the Chromecast and sends it right over. C-A-T-T. C-A-T-T. Yeah, I recall that that

1271
00:51:30,680 --> 00:51:34,360
is really nice that it spins up the server that the Chromecast is expecting. Right. And it has

1272
00:51:34,360 --> 00:51:38,360
good support like you've got multiple devices or you know, like an audio Google, whatever they're

1273
00:51:38,360 --> 00:51:45,720
called now. I forget the names. Mini, no. HomePod. Yeah. Google version of HomePod. It also integrates

1274
00:51:45,720 --> 00:51:50,360
with YouTube DL if you've got that around so you can just say like, hey, cast this link to a YouTube

1275
00:51:50,360 --> 00:51:56,440
URL and it'll figure it out for you. Nice. The one thing it's not as great though is kind of controlling

1276
00:51:56,440 --> 00:52:01,720
you can control it but it's not as intuitive as I like. So there's another program called cast now

1277
00:52:01,720 --> 00:52:06,440
and that's my last little Chromecast utility. This can also stream it's not quite as good so I don't

1278
00:52:06,440 --> 00:52:10,280
use it for that I just use it as a little heads up display in the terminal it'll figure out what's

1279
00:52:10,280 --> 00:52:13,560
playing it shows you a little menu of you know what is that currently casting and then you can

1280
00:52:13,560 --> 00:52:18,920
just spacebar to pause you can adjust the volume you can seek. Whoa whoa whoa whoa so this is like

1281
00:52:18,920 --> 00:52:24,600
a remote control in the command line? Yep. Oh my gosh that's cool that is so neat and you put in

1282
00:52:24,600 --> 00:52:28,520
a drop down terminal that's the way to go. Right you just have it available whenever you want.

1283
00:52:29,640 --> 00:52:33,160
That's cast now we'll have links to all of this at linuxunplug.com

1284
00:52:33,160 --> 00:52:39,400
slash 379 huh and and so can you but you don't use that to send any files you just use that to

1285
00:52:39,400 --> 00:52:43,720
manage whatever is playing. Yeah it can do that and I used to use that in the past but I've found cat

1286
00:52:43,720 --> 00:52:49,720
is more actively maintained and just does a better job of it. Okay now can you help me with this one

1287
00:52:49,720 --> 00:52:55,800
because I know that you got a web browser but that's not good enough and you got vim and that's

1288
00:52:55,800 --> 00:53:00,440
not good enough but if I could somehow take vim and put it in my web browser maybe then I could

1289
00:53:00,440 --> 00:53:05,720
have the perfect browsing experience so what do you have for me? Well why don't you try Tridactyl.

1290
00:53:05,720 --> 00:53:13,000
Tridactyl really? A vim-like interface for Firefox. Okay so you can move around the browser using vim

1291
00:53:13,000 --> 00:53:17,000
commands and whatnot? Yes and there's also vimparator previously there was Pentadactyl which

1292
00:53:17,000 --> 00:53:21,000
is where the name Tridactyl comes from so there's there's some chrome options here as well if you're

1293
00:53:21,000 --> 00:53:25,640
not using Firefox but if you wanted to be a little more efficient and you're just really hooked on

1294
00:53:25,640 --> 00:53:31,080
vim like some of us you can take it to the next level. Do you actually have this set up right now

1295
00:53:31,080 --> 00:53:34,760
can you do this? I don't have it on this system but on my main web browsing machine at home yeah

1296
00:53:34,760 --> 00:53:39,800
because it's just so easy like if I want to close a tab you hit d then the tab is gone and if you've

1297
00:53:39,800 --> 00:53:45,480
already got these sort of like built-in muscle memory from using vi in the command line all the

1298
00:53:45,480 --> 00:53:51,000
time and you know I turn those settings on I use it when we edit show notes and code emd I use it in

1299
00:53:51,000 --> 00:53:56,920
my uh in my ides for work it's just a natural extension and I don't know I don't go crazy with

1300
00:53:56,920 --> 00:54:00,920
it you can like make you know use it to select text on the page and find stuff and all that

1301
00:54:00,920 --> 00:54:04,920
I just use the sort of basic navigations moving between tabs stuff like that on your home computer

1302
00:54:04,920 --> 00:54:11,000
yeah on your mint box well you know you gotta customize mint you gotta make it yours okay drew

1303
00:54:11,000 --> 00:54:15,640
I know you've got a few desktop tweaks and apps that you like to use uh and I want to hear them

1304
00:54:15,640 --> 00:54:22,920
yeah I do so my first one is more of a tip it's use your damn home slash dot local directory

1305
00:54:24,680 --> 00:54:30,360
I got so sick of cluttering up my root folder I was like there's got to be a better way so yeah

1306
00:54:30,360 --> 00:54:37,160
turns out there's a dot local folder usually it has uh just like a single folder in there share

1307
00:54:37,160 --> 00:54:42,440
and then it's got like your applications overrides your fonts that you've installed locally stuff

1308
00:54:42,440 --> 00:54:48,680
like that but you can do tons of stuff in there and in fact most distros that I've used recently

1309
00:54:48,680 --> 00:54:55,480
have home slash dot local slash bin in your default path so that is a perfect place to put

1310
00:54:55,480 --> 00:54:59,560
all of your little scripts and things like that that's a great one that's good all the rust

1311
00:54:59,560 --> 00:55:07,640
applications you just download exactly yeah what did you say Wes that's a good one though because

1312
00:55:07,640 --> 00:55:13,400
that dot local is just sitting there it's yours for the using yeah and I even use it for um you

1313
00:55:13,400 --> 00:55:21,800
know I use nextcloud and anytime I switch to a different desktop like I go to Ubuntu or Pop or

1314
00:55:21,800 --> 00:55:27,000
Fedora or whatever I just resync all my stuff and I do a home slash dot local slash config and then

1315
00:55:27,000 --> 00:55:33,080
I symlink from there into my real config folder and that way I can keep all of my config stuff

1316
00:55:33,080 --> 00:55:39,320
all sorted out and and synced the one-stop shop yeah and so use that folder use it for

1317
00:55:39,960 --> 00:55:47,160
so many things because why not and it keeps your home folder clean so my second thing is just for

1318
00:55:47,160 --> 00:55:55,320
Debian people or Debian adjacent like Ubuntu or Pop and that is the Liquorix kernel I find it

1319
00:55:55,320 --> 00:56:03,640
really quite snappy and it just feels more like a really smooth desktop experience so for those

1320
00:56:03,640 --> 00:56:09,240
maybe like not familiar this is like a specially tuned like desktop focused kernel yeah exactly

1321
00:56:09,640 --> 00:56:13,880
I started looking at it because I was looking for something that was a little better for pro

1322
00:56:13,880 --> 00:56:19,560
audio than just the regular low latency kernel but once I started using it I was like wow you

1323
00:56:19,560 --> 00:56:25,560
know everything feels more responsive and now it's like the first thing I install as soon as I

1324
00:56:25,560 --> 00:56:31,960
am on a Debian system so oh okay just Debian though well and Ubuntu anything Debian based

1325
00:56:31,960 --> 00:56:37,800
man I want it for Fedora yeah no it's it's not available for Fedora but it's built on the Zen

1326
00:56:37,800 --> 00:56:42,920
patch set so if that gives you any indication of kind of what they're doing under the hood there

1327
00:56:42,920 --> 00:56:50,280
but I do have something for Fedora users and this one is really really cool it is

1328
00:56:50,280 --> 00:56:57,640
pipewire nightly it is a repo in copper that gives you the latest and greatest unstable goodness

1329
00:56:57,640 --> 00:57:03,640
oh you're speaking our language yeah it's for adventurous people but I'm using it I'm actually

1330
00:57:03,640 --> 00:57:10,520
using it right now and it is handling all of my pulse all of my jack and in the latest builds

1331
00:57:10,520 --> 00:57:16,520
and in the latest builds it even supports flat pack yeah and that's actually kind of useful in

1332
00:57:16,520 --> 00:57:21,320
a way that I hadn't appreciated before can you describe what that means which part the the flat

1333
00:57:21,320 --> 00:57:26,680
pack support yeah flat pack supporting pipewire and like the screenshot you sent us okay so

1334
00:57:27,400 --> 00:57:34,760
previously flat pack would not talk to the pulse server that pipewire is spinning up

1335
00:57:34,760 --> 00:57:42,520
so what they ended up doing and by they I mean wim tamans is they're spinning up a second pulse

1336
00:57:42,520 --> 00:57:50,040
server just for flat pack applications that then routes audio back in so I can spin up something

1337
00:57:50,040 --> 00:57:54,840
in flat pack and I can route it to a jack application I can just run it straight as a pulse

1338
00:57:55,720 --> 00:58:02,520
straight to my system I can do whatever I want to with any flat pack apps just like I would a

1339
00:58:02,520 --> 00:58:07,480
normal regular app on my desktop that's great that's how we'd want it yeah now it is still a

1340
00:58:07,480 --> 00:58:13,560
little buggy I have had it where if I've got like Spotify running for hours it'll start stuttering

1341
00:58:13,560 --> 00:58:20,040
after a little while but closing it and reopening it respawns a server and it's fine after that

1342
00:58:20,920 --> 00:58:26,680
so again for adventurous users but it's really coming along great that's good news I know what

1343
00:58:26,680 --> 00:58:33,240
I'm installing after the show and then I'm really glad you put this last one in here because I think

1344
00:58:33,240 --> 00:58:37,880
as Firefox if you're using Firefox this seems like a must-do yeah well especially if you're

1345
00:58:37,880 --> 00:58:45,400
using the default ad way to theme it is a essentially a CSS hack that will turn your

1346
00:58:45,400 --> 00:58:52,520
Firefox into something that looks truly GNOME native it's super simple to install you can

1347
00:58:52,520 --> 00:58:58,280
configure it in the about config menu instead of like having to you know hack on the actual

1348
00:58:58,280 --> 00:59:05,560
config files themselves and it just looks really nice yeah I like that it supports the ESR release

1349
00:59:05,560 --> 00:59:12,760
as well yeah there's really no way to state how nice and it just makes Firefox look native it

1350
00:59:12,760 --> 00:59:18,280
looks nice and it makes it look like a GTK application that even looks good on on plasma as

1351
00:59:18,280 --> 00:59:23,880
well I just think I really really wish this is how Firefox just natively looked on Linux

1352
00:59:23,880 --> 00:59:30,440
right it's super nice it's great it's clean it looks like like it's belongs on the Linux desktop

1353
00:59:30,440 --> 00:59:34,600
so I'll have a link to that that's a really good one and it's one that I need to set up

1354
00:59:34,600 --> 00:59:38,120
I just realized when I saw that link in there it's like oh I don't have that installed right now

1355
00:59:39,800 --> 00:59:44,200
so that's what I'm gonna do thank you Drew those are good ones and we'll have links to

1356
00:59:44,200 --> 00:59:51,960
all of Drew's all of Wes's and mine in the show notes and then if you're in the mobile room and

1357
00:59:51,960 --> 00:59:56,360
you want to share with us you want to share one with us let's do it in the post show you know

1358
00:59:56,360 --> 01:00:01,880
let's sneak them in there that's what it's there for that's right well thanks to a cloud group

1359
01:00:01,880 --> 01:00:07,080
sponsoring this here episode of the unplugged program they have a python 3 scripting course

1360
01:00:07,080 --> 01:00:11,480
for system administrators that will have linked in the show notes it's pretty nice you develop

1361
01:00:11,480 --> 01:00:16,360
the skills you need to write effective powerful scripts and create command line tools using

1362
01:00:16,360 --> 01:00:21,240
you guessed it python 3 but beyond the language itself you'll go through the full development

1363
01:00:21,240 --> 01:00:25,960
process including project setup planning and automated testing to build two different command

1364
01:00:25,960 --> 01:00:30,600
line tools and more it's pretty great we'll have a link in the show notes if you want to check it

1365
01:00:30,600 --> 01:00:36,280
out python 3 scripting for system administrators at a cloud guru go to cloud guru.com or use the

1366
01:00:36,280 --> 01:00:45,960
link in our show notes let's do a little bit of feedback Mr. Payne we got some on YouTube DL and

1367
01:00:45,960 --> 01:00:52,840
Hans wrote in and this is a really long email Wes but he essentially thought that when we

1368
01:00:52,840 --> 01:00:59,960
touched on the YouTube DL issue that we probably could have given more GitLab love you know given

1369
01:00:59,960 --> 01:01:05,400
a little more attention to GitLab he's been self-hosting on GitTia and he's running it out

1370
01:01:05,400 --> 01:01:11,960
of his living room that's great and he and then he just mirrors his repositories to both GitHub

1371
01:01:11,960 --> 01:01:17,480
and GitLab very nice which is a pretty interesting approach and I kind of think we touched on a

1372
01:01:17,480 --> 01:01:21,320
little bit that's why I didn't like specifically mention GitLab I think we just kind of mentioned

1373
01:01:22,760 --> 01:01:26,840
various self-hosting tools and that maybe some of these projects are going to have to consider that

1374
01:01:26,840 --> 01:01:30,280
yeah and what's the right setup how do you maybe take advantage of some of the GitHub

1375
01:01:30,280 --> 01:01:34,440
discovery factor community building factor but also make sure that well if they decide to do

1376
01:01:34,440 --> 01:01:38,920
what they want to do or can do at any time you've still got your project all the resources necessary

1377
01:01:38,920 --> 01:01:43,800
to continue development yeah and we also speculated about some other reasons beyond like DMCA

1378
01:01:43,800 --> 01:01:48,600
takedowns that might motivate projects into doing that do you want to take the free IPA feedback

1379
01:01:48,600 --> 01:01:53,880
because we asked people what their thoughts were on running Active Directory now that both Fedora

1380
01:01:53,880 --> 01:01:58,280
and Ubuntu have built-in support in their installers to join an Active Directory domain

1381
01:01:58,280 --> 01:02:02,520
I started thinking this might be a decent homeland solution but I don't really want to deploy

1382
01:02:02,520 --> 01:02:06,680
windows and so we asked people to write in with their experience using free tools

1383
01:02:06,680 --> 01:02:10,680
Matthias wrote in in the latest look you had mentioned wanting to set up Active Directory or

1384
01:02:10,680 --> 01:02:16,360
free IPA I have been using free IPA in my house and home lab for a little more than a year and

1385
01:02:16,360 --> 01:02:23,000
I love it you can use it to manage the SSH keys shells users groups and SSL certs all from one

1386
01:02:23,000 --> 01:02:29,400
pretty UI that looks and uses the same UI framework as cockpit which hey that looks pretty nice oh

1387
01:02:29,400 --> 01:02:35,240
really that is very nice actually I note that also it's possible to manage several other aspects

1388
01:02:35,240 --> 01:02:40,920
besides just your desktop login but other single sign-on aspects of a network that's kind of nice

1389
01:02:40,920 --> 01:02:44,600
and setting up LDAP for things like Nextcloud and GitLab seems to work too

1390
01:02:45,240 --> 01:02:51,000
I don't know I looked at free IPA and it looked like a hell of a project Wes you and I have

1391
01:02:51,000 --> 01:02:57,160
thought about doing it and we just I don't know we haven't quite been motivated to pull the trigger

1392
01:02:57,160 --> 01:03:00,920
on it and maybe it's because our login system has been working just fine the way we do it

1393
01:03:00,920 --> 01:03:05,080
we kind of have a standard system here at the studio we have our own systems for our own machines

1394
01:03:05,080 --> 01:03:09,400
well it's a lot you know there's a lot of moving parts there's a lot going on and a lot for us to

1395
01:03:09,400 --> 01:03:13,400
learn so I think if we do we need to you know dedicate some time to it but we're also maybe

1396
01:03:13,400 --> 01:03:17,960
interested in some some minimal smaller what's the you know what's the barebone system that gets us

1397
01:03:17,960 --> 01:03:22,360
some of those advantages but that we actually have an understanding of yeah I don't really

1398
01:03:22,360 --> 01:03:27,800
need to become an active director or LDAP administrator I don't want to no Patrick wrote

1399
01:03:27,800 --> 01:03:33,080
in about Zenitol which looks like it's spelled like it's some sort of medication but he says

1400
01:03:33,080 --> 01:03:38,040
it's a sugar-free gum yeah right exactly he says he's a developer at a small engineering embedded

1401
01:03:38,040 --> 01:03:42,440
systems company about five people or so so he handles all the IT for everybody and he said he

1402
01:03:42,440 --> 01:03:47,640
wanted to share his experience they have a 15 year old Windows 2003 AD server and they moved it to

1403
01:03:47,640 --> 01:03:52,200
something Linux based he's been using Zenitol as their AD server for about a year now and he's been

1404
01:03:52,200 --> 01:03:57,320
pretty happy with it he says has a good web UI for managing services users and groups unfortunately

1405
01:03:57,320 --> 01:04:01,480
you do need the Windows admin tools on a Windows machine if you want to do anything complicated

1406
01:04:01,480 --> 01:04:05,720
with group policy but he says he doesn't have a need for that we don't we would not have it no

1407
01:04:05,720 --> 01:04:10,680
definitely not and he says we have a mix of Windows and Linux clients both work great I

1408
01:04:10,680 --> 01:04:14,600
renamed our domain in the process and migrated the Windows clients to the new domain turned out to be

1409
01:04:14,600 --> 01:04:19,320
super easy it was a little more annoying to get my Ubuntu 20.04 system connected but it wasn't too

1410
01:04:19,320 --> 01:04:23,400
bad it's nice to be able to just log into my workstation using the same login I use everywhere

1411
01:04:23,400 --> 01:04:29,480
else in the office yeah I bet and now it's even easier in 2010 it's built into Ubiquity he says

1412
01:04:29,480 --> 01:04:33,800
I've never used any other LDAP server so I can't really compare but I imagine using Active Directory

1413
01:04:33,800 --> 01:04:39,240
server and in a Linux all Linux shop probably isn't worth it I would assume the Linux domain

1414
01:04:39,240 --> 01:04:43,000
servers would be better integrated it'd be definitely nice to join an AD domain to the

1415
01:04:43,000 --> 01:04:47,160
installer but using the installer but hopefully they make it easy to join to an existing computer

1416
01:04:47,160 --> 01:04:56,600
too when I was trained as a Windows administrator back in the late 90s I was shocked when I came

1417
01:04:56,600 --> 01:05:01,800
to Linux and discovered there wasn't a central authentication system just by default out of the

1418
01:05:01,800 --> 01:05:06,760
box right because in the Windows land you just get domain controllers in Active Directory that

1419
01:05:06,760 --> 01:05:10,920
just is part of the Windows server package got the big old yeah right that's part of it in Linux you

1420
01:05:10,920 --> 01:05:16,520
have to roll it yourself and so that's why Zenitol and FreeIPA are I think kind of a more compelling

1421
01:05:16,520 --> 01:05:23,000
solution to someone like myself because I come from a background where I actually have rolled

1422
01:05:23,000 --> 01:05:28,360
all of these components myself I did one major install for a company that doesn't exist anymore

1423
01:05:28,360 --> 01:05:33,080
but it was a it was a meal on demand delivery company and the entire back end infrastructure

1424
01:05:33,640 --> 01:05:41,400
was on Linux it was using LDAP and we did have Windows machines that joined the Samba powered

1425
01:05:41,400 --> 01:05:47,000
domain and we use that central LDAP for web authentication for internet authentication

1426
01:05:47,000 --> 01:05:51,560
for email authentication I mean I for a short period you know for a couple of years I was

1427
01:05:51,560 --> 01:05:55,880
really living the dream there but I've just never really been compelled since then but if I could

1428
01:05:55,880 --> 01:06:00,680
throw together something in a container or a virtual machine and then go to a web UI and

1429
01:06:00,680 --> 01:06:05,080
kind of just have a decent like cockpit style web UI just enough to like yeah manage whatever

1430
01:06:05,080 --> 01:06:11,480
shared system users we might need that might not be so bad I could see doing that I could see that

1431
01:06:11,480 --> 01:06:16,200
uh before we go on I want to thank our unplugged core contributors unpluggedcore.com the core

1432
01:06:16,200 --> 01:06:22,120
contributors keep unplugged independent as long as we can we'll keep doing this show independently

1433
01:06:22,120 --> 01:06:27,560
and you also help reduce the ad load needed to make the show profitable and we're not unplugged

1434
01:06:27,560 --> 01:06:31,560
that's right and you know what else it really means is when we don't have a sponsor like you

1435
01:06:31,560 --> 01:06:36,520
know maybe maybe stuff goes bad and we don't get a sponsor for a little bit the core contributors

1436
01:06:36,520 --> 01:06:40,920
can keep the base cost of the show covered so we can still get it edited produced and when you

1437
01:06:40,920 --> 01:06:45,880
become a core contributor you get access to two feeds one feed is a limited ad feed same full

1438
01:06:45,880 --> 01:06:52,920
production all of the mix the editing just limited ads and then there's feed two which is the full

1439
01:06:52,920 --> 01:06:57,320
uncut live stream has the pre-show that never got recorded the one where we were playing videos

1440
01:06:57,320 --> 01:07:02,280
the post show all of our screw-ups the restarts the mistakes doesn't bleep anything if we swear

1441
01:07:02,280 --> 01:07:06,840
there's nothing like that it's all just raw full transparency for our core contributors it's

1442
01:07:06,840 --> 01:07:12,040
available as a second feed and it's like an extra show and in this case where we're recording early

1443
01:07:12,040 --> 01:07:17,320
well they get the show several days before the final release hey isn't that nice so there's

1444
01:07:17,320 --> 01:07:21,960
those perks too you get it as pretty much as soon as we're done which which can be an advantage

1445
01:07:21,960 --> 01:07:28,760
sometimes thank you to our core contributors unplugged core dot com well mr pain i think

1446
01:07:28,760 --> 01:07:31,720
that's everything we have for today we don't i don't think we really need to do any picks we

1447
01:07:31,720 --> 01:07:36,040
have picks but i don't think we just did a whole bunch of pain we sure did we just did like 20,000

1448
01:07:36,040 --> 01:07:40,440
picks i know i know and i can hear joe and i hear going you're going on too long you got to stop i

1449
01:07:40,440 --> 01:07:43,560
can hear him you know that's not what he sounds like at all but in my head that's what he sounds

1450
01:07:43,560 --> 01:07:51,160
like this see you next week same bad time same bad station this time it'll be sunday uh a little

1451
01:07:51,160 --> 01:07:55,000
after noon join the virtual lug hang out with them for a bit and then when wes and i are done

1452
01:07:55,000 --> 01:07:59,160
with linux action news we'll hop on the live stream that's perfect you just warm up with the

1453
01:07:59,160 --> 01:08:03,400
lug get chatting get ready to share your linux opinions and then we'll be there live linux

1454
01:08:03,400 --> 01:08:11,160
unplugged jblive.tv noon 30 pacific maybe one o'clock i don't know sometimes you got a snack

1455
01:08:11,160 --> 01:08:15,960
you know the news the news you don't rush the news so when we're we're not starting till we're

1456
01:08:15,960 --> 01:08:19,720
done with the news that's just the reality we'd love to have you join us next sunday we're just

1457
01:08:19,720 --> 01:08:24,600
doing these two out of order then we're back to our regular tuesday time slot you of course can

1458
01:08:24,600 --> 01:08:28,520
just subscribe and just get the show when we release it and just don't worry about it that's

1459
01:08:28,520 --> 01:08:33,880
at linuxunplug.com subscribe links to everything we talked about today linux unplugged 379 and

1460
01:08:33,880 --> 01:08:40,600
your feedback at slash contact and one last time that mumble info is linuxunplug.com mumble thanks

1461
01:08:40,600 --> 01:08:54,440
for joining us see you back here next tuesday

1462
01:09:10,600 --> 01:09:20,440
so

1463
01:09:20,920 --> 01:09:26,360
this is one of those episodes where next time i reload a machine i'll be going back to the

1464
01:09:26,360 --> 01:09:30,840
website and like remember what did west say what did drew say i'll be clicking on your links so

1465
01:09:30,840 --> 01:09:36,040
that's how you chose this topic yeah i do that i have there's like certain shows i go back to

1466
01:09:36,040 --> 01:09:39,160
the show notes myself after i set up a new rig that's why next week we're going over to how

1467
01:09:39,160 --> 01:09:46,120
to install large okay no no i don't think so no i'm i'm pretty happy with fedora these days and

1468
01:09:46,120 --> 01:09:50,680
really the ubuntu's keep killing it too it's it's it's a hard task for a distro to get me to move

1469
01:09:50,680 --> 01:09:56,840
off that and when i do it it tends to be mangero these days like i got my three you know i'm a

1470
01:09:56,840 --> 01:10:01,960
multi-distro man i've got i've got commitment issues to a single distro but i can live a three

1471
01:10:01,960 --> 01:10:06,040
distro lifestyle and i can live it pretty happily on the right balance that's right well i'll tell

1472
01:10:06,040 --> 01:10:09,640
you what i've been playing with lately that would be really helpful for you is ansible

1473
01:10:10,360 --> 01:10:16,760
just ansible all of your initial setup and just run a script and you're back where you started

1474
01:10:16,760 --> 01:10:22,440
but on you know a new os i don't i don't know me known ansibles but i know me that i know some

1475
01:10:22,440 --> 01:10:26,600
ansibles but i don't know me ansibles you know what i mean yeah what i'm saying is i need to

1476
01:10:26,600 --> 01:10:32,600
know me some ansibles because i've got these raspberry pies that um you know sd card could pop

1477
01:10:32,600 --> 01:10:37,640
uh usb disk could pop i could have to just swap it out and swap it in with a new raspberry pi and

1478
01:10:37,640 --> 01:10:43,240
it'd be really great in that kind of environment to just redeploy everything to it and not go back

1479
01:10:43,240 --> 01:10:46,760
and reset up the os and custom install the packages and custom configure you don't want

1480
01:10:46,760 --> 01:10:53,160
to install docker compose another time on that and tweak the ssh config as i do all the changes

1481
01:10:53,160 --> 01:10:58,920
i make i should just get it set up once and then deploy well between alex and myself i'm willing

1482
01:10:58,920 --> 01:11:03,400
to bet we could get you something get you something rolling it turns out if you try hard enough you can

