No pre-show this week. No pre-show. Radical.
I refuse to stick to a formula. We're just going to start the show.
This is an unplugged experience?
Mm-hmm. I'm unplugging right now, Wes.
Watch out.
This is Linux Unplugged episode 160 for August 30th, 2016.
Welcome to Linux Unplugged, your weekly Linux talk show that's getting ready to go back to school.
My name is Chris.
My name is Wes.
It is that time of year, Wes.
It really is.
And the show is actually, so far, not gotten too cooked out during the summer.
We've made it. We'll see.
There's still a few weeks left to get hot, but we did good.
Coming up on this week's episode of the Unplugged program,
a couple of big open source projects that are close to my heart just got a big update.
We'll tell you about those.
Then there's been a topic going on.
Binary versus text.
What?
Yeah, we'll get into that.
Also, there is an open source project that is beating Canonical to the convergence punch,
something we've talked about before, and they've got a big announcement.
We'll cover them.
Purism's in the news again with some interesting restructuring.
And, oh, those of you with Skylake systems, I've got some good news for you.
Oh, about time, too.
Also, we'll look at some problems potentially with Steam OS.
Talk about that a little bit in the show.
And Mr. Wimpy has himself a brand new device, a new mobile rig.
He's gotten – you won't believe it.
You're not going to believe what he's gotten Ubuntu Touch on next.
Stay tuned.
The fifth thing will blow your mind.
All right, Wes.
Get ready for it.
It's time to bring in our virtual lug.
Time for appropriate greetings, Mamba Room.
Hey.
Hey.
Hey.
It's greetings.
Greetings.
Hello.
What a beautiful cacophony.
Something.
It's not quite that, but it is something.
Hello.
Hello, virtual lug.
It's actually great to have you here today.
So let's start with some great news from Jonathan over at OpenShot.
OpenShot 2.1 is released.
A new release also comes with a pretty new intense video.
Did you see this thing?
Yeah, it is intense.
It's super like boom, boom, boom, feature, feature, feature.
That's kind of good for him.
It shows off some of the features.
So actually, I like it.
It now has new waveform support, which –
Look at that waveform.
Yeah, he really – you've got to get an idea of it right there.
So there you go.
Yeah, it's actually pretty neat.
New animation features, transparent image sequences, powerful key frame support, multiple
layers.
You can really actually do some pretty cool animation, and they have a video that demonstrates
that.
Stability and performance improvements are also in throughout.
OpenShot now officially has waveform on audio clips.
So like if you have a video down there, you'll see the actual formation of the audio in there,
so you know almost quite right where to cut.
It's a very useful editing tool, and it's something that a lot of other editors have
done.
So it's kind of nice to see this feature come back into OpenShot.
There's also new snapping support for the timeline, which is something that Apple kind
of pioneered, I think, in Final Cut X, or at least popularized it, and it's interesting
to see that OpenShot's integrating that.
It actually is a pretty good feature.
Also, now users can customize all of the keyboards, shortcuts and stuff.
That's nice.
Our users will appreciate that.
And the new tutorial system's in there.
So it just pops up little pop-ups along the little things with friendly messages telling
you what to do.
Not like Clippy at all, guys.
It's not like Clippy at all.
And I like this kind of humble note here.
We still have a few bottlenecks on performance, and we plan on addressing those soon.
We targeted the very slowest parts of Lib OpenShot and made some dramatic improvements
in speed, especially on some filters like brightness and saturation.
Lots of other nice improvements.
So that's a new version of OpenShot, and just sort of side note, comes with an app image.
Hey.
Yeah.
So if you're a favorite editor on Linux, if you don't need to do major stuff, or say
you want to move something from one container to another container, or you just want to
take a clip of something, I always pronounce it avidmux.
I'm not quite sure if that's the pronunciation.
Yeah.
You know, avidmux, avidmux.
Version 2.6.13.
I say it's called avidmux.
Sure.
Yeah.
That works too.
Sure.
Why not?
Is it avidmux?
Yeah.
Is it not avidmux because it demuxes the streams?
Yeah.
That's what I thought it was.
avidmux.
avidmux.
avidmux.
That could be avidmux.
I actually like that a lot.
Yeah.
I think that's actually exactly what it is because you can demux.
It's been decided.
And so this is really nice, especially if you have, say, a hardware device that can't
play MKV files, and you just want to take the video out and the audio out and put it
into an mp4 container, and you don't want to re-encode the video or anything.
This is great for that.
If you want to just clip like a moment of your favorite movie, you can throw it in here
and do it in and out.
It seems like there's a – like especially with these new features, there's a lot of
low-hanging fruit that you can get done with this.
Yeah, man.
This is really sweet because they've added a bunch of great features for Linux, and guess
what else?
Also being distributed via an AppImage.
Wow.
AppImage is taking off?
I guess.
I guess.
I've actually heard there's a flat pack for OpenShot that isn't installing under
Fedora right now, too.
Awkward.
Both of those already had AppImages before this release.
Yes.
Yes.
Yeah.
Yeah.
I just think that's kind of interesting that they both chose to go with AppImage.
It is a three-horse race officially.
Some posts about developer experience in deciding that and where the different challenges lie
for each format.
Yeah, I would like to see that.
OpenShot already had an AppImage before either Snap or FlatPacks were released at all.
There's actually an interesting thing because AppImages are something I've been looking
for more commonly because there's a few problems.
If you install the latest version of FlowBlade, you'll get a problem with the dependencies
and libraries that Kade and Live have.
They even have a note on their tutorial about the FlowBlade issues.
If there was an AppImage for it, it would work.
Oh, I see.
It's actually kind of interesting that these video editors are having releases so close
to each other.
Yeah.
I was also reading about FlowBlade today, too.
One big awesome day for the community.
Yeah.
Okay.
I'm going to take all of that and douse a little pee on it.
A little bit of pee here in our punch.
This is over from Liam at Gaming on Linux.
I wanted to feature this just because I've heard this from a few now and I don't really
know what to make of it.
Maybe you guys can help me sort this out.
I ditched SteamOS in favor of a normal Linux distribution for my gaming.
Recently I sat with my son and wanted to play a point and click adventure game called Putt
Putt with him.
SteamOS needed to restart to update.
So I did it, just flashed to a black screen after that.
We waited quite a long time to see if anything happened, but nothing did.
After rebooting, the system was completely broken with another black screen.
I tried everything I could find to fix it.
That was the final nail in the coffin for my time with SteamOS.
I don't have time to deal with such a breakage, especially not when you're dealing with like
a console experience, because my PS4s had problems before, so SteamOS certainly isn't
alone in having issues, but the difference here is massive.
On the PS4, I'm able to reboot into some sort of safe mode and essentially redo the PS4 operating
system, all achieved with the controller without any terminals, no resorting to keyboard commands
or anything of the sort.
My other issue is, honestly, I feel like Valve themselves are doing very little for SteamOS
to progress it into anything or something.
Other than driver updates and security fixes, they don't seem to be doing anything with
it.
They're not even really talking about it anymore.
I later set up Ubuntu Mate and within about an hour, I was running solidly with Steam
and everything was dandy.
For someone like me, with whom Linux is the norm, SteamOS is no better than a normal desktop
distribution with Steam installed.
I still believe SteamOS has its place, though.
On pre-built machines, of course, it's much easier, and of course, it does help promote
Linux gaming and it helps people to say there's too many distributions, there's an answer
for that, but it just doesn't seem to be a good fit for regular Linux users.
I'm not too surprised by that particular take, but I'm a little – I kind of also
echo his sentiment like what the hell is going on with SteamOS?
Yeah, exactly.
There's not – I mean when they launched, I feel like you could get away with it being
kind of minimal, but now that in theory, it should be maturing or getting better, there's
not that much of a value add, right?
Like if they were doing stuff like atomic updates to the core operating system or like
some sort of like more console-like safe experience, then I could really see selling it, but if
it's just going to have their runtime and start Steam on load, then that's pretty
easy to replicate if you're a Linux user.
And pretty boring, too.
Like where's the innovation there?
Exactly.
Yeah.
I wonder if anybody in the Mumble Room is a SteamOS user.
Do they have any take on this?
I'm going to have to try to set up a SteamOS machine and give it a good solid take.
Yeah, I know they haven't tried it since it first came out.
Yeah, I haven't really found it to be super necessary, and I find it to be more interesting
what some of the distributions are doing to make Steam work better.
Yeah.
Like one Steam box, one Solus box?
Gamingonlinux.com, but I will have a link in the show notes, too, if you want to check
that out.
So I'll follow that story.
I don't know what's going on.
There's also been some review coverage, whatever you want to call it, recently over at PC World
by Chris Hoffman, and he calls it out.
He says, broken promises, games that never made it to SteamOS and Linux, announcements
that were promised but there was never really any delivery.
He goes down a list of things like Batman Arkham Asylum, Street Fighter, Total War,
Gauntlet, other ones like that.
Yeah, Project Cars is another one.
I don't want to say this is not working out, but at the same time, it feels like Valve's
approach where they don't really get super involved in this part of it is not working
out.
Maybe things will change with Vulkan as Vulkan gets wider adoption.
Maybe there's some pushes going on in the background that we don't get to see, but it
doesn't feel like it.
Yeah.
So there you go.
That's our Valve update.
If you guys out there have an experience with it, SteamOS or otherwise, let us know.
Leave a comment wherever you watch this or go over to the contact form.
So you tried out Maroo OS, what was it, like a month ago or so?
I think so, something like that.
And that was, it's a Debian, you put it on your Nexus device, and then when you hook
your Nexus device up to an HDMI display or whatnots, you get a full Linux desktop, right?
Yep.
Did you see the news that they are going fully open source and they're going to expand to
additional devices?
Yeah, that is pretty exciting.
They are really kicking it up.
I'm glad to see that they have open source things and they've got that development rolling
because before it felt a little closed off and I was a lot less interested in it if it
wasn't going to really be open source.
Yeah.
Interesting too that they're still focusing on the Nexus 5, which just got ditched by
Google.
Yes, it did.
It's never been a better time to find a new use for that.
And here's the GitHub page.
Look at that right there.
They got it all out in the open.
They're using Debian, LXE, and of course, AOSP.
But the devices that they have, some of the devices they're going for are like the Moto
G, they're going to try it on the Moto G. There's some LG devices they want to try getting
this working on.
Of course, people are throwing in for the 6P.
There's some devices they're having a hard time with right now, like I think there's
something blocking the Nexus 5X.
But the Moto G, second gen, that is already planned.
The LG G3, already planned, G2, already planned.
And the Nexus 6P is planned, and the 6 are planned, and the 7, the tablet.
Now, with the tablet, you're really getting my interest.
This could be extremely interesting.
Now, when you used it, you spent some time with it.
If they expanded to some other devices, or say you replace that Nexus 5X, did you crack
it?
Did you crack it?
Yes, it is cracked.
It's a darn shame.
That is a bummer.
Wow, you made it a long time, though.
I know.
It's gone a long time.
I'm kind of waiting.
I want to see what these new HTC Nexuses look like in the fall here, but we'll see if I
can wait that long.
Yeah, good.
So I definitely am about ready to try out some more things on here now that it's kind
of not so pretty anymore.
Yeah.
The 5, though, is not the fastest device.
It is not, no.
And how was performance when you tried it?
It was fine.
I had some problems, and they were, at the time in the FAQ, it was talking about how
some people have problems with the Bluetooth mouse.
I encountered some of those, but otherwise, like the window performance, using the terminal,
pulling up a web browser, all of that worked just dandy, which was nice.
And so I'm excited that the code is out there.
It'd be cool to play with this.
Maybe you don't want Debian.
Maybe you want to have it behave slightly differently, especially for people who are
more familiar with the Linux desktop, having a code base that kind of touches that as well
as the Android system, I think will be nice.
Look at them just continuing to chug along, and I'd love to know more about their plans.
So if they hear this and want to chat on the show, reach out at Chris Elias on Twitter.
Let's talk some more.
While we're talking about mobile, let's talk about our friends over at Ting.
Go to linux.ting.com to take advantage of the unplugged discount and support the show.
You're going to get $25 off your first device, or service credit if you bring a device.
This is great, too, because they have a GSM and CDMA network, and your average Ting bill
is going to be $23 per device, and you're going to get a $25 service credit.
So that's cool.
They also have an early termination relief program.
If you're in one of those crappy monopoly contracts, you can get a little help from
Ting to get out of that.
Start by going to last.ting.com, and then check out how much you would save.
Ting is really mobile that makes sense, because it's just you pay for your minutes, your messages,
and your megabytes.
It's $6 for a line.
That's it.
The program takes its cut, and it's going to vary depending on where you live.
Like he do, Wes.
He sure does.
Like he do!
He do!
But you know, that's going to vary.
Ting can't stop that.
They would love to, but they can't.
No, they can't.
So you've got to factor that in, too, but they have a savings calculator that runs all
that for you.
The savings is nuts, though.
My bill usually is under $40 for three different smartphones.
Wow.
I love it.
And they're all unlocked.
I own them out, right?
They're my devices.
I bought some of them from the Play Store.
I bought some of them directly from Ting.
But you know what's honey badger?
I'm totally honey badger when it comes to this kind of thing.
I'm totally honey badger about this whole tier of devices that are just super, super
easy to get into devices.
They've never appealed to me, Wes.
Never like the feature phones at $60, $70.
Never appealed to me.
And then recently, I was talking to somebody about, boy, man, I just get all these notifications
about everything.
Okay.
So full disclosure, I was complaining about Android N and talking about how I'm just getting
bombarded with notifications because all my notification stuffs are all messed up now
with Android N.
And so somebody said to me, he's like, why don't you just get like a flip phone?
And I was like, oh.
I could just get, because Ting's got some great deals on just like the simple, easy
flip phones.
Also a nice simple way to try out Ting for a little bit.
Like check out the, I love, like if I was going to do this too, the Kyocera Dura, which
is a nice heavy duty phone, $63, no contract.
Just keep that in your back pocket all day, not worrying about it.
And when someone needs to call you, they have you right there.
And for $6 a month, I mean.
But you know what?
Look at this.
They got the Moto E second gen for $57 right now.
It's cheaper than a feature phone right now.
They got it on sale.
Wow.
That's the phone to get if you want to get a decent Android device at an unbelievable
price with no contract and only pay for what you use.
Linux.ting.com, $57 for an off or for an unlocked, no contract.
It also seems great if you have like a business or something and you just want like, hey,
I want to give some phones to my employees.
You need to run this one app.
Do some basic messaging, like a Slack type app or a telegrams or a kid or a parent.
Oh, that's, yeah, that's a good Pokemon device right there probably.
Oh, exactly.
Oh my goodness.
Good point.
Holy smokes.
Check it out.
Go see what Ting can do for you.
They got a little savings calculator.
You can try it out.
See what that's like.
Yeah.
Look at that.
LTE.
Two different networks.
This is, wow, $57 for the Moto E, second gen, no contract, no determination fee, pay for
what you use.
Wow.
That's great.
Linux.ting.com.
Go check them out.
Sign up and see how much you just might save.
I don't have a lot to add to this next story and we do have a ton more to get into today,
but I guess I wanted to take a moment and say, what the hell's going on with Fedora?
I love those guys and gals, but what the hell is going on with Fedora?
And Scott over at Ars Technica just posted this review, Fedora 24, the year's best Linux
distro is puzzlingly hard to recommend.
Even for a great update, rollout trouble reminds us release cycles can mar a distro.
And he just touches on great points about issues that users have had post Fedora 24
release, Skylake issues that Fedora 24 has had, update problems, and honestly, because
of all of these bumps that seem to affect every Fedora release, the eight month release
cycle becomes way too short.
And then he ends up kind of talking about for the targeted audience of Fedora, they
really need to understand they're competing with distributions like Arch.
That's a good point too.
This is not a fair comparison all the time because Arch is a rolling release, but I would
be more inclined to embrace Fedora if it had either a long term support type of release
that would last several years or a rolling release that dealt out updates as they were
ready.
And hence Fedora sits somewhere in the middle and ends up with an often awkward update process
happening all too frequently.
It's possible that the new tools in DNF and GNOME software will make things easier on
the update front, but for now, that's far from certain.
Perfectly put into words how I felt about Fedora when I used it.
It's in an awkward spot there.
And they either need to like, I don't know, rebase off CentOS so that way they can support
it for a while or they need to just kind of come up with some sort of happy middle ground
between rolling.
Do you have a sense of that?
No, I agree.
There's like a lot of things that are pioneered in Fedora and there's a lot of neat development
that happens there and you get to try out cool stuff.
But you're right.
It often does feel like you're just stuck kind of halfway in between and if you just
done it a little earlier or waited a little bit longer, you could have had a solid product
that like would have just stood on its own in a way that a good Ubuntu release does,
but it often feels like you're just somewhere in the middle.
Yeah.
And I really, I felt with Fedora 24, it was a step back in the direction.
It made so many good progressive step forward.
And it's just such a shame when like there's a lot in Fedora 24 that I'm excited about,
I like, but overall it's not, you know, that doesn't mesh well enough.
It's not polished enough in the right places, so that's just not usable.
Is it unreasonable to say that also maybe the market expectations have shifted too?
Like it seems like Mint kind of made a good bet when they decided to base off of an LTS
for a while and then just iterate on that and it seems like distributions like Ubuntu
Mate are much more appealing in spots where Fedora might have been in the past.
And I wonder if maybe the market has just shifted a little bit underneath them and they're
still catering to something that is kind of outdated now?
That's an interesting –
Or is that –
I think there's at least a little bit of truth there.
I think it certainly – the market has changed in what users want.
I think just with the prominence of rolling release distros in general, it's made people
kind of think about the release cycle system differently and they may have different expectations
and I think it throws more contrast into that like are you a super stable LTS distro or
are you going to give me the new stuff I want and I understand that maybe stability isn't
there.
And I wonder if they will – if they can – if there is a way they can address this
through things like flat packs like it's sort of inferred there and whatnot so that
way the major OS underneath getting updated as much doesn't really affect the user land
applications?
Because that would go – that probably would actually go a long way.
Yeah.
Because at the end of the day I think like we both agree that you just need to be able
to – when you're in a pinch and you need your computer to do the thing, you want it
to work.
All right.
So does anybody disagree in the mumble room because I want to give them a chance to go
first.
Arm, go ahead.
You start.
Well, it just – it seems whenever their release comes out, it's always followed almost
immediately by – or very soon before by a new release of Gnome which they're not – it's
too late to put in.
And then everyone's comparing – well, you know, they just waited.
They could have put it in.
But that would mean they'd have to wait for a good sort of three months after a release
which means the previous release has an extra long life cycle and then they just get hammered
for the fact that they haven't released one for ages.
I think it's kind of a catch 22 really.
They can't really win.
Yeah.
I know people listening right now probably disagree with the assessment and so I guess
again, leave a comment or show up in the mumble room next week.
Yeah, please join us.
Because I really want to rephrase the way I'm thinking about Fedora because it doesn't
– it feels like it's –
I think we'd also want to hear from people like if you think Fedora 24 perfectly fits
your needs, you're having a great time with it, you're excited about things and you think
it's –
There's always that though.
I mean there's always those people.
True.
I have to say that I agree with Wes in there that if it's going to be like that for Fedora,
it might as well just be rolling and the thing is that Fedora does have a rolling sort of
version called Rawhide.
Yes.
Right.
Good point.
Of course, I also seem to remember a certain somebody saying quite a while back all Linux
distributions should go with the rolling release cycle, right Chris?
No, don't characterize me like that.
Don't get me in trouble.
All right.
Well, I don't want to make it sound like I'm attacking Fedora so I don't really
want to –
No, I just want to agree with that.
I think we both respect Fedora a lot.
We just want to see their releases be even better because I'm excited for the future.
Here we go.
You're using Fedora 24 on a machine that looks like it's a pretty low-spec machine.
Tell me about it.
Yeah.
I'm just using a Chromebook.
It's ASUS 720 and I have two of them.
One is using Arch and the other one Fedora 24 and I updated from Fedora 20 I think, 21,
22, 23, 24 and I never had problems.
So this machine is working really stable and really good.
Gnome?
Yeah, this is normal Gnome, stock Gnome.
The only thing I have – the repository is rather small.
When I have some console music application like CMOS and I have to compile it, I'm amazed
that this is not in official repositories or Mumble is not in the official repositories.
But otherwise, this machine is really a no-brainer.
It's running stable and I never have problems with it.
Very nice.
Thank you.
Thank you.
Because I know it's not all bad.
Yeah, not at all.
It's still a great distribution and there's really smart people working on it.
It just seems like it's not necessarily staying competitive and they redid this – they rebooted
and then they – they almost maybe rebooted too early.
I don't know.
Anyways, let's move on.
Maybe we'll pontificate on it at a further point after we reflect on the wisdom of the
audience.
I just want to give a mention out to the folks over at Purism kind of continuing their journey.
They've been working on sort of making a few changes I think and reaching out to the
community differently and it appears to be one of those is the creation of an advisory
board at Purism.
Now you remember that I had the Libre 15 reviewed a while back on the show.
We've also reviewed the Librem 13.
Purism is pleased to announce the creation of its advisory board comprised of top tier
experts from the free software community and they list all of the personalities they have
on there.
Together they bring their vision with decades of experience in cyber security, privacy protection
and digital freedom to Purism's product development as the company continues to create
products that finally address privacy and digital rights by default.
I like that.
I think it's probably a good thing.
I think so too.
I think it adds some legitimacy and some transparency to it like in particular I see Matthew Garrett
on there.
A lot of people disagree with him.
I certainly disagree with some of his opinions but technically he's done a lot of good contributions
especially in the firmware kind of area.
So I'm excited to see what kind of input they can give and maybe the next time we review
one of these guys it'll be really exciting.
Even better.
Even better.
So that's just sort of an interesting change.
I think we're seeing a shift in the winds at Purism and so your Linux Home Plug show
is tracking the weather forecast for you.
One little update before we really jump into some of the big stuff, Mr. Wimpy has joined
us to tell me about – to get me really – what this next segment is called is Get Chris Super
Jealous.
That's what this next segment is going to be called.
But really quickly for those of us with Skylake rigs you're going to be happy to hear that
Linux Kernel 4.8 is going to have Skylake power management fixes included.
That's the big new feature is Intel Skylake power management bug fix.
There are also other nice updated drivers and architecture improvements and some changes
to KVM.
It just hit the release candidates for stage and Linus himself says it looks like everything's
normal and it's been a bit quieter than RC3 so hopefully we're well into the calming
down phase now.
And so we will probably see 4.8 ship fairly soon and those of you that are on Skylake
systems might be compelled to update.
Hopefully it's another chink in the armor.
I know I sometimes see new Skylake systems like just not going to do it yet.
The Skylake thing has gone bomba.
And then Intel just today announced a new 7th generation with built-in 4K support.
All the headlines say that.
Give me a break, right?
Give me a break.
So I'll tell you what –
Got to be sure about that.
Do you have a KVLake comment?
Go ahead.
I said they're going to show it at IFA in a couple of days.
Oh yeah.
Yeah, that's true.
Yeah.
All right, Wes.
Let's thank DigitalOcean for sponsoring this episode of the Unplugged program.
I tell you what.
DigitalOcean's got a new fancy website which I think I mentioned a little bit ago but it
is – I keep finding little spots, little nooks and crannies that they've updated.
It's pretty impressive.
DigitalOcean is our go-to infrastructure on demand.
When I need a Linux system to do something for me, really I start with DigitalOcean.
And if you go there, you can take advantage of a promo code to get a $10 credit, dounplugged,
all one word, lowercase.
This is your Linux infrastructure as you need it.
You could be one of the big dogs now.
And what's great about DigitalOcean is the pricing is really low enough that you could
just use it for basic testing or educational purposes but the infrastructure is powerful
enough and fast enough that you could just put it in production as well.
I like that because when you combine that with their snapshots, their availability of
application stacks and documentation, you can actually implement something that's really
solid to use for a long time.
Like a lot of their guides will tell you how to use Let's Encrypt to get HTTPS going.
DigitalOcean is one of those things now where it's – for me, it's faster to spin up
a server up in the cloud, quote, unquote, that is faster than some of the computers
I've had in my house that are like $5,000 computers or something like just some massive
system we've had for production purposes years ago.
We built a couple of years ago, we built a couple of Hackintoshes that were just these
monsters that rendered all our video and of course now they've just been relegated
to like media PCs because it's very – and it's not – I don't know how much money
we spent on them but it was a lot of money for like all these processor cores and all
this RAM and all this CPU and now I can just turn it up like a dial on DigitalOcean.
Just as a dial, Wes, just turn it up and I could never match their internet connections.
No, I mean, I think it's kind of a – every nerd needs their outside, separate little
place that they can run their scripts, you can have cron jobs and now you can get it
for like $5 a month or you can have – you can model whole architectures, you can use
their private networking, you can have their failover IPs.
There's so much you can do.
Yeah, and then you combine it with the API that is super straightforward, easy to use
but also makes – there's already – because it's so nice, there's really just so much
code already written that makes it really easy just to grab some of that and just start
taking advantage of it.
Promo code daunplugged and a big thank you to DigitalOcean for sponsoring the Unplugged
program.
So somebody – I'm a big fan of Wes, the developer of SyslogNG made some bold blog
posts recently and it's controversial, in fact, so controversial that he had to make
a second blog post saying, look, I'm not trying to say the systemd and journald are
the end all solution but I do want to talk about binary versus text formats.
What?
What?
Binary versus text formats.
He writes, to this day I'm surprised the number of people who complain about the journal's
binary storage format.
Now, systemd transitioned from text log files to a binary file format.
Having spent years working as a system administrator and after years of working with and on SyslogNG
in the capacity of the maintainer of the open source edition for more than a year, I'm
increasingly puzzled – okay, the maintainer – about all of the hostility towards non-text
storage formats.
Wes, a binary log?
What is that?
What's a binary log?
It sounds bad.
I can't cat or grab that.
Well, Chris, have you ever done anything in C?
Have you ever saved the memory representation of something to a file?
Because that's what we're – that's really what we're talking about.
We're talking about like structured data rather than something represented as text.
So back when I was still in school doing numerical simulations, that was something that we had
to do simply for performance reasons, right?
You couldn't – like reading all the text and if you imagine it like instead of writing
the number 5 here, you're writing the – or if you're writing several numbers, instead
of encoding it directly in binary, you're encoding it as text.
So storing it in a binary format gets away from that and you can actually – you can
have more complicated data.
You then do need the ability to parse it.
You can't use text-oriented tools.
Yeah, you're dependent on having tools that can read that binary format and that's I
think the big complaint against it.
Right.
That does come up a lot.
But in today's age, I'm not sure if that's relevant.
I mean for individual situations, yes, there are absolutely situations maybe in embedded
systems, maybe in systems where you need to administer but you don't have as much control
as you want.
But in today's world where like 90% of the things you run aren't containers or virtualized
or if you're doing it professionally, you have IPMI or some other out-of-band access,
it's pretty rare that you don't have some way to get the tool you need or if you have
control, just make sure that your systems have the full set of tools.
If you are working with a binary format, you can usually then benefit from things like
well, instead of having to use grep or regex or something else, you can write queries on
it that can understand like only select entries whose date field is between these two things.
Something like you might do with SQL or even something like JSON objects.
So today, one of the things that made me think about this was I was reading a tweet by IBM
about a course they were doing where in the course, you spin up 8,000 Linux systems at
once.
And that's where I think these kinds of tools really matter.
When you have gigabytes of log files that you have to manage and things like this.
And so he goes to make the – he goes on to make the point that ad hoc queries on text
are hard.
The text is insufficient for structured type storage.
That grepping gigabytes does not scale.
On the binary logs, that their tools is kind of like saying, well, yeah, but you also need
grep and less and cat and all those to read text.
I'm of two minds of this because there's also some that would say it's not the Unix
way.
And that has – the Unix philosophy has served us well.
Of course, he argues things like Wtemp and Utemp are essentially this already.
Matthew Feeney That there are non-text things used already
in Unix.
Yeah.
Aaron Ross Powell So it's a debate that rages on in the subtext
of systemd and it's – watching this is kind of fascinating because I see some people
now having getting – systemd having gotten out there, they're loving it.
They think it's the greatest thing ever.
They're talking about it.
They're – I don't know what that is out there.
Matthew Feeney I don't know either.
It's like –
Aaron Ross Powell I think we are getting strafed by an airplane.
That's crazy.
It's a little distracting too.
And I wanted to take this moment to talk about your recent home project, systemd is playing
kind of an important role in your home network now.
And I'm not trying to make this an all pro systemd show, but I think it is interesting
–
Matthew Feeney No, I mean, systemd has problems.
I don't want to throw notes to an issue right now that Debian is dealing with.
But I think it is interesting how it is changing things a lot.
And so you set up an arch box as your router and you're using what to do the routing?
Aaron Ross Powell Yeah, I'm – well, I'm using IP tables
as a setting.
You know, the Linux networking stack and IP tables is doing it.
But to better isolate things, I wanted to try sticking it in a container.
Matthew Feeney Well, that's what it was.
So you set up your firewall in a container in a systemd container, so not using like
Docker necessarily or something like that, but using built-in tools and then in there
is where IP tables is running and –
Aaron Ross Powell Yes.
And then I'm running Firehole to configure the IP tables rules for me.
Matthew Feeney Nice setup, Wes.
Aaron Ross Powell And I just thought it'd be interesting to
– you know, there are plenty of problems with systemd.
I'm not saying it's the right solution for a lot of things.
But on systemd distros, you do get like a lot more standardization now.
So if you have systemd, you can use unspon to do like chroot on steroids.
You have better isolation.
So I wanted to play with – I played with LXD and LXC before.
I wanted to play with the systemd version basically.
And you pretty much just stick a file system under var lib machines, and then you enable
the systemd unspon at the name of that folder, and then you have a permanent container that
just runs.
And then you can – you know, you can do the systemd edit and have a conf override
file for that unit if you want to add extra options or you want to change it so that like,
oh, we'll add 10 extra veeth nicks to it or pass through the nick from the – so I'm
passing the nicks through from my host machine into it.
Matthew Feeney And it's all just essentially built-in.
Yeah, and they have a lot of nice stuff.
So if you use systemd networkd, like you can have it automatically connect the host or
have like, you know, you can have it make a bridge for you, and then it also masquerades
on that so that you can have all your things on one broadcast domain and have NATED access
to the internet.
And it just does it all automatically, which I'm not using that.
I'm kind of doing it my own way.
But it does make it really easy if you just want like, hey, especially for, you know,
development environments or something like that where maybe you have something that isn't
quite fit with Docker, or you just want to do it yourself.
Now, does this systemd – is it like, is it called an nspawned container?
What's it called?
I mean, it's a Linux container.
It's a set of namespaces.
You know, the container world is kind of murky.
I need a brand name.
It doesn't have the kind of flashy branding that Docker has.
So this systemd namespace container, is it running as root?
You can't – so they do run as root, or root in the container as the root in the host.
They are namespaced, but they do support user namespaces.
You have to compile that in if you're using Arch.
It's not included in the Arch kernel, but like Ubuntu kernel, it's there.
A lot of other distributions have it enabled.
And then in that way, you will gain more security protections, as long as you're not subject
to one of the various CVEs that have affected user namespace support.
But right now, there aren't any.
So go ahead.
Hmm.
Yeah.
And architect in the – architect in the chat room is pointing out Void.
It's Arch, but with less bloat.
We are getting strafed.
Yeah.
Do you hear those?
Wow.
That's crazy.
It is an attack here.
And I'm not saying this is going to make me insanely jealous, but he had a mumbled disconnect,
so we punted to that SystemD discussion there.
There's also a link in the show notes about, I guess, a bug that Debian is dealing with
right now where SystemD requires getting kicked in the face a few times to actually get your
network fully up.
It needs multiple restarts until the network fully starts.
Oh, yikes.
Yeah.
And it starts with, hi, this is a monster.
But relax, because its severity is minor.
At least there's a workaround.
So it's interesting to sort of be this far into 2016 now and look back at what a shit
sandwich the system detransition was and to see there's some interesting things, like
I guess the last person I thought to come down on the binary log debate would be one
of the SyslogNG maintainers.
For some reason, I just didn't expect that.
As somebody who's used SyslogNG, I find it interesting.
Yes, I know Wimpy's back.
So we'll get now into the segment where he gets me super jelly.
I want to mention, if there was anything we just talked about or any of these concepts
that you feel like you're a little rusty on, Linux Academy might be the platform for you.
It could be the place you need to go to try out, maybe expand your knowledge set a little
bit.
LinuxAcademy.com slash unplugged.
That's the URL you go to to support this show and learn more about them.
They've got labs that will really give you hands-on scenarios, video courses, lab servers
that will spin up as you need them and you SSH into them, which I think is pretty great.
They have learning paths that put you right down a specific path of learning.
So say you want to get into this network management course.
It's definitely the way to go.
If you want to get into OpenStack or Azure or AWS, they also have courseware on that.
Of course, all of the essentials around Linux.
Check them out at LinuxAcademy.com slash unplugged, a platform built by Linux users, mentors,
instructors, and of course, developers who came together to try to really promote the
Linux platform.
That's one of the things I don't think I mentioned enough is when they first became a sponsor,
I had a conversation with Anthony who runs Linux Academy and he's like, yeah, we've watched
Jupiter broadcasting and we love that you are promoting Linux through the podcast.
This is a platform that we think can help promote Linux by training people, getting
people to become experts on it.
And they've built a real amazing platform to do it, LinuxAcademy.com slash unplugged
and a big thank you to Linux Academy for sponsoring the unplugged program.
So on and off, we've discussed ButterFS, ZFS, XFS, which XFS happens to be Wimpy and myself's
kind of go to like laptop, desktop, trustworthy file system.
And William is somebody who often chimes in on this conversation, he follows this stuff
pretty closely, he's got a good head on the shoulders about it.
And he teased me before the show about BcashFS and this was how he got me, he says, I think
it might already be better than ButterFS.
So William, what is BcashFS and why is it already looking so hot?
So BcashFS is a second take on the ButterFS concept of using copy and write B-trees for
storing your files in your file system.
So Bcash as the block device caching mechanism was already built using B-trees as a way to
store the cache blocks on the cache SSD before it would write them out to the hard disk or
as a temporary place sort of like the L2 arc on ZFS where you use the SSD as a hot read
cache so it could access hot data quickly.
And he turned that concept of just being this B-tree block caching thing into a full POSIX
file system.
So he added extra operations that could be performed on the cache device.
And what's great about this is he already had this stable B-tree technology in the stable
transaction system and then when he rolled it into a file system, the basic POSIX features
are already pretty stable, that's very performant out of the box.
It doesn't have all the features that ButterFS has yet, but they're on the roadmap and there's
already stuff that's coming up like encryption is basically done.
So if you wanted to roll files with encryption built in, that would work.
Compression also works, but there's no accounting yet.
So while the data will be compressed on disk and you'll have faster reads and writes, you
won't necessarily gain anything in terms of extra space on disk.
So if the data actually takes less space to store, it'll still count that as though it's
the uncompressed size.
So you won't gain any space savings necessarily, but you'll gain the performance savings.
Huh, and you're using it on systems right now and in production?
Yeah, so on my laptop right now I'm using it.
It's been stable for over a month.
I'll say overall the latency seems a lot better.
The small random writes performed much better than what I was using ButterFS.
Random writes, yeah.
Cool.
Very nice.
William, will you be like our BcashFS correspondent?
Let us know how it goes.
This might be shallow, but ButterFS almost feels a little tainted now, and so it's nice
that there's something, even if it's just a fresh name, it's like, ah, maybe this one
will be better.
For someone who runs ButterFS on 4.7, I'm still hitting bugs every day.
Yikes.
I'm able to trigger panics on some of my machines, and so going to BcashFS where I have yet to
hit any panics under similar workloads is amazing, and the fact that it's very fast
even compared to ButterFS is amazing.
It's claiming X4 speeds, and I would say from what I've seen, that's probably about correct.
Impressive.
Wow.
Wow.
The only downside is that there's no stable disk, so prepare to reformat every couple
of months.
Oh, yeah.
So that's all.
You are definitely in the early adopter phase then right now.
So he's trying not to stabilize the format too early.
I think one of the mistakes ButterFS made is they tried to stabilize their format before
they had their features done, so they were stuck with a really weird wonky format they
had to work around.
Yeah, okay.
One of the things about BcashFS is he's taking the time to do it right, so he's not going
to stabilize the format until all the features are complete.
Nice.
Yeah, and it's nice to see that as another take out there.
Well, cool, William.
Thank you for updating us on that because I know we've mentioned the project in the
past, and I think I've mentioned too that he has a Patreon where –
He does have a Patreon.
Yeah, I'll link that in the show notes.
So I think speaking of impressive feats, I think Wimpy has pulled off some impressive
feats to actually have a connection.
Wimpy, you're there, right?
You're connected.
Hello.
Hello.
This is England calling.
Can you hear me?
Hello from GD1.
We can hear you, Wimpy.
You've done it, sir.
You've done it very well.
So you have got my interest piqued because, of course, if I ever am able to jump off of
Android and get onto a platform like Ubuntu Touch, I'd really like to do it on a piece
of hardware that I would covet, that I would love to hold in my hand.
And the Meizu Pro 5 definitely caught my eye, but I've never really been able to grab the
Ubuntu Touch version.
I can find it with Android in various places.
It's got a fingerprint sensor with a hardware home button.
It's got a 21 megapixel camera, curved edge glass, a real Samsung processor, not a MediaTek
processor.
Nice.
It just looks like a great piece of hardware, but always running Android.
And my understanding was, Wimpy, that if you got one of these devices with Android, you
might not be able to install over-the-air updates for Ubuntu Touch.
And so I'm wondering if, perhaps, you may have an update for the group to share with
the class.
I do.
So I bought a Meizu Pro 5 that came pre-installed with Flyme OS, which is Meizu's own Android
spin.
Flyme?
F-L-Y-M-E?
Yeah.
I'm reliably informed that it's pronounced Flyme.
Yeah.
Flyme.
I don't know.
It could be Flim or...
Based on Android 5.
5.1.
Okay.
And long story short, it is now running Ubuntu and everything's working, including over-the-air
updates.
Nice.
So it is possible to take that Android platform and run Ubuntu on it.
What was the key?
Was it because you were able to get it with an unlocked bootloader?
What was the secret sauce that made it happen?
None of them ship with unlocked bootloaders, unless you get one that's actually running
Ubuntu, in which case you can unlock the bootloader on the ones that come shipped with Ubuntu.
The ones that come with Flyme have locked bootloaders.
The key is somebody who was on the beta program for Meizu had a daily build, and that did
have bootloader unlock capability.
So the trick here is you can only flash that build on what are known as either the global
or international versions of the firmware.
So either you know for sure you're buying a device which has the global or international
firmware, or it is possible, I have learned, because I've done it, to actually modify the
Chinese firmware to appear to be international.
And this is just so you can flash the global firmware at the top of the Chinese firmware.
This particular beta build that allows you to unlock.
So you make it an international firmware.
You then flash this beta firmware.
Then you can use Fastboot just to unlock the bootloader.
From there you flash TWRP onto it, and you can then install Ubuntu in one of two ways.
But the easiest way I've found is some nice person has actually made a TWRP backup of
OTA 11 for the Meizu Pro 5.
So you just download that, stick it on an SD card, restore that.
That then boots into Ubuntu, but you've still got the TWRP recovery.
And the problem with that is if you then say do OTA updates, it doesn't apply the OTA update.
So you then go back to Fastboot, flash the Ubuntu recovery, which you get from GitHub.
And at that point, you then have a fully Ubuntu Pro 5.
You can then get the OTA updates, and everything works as you'd expect.
So you've got a beautiful camera, fingerprint sensor, and USB-C all work, right?
Yep.
And the fingerprint reader, and yeah, all the bells and whistles.
Do you notice a big performance difference between your previous Ubuntu Touch hardware?
I do, yeah.
And so considering I was using the Meizu MX4, which was previously the best you could get,
there is a significant difference.
So the models that shipped with Ubuntu were, so there's two versions of the Pro 5.
One that comes with three gigs of RAM and 32 gigs of internal storage, and one that
comes with four gigs of RAM or 64 gigs of storage.
The Ubuntu versions only came in the three gig 32 gig flavor, but I'm 99% certain you
could get this to work on the 64 gig version, and I'm half tempted to try it.
So yeah, it all works perfectly well, and I spent yesterday evening unlocking it and
flashing it, and I've had a little bit of a play today.
But the connectivity problems I had, as you will remember, I'm connected via shortwave
radio.
There is a problem there somewhere.
In fact, there's still a problem now, I'm looking at about 4% packet loss somewhere
between you and me.
But the way I'm connected at the moment is my Pro 5 running Ubuntu is connected over
4G, and I've turned on the hotspot on the Pro 5, and the computer's now using the Pro
5 as its hotspot.
It lives, it lives.
And there we go.
That's fantastic.
So I'm now talking to you through the Pro 5.
Wow, so this seems like a pretty great Ubuntu Touch hardware.
The only problem is, maybe I'll be honest, that sounds like it was a lot of work to pull
all that off.
It was, once you know how to do it, it's really straightforward.
Okay.
But the thing is, is that all the information in order to do it sort of spread over lots
of different places, and pulling that together took a couple of hours of reading.
Once I'd read it and understood the theory of what I was going to do, actually doing
it didn't take that long.
So I'll post a link in the chat room, because there's one Ask Ubuntu page which does link
to all of the right places, but you do have to sort of read further in all of those links
to actually piece it all together.
Is there anything not working, hardware-wise?
No, it all works.
Everything's working.
I know a good guide makes a huge difference, especially when you're like, well, I'm going
to take this image I downloaded off the internet and flash it to my phone, and here's hoping
for the best.
Yeah.
What about battery life?
Well, this I finished, I last charged yesterday about this time, so about full 24 hours ago.
It was off charge all last night.
I've done some development on it today, so I've been updating my apps, and I've been
installing them on this and testing them on this.
Let me just look at the battery profile and let you know where it is.
So there is, after 24 hours, there's 21% charge remaining, and I'd say for 50% of that time
it's been in active use.
Hmm.
Yeah.
And the charge is pretty, it looks like it has a pretty decently high-powered charger
too, so it charges pretty quick.
That's nice.
Yeah.
Yeah, it's got quick charge and all of that good stuff, and like you say, it's USB-C as
well.
Sounds like almost an uncompromising experience.
Nice.
Yeah, and so I've been sort of changing some of my habits in order to use Ubuntu Touch,
and one is, you know, there are Spotify clients, but they're not quite like Spotify.
You know, they do use Spotify, but the interfaces are a bit limited.
There's another thing called Cloud Player, which is very good, but I have no idea where
it's getting its music from.
I've not looked at the source yet.
So I've put a 200 gig micro SD card, Pro 5, and I'm going to put my entire MP3 library
on it and sort of revert back to listening to music that I have locally, you know, whilst
I figure out how I'm going to sort out, you know, music and podcasts and all of that sort
of stuff.
Yeah.
So I'm looking at it now.
Jesus, it looks like it just supports all of the bands.
I will have the full technical specs in the show notes, but pretty much all of the LTE
frequencies and GSM ones as well.
Yeah, and it's dual SIM as well, so you've got the option of either having two SIMs in
it or a SIM and an SD card.
That's pretty nice.
Yeah, it's got a 3,050 milliamp battery.
That's pretty respectable, and it has a 4K video camera on the damn thing too.
Yeah, which I think is something ridiculous, like 120 frames per second or something.
Jeez, yeah, this is really great.
Yeah, so in terms of hardware, this is a genuine replacement for my Moto Style X that I was
using with Android in terms of the screen size and its capability.
Now just some of the gaps in the apps need filling, and I've been working on my own apps.
This weekend to improve them and bring them up to a better level, so I've got two published
and another one that I'm working on, which is a new version of Pocket Casts.
It looks like it's a 2K camera is what it is, which is actually pretty great.
It could do 2K at 30 frames a second or 1080p at 30 frames per second, and it also has pretty
nice optics on it for a camera phone.
Dang, Wimpy.
Yep, you've officially made me jealous.
Yep.
So, see, the issue is I would need a good...
Do you have any of those links handy that I could maybe look at to see if it'd be possible
for me to pull this off?
Because I'm not like...
This isn't like a super...
Chris no good with the phones.
Well, I've done a little bit of it, but yeah, I just don't feel super comfortable with it.
Intro discender, I mean...
I guess if it's not my main phone, it's not as risky.
If I still had my Nexus...
And you know who to call for help.
Who are you going to call?
Oh, Wimpy.
Yeah.
Well, very nice.
Yeah, I'm just...
Here we go.
Here's the article.
Hang on a second.
Perfect.
Yeah, I would love to throw that in the show notes too.
So that's the Ask Ubuntu topic.
And read through that thoroughly.
In the show notes.
Yeah.
So the first bit changing the region, that's only required if you don't have a device that
is international stroke global.
The unlocking the bootloader piece is simply once you've unlocked the bootloader, you flash
twerp, which you can just do from fast boot, that's straightforward.
You then use that, then you flash that, you put the update for this beta version in the
root of the internal memory, and Meizu will automatically pick that up and flash it for
you.
You can do that with the Android, and it's just a case of then restoring the twerp, I
use the twerp backup of Ubuntu OTA 11, because that was the least thing about.
And then you flash the Ubuntu recovery.
So once you know what the steps are, it's quite repeatable.
And even the first bit, which is if you've got an international model, and you need to
patch it to be a global version, I did go through those steps, even though I didn't
need to do it, because I was interested to see what they would be.
Because you can only get the 4GB and 64GB variant from China, so that's almost certainly
not going to be an international version.
And that's actually quite trivial once you know what to do.
So yeah, it is doable if you've got the time to actually read it and feel comfortable.
And as I said to you last week, I wasn't prepared to spend the money unless I was sort of assured
of some success, and it has been successful.
I love it.
I love it because now I've lived vicariously through you, and those new iPhones are just
around the corner.
It's like, look at those.
Look at this thing.
This is what I want, right there.
That's really nice, Wimpy.
So the phone is, I think you are probably going to be one of the more interesting people
in the Mumble Room to follow when it comes to trying out this particular technology,
because this is something that I want to switch to as soon as I can, but I'm just, I watch
this, I don't know.
This seems like a lot of steps.
But you're making it seem like it's really close.
So I'm glad you were able to get connected and share that with us, because I think it's
going somewhere.
I think it's actually going somewhere.
This is exactly the kind of momentum and usability and real world experience.
I'm really excited to follow where you go with it, Wimpy, so I hope you keep us posted
down the road.
Will do.
Will do.
Thank you, sir.
Also, congrats real quickly while you're still here on the announcement that ByteMark is
sponsoring infrastructure for the Ubuntu Mate project.
That seems like a big milestone, so congrats to you on the project.
Thanks for that.
Yeah, thank you for covering that.
It might seem a bit dull to people on the outside, but that's a huge deal for us.
It will make a massive difference in how we can channel the crowdfunding money to development
projects and ByteMark are, well, not just Ubuntu Mate, they've been sponsoring Debian
and Kodi and LibreOffice and many other projects for years and years and years.
And their beliefs and attitude towards open source is very much aligned with probably
everyone listening to this now.
They find a way to give back in the way that they can based on what they have available
and relieve pressure points on projects with regards to hosting.
I've got effectively free access to their entire infrastructure platform at no cost.
I've been encouraged to do whatever I want to experiment with it and the original specs
of some of the servers that they pinged at me were just like massively over what we needed
and it was like, okay, that's amazing, but we don't need something with, you know, 160
gigs of RAM.
It was quite amazing, but yeah, they're a cool fit and I'm really pleased.
It's nice, just like Entroware, it's nice to be associated with, you know, other organizations
that share your outlook and your beliefs and bite marks certainly are in that camp, absolutely.
I love hearing that.
Yeah, absolutely.
That's great news.
That's really cool.
So, that's kind of probably the perfect spot to wrap it all up.
Thank you Wimpy for sharing that with us.
Thank you everybody in the moment room for joining us this week.
I really am glad, it is not always easy to find the time and so we really appreciate
it when you set that aside to join us.
It does make all the difference.
You can join us too.
Go to our jblive.tv chat room, do a bang mumble in there, get the server address, pass an
audio check, you're pretty much good to go.
It's easy peasy.
It's pretty easy.
Live times over at jubilabroadcasting.com slash calendar and don't forget the RSS feeds.
You don't have to worry about any of this crazy live shenanigans.
You can just listen on demand like a good podcast is meant to be whenever you like with
that feed.
Thanks for listening.
Take care, next week.
I was picturing Wimpy during that episode like in mission control scrambling to like
get the connectivity back online with the satellite which could be crashing into orbit.
He's like holding two wires together.
Yeah like gz gz gz.
It was like intense moments there.
There's me yelling downstairs, Louise, are you on Netflix?
Stop streaming.
There was just a thread in our Linux started 19 hours ago is bleeding edge unstable considering
Arch.
And I actually I think it's that's not the right question.
It's not that it's unstable.
It's that there could be a high velocity of changes.
And I think those are two separate things.
Yeah, it's more is it unstable?
Is it ready for something like a production environment and probably not with all the
changes that happen.
And sometimes there's a regression, but I mean, it's not that obvious.
But the thing for me that Manjaro wins hands down over anything that Antegra or Arch has
done is the Manjaro settings part, their own settings tools.
They are brilliant.
There's a kernel one and it just comes with every kernel, one click deployment, one click
on install.
And then when you reboot, if it doesn't work, you can boot back into the old one.
It's just all in a nice little GUI and it tells you which ones are the stable ones,
which ones are the recommended ones.
And then all of the proprietary drivers are just a one click GUI.
That's the easiest thing I've ever seen works flawlessly for me on every machine I've tried
it on.
Hmm.
So, yeah, I'm reading through the chat room right now.
Rika says he'd attribute the stability to Arch since Antegra only modifies a small subset.
There's also some other good feedback in here that's kind of worth mentioning.
JM says that I live on the edge but I like that Rahim123 says that I would say that Manjaro
doesn't actually test or fix Arch problems but rather acts as a very effective buffer
when Arch jumps the gun and lets major new buggy releases in.
That's interesting.
That's a very interesting point and that is I think a better way to sort of frame the
way to look at Manjaro right there is that Manjaro buffers you from when Arch jumps
the gun.
OK.
I think that's a super valid point and almost could be a game changer right there.
I was thinking about something you just said though and that was I think it was something
to the effect of since there's a lot of changes coming in, it doesn't suit it to be in production.
Well I mean I don't mean production, I mean if it's somewhere, you know, if you're somewhere
that's running Red Hat and you're going to run Red Hat for the next five years with no
changes or you're running Debian stable, no, this probably is not for you.
Here's where I think it's kind of an interesting use case because I think if you have a dedicated
IT shop and you have systems guys that are there that learn the system and they build
tools around the system and they work around the drawbacks of the system, then I agree.
Something like Red Hat Enterprise, Linux, Ubuntu, LTS, it's great for that.
But when you're somebody – just to make this super kind of relatable, let's just
say it's like you're a startup and you're moving really fast and there's a lot of
people wearing a lot of – there's a few people wearing a lot of hats and say maybe
like the CEO is also the IT person.
Those people don't have time to learn the mythology of that particular Linux that's
been frozen in time.
And what you actually – what it feels like for those people is you're getting straddled
with the mistakes, the technical debt or the things that don't work with these static
releases.
Oh god, that's right.
This thing still has that problem.
We have to – what was that fix to work around this?
What do we have to do for this old version?
And then that's how we see it.
Whereas something that is rolling or updated more frequently, while yes, there's a high
velocity of changes, a good portion of those changes especially these days are fixes or
improvements and it's funny because I never would have had this position three years ago.
I was the LTS person.
I was the CentOS person, the Debian person for my clients all the time.
Never – only in a rare instance did I roll Gentube for very specific use cases.
And I'll have to tell you, having used OBS or OBS, it's really at a point where some
open source projects get there and they're just – they're at this perfect point where
they keep iterating and adding features that are just super major features like the ability
to offload H.264 encoding to the GPU if you have an NVIDIA graphics card.
Well guess what?
We built that thing with an NVIDIA 960 in it just with the explicit intention of hoping
to eventually have that feature to offload that to the GPU.
Well boom, OBS lands it and because we're on a system where we're right up to date,
we got the latest FFmpeg, we get the latest CUDA stuff, we get the latest NVIDIA driver
and we also get the latest OBS, that limitation that – in the past when I have a Mac with
Wirecast, I build this mythology around it of how to make this thing work and the system
doesn't get updates, it doesn't get touched because it's on a production appliance which
never felt good as somebody who is into technology and somebody who wants to keep their systems
up to date and somebody that wants to take advantage of new production features.
That never felt good and now with OBS on a rolling system, yeah, I'm rolling the dice
that the machine that broadcasts these shows out to the internet could get an update that
could change something that could totally bork it like the ZFS bug that they have right
now when your root file system is ZFS but at the same time, I'm getting features into
OBS like one they just added recently which is so, is so, so necessary for live productions
is a studio preview mode where I can preview the shot that I'm about to show on the live
stream before I switch to it.
This is so fundamental that if you think about it, otherwise when we're using OBS and that's
how we've been doing it, you're flying blind.
You have no idea what you're actually about to show on the live stream.
Sometimes it's something that's completely the wrong shot or the desktop window hasn't
been framed properly because there was no way to know.
Good luck having that and hope you set it up right and checked it real quick before
you went on air.
But now, one of the just huge things they just changed in one of their minor releases
is studio mode.
So now we can switch to a shot before or after we know it's ready to go which is, which makes
us look way more professional and it's like, it's a fundamental production feature really
that all the proprietary solutions have too and I love that we have it basically the day
that comes out.
Yeah, no, that is, I know that I've followed some of the stuff that you've said before
and how where Noah said that that's really saved his butt sometimes when just getting
the latest update.
And Noah hasn't mentioned it before, I don't think, but is he not an LTS user anymore?
I don't think he is, yeah, I should ask him about that.
No, no, I don't think I've ever heard him say why.
I don't think he's on 16.04, well, because he's just had so many different, I should
get him to recap it, Rahim123 points out that OpenSUSE at Tumbleweed has great OpenQA which
could be that sweet spot, yeah, and I really think there could be room for that.
The problem I've had with Tumbleweed, because I really, really wanted to go with Tumbleweed,
but every time there's a kernel change, you have to recompile all the graphics drivers
and there's not a one-click deployment for that, you have to do it all the hard way.
Yeah, I'll tell you too, part of it really is the software availability that makes it
really possible too.
That's a huge thing.
I wouldn't use Manjaro if I didn't have the AUR.
If it didn't link in with the AUR, that would be it, it'd be gone.
