Holy smokes, this man builds a giant computer in his home.
It's a 16-bit mega processor, 14,000 individual transistors, and 3,500 LED lights.
It's going to have seven panels like the one they're picturing here when it's finished.
How about that?
It's costing about $20,000, he's told the BBC News.
Mr. Newman said he hoped it would have education of value,
but it would be hard to transport as well as likely to weigh about half a ton once he's finished.
The bits of the processor light up as they operate,
but other than that the entire machine operates the same as a standard chip-sized microprocessor
found in all computers.
I was taken by the idea of being able to see how the thing works, Mr. Newman said.
I have a visual way of thinking about things,
and I want to be able to see how a computer works and see how things flow around with it.
I intended this as a learning exercise, and man have I learned a lot.
The processor that powers the Michigan Micro Note,
the world's smallest computer, is a fraction of the size of a penny.
He's saying this in a capture here.
He says he's now relying on determinedness to get through it.
He says he is concerned about the space the processor takes, which is about two meters high.
He says when it's set up, it takes up the entire living room.
There's not much space left for living.
One of his fantasies is to line the hallway with it.
My friend thinks I'm mad, but they're also slightly jealous that I allow myself to do it.
Look at that, he's building a 16-bit computer.
Oh my god, if he can run Linux on there, he should come on the show.
Wow.
That makes me feel like that is a summer project that somebody should send to the FoShow.
That makes me feel like my summer projects are kind of lame.
This guy, it's going to take him a long time to build something like that, but that is so neat.
And to see it light up as the computer works, man, that's Star Trek. I want that.
Now Wimpy, I don't want to ask this question and imply that you're old,
but you've been around for a while, watching the Linux scene for a while.
Okay, I hope you don't take that the wrong way.
I'm sure there's a compliment bursting to get out somewhere here, Chris.
Well, you have keen observational skills of the landscape,
and I'm sure that with your keen observational skills, have you noticed every year or two,
maybe it's just me, but I swear these articles come up like, what if Linus dies?
And it's like this theoretical piece of what happens if Linus dies, what happens to Linux?
And it seems like we're a little obsessed with what happens if Linus dies. Have you seen this?
Yeah, it's not the first time I've seen this.
Maybe in the first few years, it had some credence, but now Linux is just so huge.
There's so many mega corporations behind it. There's so many thousands of developers responsible.
There's so many subsystem maintainers.
I don't want to wish an early demise upon Linus,
but if he does have a disastrous diving accident, then I think we'll all mourn his loss
and we'll all reflect on what he's delivered to the world, but Linux will carry on.
Isn't that good? And you know what, Linus says just as much, really.
So the reason why I'm getting to this is because Bloomberg had a piece up over the weekend,
and I totally intentionally ignored the entire article.
Even though it was about Linus and Linux, I saw that headline and I went, not this again.
Are they just trolling for clicks?
Do they have it on a calendar and they get a reminder that it's time to write about this?
I don't really want to fall for it.
So at first I ignored it, but I checked it out after, I guess yesterday?
Yeah, after noon.
And it turns out there's actually kind of an interesting video attached with it,
so I wanted to play that for us because maybe you guys might have avoided it like I did.
Maybe you didn't, but either way, it's got a great interview with Linus,
and I wanted to play a little bit of this.
The thing I really enjoy about programming is just the fact that you really can tell the computer exactly what to do,
and it will do what you tell it and nothing more.
I don't know, maybe I'm autistic or something, or borderline, but that doesn't happen in normal life.
I'm Linus Torvalds. I'm mainly known for being the guy who started and still maintains Linux.
The first computer I used was my grandfather's Commodore VIC-20.
I think I was 11 or 12.
The computer used a very traditional language called BASIC.
My sister says that the first thing I showed her was the one that everybody starts with when you're doing BASIC,
is 10, print, and you print a string, and 20, go to 10.
And that's basically saying, print that string forever.
She claims that I made it right out.
She's the best, which to me sounds very unlikely because we weren't necessarily always the best of friends,
but maybe I was trying to be nice and impress her with my programming skills.
It didn't start out very serious, but by the time I was 15, that was what I did.
You see code. You don't have to even think about it.
You look at something and you know what it does.
If you're not a programmer, you would think it's almost noise.
But if you've been doing it a long time, you can read it like any other language.
You can write code that looks beautiful but just doesn't actually solve the problem,
which is why I'm still doing the same project 25 years later.
It's because it's hard to write good code.
Well, I think the big takeaway from that interview, of course, obviously, is that Linus Torvalds uses Gnome 3.
No? Did you guys pick up anything else? I thought that was a good chat.
I like Linus. He's turning into a very nice, wise old man.
Not old, though. I mean, I gotta stop that.
Yeah, I don't think Linus has ever been an apologist for anything that he's done or how he behaves and conducts himself.
He is who he is and he's just accepted that and he expects the rest of the world to accept it as well.
Yeah.
This was one of the reasons why I found that whole code of conduct episode a little bit disappointing.
Because, you know, how many open source projects have still got the founder at the helm after 25 years?
And he is still at the helm of Linux. And no, sock puppet, I don't have a clean desk. You've got no idea.
When I had to do the UOS thing, I had to put blankets over all of the crap behind me.
And the code of conduct I felt was, you know, unfortunate for not Linus so much, but Linux as a whole,
because that sort of anarchic quality of Linux that has made it what it is was kind of being threatened a little bit by that.
But it hasn't really come to anything.
Interesting. You're right. You're right. You're right.
No, actually, I don't know. I feel like it did sort of, something did sort of shift a little bit.
Really? We heard anything about it since?
No, but, well, kind of. So Greg Kh wrote up, you know, he wrote that code of conduct, right?
And I feel like, well, I don't know. You know, here's what I wonder is if maybe we're just not asking for them just to conduct things behind private doors.
Right? Like if that's not eventually what the end result will be, is they'll just move the discussion to some sort of private,
like they'll still keep important stuff public, but you know what I mean?
Like it probably already happens to some degree, I suppose.
I don't know. I guess I'm not totally willing to say nothing's come of it. I don't know, though.
I feel like you're touching on something there that is actually really bothersome to me, though.
Like there's sort of like a fire he brings to the project, and if you dampen it out to make it more palatable to everybody,
sort of what makes it sort of that edge and makes it special kind of goes away. Is what you're saying?
Yeah, I do. I'm not talking necessarily about the way that some of the developers conduct themselves
and how their relationships and messaging toward other people of their community constructed,
but it's more about how Linux as a whole was created and emerged.
And unlike Unix, which was, there's this core base system that works in harmony and unison,
Linux was, we're just going to grab all these bits and stitch it together and make a system like Unix.
Which on the face of it is so, looking back at it, no one will ever use that for anything serious.
That's going to be so haphazard.
Yeah, and you know, I think now what we're 20 odd years in, and now it's things like Docker and core OS and containers
that are trying to sort of rationalize and consolidate that, for want of a better description, mess into something predictable
that you can then put your mess into, into sandboxes.
And what was announced yesterday, what was announced yesterday is that Docker, core OS, Azure, EC2 folks,
I mean like a lot of the industry, including the Linux Foundation, are standardizing on some of these container and runtime specs.
So it's funny, containerization is exactly what you just said Wimpy, it's bringing some sort of order to all of this
quote-unquote chaos, and who's in the best interest of that is these big commercial companies because they want to be able
to deliver products on this platform now.
And when they want to be able to deliver products, they want to be able to deliver them in a way that makes them money,
and in a way that they can reliably reproduce.
And so here comes containers.
Now containers are here for lots of reasons, but now all of a sudden, all these different various interests working together
like this, all Kumbaya style, all of a sudden it became a lot of people's best interest to sort of solve this problem under Linux,
and it's coming at us really fast.
Yeah, and it's being solved for the right reasons.
I know you mentioned that you wanted to talk about the Chrome package having, you know, being able to download a blob.
And it's the very fact that, you know, whilst you're installing a package, that package has root over your system
during the install process. So consequently, that package had it been submitted by a Debian maintainer to Debian,
it probably wouldn't have passed through the FTP masters because they would have spotted this behaviour
and would have stamped it out and wouldn't have allowed it in.
But just because it's a Debian package doesn't mean that it can't do things that it shouldn't,
because that Debian package is distributed by Google, you know, for Google Chrome, and Chromium kind of got tainted with it.
But the containerisation and things like snap packages and click packages and the other similar technologies that will emerge in due course
are all about not giving that package root during the install so that it is completely sandboxed.
Here's what I find interesting about this is it's definitely in some distributions best interest to really be on board.
Like there's an obvious reason why Canonical wants to invest in Ubuntu Snappy and why Red Hat's looking at Project Atomic
and all of these things, right? I don't totally grok what the incentive is for the 100% community based distros
or distros that don't really have a large commercial presence. What's their benefit for following suit like this?
Why should Arch ever want to transition to a transactional based package system, right? Or Debian mainline?
I wonder if we're going to start to see a new division among the distributions here, more so than enterprise versus personal distro.
It's possible. It's very early days. Having spoken to some of the developers for Snappy and snap packages and click packages
and tried to learn about it and understand it, I've come to the conclusion I just need to sit on the sidelines
and watch what happens for this development cycle and then learn from what comes out of that and use that as reference material
because it isn't clear to me at the moment whether this is solving a problem that someone like me doesn't need to solve
or if there is some value. One potential value I can see is somebody that works on a desktop environment
actually packaging up the desktop as lots of discrete packages and in some cases taking something that we spit out upstream
and then splitting that into multiple packages, you know, with the suffix common, the debug symbols, the headers for dev,
the, you know, the different applications, but based on what, you know, audio library they may use.
Just being able to say, right, here's the Marte desktop 1.10.0, the whole thing and you just install this one thing
and this one thing arrives as one lump and when there is an update, you just get the whole of 10.1
and it would be much easier for the upstream package maintainers to actually roll out whether they're SNAPs or atomic packages
or whatever it might be, it would be easier to actually just shift the whole desktop environment out as the whole thing.
Yeah. Yeah, boy, that would be awesome. And NorthRanger, you wanted to make a comment about how the Linux Foundation's involvement is key here.
Yeah, I think if you look back at the history of Linux distribution, there's always been this separation based on packaging formats.
Yeah, I mean, you mean like between dev and RPM distros?
Exactly. And those were always driven by the distributions, whereas the community development Linux in general,
they just focused on the kernel and didn't get involved. Well, Linux, Greg, Crow, KH, they work for Linux Foundation.
They're now involved in this container consortium.
So are they going to be the voice of the community to try to rationalize what all of these different corporate interests are?
Yeah, I mean, because there are some very conflicting interests here.
When I was looking at the list just a little bit while we were chatting, I mean, first of all, I'm really, really happy to see CoreOS get some play here
because they had a really good spec. They came up with some good stuff.
And I'm really pleased to see that the Docker guys didn't just be like, ah, screw that, we got to do our own thing.
Like, they're all kind of working together. So that's really awesome.
I'm glad that's starting to happen. I don't know how that happened behind the scenes.
I'm trying to find out all the different companies that were involved with this project.
But it's, yeah, it's pretty massive.
Docker, CoreOS, Google, Microsoft, Amazon are some of them.
I'm looking at the TechCrunch article right now.
By the way, if you didn't know, DockerCon was this week.
We talked about it on Coda Radio. I think it's 159, 158. Is this Monday? It's Coda Radio.
Google, Microsoft, Amazon, CoreOS, HP, WAHI, IBM, Intel, JoyNet, Cisco, EMC,
Apprecia, Fujitsu Limited, Red Hat, VMware, Pivotal, Rancher, Metasphere, and others are all in this coalition.
Holy shit. Goldman Sachs is even in there?
I mean, Google, Microsoft, Docker, and CoreOS got billing, but the fact that Cisco, and Red Hat, and VMware,
and Intel, and IBM, and HP, and EMC, and Cisco are in there?
Well, I think this is sort of a done deal, isn't it?
So, Linux's Docker Container Standards, I think we have it, ladies and gentlemen. We have it.
And there's other ones out there. I mean, there are definitely other ones out there.
I think even Canonical has their own.
Wow, how about that?
So, CoreOS and Docker are going to work together and other stakeholders on the Open Container Project,
which will be housed under the Linux Foundation.
The RCP is a non-profit organization that is chartered to establish common standards for software containers.
The Docker Container Format and Runtime will form the basis of the new standard.
So, I want to read that again, because that's the important part.
The Docker Container Format and Runtime will form the basis of the new standard,
and Docker is donating both the draft specifications and the code around its image format and runtime engines
to the project to get it started.
That's awesome.
So, yeah, wow.
With the announcement of the Open Container Project, Docker is telling the world that they are open to this discussion.
CoreOS founder, Alex Pivil, writes,
Today Docker is the de facto image format for containers, and therefore it's a great place to start as a standard.
We still feel that there are many technical issues existing in the Docker format,
but having a neutral seat at the table will help address these from the industry overall.
That's coming from the CoreOS guy.
For Docker, this means giving up a bit of control after receiving feedback from the community, partners, and customers.
We believe the timing is right to create a common standard for the world,
and will ensure compatibility and encourage innovation throughout the ecosystem.
That's the Docker's open source initiative guy.
Wow, so there you go. That's a huge deal, and that just developed this week.
This is Linux Unplugged, episode 98 for June 23, 2015.
Welcome to Linux Unplugged, your weekly Linux talk show that is just going to live with its caffeine addiction, okay?
My name is Chris. Episode 98 is going to be a fun episode.
I was putting it together today, and I realized, man, parts of this are really scratchy and itch,
something that feels familiar, but I haven't been there in a while, a place I haven't visited.
I realized it kind of has a bit of a system admin bent to it, a little bit.
We're going to cover a couple of interesting bits of feedback that have come in from the audience first in the show,
then a really cool way to deploy Linux throughout your network very simply, very powerfully, without a lot of work.
We're going to talk about that. Then that kind of started to stoke.
I think that sis Abin fired me, so to kind of finish that off, we're going to bring on, I think his name is James or Jim.
We have an interview with somebody from the OpenNoid project.
Now, this is a fascinating development.
It's going to make system administration, it's going to bring it to a whole new level.
It's going to make it so much easier.
For those of you out there that have a couple of systems to manage or work with virtualization,
from like a couple of boxes, man, I'm talking like two to thousands, this is a really fascinating solution.
Noah had a chance to run in with him at Linux Fest, sat down, got a demonstration of how this software works,
how the project works, what the UI looks like, how you can roll back machines across your network, really cool things.
We'll show that in today's episode, really neat stuff.
Then later on, towards the end of the show, we've got to talk about this binary blob that Chromium was downloading to turn on your microphone.
Yeah, you probably heard about this.
Is this the line? Have we finally crossed that line?
We're going to talk about that with the mumble room in a little bit.
We've got some stuff to get into, so why don't we do the first thing?
We've got to do the first order of business. Let's bring in that virtual lug.
Time appropriate greetings, mumble room.
Good evening.
Hello.
Hello.
Greetings.
Good evening, hello, and welcome to episode 98 of the Linux Unplugged program.
This article was submitted into the show today, and it kind of made me go, oh yeah, what about that?
I started a poll, and then I'm going to submit to the chat room here as I start to ask this question.
I'll start with you, mumble room, since you are an immediate feedback.
Is anybody in the room right now using Linux on the desktop with a touch device?
I'm not talking about your phone. I'm not talking about Android.
Are you using Linux, like a distribution that we all know, connected to a touch device somehow?
I just put a straw poll in the chat room. I would like you to vote.
Now, I actually am not. I used to have a connection to the Bonobo, but for the moment I do not.
So I just voted no.
While those votes come in, I was pointed over to this article at MakeTechEasier.com.
This is, what are the best Linux desktops have touch screen support?
This guy rounds up, and he says that Gnome is number one. Unity is number two. I'm not sure why.
He goes through and gives different tips on how to make them even more touch friendly.
But in here, he says, when it comes to touch, Linux still has a long, long way to go.
With touch screen-based computers becoming incredibly popular, it's never been more apparent that Linux developers need to step up their game.
And remember, Gnome and Unity were both very much built around touch. Unity has great touch support.
Plasma and Plasma Active have great touch support.
So, anybody in the mumble room right now using a touch screen? Anybody?
On one computer, yes.
And Wimpy? On one computer.
Okay, one computer. Like laptops, guys?
Yeah, Chromebook.
I've got an old Dell Mini 9 that I bought a touch screen kit for and retrofitted a touch screen onto just to experiment with.
Yeah. And that's the only one with a touch screen.
I bought a Dell touch screen to experiment with, and I like it.
But, you know, it is – I feel like it's – I don't feel like it's unfair to say that, like, Gnome was pretty much designed around the concept that touch was going to take over the desktop.
And I feel like here we are in 2015, and that seems like that was a bad bet.
That was a really – and in fact, some of the best stuff that's been brought to Gnome has made it more appropriate for a standard desktop.
And when you look at what Red Hat ships, they ship Gnome Classic, essentially.
And as you look at our straw poll right now, 94% of the votes are no on touch screen.
6% of the votes, yes on touch screen.
So what the hell happened? What went wrong?
I don't think that the input and output device can be the same thing.
It's just never going to work.
It's just simply a fact that this type of computer is just better with a mouse and keyboard.
I don't know about that, but yeah, maybe.
One thing I know that I don't like having my hand in front of the content, is that what you mean?
Yeah, exactly.
How are you making or consuming content whilst your grubby mitts are all over it?
And that's not to say that – obviously, phones and tablets have been very popular,
but we're now starting to see a drop off on tablet adoption and people now starting to buy computers again.
And I think that everyone's learned where a computer has its place, a traditional computer with a keyboard and a mouse,
and where a tablet has its place.
And I think maybe the keyboard and mouse have got their days numbered,
but I think we'll just find better ways for interacting with computers for those people that are making stuff.
Whether you're a computer programmer or a musician or a graphics designer,
I think there will be better tools coming along for us to use.
And maybe we'll transition to using tablets as a display device connected to these other devices for creating content,
but then also use that screen disconnected from those devices for consumption of content.
Do you, Wimpy, think that this failed bet on touch on the desktop is sort of –
are we seeing blowback from that in sort of the form of the adoption of Ubuntu Mate?
No.
You don't think so?
I think Dome 3 and Unity went too far in the touch direction and people wanted a more traditional desktop,
and I think that bears out in the response to Ubuntu Mate.
I think that the people that were going to use Ubuntu Mate were already using distributions like Ubuntu Mate before I came along with that.
I think you've got people that are prepared to use that computer in that way.
I'm not saying it's the – okay, maybe I should put it this way.
It's sort of a land of salvation then. How about that?
Yeah, but it's no different from any of the other distributions that have been out there.
So Zubuntu, KDE to a large extent, and Kubuntu, and all of the Linux Mint versions,
they all cater towards that traditional desktop metaphor.
Ubuntu Mate is not doing anything different in terms of the general user interface.
We've got a couple of little tweaks and tricks and what have you,
but every distribution has to have something that separates it from the rest of the crowd.
I think we'll see more touch – I mean I've got friends that have got computers with touchscreens and run Linux,
and they do use the touchscreens but not as the primary way that they interact with the computer.
So they use the touchpad, they use the keyboard, but when they say go to shut the computer down
and it pops up the prompt, do you want to restart, reboot, or log off,
they actually touch the button on the screen for log off, reboot, and things of that nature.
So they use it for a few sort of interactions but not as the main way that they actually drive the device.
So more of a convenience for some things.
That's how I see Angela using her yoga is sort of like it's like every now and then she'll unlock the screen that way,
move a window really quick or scroll something as just like a random way to just interact with it.
And my touch screen that I've got on my device is resistive, so it's kind of antiquated.
But I could say that if you were looking at map data, for example,
it would be easier to move around a representation of a map on a computer with a touch screen
by using the touch screen because we've got accustomed to that on our phone and tablet than using a mouse and keyboard.
So there are some applications where it's better.
And this is why I think things are going to come along that are better than the keyboard and the mouse.
Yeah, good point.
I think that is well put.
MiniMC, you want to make a point about how resolution on the desktop sometimes matters.
Like I have like a 2K monitor on my desktop.
Yeah, it's a question of finger size.
I mean, if you have a full HD display with a normal laptop, it's very easy to –
it's not easy to find the point really to touch on the screen.
But with a bigger resolution like the one I have now, it's better.
It's working somehow.
It's not a full HD resolution I have.
So the touch targets are a little more friendly.
Yeah, much more friendly.
Yeah.
How do you want to kill an application if you have to point at that X and you don't touch that X at the right corner and it doesn't close?
Right, yeah.
Yeah, that does make sense.
And the icon launchers are going to be more like towards the size of your fingers.
So when you're nubbing it, you're hitting it dead on.
It's an interesting thing.
I'd like to hear people's feedback too.
Yeah, go ahead.
So Chris, did you see Project Soli up a few weeks ago?
No, what is this?
Hang on a second.
I shall post it in the chat room.
Project Solia?
What was it?
It's a Google project.
Oh, oh, oh.
And when I was talking about new and interesting ways to interact with your computer, this is kind of, well, it's just amazeballs.
Yeah, I think I did actually see this.
Yeah, yes.
In fact, I covered this in Tech Talk, I believe.
Right.
It's like using radar to find user interaction controls and things of that nature.
I love this action.
I'm going to play this because this is so fascinating.
I'm doing it on Linux.
Oh yeah, we covered this in last.
That's why I know this.
This was our Runs Linux.
So look at this.
Check this out, by the way.
They're doing these on MacBooks running Ubuntu.
And so they have these tiny, tiny devices that are emitting radar and they're tracking finger movements.
And what I love about this is you know it's going to work.
Oh, that one there is a ThinkPad.
You know it's going to work because they're doing the development under Linux.
To track cars, big objects, satellites and planes, we're using them to track micro motions,
twitches of human hands, and then use that to interact with wearables and internet of things.
Now look at this.
And what's great is you get tactile feedback because your fingers are real.
Our team is focused on taking radar hardware and turning it into a gesture sensor.
Radar is a technology which transmits a radio wave towards a target,
and then the receiver of the radar intercepts the reflected energy from that target.
The reason why we're able to interpret so much from this one radar signal
is because of the full gesture recognition pipeline that we've built.
The various stages of this pipeline are designed to extract specific gesture information
from this one radar signal that we receive at a high frame rate.
From these strange foreign range Doppler signals, we're actually interpreting human intent.
Radar has some unique properties when compared to cameras, for example.
It has very high positional accuracy, which means that you can sense the tiniest motions.
We arrived at this idea of virtual tools because we recognize that there's certain archetypes of controls.
Look at that.
Like a volume knob or a physical slider.
Look at that. Look at that.
Imagine a button between your thumb and your index finger.
And the button's not there.
But pressing this is a very clear action,
and there's a natural physical haptic feedback that occurs as you perform that action.
The hand can both embody that virtual tool,
and it can also be acting on that virtual tool at the same time.
So if we can recognize that action,
we have an interesting direction for interacting with technology.
Now that is a type of interaction that I think makes a lot of sense
on a laptop or on a desktop.
Imagine just having that built into the casing of the laptop or a keyboard,
so there would just be another input method that's included in that device.
Yeah, I want that.
That's exactly the kind of input method I think that I would love to see come to the desktop.
Or laptop.
Or phones, even, I suppose.
Or TVs, even.
I think, yeah, or, you know, equipment.
You know, your, I'm going to sound old, DVD player, Blu-ray player, amplifier.
You know, instead of having great big ugly knobs on things.
Huge for VR.
This could be huge for VR.
Wow.
Man.
That is so cool.
I hope Google really, I hope that comes to market.
You know, sometimes these companies have amazing things in the skunk labs that never make it out.
I hope that one makes it out.
That's a cool one.
All right, well we actually have another really cool project that really tugs on my heartstrings
that I want to talk about.
And I think actually it could be something you could host on a DigitalOcean droplet.
So let's start there.
Let's talk about DigitalOcean, our first sponsor this week.
And I just want to tell you up front, if you know about DigitalOcean, grab our promo code DOUNPLUGGED.
You'll get a $10 credit.
You can try out DigitalOcean for a couple of months for totally free.
No credit card required.
Now, if you're not familiar with DigitalOcean, they've made some news this week.
It's actually pretty cool.
We were talking about DockerCon, right?
Well, up on stage, they were doing demonstrations of deploying lots of instances of machines with Docker,
you know, taking Docker on those machines and then just pushing a container to them.
And so he's like, well, the guy is up on stage.
He's like, so here's my script.
And he starts it up.
And I'm going to go into, you know, it's like a Linux machine that he's creating.
And he creates the machine.
And now I'm just going to go ahead and deploy it on DigitalOcean.
As soon as he says DigitalOcean, everybody in the audience started clapping.
DigitalOcean got a freaking round of applause at DockerCon.
How cool is that?
So he deploys it up to DigitalOcean.
And then he spins up like eight, nine, 10, 11 machines all at once up on DigitalOcean.
And then the containers get deployed up there.
And then, bam, they just start spinning.
It was a really cool demo.
And I was like, wow, that is the incredible power of DigitalOcean.
And what's so neat about that is that's on the high end, right?
But you can do anything on DigitalOcean.
Even if you're just like doing it for testing or your own personal system, like an own cloud
server or a Minecraft server, DigitalOcean will work for you too.
You can get started in less than 55 seconds.
And pricing plans start only $5 a month.
That'll get you 512 megabytes of RAM, a 20 gigabyte SSD, one CPU, and a terabyte of transfer.
And they have data center locations in New York, San Francisco, Singapore, Amsterdam.
And DigitalOcean just set up a brand new one up in Germany that is nice.
40 gigabit E connections to each hypervisor.
Their fastest SSDs yet.
And that Germany location has really, really good distribution.
So if you are doing some self-hosting, if you are maybe, again, if you have a podcast,
if you have 10, 15,000 listeners, you could host this up on a few DigitalOcean droplets
and you are done.
It is a very elegant solution.
I used to do something similar to this.
What we had is a little PHP script that when the users hit that, it would randomize which,
at the time, it was a different provider, which server it would pull the file off of
and then deliver it.
Later on, we had to move on to a different system.
But DigitalOcean now, with a terabyte of transfer and $5 a month, there are so many things you can do with it.
And the great part is their interface to manage all of it is amazing.
It is super intuitive and power.
You are just going to replicate that control panel on a larger scale with their awesome API,
like they were showing at DockerCon.
And that is where you can do your DNS management.
Take care of your snapshots.
One click.
Yeah, I said one click.
Yeah, I meant one click.
I am not talking like one click SUSE style where it is actually like 15 clicks.
I am talking one click DigitalOcean style where one click and you deploy the entire LAMP stack on an Ubuntu rig
already set up or an Ubuntu Fortune 04 machine with Docker ready to go or a Fedora rig.
They got all of it.
It is really cool.
Oh, and by the way, DigitalOcean recently just launched shared resources.
I mean team accounts.
That way you can share resources and not passwords.
Team accounts, yeah, that is going to be nice here at Jupiter Broadcasting.
I think that is a smart move by DigitalOcean.
Go check them out.
Get started in less than 55 seconds.
SSD, everything.
And use our promo code DOUNPLUGGED.
Get a $10 credit.
Try out a DigitalOcean rig, that $5 one, two months for absolutely free.
By the way, they have got CoreOS now which is a super cool up and coming distribution on servers
that you might want to get just for two months.
Go play with it on some actual production systems.
Why not?
Also, they have free BSD.
I am not sure why you would do that, but I am sure you probably have reasons.
DigitalOcean.com.
Use the promo code DOUNPLUGGED.
And a big thank you to DigitalOcean for sponsoring the Linux Unplugged program.
Alright, well MrBlackout24 in the Linux Action Show subreddit submitted this Butter Knife link.
Butter Knife, deploy a customized Linux to hundreds of machines in minutes.
Now you can probably guess why they call it Butter Knife because yes, my friends, it involves ButterFS.
Check this out.
A Butter Knife makes bare metal Linux deployment dead simple using the ButterFS file system and containers.
Yeah, how fancy and buzzword can we get?
Let's take a whole bunch of new stuff, put it all together, and get yourself a new deployment system, my friends.
So you prepare a template of a customized OS in an LXC container.
Brilliant.
So you customize your rig up in a Linux container.
You brute the provisioned image and deploy a template on bare metal.
And then you just set it up and it's done.
So I have a walkthrough that Blackout24 linked us to.
It is literally you pull down the Butter Knife ISO.
You know, take care of that.
You DD it as you would.
You set up a TFTP server using the Butter Knife provisioned image on your LAN.
You replicate your GitHub repository to the TFTP root server.
You boot the machine either from Pixy or a memory stick or CD.
Once it boots off Pixy, it detects the Butter Knife server.
And then it says, do you want to provision this machine?
Do you want to reboot this machine and power it off?
You obviously say, provision this machine.
Then Butter Knife wipes the disk, creates a ButterFS file system, downloads the snapshot of the newly created file system on that Linux container you set up, and blasts it onto the machine.
And you can do this to deploy live CDs or to a memory stick as well.
And it's all just right here on this blog right here that Blackout24 linked to us with images to kind of do this instead of try it yourself ready to go.
This is really cool.
So if you've got like a LAN or if you have some virtual machines and, you know, you just need to be able to blast a machine, a standardized machine out to them, this makes it like a four or five step process once you have this set up.
You've got to use ButterFS and you've got to use Linux containers.
But this Butter Knife system makes it really, really, really easy to go into a container, set up a basic system, and then you can provision that to all your machines.
Really cool.
So I wanted to say a special thank you to Mr. Blackout.
Now, with that said, so that's a fancy way to do it.
Wimpy, I'm wondering, do you have any tricks or methods for like reloading your systems?
Do you have like an image you do at home or when you need to reload, do you just format and deploy?
Right. So when I install the system, I install off the Ubuntu Mate ISO image, depending on the architecture of the machine or it's a Raspberry Pi.
But the trick that I have is that I use SyncThing now.
So SyncThing, I have my profile stored in SyncThing.
So the first thing I do on the new machine is install SyncThing.
You mean like your BAS profile or what do you mean profile?
Well, yeah, as in all of all of my profiles.
So all your dot folders?
All my dot files, dot folders.
So there's a utility I use. I'll look up the details and post it in the chat room in a bit.
It's called Macup, M-A-C-K-U-P.
And it was originally developed for Apple Mac users to backup their dot files and what have you to Dropbox.
And I contributed some initial ports for Linux.
And since the initial, it was all geared toward Dropbox back when it first started.
But now it's got just any directory you can use as the storage.
So I just have a SyncThing directory and it does all of the, you know, the SIM linking magic.
So you just restore your SyncThing profile directory and then in there I run a Macup restore and then it lays down all of the profiles for me.
So literally within a minute of installing the machine, I've got all of my configuration that I need in place.
Do you run into any issues with version differences or is the key to this approach you reload the same version of the desktop environment,
the same Chrome or Firefox? Do you have to manage it in any kind of special way like that?
I haven't been very careful about it, no.
I mean, mostly I'm running Ubuntu MATE 1504 and Arch Linux and they're all up to date enough that I've not run into any problems.
Interesting.
But when you use Macup, you can, you know, augment things.
You don't have to, it will prompt you and say, do you want to restore this thing?
So I do know, for example, that my Bash profile and Arch Linux, I don't want to have common between Ubuntu and Arch.
So I don't, you know, restore that on the Arch machine.
Gotcha. So that is some management, but yeah.
Yeah, but it prompts me for that because it knows there's already a Bash profile there that's different.
And the other thing that I've, yeah, yeah, yeah, I've had some good success with SyncThing.
I've just started using it a bit more aggressively now.
And the other thing that I've been doing recently is that deconf, which is the back end behind G settings, you can dump.
It's called deconf and the parameter is dump and there's also deconf load.
So you can dump all or some trees from deconf into text files and then you can deconf load those text files back into your tree.
So I've got a script that just dumps out the bits of the deconf tree that I know are safe and common between my systems.
So things like how I like the file manager configured, how I like the text editor configured.
And then I can, you know, just that's part of my Mac up post restore script actually then, you know, lobs all that back in again.
Oh, God. So you're getting like even like your editor config back the way you want it and stuff.
Everything, you know, SSH keys, GPG keys, all of my application settings.
So when I do a restore, I've got my hex chat configuration, which actually connects to my bouncer.
But nevertheless, you know, there's some config there and I've got all my mumble, mumble profiles in there and all of my mumble certificates.
So I run a Mac up restore and on a fresh machine within two minutes, I've got everything I need to get cracking again.
Nice. Now, Sean, you say you do something kind of similar with symlinks and own cloud. Can you describe that to me?
Well, really a lot of it's done manually, but basically you just take and take all your dot folders and throw them into your own cloud sync folder.
And then you just symlink the individual dot folders from your home folder to your own cloud folder.
And then it's just going to keep a hold of it, replicate that on multiple systems if you want to.
Okay. And then when you like launch into a clean install, do you just kind of sort of resymlink the ones you want to restore the config from manually?
Or do you like bash script that? What's your approach there?
I haven't got into the bash scripting part of it yet. I usually just do the same linking manually for the ones that I want to have.
And then that way I can actually have multiple versions and just kind of rename them and change the symlinks that way.
I like that. I mean, what I like about yours is yours is a little more surgical in the sense that you're just going to, you know what I want, X, Y, Z restored.
What I really like, though, is Wimpy's idea about exporting out decomp settings.
Because I knew it could do that. I know it can do that. I just never do that.
And sometimes I tell myself I don't do it because, well, I like to re-experiment and try something new every time I set up.
I want to be free to try something new. But really, I am getting to the point where I kind of always like to have this theme now.
For the most part, at least for like six months at a time, I like to use this theme. I like to use this setup.
So I don't know. I'm slowing down on that a little bit.
So in my Macup profile, I have the dot themes directory and the dot icons directory.
Yeah, of course.
And I just put all of that stuff in there now, and then it's all restored.
And including things like, you know, I use Genie for my development editor.
And all of my Genie profiles and syntax highlighting and themes is all in there as well.
So I can move from machine to machine now.
And I can take, I even have in SyncThing all of my git checkouts, which sounds crazy because you can just check git in and out.
But I SyncThing all of my checkouts so that if I don't have time to check stuff in on the laptop I was using and I'm upstairs,
I've just got that state of where I got to on that machine, and I can carry on.
That's interesting.
And Evil Pickles in the chat room is linking GnuSto, a Simulink farm manager,
which takes distinct packages of software and or data located in separate directories on the file system and makes them appear to be installed in the same place.
So that might work with what you're doing, Sean, is you combine GnuSto, S-T-O-W, and I'll add a link to that in the show notes too if I can remember to do that.
Wow, the good setup.
Anybody else in the Mumble Room have any kind of sort of backup or reload techniques they want to share before we move on?
I feel like mine are all very clunky and caveman.
No.
Mine's like, Chris reload, Chris install Dropbox, own cloud, BitTorrent sync, and Chrome sync, Chris done.
Mine is not nearly as elegant as Sean's or Wimpy's, and it kind of makes me want to step up my game a little bit.
All right.
I've got Mac up linked in the show notes, and right now I'm also linking GnuSto, which is the Simulink manager.
So very good.
Thanks, guys.
Good stuff.
I think I'm going to reevaluate my approach.
I think I'm going to adopt a – boy, I kind of am tempted to also play with sync thing now.
Thanks, Wimpy.
You're welcome.
You got my head spinning.
All right.
I want to get into the Opanoid discussion because it really tugs at the heartstrings for me.
It's something that I – it's actually kind of funny how I came across this footage.
So I was reviewing all the footage that Noah uploaded from Southeast Linux Fest, and I didn't see this clip because he didn't upload it.
But the rig, like the big broadcast rig, made it back to the studio because our next live event is going to be at LinuxCon in August, I believe, in Seattle.
And so he figured, might as well ship it back to the studio so that way it's local.
And so I take the rig out and I shake the hard drive out, and I found this clip that when Noah had a chance to get away from the booth,
he brought the camera with him and sat down and got this really fascinating interview.
So I'm going to roll this because it's like newfound footage from self.
But first, I have to tell you about how I've saved $2,000 in the last couple of years, more than that, actually, by switching to Ting.
What?
Yeah, Ting.
Ting is mobile that makes sense.
Ting's my mobile service provider, and I am a serious Ting advocate.
What I love about Ting is you only pay for what you use.
I know.
Wrap your brain around that.
It's just your minutes, your messages, and your megabytes.
After that, you're done.
Well, there's a flat $6 for the line and the taxes, but there's no like,
I buy X amount of minutes and X amount of messages and X amount of megabytes because I might use them.
No, that S is crazy.
Ting keeps rates simple.
We don't make you pick a plan.
Instead, you just use your phone as you normally would.
How much you use determines how much you pay each month.
You can have as many devices as you want on one account.
That's good because when you use more, you pay less per minute, message, or megabyte of data.
Your usage plus $6 per active device on your account plus taxes is your monthly bill.
Simple.
That's what we mean when we say mobile.
That makes sense.
What Kyra left out, too, is they have no hold customer service.
You call them at 1-855-TING-FTW, and a real human answers the phone.
And when I was talking to them before they even became a sponsor,
we were talking about this particular aspect of their business because the way they operate,
this is where they can invest heavily, is really good customer service, really, really good dashboards,
and rolling out new platform features all the time.
They have mobile apps that integrate with the service.
This is where Ting totally doubles down.
I love this aspect of it because it's super nice to finally get this high level of treatment from a carrier.
I was talking to them, like, how do you choose your service reps?
Because you're making a big stink out of this.
They said, well, first, we would do the traditional route because we've done it for some of our other companies
we've set up in the past, but then what we realized was we were really looking for the Android geeks
and the Windows Mobile geeks and the iPhone enthusiasts.
And when they were there, we would find the people that would always be the tech support of their family
or their peer group, and those are the people we wanted to hire.
So that way, when you call in, you're talking to one of the people that love this kind of stuff.
And that was, I thought, a brilliant insight on Ting's part.
And here's what I love, is right now, for a couple of days left until the end of June,
this is only going to last a couple more days, you can get $50 off your first Ting device
or a $50 service credit if you bring your own device.
Ting has GSM and CDMA networks, so there's a lot of devices you can bring.
They have a Bring Your Own Device page to tell you more about that.
$50 is a big deal. Go to linux.ting.com to get that.
That supports the Unplugged show specifically, but it also gets you the $50 credit.
Now, they have MiFi devices, and remember, with Ting's structure, you only pay for what you use.
So you can get $50 of credit if you get one of these MiFi devices.
That might mean that you're not paying for data for months on this thing.
You just have tri-band LTE in your pocket when you need it.
That's cool. That's actually very useful, too.
They also have feature phones that are great for emergencies,
all the way up to the highest end devices if you want to make it your dedicated line like I do.
It's a really great service, and they have really good people working at Ting.
Go to linux.ting.com and take advantage of that $50 discount while it lasts.
It expires at the end of June.
Linux.ting.com, and a big thank you to Ting for sponsoring Linux Unplugged.
You guys are awesome. I love, love, love my Ting service.
And now I'm on the GSM network, too, which is even more awesome.
So, let's talk about Opanoid.
Their slogan is, we make systems work.
Networks and systems enable every business operating today.
We keep them running and make enterprise-level features available to small and medium-sized organizations.
All right. That's a pretty badass pitch.
And at first, I was like, okay, that sounds kind of like what I always hear.
But Noah was wandering the floors like a madman at Southeast Linux Fest a couple of weeks ago.
And like I said, I found this clip with Jim from Opanoid,
and the sys admin in me immediately fell in love, and I wanted to share it with you guys.
So, here we go.
Welcome. We're here at CELF 2015, and walking around again like last year, the year before.
Not many Macs, not many Windows PCs, but a lot of Linux.
I ran into Jim and met Jim last year.
Now, you remember me from inside of the room, but I actually don't recall this story,
so you'll have to refresh my memory.
So, basically, Ryan Gordon, aka Ikyulus, he did a presentation on his Macbook,
and he couldn't figure out how to get it to connect to the projector.
And when I walked into the speaker sponsor lounge a little bit later,
you were in there having a conversation with somebody very, very vehement about people who brought Macs to conferences,
which I kind of have an issue with that, too, but I try to be a little bit more political about it.
But you were just letting it rip, and Ryan walked in in the middle of your tirade,
and you didn't recognize him or realize that he was the guy that had flubbed the presentation on the Macbook.
And he tried to say a couple of things in defense of bringing a Mac to an open source conference,
and you just pretty much ripped his head off and pooped down his neck.
I tend to do that from time to time.
It was wrong, but hilarious.
All right. Well, I have no recollection of that, but it's an amusing story nonetheless.
Now, you're here ripping Windows off of hardware and putting it on top of a virtualization system
to get so that you and I as system administrators, we just deal with the underlying OS of Linux,
and Windows just kind of sits on top.
That's something we can both get by, right?
Absolutely.
So tell me what it is I'm looking at here.
And actually what I might do is I might reposition the camera to look at the screen,
because you have actually kind of an interesting demo going on.
Okay. Great.
Now, don't get sick.
He's going to move the – okay. All right.
Now, OpenOID, Open Source Systems Intelligence, that's cool. I like that.
Okay. So we're looking at a Sanoid machine right here.
We're actually looking at – we've got two machines in a rack,
and you can see we're connected to both of them in Vert Manager right here.
The one on the top that I'm wiggling around in, this is the production machine,
and the bottom machine on the rack is backup.
And at the base of everything, this is a virtualization platform.
And we have Windows Server 2012 R2 virtualized on the platform,
and we're looking right here at a Server 2012 VM.
The idea behind this platform is we're condensing an entire enterprise virtualization stack
with a SAN and a 10 gig fiber transport network and separate compute nodes and all that
into a single commodity box running open source software.
And one of the things, when you tell somebody that, the first thing they think is, well,
it must be cheap and the performance must be, you know, not as good.
That's actually not the case.
One of the things that we all love to hate about Windows is having to reboot it constantly.
It's very painful.
So let's reboot it.
And that's really not so bad.
We just rebooted Windows in about a second and a half.
So obviously performance is not an issue here.
But that's actually the least important thing about this.
Much more important is if we drop to the console here,
we can see that we're actually looking at a stream of hourly, daily, and monthly snapshots.
Sanoid automatically snapshots all the VMs every hour on the hour and on daily and monthly as well.
Keeps them, thins them, rotates them out as needed.
You don't have to have any hands-on interaction with it.
It just does it all for you.
And it also replicates.
If you look down here, this is our backup box.
And you can see we've got the exact same stream of snapshots here on both machines.
So what that means is if you're concerned about, you know, are my offsite backups any good or not,
it's actually very easy to find out.
Just boot it up and see.
So that was pretty easy, and we know that our offsite backup is good.
If we're still not convinced, we can actually just log into it
and interact with it however we need to to actually demonstrate things going on.
Now if you've got sharp eyes, you might have noticed that we've got a shutdown event tracker here.
And the reason for that is that the replication is actually crash consistent, not application consistent.
I consider that to be a feature, not a bug.
So unlike Microsoft's volume shadow copies, there's no services that are forced to kies the system before it's replicated.
It just gets replicated no matter what.
So you can't end up with having like a writer get locked up and you don't get your replications.
Nobody wants that.
Now the other thing that I like to do is to look at, you know, what do we do if something goes wrong.
So in here, back in our console, we're looking at this 13 gigs.
That's actually the storage for our Windows 2012 R2 production box.
Well, we hate it.
It's gone.
We killed it.
And we can prove that.
We'll force it off.
And if we try to start it, you can see we get an error, of course, because we nuked the entire hard drive.
Oh no, what do we do?
Well, all we do is just look at our available snapshots.
And we'll go to our most recent hourly, which was only taken a few minutes ago.
So we do a rollback.
It's that quick, that easy.
That was literally all there was to it.
And we're done.
Everything's fixed.
So imagine instead of me just arbitrarily deleting the hard drive that had been a user,
if you are a sys admin who has to deal with Windows and its users, who clicked the wrong link in email
and managed to crypto wall your server up, your recovery is, again, just that easy.
There's no going to tapes or any of all that craziness.
You just do a rollback to your most recent hourly, and you're up in seconds.
Now, this is one of those things that I would imagine makes your life as a system administrator way easier.
And I actually am a huge advocate of Liberty and KVM and, of course, Vert Manager,
because the nice thing is it allows me to access all of my client servers from my laptop through SSH
and everything from top to bottom is Linux.
But you have gone one step further, and you're actually building these as a hardware solution for your clients.
Absolutely.
Okay, so tell me about that.
If I wanted to buy, like, let's say maybe I'm not very technically savvy,
you will actually build the system out for somebody and send it out,
and then they just plug it in and you'll manage it for them?
That's correct.
There are three base models, a small business edition, a standard, and a pro,
which differ in how much CPU, RAM, and storage they can handle.
They sell for a set price without storage.
You can either add storage yourself, or I can also supply them to you with the storage installed.
And basically, when you get the box, it's already set up, ready to go.
All you have to do is add VMs.
Outstanding.
And if people wanted to go learn more information about your consulting service or your build service, where would they go?
Opanoid.net.
Outstanding.
Thanks so much for taking the time, Jim, to speak with us.
We really appreciate it.
Thank you.
Really cool.
And I have linked in the show notes, too, a link to the code.
The policy-driven snapshot management replication tools are now currently using ZFS, or ZFS as you Yanks call it,
for underlying next-gen storage with explicit plans to support ButterFS.
There you go, Sean.
When ButterFS becomes more reliable.
So, Sean, I saw you say in the chat, I'm like, ah, I can do this with ButterFS.
Go ahead.
Get it in there.
Get it in there.
I'll let you.
Well, you know, it's already got it.
Snapshots.
It's there.
Yeah, but this is a really cool, like, full front-end UI management tool that I remember
back when I was managing a whole bunch of Linux VMs.
We didn't quite have anything like this yet, and it was becoming – I started – okay.
I don't know if anybody in the chat room remembers Red Carpet.
Does anybody remember a service called Red Carpet that was like a patch management system for Linux?
Yep.
Oh, you do?
Oh, Wimpy, can you describe it?
Because I'm not – I don't remember it very well.
I was just Googling it.
No, I just remember it from eons ago.
I don't think I ever used it in anger.
Yeah, yeah.
So I'm trying to remember –
Was it not – was it not for Red Hat specifically?
Yeah, and also it worked with SUSE for a bit.
Yeah, Red Carpet was the package management system for – from the Zeminian desktop.
Zeminian, and therefore Red Carpet is now owned by Novell.
Red Carpet supports most of the popular Linux distributions.
It later tended to the Zenworks – oh, man, Zenworks.
I did Zenworks management too.
Oh, man, I remember Zenworks.
This is one of the reasons I switched to SUSE Enterprise Linux.
And oh, man, Zeminian.
Do you remember Zeminian?
They were the ones that – actually that's where we got Nautilus from.
They were called Helix Code –
And Evolution.
And what?
Evolution.
Yeah, the Evolution mail client.
Mail client, yeah.
Right, yeah.
And it says actually where Zemarian eventually came out of, where Mono eventually came out of,
and Miguel did all of this.
I mean, this company eventually evolved into Zemarian.
Wow, a lot of history just all of a sudden hit me in the face.
And I used a lot of different tools.
Red Carpet was the first one I ever used, and I loved it because it was a GTK GUI desktop interface,
and it used SSH and remote – I can't remember what – oh, yeah, a little client server system for Red Carpet.
So you had to have like a distribution that was supported and had a package available for Red Carpet.
But once you did that, from one spot I could uninstall packages, I could install updates for all of the distributions,
one GTK app on my desktop.
For like six months I was in patch management utopia.
Eventually Red Carpet went away, and I couldn't keep up with the pace of development of distributions.
This was an early lesson for me.
And then I tried something called Zenworks, which was horrible because it was so complicated,
and it just sort of spun out and spun out.
So now when I see things like Opanoid or like Butter Knife that we talked about earlier in the show,
and honestly things like DigitalOcean, I just think it's a new era that makes Linux accessible to just a whole new group of people
that can deploy these really big systems now and manage them.
And like Sean likes to point out, ButterFS is going to be part of that, too.
I just get a little excited when I see it.
That was a little nostalgic.
Ximarian and Ximian, boy, that really takes me back.
All right, so you guys know fairly publicly here on the show, I've talked about how I'm a big Chrome and Chromium user.
I actually prefer to use Chrome since the Netflix stuff, but I guess now I can do that under Chromium.
And thanks to a bug, I believe this is how it started, and I'll open myself up to correction here in a moment.
But I believe thanks to a bug discovered by someone in the Debian project,
we now know that Chromium, if you install Chromium, like on Ubuntu or Debian and perhaps other places,
once it launches, it downloads a binary in the background that enables your microphone.
So that way you can do things like, OK, Charlie.
I don't want to activate your phone, but you know what it does.
OK, Charlie, what's the weather like today?
And then Charlie, a.k.a. Google, comes back and tells you what the weather's like.
And this is a search function built into Chrome browser you can turn on and off, and now they've been enabling this.
But people get freaked out.
I install the Chromium browser and it downloads this binary.
And the more I thought about it, the more I realized this actually might be a really big deal because, wait a minute,
what if it's not even – what if you just remove what the binary does,
not even the fact that it activates the microphone and the fact that they're doing it secretly in the background without user permission?
That, I think, is what gets me.
You say it could be doing anything.
It could be enabling GPU acceleration.
It could be enabling a faster write to my SSD.
But if they're downloading it in the background without my permission and installing it, right there, right there,
that seems like where the line gets crossed, right there.
Where it gets into absolutely egregious territory is when that binary turns on my microphone.
Because before I give them permission to do that, I would like to know what controls that list.
Can other things be added to the OK Google list?
Can hundreds of words be added to that list?
Can nothing be added to that list?
Is it an encrypted list?
Is it editable if I dig around in Chrome settings?
How is that managed?
What activates that trigger?
Before that question is answered, I don't want to install it on my browser.
And if they don't even give me the option they just do in the background, that's egregious.
So is this the line?
Or are we the boiling frogs that are going to sit here and say, no, it's not a big deal.
It's just not a problem.
It's not a big deal.
So I want to talk about that with a moment.
But first, I want to talk about Linux Academy.
I love Linux Academy because I see a lot of what inspires me in them.
People that are truly passionate about Linux and open source and about the community
coming together to create something that they think they're going to love.
That's what really Linux Academy is about, is true enthusiasts in Linux and open source
coming together with developers and educators, creating the Linux Academy platform.
Seven plus Linux distributions you get to choose from for any of the courseware that they have.
Then that automatically defines the VPS that they're going to spin up for you on demand
when the courseware requires that, which is really cool because that means you're actually
SSHing into a server, you're installing these things, you're configuring these things,
and you're checking for real world results.
That means when you go do this in production, it's not the first time you've messed with this stuff.
It's not just concept.
That closes the gap.
That goes from uncanny valley knowledge to you actually know what you're doing.
And I really like that it's self-paced courses.
And this comes through in a lot of ways.
From your availability selectors where you say, I'm available for one hour on Monday,
one hour on Wednesday, and three hours on Sunday.
And then it just automatically generates you some courseware.
That's also really great.
But they have over 1,549, I think that number's even gone up since they've updated these videos,
that you can go through and watch entire courses on.
That is some serious content, let me tell you.
I know what it takes to produce that many videos.
And they have scenario-based labs where you really work with common tasks in an everyday environment.
In these advanced labs environments, you'll complete these scenarios from beginning to end on live servers.
That's extremely handy.
They have great new courseware for the Red Hat course stuff.
They have the best OpenStack, the best Docker materials.
They have stuff for Ruby, Python, PHP, Android development, basic Linux courseware, IP tables.
In fact, if you just need to refresh a few skills, check out their nuggets.
I love this.
They're always adding new nuggets all the time.
Like they have some up here for AWS.
So if you're working with the Amazon Web Services, here's how to create a snapshot bash backup script.
Some virtual box nuggets.
Building a firewall with IP tables.
This is really cool because these nuggets last anywhere from six minutes to, I don't know, an hour.
And it's just a single topic.
You go in there, you deep dive on this topic, you get more efficient on that topic, and you're done.
This is another way you get value out of Linux Academy.
So go to Linux Academy, won't you?
In fact, get our special 33% discount when you go to linuxacademy.com slash unplugged.
Linuxacademy.com slash unplugged.
That'll give you our 33% discount.
Get in there, try it out.
See it for yourself.
Get a nice discount while you try it.
See if it works for you.
You can be the best judge to see if it helps you become a little more competitive.
Maybe it gets you a little bit more on that next review or helps you land that next job
to give you a bit of a confidence boost or just challenge yourself.
Linuxacademy.com slash unplugged.
And a big thanks to Linux Academy for sponsoring the unplugged show, you guys.
Keep up the great work.
Okay, so anybody want to jump in first on this Chrome topic?
To me it seems like this is the line too far.
And here's, I already told this story so I'll keep it brief, but here's what made me realize this.
It was Father's Day.
I was seeing family.
And this family, it was a couple, they have two Samsung S4 phones.
You know, a couple years old now because the S6 is out, right?
And before they installed this update they got, they wanted to come see me.
So I look at their update, oh it's Lollipop.
Oh good, you guys are going to get Lollipop.
Great, great.
Yeah, this is a good update.
You're really going to like Lollipop.
Let's do it.
Let's install it.
So we plug in their chargers, we hit the update.
It takes like an hour because it's got to update all their apps too.
It says it's going to take 30 minutes.
It does not take 30 minutes.
And it updates all their apps.
Well one of the new apps it gives them is Google Photos.
Oh okay, Google Photos.
All right, cool.
So I'm showing them, well I've got Google Photos on my phone.
Let me show it to you.
And I bust it down.
I'm like this right here is Google Photos and it is so great.
I do not have time to tag and organize my photos and I don't ever manage it.
And this just automatically backs them up to Google servers for me and unlimited storage.
And I'm just going into the whole thing, talking about how great it is.
And look at this I say.
And I bust out the search feature and I'm like it's tagged every person's face.
And look, it knows this is food, these are flowers, that's an object, that's a car, that's
a whatever, a holiday.
Like it's gone through and figured all this stuff out.
And I'm like so check this out.
And I hit the search button and I say show me all the pictures of my son Dylan at Christmas.
And I'm like and check this out.
I've never tagged any of these photos.
And the Google Photos app instantaneously auto populates the search results.
Here's all the pictures with Dylan at Christmas.
And I'm like isn't that awesome?
Isn't that great?
I never told it this is Christmas.
I never told it this is Dylan.
It just figured all that out by importing my pictures.
And they look at me like I am a crazy person.
Like they look at me like so how does it know that's Dylan?
And I'm like well it looks at the face.
So it knows the faces of everybody you take pictures of?
Yeah.
So it knows everybody you ever hang out with that's in your photos?
Yeah.
And I won't say this guy.
Let's just call him Jim.
And they say to me they say well what about your buddy Jim?
He intentionally like it's his mission in life never to have a presence online.
He never wants to be tagged in any photos.
He doesn't have a Facebook profile.
He doesn't have a Twitter account.
He doesn't have a Google account.
Like what about him?
What about Jim?
He's in some of your photos.
I'm like oh yeah Jim is in some of my photos.
Like so now Google knows that you hang out with Jim even though Jim never wants to be online.
Yeah I guess.
And so I expected them to be like oh man this is going to be so convenient.
Now I don't have to worry about managing my photos and I don't have to worry about losing my photos when I get rid of my phone.
But because they had never been introduced and this is my now this is my theory.
Because they had not really been introduced to some of this Google stuff.
They just were kind of all of a sudden thrown in on the deep end on one of the more kind of creepier things Google can do.
And they weren't sort of slowly introduced to it.
They didn't see it like be introduced through Google Plus and slowly develop with auto awesome features getting rolled out.
And like they didn't see the whole evolution of it.
They just kind of went in boom.
And they're like whoa this is way too and now they're not going to use it.
And then I thought could I could you imagine if I told them that their Google Web browser was automatically downloading a program in the background that turns on their microphone so that time.
So that way they can say OK Google.
What's the weather like.
They would think I'm a crazy person.
So when I think about it through their perspective I think gosh maybe this is gone way too far.
Maybe we are sitting here in the boiling pot just.
That's good you know they mean well there's just one more thing right but hey they fixed it right now you can opt out.
So it's just no big deal and we just keep on going.
One more thing one more.
But every now and then I have like these reality checks where I talk to people outside the tech bubble and I expect them to be like oh man that's great.
And they're like whoa are you OK with that.
Does Jim know you've done that.
And I'm like oh and I felt like she's like I didn't really think about that.
I had thought about it but I didn't really really really wrap my head around it.
And then this thing happens.
So what do you think.
Is this the line too far.
Sean I want to start with you.
Go ahead.
Well bottom line is anything that can compromise my privacy.
I want to be asked first before you add it to my stuff.
Good point.
North Ranger what do you think.
I don't think we should be surprised because we've seen this before with Android replacing gallery apps camera apps with the closed source.
Google versions.
Well and that's actually what I was going to ask.
And the value of this is negative.
Is this once again RMS being right or are we overreacting.
Is this what we get for using a proprietary browser by a advertising company that wants to make life more convenient.
But Chromium is not a proprietary application is it.
No but it still happened didn't it.
Yeah and so it probably happened because this is how Chrome is packaged how Chromium is packaged because the two are very closely related.
But the question here is is who is the package maintainer.
Because if you're using a Linux distribution ultimately you're placing your trust in the person that makes the binary packages that you install on your system.
Because as I said earlier for a brief moment for example I'm a maintainer for Debian and for Arch Linux.
So for a brief moment I have root on your system.
And the question is do you trust me.
And there are a lot of people out there that are in that position.
Yeah so you know there are processes in place with the distributions and they do things a little bit differently.
I think Debian is far more rigorous than some of the other distributions in terms of the checks and balances that are in place to ensure that the packages are of a suitable quality and they don't do anything you know untoward.
But yeah you take any distribution and ultimately you have to say to yourself for a moment somebody somewhere created this package and they have root on my system.
That's a sobering thought and I think it's a good perspective for us to take because it is the reality.
And it's when you think of it in that context in that perspective you can see why there are other other solutions being worked on.
And this is yeah exactly and this is why things like you know atomic and snappy packages and click packages are becoming a thing.
Because for example on Android when you install an app on your Android phone that app during the install process does not have root.
Hmm very good point.
Yeah OK.
In a go go I want to give you a chance to say maybe Jim is a lost cause that him and never having an online presence is not possible in 2015.
Should I not feel so bad.
Well it's kind of not possible because he could have walked past a stop that is sharing its CCTV camera with an app that you can download on the app so that lets you see CCTV cameras.
Sure.
That then means he's been online.
It is quite hard to avoid cameras nowadays.
Yeah isn't that so true.
So here's what I wanted to kind of put out there is maybe a feeler if you go to Linux action show to Reddit dot com find episode 98 feedback thread.
What could I recommend them that they could put on a phone.
Be great if it supported iOS and Android so maybe I could use it myself.
That would work for backup.
So I tried bit torrent sync.
Yeah it'll copy file program files off our pictures off.
But it's it's not the same thing to just copy the data as it is to actually have a little intelligence behind it.
There's another app out there called picture life.
This is a private company.
They were recently bought up that does the same thing that Google Photos does privately.
You pay more for it.
I don't know.
I actually forget.
I just was looking at it sort of casually and it automatically backups your photos does the face tagging does sort of like location tagging and tracking.
But it's a separate private company.
It's not part of an information behemoth.
That's kind of appealing but I would really like an open source solution for photo backup something where you know the user can let it run in the background automatically copy the photos off sort of like Google Photos does.
Or bit torrent sync or Dropbox.
Or actually I think I think there's even a way to do with own cloud.
I haven't.
Yeah OK.
Yeah Mr. Grumpy R says yeah there is a way to do with own cloud.
I haven't really played with that.
That might be worth playing with but then see they'd have to have an own cloud server.
Yeah that's a hard one.
That is a hard one.
I'm not quite sure what the solution is there.
Dropbox will do it as well as Waffle maker points out.
Now Mini MC did you want to point anything else out before we wrap up on the Chromium topic.
Yeah I did that blog post from Debian.
Yeah it looks like Chromium the Debian part of Chromium comes without native clients module support.
So even if that module was downloaded it cannot be executed because there is no NICL interpreter.
Right.
But besides that I agree with you.
They have gone too far.
Yeah that's not it.
I cannot agree with you.
Yeah I'm really stuck.
I feel like I'm locked into Chromium actually.
And so I implore the internet until I switch to GNOME web fully and links and G edit and all these other programs I'm going to have to like patch together to do what I do with Chromium.
Until that moment comes please internet stay vigilant on this browser.
Keep them on watch for me.
Let's do a neighborhood watch on Chromium because I can't go away.
I can't quit using it yet.
I'm hooked.
I'm on the juice.
I need to join a program.
But until then I'm stuck.
I'm stuck.
I need your help because that's how I make these shows.
There's just some good plug ins there.
I know people have no WebGL I know and Firefox drives me crazy.
I'm sorry I love it but it drives me crazy.
It is a disaster.
All right.
Well if you would have liked to chime in on this conversation you know you absolutely could.
We have an open mum room.
We just check your mics before you come on air.
We really do consider this our virtual Linux users group.
Come be a part of our vlog if you will.
Head over to jblive.tv on Tuesdays.
We do this at 2 p.m.
Pacific and go to jupitabroadcasting.com slash calendar to get that converted to your local time zone.
Also you can email the show go to jupitabroadcasting.com slash calendar or go to the subreddit linuxactionshow.reddit.com.
All right everybody.
Well thank you so much for tuning this week's episode of Linux Unplugged.
We'll see you right here next week for episode 99.
Okay Google.
How do I quit you?
Okay.
What do we got here?
Let's see.
It's got me something.
Google actually has an answer for how do I quit you.
Let's see what it is.
Is it an ad?
You have no idea how bad it gets.
What?
What is this?
I wish I knew how to quit you.
Wow.
Well thank you.
That apparently is its answer is a YouTube clip.
Well I don't know how to quit you Google.
I need you.
All right.
JBtitles.com.
Let's go pick our title.
JBtitles.com.
Good show guys.
Thanks you.
Thanks you.
Wow Wimpy you have a really bad ass backup strategy there.
I'm not expecting something so crazy cool.
I mean I guess I should have.
It's not it's not complicated.
If you look at that utility it's really simple.
Yeah.
It's got a little.
So it's kind of meta because I use Mac up to back up the Mac up backup rules.
So it restores itself.
You know it's quite cool.
Yeah.
Yeah I like it.
I got it.
I managed to grab the link so thank you for posting that.
That's a good one.
Maybe I almost I almost want to do a whole episode dedicated to people's backup techniques.
If we had enough people chiming in that would say they could show up in the mummer room
and talk about it.
I think I'd be down for that.
I'd be down for that.
All right.
JBtitles.com.
JBtitles.com.
Man is it hot in the studio today.
Yes.
Yes.
I'm not going Alex Jones on on Chrome.
Come on.
Come on.
That's a little harsh.
Not OK Google.
That is.
Wow that's good.
I'm.
Wow.
Wow.
Drawing the line at Google Windows as a second class citizen Mac up your Linux.
But a knife Linux containers out of touch Linux.
Hello.
Hello Mr.
Puppy.
You're just in time.
Yeah.
Are we ready to stop.
Yeah.
Yeah.
Oh sure.
Should we do it over again.
Let's do it over again.
Spider Oak would be a decent open source location.
The thing that annoys me about Chromium is the fact that they hide that extension.
It's an extension.
It's an add on.
It's a feature that gets added into Chromium.
But the fact is that they don't make it visible in the user interface anywhere.
Right.
That is that is accessible.
They're going to be like in the Chromium 45 right.
Right.
Apparently apparently it was an A and C and A C L plugin.
So that's kind of been depreciated now.
And a go go.
You got this weird buzz on your line.
Are you coming in over a client.
Are you coming in over an analog connection.
I think it might be me.
I might stop talking now.
It is you.
I know that.
But it sounds like maybe you have like a little interference on that card or something here.
Not OK Google I think is our.
God it is hot in here.
It is so hot in here.
All right.
Not OK Google.
All right.
Good.
Good.
Well how are you doing Mr. Popey.
Oh sorry Wimpy.
Go ahead.
Yeah.
I was just going to say Popey how are you finding the nice cool weather over here at
the moment.
Oh it's delightful.
Oh shut up.
It's a lovely evening isn't it.
Very funny.
Now OK.
All right.
So both of you guys are here.
I want to pin you down on this.
This is ridiculous.
I don't I don't I don't know if this is a culture difference or what but beer and curry
how does that go.
How do you do beer and curry.
Like I can understand like beer and like fish and chips or beer and burgers but curry and
beer.
No.
All the things you've just listed were wrong.
It's obviously beer and curry.
Either either you have loads and loads of beer and then you get really hungry at the
end of the night and you go for a curry or you go for a curry early in the evening and
then you spend the rest of the night having.
Yeah but then aren't you having like curry beer beer belches like all like the entire
evening like you're belching up curry and beer.
Yeah.
Yeah.
Yeah.
And and in the morning your wife gets to wake up to the delightful smell of sort of you
know beer curry farts.
It's you know it's a it's a it's a beautiful thing.
I'm just I'm just a toilet roll in the fridge for the next day.
Yeah.
Yeah.
Yeah.
And the day after you file for divorce.
Yeah.
Yeah.
But we're not animals.
It wasn't all beer and curry.
We did actually drink a vast quantity of Long Island ice tea before we started on the beer.
Good.
Good.
Oh man.
That's it.
That's an interesting combo.
But no that's that's that's the culture here.
It's some beer then curry or curry then beer.
Or if you're really lucky beer curry and then more beer.
How do I.
I just feel like you're pulling my leg right now.
I just feel like you're pulling my leg.
I don't know.
No no no.
No no no.
No seriously.
That is honestly.
Yeah.
Yeah.
Yeah.
Yeah.
Yeah.
Yeah.
Yeah.
Yeah.
Yeah.
Yeah.
Yeah.
Yeah.
Yeah.
Yeah.
Yeah.
Yeah.
Yeah.
Yeah.
Yeah.
Yeah.
Yeah.
Yeah.
Yeah.
Like it seems like you have a limited selection.
So I'm I'm usually like I'm the guy that like is like well these kind of beers go go with
these kind of foods.
Are you drinking any kind of bear or are you drinking specific.
Often if well if it's beforehand then you could drink anything.
OK.
OK.
big ones or one of the smaller brands. And what kind of curry is it? It's generally a lager. It's not any curry.
Okay. There's there's so much to choose from. Where we where we went where we went
this weekend it was Indian cuisine and Nepalese cuisine so there was quite a
selection. Noah would be down with that. So I had garlic chili chicken. Oh yeah. Yeah.
All right all right now you got my attention. You know when Noah
comes out here like we like have to at least once or twice go out to Indian
food and I'm not I'm not joking I've now gone twice and this has been my
experience each time they totally disregard me and they love Noah and so
much so that I'm not joking I ordered something and the guy's like no no no I
won't get you that should I get him this instead and Noah's like yeah that'd be
good and he he orders me the guy orders me something else and make sure it's
okay with Noah first doesn't even check with me and changes my order format.
I'm like oh I'm like what? Okay. I never look at the menu in a curry house. I
pretty much never look at the menu. I just ask them yeah what's the best thing you got.
Yeah I learned my lesson. I don't even remember what it was. I don't remember
what it was but you know what oh oh you know I wanted I wanted it I wanted oh
that's the other thing too. I also wanted what's the flatbread called you
know that flatbread with the garlic on yeah yeah nom yeah it's a nom and so I
was like you know what I'd also like another piece of nom because I really
like the nom and I don't have like a lot of bread all the time so I'm like I'm
gonna have so I'm gonna go for it and they're like no you don't need it I'm
like but I wanted to eat a lot of it like I wanted to indulge and they're
like no but I didn't say that part but he's like yeah you don't need it okay I
was gonna pay for it. I have a I have a friend who whenever we used to go out
for curry he would always order a nom and it would always be too much and he
would always order it anyway because it was a special deal where you know you
get the nom thrown in yeah so he would always order it and then take it home in
a doggie bag and he would then like eat it when he gets home or the next morning
for breakfast it was delicious yeah and although I noticed that we all we all
ordered without rice this weekend and we all just had curry and nom bread yeah
non is so nom I really I was surprised when I had it something about it's like
oh it's just it was delicious so I do kind of like going out to have Indian
food time time but there's not any really near here the studio because the
studio is getting close to hick town and it kind of like the last remnants of
like civilized hick town so there's no Indian cuisine around here you got to
travel to 20 miles either direction and then you think then you're up to your
sack in them but well we got a lot of around this neck of the woods is Chinese
and Thai food Thai foods huge around here lots of that so if you're you know
if you're in the area all right gentlemen well I think we have our title
not okay Google I think that's a clever one I love it so I'm gonna get out here
I'm gonna be live tomorrow with tech talk in the morning and unfilter in the
evening I mumble room bye guys thanks for coming today
