This is Linux Unplugged Episode 33 for March 25th, 2014.
Welcome to Linux Unplugged, your weekly Linux talk show that's prepping for the
display revolution. My name is Chris. My name is Matt. Hey there Matt, I've still
got the yellow hat on, the rest of the suits off though. And you know, I just
want to know, I just gotta visualize it. Are you still in the monkey suit?
Monkey suit was a thing until it was bedtime and then the wife kind of drew
the line in the sand and said I'm not gonna do it like they do it on the
animal planet, so that's not happening. So that had to come off, unfortunately. I understand Matt.
Well, now I like the idea this monkey suit is floating around there and it
could always like, there could be another bet down the road and like the monkey
suit looms. You know that if the bet doesn't pan out, they might have to come
back out of retirement. Right. So this week we're gonna kind of pick up on
where we touched on Linux Action Show 305 last week. We talked with Kevin
Gunn from Canonical about Mir. And the day that we ran with that show, there
was a couple of posts, one from another Canonical developer, Bob, who said the
display server doesn't matter and we covered that in the feedback. And then
after that, two succeeding posts came out, one from Martin and one from Aaron
from the KDE camp. They said, oh wait a minute, the display server does matter.
And I'll tell you Matt, I've been thinking about this. In fact, I thought
about this so hard. Get ready for this. I did some exercise. I got
exercise. I put on my new hoodie. Actually I put on the demo print hoodie,
I'm not gonna lie. And I went out, I walked in the rain and I thought, you
know, I wanted to kind of really kind of in the last couple of weeks come to sort
of where I land on the whole Mir debate. Because I for a long time have
been taking the, hell you know what, let him have at it Haas. Let's see how it
goes. Nothing bad with having a little competition out there. It might spur
people into getting their butts in gear and make things better for everybody in
the long run. And now I've thought about it and I realized two things. There's a
headwind of the general, there is a large percentage of the
general audience who just doesn't give a crap. They couldn't care less about Mir
or Wayland or X11 and I want to change that opinion today. So if you consider
yourself one of those people who doesn't really care about Mir, who doesn't really
care about Wayland, I want to correct that. Because that is a mistake on your
part, at least I think, and I want to make the case why you should care and why I
think if this doesn't pan out correctly, it could fundamentally damage Linux,
desktop Linux's success in the future. Okay. And if we don't get this right, and
this is why we have to care, because what is at stake here is taking Linux as a
serious platform. And that could not be a more critical thing right now as all of
these game companies are announcing support for Linux. There was just an
NVIDIA demo today. NVIDIA is up on stage and they're demoing their brand new
product on an Ubuntu desktop machine. It has never been a more critical point in
the Linux desktop ever in the timeline of Linux desktop. And there is something
that is about to happen that has never happened in Linux ever. And if we don't
get it right, Linux is gonna be seen like a joke on the desktop for the rest of
its existence. And I don't, and that is not, I believe, an exaggeration in the
least. In fact, I think it is understating the issue. So if you are somebody who
doesn't think they care about Mir, they don't think they care about Wayland, I
think you got it wrong. And I want to try to change your opinion on that today. And
if it's something you've been kicking around and mulling on for a long time
like Matt and I have, I want to give you a little more to think about. Some more
thoughts and we're gonna play off these recent posts that came
out right as last was wrapping up. And here we are, you know, we're about
a year in since the Mir announcement. And I think it's time to reflect on this
and sort of think about the long-term ramifications of it. So that's what we're
gonna talk about sort of in the second half of this week's show. But first, we
should cover some feedback. And we got a lot of feedback on our Solid XK review.
One of the folks who wrote in and we got, I mean, we got so many. It's great. I love
it. Because we weren't quite sure like if we, you know, should we spend a lot of
time on a small distro? Will people be that interested? Are people, you know,
are the masses only interested in the big distros? And I think our experiment
with Solid XK proves that if you get the right distro, it doesn't matter about the
size. If they've got the right recipe, it's worth talking about. So Dave wrote
in, he says, I've been distro hopping for some time now, looking for the right
one. I think a lot of people can sort of put themselves in that shoe. He said,
inspired by last and Linux unplugged reviews, I got around to taking a look at
Solid X, or actually he looked at Solid K. I liked it so much, I promptly nuked
and paved over my OpenSUSE install. He says, it's a quite well thought out
implemented distro and it's great. And he says, thanks for the great programming.
He loves it. And by the way, he also loves his new hoodie. We got tons of people
that wrote in and said they're trying out Solid and they're really impressed
with it. I think it's that, I think it's that, that rolling release done right. And
I wonder if some of the bigger distros might look at what Solid's doing here and
saying, yeah, maybe there's something we could kind of copy from this, something
we could institutionalize. Because I, I think Linux is at its best when you're
taking advantage of the fundamental fact that Linux is always moving forward as a
whole. I don't mean just the kernel, but obviously the kernel applies here too. But
all of the GNU-utils, everything in Linux is not static. That's one of its
biggest faults and it's also one of its biggest, biggest advantages. And when you
are on a distribution that snapshots Linux in time, like all distributions do
that aren't rolling, you're inherently going against the nature of the
underlying operating system. And what all of, and how the upstream system works
altogether. And that's why a rolling release, if you've been a longtime Linux
user, can be extremely compelling. Because it actually, in some really weird
twisted way, feels more natural. It feels like the way the Linux desktop should be.
And Solid has sort of struck that, that comfortable area with these understandable
update packs. And these, and your core applications on a much more frequent
basis. And I, I don't know if Solid's going to be the one. Because, you know,
it's a small team. But bigger distros could watch this success and learn from
it, I think.
Well, you know, and I look at what they're doing and then I compare it to,
like, a distros I'm using now. And it's, one thing I really like is the fact that
they group those update packs together in nice little tidy packages versus...
You know, okay, I'm going to plan for this.
Right. It's like the laptop that I have sitting here in front of me and I'm going
to, you know, it's like my old netbook, rather. And I boot it up, I know I'm going
to have 50 billion freaking updates that I'm going to have to deal with because I
haven't done it every day. And it's annoying. I mean, it's like, I like the
updates, but it's like, oh my God, enough, right? So I love the fact that by having
them in update packs, you know, that's kind of appealing. I like the fact that I can
schedule it. Yeah.
Now, for me, I get a little endorphin spike every day when I do a packer,
SYU, and I see like 30 packages are going to get updated. And I get even a bigger
endorphin spike when I see like 40, 50, 60 packages are going to be updated and the
net difference is a reduction in total disk usage. That is my favorite thing.
I love seeing that. So for me, like every day, I love updating because I always want
to get new stuff. I always want to look at the new stuff. I want to use the new
stuff. And so far, I haven't been burned big time. Like the biggest burn I've had
is a theme might wonk out on me or virtual box won't start until I figured out, oh,
I need to have the modules auto build when I update my kernel. You know, there
was, I've, I've, I've hit some minor snags that I probably wouldn't have hit on a,
on a more static distribution, but those are so minor compared to the thrill I get
from having, I know it sounds silly, but when I hear an announcement that a brand
new version of Chrome is out and I have it within 15 minutes, that feels pretty
great. You know, and it could be, it's everything. Uh, and, and solid XK, those
were people who don't want to ride that edge so close. I think it's pretty
interesting. I think so. Yeah, I think so. I think the other piece of it, it's like,
the only time I ever really got burned per se was, uh, Chrome did some weird
legacy library issue that arch had way surpassed it. They were done and Chrome
failed to catch up and I had to go to Chromium. That was not that much drama.
It really wasn't a big deal. It's a bit of a pain in your butt. Yeah, but it
wasn't that, you know, but it was, it was like, I needed to do this anyway, so
whatever. You remember we also covered on Linux action show this Sunday, uh, the
Debbie and looking at PPAs. Well, uh, Robert wrote in with some thoughts on
that. He says, I was listening to your podcast as always. I noticed you had my
letter on the Australian national board brand network. He says, but that was on
text, not last. I don't think PPAs are the answer either, but I think there's an
existing solution. Docker is fast becoming a standard for software
delivery that is distro agnostic and reliable. It's already accepted and, and
built into red hat enterprise Linux and there is a red hat certification for
software providers. There is a tool called sub user that uses a config file
and Docker to run an application, even a gooey app in an isolated Docker
container. The sub user allows you to control what the app has access to. I,
you could allow Firefox to access the downloads directory, but not your
documents directory. Sub user is primarily for security, but it uses
standard Docker image. So you could run Docker images without sub user if you
wanted to, but if you're using it with sub user, you could easily control the
isolation from the rest of the OS. Docker is also repository paste like get for
binaries. So it would be a single command to download and use. Imagine if you had
all upstream project release as Docker images, you could run it anywhere on any
distro and not have to worry about breaking anything. The distro repos will
still be important for the core OS stuff, but even the core OS stuff could be put
in Docker images for a try. I like it. I think one of the times we interview the
Docker guys on Koda radio, I specifically asked him and I said, so how
are you guys playing with application delivery? And he said, well, it's not our
core focus right now, but we have been experimenting with it. And it's sort of
like, you know, think of it as a little isolated environment for each
application. And the overhead would only be, I think, I might have this wrong, but
the overhead of a Docker container would only be the differentials from your core
system that don't match up with that Docker. So for example, if there was a GL
library that was the same on your core system that was called for in the Docker
image, it would just use the one on your core system. And because it's not actual
virtualization, it's not like you have the overhead of a VM to run these
applications. So I think it'd be something to play with. And I wonder if
I'd like to hear from folks out there who might already be doing this because
I know it is possible. And so if you're experimenting with application delivery
via Docker, let us know because one of the things that could in theory do, at
least according to the Docker developer, was sort of normalize out a lot of
distro fragmentation. You know, like for example, Steam is doing this in a
sense. There's the Steam environment. Every time you install Steam now, it
installs a Steam runtime environment. That runtime environment looks an awful
lot like an Ubuntu 12.04 install, right? But it's just the files that it needs. Yeah, you know, so
they're already kind... This is essentially what Steam is doing right now. And it
wouldn't be, you know, the chat room saying, oh, it would be really messy on your file
system. Not necessarily. Because you could maybe have all your Docker images
under slash op slash Docker or something like that. You could have an
organizational structure to it where, much like on the Mac, when it's time to
uninstall an application, you just drag that Docker folder that contains the
application to the trash. Because on the Mac, application... When you
drag an application icon to the applications folder to install it on
the Mac OS X, that isn't a one single icon. That's a bundle file. It's a
directory. You can right click on those and say, show package contents. And
they're full of stuff. But the OS represents it as a single icon. So when
you're dragging that single icon to the applications folder, oh, you're
installing the app. But really, you're moving a folder. It's filled
with files and a directory structure. And when you want to remove it, you just
move that folder, but it looks like an app icon, to the trash. Docker could
implement something similar to that. And in fact, it wouldn't even be reliant on
the Docker guys to do that part. The shell guys could do that part, right?
And when you're talking about working in the user restrictions where
you could say, your sandbox, you can only access my downloads folder, not my
documents folder. Well, that's something that the GNOME guys have already
announced they want to do anyways. Sub user sounds a lot like it's already
accomplishing what they want to do in GNOME with cgroups and whatnot. Which is
a really good part of... It's good security hygiene. That way, you know, if you have
an exploit in Firefox, it can't trample your whole system. It makes a lot of
sense. And as long as you have the right access, you could override those kinds of
things. So I think it's an interesting idea. Thanks for sending that in, Robert.
And if you out there, folks, have experimented with deploying something in
Docker, I would really like to hear that. I would like to hear your success
stories, because I've been thinking about it, too. It does sound very
PBI-like or click package-like. It's very similar to those. A little
more isolated, though. And I think, you know, whereas PBI is
specific to PCBSD and click packages will be specific to Ubuntu, this has the
potential of truly being distribution agnostic. And the reason why I think that
is super important is because that's what it's gonna take to get developers
to be willing to put the effort in to make the application. Because when you tell
them, well, you can make your app and you can easily deploy it on PCBSD or you can
easily deploy it on Ubuntu. Yay! You just got a percentage of the market. Woo! But
if you make a Mac for the app, every single Macintosh out there that has the
hardware specs can run that application. And to a developer, that is a type of
guarantee that justifies the amount of effort involved in making that
application and then distributing it. And if you can't guarantee that for Linux,
you're not gonna bring a bunch of developers over. And I know that makes it
sound like developers are lazy, but guess what? Developers are lazy. Come on, developers, you know it.
Well, it's also time is money. It's like, especially if they're doing this as their
job, it's like there's this weird thing called time and they don't have enough
of it. And so they're like, you know, I could spend time with my family or I
could go and make sure that, you know, that 40-person distro over there has a
package. I mean, you know, it's common sense. And you have the openSUSE build
service, which is tempting to like, hey, upload your files here and we'll handle
all the behind-the-scenes stuff to make it work on every distro. That is awesome
for today's problem, but it really seems like it's a patch to a
bigger problem that should be solved. And this, the thing I like about these Docker
images, I don't even know if it would work, but the thing that what I like about it
is I think a lot of times we've always thought, well, the way to really solve
this is to have a universal package manager across all distributions. That's
never gonna happen. No, it's not. It's a nice idea, but I mean, we can't even come
up with, you know, display server correlation between different distros or
even the back-end system, systemd versus upstart. How the hell are we
gonna do that with packaging? And this is going to be the point of our
talk in a little bit. I mean, it's just about to get worse. Well, speaking of
Docker and companies that love Docker, Vodley writes in, he says, hi Chris and
Dom, but he was actually writing for Coderadio, but I snagged this. I finally
got myself a droplet from DigitalOcean and they're fabulous. I was getting a lot
of latency from the New York droplet since I'm in India, so I was able to
switch to Singapore in no time. Nowhere does anyone ever mention that you get to
actually select the architecture of the DigitalOcean droplet. Since I run
a 32-bit laptop, don't ask, he says, I selected a Ubuntu 64-bit up in
the cloud and I'm cross compiling in the cloud. It's pretty awesome. So I want to
take a minute and thank our sponsor, DigitalOcean. The community out there
has been loving DigitalOcean and if you use the promo code Linux Unplugged March,
you can get a $10 credit and try out that $5 DigitalOcean rig for two months.
What is DigitalOcean? Well, DigitalOcean is simple cloud hosting dedicated to
offering the most intuitive way to spin up a cloud server and they are blowing
up because they are offering that sweet spot of perfect services wrapped in an
awesome to use dashboard and backed by incredible technologies. Users can create
a cloud server in 55 seconds, our community does in about 44 seconds
apparently, and pricing plans start about $5 per month. They get you a 512
megs of RAM, a 20 gigabyte SSD, a CPU and a terabyte of transfer. That's your fixed
cost. You know right there, you're going to be paying $5 a month for that. It's
not like some of these other services out there where they count your actual
usage and your bandwidth transfer and your CPU load and boom, your bill is just
like a different bill every single month. DigitalOcean is a fixed cost that you
can easily quantify and DigitalOcean has data center locations in New York, San
Francisco, Amsterdam and now Singapore. Their interface is simple, it's got an
intuitive control panel and power users can actually replicate the whole thing
with their straightforward API and if you use that promo code Linux Unplugged
March, that's Linux Unplugged March to get that $10 credit. Go over there and
check them out. They built this system on top of awesome, awesome technology. They
call it the SSD only cloud and I was just updating my Arch Dropout that I
have up there yesterday. I was getting from the repo 85 megabytes, yeah 85
megabytes a second while I was doing the update and the SSDs man, they just boom,
they just tear right through that. They have tier 1 bandwidth, 55 second
provisioning, it's all running on top of KVM virtualization, they have amazing
hardware and let me tell you when DigitalOcean started up, committing to
SSDs was a major commitment on their part. It was a huge gamble because back
when they started SSD prices, well they're still high, but back then they were even
higher and people looked at them like they're crazy, but they knew that the
performance difference was worth it. Now DigitalOcean also offers private
networking, so you can go, you can have like a web server front-end with private
database servers on the back-end. I just recently updated my DigitalOcean
Droplet with the Quasl back-end. So Quasl is an IRC client for Linux and it
was so easy to install Quasl on my DigitalOcean VPS and now I'm logged
into the IRC chat room all the time and I can connect from multiple machines on
multiple platforms and I'm all sharing the same session routed through my
DigitalOcean VPS. It took me minutes to set up and it offers me so much value in
terms of my productivity in the chat room that I would pay five dollars a
month just for that feature alone. There's so many things you can do with a
DigitalOcean VPS once you get started, everything from deploying it as the
back-end for your production system. There's major sites that run on DigitalOcean,
huge sites on the net run on DigitalOcean for their production back-end.
You can use it to train yourself. Go up there and get yourself an actual server
that has an imaging system so you can snapshot it before you make a big
mistake. You don't have to worry, if you're worried about security
implications and you want to build a web app and you don't want to open up
ports into your LAN, throw it up on a DigitalOcean VPS and DigitalOcean has
awesome support for Docker. You can build your system locally, you can create your
app locally in a Docker image and then publish it up on DigitalOcean. They have
one-click install. DigitalOcean has open-source Dooku, which is their
application deployment system using Docker. So they're involved in the
open-source community, they're using KVM, they're using Linux on the back-end that
you choose between Fedora, CentOS, Ubuntu, Arch. I mean they're an awesome service
and you can get it for five dollars a month and for two months free when you
use our promo code LINUXUNPLUGGEDMARCH. So go over to DigitalOcean.com
LINUXUNPLUGGEDMARCH and a big thank you to DigitalOcean for sponsoring Linux
Unplugged. I love my VPS, Matt. Alright, well changing gears from follow-up to
kind of FYI, Josh writes and he says, hey guys, I found out about a free course
EDX is offering in conjunction with the Linux Foundation a couple weeks ago and
I know this will be the best possible place to get the word out so check it
out. This would be great for the viewer and this would be great for a viewer
that are in going into college next year like me. He says he loves the show, he's a
weekly listener to TechSnapCoderRadio and the Linux shows and I don't know if you
heard about this, Matt, but it's yeah it's a course from EDX who makes online
training and Josh wanted to kind of put this in front of us. I had seen this and
I kind of thought we would cover it once too because I don't know if it's actually
available yet and I thought that's when we'd cover it but I just I kind of wanted
to give people a heads up because it's an introduction course to Linux. Develop a
good working knowledge of Linux using both the graphical interface and
command-line covering the major Linux distribution families. You know what this
used to be like a $2,100 course that's now free so I go take it. Man yeah
holy cow that's a great savings. Yeah I'll put a link to that in the show
notes and the class starts Q3 of 2014 so I you know what I thought about it
because I was going to just cover it when it launched but I was like we might
need to give people a heads up so they can go register so I'll put a link to
that in the show notes if you guys want to register it's a $2,100 value so why
not? Yeah right and it's kind of a no-brainer in its education. It sometimes is
good to relearn some of the basics too. I think that can actually be really
beneficial because if you if you're self-taught I took I can't remember what
the course was called but I went to a one of our local community colleges and
I took a course on sort of the basics of Linux and why the like I'd say 80% of it
was this was years ago but 80% of it was sort of repeat it was good to see how
other people use the tools and and kind of see like the intended implementation
of those tools not the ones I taught myself so if you're kind of in that camp
you might want to check it out it it's a good course and I think it's really cool
they're making available and props to the Linux Foundation I'm not sure if
they paid them for it or if they're just working with them but either way it's
pretty cool. Well however it came about I mean that's a that's a big deal. Yeah so
last last last last last in the past last last last on Sunday well maybe
that's a better way to put it last Sunday we asked hey should hey guys
should we drop should we drop the seasons what do you think you know like
we last last week's last week's episode was season 31 episode 4 I think 5
episode 5 and I can never remember the seasons Matt can never remember the
seasons. And honestly the seasons came about back when we used to take
breaks every 10 episodes which we realized didn't really work very well so
we put out a poll and we embedded this poll in the show notes we made it
available to the to the live stream should hey should we drop seasons in the
Linux action show and just call it the production number so example last week's
episode would be episode 305. 81% of the votes say drop the season number. Only
19% of the votes say keep the season thing out of a total of 608 votes. I mean
it seems like drop the season thing is just a runaway winner. It seems like it
but that seems to have changed from previous inquiries. Yeah big time big big
time I mean in the past this was almost it was reversed it was keep the seasons
part of the I mean it's part of the show's legacy is what I was told and I'm
you know I'm all for I was just worried about making the backlog confusing but
I don't know maybe we'll do like a couple of weeks of transition or
something so that way when people are watching the backlog they'll catch up on
it I'm not quite sure but we'll link this poll if you are I don't know I mean
I think at this time I think there's no pulling it out I think starting next
last I don't know we'll just make the announcement and sort of phase it in I
guess. I think so and I think you know we can we can transition by continuing to
keep the seasons in the text portion like on YouTube and on the show page. I don't know though, see people have suggested that. Does that become confusing?
Well I'll tell you what because part of this I'm being completely selfish here
as part of this is I have a hard time keeping track of it and so I have to
keep keeping track of it if we keep doing that and the other thing is is
it's so long all spelled out that it wraps or gets cut off like on YouTube or
on oh yeah so it'd be kind of nice just to drop it from the way it looks and so
one of the areas I one of I know this is a dumb reason but one of the reasons I
most want to drop the season thing is I hate how it looks on our website it's a
visual thing and so that's kind of like it's the worst of both worlds for me
because I have to keep track of the season thing if we go that way and I
have to continue updating the website with it printed out like that which I
don't like either I know it would be really convenient but that's kind of
like why I brought this up again because that's just that's an old that's an old
thing for me that's just bugged me for years and every time I'm posting the
show I think of it it's like it just gnaws at me so I don't know it's such a
clear decisive vote and you know what somebody in the chat room pointed out is
perhaps the reason why in the past if people voted differently is maybe they
didn't listen to as many podcasts and now they listen to more podcasts and all
the other podcasts are doing numbers when we came up when we came up with the
season thing there weren't a lot of there weren't a lot of examples to look
to on how you should number your shows and we've been it's been going on for
like seven eight years now right so like when we came up with that shenanigans
we didn't have a lot of models to template after and I think now it's it's
a foreign thing it's odd it's weird like people people I think it's one of the
things when you first find the show is a little confusing to follow and it's even
gonna be more confusing and once we switch to the numbers and it's even more
confusing because earlier on it was all numbers and then we went to season then
we're going back to numbers but at at at 81% of the vote I think the people have
spoken well and see for me most of the stuff these days I'm following it on
YouTube just because it's I you know I haven't used a podcatcher in a while it
just it's kind of how I've progressed over and I honestly don't care I mean so
for other shows I don't care what number it is I either have heard this episode or
I haven't hey the top the subject is blank oh hey that's new I'll listen to
it yeah like oh hey that's not new you know the chair was also making some
great points a all our other shows on the network are number based not season
based and Rekind points out that if you think about it it's ten episodes anyway
so you can get the seasons from the episode number so you can figure it out
pretty quick and flash update cheese bacon says that course still costs 250
bucks when you put when you drop it down from 2,500 whatever was it's still a
great value so put that's all have that straw poll in the show notes you have a
few more days to vote but you know if honestly at this point if that if that
keep the season thing creeped up I would just assume it's bots yeah I think it's
done but I in fairness of letting people get their chance to vote it will be in
there because I got a note from somebody who said I didn't really wasn't quite
clear on where I should go to vote and I want to cast my vote so I will put it in
this week's show notes as well links to everything we talk about guys they're
almost always in the show notes we just make it easy that way for you and it's
you just go to Jupiter broadcasting comm you click on the episode you listen to
and scroll down past the download links and I think this is the part that throws
people off is they see the show description and they see the download
links and they think that's the show notes but if you keep scrolling your
page down you'll see links to everything we talked about and
essentially in order that we covered them okay another update the course will
be free when it launches so it's if you want to take the course right now it's
just a discount okay very good lunches whatever yeah why not right okay so I
want to I want to clear some room so we can get into this display server debate
before we do that I want to thank Ting now Ting is mobile that makes sense my
mobile service provider and Matt's mobile service provider Matt I got a I
got a note from Ting saying they they got your banana activated but it's not
gonna be able to do picture messaging so no picture messaging because turns out
banana doesn't have a camera oh my god who'd have thought right I know thought
who would have fortunately the other phone does so right right so go to
linux.ting.com that's where you get started that'll take you to Ting's
website Ting has some really unique approaches to the mobile industry that
this is why I'm a Ting subscriber right here is because I think Ting is gonna
pressure a lot of companies into changing their behavior and we know
that needs to happen no contract no early termination fee and you only pay
for what you use each line is six dollars flat so you get a phone you're
paying six dollars for that phone per month plus taxes and then your usage
it's straightforward I have a couple of phones right now on my Ting account and
it's still cheaper than when I had one phone on one of the other carriers it's
unbelievable they have a savings calculator you can try it out you can go
over there and see what you would say by switching to Ting and if you're in a
contract right now they have an early termination relief program they'll pay
up to $75 per line that you have to get canceled there's some new phones that
have just been announced so keep an eye out on the Ting blog because I think
you'll see an update about those soon and Ting one of the reasons Ting is able
to offer rates as low as they do and focus on the customer experience and
focus on the devices in fact I just recently watched a video with one of
their executives and he said you know for us it comes down to two things that
we're really focused on right now one is devices and two is coverage and if you
haven't checked out the Ting service in a while it might be worth reevaluating
it they're writing on the sprint network and sprint has this program that they've
implemented starting in 2013 it's still going on it's called the sprint network
vision and you can google this and it is sprints plan to consolidate multiple
network technologies into one new seamless network with a goal of
increasing efficiency and enhancing network coverage and as of March 17th
they now provide LTE service in 402 markets nationwide such as Atlanta
Boston Dallas Houston Los Angeles Manhattan Milwaukee Queens Salt Lake
City San Diego right here in the Pacific Northwest I've got awesome LTE up at the
new studio and we're talking tri-band LTE to the good stuff the multi-band
stuff so you've got lots of good signal to work with sprint wants to make 2014
the year that everybody's opinion changes and the thing is is Ting is just
gonna benefit from this immensely because they already have got the
customer service and completely dialed in if you call them at 1 8 5 5 8 4 6 4
3 8 9 that's 1 8 5 5 Ting FTW anytime between 8 p.m. and 8 a.m. Eastern like so
right now if you called Ting's customer support a real person answers the phone
like an actual human being who's gonna solve your problem and let me tell you
something I have been dealing with contractors and companies of
contractors and banks building this new studio I have been on hold and going
through phone trees more than I have in years combined I am so appreciative that
if I ever have an issue with my Ting service I can reach an actual person
right away because my time is valuable I have deadlines myself I don't want to
wait on these companies that I am paying and Ting understands that they can focus
on the customer service they can focus on the device when you buy a device from
Ting you own that device just like you want to own your laptop just like you
want to own your desktop you wouldn't want to pay in a two-year contract where
you're spreading the cost of your laptop out and you don't actually own the
device until the ends of that two-year contract where you just have to re up
anyways it's a system that is designed to extract as much money out of you as
possible and it is a system that artificially hides the actual cost of
these devices it's BS and Ting is trying to change all of that and you can help
take part of that by going to linux.ting.com where they will take $25 off
your first month of service or $25 off your first device go check out that
control panel go check out those devices go check out that savings calculator go
look at their blog for those device updates which you will see very soon
linux.ting.com was where you get started and a big thank you to Ting for
sponsoring Linux Unplugged they got some great videos on that blog right now they
have some app pick videos they got an interview with one of their executives
and they have a they have a giveaway of a Nexus 5 and $400 of Ting credit which
wraps up on March 28th you can find out about all of that over at ting.com
slash blog get started by going to linux.ting.com so that way they know you
heard about it right here on Linux Unplugged and a big thank you to Ting
for sponsoring Linux Unplugged love it okay so we talked with Kevin and I felt
like we got you know a good a good look into where the where the where the where
the mirror team is coming from pretty pretty quickly after that Martin who is
the developer of Kaywin went to his block and said wait a minute wait a
minute hold on guys the display server matters in a really big way he said I
don't know how to put this but the best description is I am shocked I am shocked
the canonical is still not seeing the problems they caused by introducing multiple
display servers he has a great post it's pretty long he documents technically why
you can't rely on the toolkit to interface with the display server he
uses a screenshot application as a great example he's actually got code cited in
his blog post he's totally worth checking out because it from a technical
standpoint if this has been something you've been kicking around and you
really want to see like the proof in the pudding that's a good post but I think
I'll just focus on how he wraps he wraps this blog post by saying in summary
canonical created a huge problem by introducing another display server and
it's affecting all of us and they still are in a denial state it's not a simple
it's not it's not as simple it's not as simple as the toolkit will solve it it
can cause issues everywhere and that affects the development and maintenance
cost of all applications my recommendation to application developers
is to never accept patches for this mess canonical created if they want that
fixed they should do it in their own downstream patches distro specific
problems need to be fixed in the distros I certainly will not accept
patches for frameworks and applications I maintain this is not for political
reasons that is often claimed but for technical ones because I cannot test
patches mirror is not available on Debian and our CI system cannot build
them which is their continuous integration system so he's making a
technical argument here saying look I'm not able to test these properly it's
their responsibility and I think it's disingenuous for them to downplay the
importance of the display server okay you know the way I see it is I
completely agree with the you know he shouldn't have to deal with the patches
and all that I you know hey if you don't want to participate don't you know if I
from a developer point of view I think that makes perfect sense it's like look
you know I'm not gonna even participate in that mess good luck but I'm not doing
it that's that's the right approach has it or will it create problems I don't
think we're there yet I think I think we're definitely speculating but I think
he's got some great points so definitely think you know I agree and I but here's
where I here's where my opinion has begun to diverge from that position that
I have pretty much held since the announcement of mirror because that's
essentially what you just said summarizes my outlook on this whole
thing my a general approach to covering both sides of this debate right I think
you know after talking with canonical after reading these posts after going on
my rainy walk which is now sunny out go figure I've come down much much harder
on this issue and all credit really goes to Aaron Saigo who who created I mean
Martin and Aaron man they tag-team this stuff right and so Aaron comes out with
a sort of a response to Martin's response and he said Martin's response
demonstrates how many application developers will end up having to care
about this kind of thing he made a convincing argument and yet he only
touched on a few examples like the screenshot application but many more
could be added such as using an on-screen display or the OSD as like
what like Clementine does when you change the track and it'll have an on
you know a pop-up of this track is now playing these kind of things like that
like those types of on-screen displays and applications with screen capture
features such as case snapshot or the GIMP these kinds of things are not
generally provided by the toolkits themselves and require interacting with
the display server so anybody who's making those apps can't rely on the
toolkit the OSD use case is quite a little illuminating Aaron says future
versions of plasma will provide a DBUS service that can be used for simple OSD
needs like changing the volume and application getting an on-screen
indication of the volume level I expect in time the services will grow features
to support more sophisticated on-screen display patterns as this will not only
increase desktop integration but provide a way to work around security
restrictions to place systems like Wayland and mirror in force but what happens
when this magical new beat DBUS service doesn't exist like it might not on a
unity desktop here's another example status notifiers or perhaps called app
indicators on Ubuntu this is a DBUS service and it's not available anywhere
the answer until now has been to fall back to legacy x11 specific X embed
method when you don't find the back-end system you need does this affect users
these kinds of things the increase in development burden will will mean users
of certain display systems will experience degraded performance and
features in application application development will slow down as
developers come to grips with the diversity and in turn quality will
suffer as it tends to with multiple code paths when they're not easily tested in
parallel let's let's stop talking about the future for a second and let's talk
about something I think most desktop Linux users who bounce around desktop
environments have experienced you you ever seen this problem at where like you
got it you got an application and it has like a little system tray icon and
maybe that particular developer decided I don't want to implement the the app
indicator support for Ubuntu so when you're in Ubuntu unity desktop you don't
get an icon up in the right hand corner but when you're in KDE you do get the
icon and no maybe it's hit and miss you know you've seen this kind of thing
right oh absolutely absolutely and it's something I've definitely experienced
but it also colors based on the the level of difficulty which direction I'm
going to go through sure because I've certainly had that experience both in
unity and KDE less than no but yeah it's you know certainly certainly happened
sure and see I feel like I've had more success and like almost all of the
little tray icon show up in KDE it's totally hit and miss in unity and no
one's gotten a lot better about it but it's still hitting miss and no and this
itty bitty tiny bit of fragmentation was introduced when a couple of different
desktops decided to implement or really one desktop decided to implement
app indicators differently than the other desktops and even today years
later we still get that wrong and let's let's be clear for what it is it looks
like amateur hour it looks pathetic it's something that the Mac OS or Chrome OS
or Windows would never get wrong and does not ever get wrong it looks
ridiculous and I think we have to be clear when we're having this
conversation that this type of little itty bitty fragmentation has much wider
ramifications and how people appreciate and experience a desktop and this as I'm
going to use this example because it's something we can all relate to and then
we're going to look at the larger ramifications of the fragmentation at
the display server level but what I want us all to think about as we are moving
forward in this conversation is look at the future directory of Linux desktop
Linux quote-unquote desktop Linux competition because it's not Windows it
might be Windows today it might be Windows for the next few years but five
ten years down the road on the high end it's Mac OS 10 on the low end it's
Chrome OS and Android and those desktops would never be caught dead with that
kind of amateur our implementation that was not going to happen and that is our
competition if you look at the forward directory of the trajectory of the
desktop market that's who we're competing against and those platforms
specifically Android Chrome OS and Mac OS 10 already have a worldwide
distribution system with massive amounts of momentum behind them they have stores
in almost every country around the world you can order online they have a brand
image around them and that's what future Linux is going to be competing with
that's what we're competing with and we are not even bringing our a game we're
not even we're not even doing a very good job with our current setup and now
we're about to introduce fragmentation at the core level of the desktop that we
have a never had fragmentation before and B are fundamentally under resourced to
properly develop it as it is the X team already split to have one team work on
x11 and one term one team work on Wayland we'll think about this what if
Ubuntu had in some parallel universe had decided to go with Wayland that would
mean millions of more users banging on Wayland that would mean more bug fixes
more refinement at a higher pace to Wayland making that core part of the
Linux desktop experience more refined more tested more performant all of these
things that matter especially as game developers are moving over to Linux but
instead we are splitting our resource we are splitting our attention we are
splitting our testing we're splitting our development time and at the same
time we introducing all kinds of fragmentations that developers are gonna
have to account for because here's how humans work right you're gonna have your
distribution you're gonna develop on that it's either gonna be a Wayland
based distribution or a mirror based distribution and whatever it is that's
the one you're gonna properly test on because that's the one you use and
that's the one that the features are gonna work correctly on when I go to
the next track in Clementine whichever distro display server the Clementine
developer is using for that's the one I need to use if I want the next track on
screen notification and that's even more amateur hour we are introducing a level
of fragmentation at the core of Linux that will mean that applications are
even more hit and miss now and what they feature does this application have a
screenshot button maybe it does maybe it doesn't depends on what desktop you're
on do you get an on-screen display maybe you do maybe you don't and here's
another reason why you need to care because if you only want to use unity
for the rest of your life then mirrors gonna work great for you but if you ever
want to use Ubuntu with another distribution well you better learn how
to install Wayland you better figure out you're gonna this is gonna be a
explosion in blog posts and how to load Wayland on Ubuntu desktops because
everybody out there that wants to use anything but unity ever is gonna need to
learn how to install Wayland on their Ubuntu machine and that's another reason
why you should care the reasons stack up and this these very issues these these
fundamental issues are exactly the kind of thing that affect users so why I might
not care if it's Mira Wayland I sure as hell care if my application doesn't work
correctly I sure as hell care if I have to spend an hour figuring out install
Wayland on my Ubuntu install so that way I can try out gnome 3 whatever it's it
does absolutely affect users it fundamentally affects users I think it
also slows down adoption in a very serious way because I think over time
yeah and that's that's the piece that I see the bigger because at the end of the
day granted I fall back to my old the market will sort it out and it will but
we shouldn't have to sort it out in the first place I mean that's the big piece
of it right theorists that work spending unneeded time sorting this out when it
shouldn't have been an issue in the first place of all sorted but it's gonna
be like a ten-year process developers are always like all Linux is too
fragmented I don't know what I should target this just changes the equation
even more you look at how 3d games capture the mouse pointer that's gonna
be different between desktops or display environments if that's gonna game
developers are gonna have to think about this kind of stuff and the other thing
is I you know from my old contracting background and Aaron touches on this in
his post and I thought it was really well done he says think about it from an
IT support perspective right you already get people like what I I had several
clients that had Linux on the desktop and you know the question of the
problems would always arise if they one person was on one distro and another
person was another distro one person to have something work another person
wouldn't and then it would be oh well you need the build utils well what's
that called on fedora what's that called on Ubuntu I mean it's already the
diversity that we have there while in some ways in strengthens and empowers
Linux it also from a support standpoint is already too complicated well that's
what's just gonna happen when the display server changes currently as
Aaron writes guides and manuals covering Linux can assume that X org is running
and other troubleshooting tips with that assumption can be in place this is also
one reason why the Linux world is standardizing on system D is such a good
thing support will become easier when we don't have to ask are you using system
with system 5 in it system 7 in it system D right start you just have to
start troubleshooting at that level multiple display systems will produce a
similar result in commercial settings this also translates to more cost
particularly to companies who provide professional IT support for companies
running desktop systems does this matter to users well it means less clear
documentation more difficult support for Linux and higher commercial support
costs so yes I would argue that matters to users and man did that resonate with
me because I have been I have watched Linux go from the ha ha ha joke when I
recommend it to yeah let's implement Linux right and I I have been
advocating the deployment of Linux and businesses for years and I was already
feeling the pushback from like that my doctor clients all wanted max and all my
doctors wanted to get max and I really it is you know as soon as that support
argument is brought up my arguments are clearly deflated because how do you
compete with Apple stores everywhere how do you compete with a you know a
warranty in writing and a system that's honestly less of a moving target it's
really hard to fight against that yep it's a unified experience that I don't
even if we go system D we go way and we go the whole thing we still don't have a
unified experience we don't yeah at any level and it's happening here that it's
happening at a time where we could be coalescing around Wayland we could be
coalescing around system D right and these are major coalitions that could be
happening and exact and he says they get yeah go ahead I was gonna say if they
get those two and they get the packaging figured out you know Bob's your uncle
you're good doubt those three things together would do wonders he Aaron
points out you know this matters to display systems one thing free software
does not have is enough of its graphic developers with X org there were exactly
one place you could contribute to if you wanted to push for the display stack on
a free software operating system such as Linux then Mir came along and introduced
a split in the developer community which means fewer human resources applied to a
topic that really needs every single pair of hands we have instead of one
system that as good as we can make it we'll end up with a slower development
of two systems with the risk of more of them being less than great and I think
this part could be argued because you could say good competition spurs good
innovation but at the same time if you know if you're familiar with the with
the core X development you know how bad that situation is and how much we do
need all hands on deck for that kind of thing and you know Aaron points that
this is obviously no minor task mirror was originally promised to be the
display system of choice and desktop Ubuntu in 2013 10 then it was pushed
back to 2014 04 and now it's pushed out to 2016 04 this is not a trivial sort of
project and making it harder by limiting human resources available is unwise and
I think what we fall back on too often and I think something we can chant
there's a couple of things we chant a lot in the Linux community well yeah
maybe Katie isn't making you happy but you know what it's great cuz you got
choice well that choice is not all that great if none of the choices are awesome
so but you know Saigo says he's hopeful he says I do hold out hope the free
software community is speaking with a singular voice and that voice is saying
after X it's Wayland Wayland itself is still being worked on and has reached a
level of maturity that allows real-world use several of the major
desktop products are well on their way of supporting it as a first-class option
including plasma by KD gnome shell and enlightenment all the major toolkits
upstream have support for Wayland today and Wayland has the broadest driver
support next only to X itself so that's a good point to be made so he's a little
hopeful and he goes on to say the mere team keeps bringing up these topics
although so does the KD team what's up but he says maybe they need to defend
their position so does the KD team I can emphasize with how how they how how I
don't want to repeat what he's saying here but what he says it sure I can
emphasize that they are working on something they truly believe in and
they're being told it's the wrong thing to do he says I feel it is their right
to develop mirror at their heart's content and I cheer their moxie similarly
it is our right as developers and users to choose what to support and what not
to such decision-making is aided by having an accurate and complete
information and it's with that goal in mind that I wrote the post about I
thought this is a great post because I think what we are entering into is an
era of unprecedented fragmentation in the graphical space for Linux and I
wanted and I and I I want to reel it back in here because I'm pretty upset
about this the more I think about this because what I see this potentially as
is I see this as I don't want to use the words I'm thinking of but the these are
politically correct version maybe well it is it is hobbling desktop
applications in order to push forward the Ubuntu agenda because I don't
believe we can we have already seen unity itself introduce a level a level
of fragmentation that is below commercial desktops that would be
intolerable for commercial desktop we have already seen that frankly already
seen the the play out of that so when you introduce some fundamental stuff at
the at the display server level you either have two options as a developer
you try to target both main display servers and one of those targets is
probably not going to be as optimal as the other or you simply ignore one all
together and either scenario users lose so if you don't care about what display
server you're using then you probably ought to stop using Linux because at the
at the end of the day this is going to fundamentally change how the application
landscape looks on Linux and even if it is just one application has an
on-screen display on one display server and doesn't on the other that is enough
to have me upset because that is unacceptable it is not good enough and I
want the most kick-ass display server possible we have the most kick-ass
kernel possible how about we get the rest of the stack as kick-ass as we can
and to sabotage a display server like this for one company's personal gain in
a mobile market that is not likely to be tremendously successful anyways feels
awfully selfish to me right now well you know I honestly and I think even valve
will be included in this I don't think anyone's gonna give a ripping rats butt
about mirror one way or the other going forward I really don't I think just from
the backyard developer guy who's doing this in his boxer shorts down to the
multi-billion dollar corporation I don't I think they're gonna look at this
fundamentally me like you know honestly I'm gonna go whichever way the
community is going whichever way the drop you know the video card vendors are
going whichever way direction they're headed basically it's a numbers game and
so I think this potentially I'm hoping I'm right on this that this could work
itself out fairly early on I'm hoping the more I think about it the more I
think that it's definitely early days and I think something I wanted to kind
of kick around to the mumble room is maybe abstraction can solve because
we're all looking at this with today's set of problems and today's set of tools
to solve this problem and I think also you know something that Martin and Aaron
were trying to make the push is developers are users too and in fact I
think developers make up a good user base of Linux right I think that's
probably who a lot of the developed users are our developers so by impacting
developers you are impacting the users of Linux and I think you're gonna that's
it that's a segment that's gonna continue to outgrow any other segment of
Linux usage but I don't anybody the mumble room want to take a first shot at
this is this a is this a problem that future Chris and Matt aren't even gonna
have to worry about they can ask you a question Chris go for it puppy what's
the single most used display server on Linux right now as in in most in most
deployments back sorry no surface flinger on Android in way more
deployments than anything else Wayland mere or XOR mmm good trick question
poppy surface flinger service flinger is the display server on Android nobody
seems to have told them that they can't have their own internal project for a
display server which is used but don't you think the difference the device but
the difference there do we get why do we get that flag but isn't the difference
there those are that but that's a that's sort of in a sense a whole cloth
creation right where it's a whole new ecosystem with a whole new set of apps
that are designed for that system but on on the Linux just like a bantu phone
yeah exactly if anything the most biggest problem is it's a whole
different paradigm compared to our legacy or at least what everything else
has ever been I mean I think Poby makes a good point but I think that I think
the the subtle difference is that you only have to target search for surface
flinger on Android all right so when you're making your Android apps it's not
really something that even has to be a consideration but on no you don't you
don't because the stack that's abstracted away from you in exactly the
same way that Robert and Robert car have both blogged about that stuff so you
would get away from you by the talk you would disagree then with the assertion
that Saigo and Martin are making that it's not quite as abstract as everyone
would like no I'm suggesting that there are certain edge cases where you need to
know about the underlying fundamental bits and pieces and yeah a screenshot
tool is a real easy shooting fish in a barrel oh you know one to pick because
it obviously needs interaction with the display server but there are way more
applications out there than there are screenshot tools and there are way more
developers out there developing tools with toolkits which will just work on
these display servers and won't have this problem hmm so you say the
canonical has the amount of influence and power that Google has when it comes
to the mobile marketplace is just a little bit of a excessive state did I
say that when it comes to comparing surface slinger to mirror a little bit
it's not actually important I'm suggesting is that that it's it's
entirely possible for someone to come up with a display server on Linux which
isn't Wayland and isn't X and for them to deploy that to a large number of
handsets around the world and it work and for application developers to do
their work on top of that and not really care that it's surface fling underneath
and not X org or Wayland or whatever so I think the fundamental disagreement I
see here is one side thinks that it's really not gonna be that big of an
ramifications for developers or application functionality and another
side seems to disagree with that position the surface area of mobile is
also far smaller in a way that it's very specific its kernel is predefined other
than the cyanogen mods or whatever personally built mods that Android has
otherwise the desktop is very very different there's a lot more and it's a
lot harder to do which is one of the reasons why Mia hasn't landed in the
desktop right and what it's kind of the point you mentioned that if it comes
down to here's a toolkit you can use to build your app and it would guarantee
it'll work that works but that's not a model that Linux is typically gone well
I think I think their argument is is no toolkit is actually that comprehensive
there's there's bugs or there's just gaps in what it's capable of providing
that eventually a special case of unity pretty much only I think their argument
is eventually you know there's there's you have to close a few gaps and when
you do that you got to write directly to the display server you can't write to
the toolkit and I think I think that I think the concept of a perfect toolkit
is sort of sort of like a it's sort of like a dream but I don't think we've
ever in the history of computing achieved the perfect toolkit no and I
agree with the there are going to be holes in every toolkit and there are bits
that we're gonna have to do at the plumbing layer and components that we're
gonna have to provide that won't be provided by Qt we know that and we're
building those as we go and yes it's a bit of a learning exercise for us as
well but I don't think the the criticism is is necessary I don't think it's as
warranted as as some might think it it's in some ways it feels like okay right
we've got them to switch the system D right what's next
I asked me let's see if we can get him to change that one now right yeah I I
guess what I'm worried about is I'm worried that wishful thinking is
influencing that thinking because it in an ideal world I think I think that's
too ideal and I think the history of specifically desktop Linux shows us that
things are very fluid and things are never quite as great as we want them to
be and the idealism usually gives away a little bit of pragmatism and I think at
the end of the day there's a lot of bets on things kind of coming together at the
right time to make all of this work I think I think this is time is coming to
an end soon because I mean they've been alienating and alienating the user base
so much over the years with unity with near with yeah I don't know about that
you know right I hear that a lot when Riley but the thing is is evidence of it
the thing is is you can't discount the massive cloud deployment that Ubuntu has
which will naturally push a lot of developers and sysadmins to want to run
Ubuntu I mean they're doing really great there and I think also I think let's
look at it from us from an all from an alternate perspective what if we fast
forward three years down the road or 2016 or whatever it is where we have
like this great QT based desktop which I think a lot of us think QT has a strong
future ahead of it you know maybe this is a little bit further down the road
but it's sitting on top of system D the only piece that has a lot of questions
is how is I think what people are really worried about is the fragmentation being
introduced at such a critical layer I mean we can all argue about package
names and how they're different between all distributions or the locations of
certain libraries on how they can be different or where the config goes can
be different but we've we as a user base and as developers have never had to
worry about that display layer I mean yes it's it's gotten old and it you know
it's time has come to be replaced but at the same time it has been at least a
consistent thing not just across Linux but also across Linux and the BSDs it is
a consistent aspect for software development when you're targeting these
systems that is now no longer going to be consistent and I think you cannot
accept for that other platform that you keep forgetting about that has more
deployments than all of those well that I mean there is a reality to that but I
you know I'm very focused on the actual desktop aspect of Linux and maybe
you know down the road I mean we're already seeing more and more laptops
that are shipping with Android I just recently saw a post for a full-fledged
desktop with a keyboard mouse and monitor running Android so I mean you
know it could be a fair point that again we don't know what the future has ahead
of us but right now I'm really focused on you know making my desktop version of
Linux better than ever and I'm I'm really worried that if we cock this up
and and if we get this wrong at this critical time with with new types of
companies getting on board and making great products but also all of the
desktop environments are getting to the point now where they're so good that
it's these little things that bug us like the indicators and all this kind of
stuff we're really getting to a good point and if we kind of screw this up I
just Android and Chrome OS and and the Mac are gonna eat us alive so in three
weeks time and thereabouts three weeks and two days I'm going to ship 1404 and
that's gonna have X as the display server right and unity 7 with comp is
everything you know and love or hate depending on your point of view and that
gets support for five years so if you're a game developer you can still write
your same game using your same libraries I don't by the way if you
wanted to put it across to mere STL supports mere as well as supporting
Wayland so it's I don't I think you're painting a rather bleak outlook for
something that's nothing not gonna happen anytime soon that's true I mean
that is not going to be the default on the desktop for some time I think Aaron
was a little bit pessimistic saying mere is pushed back to 1604 you know what I
think it is poppies I think we have been over the years those of us who've been
running desktop Linux as our main desktop for so long now have watched these sort
of peaks and then it's almost like watching the price of Bitcoin man it
it peaks and then it crashes and it peaks and it crashes and we're so gun
shy we've been so we're so we've been whipped so many times now that when we
sniff something that's gonna screw things up there's this really strong
reaction and I you know you mentioned the system to debacle I am seeing a
pivot now in these conversations to more of the technical side and I think you
would agree that one of the things that sort of was really strong on the system
beside of the argument for Debian's in its system was they had the technical
argument and that technical argument was really strong and now you're seeing them
bust that out on the on the display server argument so we talked about this
a few weeks ago where the the Linux community and people who are interested
in Linux news I agree with you are watching you know LW when and watching
for Onyx and and and maybe slash dot if that still exists and and seeing these
news articles about all kinds of you know developments in in various camps
and yeah reacting in the same way that you might react to like coin or Bitcoin
and and I think it's kind of overdone because you know in the past I I've had
people bark at me on Twitter you know complaining that Ubuntu was removing
GIMP from the CD and I remember him saying whoever it was this mythical
person on Twitter say to me mark my words this was the end of Ubuntu
because you're removing GIMP from the CD I mean get real right we've all and
we've all watched like these these huge upsets over stuff that ends up not being
a big one but those have never been something as fundamental as a display
server and I argue that the system D and the upstart one you know that was
brought to a head by the fact that Debian had to make a decision and Debbie
and made that at the end of the day that's less important than display
server itself I mean we're reading any of the news articles over the last three
months there's no way you could think that this was less important than
anything else right well I feel like it is though like in a long-term
ramifications standpoint because what what we really need to do is make the
application experience better and I think what we I think the scenario I
could potentially see playing out is on the unity desktop unity 8 or unity 9 you
know whatever it is at this point like all of those applications are really
gonna be top-tier after they've had a few releases and had some time in the
market they'll they'll really be great and they'll work you know the marriage
between mirror and the desktop environment and even the applications
it's going to feel so refined and cohesive but I what I worry about is is
outside of that I'm worried about certain desktop applications that don't
have the support and I think as people start to wrap their support for certain
features I think as people start to wrap their their minds around that I could
see this erupting to even bigger than the system D debate because it honestly
affects more people potentially well I mean your point is well taken it is
your developers it might you know I don't think my mom's gonna be affected
by this well she knows what display so she doesn't even know what web browser
she uses just clicks the pretty colored icon in the corner of the screen your
mom could be affected by this by she could say come on my on my computer here
I no longer get the Thunderbird pop-up about a new email message I really like
having that and you know what do you have to say to her as well you know the
developers for Thunderbird decided not to implement support for how we do that
in Mir so so in I heard you during your rather breathless rant earlier and talk
about some of the issues that may come up you know the potential issues that
may come up and wait what you got to remember is that we don't develop
Ubuntu in a vacuum it's in all the packages that we put in the archive or
in the archive and coexist with other desktops like Kubuntu KDE like Zubuntu
and Lubuntu and we test a lot of this stuff on different environments it's not
it's not just developed and tested and the developer says oh it works on my
desktop ship it sure it doesn't work quite like that well so I guess the the
end point I'm trying to make is I think probably the biggest takeaway is we have
a lot of time like you mentioned the LTS is about to ship with X and then a lot
can change in that five years that LTS has support but I think I at the same
time you know you can you can look at the past Ubuntu controversies that
really haven't turned out to be that big of a deal and that that doesn't
necessarily mean that every situation moving forward is that is the same thing
that future situations need to be evaluated on their own merits and their
own you know their own impacts and this is a multi-level issue you know you have
the the politics of it which are which are way too hostile already you have the
potential people are just making almost no deal out of this it's making a mole
hill out of a mountain in controversy or at least in contrast compared to the
usual thing they're sweeping it under the carpet as if this is absolutely
unimportant anyone I think this is core that's an interesting I think that's how
I see this right now and at the same time like I'm of a mixed I'm of a mixed
mind on it because I I've also witnessed in open source how a little you know
coke versus Pepsi can benefit the overall desktop and can benefit overall
Linux and so I'm not I'm not staunchly against mirror on on that principle but
what I am staunchly against is having Linux desktop get any more shitty if it
gets if it gets any worse at all we are screwed I mean we have literally we have
literally across the board we have got to be over the next few years it is go
time to play at our a game and I guess what I worry about is if if we are
even playing at our b-minus game because of some differences between
applications on different display servers man the developers will look at
that as an excuse not to develop for Linux end users will look at that as
confusing and make Linux hard to understand and sysadmins and support
people will look at that and say how do I how do I provide cost-effective
support for that and the argument could be made the argument could be made that
if it was all Wayland across the board this wouldn't even be a concern and I
think that at the issue right there when people start thinking about that it gets
them a little fired up you know what I mean it gets them a little something
else competition there should be healthy competition within our ecosystem in a
way mirror was made in haste before Wayland's true potential could be
realized well yeah in the system it's got to be tested I kind of feel like I
kind of feel like no I kind of feel like if mirror was announced two years ago it
would like I think a lot of people I think there's I think this would be a
lot different I think they I think you know you got to give canonical credit
they were early to have whatever they were early supporters of Wayland but I
think you know I understand there's market realities there's products you
need to be able to ship I produce a Linux show on an edit on a Mac I
understand there's compromises that need to be made to produce the product to get
it to the market at a way that's cost-effective and actually deliverable
and I think that is where mirror came out of and that is a completely
reasonable and understandable perspective but the problem is is that
doesn't mean it still doesn't introduce potentially future oddities throughout
the entire desktop I mean it is it is it is fundamentally something that could
happen and if it does happen I just I do not feel like we can afford for it to
happen and so we either have all desktops potentially reduced in
functionality it's some degree even if it's just an on-screen display not
showing up or somehow it all gets abstracted out it all works out and
that's a potential to I don't know two things I want to bring up real quick
because I think we need to take a trip back in time to a little thing that was
called early revisions of Jack okay I remember a very popular newbie
distribution that was absolutely all about Jack to screw everything else this
is what the future is never mind the fact that I could literally load a web
page and break Linux audio that's a big freaking deal I honestly thought it was
the end of Linux as we knew it it was a big problem flash forward to today the
new devil is pulse audio I mean they're different animals granted but they still
interact with your ability to hear sounds on your computer and I suppose
that's poppies point yeah yeah we will work through it now I will advocate
against that yes I do think that if potentially this does create new
problems it's gonna it's gonna drag us through the mud a little longer is it
gonna be the is it gonna be a major problem no I think a major delay yes
major problem not so much but I because I've seen this movie before I'm not that
concerned about it because I've seen audio is a big deal it's a lot like
display if you you know you see you hear those are kind of big deals I think
we'll work through it I think we'll work through it I think we just need to kind
of you know try to kind of come together kumbaya whatever the hell we got it you
could make the argument that maybe pulse audio if it had something to compete
against something to compare itself something to measure against something
to you know live up to maybe it would have taken a different route and perhaps
yeah well it provides me with functionality I want that I can't get without I mean
that's just factually true yeah and I'm willing to say with we have to go
through a growth period maybe there's some oddities like the Thunderbird
notification doesn't show up but in the end if these two things can make each
other better and that creates a more kick-ass display server yeah and we may
have some third option from with your whatever stick with your grass yes or
whatever you know whatever your favorite stable distribution is that sticks with
X until Wayland is ready yes until Mary what happens a year or two years from
now when 1404 is old and still like 12 or 4 is now and he had nothing to switch
to I would say I would like to say I mean my biggest disagreement with Matt's
point is I think I might have was that you Tyler you might have a little buzz
there on your line I know Derek Devlin wanted to get a point in yeah I just
like to interject because I've actually done some research and the differences
between X Wayland and mere and I see as mere taken a different approach
technically so X 11 was this huge thing that pretty much initially was very
small and started patching up and because it was just adding futures that
in futures and new features the result was the colossal huge amount of software
that it is today now recent improvements have been stripping those things out
Wayland actually comes and says we're gonna define a very basic premise and
you can build on top of it and move to some of the responsibilities that are
currently being addressed by X and letting that to the compositor or to the
plugins so Weston is doing kind of that work mere takes a different approach and
says look developers are used to program against something that actually has these
futures present and they only deal with a very small subset of these features so
they will actually only use those and mir says that we are going to provide
the same rich set of futures however because we are implementing mere with
those concepts in minds we are actually going to provide a more stable platform
for that that's why I wanted to interject on this matter because
technically they approach the problem very differently Wayland moves the
problem upwards and mirror tries to solve the problem in the same section
that X was solving in a way and when we actually think about most applications
yes actually don't mess up with display server and that's a fact current this
window managers and game developers use libraries and those libraries do Windows
support Mac support Linux support and those platforms are completely different
how is that possible it's simply just making an abstraction and from that
perspective the same way libraries appear to allow cross-pollination of
code I'm not sure why wouldn't be possible to make for the display servers
so that's why I was saying that the paradigm of mirrors completely different
as XOR again Wayland have I think which are normal which composite to a certain
screen or a certain surface and that is resultantly put on like to the video
driver and to your screen it takes a completely different approach by having
a completely different compositor per a window or per UI element and that is a
what is it a simple no they're all compositing together separately and then
it actually gets put onto the screen which is why that is slightly more
pluggable but it's completely more interconnected to each other because
they're all their own compositor yes it is actually more modular in that sense
but in the other sense let's let's take the other view I'm the final developer
I'm consuming one of these compositors so wouldn't I have then if my
application tends to do some work that matches best with this compositor and
then matches best with the other one am I not just duplicating my efforts again
I guess it's really if we are looking at from a technical perspective the
approach of mirror taking is we have these model and people are used to it
and there's also another thing I would like actually to point out is a lot of
people could seem to say that canonical is backing mirror for their company
issues and they want to solve that in you know going to more a pleasant way
let's say for their business requirements you might say yes yeah yeah exactly but
Wayland isn't that innocent either if we think about it because some of the ex
developers were actually Nokia developers and other companies developers
which moved to Wayland so I'm not seeing the point there so I wouldn't even say
that that's an argument at all I think you guys have both heaven's revenge and
daredevil and I've that's funny the opposite names there I think you both
have raised some interesting perspectives on how mirror could provide
solid competition to Wayland and kind of kick Wayland in the ass in a few areas
to make it you know shore up like if it really truly has a stable ABI API the
developer I mean that's a huge advantage for for developers that's an example of
some good competition you know a little injecting some good competition why I
took the bet go ahead Tyler if you don't mind the point I was trying to make
earlier again with what Matt was saying about his comparison with the audio
stuff earlier I think the biggest issue we have with mirror and Wayland
especially if they're competing against each other is who are the driver
developers going to cater to you right that's a big part of the picture that
right now I mean seems to be predominantly in Wayland's favor yes and
no if you think about it the mere design actually allows the current model of
proprietary drivers to be more attractive but isn't that supposed to be
just temporary well another thing is they're competing against each other
it's still open source though isn't it I mean it can still look at each other's
code freely borrow from it yes bingo drivers let's say the Nvidia drivers if
you want to use the good ones they're proprietary and they might end up being
working only well with Wayland well video has to actually put resources
towards supporting mirror specifically because that is our only problem in open
source is the binary blobs of our video drivers almost every other part of our
ecosystem is open yeah it's a problem we're having with you know with mobile
devices as well from more so with mobile devices because they all have loads of
binary blobs to get them working and that's partly why we've gone down the
road we have of using you know some of the Android driver stack to enable that
quickly but listen I know I know you you're you're quite keen on impressing
the point that that we as a Linux community are on the hook for this and
we've got to you know get this done nobody understands that any more than us
we've got at least two handset vendors which we're you know gonna be
contractually obliged to provide software for this year and that puts
enormous pressure on us to get this right because these things are going to
be shipping to real people you know proper handsets they can order buy and
use as their real phone on a daily basis and so we we are very cognizant of of
that pressure and trying to get the intricate technicalities of those pieces
working correctly and so yeah we're aware of that I was almost tragic when
the time of XP is big ending its life we messed up and conquering the world when
I screwed up but now it's peas end of life is coming up and now we have
another shot but now canonical has given us another well I probably points out
those users would be switching to LTS for Linux exactly I think Alan is Alan's
points well taken most companies have already switched to Windows 7 I would
like to make another point regarding drivers the good news is AMD does plan
on going completely open source for the kernel driver and leaving the
proprietary stuff for the user land right that's a very interesting
development that could make a maybe maybe you know I don't know if Nvidia is
even capable of doing the same thing but that could solve this these types of
problems in a big way and that that was something I didn't mention in Sunday's
last but that was something I put into consideration is and I wonder if that is
influencing AMD's decision in doing that is because they're kind of looking at
the future landscape and going well you know you know what I think the big thing
is really honestly I think the big thing for Nvidia is they're probably looking
back and seeing okay well what what direction is the steam box gonna go in
and whatever that you know I mean sure if steam box decides to go mirror then
and you know honestly it sounds like there's some compelling reasons around
the oculus rift and things like that where they might want to go mirror and
wouldn't that be quite the upset but if I bet you anything Nvidia is watching
for that and that might make their decision right there I don't know let's
help you know at the BSD conferences have been a lot of discussion lately
about the problem of mono cultures there's a few specific products that
have taken off to the point where they are the only choice for stuff for
example open SSH is like 95% plus market share other than a couple embedded
things like drop bear right yeah and there's no alternative
and that's that's a bad thing so having an alternative to X org isn't
necessarily a bad thing X X had no alternative for a very long time kind of
switching tracks though what happens like five ten years now when X stopped
being supported across the border what will be as he do that's what I'm wondering
yeah he is a bone yeah what is BSD is playing there Alan do you know we
already have experimental poor import of Western and Whaler
oh wow there's nothing we can use it on yet right well that's amazing though
which is the problem so work is already kind of beginning there I think it's
gonna be if somebody had an app that we could actually run on it that would be
helpful yeah that would be really awesome if BSD done that Alan thing even
before Linux got full support for it that would do wonders in general I think
oh my god everyone seems to agree that it's a critical time because once we've
set this it's as an opportunity as well to take on users but actually it's one
of the reasons to make this a more thought-out decision because it's gonna
be what will affect us down the road yeah I think I think that's a good point
and maybe we'll we'll end right there because that's just been a just a great
conversation I like getting the all perspectives in on this one and I think
I think it's gonna be a very interesting future and if only there was some way we
could follow this as it's developed and create a history of it hmm maybe how
could we do that maybe maybe maybe on your local Linux unplugged and Linux
action show we'll keep on top of and hopefully we've given you some reasons
to think about why the display server does or does not matter a little more
than you had before before we wrap up I wanted to maybe ask your feedback on
anything we've covered obviously today but also what do you think about Linux
Mint perhaps using the same Ubuntu LTS base for Linux Mint 17 18 19 and 20
that's right for the next for the next while Linux Mint would be based on
Ubuntu 1404 LTS they say they would use that to push forward innovation and
cinnamon be more active in development on mate and better support mint tools
and engage in projects we propose we've postponed for years I'd like to know
what people think about that what do you think Matt is that gonna get really
boring is that code for we don't want to do stuff I mean I don't know just to me
it just seems like what's from an end-user point of view what am I really
getting out of it we're gonna do these cool things okay are we going to the
point where I don't I don't know are we at the point where the base is good
enough and so now it's time on yeah well I don't include the desktop
environment I mean like the base like the kernel you know that the tools like
the GNU tools all that kind of stuff are we good we had a point now where it's
good enough because also keep in mind isn't that kind of what the next open
SUSE releases the guys are not really focusing on the under the hood stuff but
they're more focusing on the services around open SUSE yeah yeah they kind of
are okay so let's just for argument say they do that are they going to be also
stagnating on the kernel and just basically applying little you know
patches as far as yeah sounds boring to me Matt yeah I mean it's like oh hey I
gotta do this piece of hardware good thing I got that new kernel oh that's
right I don't yeah see what I mean it's kind of like that doesn't really make a
lot of sense well and it's not like the rest of the world standing it standing
still and it's it's a cool it's a real close balancing act getting those user
land applications which eventually end up relying on underlying stuff that has
to be updated sounds like they're doing a simply Memphis to me that's just me
well let's hear what the audience thinks I'll go over to Jupiter
broadcasting.com click the contact link choose Linux unplugged from the
drop-down and send us in your thoughts on that or anything we covered in this
week's Linux unplugged and don't forget if you'd like to participate in our
virtual lug hang out with us over at JB live TV we do this on a Tuesday at 2 p.m.
Pacific go over go over to the calendar you'll get just in your local time zone
Jupiter broadcasting.com slash calendar Matt on Sunday we'll be we'll be
chatting with one of the guys behind Gentoo and I'm hoping to have the new
gnome 312 on my machine I don't know if it'll make it yet but I hope so we'll be
talking about that thanks so much for tuning this week's episode of Linux
unplugged we'll see you right back here next Tuesday
