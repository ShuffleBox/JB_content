WEBVTT

00:00.000 --> 00:04.420
Well, I got a kind of a just your experience style question before we start.

00:04.420 --> 00:09.600
Do you guys think that the LTSs are actually any more stable than a regular

00:09.600 --> 00:12.040
distro for daily use?

00:12.040 --> 00:16.000
Are you talking daily use as a desktop or are we talking on the server?

00:16.000 --> 00:17.120
Definitely desktop.

00:17.120 --> 00:18.120
I don't know.

00:18.120 --> 00:19.800
I mean, not really.

00:19.800 --> 00:24.120
I've seen this going around our Linux and the author says from my experience LTS

00:24.120 --> 00:29.520
releases are not more stable to justify the old packages than the regular ones.

00:29.520 --> 00:31.160
It's like, is it worth the trade off?

00:31.160 --> 00:34.480
I think the real trade off here is that it's the IT team, you know,

00:34.480 --> 00:36.080
they get to support this the whole time.

00:36.080 --> 00:39.400
I don't have a bunch of different users on a bunch of different desktop versions.

00:39.400 --> 00:43.160
But for the individual admin, no, I mean, just keep up with the latest.

00:43.160 --> 00:45.800
Yeah, I think, too, it's like, what do you consider stable?

00:45.800 --> 00:48.920
Is it that the desktop environment doesn't change very often?

00:48.920 --> 00:53.560
Is it an ABI that you can write code against that doesn't change?

00:53.560 --> 00:55.240
Or is it a program crashing?

00:55.240 --> 01:01.080
Because software has bugs regardless, and an LTS version of software could have a bug.

01:01.080 --> 01:03.520
It's the bugs you know versus the bugs you don't.

01:03.520 --> 01:04.520
Right.

01:04.520 --> 01:07.000
I think the question is, what kind of stable do you want?

01:07.000 --> 01:07.520
Step up.

01:07.520 --> 01:09.280
We have a kind for every type.

01:17.280 --> 01:20.160
Hello there, friends, and welcome into your weekly Linux talk show.

01:20.160 --> 01:21.040
My name is Chris.

01:21.040 --> 01:22.080
My name is Wes.

01:22.080 --> 01:26.360
This episode is brought to you by a cloud guru, the leader in learning for the cloud,

01:26.360 --> 01:28.440
Linux and other modern tech skills.

01:28.440 --> 01:32.640
Hundreds of courses, thousands of hands on labs get certified, get hired, get learning

01:32.640 --> 01:34.800
a cloud guru dot com.

01:34.800 --> 01:36.800
Welcome into three ninety two.

01:36.800 --> 01:39.960
We have a lot going on in today's episode.

01:39.960 --> 01:42.560
We're going to get into something kind of personal for me.

01:42.560 --> 01:48.760
I'll talk about that in a little bit and kind of try to get some advice on on a decision

01:48.760 --> 01:52.640
that I need to make from Wes and our virtual lug.

01:52.640 --> 01:56.840
We'll have some community news and kind of an exciting Jupiter broadcasting announcement

01:56.840 --> 01:58.240
is going to be tucked in here as well.

01:58.240 --> 02:00.400
So there's a lot to get into.

02:00.400 --> 02:01.480
Quick question, though.

02:01.480 --> 02:03.320
That advice, that's going to be binding, right?

02:03.320 --> 02:04.520
We get to tell you what to do?

02:04.520 --> 02:06.320
Um, yes.

02:06.320 --> 02:07.320
Perfect.

02:07.320 --> 02:08.320
Yes.

02:08.320 --> 02:10.120
Let's go with yes, Wes.

02:10.120 --> 02:11.120
Let's go with yes.

02:11.120 --> 02:13.680
We might need some help if we're making that kind of decision.

02:13.680 --> 02:18.640
I just feel like those are like pre-show discussions, Wes, not middle of intro discussion.

02:18.640 --> 02:20.960
But for the sake of show, I'm going to go with it.

02:20.960 --> 02:22.640
I'm going to I'm going to do it, Wes.

02:22.640 --> 02:25.600
I mean, you've stepped up and done live arch updates right here on the air.

02:25.600 --> 02:27.440
So I'll step up and say yes.

02:27.440 --> 02:31.780
But before we can get to any of that, we've got to bring in our virtual lug.

02:31.780 --> 02:32.780
Time appropriate.

02:32.780 --> 02:33.780
Greetings.

02:33.780 --> 02:34.780
Mumble room.

02:34.780 --> 02:35.780
Hello.

02:35.780 --> 02:36.780
Hello.

02:36.780 --> 02:37.780
Hello.

02:37.780 --> 02:41.780
I want you to know that I just gave you a personal drum roll on my lap.

02:41.780 --> 02:44.140
So you have that visual now.

02:44.140 --> 02:49.560
Let's get into the news and let's start with at least a little bit of something that came

02:49.560 --> 02:50.760
out of Fosdom this week.

02:50.760 --> 02:54.920
So Fosdom is this ginormous open source event that goes on.

02:54.920 --> 02:59.160
And this year, like so many others, it had to go virtual.

02:59.160 --> 03:03.800
Their videos are trickling out online and will possibly have more coverage in the future.

03:03.800 --> 03:07.480
But there was a centos dojo at Fosdom.

03:07.480 --> 03:08.720
I like the name.

03:08.720 --> 03:10.620
So it got my attention.

03:10.620 --> 03:14.840
And in there, we got some questions answered.

03:14.840 --> 03:19.740
We got some questions that are sort of awkward and left unanswered.

03:19.740 --> 03:25.740
This was the centos virtual dojo that featured several board members from centos.

03:25.740 --> 03:28.360
And I thought we'd go through a couple of their answers.

03:28.360 --> 03:34.920
I'll link to the entire video if you're interested in the show notes at linuxunplug.com slash

03:34.920 --> 03:35.920
392.

03:35.920 --> 03:38.520
But I got a couple of moments for you here.

03:38.520 --> 03:42.700
During this dojo, there was a couple of individuals you're going to be hearing in these clips

03:42.700 --> 03:46.340
that answered some questions from people that were watching live.

03:46.340 --> 03:50.380
And I want to say right up front, it seems like they answered every kind of question

03:50.380 --> 03:55.140
that came at them, even the uncomfortable ones and answered to the best of their ability

03:55.140 --> 03:56.200
right there live.

03:56.200 --> 04:00.640
And that's never, that's never really necessarily an easy thing to do.

04:00.640 --> 04:03.140
And so in these clips that I'm going to play from you, you're going to hear from a couple

04:03.140 --> 04:04.380
of individuals.

04:04.380 --> 04:07.460
You're going to hear from and Carl, if you know better, please correct me, but you're

04:07.460 --> 04:10.860
going to hear from Brian Excelbrit.

04:10.860 --> 04:12.460
Do you know how to say his last name, Carl?

04:12.460 --> 04:13.460
Exelbeard.

04:13.460 --> 04:14.460
Everyone just calls him Bex, though.

04:14.460 --> 04:15.460
B-E-X.

04:15.460 --> 04:16.460
Bex.

04:16.460 --> 04:17.460
Yep.

04:17.460 --> 04:18.740
I was going to say, you may, you may know him as Bex.

04:18.740 --> 04:23.600
He is the Red Hat liaison to centos and he is a centos board member himself.

04:23.600 --> 04:29.900
And he is tossing the question over to Pat Reshecki, again, Carl, please correct if I'm

04:29.900 --> 04:30.900
wrong.

04:30.900 --> 04:31.900
That one I'm not sure about.

04:31.900 --> 04:33.620
I know, I know him as JC Punk in IRC, so.

04:33.620 --> 04:34.620
Yep.

04:34.620 --> 04:35.700
He goes by JC Punk online.

04:35.700 --> 04:41.640
He has been helping with centos officially since 2008 and really unofficially for longer.

04:41.640 --> 04:44.220
He works at the Fermi National Accelerator Laboratory.

04:44.220 --> 04:49.180
He is part of the scientific Linux team and he himself has been a centos board member

04:49.180 --> 04:51.740
since April of 2020.

04:51.740 --> 04:55.760
So we have Brian asking the question and Pat answering.

04:55.760 --> 04:59.440
And the first question that I want to play for you guys is a simple one.

04:59.440 --> 05:03.160
Is centos stream safe for production use?

05:03.160 --> 05:09.020
If I can, the next question that I would pull out is here, which is I'm concerned about

05:09.020 --> 05:13.020
the stability of using stream in production compared to what I used to do now due to the

05:13.020 --> 05:17.040
and I'm going to change the words here, continuously delivered nature of stream.

05:17.040 --> 05:22.160
Can you give me a take on why I should or should not be concerned here?

05:22.160 --> 05:27.200
The packages that go into stream have gone through the internal QA before they land in

05:27.200 --> 05:28.520
stream.

05:28.520 --> 05:34.820
So they should be as safe as when they land in actual rel.

05:34.820 --> 05:39.360
But most importantly is part of what we're trying to aim for with stream is to increase

05:39.360 --> 05:41.840
the amount of internal testing.

05:41.840 --> 05:46.720
And so if you've got something that needs a test, we can try and get that into the RPM

05:46.720 --> 05:51.720
so that it is self tested and get it into the upstream code base that the actual software

05:51.720 --> 05:58.020
is based on to get more internal testing that will not only improve the overall quality

05:58.020 --> 06:03.620
of stream, it will improve the quality of the upstream software that we're packaging.

06:03.620 --> 06:10.560
And so if you're concerned about testing, I would encourage you to help us build tests

06:10.560 --> 06:16.520
to ensure that this software runs beautifully, not just on stream and not just on rel, but

06:16.520 --> 06:19.520
for everyone in the open source community.

06:19.520 --> 06:24.060
The more tests that we can get into upstream code bases, the better the quality will be

06:24.060 --> 06:28.440
for everyone worldwide who uses it, no matter who your platform is.

06:28.440 --> 06:30.320
And now Brian quickly adds to that.

06:30.320 --> 06:34.940
It's not like they're just yoloing the packages into CentOS.

06:34.940 --> 06:40.280
The other piece is that Red Hat engineers are not allowed to commit code to CentOS stream

06:40.280 --> 06:41.280
that is work in progress.

06:41.280 --> 06:43.420
It is expected to be finished code.

06:43.420 --> 06:48.640
So to reiterate what Pat said, we're not putting things like yolo.

06:48.640 --> 06:49.860
It has to actually be ready.

06:49.860 --> 06:52.880
It has to go through a level of acceptance testing.

06:52.880 --> 06:53.880
And criteria.

06:53.880 --> 06:55.820
So it's a little bit of a mixed answer here.

06:55.820 --> 06:58.300
It is we're going to be testing these packages.

06:58.300 --> 07:02.160
We're going to run them through what we currently do in our QA testing.

07:02.160 --> 07:06.680
But at the same time, the answer seems to be, well, if you want it to run on stream,

07:06.680 --> 07:23.800
write the code, but in this case, the code's tests.

07:23.800 --> 07:29.400
I think that might be part of the switch.

07:29.400 --> 07:32.800
There's some quote here that before they kind of just built whatever came out of the Red

07:32.800 --> 07:33.800
Hat process.

07:33.800 --> 07:37.280
Okay, you get the source files, you build them up and ship them in CentOS.

07:37.280 --> 07:41.360
I think maybe some of the part of that is that this is now meant to be more of a collaborative

07:41.360 --> 07:42.360
upstream.

07:42.360 --> 07:47.480
So like, if you're not sure, if you're worried about this new edition, part of that you can

07:47.480 --> 07:51.920
help out by making sure that it is properly tested, that you can say, I need more guarantees

07:51.920 --> 07:55.960
on this package, and I'm going to help add them, which you didn't really have necessarily

07:55.960 --> 07:58.160
an option to do in the old process.

07:58.160 --> 08:04.960
Carl, I feel like maybe some of this is just confusion around the CentOS project using

08:04.960 --> 08:07.800
rolling differently than the rest of us use it.

08:07.800 --> 08:08.800
Definitely.

08:08.800 --> 08:14.980
That was when CentOS Stream 8 was first announced, it was marketed as a rolling release and kind

08:14.980 --> 08:18.320
of tried to co-op the term, I guess would be the way to look at it.

08:18.320 --> 08:22.880
And then, but it's not really rolling, it's rolling in the sense of a major rail release.

08:22.880 --> 08:28.380
So there's no like 8.1, 8.2, but it's not rolling release like you would think of Arch

08:28.380 --> 08:30.560
or like Fedora or Rawhide.

08:30.560 --> 08:31.560
It's not the same thing.

08:31.560 --> 08:32.560
Yeah.

08:32.560 --> 08:37.840
And I think when you understand that, and you understand that every package that's landing

08:37.840 --> 08:44.980
in CentOS Stream goes through the RHEL QA process and RHEL testing, and that they have

08:44.980 --> 08:48.480
this mindset that every package that will land in stream is stable.

08:48.480 --> 08:49.480
Right?

08:49.480 --> 08:53.160
And in a lot of ways that's true because it's kind of getting, it's getting field tested

08:53.160 --> 08:59.760
in Fedora, then it gets promoted up to the Red Hat RHEL developers, and then they submit

08:59.760 --> 09:01.880
it up to stream or whoever else is submitting it up to stream.

09:01.880 --> 09:05.600
I mean, it has gone through multiple layers before it ever hit stream.

09:05.600 --> 09:11.880
And like Carl so perfectly said, it's rolling within the context of RHEL, right?

09:11.880 --> 09:14.320
So you're maybe a point release ahead.

09:14.320 --> 09:17.080
And not just RHEL, a major version of RHEL, right?

09:17.080 --> 09:21.800
Like there can be major changes between like RHEL 8 and RHEL 9, but any changes that are

09:21.800 --> 09:26.720
proposed for CentOS Stream, like they're the changes that you would see within RHEL 8 lifetime.

09:26.720 --> 09:31.380
So things that wouldn't change like the GLibc version or the OpenSSL version, or at least

09:31.380 --> 09:36.840
not change often, that's the kind of changes that you wouldn't see in stream at all.

09:36.840 --> 09:42.200
And I think when people start to wrap their heads around this, they're going to realize

09:42.200 --> 09:48.680
that CentOS Stream is probably a more stable, more production ready distro than most things

09:48.680 --> 09:50.400
out there.

09:50.400 --> 09:55.280
And if you're comfortable with the way Debian operates in terms of their updates, and you

09:55.280 --> 10:00.060
consider that to be a stable enterprise distro, well, then stream is going to be that plus

10:00.060 --> 10:05.920
more QA and more testing, and the entire Fedora distribution doing preliminary deployments

10:05.920 --> 10:08.320
in actual public hands.

10:08.320 --> 10:10.240
That's a pretty hard thing to match there.

10:10.240 --> 10:15.600
And the question really becomes, well, okay, let's say we all wrap our head around stream

10:15.600 --> 10:17.300
and we're getting comfortable with it.

10:17.300 --> 10:22.220
We recognize that now there is a way for just the average citizen to commit something that

10:22.220 --> 10:23.580
could land in RHEL.

10:23.580 --> 10:28.260
It brings RHEL development out into the open, but still provides system administrators with

10:28.260 --> 10:30.120
something that can be used in production.

10:30.120 --> 10:35.200
Okay, all right, I can start to live with this new normal, but there is an elephant

10:35.200 --> 10:36.960
in the room.

10:36.960 --> 10:43.160
And it's quite simply, if the deal was changed on us once, what means the deal can't be changed

10:43.160 --> 10:44.160
again?

10:44.160 --> 10:48.460
And my buddy Noah puts it really well when he says, you end up feeling like you're living

10:48.460 --> 10:50.720
on borrowed time.

10:50.720 --> 10:56.800
And this question came up during the Q&A and to their credit, they actually answered it.

10:56.800 --> 10:57.800
They answered it.

10:57.800 --> 11:02.200
And it's not an easy question to answer because the deal was changed on them, the CentOS board

11:02.200 --> 11:09.080
members, and you can sense the tension and the uncertainty in the room by how long it

11:09.080 --> 11:11.800
actually takes someone to step up and answer the question.

11:11.800 --> 11:17.480
A question has come in about the change of the EOL for a community deliverable during

11:17.480 --> 11:19.760
a release being very unusual.

11:19.760 --> 11:23.960
Is this something that could theoretically happen in the future from your perspective?

11:23.960 --> 11:27.760
I haven't altered this at all.

11:27.760 --> 11:31.000
This is the real time that there was just people looking at each other, not sure how

11:31.000 --> 11:39.280
to answer this question.

11:39.280 --> 11:48.680
It's hard to predict the future, but fundamentally, Stream needs to sort of meet the needs of

11:48.680 --> 11:51.240
our development process.

11:51.240 --> 11:57.680
There needs to be a place where people can push in changes, where people can drive the

11:57.680 --> 12:02.040
release towards what they actually are doing in production.

12:02.040 --> 12:07.440
There hasn't been a great way for people to actually drive the release in the past.

12:07.440 --> 12:13.400
And so I wouldn't expect that Stream is going anywhere, as it's going to be fundamental

12:13.400 --> 12:19.020
to the actual delivery process of RHEL itself.

12:19.020 --> 12:20.360
This is tricky.

12:20.360 --> 12:21.640
How do they answer a question like that?

12:21.640 --> 12:22.640
And who answers it?

12:22.640 --> 12:26.360
So you have this situation where they have to decide, do you want to handle this?

12:26.360 --> 12:27.360
No, I'll handle this.

12:27.360 --> 12:29.760
It's inherent now with virtual conferences.

12:29.760 --> 12:33.240
You've experienced that probably in meetings if you've attended some over video.

12:33.240 --> 12:36.360
You have to give them some understanding here.

12:36.360 --> 12:40.480
But it's a hard question to answer for them, because what the hell do they know?

12:40.480 --> 12:44.760
When the trademark owner decides what they're going to do, and when they decide how they

12:44.760 --> 12:50.060
will fund development time, the project doesn't really have much choice other than to tuck

12:50.060 --> 12:52.160
and roll with it and make the best out of it.

12:52.160 --> 12:55.440
Now, I think the other thing to keep in mind here is we're talking about this.

12:55.440 --> 12:59.600
Mentos 8, as it is in the traditional style, it's still there.

12:59.600 --> 13:00.600
It's not gone.

13:00.600 --> 13:01.600
It hasn't gone anywhere.

13:01.600 --> 13:03.400
It's still there until December.

13:03.400 --> 13:07.680
So we actually are dealing with this way ahead of time in some senses.

13:07.680 --> 13:11.840
It's a short amount of time when you think about migrating thousands of systems.

13:11.840 --> 13:17.480
But it's a long amount of time when you think about a company making their strategic plans

13:17.480 --> 13:19.320
public.

13:19.320 --> 13:25.220
And I appreciate that they think this is good, because it sounds like by their answer here,

13:25.220 --> 13:29.100
they feel like Stream is in a position now where it's sustainable.

13:29.100 --> 13:36.060
It is in a position where it feeds the RailBeast and also makes it a more open source project.

13:36.060 --> 13:37.960
But I'm going to play just a little bit again.

13:37.960 --> 13:40.360
Just feel the awkwardness here.

13:40.360 --> 13:46.060
A question has come in about the change of the EOL for a community deliverable during

13:46.060 --> 13:48.360
a release being very unusual.

13:48.360 --> 13:53.360
Is this something that could theoretically happen in the future from your perspective?

13:53.360 --> 14:09.920
I mean, it's hard to predict the future.

14:09.920 --> 14:10.920
That's a little rough, Wes.

14:10.920 --> 14:15.080
That's like, they don't, you can tell like, they think they've got it figured out now,

14:15.080 --> 14:18.240
but they're not really in control of this piece of the game.

14:18.240 --> 14:19.240
Yeah, right.

14:19.240 --> 14:22.520
I sort of appreciate the candor, honestly.

14:22.520 --> 14:23.520
Because things change.

14:23.520 --> 14:25.640
I mean, things change even at the corporate level, right?

14:25.640 --> 14:27.440
And you do your best.

14:27.440 --> 14:32.840
I'm sure there was a lot of consternation internally about all of these changes.

14:32.840 --> 14:35.440
It's interesting how plain that silence makes it, though.

14:35.440 --> 14:36.440
Yeah.

14:36.440 --> 14:41.960
And Colonel, in some ways, they are being more explicit about their plans around Stream

14:41.960 --> 14:45.280
than they really were about the long term support window for 8.

14:45.280 --> 14:46.280
Yeah.

14:46.280 --> 14:50.640
So one of the things that is not well understood, or I haven't heard talked about a lot, is

14:50.640 --> 14:59.120
that while the EOL was listed on the CentOS page, and that is a Red Hat project, and therefore

14:59.120 --> 15:06.120
falls to Red Hat, that EOL was not actually put there by Red Hat.

15:06.120 --> 15:14.120
It was put there by a community user who assumed, based on other past EOLs, that that's what

15:14.120 --> 15:16.160
the EOL is going to be.

15:16.160 --> 15:22.680
Red Hat itself never actually officially said what the EOL for 8 was going to be.

15:22.680 --> 15:23.680
Yeah.

15:23.680 --> 15:27.480
And Carl could probably speak to this better than I can, but that's one thing that I haven't

15:27.480 --> 15:32.520
heard discussed a lot, is that Red Hat never actually came out and said, this is the EOL

15:32.520 --> 15:33.520
for 8.

15:33.520 --> 15:42.000
They passively endorsed that EOL by not changing it and allowing it to go onto the site.

15:42.000 --> 15:46.720
But that was done by the community, not REL, or Red Hat.

15:46.720 --> 15:50.240
I think that doesn't get talked about a lot, because I'll be quite frank, in my personal

15:50.240 --> 15:57.120
opinion, it's a piss poor excuse, because I think the internal mentality by not listing,

15:57.120 --> 16:01.600
not putting that EOL date up front was, well, we're not sure how long we're going to keep

16:01.600 --> 16:07.700
doing CentOS Linux 8 for, so we just won't put an EOL date, when in reality, in hindsight,

16:07.700 --> 16:11.360
it's easy to say, you should have absolutely said, this isn't going to be supported for

16:11.360 --> 16:16.640
the full 10 years, or even better, set an end of life date then, just leaving it blank

16:16.640 --> 16:21.720
and then letting, having a community member make a reasonable assumption that based on

16:21.720 --> 16:25.600
everything that's happened before with CentOS, that that should have been the end of life

16:25.600 --> 16:26.600
date.

16:26.600 --> 16:29.920
Yeah, it's just a very unfortunate chain of events.

16:29.920 --> 16:34.840
Well, I kind of look at it as a collection of could have done betters.

16:34.840 --> 16:36.740
It's like a basket of could have dones.

16:36.740 --> 16:43.320
Number one is clarify ahead of time what the support window was, or at least update that

16:43.320 --> 16:44.600
Wiki post.

16:44.600 --> 16:50.720
Number two, if I were at some position of power in Red Hat, ha ha, what I would have

16:50.720 --> 16:55.920
done is I would have released the RHEL for developers program, the expanded RHEL for

16:55.920 --> 17:00.480
developers program first, or that would have been the headline, and in there, I would have

17:00.480 --> 17:02.680
said, by the way, CentOS is changing.

17:02.680 --> 17:06.400
That's how I would have managed the message myself, but what do I know?

17:06.400 --> 17:08.680
I just talked to an audience of tens of thousands.

17:08.680 --> 17:11.360
I obviously don't know what I'm talking about, and then the other thing that I would have

17:11.360 --> 17:19.160
tweaked is I would have made real damn sure that Stream wasn't sold as a rolling distribution

17:19.160 --> 17:24.800
because when you say rolling, it conjures arch, and when you conjure arch, it's the

17:24.800 --> 17:30.660
antithesis of what should be on a server, and so much so that Wes and I as a bit use

17:30.660 --> 17:33.840
an arch server here because you shouldn't be doing it.

17:33.840 --> 17:39.720
I mean, it was a ludicrous idea, and it completely was tone deaf with the market.

17:39.720 --> 17:45.800
It's unbelievable that they, a company that provides an enterprise Linux distribution,

17:45.800 --> 17:46.800
didn't get that.

17:46.800 --> 17:52.620
Incredible that it takes some stupid podcaster here in Seattle to tell them that, but if

17:52.620 --> 17:57.180
I wanted extra credit on how I would have made this a lot better, I would have set out

17:57.180 --> 18:02.200
a plan that would have already been in motion that would have demonstrated to people how

18:02.200 --> 18:07.600
a lot of what they want to accomplish on a traditional RHEL or CentOS traditional system

18:07.600 --> 18:12.120
could be accomplished with the universal base image that is based on RHEL.

18:12.120 --> 18:16.360
It's a container that you can run your application inside, kind of like how you can use Alpine

18:16.360 --> 18:18.240
as a base for a container.

18:18.240 --> 18:23.220
You could use the universal base image, which is RHEL, supported by these people at Red

18:23.220 --> 18:29.200
Hat, and you can deploy your applications on arch if you want inside this universal

18:29.200 --> 18:30.200
base image.

18:30.200 --> 18:34.920
So you could have CentOS Stream, it could have daily updates from GitHub directly for

18:34.920 --> 18:39.080
God's sakes, and you could still have your applications in the universal base image,

18:39.080 --> 18:43.760
and somehow in all of this, they haven't properly communicated that.

18:43.760 --> 18:48.720
And I would put that in a basket of obvious things that they could have done better, could

18:48.720 --> 18:56.040
have done, before or with the announcement of CentOS Stream to avoid 90% of all of this.

18:56.040 --> 19:00.720
But somehow, the wrong people were listening, and the wrong people are making decisions,

19:00.720 --> 19:01.720
and this is what we got.

19:01.720 --> 19:06.500
And as a result, all of these alternatives have spun up.

19:06.500 --> 19:09.980
And we talked on LAN about some that are actually shipping now.

19:09.980 --> 19:14.160
We've talked about Rocky Linux, which is getting really close and has a ton of community momentum

19:14.160 --> 19:15.160
around it.

19:15.160 --> 19:20.140
So you have to kind of wonder, how does the core CentOS Team, and particularly the board

19:20.140 --> 19:25.640
members, feel about all of these clones coming along to offer what they used to offer?

19:25.640 --> 19:28.400
And Pat says, they welcome it.

19:28.400 --> 19:35.720
And just to sort of be clear, the folks that are interested in doing rel rebuilds to keep

19:35.720 --> 19:38.600
aid alive, we wish them the best.

19:38.600 --> 19:40.440
We love our open source friends.

19:40.440 --> 19:42.040
I mean, that's really good to hear.

19:42.040 --> 19:44.880
It doesn't sound like, do you think that's true, Carl?

19:44.880 --> 19:48.640
There's not really any ill will towards projects like Rocky Linux?

19:48.640 --> 19:49.640
Absolutely.

19:49.640 --> 19:52.600
We've even been, you know, helping here and there, pointing them in the right direction

19:52.600 --> 19:57.600
of like, hey, you should use git.centos.org for their source code.

19:57.600 --> 20:01.720
Don't get it from source RPMs from a rel subscription, because that's actually against the rel terms

20:01.720 --> 20:02.880
of service.

20:02.880 --> 20:06.260
We publish it in this other place specifically for you to use.

20:06.260 --> 20:07.600
Use it the right way.

20:07.600 --> 20:10.200
And there's even another blog post.

20:10.200 --> 20:11.980
I'll have to find it and link it in the chat.

20:11.980 --> 20:17.780
But Bex, the same guy from the Red Hat liaison to the CentOS board, he put together a blog

20:17.780 --> 20:22.520
post of do's and don'ts for doing your own rel rebuild, basically, to help give them

20:22.520 --> 20:23.840
proper guidance.

20:23.840 --> 20:28.640
We want them to succeed, and nobody wants to get any lawyers involved for doing things

20:28.640 --> 20:29.640
incorrectly.

20:29.640 --> 20:33.960
So the more we can help them to do things right and be successful, the happier everyone

20:33.960 --> 20:34.960
will be.

20:34.960 --> 20:37.680
And you know, the sense I got by watching this dojo video, which will be linked in the

20:37.680 --> 20:42.920
show notes, the team is kind of, I mean, correct me if I'm wrong, the team seems like they

20:42.920 --> 20:48.360
are still committed to CentOS 8 traditional that we know and love.

20:48.360 --> 20:53.260
And it's this time until December is a bit of a gearing up and things are not necessarily

20:53.260 --> 20:54.520
firm.

20:54.520 --> 20:57.520
Like there's, it seems like there's some malleability here.

20:57.520 --> 21:00.080
There's some ideas that are being considered.

21:00.080 --> 21:05.320
It kind of feels like in a way, it's not a reset, but it's a rethink for the project.

21:05.320 --> 21:07.400
And that seems like it could be a positive thing long term.

21:07.400 --> 21:11.020
What are your thoughts, though, as somebody who's in the middle of the storm right now?

21:11.020 --> 21:16.580
I think the biggest takeaway is that CentOS is transitioning, you know, execution and

21:16.580 --> 21:22.160
timing aside, it's transitioning from being downstream of RHEL to upstream of RHEL.

21:22.160 --> 21:27.760
And at a higher level, it's transitioning from being something that is quite frankly

21:27.760 --> 21:34.360
a conflict of interest with RHEL to something that's essential to the RHEL development pipeline.

21:34.360 --> 21:39.120
And that actually protects CentOS long term from any kind of future, you know, management

21:39.120 --> 21:43.240
decisions around whether or not it deserves to exist.

21:43.240 --> 21:46.800
And that's one of the things that, you know, asking now, well, how do we know that CentOS

21:46.800 --> 21:48.640
stream won't go away?

21:48.640 --> 21:52.000
That's the same as asking, how do we know Fedora won't go away?

21:52.000 --> 21:55.920
No one's going to, you know, make you a guarantee that it won't.

21:55.920 --> 21:59.560
But if you understand how the development process actually works, you realize that that's

21:59.560 --> 22:00.760
a ridiculous question.

22:00.760 --> 22:05.240
Like it can't go away now, not easily, and it would be very difficult to change that.

22:05.240 --> 22:09.480
Yeah, that's how I see it, too, which is why in a lot of ways, because I don't run a lot

22:09.480 --> 22:14.280
of CentOS traditional, I feel like it's just a great win for me because my desktop environment

22:14.280 --> 22:19.000
and desktop distro that I like, they're pretty safe and secure.

22:19.000 --> 22:20.740
They're kind of an essential part now.

22:20.740 --> 22:25.420
And CentOS stream moves into a serious contender for me because really, it's just the right

22:25.420 --> 22:27.360
kind of stable and updates for me.

22:27.360 --> 22:31.280
It's funny, too, it makes me think about how, you know, in terms of the RHEL lifecycle,

22:31.280 --> 22:34.960
the LTS lifecycle, it really hasn't been that long, right?

22:34.960 --> 22:39.760
The Red Hat CentOS acquisition first change was in 2014, which was the same year that

22:39.760 --> 22:40.760
RHEL 7 came out.

22:40.760 --> 22:46.360
So it's really only been one, like, major release cycle, or it's all still getting figured

22:46.360 --> 22:47.360
out.

22:47.360 --> 22:50.680
And if this new arrangement means that there's a healthier development community, there's

22:50.680 --> 22:54.800
more open source options for people to find the right system, you know, there's rebuilds

22:54.800 --> 22:59.600
available for the admin who just wants a stable, free RHEL, and there's now a development

22:59.600 --> 23:03.920
community for folks like Facebook who really wanted more input on CentOS.

23:03.920 --> 23:04.920
That's nice.

23:04.920 --> 23:08.080
Well, this leaves me and I know you, Wes, with one question.

23:08.080 --> 23:11.080
All right, so then WireGuard.

23:11.080 --> 23:12.080
WireGuard!

23:12.080 --> 23:13.080
WireGuard!

23:13.080 --> 23:16.560
When do I get WireGuard?

23:16.560 --> 23:17.560
That's what I want.

23:17.560 --> 23:18.560
I want WireGuard!

23:18.560 --> 23:19.560
Just get WireGuard in there.

23:19.560 --> 23:22.560
That's all I'm asking for.

23:22.560 --> 23:25.920
Jeez Louise.

23:25.920 --> 23:27.920
Linode.com slash unplugged.

23:27.920 --> 23:32.480
Go there to get a $100 60 day credit towards a new account and, of course, support the

23:32.480 --> 23:33.480
show.

23:33.480 --> 23:36.160
If you get it here and you're like, hey, man, thanks for supporting the show that I listened

23:36.160 --> 23:37.160
to.

23:37.160 --> 23:39.640
Those guys have been going for like seven years and really appreciate you supporting

23:39.640 --> 23:40.640
them.

23:40.640 --> 23:42.960
Yeah, that's what just visiting Linode.com slash unplugged does.

23:42.960 --> 23:48.560
It gets you $100 of Linode money and it's telling them it's a signal that you support

23:48.560 --> 23:51.240
the show and that you support them supporting us.

23:51.240 --> 23:52.240
That's a lot of support.

23:52.240 --> 23:55.320
It's kind of like a big hug over at Linode.com slash unplugged.

23:55.320 --> 23:57.040
They're our cloud provider.

23:57.040 --> 24:00.280
We've been using them for all of our JB 3.0 infrastructure.

24:00.280 --> 24:03.080
I started a couple of years ago using them personally.

24:03.080 --> 24:07.560
I wanted a cloud provider that seemed like a good member of the Linux community.

24:07.560 --> 24:12.520
And, of course, I had known about Linode forever because they've been around since 2003.

24:12.520 --> 24:15.640
I've seen them at a ton of events and they've supported things like Linux Fest Northwest

24:15.640 --> 24:18.960
and I thought, okay, it's time.

24:18.960 --> 24:24.920
I wanted something that was separate from the other services we had and I went to Linode.

24:24.920 --> 24:29.920
One of the things I personally really liked just as somebody just first experiences is

24:29.920 --> 24:32.800
I loved how many freaking distros they have.

24:32.800 --> 24:33.800
I mentioned Alpine earlier.

24:33.800 --> 24:34.800
Yeah, they got that.

24:34.800 --> 24:35.800
They got Arch.

24:35.800 --> 24:37.280
They got the recent CentOS.

24:37.280 --> 24:39.200
They got Debian releases up the wazoo.

24:39.200 --> 24:40.360
They got same with Fedora.

24:40.360 --> 24:42.640
They got several Fedoras and OpenSUSE.

24:42.640 --> 24:43.640
They got OpenSUSE too.

24:43.640 --> 24:46.960
They got all the versions of Ubuntu you'd want to deploy and more.

24:46.960 --> 24:51.800
It's funny, I even have a couple of Debian boxes from the one click application deployments

24:51.800 --> 24:52.800
for game servers.

24:52.800 --> 24:59.760
But what I really, really got about them, what clicked for me is their love for Linux

24:59.760 --> 25:00.760
and open source.

25:00.760 --> 25:06.240
They're independently owned and they're founded on a love of Linux because, and I say that

25:06.240 --> 25:10.320
in a way that I'd say this network was founded on a love for Linux.

25:10.320 --> 25:12.320
For me, I had to start talking about Linux.

25:12.320 --> 25:13.320
That's what I had to do.

25:13.320 --> 25:14.800
I was doing this awesome stuff.

25:14.800 --> 25:23.200
I was a Windows refugee who's doing this awesome stuff with Linux, saving myself from Windows.

25:23.200 --> 25:27.840
My first real experience was like squid proxy because we cut the bandwidth usage on our

25:27.840 --> 25:30.720
T1 connection just dramatically.

25:30.720 --> 25:35.520
And it was like I did it for free and it was just this huge deal and I just kind of became

25:35.520 --> 25:37.840
enthralled with it and I had to talk about it.

25:37.840 --> 25:41.200
Well, the guys at Linode, they came up with a way to do something even more clever.

25:41.200 --> 25:44.480
They saw where user mode Linux at the time was going, but they saw where the ball was

25:44.480 --> 25:49.200
rolling and they started what was really one of the first cloud computing companies.

25:49.200 --> 25:53.560
And now Linode is dedicated to offering the best virtualized cloud computing out there.

25:53.560 --> 25:55.640
If it runs on Linux, you can run it on Linode.

25:55.640 --> 26:01.440
Some weird custom setups, virtual desktops in the cloud.

26:01.440 --> 26:05.080
I use it for all kinds of back-end infrastructure, but for personal stuff too.

26:05.080 --> 26:09.560
So like a personal website, sure, but you need like a communications hub for your company

26:09.560 --> 26:10.560
that's private.

26:10.560 --> 26:13.260
Yeah, we'll do that too.

26:13.260 --> 26:15.320
But just try it out with that $100 credit.

26:15.320 --> 26:17.600
Go to linode.com slash unplugged.

26:17.600 --> 26:26.240
Go there, get the $100 credit and support the show, linode.com slash unplugged.

26:26.240 --> 26:33.480
So Ubuntu has chosen to backport a rather well-known desktop application, but they're

26:33.480 --> 26:35.600
not using a snap.

26:35.600 --> 26:39.120
They're not using Flatpak and I find this to be fascinating.

26:39.120 --> 26:46.360
So 2004, Ubuntu 2004 LTS shipped with Thunderbird 68, but that version is no longer supported

26:46.360 --> 26:51.200
upstream, which means the Ubuntu developers either have to go figure out how to backport

26:51.200 --> 26:58.320
these new fixes for like security stuff, or they have to just buckle down and go with

26:58.320 --> 27:00.200
Thunderbird 78.

27:00.200 --> 27:05.800
Understandably, the developers decided we're just going to ship Thunderbird 78.

27:05.800 --> 27:09.600
But it's not like a simple decision and that's why I think the packaging matters in this

27:09.600 --> 27:10.600
case, Wes.

27:10.600 --> 27:17.360
Oh, yeah, I mean, 68 to 78, that sounds like a big jump, and it is, and therefore the Ubuntu

27:17.360 --> 27:22.540
devs are warning of some possible disruption to come from this rather big stable release

27:22.540 --> 27:23.540
upgrade.

27:23.540 --> 27:27.860
In particular, say Enigmail, for instance, is deprecated now that Thunderbird actually

27:27.860 --> 27:34.800
has a native PGP solution, finally, and that impacts LTS users relying on that old plugin,

27:34.800 --> 27:39.160
not to mention all the other plugins that may no longer work on 78.

27:39.160 --> 27:44.600
Yeah, and, okay, Wes, come here, I don't want, let's just, let's just have a little side

27:44.600 --> 27:45.600
meeting here.

27:45.600 --> 27:46.600
Huddle close.

27:46.600 --> 27:52.160
The cone of silence.

27:52.160 --> 27:58.560
Maybe we should ask, but this seems like the perfect use case for this technology called

27:58.560 --> 28:05.600
Snaps, which is a software packaging methodology that allows LTS users to safely use new software

28:05.600 --> 28:09.280
on older releases, decoupled from the dependencies.

28:09.280 --> 28:18.680
So if somebody could tell Canonical that they have Snaps, that they could deploy this Thunderbird

28:18.680 --> 28:23.880
as a Snap and not mess up Thunderbird 68, I feel like that'd probably be a good thing,

28:23.880 --> 28:26.680
but I don't want to mention it on the show because that'd be like super embarrassing.

28:26.680 --> 28:30.640
Well, you know, they actually, I guess, I'm looking right now, it looks like there already

28:30.640 --> 28:32.400
is a Thunderbird Snap available.

28:32.400 --> 28:33.960
Yeah, okay, okay, okay.

28:33.960 --> 28:36.960
The cone of silence.

28:36.960 --> 28:41.840
I think that the problem here is do you just leave that old unsupported version left to

28:41.840 --> 28:43.840
rot in your LTS repo?

28:43.840 --> 28:47.840
Actually I really, what I really like about this story is that they are actually shipping

28:47.840 --> 28:54.240
it as a deb because then the existing users will get that upgrade and I think it's really

28:54.240 --> 28:59.880
awesome that Canonical is investing the time and resources to keep that kind of stuff on

28:59.880 --> 29:03.160
the LTS desktop up to date and secure.

29:03.160 --> 29:04.400
It makes it a viable option.

29:04.400 --> 29:09.080
Yeah, and it's interesting to note like this is, it's just sort of an insight into where

29:09.080 --> 29:12.920
Canonical is choosing to spend those development resources, right?

29:12.920 --> 29:17.840
And I guess Thunderbird is worth it to them.

29:17.840 --> 29:19.520
So this is really exciting.

29:19.520 --> 29:25.320
I want to take a minute here in the community news to say our community has something special

29:25.320 --> 29:27.160
happening this week.

29:27.160 --> 29:30.440
This is a local story, you know, like you got your national news and your local news.

29:30.440 --> 29:32.440
Well, this is a local news story.

29:32.440 --> 29:34.360
Coder Radio 400 lands this week.

29:34.360 --> 29:39.280
That's a big milestone for me personally and for Mike and the team here.

29:39.280 --> 29:41.960
400 is no joke when it comes to podcasting.

29:41.960 --> 29:46.480
It's over eight years of shows and that lands later this week.

29:46.480 --> 29:50.160
If you're listening to this on the release day, it lands just a few days after this episode.

29:50.160 --> 29:54.200
So I just wanted to encourage you to head over to coder.show slash subscribe to grab

29:54.200 --> 29:57.040
the feed so you can get it.

29:57.040 --> 30:00.480
I feel like, you know, it took a break for a little bit, but after we went independent

30:00.480 --> 30:03.300
it came back and I think it's better than ever.

30:03.300 --> 30:05.520
Episode 400 is going to be well worth a listen.

30:05.520 --> 30:06.840
We've already recorded it.

30:06.840 --> 30:11.300
Wes joined me on 399 and we had a great time there and we talked about some of the back

30:11.300 --> 30:15.200
end tech, the open source tech we use here at the studio.

30:15.200 --> 30:22.900
And after over two years of like no merch, no swag, just a drought of fun stuff you could

30:22.900 --> 30:23.900
get from JB.

30:23.900 --> 30:25.760
Oh, my clothing, it's rotting away.

30:25.760 --> 30:26.760
I know.

30:26.760 --> 30:28.000
All my old shirts are fading.

30:28.000 --> 30:33.080
Oh, well, we're launching our most ambitious merchandise item ever in episode 400 of Coder

30:33.080 --> 30:34.240
Radio.

30:34.240 --> 30:41.800
There is life before this item and then there is life after this item and all of the details,

30:41.800 --> 30:45.040
all of them will be revealed in Coder Radio 400.

30:45.040 --> 30:48.040
In fact, there may be more than one item.

30:48.040 --> 30:49.880
So check that out later this week.

30:49.880 --> 30:55.320
Just go to coder.show slash subscribe to grab the feed and don't miss this week's episode.

30:55.320 --> 31:00.240
We're super proud to be to 400 episodes and this show is not that far away either, Wes.

31:00.240 --> 31:04.400
So we got to start thinking like, what do we want to do for big 400 here on this show?

31:04.400 --> 31:05.400
Oh, yeah.

31:05.400 --> 31:06.960
We've got eight episodes to go.

31:06.960 --> 31:07.960
Yeah.

31:07.960 --> 31:08.960
Yeah.

31:08.960 --> 31:12.840
So Coder just hit that milestone a little bit before us and we had a lot of fun.

31:12.840 --> 31:13.920
And so keep an eye out.

31:13.920 --> 31:20.400
That'll be it'll be on the Coder feed and will be in the all show feeds later this week.

31:20.400 --> 31:23.600
And we do have a little bit of cleanup to do around here.

31:23.600 --> 31:26.960
I want to mention that our telegram group is still going strong.

31:26.960 --> 31:30.340
We don't talk about it as much these days, but we love it.

31:30.340 --> 31:31.840
And we're in there all the time.

31:31.840 --> 31:35.240
It's a Jupiter broadcasting dot com slash telegram.

31:35.240 --> 31:38.240
Get in there and join the chat, especially if you just recently got telegram, because

31:38.240 --> 31:43.300
I know a lot of you have also the love plug going better than ever.

31:43.300 --> 31:48.840
Every single Sunday, it's noon, Pacific three p.m. Eastern, right in our Mumble room at

31:48.840 --> 31:50.260
the right in the lobby.

31:50.260 --> 31:54.040
And we have all the information on how to join Mumble at Linux unplugged dot com.

31:54.040 --> 32:00.480
And we have the love plug session in your local time at Jupiter broadcasting dot com

32:00.480 --> 32:02.580
slash calendar.

32:02.580 --> 32:06.320
So I also am going to give a special shout out.

32:06.320 --> 32:10.820
If you're if you're looking to reach the audience, we have an opening next month.

32:10.820 --> 32:15.620
J.B. has some sponsor opportunities for members of our audience next month.

32:15.620 --> 32:18.600
So email me Chris at Jupiter broadcasting dot com.

32:18.600 --> 32:22.460
I love to have a situation where somebody who listens to the shows as a product that

32:22.460 --> 32:24.660
our community can benefit from.

32:24.660 --> 32:27.640
And I'd love to hear from you, Chris at Jupiter broadcasting dot com.

32:27.640 --> 32:30.680
And Mr. Bain, I think that's all the cleanup we have this week.

32:30.680 --> 32:33.200
It sure looks tidy around here.

32:33.200 --> 32:39.440
OK, don't call me crazy for this one, but I have an honest question that I want to ask

32:39.440 --> 32:40.920
you guys.

32:40.920 --> 32:44.800
And maybe in a way, I kind of want you to talk me out of it, actually.

32:44.800 --> 32:51.480
I'm thinking about Arch for a family member, and this is something I would never, ever

32:51.480 --> 32:53.920
do in the past.

32:53.920 --> 33:00.940
I always go for the LTS or elementary OS or something that's that's a multi year distro.

33:00.940 --> 33:06.260
But the situation has changed recently and it's got me considering deploying something

33:06.260 --> 33:09.740
much more current for a family member.

33:09.740 --> 33:12.960
It all started because of a laptop.

33:12.960 --> 33:17.400
I'm testing a laptop out for my boy, Dylan, thinking about giving this to him for his

33:17.400 --> 33:19.200
birthday that's coming up soon.

33:19.200 --> 33:21.960
And it's a funny thing, this laptop.

33:21.960 --> 33:27.960
This time a year ago, by any review I read online, it was an absolute nightmare to get

33:27.960 --> 33:30.360
Linux running on this thing.

33:30.360 --> 33:31.680
And I can kind of see why.

33:31.680 --> 33:33.800
It's a Ryzen nine eight core CPU.

33:33.800 --> 33:41.760
It has an Nvidia RTX 2060 Max Q, as well as a built in AMD integrated GPU, a hundred and

33:41.760 --> 33:42.940
twenty eight hertz display.

33:42.940 --> 33:45.120
Not every desktop environment even supports that.

33:45.120 --> 33:48.720
I mean, this thing is a quintessential gaming laptop.

33:48.720 --> 33:52.160
It's the Asus Zephyrus G14.

33:52.160 --> 33:57.240
It's a 14 inch screamer and it's a slick looking rig.

33:57.240 --> 34:00.100
I've seen a lot of people asking online if it's compatible with Linux.

34:00.100 --> 34:04.680
And back in April of 2020, when Jim Salter over at Ars Technica tried it out, our buddy

34:04.680 --> 34:08.800
Jim from the show here, he's been on before, he had all kinds of problems and Jim's not

34:08.800 --> 34:10.800
new to Linux.

34:10.800 --> 34:14.760
He declared it, and I quote, a bust under Linux.

34:14.760 --> 34:16.760
He had trackpad issues.

34:16.760 --> 34:19.240
He had no working GPU acceleration.

34:19.240 --> 34:22.560
And for the hardware that did work, he had like strange driver errors that would be in

34:22.560 --> 34:24.960
the logs, even though things were working.

34:24.960 --> 34:27.920
It just was a complete no recommendation from him.

34:27.920 --> 34:34.280
And it seemed like such a shame, you know, something with a with a great Ryzen CPU and

34:34.280 --> 34:37.680
dedicated graphics and a hundred and twenty eight hertz screen.

34:37.680 --> 34:39.520
That's a special combination.

34:39.520 --> 34:44.840
Well, is it isn't it funny how it works in Linux land?

34:44.840 --> 34:50.080
If you fast forward to the end of 2020, early 2021, and you have a distro that rocks a modern

34:50.080 --> 34:53.840
kernel, the thing's nearly problem free now.

34:53.840 --> 34:54.840
Wow.

34:54.840 --> 34:55.840
Everything basically works.

34:55.840 --> 34:57.520
And I mean, you've seen it, Wes.

34:57.520 --> 34:59.320
It's it's a nice looking rig, too.

34:59.320 --> 35:00.800
Yeah, yeah, it is.

35:00.800 --> 35:02.960
It's got 24 gigs of RAM.

35:02.960 --> 35:05.980
It's got a really fast NVMe disk in it.

35:05.980 --> 35:10.520
That Ryzen CPU has 16 threads, eight physical cores.

35:10.520 --> 35:16.040
And with that hundred and twenty eight hertz screen and that Nvidia GPU, this has literally

35:16.040 --> 35:21.000
become one of the best experiences of desktop Linux that I have ever had.

35:21.000 --> 35:26.800
And I've fallen in love with my son's computer and I don't know what I'm going to do about

35:26.800 --> 35:27.800
this.

35:27.800 --> 35:30.680
I mean, this is going to be really hard to give up.

35:30.680 --> 35:37.880
But the kid loves the game on Linux, and this week he asked me for Arch.

35:37.880 --> 35:39.300
He asked.

35:39.300 --> 35:43.040
And I think, you know, for him, it's obvious he's seen how quickly I can get things up

35:43.040 --> 35:48.600
and going on my computer versus his, which is based on an 1804 base and things are just

35:48.600 --> 35:51.360
a little bit harder to get up and running when you're trying out different launchers

35:51.360 --> 35:53.280
or the latest Nvidia driver.

35:53.280 --> 35:54.280
And he gets that.

35:54.280 --> 35:58.300
He doesn't understand all the details of it, but he understands that his Linux is based

35:58.300 --> 36:03.680
on something that was released in 2018 and my Linux is based on stuff that was released

36:03.680 --> 36:05.320
now.

36:05.320 --> 36:10.480
And he finds that more compelling because he wants to get like launchers from the AUR

36:10.480 --> 36:13.640
and stuff, drivers and stuff like that.

36:13.640 --> 36:15.760
And so my idea was, let's see if this machine works.

36:15.760 --> 36:19.960
And I was pretty skeptical because Jim had had such a hard time with an others as well.

36:19.960 --> 36:24.040
You can find threads all over the Internet of people having this drugs.

36:24.040 --> 36:28.800
And so I thought, well, you know, maybe, you know, because I'm, you know, I'm Mr. Linux

36:28.800 --> 36:29.800
unplugged over here.

36:29.800 --> 36:31.240
Maybe I can get it working.

36:31.240 --> 36:34.800
Chris, LAS, the LAS stands for Linux Action Show.

36:34.800 --> 36:36.200
Hello, ladies.

36:36.200 --> 36:38.320
So I thought maybe I'll get it going.

36:38.320 --> 36:44.000
And but in reality, all I did was download Endeavor OS, which ships with a very modern

36:44.000 --> 36:50.000
kernel, especially their latest release, and use that to boot this laptop.

36:50.000 --> 36:51.740
And everything just worked.

36:51.740 --> 36:55.340
And so then I started to think, well, hang on here.

36:55.340 --> 36:56.340
Should I do this?

36:56.340 --> 37:02.080
I mean, my personal reasons for giving my son Arch on this machine would be over and

37:02.080 --> 37:03.080
over again with gaming.

37:03.080 --> 37:06.920
It seems like it's always been beneficial to have the latest graphics stack and kernel

37:06.920 --> 37:08.760
stack.

37:08.760 --> 37:12.800
There are a few kernel patches that that allow you to control the thermals and the fans and

37:12.800 --> 37:14.280
other things more with the G14.

37:14.280 --> 37:17.320
Of course, that stuff's right there in the AUR.

37:17.320 --> 37:18.320
Super easy.

37:18.320 --> 37:19.320
Just a kernel build away.

37:19.320 --> 37:20.320
Yeah.

37:20.320 --> 37:25.020
So that's nice because it just solves a couple of things and it's just done.

37:25.020 --> 37:28.440
Like I mentioned, there's tons of game launchers that'd be easy for me to set up for him via

37:28.440 --> 37:30.000
the AUR.

37:30.000 --> 37:32.960
And rolling means fresh GNOME shell.

37:32.960 --> 37:37.440
And fresh GNOME means the latest performance improvements that multiple upstream companies

37:37.440 --> 37:38.440
are working on.

37:38.440 --> 37:42.000
And then at the end of the day, of course, my kid has dad grade tech support.

37:42.000 --> 37:43.520
So it's not like I can't help him.

37:43.520 --> 37:45.700
I mean, that's a real factor here.

37:45.700 --> 37:48.920
So I'm wondering, can somebody give me a reason not to do it?

37:48.920 --> 37:52.160
I know your kids are on Fedora and it looks like it's working really well for them.

37:52.160 --> 37:54.480
Your daughter seems to love it.

37:54.480 --> 37:58.480
I guess, is it, am I crazy here?

37:58.480 --> 38:00.160
Should I just be happy with something like Fedora?

38:00.160 --> 38:04.820
Because I have thought like either the most recent Fedora or the most recent Ubuntu and

38:04.820 --> 38:06.400
just stick with that.

38:06.400 --> 38:09.320
I would say go with whatever you're most comfortable with.

38:09.320 --> 38:14.720
I mean, whenever you're the escalation point, whenever you're the support, have them use

38:14.720 --> 38:17.680
whatever is the easiest thing for you to support.

38:17.680 --> 38:19.160
Your kid thinks I should go Fedora.

38:19.160 --> 38:25.000
Yeah, it's going to give you all the rolling, nice updated software you'd get in Arch.

38:25.000 --> 38:27.440
But here's the thing.

38:27.440 --> 38:30.360
Your son won't have pain from his operating system.

38:30.360 --> 38:31.360
Yeah.

38:31.360 --> 38:33.320
I mean, is Arch that bad?

38:33.320 --> 38:36.040
I feel like Endeavor OS makes a lot of takes.

38:36.040 --> 38:40.400
It's very, it gets you installed, it gets you set up with a desktop environment.

38:40.400 --> 38:42.900
And then it's basically like, okay, have at it and it's out of your way.

38:42.900 --> 38:43.900
And it just runs.

38:43.900 --> 38:46.120
I would say it depends on his update hygiene.

38:46.120 --> 38:47.120
Yeah.

38:47.120 --> 38:50.440
How willing is Dylan to be, you know, involved in that sort of maintenance?

38:50.440 --> 38:51.760
Are you the one doing the updates?

38:51.760 --> 38:54.280
Or is he going to be doing that on some kind of basis?

38:54.280 --> 39:00.360
My thought there was maybe go with the LTS kernel and the LTS video drivers, and then

39:00.360 --> 39:03.100
just do updates, you know, a couple times a month.

39:03.100 --> 39:09.200
If you do the LTS, you will probably miss out on some kernel niceties that might help

39:09.200 --> 39:11.560
with his newer components.

39:11.560 --> 39:12.560
True.

39:12.560 --> 39:16.440
Although the LTS kernel I think is, I think in Arch now it's 5.10.

39:16.440 --> 39:18.240
I mean, that's, I'm pretty good at that point.

39:18.240 --> 39:19.240
I mean, maybe that's coming.

39:19.240 --> 39:22.040
It looks like the current is 5.4.

39:22.040 --> 39:27.120
Oh, oh, oh, oh.

39:27.120 --> 39:28.120
I don't know.

39:28.120 --> 39:33.520
I'm running an AMD system and it's very nice to have latest kernel and Mesa stuff.

39:33.520 --> 39:34.520
It helps out a lot.

39:34.520 --> 39:35.520
Oh boy.

39:35.520 --> 39:36.520
Yeah, boy.

39:36.520 --> 39:40.080
If it's 5.4, that's kind of a deal breaker because I think some of the stuff I need is

39:40.080 --> 39:41.760
in later versions.

39:41.760 --> 39:42.760
Hmm.

39:42.760 --> 39:43.760
Okay.

39:43.760 --> 39:48.520
So LTS is out, but PyCrash points out there could be a few other steps I could take to

39:48.520 --> 39:50.400
make Arch a little bit safer to use.

39:50.400 --> 39:51.400
Yeah.

39:51.400 --> 39:57.300
I mean, it will be a great, great opportunity for Dylan to play with his system and learn

39:57.300 --> 39:59.680
a little more about Linux.

39:59.680 --> 40:03.480
And you can just install Snapper like you have on your Arch server.

40:03.480 --> 40:08.600
So he tells me how to roll back with Snapper and he's done.

40:08.600 --> 40:12.600
He rolls back, he fixes problems and it's done.

40:12.600 --> 40:13.600
True.

40:13.600 --> 40:20.040
I feel like what would make Snapper even more perfect with Arch would be if it made a boot

40:20.040 --> 40:21.040
entry.

40:21.040 --> 40:24.360
So you could actually boot into a previous snapshot and just go right back.

40:24.360 --> 40:28.760
So you could just, all he had to do was reboot and go to previous state in grub.

40:28.760 --> 40:31.960
And then I feel like that would be deployment ready for him.

40:31.960 --> 40:36.320
But Minimac, I feel like part of the thing here is he's asking for Arch and this is kind

40:36.320 --> 40:39.760
of an opportunity to like take him further down the Linux path.

40:39.760 --> 40:40.760
Yeah.

40:40.760 --> 40:46.520
I was listening to that story and I just felt as a proud father, you just want to do that.

40:46.520 --> 40:55.160
You know, in German, we have that saying that says the apple just falls next to the tree

40:55.160 --> 40:58.520
and you want your son being a Linux guy.

40:58.520 --> 41:05.680
And Arch, I mean, there is probably a learning curve, but I mean, with a possibility of SSH

41:05.680 --> 41:09.760
connection, you can probably fix some stuff.

41:09.760 --> 41:10.760
True.

41:10.760 --> 41:14.680
That maybe, and let's be honest, you want that.

41:14.680 --> 41:15.680
And it's cool.

41:15.680 --> 41:17.200
That is a good point.

41:17.200 --> 41:21.920
I could probably just do a reverse SSH connection and fix it for him.

41:21.920 --> 41:25.000
And he does, you know, I'm always just a call or a text message or sitting right next to

41:25.000 --> 41:26.000
him.

41:26.000 --> 41:27.000
So that's true.

41:27.000 --> 41:31.880
Although I don't want it to end up being a problem like when I'm super busy and I can't

41:31.880 --> 41:34.560
address it right away, which could happen.

41:34.560 --> 41:38.760
So I don't know, Colonel, maybe there's a bit of a safety in between with Manjaro.

41:38.760 --> 41:39.760
Yeah.

41:39.760 --> 41:44.800
I know that for a lot of gamers, they really like Manjaro because it walks that line of

41:44.800 --> 41:50.600
having the newest stuff, but Manjaro will hold it for a week or two, do a little extra

41:50.600 --> 41:53.720
testing and kind of takes the pain out of Arch.

41:53.720 --> 41:58.880
So it might be a nice happy in between where he's still getting newest stuff.

41:58.880 --> 42:00.160
It's still rolling.

42:00.160 --> 42:05.840
It's still technically sort of Arch, but he doesn't have some of the pain points that

42:05.840 --> 42:11.160
Arch would present where you have to read the blog post before you do your updates and

42:11.160 --> 42:12.160
stuff like that.

42:12.160 --> 42:14.520
I have considered that because you're right for gaming, too.

42:14.520 --> 42:17.080
It really does kind of hit that.

42:17.080 --> 42:21.800
The other thing, too, is that Manjaro has taken a lot of work to actually make gaming

42:21.800 --> 42:24.620
a good experience on Manjaro.

42:24.620 --> 42:25.800
So there's that, too.

42:25.800 --> 42:26.800
Yeah.

42:26.800 --> 42:27.800
That's a fair point.

42:27.800 --> 42:33.080
I have really liked Endeavor OS, but I'm liking it from I forget that it's not just

42:33.080 --> 42:34.080
Vanilla Arch.

42:34.080 --> 42:37.040
I think their ISO sort of hits that perfect balance.

42:37.040 --> 42:42.920
It has some of the latest packages you might need, and they just did an update for 2021.

42:42.920 --> 42:48.760
And so in there, they've got just some nice sensible defaults, and you boot that, and

42:48.760 --> 42:53.640
you get Linux 5.10, and you get a lot of nice new stuff just right out of the box.

42:53.640 --> 42:55.440
And then you're off to the races with Arch.

42:55.440 --> 42:58.840
And some of the other things they do by default that I think all Arch distros should do is

42:58.840 --> 43:01.720
they package reflectors so you get the fastest mirrors possible.

43:01.720 --> 43:04.560
I mean, it's just a solid, solid version of Arch.

43:04.560 --> 43:05.560
But you're right.

43:05.560 --> 43:09.280
If I'm going just for gaming, I could see that.

43:09.280 --> 43:10.280
I could.

43:10.280 --> 43:11.880
Talk me out of it, Carl.

43:11.880 --> 43:16.160
Well, I guess the way I would look at it is that you were talking about when things do

43:16.160 --> 43:21.880
go wrong, Fedora would give you a good boundary there where they still get very fresh software,

43:21.880 --> 43:25.120
still get the latest kernel and graphics drivers all the time.

43:25.120 --> 43:29.520
But for other major changes in the operating system, those are going to be batched up with

43:29.520 --> 43:33.640
the major version upgrades, like going from Fedora 32 to 33.

43:33.640 --> 43:38.240
And you could wait until you're around to do those upgrades, but not doing the system

43:38.240 --> 43:42.760
upgrades, you know, just the regular routine ones he can apply on his own all the time.

43:42.760 --> 43:43.760
Yeah.

43:43.760 --> 43:44.760
Huh.

43:44.760 --> 43:45.760
Man, this is tricky.

43:45.760 --> 43:50.400
I feel like I had all this momentum, and now you guys have basically taken me to the distro

43:50.400 --> 43:51.400
disco.

43:51.400 --> 44:05.960
Distro.

44:05.960 --> 44:08.920
So what I got to do is I got to just try it all out.

44:08.920 --> 44:10.280
So right now I have Arch on there.

44:10.280 --> 44:16.920
So I think before I take Arch off, I crash linked snap pack grub, which is a Pacman hook

44:16.920 --> 44:23.800
to update grub entries if you're running ButterFS, which I don't know if I am or not on that

44:23.800 --> 44:25.000
machine.

44:25.000 --> 44:26.000
So this is cool.

44:26.000 --> 44:27.000
Did you see this, Wes?

44:27.000 --> 44:30.720
It does that bit I was talking about by taking those snapshots and making them grub entries.

44:30.720 --> 44:31.720
Oh, yeah.

44:31.720 --> 44:32.720
Isn't that handy?

44:32.720 --> 44:34.000
I wonder if we should put that on the server.

44:34.000 --> 44:35.560
I'll put a link to it in the show notes.

44:35.560 --> 44:37.440
Let me think about that.

44:37.440 --> 44:38.440
Kick that one around.

44:38.440 --> 44:39.440
See, that seems perfect.

44:39.440 --> 44:43.880
We'll test it out on the server, see if we like it, and if it proves itself reliable,

44:43.880 --> 44:44.880
give it to Dylan.

44:44.880 --> 44:45.880
True.

44:45.880 --> 44:53.240
I'm going to test the laptop for a bit, and then I think I need to give Fedora a spin.

44:53.240 --> 44:54.240
I need to try it.

44:54.240 --> 44:58.640
I need to try it soon, so that way I can get this figured out before his birthday.

44:58.640 --> 45:01.680
And then I got to figure out what the heck I'm going to do for myself.

45:01.680 --> 45:05.560
I'm kind of thinking maybe I might sell my X1.

45:05.560 --> 45:06.640
It's a fine laptop.

45:06.640 --> 45:07.880
You just got that.

45:07.880 --> 45:08.880
I know.

45:08.880 --> 45:09.880
I know.

45:09.880 --> 45:10.880
I know.

45:10.880 --> 45:12.720
But I have to recommend this G14.

45:12.720 --> 45:16.920
If you're comfortable running cutting edge Linux and you want like an Asus laptop that

45:16.920 --> 45:21.360
you can order off Amazon, I mean, the thing's ridiculous.

45:21.360 --> 45:25.520
It plays every single video game I throw at it, but my desktop experience has been super

45:25.520 --> 45:26.520
smooth.

45:26.520 --> 45:31.640
I have gone with GNOME Shell on it because I'm just using it as a single monitor, and

45:31.640 --> 45:34.480
it feels really, really nice and really fast on there.

45:34.480 --> 45:40.040
And I'm using plasma on my workstation class machines that have multiple monitors and multiple

45:40.040 --> 45:43.400
screens or even a single screen, but we're using it for work.

45:43.400 --> 45:45.300
That's plasma these days.

45:45.300 --> 45:51.880
But for like my one-off play machines that are single monitor, I'm finding GNOME Shell

45:51.880 --> 45:53.180
really does the trick.

45:53.180 --> 45:58.220
I really like it, and I've been using that on there, and it seems that it has solid support

45:58.220 --> 46:03.400
for the 120-hertz screen, so everything is just so smooth you want to lick it.

46:03.400 --> 46:04.960
I feel like maybe I've been broken by it.

46:04.960 --> 46:06.520
I don't know if I can go back now.

46:06.520 --> 46:08.120
I'm like that guy now.

46:08.120 --> 46:12.000
It's like you'll be buying a second one pretty soon.

46:12.000 --> 46:14.960
I would love for next-gen Ryzen to be easy to get access to.

46:14.960 --> 46:17.680
That would be perfect.

46:17.680 --> 46:19.200
But I'd love to know your thoughts.

46:19.200 --> 46:21.480
Let me know, linuxunplugged.com.

46:21.480 --> 46:24.080
Have you deployed something like Arch for a family member?

46:24.080 --> 46:26.480
Is that just too crazy?

46:26.480 --> 46:31.040
And is Fedora or maybe the latest Ubuntu a safer kind of bet?

46:31.040 --> 46:37.040
Ironically, he would be happier with GNOME 40 because he's actually used to horizontal

46:37.040 --> 46:40.840
workspace layouts with the very little interaction he does with them because he's currently using

46:40.840 --> 46:47.460
elementary OS, and it's worked fantastic for a long, long time since it came out.

46:47.460 --> 46:52.280
But now it seems like it's getting trickier and trickier for him to do things like run

46:52.280 --> 46:57.880
multiple versions of Java and update the NVIDIA driver, and his frustration translates to

46:57.880 --> 47:00.400
maybe I should try Windows 10.

47:00.400 --> 47:04.340
And so when there was this window of opportunity to say, well, wait a minute, if I can keep

47:04.340 --> 47:07.240
using Linux but Arch makes it easier, maybe I should use Arch.

47:07.240 --> 47:09.720
Dad, will you put Arch on my computer?

47:09.720 --> 47:10.720
What would you do?

47:10.720 --> 47:15.880
Let me know, linuxunplugged.com slash contact.

47:15.880 --> 47:18.880
Thank you to Datadog for sponsoring this episode of the Unplugged program.

47:18.880 --> 47:24.680
First time here on the Unplugged program, so go to datadog.com slash unplugged.

47:24.680 --> 47:29.520
They're the unified monitoring analytics platform for comprehensive visibility into cloud, hybrid,

47:29.520 --> 47:30.520
and multi-cloud environments.

47:30.520 --> 47:34.060
If you have on-premises and in cloud, they can do that.

47:34.060 --> 47:38.080
Before on the show, we've talked about site monitoring, keeping a real good eye on your

47:38.080 --> 47:39.080
site.

47:39.080 --> 47:41.780
Well, of course Datadog can do that, but this is the entire stack.

47:41.780 --> 47:46.760
This is monitoring your whole stack, your OS, your applications, your website, all of

47:46.760 --> 47:48.520
it from top to bottom.

47:48.520 --> 47:51.800
This is make important business decisions kind of monitoring.

47:51.800 --> 47:54.160
Get data to make decisions.

47:54.160 --> 47:57.640
It's data about your entire stack, and you can quickly analyze the performance of your

47:57.640 --> 48:01.820
Linux servers in real time with customizable dashboards, and you can troubleshoot those

48:01.820 --> 48:02.820
issues in seconds.

48:02.820 --> 48:08.600
You can get a unified view of your metrics, your traces, your logs, all in one place.

48:08.600 --> 48:12.760
Datadog started as an effort for the developers to communicate with sysadmins and sysadmins

48:12.760 --> 48:14.560
to communicate with developers.

48:14.560 --> 48:18.960
Seriously, that was the original premise, and they've built in this incredible stack

48:18.960 --> 48:22.640
with turnkey integrations for over 400 technologies.

48:22.640 --> 48:28.760
You can even use Datadog to monitor key Linux metrics and watch it right alongside with

48:28.760 --> 48:34.640
application data and even inside your containers, get insights into container performance.

48:34.640 --> 48:38.160
I mean, I'm talking full stack visibility here.

48:38.160 --> 48:43.200
You get an idea of the health, the performance, all of it.

48:43.200 --> 48:47.580
So start a Datadog trial right now by going to datadog.com slash unplug.

48:47.580 --> 48:52.680
If you start a free trial and you create just one dashboard, you'll get a free t-shirt from

48:52.680 --> 48:55.720
Datadog and you support the show.

48:55.720 --> 48:56.760
It's that easy.

48:56.760 --> 48:57.760
It's that simple.

48:57.760 --> 49:00.400
It's datadog.com slash unplug.

49:00.400 --> 49:05.400
Get an eye on everything and go there too just to see how beautiful they make it.

49:05.400 --> 49:09.840
They really help you visualize all of this in a way that your brain can process and take

49:09.840 --> 49:16.960
action on, datadog.com slash unplugged.

49:16.960 --> 49:21.440
We got a couple of emails in and some follow up about browser sync.

49:21.440 --> 49:24.480
Do you want to take Dan's email there, Mr. Payne?

49:24.480 --> 49:25.880
Hmm, sure do.

49:25.880 --> 49:31.280
Yes, Dan wrote in about browser sync and writes that when Chris mentioned story about Google

49:31.280 --> 49:38.800
cutting off sync support for Chromium, I thought for sure he'd mentioned Eversync or XbrowserSync.

49:38.800 --> 49:45.580
Both have cross browser sync nailed down and the latter being XbrowserSync is FOSS and

49:45.580 --> 49:46.580
self-hostable.

49:46.580 --> 49:48.200
I like that.

49:48.200 --> 49:54.880
So I went and took a little look-a-roo over at XbrowserSync.org and they pitched themselves

49:54.880 --> 49:59.160
as a solution that respects your privacy and gives you complete anonymity.

49:59.160 --> 50:00.160
Anonymity.

50:00.160 --> 50:01.160
Thank you.

50:01.160 --> 50:05.040
I'm not even going to try.

50:05.040 --> 50:06.780
And no signups are required.

50:06.780 --> 50:09.120
There's no personal data that they ever collect, they say.

50:09.120 --> 50:15.520
They say to start syncing you just simply download their XbrowserSync tool or plug-in

50:15.520 --> 50:17.920
and an encryption password and then you create a new sync.

50:17.920 --> 50:21.320
And then that's how you do it is that key you are essentially creating.

50:21.320 --> 50:28.200
And I had not seen XbrowserSync and I guess kind of because I got kind of burned with

50:28.200 --> 50:29.320
X marks.

50:29.320 --> 50:31.660
That's what I used to sync across all my browsers.

50:31.660 --> 50:33.160
It was so nice.

50:33.160 --> 50:40.800
Guys, if you use bookmarks and you use multiple browsers, the Strugs is real.

50:40.800 --> 50:44.320
I have bookmarks in Firefox, I got bookmarks in Chrome.

50:44.320 --> 50:50.180
It's just, it's mismatched and X marks used to keep it all in sync until one day they

50:50.180 --> 50:53.120
just kind of went away because everybody started building this in.

50:53.120 --> 50:55.880
Well, there's a couple of projects out there to solve it.

50:55.880 --> 50:59.800
But I wanted to say, Wes, we got an email into the old Showskies here about using GNOME

50:59.800 --> 51:02.720
Web or Epiphany with Firefox sync.

51:02.720 --> 51:04.920
Oh, you've been using it, huh?

51:04.920 --> 51:06.180
Super good.

51:06.180 --> 51:07.920
Super duper good.

51:07.920 --> 51:12.480
Really nice, really fast, peppy, modern browser.

51:12.480 --> 51:17.080
If you haven't used GNOME Web in a while or Epiphany, whatever you want to call it, you

51:17.080 --> 51:18.920
got to give it a go again.

51:18.920 --> 51:23.800
It's not going to be my primary, but it is definitely a good secondary browser.

51:23.800 --> 51:27.720
It handles the Google Apps fine as far as I can tell.

51:27.720 --> 51:29.080
Low resource usage, Wes.

51:29.080 --> 51:30.520
I'm telling you, it's beautiful, Wes.

51:30.520 --> 51:32.920
If you're on a GNOME desktop, it's beautiful.

51:32.920 --> 51:34.760
Just try it out.

51:34.760 --> 51:35.760
Just saying.

51:35.760 --> 51:37.240
And it syncs with Firefox sync.

51:37.240 --> 51:38.240
All right.

51:38.240 --> 51:41.520
Our next one comes in from Halvers and he writes in about gaming on Wayland.

51:41.520 --> 51:47.800
I recently tried using Wayland to play games on my dual monitor setup using my AMD GPU

51:47.800 --> 51:48.880
and the latest Mesa.

51:48.880 --> 51:56.360
I'm not entirely sure that this is the case, but it felt wrong, like I had massive input

51:56.360 --> 51:59.740
lag or something, even though my frame rates were just fine.

51:59.740 --> 52:02.480
Is this something that could be relevant to talk about here on the show?

52:02.480 --> 52:07.320
Because I'm wondering if it's just me or if I need to stay on X11 for some reason.

52:07.320 --> 52:10.300
With all of the work that's gone into gaming on Linux in recent years, I was sort of sad

52:10.300 --> 52:11.440
to discover this.

52:11.440 --> 52:12.440
Best regards.

52:12.440 --> 52:15.520
Have you done much gaming on Wayland, Wes?

52:15.520 --> 52:18.880
You know, honestly, most of my gaming these days is on Wayland.

52:18.880 --> 52:19.880
Really?

52:19.880 --> 52:20.880
Kind of just switched over.

52:20.880 --> 52:21.880
Now, I'm not a huge gamer.

52:21.880 --> 52:26.160
I don't play a lot of crazy difficult or intensive games necessarily, but a lot of stuff through

52:26.160 --> 52:30.000
Proton and just casually on the weekends or whatever.

52:30.000 --> 52:31.000
It's been fine for me.

52:31.000 --> 52:34.480
I don't have a crazy monitor setup, especially like you with triple multi orientations or

52:34.480 --> 52:35.480
anything.

52:35.480 --> 52:39.000
I've just got two monitors side by side, but I've not noticed this at least.

52:39.000 --> 52:46.640
Gambus or Gabmus in the mumble there, you said you're playing Gnome Wayland games all

52:46.640 --> 52:47.640
the time?

52:47.640 --> 52:53.800
Yeah, I actually, since I got my 5700 XT, I've been playing exclusively on Gnome Wayland

52:53.800 --> 52:59.840
and so far it's been great to the point that when I sporadically need to go back to Xorg

52:59.840 --> 53:05.360
and I just forget that I'm there, I immediately notice when I launch a game and because of

53:05.360 --> 53:11.800
tearing and stuff that doesn't work like I'm used to, I guess it just works better if you

53:11.800 --> 53:17.720
have like a recent AMD GPU, also I'm on Arch by the way, so that may be a thing.

53:17.720 --> 53:19.280
Very nicely done.

53:19.280 --> 53:25.120
So Halvers, you didn't say what desktop environment you're using because I've had two very different

53:25.120 --> 53:27.400
experiences with gaming on Wayland.

53:27.400 --> 53:31.120
Gaming on Wayland with Gnome Shell has been remarkably flawless.

53:31.120 --> 53:35.340
I think I've even mentioned on the show at one point, I was blown away because I was

53:35.340 --> 53:42.600
gaming on Wayland with an AMD GPU that is an eGPU, so I'm using an eGPU while X-Wayland

53:42.600 --> 53:49.520
is running in Wayland and I'm controlling it with a Bluetooth mouse and a wireless headset

53:49.520 --> 53:52.760
and everything was in sync and everything worked.

53:52.760 --> 53:59.120
I mean like, amazing, right, Bluetooth mouse, wireless headset, eGPU, laptop, and it just

53:59.120 --> 54:04.000
was great with Wayland, right, and so I've had that experience and I've also had this

54:04.000 --> 54:09.320
strange experience that you've had where I've had this weird delay and lag and I really

54:09.320 --> 54:13.440
have problems when I have two monitors on plasma.

54:13.440 --> 54:17.960
It seems to be that if I'm on plasma with a single monitor and on Wayland, I don't have

54:17.960 --> 54:22.200
as many problems, but if I'm on plasma with multiple monitors and Wayland and I try to

54:22.200 --> 54:27.960
game because I'm a maniac apparently, then I also experience what you're seeing.

54:27.960 --> 54:31.160
So you didn't say what desktop environment is, but I'm wondering if that plays a role.

54:31.160 --> 54:36.720
It's GNOME, so this is probably to do with, I mean, Wayland, it's weird.

54:36.720 --> 54:43.200
We're used to X-Org where X-Org does most of the window management and not the compositing

54:43.200 --> 54:49.960
necessarily but the compositor for X-Org is typically very close to what X-Org does.

54:49.960 --> 54:55.320
In Wayland, on the other hand, as far as I understand, the desktop environment acts as

54:55.320 --> 55:01.040
a compositor that in turn acts as also a window manager, so everything has to do with the

55:01.040 --> 55:02.040
compositor.

55:02.040 --> 55:06.520
So it makes sense that you will have different experiences depending on the desktop environment

55:06.520 --> 55:09.720
because it's practically a different Wayland implementation.

55:09.720 --> 55:11.560
Right, well said.

55:11.560 --> 55:14.880
And then one last bit of follow up before we get out of the feedback section.

55:14.880 --> 55:16.920
I talked before about MailSpring.

55:16.920 --> 55:22.100
It's a mail client that I use and it has pretty good invite support.

55:22.100 --> 55:25.560
It doesn't have integrated calendar, but it has some nice features.

55:25.560 --> 55:31.560
Overall, it's got kind of this cool slash creepy, like has somebody opened up the email

55:31.560 --> 55:33.880
tracking system and I kind of like it.

55:33.880 --> 55:36.680
It also has integration with LinkedIn, so when you're reading, when you get an email

55:36.680 --> 55:40.840
from somebody, if they are on a popular social network, it'll pull in some of their details.

55:40.840 --> 55:44.840
It is an Electron app, but it's probably one of Linux's most feature complete mail

55:44.840 --> 55:45.840
clients.

55:45.840 --> 55:49.760
It kind of had a slowdown in development recently, but the developer seems to have popped back

55:49.760 --> 55:52.600
up and now we have another update.

55:52.600 --> 55:58.640
A component of what makes MailSpring work really well is this server side sync and the

55:58.640 --> 56:02.920
server side sync is really staying in touch with the Google Apps account that you have.

56:02.920 --> 56:06.060
It's what helps do the really kind of cool slash creepy tracking.

56:06.060 --> 56:09.240
It's a major component of MailSpring.

56:09.240 --> 56:11.360
MailSpring itself, open source.

56:11.360 --> 56:15.120
MailSync, the server component, wasn't until this week.

56:15.120 --> 56:22.580
A day ago, the developer of MailSpring took MailSync GPL and now the server component

56:22.580 --> 56:28.200
of what is one of the better desktop Linux mail apps, right up there with Thunderbird,

56:28.200 --> 56:32.480
now has a GPL3 server component that you can self-host.

56:32.480 --> 56:38.120
It's early days still, but this has been a project that this developer spent five years

56:38.120 --> 56:43.120
of his sweat, tears, and blood building and now it's open source.

56:43.120 --> 56:44.120
Wow.

56:44.120 --> 56:45.120
Good to see, huh?

56:45.120 --> 56:46.120
Yeah.

56:46.120 --> 56:48.480
I mean, it's a nice little bolster for continued development.

56:48.480 --> 56:52.320
I think they write in that update, you know, trying to find the right balance between product

56:52.320 --> 56:57.680
and project and that's definitely not easy in open source.

56:57.680 --> 57:01.000
Makes me wonder, maybe I should give it a shot again because I've sort of just given

57:01.000 --> 57:03.800
up on desktop clients and I'm a webmail guy now.

57:03.800 --> 57:04.800
Yeah.

57:04.800 --> 57:07.840
I tell you, like today I was, before we got on air, I was emailing back and forth with

57:07.840 --> 57:12.920
somebody for something we were talking about today and it sure was nice having that on

57:12.920 --> 57:17.640
a desktop app because while I wanted it, I could turn on desktop notifications, it integrates

57:17.640 --> 57:22.520
in great with that and I could, as soon as that person got back to me, the pop-up came

57:22.520 --> 57:26.940
up on my desktop and I just moved over to that virtual desktop that had the app full

57:26.940 --> 57:30.680
screen and got right back to them and I was like, man, I'm really glad this is a desktop

57:30.680 --> 57:31.680
app.

57:31.680 --> 57:35.060
I could do this with a web app, but it's just not quite as nice.

57:35.060 --> 57:36.180
So Mailspring, it's great.

57:36.180 --> 57:40.760
Now to have both ends of it open source, now I feel a little bit more comfortable kind

57:40.760 --> 57:45.120
of giving it a full-throated endorsement, whereas before I was sort of like, oh yeah,

57:45.120 --> 57:48.400
but you know, there's Thunderbird, but now I'm kind of like, yeah, Thunderbird's great,

57:48.400 --> 57:51.680
but Mailspring, pretty awesome.

57:51.680 --> 57:57.240
And then last but not least in the show today, we have a few pics to enthrall you with and

57:57.240 --> 58:02.200
I don't know, Wes, is there a theme to these pics?

58:02.200 --> 58:06.240
There certainly is and it wasn't even of our own devising.

58:06.240 --> 58:15.400
We just got a whole bunch of pics via email and they were all built on Rust.

58:15.400 --> 58:24.480
Yeah, we have a whole batch of Rust pics and like Wes said, we didn't even do this.

58:24.480 --> 58:25.680
So you did this to yourselves.

58:25.680 --> 58:29.600
The first one, and I looked at the other ones pretty closely, but I didn't actually look

58:29.600 --> 58:34.600
at this first one super closely, but I think it's kind of like a curl or wget clone, but

58:34.600 --> 58:35.600
in Rust, is that right?

58:35.600 --> 58:42.280
Yeah, so it's a HTTP clone and if you're not familiar with that, HTTP is a Python application

58:42.280 --> 58:45.880
that yeah, it's sort of just like a friendly or easy curl to use.

58:45.880 --> 58:49.860
You know, curl's great, wget's great, they're easy to use, they're scriptable.

58:49.860 --> 58:55.040
This is a version of that same thing, you're making requests, HTTP requests, but you just

58:55.040 --> 58:56.040
want it for a human.

58:56.040 --> 58:58.480
It's for human workflows, you're experimenting with it.

58:58.480 --> 59:02.080
I use it just about every day because I'm writing a lot of APIs and I want to test them

59:02.080 --> 59:06.560
and write tests for them and give a nice easy human breakdown of what are the headers, pass

59:06.560 --> 59:09.920
on JSON files, no problem, all that kind of stuff.

59:09.920 --> 59:13.080
The biggest pain point for some people though is, well, it's a Python app.

59:13.080 --> 59:15.160
You can't just go download a package necessarily.

59:15.160 --> 59:18.280
Maybe you have to install from pip or hope it's packaged in your OS or something like

59:18.280 --> 59:19.280
that.

59:19.280 --> 59:23.360
Well, HT is a Rust app, so just head to the GitHub releases page.

59:23.360 --> 59:29.120
And while you're there, swing over to the FDDF page, the fast dupe finder.

59:29.120 --> 59:32.960
This is a small Rust command line program to find duplicate files in a directory, but

59:32.960 --> 59:36.960
recursively, it uses a thread pool to calculate the file hashes in parallel.

59:36.960 --> 59:42.280
So it's super quick and then it uses a thread pool to make its decisions.

59:42.280 --> 59:45.560
Duplicates are found by checking the size and then the hashes of parts of files are

59:45.560 --> 59:46.560
the same size.

59:46.560 --> 59:50.720
I mean, it looks at them and then takes a byte by byte comparison and then tells you

59:50.720 --> 59:54.820
which ones are duplicates and it does it all in the blink of an eye.

59:54.820 --> 59:55.860
It's very impressive.

59:55.860 --> 59:56.860
That's what I like, right?

59:56.860 --> 01:00:00.240
And maybe you don't need this, it's kind of a niche use case, it's just a small little

01:00:00.240 --> 01:00:01.240
app.

01:00:01.240 --> 01:00:03.660
But if you have a file, maybe you're trying to clean up some data, you have a lot of duplicates

01:00:03.660 --> 01:00:04.660
in there.

01:00:04.660 --> 01:00:07.800
And I just think this is a perfect application of Rust because you get those, you know, those

01:00:07.800 --> 01:00:11.240
nice reasonings about concurrency and parallelism, about data safety.

01:00:11.240 --> 01:00:15.760
So you can do some complicated algorithms, implement them well and still end up with

01:00:15.760 --> 01:00:17.280
a tight little binary to run.

01:00:17.280 --> 01:00:18.400
Yeah, word to your mother.

01:00:18.400 --> 01:00:22.400
And also it could be just a simple tool to just go through and find like duplicate files

01:00:22.400 --> 01:00:23.400
or for photos.

01:00:23.400 --> 01:00:26.160
Like say you took a bunch of photos and then you brought you imported them and you got

01:00:26.160 --> 01:00:27.160
some duplicates.

01:00:27.160 --> 01:00:28.160
I know I've done that.

01:00:28.160 --> 01:00:29.200
It could be useful for that.

01:00:29.200 --> 01:00:35.360
But clear the decks because the best we saved for last, we talked about bash top, we've

01:00:35.360 --> 01:00:39.800
talked about pie top, we've talked about bpy top, we've talked about go top, we've talked

01:00:39.800 --> 01:00:42.840
about a lot of top replacements.

01:00:42.840 --> 01:00:45.200
And they always seem to be trying to top each other.

01:00:45.200 --> 01:00:49.760
But when somebody came and wrote one for Rust, they took the other route.

01:00:49.760 --> 01:00:50.880
They took the bottom.

01:00:50.880 --> 01:00:55.320
And that's why this application is called bottom, yet another cross platform graphical

01:00:55.320 --> 01:00:58.920
process and system monitor for your terminal.

01:00:58.920 --> 01:01:00.280
And it's, it's awesome.

01:01:00.280 --> 01:01:05.200
It supports Linux, Mac OS, and even Windows.

01:01:05.200 --> 01:01:08.900
It seems like it's primarily inspired by G top and go top.

01:01:08.900 --> 01:01:11.760
And I of course, put it on my system, and I love it.

01:01:11.760 --> 01:01:15.200
It's so fast and it's got pretty nice mouse support.

01:01:15.200 --> 01:01:18.160
I didn't even realize that but here I was playing with it while you were talking and

01:01:18.160 --> 01:01:21.720
started just scrolling on my you know, just on the trackpad here and it scrolls all you

01:01:21.720 --> 01:01:24.800
can scroll on the graph and change how long of a period you're looking you can scroll

01:01:24.800 --> 01:01:27.520
through the list of processes or temperatures of the sensors.

01:01:27.520 --> 01:01:28.520
Awesome.

01:01:28.520 --> 01:01:29.520
Wow.

01:01:29.520 --> 01:01:30.520
That's cool.

01:01:30.520 --> 01:01:34.280
I totally didn't that is really useful to be able to scroll through the processors there.

01:01:34.280 --> 01:01:35.440
That is really nice.

01:01:35.440 --> 01:01:39.320
They've also got a really rich read me a lot lots of documentations in there, which clearly

01:01:39.320 --> 01:01:40.600
I haven't read yet.

01:01:40.600 --> 01:01:52.460
But if you're looking for a new top, this is a good contender.

01:01:52.460 --> 01:01:57.160
Before we go, I just want to say thank you to our unplugged core contributors unpluggedcore.com

01:01:57.160 --> 01:02:02.080
you keep in the show independent you get that limited ad feed or the full uncut feed.

01:02:02.080 --> 01:02:07.480
All the pre post show like additional show stuff super, super content show.

01:02:07.480 --> 01:02:14.780
Both feeds are available to our members unpluggedcore.com Thank you everybody.

01:02:14.780 --> 01:02:19.400
Also I want to mention that a cloud guru has a course to help you get networking figured

01:02:19.400 --> 01:02:20.680
out on Linux.

01:02:20.680 --> 01:02:24.160
You ever had that where you've had to troubleshoot a networking issue or something like that?

01:02:24.160 --> 01:02:25.880
Well they have a course every day.

01:02:25.880 --> 01:02:29.840
Yeah, they have a they have a course that'll help you feel comfortable and working with

01:02:29.840 --> 01:02:35.120
large variety of different networking tools and configurations and help you manage complex

01:02:35.120 --> 01:02:37.480
Linux network implementations.

01:02:37.480 --> 01:02:41.200
We'll have a link in the show notes for that or you can go to cloud guru.com get good way

01:02:41.200 --> 01:02:45.680
to learn tools like TCP dump Wireshark and a lot more so check the link in the show notes

01:02:45.680 --> 01:02:52.000
if you want to learn deep if you want to go all in on Linux networking and then a pro

01:02:52.000 --> 01:02:54.040
tip before we get out of here.

01:02:54.040 --> 01:02:55.100
Join us online.

01:02:55.100 --> 01:03:00.260
The conversation keeps going at Jupiter broadcasting.com Telegram we have our matrix server info our

01:03:00.260 --> 01:03:06.640
mumble server everything is at Linux unplugged.com and there's an entire network of fantastic

01:03:06.640 --> 01:03:14.600
podcasts that can be found at Jupiter broadcasting.com and just a reminder coder 400 is just around

01:03:14.600 --> 01:03:15.600
the corner.

01:03:15.600 --> 01:03:20.440
Big one West was there live so here he already knows he already knows how exciting it is

01:03:20.440 --> 01:03:24.080
secrets but you're gonna this is not a coder to miss.

01:03:24.080 --> 01:03:25.080
I don't think so.

01:03:25.080 --> 01:03:26.080
I don't think so.

01:03:26.080 --> 01:03:28.700
And why why miss a live production of this show?

01:03:28.700 --> 01:03:30.920
We make this here podcast every Tuesday.

01:03:30.920 --> 01:03:37.840
Join us live at 12 p.m. Pacific 3 p.m. Eastern see you next week same bad time same bad station

01:03:37.840 --> 01:03:44.360
contact page subscriptions all of that info at Linux unplugged.com go there to get all

01:03:44.360 --> 01:03:49.000
of that even if you can't make it live we still appreciate you downloading this podcast

01:03:49.000 --> 01:03:52.480
and we always appreciate it if you can share it's a great way to contribute to the show

01:03:52.480 --> 01:03:56.780
even if you can't do it monetarily you can still share the show somebody that's absolutely

01:03:56.780 --> 01:04:01.720
free and it turns out to be the number one way podcasts get marketed when you think about

01:04:01.720 --> 01:04:05.880
it it's a big ask to listen to like an hour plus show so if somebody you trust tells you

01:04:05.880 --> 01:04:08.760
to listen to it it makes a big difference and that's a great way to support the show

01:04:08.760 --> 01:04:13.340
is we're nearly to 400 ourselves thanks so much for joining us on this week's episode

01:04:13.340 --> 01:04:17.040
of the unplugged program and we'll see you right back here next Tuesday

01:04:43.340 --> 01:04:57.720
all right initiate intense jealousy mode Dalton already has a pre-order for a Starlink kitten

01:04:57.720 --> 01:05:03.840
what the hell didn't those just come out yeah six hours ago um they opened pre-orders

01:05:03.840 --> 01:05:08.920
so it's like well I got nothing to lose I want one where do I go uh the Starlink website

01:05:08.920 --> 01:05:12.660
you can do an order now I'm gonna do it I really think this would be a game changer

01:05:12.660 --> 01:05:16.480
for me I feel like this would be a significant game changer yeah I'm paying like 200 bucks

01:05:16.480 --> 01:05:25.040
a month for maybe 40 megabits per second down so yep yep yep Starlink is gonna be life-changing

01:05:25.040 --> 01:05:29.920
for me see when I go to their webpage though it's just the same old same old same old that

01:05:29.920 --> 01:05:34.360
I've already filled out before I think uh it says ordered the button has changed to

01:05:34.360 --> 01:05:40.800
order now hasn't it oh you're right oh my god oh this is very exciting I'm gonna go

01:05:40.800 --> 01:05:44.860
fill it out when you go through the order now process do they mention anything about

01:05:44.860 --> 01:05:51.840
the ongoing play cost after you've ordered the kit yes 100 a month well 99 whatever okay

01:05:51.840 --> 01:05:58.080
which is so much cheaper than what I pay for like LTE connections and whatnot six LTE connections

01:05:58.080 --> 01:06:03.600
yeah I was gonna say Chris you're probably paid what three or four hundred yeah I uh

01:06:03.600 --> 01:06:11.800
I actually just spent about 95 hours in the woods off grid and it was fantastic oh it

01:06:11.800 --> 01:06:16.620
was wonderful the only thing that really kind of went sideways is that there's like a polar

01:06:16.620 --> 01:06:20.960
vortex as they call it coming into the Pacific Northwest and so the temperatures are going

01:06:20.960 --> 01:06:25.420
down to like negative eight in the area that we were at and so it started to snow Sunday

01:06:25.420 --> 01:06:29.720
night and Monday morning we woke up and we looked around and we thought yeah we better

01:06:29.720 --> 01:06:33.840
get out of here.

