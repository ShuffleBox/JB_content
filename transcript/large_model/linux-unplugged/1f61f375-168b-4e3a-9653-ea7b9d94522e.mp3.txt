This is Linux Unplugged Episode 12 for October 29th, 2013.
Welcome to Linux Unplugged, Jupiter Broadcasting's weekly talk show that believes sometimes the esoteric aspects of your operating system can be the most important aspects of your operating system.
My name is Chris.
My name is Matt.
Hey there, Matt.
Episode 12, buddy, and we're chugging right along into pretty technical territory this week.
Oh, it's pretty deep stuff, let's just put it that way.
I'll be curious to see if we can pull this episode off because first of all, it's hard to be experts in either one of these topics we're talking about today because they're moving fast and they are very esoteric.
They're very low level stuff and a lot of people either don't know what they are, don't know why they should matter or feel like it'll never impact them.
But I hope after this week's episode, we change that line of thought.
That'd be great.
Kind of a big goal, but we'll see.
This week, Debian's been asked to make a choice to pick between two different startup systems.
One created by Canonical that's used in Ubuntu, Red Hat Enterprise, Linux 6, Chrome OS, called Upstart.
Obviously, Ubuntu is a major derivative of Debian, so it's a pretty important decision for those guys.
And then SystemD, created primarily by Red Hat, Intel, and others, that is shipping in Arch and it's going to be shipping to Red Hat Enterprise, Linux 7, SUSE.
A lot of different distros are picking up SystemD and they all do different things.
SystemD does a lot of things and that's one of the actual criticisms against it.
But people are really now watching Debian to see which way they're going to go because whichever way Debian goes, probably the rest of the market's going to go in whole.
Because if Debian goes with SystemD, then it's almost de facto standardized across all of Linux, except with the exception of the large distribution that some of you might have heard of called Ubuntu.
It's going to be interesting.
Yeah, because if they go with Upstart, then there's two very large distributions that many other distributions are based off that will not be using SystemD.
And it will sort of introduce sort of this long-term differentiator between the two sides.
So it's kind of all eyes are on Debian at the moment and this is a topic that has been being debated within Debian.
I remember reading a post on LWN.net, which after my comments in last week's episode, I went over and purchased a year subscription to LWN.net, which is once you get in behind the paywall, it is a totally different experience.
So they should tease some of that out a little more because it is actually really great.
Anyways, I read an article at LWN back on July 27th of 2011 saying that Debian was debating if they would switch to SystemD.
So this has been going on for a really long time, but it's getting serious this week, Matt. It's getting serious.
You said 2007?
Oh, I'm sorry, 2011. It was July 27th, 2011.
Okay, I was going to say, my goodness.
Yeah, it feels like that. It feels like that, honestly.
And you know, it's funny because I actually, I remember covering Upstart.
Upstart landed in edgy, what was it, like Ubuntu 6.10, I think, and of course they weren't fully converted over from System 5 in its scripts until I think like version 9 something of Ubuntu.
But I remember like talking for a very, very long time saying, man, Ubuntu's main feature is just a boots faster, a boots faster.
Well, during that period of time was when they were transitioning to Upstart.
And meanwhile, Debian's just been hanging back.
Been like, you know what, we'll let the kids figure it out. And we rolled Debian stable here.
We rolled Debian stable, so we let the kids figure it out and then we package it all up once they've got it all sorted out.
Now, of course, SystemD and Upstart have both been available in Debian testing for a while.
So we're going to talk about that.
But before we talk about this week, I wanted to get into our follow up because we like to continue the threads from previous week's episodes.
We want to do that right up here at the top of the show.
And we talked last week about sort of the sad state of Linux news and how it was so personality driven, so cult of personality driven.
And you talked a lot about it from a writer standpoint.
I did, because you got to understand that a lot of times what I put out there is assigned.
And then I have the option of saying I would like to eat this week or I would not like to eat this week.
And I basically and usually it's a pretty straightforward decision for me that I enjoy food.
And it's actually not as evil as that, because that kind of makes it sound evil.
But really what it is, it's like, well, if my editor or I don't know who's telling you.
But if the editor, whoever it is that gives you your assignment, aren't they basing that on what they perceive to be interest from their audience?
It's not the editor's fault.
It all rolls downhill from way above.
And basically it comes down to eyeballs, eyeballs, eyeballs.
That's really what it is.
So he's no more at fault than I am.
But he does.
He is the one that basically is the gatekeeper there as to what I know better.
One that you know better, but again, he's in a he's in a fairly stable position and he's not necessarily in a position that he wants to rock that boat.
Because he is managing things that aren't Linux related as well.
It's funny, though.
But yeah, so he's not an expert.
But it's funny because like in this episode, you know, if this is probably not the topic you pick to get a bunch of people to listen to your podcast.
System D and Upstart, right?
I mean, people you could see like how an editor would never want you to write an article about that because that's not a guaranteed win.
Right. But something about, you know, top 10 lists for something or whatever, top 77 lists like I saw today, a top 77.
OK, those drive clicks.
Exactly. And that's just one example.
It's one example. And also the fact that a lot of the sites, because as you're well aware of, tux machines being sold off and all this, the landscape's changing.
A lot of people are finding, oh, wow, this is so not a money making thing.
It's really not. Yeah.
So, you know, at least from the writing perspective.
So I think that folks are beginning to try for more of an SEO grab, sometimes to try for a title grab, and neither are necessarily working super awesome.
Even I found even on my own site, you know, it's been affected.
And sometimes it's this it's this horse race that you run and you run into with where, you know, people try different things to grab headlines and those quit work.
And then they have to switch to something else. And this is sort of the point that Matt, not you, but a different Matt who wrote into the show was making.
He said, you know, dear Chris and Matt, by the way, I'm a JB lurker, regular listen to unplugged and a regular viewer of last.
I also enjoy text napping photo from time to time.
But he points out he just finished listening to some plug level where we talked about this.
And he thinks that, you know, this whole driven by personalities talking about scandal instead of honest news.
This is really just sort of a slice of what's going on on a much larger scale, say on Fox News and MSNBC and everything in between.
Profit driven news outlets are only interested in viewership.
Yeah, that's factual.
And he said, anyway, just my two cents. Thanks for the great shows and for reporting Linux news.
It is important, if not always sexy. That's what we're going to try to do today.
That is true. And I think I would counter that, too, and saying he's absolutely correct.
A profit driven news center definitely has to take that into account.
But I also think that even if you go nonprofit, you do have to have some kind of funding source because you have fixed expenses, even if everybody was volunteering, which isn't always plausible.
So, you know, all those things come together.
There's a lot of things under the hood that people have to really stop and think about.
So Andreas wrote in. Oh, by the way, I think we probably got maybe 30, 35 emails just on that news topic alone.
We got so much email on that.
Linux unplugged this week generated more email feedback than last did when we did the Synology review.
And now now now cinnamon is last as we reclaim the crown with the cinnamon topic.
But for one week, Linux unplugged pulled ahead for episode 11 with the amount of feedback volume that we got.
So Andreas wrote in. He says, I need to get feedback on the question you asked in Linux unplugged.
Which distro will take the lead in a few years when Steam OS is out and Ubuntu continued to fail on the desktop?
I don't think we said that, but OK, we'll roll with it.
He says, I'm pretty sure it will be Steam OS.
Almost every Linux gamer might have at least a dual boot partition with Steam OS.
OK, there will be ones who refuse to use it because of the Steam DRM stuff.
But there might be a lot of Steam boxes sold and self-built out at this time point.
If I got the question wrong, please ignore this feedback. But I think this might be it.
I think, Andreas, you know, maybe you know what, at least as far as desktop deployment,
it's going to be hard to beat Ubuntu and Red Hat on the server deployments and Suice Enterprise Linux and even Debian.
You know, and I just I kind of disagree.
I don't know. I mean, so for me, it's like I think it depends on the location and actual the task.
Usually most people use a computer to actually accomplish a set of tasks.
If it's Steam OS, you're trying to accomplish getting some games going.
OK, if you're using Ubuntu, you're probably trying to get real work done.
You're trying to actually do something from a desktop experience.
I don't see Steam OS being really popular at your local nonprofit or at a school that's actually trying to get real work done.
I mean, the kids would love you for it, but I don't see that happening.
I see Ubuntu having a much bigger impact.
All right. Fair point. Fair point. So I was just looking.
Total console sold total total Xbox 360 console sold to date is looks like a fifty nine million.
I don't know. Is that right? Total and the original Xbox twenty four million.
There's thirty one million Xbox subscribers.
So almost sixty million Xbox 360 sold to date. OK.
And then, you know, twenty four million original Xboxes.
That is an S ton of Xboxes. Don't get me wrong.
But to put that into some perspective, there's been one hundred and seventy something a million iPads sold.
Right. And there's been and which which works out to be I can't remember the number now because I got a third.
I got a third hand, but it works out to be something like represents six months worth of desktop PC sales.
So you put it in perspective of desktop PC sales.
It's a it is not even it is not even half the year worth of so it is.
Yeah, I think, you know, SteamOS could get some good traction on the console,
but I don't know if it's really going to change the tide at this point in any one direction.
I think it's just going to be a strong contender.
Definitely a high number, but I don't think it's going to be number one.
I tend to agree with that. I think, you know, you're trying to undo time and undo progress that's already taken place.
And so if that does happen, it's going to be a five year plan.
If it doesn't happen, they'll maintain a real comfortable standing, but it may not ever become the big thing.
And hey, you know, if it did, that'd be that would be pretty interesting times.
Yeah. Oh, it'd be awesome. I would I'm totally rooting for him.
I want to see them absolutely just mop floor with everybody.
But, you know, I think that'd be great because what an exciting thing to watch.
You know, people are really passionate about it.
But, you know, we have to kind of wait and see how things play out.
Now, we got, like I said, so much email and I'm going to be totally upfront with you guys.
I didn't get a chance to read it all. So if you didn't get a response from me,
I watched a lot of videos on system D and upstart in the last couple of days. I'm not even kidding.
So I actually didn't get too much of my email.
I used my email time to do that because I was I just kind of fell down the rabbit hole of these things because it's actually pretty interesting stuff.
So if you if you want, you have my permission to resend.
And also, I encourage you to go to LinuxActionShow.Reddit.com.
And while you're over there, start a thread if you think it's something maybe the broader community could could chime in on.
Now, Matt, before we get into our main topic today, I want to thank our sponsor, and that is Ting.com. Matt? Yes.
Ting is mobile. It makes sense. They're my mobile service provider. They're Matt's mobile service provider.
And I'll tell you, Matt and I, we are men who prefer to be free agents. That's right.
I don't like being in a contract, Matt. I don't like early termination fees. What is it, some kind of scam?
Oh, totally. Yeah, that's I like having control over how I use my phone. Exactly.
And you know what's great about Ting is it's so not only is there no early termination fee, not only is there no contract. I mean, that's a great start.
I'd take that right there. Oh, totally. You also only pay for what you use.
So they take your minutes, your megabytes and your messages at the end of the month.
They'll just add it up, whatever bucket you fall into. And they've got some great examples on the Ting website.
My bill right now, for example, and it it is it is up in four days.
The Ting dashboard tells you they have an amazing dashboard over at Ting.
It's it's got to be it's not just like it's not just like good from like an interface standpoint, but it's also good from like Ting knows the Internet.
Like they are one of the first companies that are on board with Mozilla personas, which is a very, very great authentication system.
That sort of is an alternative to open ID and other things like that. Ting was on board right away. Ting knows about this kind of stuff.
So they not only do they have a very awesome dashboard, but they actually get Web standards.
They really get this kind of stuff and you go right in. They say, yeah, you got this much time left on your account.
You've got you know, you're currently at this and they have nice like gas gauges that tell you exactly where your usage is at.
And oh, by the way, this is your billing period. It'll be up in three days.
So when I go in there right now, it says my billing period has forty one or four days left. I'm at twenty one bucks.
I'm at twenty one bucks. And now I every time I'm in the car, I usually have an audio stream going and I usually have ways going.
I don't pretty much go anywhere without ways going all the time and even still. Now, I'm not a big voice user because I'll use Skype and things like that.
But that's what's so awesome. As the holidays come up, I'm going to start using my voice plan minutes a lot more.
Now, I'm not paying into some sort of plan. So it's like, OK, well, I get I get 200 minutes this month.
And if I use more than 200 minutes, I have to pay extra. And then, of course, when I'm not using the phone very much, I not the holidays.
I don't pay for that phone usage. It's just a flat six dollars a month.
I love the fact that they have a fluid bucket that will adjust to my month to month needs because they do fluctuate.
I mean, it really does fluctuate for me. So I love that.
Absolutely. So go get started over at Linux.ting.com.
That'll take twenty five dollars off your first device or twenty five dollars off your first month.
If you're going to bring your own device, they've got a bunch of compatible devices.
Also, right now, if you actually think this is sticking around for a while, go take advantage of this.
Go to ting.com slash ETF. They have an early termination relief program.
They're going to give you up to seventy five dollars off per line that you have to get terminated.
If you're going to move over to Ting and trust me, you're going to want to move over to Ting.
If you just go to Linux.ting.com, they got a savings calculator that'll show you the awesome amounts of money you'll save over the long run.
And by the way, that savings will include hotspot and tethering right with the plan.
No extra no extra package you have to get into. And it'll also include real personal phone support.
When you call a Ting agent, they answer the phone and they see your problem all the way through to the end.
It's like a real Canadian. I love that. I love the one on one connection you can make with these folks.
Because instead of talking to a machine, you're actually talking to someone that not only gives a rip, but can actually solve your problem.
They're also, as far as telcos go, the most transparent you're ever going to find.
So go over to their blog and just check out some of the posts over there.
They've just an introduction to one of their team members.
You get a little bit of behind the scenes info about Ting.
And as somebody who considers themselves a researcher of things before I buy, I really appreciate that they expose that kind of information to me.
Because it helps me make an informed decision.
So go over to linux.ting.com and thanks to Ting for sponsoring.
Linux Unplugged.
Ish. Good stuff.
So let's get down and dirty in the plumbing of Linux this week.
And I want to talk about SystemD and Upstart and this whole Debian's Choice.
So I'm going to read you something.
And it's so funny because you're going to find the same blurb all over the entire internet.
And it's even all over on the Ubuntu wiki on their SystemD page.
It's on Arch's wiki.
It's even on the main SystemD page and it's on the free desktop.org.
It is the explanation of what SystemD is.
It might not help, but I'm going to give it to you.
And then maybe we'll parse it a little bit.
So what is SystemD?
SystemD is a system and session manager for Linux compatible with System 5 and LSB init scripts.
SystemD provides an aggressive parallelization capability that uses sockets and Dbus activation for starting of services,
offers on-demand starting of daemons, keeps track of processes using Linux cgroups,
supports snapshotting and restoring of the system states,
maintains mount and auto-mount points,
and implements an elaborate transactional dependency based service control logic.
It can work as a drop-in replacement for System 5 init.
Now to sort of parse some of this for you.
So it uses socket and Dbus activation for starting of services.
What socket and Dbus?
Well, let's focus on the socket part.
So for example, if you have a very lightly used Apache web server,
SystemD can actually open up the port 80 socket and listen for incoming connections on 80
and leave Apache as completely closed so it's not taking any CPU or memory until that very first connection comes in.
SystemD will answer that connection on the port that the daemon uses,
and then it will go start up Apache and then serve the page for the person that they need.
And the user never notices any kind of interruption.
Additionally, it allows you to restart services without breaking the connection
because since SystemD is managing that socket,
you can have the underlying daemon restart without interrupting it.
So that's what socket-based activation for starting services is.
Dbus would be message-based, event-based driven, which is also upstart,
is things like network state changes or hardware state changes or user command changes.
Those are sort of the more event side of things.
And SystemD is, like I mentioned earlier in the show, primarily being developed by Red Hat,
but it has contributors from all over, including a large group from Intel.
It is almost a new layer of the operating system to just give you an abstract.
It takes care of a lot of these things like mounting of file systems, logging.
A lot of multi-purpose stuff under the hood, it sounds like.
Yeah, it can replace syslog. They have a journal that it replaces,
which some people don't like. We'll get into that.
So there's a lot to it.
And the core question that now Debian is facing is, do we go with upstart or do we go with SystemD?
And I want to play a clip for you, Matt, because we played this on the pre-show,
and I think you and I both agreed it was worth playing even though it's pretty meaty in the show.
We're going to play this and we'll kind of parse it.
This is Lenart Pottering, the primary developer behind SystemD.
And he was at a Debian conference in August, and they held two talks at this conference.
The first talk was a SystemD talk, and the talk was why Debian should or should not switch to SystemD.
And I have that linked in the show notes.
And the second talk the next day was why Debian needs upstart.
Obviously, one was from Lenart and one was from the canonical rep.
And we have both of those linked. They're about an hour long if you want to watch them.
And as we talk about this, keep in mind that this is from Lenart.
He says, whether Debian chooses SystemD or upstart, it has major implications for the future.
So you shouldn't only look at what is now, but keep in mind what will come next.
And there are at least two areas where opting for upstart will mean that you shut Debian out of major changes.
So in this clip I'm about to play, it's from this 55-minute talk.
It's about three minutes long.
He gives some examples of where he feels, and this is Lenart's opinion, the creator of SystemD,
where he feels that upstart falls short to SystemD.
Of course, if you compare it to the other contender, which is upstart,
we believe that, I mean, the reason we initially created SystemD actually is because we believe that the upstart design was wrong.
A little bit about the history there.
We started, like I played around with a little project I called BabyKit.
You know, it was back at the time where everything had to be a kit.
This BabyKit thing was supposed to be like an experiment, how we think that it should work.
And then upstart came along, and then I put that aside because we actually believed that upstart would be the big and great future.
However, over a year or so, and after talking with seeing Scott a couple of times...
And I actually, I buy Lenart here where they actually bought into upstart as a solution because they shipped it with Red Hat Enterprise Linux 6.
Like their premier product, they shipped it.
They actually backed it up by putting it to work, sure.
The plumber's con, we've eventually figured out that Scott's probably not giving us what we want,
and we believe that inherently it had the wrong design.
The reason what exactly is broken there is basically what upstart does is you have a language how you can express how events happen
and what's supposed to be done that way.
What systemly does instead is you express relations between things.
Now, one is a lot more flexible and powerful than the other because in one thing you basically have the administrator figure out what should happen,
or the developer, what should happen in which case.
You write that down, and then upstart will just execute it.
However, in the system design where you have the dependency tree,
basically you just say these are the dependencies, and then the system will figure out what to do at what place.
So what Lenart is considering a feature, some of the critics of systemd actually say is a disadvantage.
And I'll give you my old crotchety sysadmin, everything should be conservative.
I don't like a lot of changes in perspective because boy do I have it sometimes.
Upstart, and you picked up on this on the pre-show, upstart relies a lot more on the sysadmin or the developer
giving it a good set of chain of events to follow, rules if you were right.
Whereas systemd you say, okay, well, I want to start MySQL, and MySQL is going to need network connectivity,
and network connectivity is going to need that these lower level things start up.
So here's what I want. I want all these things. The end result is I want MySQL.
And then supposedly there's some black magic that happens there where systemd can actually figure out dependencies in some cases.
And so there's advantages to that because systems nowadays can be a lot of different things at different times.
In the case of a laptop, it can be a Wi-Fi device that runs on battery.
And then 20 minutes later it can be hardwired into a gigabit connection with an AC power line.
And with maybe a second monitor attached. There's a lot of different things that can happen.
So you could see why maybe a more flexible system could be advantageous as computing starts to change.
But I just wanted to kind of draw attention to the fact here that these are major differences here in how these two things are structured.
This has a couple of effects. Like, for example, in systemd, if you want to have a minimal boot, you want to just start that and that and that.
It's a relatively easy thing to do because you simply look at the dependency graph, figure out what you want, pull in all the dependencies, and run it in the right order.
This, of course, is systematically more difficult with Avster because the Avster rules in the first place have to express what actually happens on the system.
This eventually becomes even more problematic. Like, for example, something very recent is the rearrangement of cgroups.
I'm not sure if you guys have followed that. Cgroups are this thing how you can attach a label to a set of processes and then optionally set a couple of resource values to it.
Like, for example, you can say Apache gets as much CPU time as MySQL regardless of how many processes Apache starts and how few MySQL will start.
Cgroups, I think, are probably, in terms of server deployment, one of the most important things that Debian has to keep in consideration when they're making this choice.
Not that they can't take advantage of cgroups if they're not using Upstart, but what cgroups are, as Lennart just said, they allow you to apply labeling to processes.
The advantage is if systemd starts a process, it can label that, say Apache, from start to finish so that the system always knows this group should have these rules applied to it.
If Apache has some CGI workers and those spawn 30 sub-threads, normally, in some cases, we completely lose track of what's attached to what.
But systemd, because it's being involved in all of that, will keep it all coherent, will keep it all labeled.
Now, this has big ramifications for, say, I only want MySQL to use X amount of CPU so that way it can't clobber my whole system.
Or I want Wayland to be able to do a whole bunch of stuff, but I need to make sure I keep track of all of its processes because if somebody ever compromises Wayland, I want to follow where that goes.
So there's a lot of different advantages to cgroups. Not that you don't get them. You could still have them.
You could even make Upstart-cgroups, which would integrate cgroup capabilities into Upstart.
But what you lose is systemd is going to sort of provide this API-level access to it that you're just going to kind of get it as a developer if the system uses systemd.
So with the resource handling with cgroups, you suddenly have this problem that if you have multiple services, which basically should be handled the same way, you need to propagate certain things between these services.
For example, if you have Apache and you have MySQL running in the same slice, as we call it, then you need to make sure that either both of them have CPU limits applied on neither of them.
And this gets more complex as an entire dependency tree where you have to walk up the tree to the root and do enable and things like that.
Now with systemd, with the design, this is very, very easy because we have the dependency tree so you can just walk it.
And Upstart, again, this dependency tree doesn't exist, and you cannot just do that. I don't know. I figure the Upstart people will eventually figure that out themselves.
But yeah, the summary of it all is I can talk about that for a long, long time. I figure if you haven't looked at the details of what Upstart and systemd do there, you probably can't really deal with much of what I say in this regard.
But inherently, we believe the Upstart design and the systemd design before it was inherently flawed at its core.
It's not how we should do these things. We should have a dependency tree so that we can figure out all the right things.
And yeah, that's the reason why systemd was invented and why we believe that it technically is the right thing. And none of the current contenders, other contenders can do that.
I want to give one more example of why cgroups are pretty important and why having systemd provide an API level access to them and also just having it be cgroup aware is really important.
There's a project that I have really been talking a lot about, especially on Quota Radio. You and I did an episode about it on the Linux Action Show called Docker.
And Docker allows for a completely isolated environment on your Linux box, sort of like BSD jails.
So for example, in the show, I can't remember exactly, I think what I did is I had my Arch machine installed.
And then on my Arch machine, I had a self-contained Ubuntu 12.04 environment running inside a Docker instance.
That Docker instance is using cgroups to label all of the processes in that Docker instance as belonging to that Docker instance.
So they are running completely and totally isolated from the rest of my system because they've all been labeled via cgroups.
And that allows, for example, Linode or GoDaddy or DigitalOcean, you could have a lot higher density on your Linux boxes.
You could have maybe potentially hundreds of more clients on there because if you get rid of virtualization and you go right back down to the metal and you do process isolation,
this allows for you to get completely isolated environments that are individually different operating systems with different package configs and different versions of stuff,
all in the same box at metal speeds, right?
And then when you combine that with something like SystemD where it supports socket activation, you could be DigitalOcean and say,
I've got 35 users on this server, but these are my low-end users and only three of these systems are ever active at once on average.
Well, in today's modern setup on a Linux box, all of those instances would just be running, taking CPU and memory, waiting for a connection.
But with Docker and SystemD, they could sit idle until that first visitor comes and they immediately spin up and they serve the page.
And then you can also apply resource limitations within there.
So you can see in the server space how it could be massively beneficial.
And I would be surprised if Debian didn't sort of weigh that in their decision process.
Now, there are some criticisms of SystemD.
And one of them would be probably the one I've heard the most.
I can't remember.
Oh, it was Linux Today.
I pulled this one.
I love it, too, because whenever somebody – usually the person criticizing SystemD generally mistypes how you spell it.
SystemD is all lowercase.
It's funny because whenever I see somebody criticizing it, they get that wrong.
And in this case, the guy got it wrong.
He says, SystemD is one program that is a garbage dump of a lot of functionality which used to be provided with shell scripts and special tools.
He says, and it consumes more memory doing nothing more than system five init.
And he says, by the way, the SystemD journal is in binary format.
Boom.
Oh.
Now, that is true.
So gone are the days of text files for your logs.
And a lot of people hate this.
And I can understand.
Now, journalctl supports like a really sweet API and a really sweet like parsing syntax and also supports exporting out to text.
So all of your existing shell scripts could just bang on that text if you wanted to.
But it also adds like really nice formatting.
Like it clearly will enunciate like here was a reboot executed by this user.
And then it'll do a nice break in the log and see all of the events that happened from there.
So it's like you lose some stuff, but then you also gain some stuff.
And maybe if tools are built to take advantage of that API, it'd be –
I think that's what's going to be needed.
Yeah.
And maybe Red Hat and companies like that would do that as part of their enterprise offerings.
I don't know.
I think so.
Okay.
So his argument, though, that it's kind of a garbage dump of different functionality, you know, I kind of –
I would argue the same as far as going back to the old school way of it.
It was a mess.
I mean, other platforms used to make fun of us for it.
That's true.
I mean, they did.
And I'm not saying that's accurately – they're not accurately making fun of us or not.
I'm just saying that was the perception.
And so, you know, it's really going to – for me personally, I think System D has a lot of benefits, and it's compelling.
Upstart, you know, has its way of doing things as well.
All right.
But let me ask you a question.
No, I don't.
And I also – I make this available to the Mumble Room as well.
Sure.
If the Unix philosophy of a lot of small individual tools working in concert has gotten us this far,
System D is really taking all of this stuff that people didn't want to do.
And let's be fair.
Some of the stuff they're replacing was sort of abandoned and hasn't been getting worked on.
So they're just integrating that functionality in here.
But it depends on things like cgroups, which are only available on Linux,
which means if you write something that depends on System D and System D depends on Linux,
then it's not portable to one of the BSDs.
So there's a downside, okay, which is probably one of the main downsides for Debian because they want to run on multiple kernels.
So there's a downside.
The second downside is you take a lot of stuff that used to be individually separated out, like, you know, individual componentized,
and you bring it all into one conglomerate that manages everything, almost like making a lower level OS that sits above the kernel.
Okay, so there's another downside to it.
Then the third downside I see is this binary file format.
That's a bit of a step back, I think, in some ways.
Now, so those are sort of the negative aspects of System D.
Because if you look at Upstart, it's deployed, it's tested.
Those are things Debian loves.
Okay, that's good stuff.
It's essentially fairly straightforward.
You know, I've had some experience with Upstart, I've had some experience with System D.
Either way, it seems like they both work.
I actually kind of prefer the way System D works.
I do for myself, but I think that from a Debian's perspective, based on the way they like things to work in general from their side of things,
I think, and of course with other factors as well, I think they're probably reluctantly going to go with Upstart.
I think it'll happen.
So I'm not saying Upstart, so Cheeseburg's asking in the chat room, Upstart is not usable for BSDs.
What I'm saying is if you build an application, or if a project has dependency, and there are already projects that have dependency on System D.
Sure.
Like Login D, like Time Data D, like Locale D, Hostname D, Udev and more, all are now projects that depend on System D.
They will no longer work or function on a BSD system because System D itself is dependent on the Linux kernel.
So that's one downside.
However, so Leonard's response to this is, well, I'm not worried about that.
I just want to make the best operating system possible.
And System D does have a bit of a home turf advantage.
Number one, it's used as an API by more and more projects, like I just mentioned.
It takes advantage of C groups, the control groups in the Linux kernel, which is pretty important.
And they've, maybe to court Debian, I'm not sure, have implemented some Debian designs into System D.
Like how the hostname gets set and other things like this.
They looked over at Debian and said, you know what, they do that better than the Fedora project does it.
We'll do it that way in System D.
And that might be a way to court it.
But the main advantage that System D has, well, it actually comes out in this clip from the Upstart talk at the recent Debian conference.
I'd like to, you know, System D had their promo talk yesterday.
This is Upstart's promo talk, so I think there are other things that I want to talk about.
The most significant obstacle, it seems to me, from a Debian point of view, is the contributor agreement.
I notice you didn't mention that at all.
Is there any possibility of movement on that?
Because that's going to be a big problem for Debian.
I think I'm speaking for many people here.
Wow.
Let's talk about the licenses with you, Ian.
What is it with Debian and licenses?
I don't understand.
You bloody well ought to.
Sorry?
You bloody well ought to by now.
I didn't see you on Debian legal helping out.
That's not the place that decisions get made, is it?
No.
So to make sure everybody understands the status of Upstart, Canonical has a policy of requiring a contributor license agreement,
which is not the same thing as copyright assignment, but we do require, in terms of upstream contributions,
anything that's going to be contributed upstream to Upstart does have to be granted.
A contributor license agreement has to be signed, giving Canonical, as the copyright holder of the overall work,
the right to, for instance, relicense.
It provides for certain capabilities of making sure they can deal with any litigation that might come up and various other aspects.
It's not something that is actually negotiable in terms of whether Upstart, as an upstream, is going to change that license agreement.
This is not actually altogether different from lots of other projects that Debian ships.
Of course, we can compare and contrast with the FSF's position,
particularly in that FSF is, of course, a non-profit dedicated to free software, whereas Canonical is a corporation.
So I recognize that people are not necessarily okay with this,
but I will point out there's lots of other people in the ecosystem doing this.
The FSF's promise not to take it norm-free as a norm.
I'm sorry, but we are running out of time.
So I suggest we continue this discussion in the hallway track.
The FSF's contributor agreement, the copyright license,
the FSF legally, bindingly promise not to take anything that you sign over to them in that way, non-free.
Canonical specifically intend to be able to do that.
We've heard Mark Shuffleworth tell us that that's the purpose,
and that this is a thing that companies like Canonical should be allowed to do.
So I think he was speaking in a general philosophical sense that it is something that companies should be allowed to do.
Well, it's a thing that the Canonical contributor agreement allows Canonical to do,
and when Mark, who is in charge of Canonical, tells us he thinks companies should be allowed to do it,
when the FSF tell us, not only do they not think it's a good idea, they also promise, in a legally binding way, not to.
So that's a very clear distinction.
Okay, so submit your patches for upstart, don't sign the CLA, and we'll see what happens.
Well, let's...
Well, submit them to the Debian maintainer.
So we're out of time.
Thanks.
Please thank Steve and James for their presentation, and we'll continue the discussion later, I'm pretty sure of it.
Yeah, I'm pretty sure of it too. So the CLA is probably going to be a pretty big sticking point for Debian.
I don't know what can be done there, actually.
That's a great point, yeah.
For reference, the people who were talking there, the guy in the audience was, I think, Ian Jackson.
Well, wait, wait, for reference, who are you?
So I'm Popey, Alan Pope. I work for Canonical as an engineering manager, not a developer.
And I've seen some of both of those videos, and I think the guy who was asking the question from the audience is Ian Jackson,
who's an ex-Canonical employee and is a Debian developer.
The guy answering the questions was Steve Langecek, who is one of the upstart maintainers and is a Canonical employee
and has been a Debian developer longer than he's been an Ubuntu contributor or Canonical employee.
Is he on the technical committee of Debian? Because that's been one of the criticisms, is that a couple of Canonical employees
are sitting on this technical steering committee, and if they vote, I think it's like three of them are Canonical employees.
Two, I think. So Steve Langecek and Colin Watson, both of which.
I think Colin's actually the longest, after Mark Shuttleworth, he's the longest serving employee of Canonical now.
And before that, he was a Debian developer, and he still is a Debian developer.
He contributes heavily to Debian, as does Steve Langecek.
And yes, they're both on the technical committee. They both have a vote as to which way this goes.
And yes, it would be incredibly surprising if either of them decided to vote for System D.
However, that said, I know if you read the mailing list thread on Debian Devil, which is very long,
Colin has actually said, you know, if I thought that I was going to get any pressure from my employer,
I would pull myself out of the vote.
Exactly. So I don't question either of those guys' integrity at all.
So here we sit now, though, kind of at a spot where you can see there's multiple sides to the argument.
It's not quite a black and white situation. And Debian finds themselves in kind of a sticky spot
where they have Red Hat and a lot of the other Linux on one side, but they also have some good arguments for upstart, for one.
I mean, not just because of their connections to the Ubuntu distribution,
but also because they want to support KFreeBSD and Herd and all these kinds of things, right?
Like, they just want to be packaging all this stuff up and don't necessarily want to be tied to just the Linux kernel.
But my question about that is, like, really?
I mean, at this point, it seems like that doesn't, I don't know, does that really hold water to you?
No, my response to that, if I could interject for a moment, is why don't they use SystemD for the Linux kernel
and then stick to what they have for everything else?
Yeah. I don't know how hard, that would probably be a huge pain in the ass, though.
Yeah.
That'd be way too much maintenance for them.
What they want to do is completely, like it is quite a big task to do.
To switch.
Yes, to switch. I think that, well, me personally, I'd prefer them to do the work to support SystemD because they don't know.
People are looking at it from an init point of view.
Only an init point of view.
SystemD is an abstract scheduler with before and, like, pre- and post-dependency management.
It is a scheduler in its core, which init is a simple instance of a scheduling problem, or CRON is a scheduling problem.
That's what SystemD is.
Well, Android still does use initD, and it just uses bash scripts.
I understand it needs to be changed, but I don't know why it needs to be changed.
Right? Gen2 has OpenRC.
Yeah, it's the same thing. They all do their init however they want, but that's why this SystemD is so invasive,
because it does cover a lot of ground. It can be very powerful.
I agree. I don't know, but okay, so invasive or appropriate?
Because first of all, I think what Lenard and his team have tackled are honestly some plumbing stuff that until Upstart came along,
nobody was addressing, and SystemD went beyond what Upstart accomplished.
So I think, first of all, I feel like it's a modernization of the Linux core, and I do find it to be a little foreign.
It feels a little foreign, but at the same time, it also seems like without some of these features, we lose a certain competitive edge.
I think it's fair to say a few things have in modern times come across as foreign, like for example, PulseAudio, which is also a Lenard offering,
which I think we can all pretty much agree is a fantastic thing now.
And at the time, I think Ubuntu was one of the first distros to put it in.
And yeah, we put it in the distro and put our backing to it. And yeah, we got some flack for that, and so did Lenard.
Oh, yeah. I mean, back when it came out, it was a pain in the butt to use or configure.
But some of these things are painful decisions, painful switches, and that's why Debian are deliberating about it so hard.
When we switched Ubuntu to Upstart, I remember you mentioned earlier about the work done to reduce the boot time on Ubuntu.
I remember being on a flight from London to America, and Scott James Remnan was working on reducing boot time,
and he was sat there for most of the flight on a Dell Mini 9, and every so often he'd get up and come back further down the back of the plane
and talk to us about how he'd like shaved off a few seconds here or a few milliseconds there or something.
And, you know, this was leading edge stuff at the time, and we made that big switch, and that was a painful switch to make.
And everyone keeps on us saying, oh, Ubuntu is the only distro that uses Upstart, which, you know, is...
Chroma West also uses it. Chroma West also uses it.
Yeah, no, that's the point I was just about to make, Ant. Thank you.
We're not clearly the only distro that uses it, because every derivative distro of Ubuntu uses it as well, as does Chroma West and RHEL 6, as Leonard said.
And it is sort of also similar to the boot system that OS X uses, so it's sort of a cousin of it, so that's also widely deployed.
Well, Leonard clearly takes inspiration from OS X a lot with launch D, you know, system D and zero-conf of RHE, you know.
Yeah, but I mean, why not, right? I mean, why not?
Oh, yeah, I'm not complaining. You're inspired by good design.
Yeah, and so I feel like that is kind of like one of the funny...
I guess maybe part of what it comes from is Upstart relies on a library that's literally titled Not Invented Here, so maybe that's part of why people get on them for it, because, you know, that is kind of a funny thing.
Yeah, but what people forget is Upstart actually was the first person, well, the first project to devise from, like, in a day.
I mean, like, system D came afterwards, so they were actually working on the principles of what Upstart started.
And this is the basis, after watching all of this, you know, I look at it and I think maybe system D is the superior answer because it is based on experiences with Upstart, which was good, right?
So it's like, okay, we went this far, now we want to go further.
And I also think there is a big advantage to the Linux community as a whole if we standardize on some of this stuff.
Go ahead.
So it's okay if someone takes an existing project, like, for example, Upstart, and makes something brand new to make it better.
But it's not okay if someone takes something existing, like, I don't know, Wayland, and makes something new like Mir.
Right, but...
All right, hold on, hold on.
This is the big thing, right, is especially if Debian buys in on system D, then it is essentially all Linux will be, well, with the exceptions of Slackware and Gentoo and other things, but all Linux will be using system D, right?
So it's sort of, but in the case of Wayland and Mir, I think it's apples and oranges there because it's...
Yeah, I mean, I could use Ubuntu with Upstart, I could use OpenSUSE with system D, I could use Debian with system five and still use all the applications that I need.
But if the display servers were different and had different callings, then what am I going to be stuck with?
It was a somewhat facetious comparison.
Okay, it got brought up, I have to mention this, and this is going to be very, very quick. The thing is, is like, Linux in general has less than 1% of the desktop market.
When companies like AMD, NVIDIA, Intel, when they have to make drivers to make this software or these display drivers work with a hardware, it costs money.
They're not going to, at the moment, they do it because there's only one display driver and it's Xorg and that's it. But when it comes to when it's a decision between Wayland and Mir, they're not going to fund a project to support both display drivers.
Dragging it back on topic to system D, you know, saying that the switch to Mir will cost companies money, do you think the switch to system D will cost nobody any money?
Right, that is actually a good point because it, for companies that have massive deployments and with custom init scripts and things like that, this is going to be a big transition.
I'm actually curious, actually, I mean, does like, you know, init D or system or upstart or system D, does that have as much effect as like a display driver?
Not necessarily because there are compatibility layers which allow you to run the old init scripts in a lot of cases.
It's actually backwards compatible with init D, so you could just link D, it can be, but that's questionable.
Well, so the official word is that system D is quote unquote 95% compatible with system 5 init scripts. I doubt that.
No, that's about true.
And I'm kind of arguing this from a user end perspective where when it comes to the display server discussion, I'm worried whether my applications are going to work or not. I don't usually have that worry when it comes to the init scripts.
Well, the package, the packager will take care of that. So the package, okay, so I want to zoom out for a second because this is another benefit of system D being widely deployed is this, this makes a lot, this makes it a lot easier for packagers, right?
Because let's take BitTorrent Sync, right? They just make a BitTorrent Sync, here's your basic system D startup file, and then the arch user repo guy and the guy that's making the PPA for Ubuntu or, well, I guess Fedora, the guy's making the package for Fedora.
They just have to tweak it specific for the details of their specific distro, but otherwise they can just take directly from upstream the init script for system D.
So it kind of like, it sort of makes that process easier for those guys.
Not only that, but from that standpoint, system D is a whole lot better documented than Upstart when it comes to that type of thing.
Yeah.
Oh, yes.
Well, okay, I think you guys are shortchanging the benefits of deployment in the field and how many people that end up working with that and then document stuff about it and blog about it and know how to work with it.
Because the advantages to that in IT are huge. I mean, that's why Windows gets such a big deployment. So Upstart definitely has the leg up in terms of on the ground, already out deployed, people working with it and know how to use it.
Oh, there's just documentation.
System D, doesn't it?
Well, I'd say system D will get that advantage once it's rolled out into newer versions of Red Hat and SUSE and such.
Yeah, that's true. That's true.
Well, fine, fine, fine.
There's also one thing for the encoding, for the binary logging, everything is encoded anyway.
You have a character set, which is UTF-8 or ISO whatnot, or little Indian and big Indian when it comes to the CPU.
It's all just the encodings. Even the logs have to be deciphered by their encoding.
Okay.
They can export it out to normal ASCII text.
Exactly.
Can I just say something real quick?
Yeah, go ahead.
I just want to say that I've really had no problems with Upstart. I mean, I run Ubuntu on my server.
Upstart's been pretty good. I mean, it's really easy to just type in the commands, but it's also easy to do that with system D.
The thing that I think is going to happen is Upstart's kind of going to be left in the dust because system D is more of the –
I believe it came out of the Fedora project. Is that correct?
Yeah, Fedora, yeah.
Yeah, yeah. So usually, PulseAudio came out of there as well, I think, right?
A lot of things. Network Manager, LibVert, a lot of things that come out of it, yeah.
So I think that overall, this is going to become the standard in the long term.
I think Upstart is just what people are using right now, and like I said, I don't have a problem with it.
It's just that I just don't know – once system D evolves and becomes more stable and all this stuff and gets more features and everything like that,
down the road, I think that people are going to be switching to system D simply because it's going to be where everyone's going.
That could well happen. I mean, for us, we've got 1204 LTS out, and we've got however many years left on that because it's got five years of support.
And then there's all the servers out there that have Ubuntu on, all the cloud deployments that are Ubuntu-based that have Upstart on them.
I would hate to see those bit rot and not get any love, but the fact is that with the next release of Ubuntu, it's going to be another LTS.
So there's going to be another five years of maintenance of Upstart.
I think we should be able to choose our voice, and I don't know how hard it is on the technical side.
I mean, you know what I'm saying?
I think it's pretty hard to do those out.
Yeah, well, the interesting thing about Upstart, if you're on about Ubuntu derivatives, so we're talking about Linux Mint and Xeon and all these other ones.
I mean, they ship with Upstart.
But the thing is, if the default desktop environment is actually GNOME 3, it has a parent because it's part of the dependencies.
It does actually use SystemD, so Upstart kicks in, and then it starts up SystemD.
Well, it's not very efficient, so if you want to use a different desktop environment that's not Unity, and all these other desktop environments are actually using SystemD,
basically, Ubuntu starts up, uses Upstart, and then you need to use a parent.
Yeah, good point.
Good point about the GNOME point, too, because I think the official desktop of Debian is still GNOME, right?
And SystemD is becoming a dependency.
GNOME is becoming dependent on SystemD, and that's only continuing, right?
That's starting in 3.10 and not impossible to avoid now, but starting in 3.12, it looks like it could be.
Literally, a dependency of GNOME 3.12 could be SystemD.
Yeah, well, if you use the PPA to install GNOME 3.10, it actually installs dependencies for SystemD.
Now, if I could just make a prediction, I think Debian, because they tend to go along with the standards, will probably eventually go with SystemD.
Yeah, that would be interesting to see. I'm not sure.
A lot of people are always going with Upstart just because they didn't have an option back when it was created.
I'm going to do a poll.
SystemD wasn't around yet. They didn't have a choice.
Let's do a poll, and I'll embed it in the show notes too, so the people on the download audience.
Yeah, I'll do a straw poll.
Which way, let's see, Debian's Choice, I'll call it Debian's Choice, okay?
There's two options, Upstart or SystemD, and I'll let everybody vote.
I wanted to sort of pick up on something that Mollusk was talking about.
This was sort of the point I was going to wrap up this topic, so then we'll read some email and then we'll run.
But I think it's unavoidable that not only does SystemD have multiple distro momentum now,
but Lenart and Remy and other people involved are extremely passionate about it, and it is their main focus.
It is all they are working on in a grand scheme of things.
Whereas Upstart is a component of the Ubuntu distribution.
It is a feature, it is an important feature, but it is only an aspect of that distribution,
where SystemD is these guys' life, and they go out to every conference and they promote it,
they answer questions, they make posts about it, they live and breathe it, they are continually evolving it,
they do frequent releases, they engage outside input and make changes based on that.
Not always, sometimes they don't, but it is sort of like what my argument has been against Gnome and Unity in a sense too,
Unity is awesome and it is a great feature and it is one of my favorite Linux desktops,
but the reality is the Gnome projects and the KDE projects, all they do are their desktops.
That is all they do, that is their only job where it is not just a feature or a package in their distribution.
And when you have that kind of passion and momentum and focus and multi-distro and quote-unquote industry buy-in on something,
it seems pretty risky to go against the tide.
Yeah, I think SystemD is definitely the future. I think Upstart was an easy answer early on,
but just like everything else in the Linux community over the years, we all make patches, we all make remedies,
we all make things to make the short term better, but I think overall SystemD is good for Linux.
I really enjoy init scripts and being able to make specific scripts to what I need it to do,
but overall I think that SystemD is going to help a lot because it makes things a lot easier and we are still in early days here.
Yeah, totally.
One thing I come across when I install, like go for a very basic Debian installation or if I want to install Arch,
isn't one of those things when you are doing a very basic installation is during the installation you have the choice to set things up like that
where you could choose the init manager or whatever?
Yeah, you can do that with Gen2, but Gen2 almost forces OpenRC on you, so I don't think it matters.
So I guess at the end of the day, if we move forward and we look at where things are going to take us,
SystemD is still not as fully mature as Upstart, and I'll give you what I mean in that sense.
In an Ubuntu box, if you really screw the pooch and you need to reboot into a rescue mode,
that rescue mode you go into is Upstart aware.
It can look at your system and communicate to the Upstart system and pull out bits of information it needs to rescue your system, right?
That is a very nice complete user end feature that works great for users and system admins and developers.
It is a very handy feature and it is the result of something that has multiple years of production where you build stuff around it.
SystemD is not there yet.
There's not tools that fully take advantage of the API.
There's not things that expose certain functionality.
SystemD has the ability to fully log everything that happens on your system if it's an EFI box.
It doesn't require it, but if you have an EFI BIOS and it wants to talk to SystemD,
it can literally time how long it took for you to boot at the BIOS screen all the way up from the bootloader to the kernel to your desktop.
It can pull metrics and diagnose all of that.
It is a full end system, right?
That's really cool and fancy, but there's nothing yet really fully built to expose any of that to the end user.
Well, the thing is SystemD is widely used within the community.
It's used by pretty much every distro.
There's only two distros that don't use it.
I mean, it's Ubuntu-based distros and Chrome OS.
Saying Ubuntu-based distros doesn't account for much.
It accounts for a significant chunk of all the people who happen to run Linux.
It's a massive number of people.
But Red Hat's worth a few billion, so if they think that Upstart's not worth using...
Well, my dad's bigger than your dad.
I don't think that really makes a difference.
These technical arguments can only go so far.
There's a 1.3 billion company.
It doesn't matter about the price.
I think Poby makes a fair point, though, is that it is hard sometimes to totally wrap your head around the fact that it is a huge...
It is way bigger than I think any of us fully realize, because at least my metrics tell me that.
And they tell me that Ubuntu still has more market share than the other three distros next to it combined.
Combined, yeah.
I just wanted to point out that at the end of the day, especially with Debian considering this,
I think it's really just going to come down to two choices.
Either they're going to find a way to work out the CLA and go with Ubuntu's thing,
or they're just going to go and go to their next choice down and just look at SystemD.
At the end of the day, I still want init scripts.
Now, my question is, if they were to go with SystemD, what are they going to do about, let's say, their variants based on the BSD or the herd kernels?
Right, that's the problem.
This is what no one's really touching on.
Everybody's going at this from an emotional point of view, and that's wrong.
All this passionate nonsense aside, factually speaking, they want something established and stable.
Which one is that?
I'm starting to have a leg there because it's deployed and it supports multiple kernels.
And it also adheres a little more closely to that overall Unix philosophy.
Exactly.
And so that's the whole point of it is that when you vacuum pack all the emotional hot air out of this
and really look at it logically for what Debian's goals are, not what your goals are, but what Debian's goals are as a project,
I think that they're definitely, definitely going to go with what makes sense from a stability point of view.
Now, five years down the road, they may completely 180 on that, but at this point, it will not be SystemD for Debian, I promise you.
And you also have to, even understandably, got to figure maybe there's a little pressure indirectly or directly, probably indirectly,
to have at least a very serious consideration as to how it affects Ubuntu since they're based on Ubuntu.
And that's just one quarter or even an eighth of the pie.
That's not even all of it, but it's a big chunk of the pie.
Now, that being said, personally, on my own machines, I do prefer SystemD.
I like what they're doing. I like where they're going. I think it's awesome.
Yeah, I do too. I like it too.
But again, taking my own emotion out of it and looking at it logically, there's no question Debian's not going to go with SystemD.
They're going to go with Upstart. I know that for a fact.
I'm wrong on some things, but I'm right on others.
My track record on the show has been reasonable, so I'm going to say I'm excluding my monkey suit thing, but that put aside.
So right now, the audience is voting in 82%, Matt, think it's going to go SystemD.
Oh, yeah. They're voting with their heart, Matt, with their heart.
Yeah, I don't have one, so I win, right?
I will embed this into the show notes, so those of you on the podcast, if you want to go vote, go to episode 12 of the unplugged program and scroll down the show notes.
We'll vote in there and we'll cover it on the follow-up. We'll see what happens.
All right, Matt. Well, I thought maybe before we ran, we could solve a problem for Jim.
So Jim wrote into the show, and he's hunting for a replacement for Ubuntu 10.04.
Yeah, 10.04.
He says, I was wondering if you could give me some advice on choosing a distro to replace my Ubuntu 10.04 installation since it's no longer supported.
I figured I should upgrade. However, I'm not a big fan of Unity.
I wonder how he knows that.
He says, I've been fat dumb and very happy with Ubuntu 10.04.
I love that he's just been hanging out forever on this old version.
He says, it's for me the perfect distro.
I am hooked on having a top panel to which I add a ton of launchers.
I love Nautilus. I like the long-term support from Canonical and a community support.
I also like the wide range of software available for Ubuntu.
He said he tried Unity and I really don't like it.
All right, so he tried it.
Okay, that's all we say. That's all we ask.
It does not increase my productivity.
I am using a desktop, not a smartphone or a Mac.
Wow, I didn't read this far.
Maybe I need to give it more time.
This is unfair to Unity. After all, Unity is actually an impressive software, but why use it on a desktop?
I have also tried Ubuntu 12.04 in fallback mode.
However, a few things I use, a lot seems broken.
Mint 13, mate, seems like the best fit for me.
My hesitation is that Mint installs with a lot of extra stuff I don't want or need.
Anyway, I'll likely go with Mint 13, mate, unless you guys give me a good suggestion.
He said, by the way, he left Windows when Vista came out.
Oh, yeah.
Started with Firefox, switched to Thunderbird Open Office,
and then he made the jump to Linux after he'd made the transition to all that stuff.
That's the recipe. That's how you do it, Jim.
Good work, Jim.
You know what? Mint mate is probably a pretty good idea.
Yes, that's where I would go. I'd say Mint mate is fine.
Even sentiment is another option.
What do you think about XFCE?
I would say probably mate is going to be more his speed.
XFCE is awesome, but it is different.
While visually it has a lot of similarities, there are some core differences.
I think that mate is probably going to be more what he's looking for coming from where he's coming from.
As far as the extra stuff is installed,
unless you have a really small hard drive, I don't think you care.
It's not like anything is running in the background.
He was a little more worried about future security vulnerabilities,
but as long as you stick with the updates.
Okay, let me throw this one at you.
Just a curveball because we haven't talked about it much.
Sure.
It's been rebooted months ago, the Ubuntu GNOME edition.
The thing is, starting in GNOME 3.8, they have the classic mode.
I don't think they call it that.
It is a two-panel GNOME 2.0-ish setup, but it's based on GTK 3.
It takes advantage of the newer GNOME applications and things like that.
It's one foot in the new stuff, and it's one foot in maybe your wang into the old stuff.
That GNOME Ubuntu edition could be,
but I think his instinct with Mint and Mate edition,
like Matt said, is probably the way to go.
I think it's the way to go.
He's got a butt groove in his chair, and he's really happy with that groove.
He's not necessarily wanting the latest and greatest.
He's just kind of forced into an upgrade.
I think that's where he's going to be happiest.
One last thing.
Cheeseburg emailed into the show on the whole topic.
He was one of the people that chimed in about the state of Linux news,
and then now he also joined us in the IRC, so he reminded me today.
He was traveling, I think he was in Japan,
and he saw a good old-fashioned print magazine called PointLinux.
He heard about it over there.
I can't remember the details of it.
Somebody emailed in about PointLinux.
Anyways, Cheeseburg reminds me of PointLinux.
It's a distribution that aims to combine the power of Debian
with the productivity of Mate or the GNOME 2 desktop environment.
So it is essentially it's Debian under the hood with Mate on top of it.
Now, the reason why I think PointLinux could be a good –
one nice thing about it is – what was he on?
Ubuntu 10.04, I think.
10.04.
All right, so obviously Jim is not a man who likes to reinstall very often.
And the problem with Mint is you got to reload to go to the next release every time.
True, true, true, true.
Whereas PointLinux being based on Debian,
you're going to get updates and you're just going to roll with that for a long time.
He just rolls.
That's a really good point.
I like that.
Because of the fact that he likes a comfortable place to be,
he has more control over those updates versus being having to go full upgrade.
That's a good point.
I haven't tried this one myself, but both Cheeseburg and –
and we got an email about somebody who was traveling in Japan,
I don't know if that was Cheeseburg,
who also saw it deployed there and thought it was awesome.
So there you have it.
There you go.
I think it would be worth grabbing a pen drive
and just DD that sucker up in there and just see how that runs.
Totally.
All right, Matt.
Well, as we prepare to – whoa, hi there.
Hi.
Hello.
As we prepare to wrap up, the music just like kicks in.
It's like I guess it's playing us out like we're on the Oscars here, Matt.
Get your award and get off stage, clown.
Listen, now we'd love to have you join us live for Linux Unplugged.
You can go over to jblive.tv.
We're live at 2 p.m. Pacific.
And of course go to jupiterbroadcasting.com.calendar
because the time zone changed.
That daylight savings thing is about to hit us.
So prepare yourselves over at jupiterbroadcasting.com.calendar.
While you're visiting us live, you can also get info to join our Mumble Room
so you can hang out and participate in the conversation.
A big thanks to everybody who joined us live in the IRC
and a big thanks to the folks in the Mumble Room.
We'd love to see you live here next week, but you can also email us.
Just hit the contact link at the top of the Jupiter Broadcasting website.
Hey, Matt, I got an okay from the lead dev of OwnCloud
to join us on Sunday to talk about OwnCloud 6.
Sweet.
Good stuff.
I know.
Sounds good.
All right, everyone.
Thank you so much for tuning this week's episode of Linux Unplugged.
We'll see you right back here next week.
