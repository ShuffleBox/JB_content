So, Wes, you caught this one. Maybe we could talk about this on the pre-show here.
Cheapoo? Is that how you say it?
Yeah, I have no idea how to say it.
Take a shot of that one.
Shepow?
Shepoo?
Shepow. Oh, let's go with Shepow.
That's the most fun way, I think.
So, Shepow 23 Beta 2 is out, and Shepow is another remake of the Fedora project.
And I normally don't cover all these derivatives, but I've...
How did they... Oh, the 23 comes from Fedora.
Yeah, exactly.
How did they get to version 23 without me having ever heard of it or known how to pronounce it?
Magic.
Throw version on steroids.
Magic. No, yeah, it's... Yeah, because they're just basing on Fedora 23.
Here's why I think this is noteworthy.
Because remember how, like, before, a couple of releases ago,
like, nobody was basing stuff off Fedora anymore?
Yeah.
And now we've got a few of them.
And so these guys, they have themselves one of them good-looking desktops.
They've gone ahead and made things actually look usable.
And like most respins of Fedora, you get your third-party content, like your codecs
and your Adobe flashes and your DVD and Blu-rays.
You also got the curation.
And they say it's gaming-ready.
What do you think, Wes?
What did you think when you first found this one?
Gaming-ready?
You know, I was just surprised I hadn't heard of it before.
But you're right.
I do like to see more things based on Fedora because, I don't know,
I think to some users still, they're just just installing Fedora.
There's kind of a lot you have to do still to make it...
If you're used to something, you know, like Mint or something where you have
everything installed, it's ready to go, you can kind of get whatever you want.
Fedora takes a little more work.
So if this is like a really nice, polished...
You know who this would be good for?
You know who this would be really good for in like three, four, five years,
maybe just a couple of years even?
It's like Noah's kid.
Yeah, right.
Because Noah loves that Fedora.
And so BXNT in the chat room says that it's Shupow?
Shupow?
How do you...
Chapeau.
Chapeau, which is hat in French.
Yeah, it's French for hat.
Yeah, there you go.
This is Linux Unplugged, episode 120 for November 24th, 2015.
Welcome to Linux Unplugged, your weekly Linux talk show that encourages you to...
Come on now.
Encourages you to brine that turkey.
Wes, my name is Chris.
My name is Wes.
I know that.
You know that?
Yes.
I'm sitting right here. You've seen me before.
Listen, Wes, we have a huge show. It's a holiday week.
And we thought what we would do is get ourselves a little eggnog,
pour ourselves a drink, and have one of the biggest shows of the year.
That's what we thought we would do for this episode.
Stuff ourselves, you know?
Everyone else will be doing it later this week.
Yeah.
Getting started early.
We did have a little bit of bird tirade on the pre-show.
So for those of you that are joining us live,
I hope you enjoyed the warm up session where apparently I went on a complete rant against
having birds, but that is not going to make it into the show.
This is a Linux show, believe it or not.
Yeah, we're going to talk about Linux and open source things.
And to that end, one of the gentlemen from the Vivaldi project
is joining us, a new browser out for the Linux desktop.
After that, we're going to talk about Solus.
We're going to have the developer of the Solus project on here
and talk about his desktops inspired by a bird's name,
hence the rant earlier in the show.
And then, later in the show today, listen, I love Linux.
I love open source.
We've all been here a long time.
GIMP just hit 20 years old.
LibreOffice just got a thousand developers.
Big milestone, hit a thousand developers.
But let's be honest, these projects are still not good enough.
GIMP still isn't there yet.
Doesn't have CMYK support.
Doesn't have non-destructive editing.
It's still not competitive with Photoshop after 20 years.
Is it time to just admit that sometimes open source projects are never going to get there?
LibreOffice, a thousand developers, getting better all the time,
but still maybe not competitive with Microsoft Office.
How many developers?
How many years does it take until open source software
can actually compete with the commercial alternative?
Or have I got it all wrong?
We'll talk about that coming up at the end of today's episode of Linux Unplugged.
So no bird talk.
None of that, Wes.
Except for I do highly encourage you to brine your turkey.
Well, of course.
Yeah, that makes it delicious.
Go look up Alton Brown's recipe.
It's really good.
Hey, we've got a great mumble room.
Time appropriate greetings, Virtual Dug.
Hello.
Hello.
Hello.
Hello.
Hello.
Hello.
Hello.
Hello.
OK.
I got to know.
Poppy, how do you always manage to be the first?
Like, what do you do exactly?
I'm in your head.
OK.
I mean, that's what I thought.
That's exactly what I thought.
All right.
Well, we have a couple of stories I wanted to follow up on
that are kind of big news that have broken since the Linux action show was on the air.
And let's start with the first one here.
AMD's got something for your face, an open source driver.
It's been released and supports the latest AMD GPUs.
The announcement has been made on the Xorg announcing mailing list
from, obviously, the Xorg Foundation.
And according to, I'm going to call Mr. Dan.
According to Mr. Dan, the brand new XF86 video AMD GPU driver,
version 1.00 driver, has been forked from the open source project.
And it has been, if you have Linux kernel 4.2, which has the new AMD GPU kernel driver,
then, Wes, a good batch, and I think they're in the SoftPD article they mentioned,
a good batch of the current Radeon cards are now supported by this totally open source driver.
Do you see the list there?
Here you go.
It's this paragraph right there.
What's that say there?
Oh, yeah.
OK.
XF86 video AMD GPU 1.0 currently supports AMD GPUs from the Fiji, Carrizo, Tonga, Stoney,
and Iceland.
There it is.
There it is.
Yeah.
So if you've got an AMD GPU in that range of cards and you've got Linux kernel 4.2,
this is some pretty exciting stuff.
This is some stuff that really NVIDIA hasn't even gotten to yet.
And it's stuff that we've been covering in the news on the Linux action show for like
a year now.
And I think we're all kind of wondering, like, OK, they've talked about doing it,
but when are we going to see the code shipping?
So here's another piece of that.
And Aiki, you're mentioning that 4.3 of the Linux kernel also has some more AMD GPU stuff.
What's that about?
So I was recently updating the kernel inside of Solus.
There's a lot more changes made for basically more devices in the 4.3 kernel.
And it's going to be replacing the old ancient defunct driver, which I'm just trying to find
out exactly how old it is.
One second.
The ancient one, huh?
What do you think, Wes?
Well, yeah, my understanding is that at least part of what this article talking about is
the X specific component of the driver, you know, where there's also a kernel part and
then the Mesa part as well.
And so we need all of those components to come together so that we can have a functioning
AMD open source graphics.
So this really could take the process of getting a semi-recent AMD GPU from one of the more
challenging processes to get full 3D support to potentially works right out of the box.
I wonder if we'll see more support, you know, I mean, I think a lot of people, the people
interested in gaming on Linux kind of tend to skew to NVIDIA these days, you know, maybe
pretty strongly.
I wonder if this can shake that up.
Yeah, yeah.
And also, could there be some other work cases?
You know, because I can very clearly see NVIDIA's reason.
NVIDIA has got their proprietary driver.
They have a lot of certain types of work cases that offload the different types of processing
to the GPU that the Linux desktop is great for different institutions.
I don't, AMD has those same capabilities, but I don't know if things like the, I mean,
it seems everything's like focused on CUDA these days.
And I think AMD GPUs are more open CL, which is great, but I don't really, I don't know
what the big work case scenario is in the enterprise for AMD GPUs.
Maybe it's editing.
I'm not sure.
Aiki, did you find the info you were looking for?
So I had an update in 2014, another release today, so that was once a year.
So you can see, really, there wasn't a lot of effort going on in there.
Yeah, no kidding.
To be fair, it's better than the Nova driver.
I mean, that's ancient, and everyone's having to use Git build, so fair play to AMD for
actually maintaining something.
Yeah, yeah.
And while we're talking about the display stack, kind of a fork from that topic.
Fedora is seeking for some testers on Wayland.
You know, they're getting serious about shipping Wayland in Fedora 24 workstation.
It's become the default option already in Rawhide, the rolling development version of
Fedora, but the plans are not yet carved in stone for Fedora 24 to actually ship with
Wayland, despite what's been reported by a lot of places online.
And really, it kind of comes down to us.
Before GNOME on Wayland becomes the default in Fedora, we need to ensure the transition
is smooth, says the Fedora Magazine site, and the users won't recognize a difference.
Now, that's a high bar to set, and I'm sure it's probably the same exact bar Canonical
must have set.
So we need reports on deficiencies that occur on Wayland, but not X11, and I have it linked
in the show notes, too.
They have a queue, well, a guide, really.
The Fedora QA team has written up a comprehensive guide on how to debug Wayland-related problems.
So if you want to see this happen, this is a real way you, as an end user, could actually
participate in the adoption of Wayland.
You could go follow these links in the show notes.
You could read their QA guide.
And I'm willing to bet this comprehensive guide is probably just good reading in general.
Yeah, probably.
You know what?
Especially if you're interested in Fedora.
I got it linked right here.
Let me go see if I can find it.
I'm kind of curious to see what they actually say, because this could be one of those things
that could really apply to a lot of things.
And it's really kind of nice that they did this.
So this is over on the Fedora Project Wiki.
How to debug Wayland problems.
Here you go.
They say Wayland is intended as a simpler replacement for X11.
It changes the design of the Linux desktop architecture.
That's good background information for you.
Yeah, exactly.
And so they have tips in here for reporting issues and looking for similar reports, how
to file a bug, information to include in your bug report, debugging the gnome shell.
See, OK, well, all those first few things are going to be good for anything, right?
Debugging mutter, known issues, frequent complaints, and fundamental changes.
It's also really good so you're not creating dupes and things like that.
It's like a really good reference just for people transitioning or looking to transition
to Wayland.
Yeah, I think this is nice.
And this is what's really cool about when Microsoft dumps their new Windows 10 in your
face and tells you it's the best thing ever, and Apple tells you the next thing is magical.
I thought it was the best thing ever.
That's why we're using it here, right?
Well, maybe eventually they can get it there.
But in the meantime, this is something we as end users could actually go participate
in today.
I like that quite a bit.
And regardless of what distro you run, I would assume some of the work done here is going
to also help other distributions.
So it's a nice place to go.
And we'll have links for that information in the show notes if you guys want to get
involved on that.
I just like that kind of stuff.
Yeah, it's nice to see.
And Fedora's doing a great job of trying to push things like that.
Yeah.
Wes, you found a kickass guy that looks really nice.
He even has some stuff in here for the Mac users.
But this is the art of the command line.
You know, like the meta overview, the basics, everyday use, processing files and data, system
debugging, one liners, obscure but useful commands, and then crap just for the Mac users,
resources, and all kinds of stuff.
The art of the command line.
And I started reading some of this.
And this is a really nice guy.
You know, it's pretty in-depth.
It looks like it's been well worked over, you know, kind of only the things that need
to be there are there.
But there's a lot of stuff for, I think, any level of user.
I also like seeing, you know, like one of the things they have the HTTP IE program,
which is like a curl alternative that's a little easier for interactive.
Maybe you're doing like a RESTful JSON API kind of stuff.
They have a lot of these modern tools worked in with the classic Unix examples, which is
really nice.
Yeah, that is cool.
And it's, you know, it's a nice resource that I was looking at the edits.
It's getting updated fairly frequently, which is nice.
So you can check it out.
We'll have a link to that.
The art of the command line.
You could probably also Google and find it.
It is posted up on GitHub and it is all formatted in.
Markdown.
That's right, sir.
That's right.
Very good.
Very good.
So Wes, you're a trooper this week.
You have in here.
What is this?
Is this is this actually a Sputnik or, you know, it looks like it's one of the Sputnik
series.
You know, it might be.
I'm I'm actually not sure.
I didn't ask.
It looks just like it.
But it does.
It was actually.
Yes, I think it must be because on Dell's website, they have it listed with the.
So he's got one of these one of these Dell laptops here, like the Sputnik line.
And for this week, you've installed what on there?
Velt OS, Velt OS.
And Velt.io is their website.
Yes, sir.
And we're going to talk to Ike about that in a little bit to see what he thinks about
this.
But Wes has been trying out a bunch of different things.
And you know what?
I love it because a lot of times you come in and you've been trying out a different
distribution.
And I'm curious to know your thoughts on Antigros.
So check this out.
Their latest ISO is laying the groundwork for a ZFS.
Oh, I said it.
ZFS kernel module in preparation for ZFS support in their future installer.
Hey, that's great.
Yeah.
So ZFS installation right there in the Antigros installer.
So you get a rolling arch based distribution with minimal modifications from upstream arch
with ZFS support in a GUI installer.
Your thoughts?
I love it.
Honestly, I don't usually install Antigros, but it is my go to live city.
I think it's a great environment.
It's polished.
It's pretty.
It's got that nice new mix theme.
And also it's arch.
So I know you have all the AURS support.
You have all the latest packages.
And if I want to install arch Linux, it already has all the installation tools.
So if I can do that and have easier ZFS support, I mean, what's not to like there?
I thought on the Linux action show subreddit xoo's take was the best.
Hey, Alan, your troubles are over, Alan.
That's just baiting.
Look at that.
But this is not news.
Like Ubuntu announced they were going to do it first.
Yeah, then everybody's like, oh, well, if it's OK for them to do it, then everybody
can do it.
It appears to be the case.
My concern is how differently it's going to be done in a bunch of different Linux's.
Yeah, because like it seems like only like when you're setting it up in the installer
as someone who's written the installer for ZFS and required multiple iterations to get
it right, are they going to do boot environments?
Because if not, they're kind of wasting their time.
Yeah, I certainly hope so.
I imagine I don't know yet because if they're going to use DKMS to make it work, then I
don't want my boot environment using it.
So I mean, it seems to work, but.
Right.
So, yeah, there's a bunch of questions.
There's having ZFS and there's booting from ZFS.
And then it comes out, you know, at some point, Grub would have to do a release, which they
haven't done in a couple of years in order to actually get all the features we push back
into Grub actually in a version that people might use.
Although random distros might just pull from their head or master branch or whatever you
want to call it and get.
But it seems like that's a bad way to run a software project.
What's the objection with having boot on something else and everything else like all
your main storage on ZFS?
Yeah, I don't see a downside.
There's no objection to that.
It's just you lose boot environments.
So on FreeBSD with boot environments, you can boot off an older a clone of a snapshot.
So, like, before you do a kernel upgrade, you can just roll back.
But you can roll back everything.
Before you run apt upgrade or whatever the equivalent is, you would take a snapshot and
you can roll back so that if the latest package update install the version of GNOME that likes
to crash, you can just be like, give me the one I had 10 minutes ago.
Oh, look, it works.
I don't see how having a separate boot removes your ability to do that.
I'm not a ZFS expert, though.
Well, if the separate boot is not ZFS, then it wouldn't be included in the snapshot.
Other file systems do snapshots, though.
The idea would be one set of tools, though, to manage all of it, right?
So, I mean, there is a disadvantage to managing ButterFS to get your boot environment working
again and then managing ZFS or ZFS to get your data environment and your OS environment
working.
That's not ideal.
It's not optimal, right?
Yeah, the entire point is to keep them in sync, right?
So, it's like, or I actually have online two separate environments that's, hey, this is
FreeBSD 10 with FreeBSD 10 packages and this is FreeBSD 11 with 11 packages.
The thing is, I do go back, though, rebuilding your boot environment is a pretty, like, in
terms of recovering your server and getting it back online, rebuilding slash boot is,
I mean, there's worse things that could happen.
I mean, by boot environment.
Boot environment is what we call the different snapshots.
So, that would be, what, kernel version and everything?
Or what exactly is a boot environment?
The boot environment is a complete snapshot of everything in the system except for directories
you exclude, like your home directory and VAR log.
So, it is the perfectly working kernel and packages and your entire environment that's
not volatile data, basically.
Sort of like Undentified is pointing out, sort of like SUSE is doing right now with
Snapper and ButterFS, but it's...
Yeah, they're copying the ZFS version.
But it's ButterFS.
Yeah, well, it's something Solaris came up with like 10 years ago, right?
And that's where all new technology comes from.
We live in the freaking Star Wars universe where we don't invent anything new.
We just steal older stuff and pretend like it's new.
Oh, God.
Human progress.
Why can't we live in the Star Trek universe where we actually invent new things?
Well, I actually...
Boy, that's a whole other...
Boy, we could do a whole episode on that.
Holy smokes.
So, I'm not quite sure how Antigros is actually...
Rodden, have you had a chance to look at this at all?
Do you have any insights on how Antigros is actually rolling this out or...
No, not the technical aspects of what you're talking about, like the boot environment stuff
like they haven't really given a full detail of that.
It would probably...
Even just usable, you know, ZFS's storage would be very nice to see on Linux.
Yeah, I guess it would.
I think as a first cut, that's almost certainly what will happen.
You know, those advanced restore and recovery stuff I think would be further down the line,
but for a first, given this is going to be our first release with it in,
I suspect it will be mostly focused on storage and you will have to, you know,
do your own thing for how you recover the things that are not ZFS
or the things that are not being snapshoted.
Right, that makes sense.
And that makes sense.
And, you know, that's how FreeBSD did it for a long time.
And even when it supported root on ZFS, many people were like,
I don't trust it enough, including myself.
Yeah, it would probably...
I still have my very first ZFS server, which is still running perfectly fine,
but it's still boots off UFS because I didn't trust ZFS back then.
Now, I actually trust UFS less, but...
Was that what the Chrisney says here,
something about the ButterFS boot support isn't in mainline grub?
Is that accurate?
It is.
Yeah, that does sound right.
It actually depends on what kind of features you've enabled in ButterFS
and of course, as well in ZFS.
I was going to say, because I use sub-volumes to boot from in grub.
And most distros are actually rolling a git version of grub anyway.
There you go.
Kind of taking their own snapshots over time.
If you look at it, it's almost certainly a git version of grub.
Well, it's like I said, grub really needs to, you know, do release.
Hey, man, I'm still sticking with Lilo.
So what's up?
Lilo for life.
Lilo for life.
That's worse than birds.
That's a title right there.
It's worse than birds.
You're right about that.
You know, speaking about living in the Star Trek universe,
I'll tell you what feels like living in the Star Trek universe ting.
Go to right now, linux.ting.com.
But don't get a phone.
This is the worst time ever to get a ting device.
You shouldn't get a phone.
Do not get anything from ting right now.
Okay, okay.
Don't do it.
You told me not to.
Yeah, no, I'm telling you right here on linux unplugged on November 24th,
don't buy anything.
It's the worst time ever to buy something from ting.
Because on Black Friday, they are having a crazy sale.
And if you can wait just a couple of days, I would definitely go that route.
Like 30% off some of their top devices, like free shipping,
starting about 8 a.m. Eastern time, the virtual doors open and you can go cray.
They got great deals on smartphones.
They have a really good, like the best chance to get like the ting sims.
If you have a couple of devices.
$5, maybe I'll pick up.
$5 sims, $5 sims, exactly.
And of course, free shipping on everything.
So you can, I mean, they really are $5 sims, which is awesome.
So go to linux.ting.com.
Then you can combine that with savings for our show.
And you support our show when you go to linux.ting.com.
Why go to ting?
Well, they have a CDMA and GSM network to get to choose from.
So you could be a boss.
But also it's pay for what you use mobile.
No contracts, nor the termination fees.
You only pay for what you use.
It's a flat $6 for the line.
So go to linux.ting.com to support the show.
Check them out.
Try out their savings calculator and go back on Black Friday.
Go get yourself an unlocked device.
Get updates from the Googs or wherever.
I mean, if you get a Googs phone.
You get the updates directly from the Googs on a network
that you only pay for what you use with no contract.
And you get to choose between CDMA and GSM.
That's ridiculous.
linux.ting.com.
Go check them out and go get their Black Friday sale.
I'm tempted to see.
I'm hoping there's a couple of different Android devices
that are on my wish list to go on sale.
Oh, man.
That would be really exciting.
I'm still, where is my phone, Wes?
How cracked is my screen?
How many, I mean, that thing is just, it's all, Wes.
That is ugly.
It is all jacked up.
It is all, look, you see those chips right there?
Yes, I do.
That is a jacked up phone, Wes.
Kind of looks like, does it hurt to touch?
It actually hurts to put up to my ear.
Yeah, it actually does.
So I have, but I have been-
I think it's the representative of this podcast
and the whole network.
Thank you.
You just can't, you can't have a device like that.
I've been holding fast and waiting for the Black Friday sale.
Not only do I love putting a whole bunch of turkey in my mouth,
but I love good sales.
So go to linux.ting.com.
Go get a great deal.
$25 off a Ting device, $25 in service credit,
and you support this show.
And you can read more about their Black Friday sale
on their blog, linux.ting.com.
And thanks to Ting for sponsoring Linux Unplugged Show.
You guys are awesome.
I'm really glad you're doing such a big sale.
That's really cool.
All right, Wes.
So I'm really happy to recommend,
recommend to welcome a representative
from the Vivaldi Project, a new web browser,
really that's designed for their friends, they say.
They have a Linux version out.
You've been checking it out for a little bit.
Yeah, we're running it here today.
Yeah, I've run different builds of it all along.
They have the brand new beta out.
So I installed it last night on my rig
just to give it a try.
And Rory joins us from Vivaldi
to tell us a little bit about their new release.
Rory, welcome to Linux Unplugged
and congratulations on the new beta.
Thanks very much.
We appreciate it.
So you're trying to get the word out
about this desktop browser,
which is sort of entering maybe
the most competitive browser market
we've seen in the last few years with Chrome from Google.
Firefox is really doubling down on features.
Microsoft's got their new Edge.
Even Microsoft.
Yeah, even Microsoft, yeah.
And so are you guys crazy
or do you actually have something here?
You'd think so, but actually,
I think it's a perfect time to do it
because all of those browsers,
the ones that you mentioned,
they're all going in a similar direction
in terms of offering something very simple
for what they believe is the common user.
And what we're trying to do
is we're trying to make something
for everyone else, right?
The common user, but also just people
who want something extra and a bit different.
And so rather than remove features,
which you probably saw the other day,
Firefox are dropping their tab grouping solution,
they're dropping their themes.
We're adding those things.
So this is a browser for everyone else, if you like.
So are you basically saying
it's a browser that appeals to power users
but at the same time isn't too hard to use?
Because I'm looking at it and honestly,
you know, I have to say, using it,
it doesn't feel like a complicated browser.
So how are you delivering something
that isn't reducing features but not being complicated?
Because everybody else tells me
that's completely impossible.
Yeah, I think there are a few things there.
I mean, we've got a very good design team,
so I think it looks nice and clean
in its default layout.
But on top of that, what really works
is the technologies we're using.
There's been a lot of talk of making a browser
with HTML, JavaScript, CSS technologies,
and we're one of the first to release
and we're the first to really do it.
And I think that wraps up how fast we can add things.
And we've been trying to look at those ways of doing things.
Really?
Yeah.
I mean, I guess I knew that,
but you know, actually in using the browser in practice,
I have to say it, to me,
feels like it has the fastest UI elements.
It's very snappy.
Yeah.
I mean, very few glitches.
In your impression and my impression, Wes,
like when you pull, when you like,
say you bring out the bookmarks bar,
I mean, it immediately snaps out
or the downloads immediately snap out.
And it's animated, but it's not exaggerated animation, right?
Like it's like enough animation.
Yeah.
Or what I really like is the way that the tabs
will assume the color of the site you're on.
And then now the tab coloring is based on the site you're on,
but it all happens very nice, very quickly.
So I guess what kind of black magic
is making this feel so fast?
And, you know, my primary experience
has been on the Linux desktop,
but we're now today also we tried it on the Windows desktop.
It also feels very fast.
It feels like maybe it has the best scrolling
out of any of the browsers on the desktop here.
The UI elements are exceedingly snappy.
What is being done there to make all of that happen?
I think it's just a question
of where we are with the web today.
And HTML, JavaScript in particular
has had massive performance increases
and you can just do those kind of things now.
A few years ago, that would have been a pipe dream,
but now we're really there.
And so it's just,
we were the one of the first to kind of try it
and it seems to work well.
I think actually, I'm really glad
that you found it so snappy,
but I think there's even further we could go with that
because for our part,
we know there are things we can improve
and we're definitely working on them.
I wanted to kind of ask you
about the underlying technology
because it seems like the hard problem
you're gonna have with technical users
that are listening to our show
is they're gonna look at this and go,
well, this is based on Chrome.
This is a reskinning of Chromium.
This is Blink or WebKit.
And if I really just wanted to use this,
I could just use Chrome.
I don't need something that just lays down a UI
on top of it and has a bunch of stuff
just built in that I would rather use as extensions.
But that is not actually what's happening here.
What is sort of the go-to rebuttal for that?
I think the thing with extensions,
I mean, they're great.
I used to work at Opera before
and I had 20 plus extensions.
They're good, but they often get in the way
or there's an upgrade and something slightly out of sync
and this extension doesn't work anymore.
So it's about giving a whole package
and making it very simple.
You go into settings, you switch something on,
you switch something off.
You don't have to go and find the extensions.
You install the browser somewhere else.
It's just tweaking a few settings
and you're back to where you were.
So I think it's just that simplicity,
that ease of being exactly how you want it straight away
without having to configure 20 extensions
or worry about will the next upgrade,
will this break my extensions?
It feels to me like it's a guarantee of some features.
Like, well, these are important enough
that they're in our core feature set.
We will, these will always work
and they will work in a really well, really good way.
And like, you know, one of the good examples of that
and this one that I wonder if people have really explored much
is the taking notes and things like that
just built right in.
But you know, Rory, I wonder, it feels like today,
the biggest thing that I miss
when I switch from say Chrome to another browser
is now today when I install Google Chrome,
one of the first things that happens is Google says,
hey, why don't you log into your Google account?
And at the moment that I do that, it pulls down everything.
All of my extensions, all my themes, all my bookmarks
and not only that,
but it logs me into all the Google properties,
which is a major convenience.
And so when I look at switching to a new browser,
like I did last night when I switched to Vivaldi,
I had to go through the process of importing bookmarks
and all these things.
And I wonder, do you feel like perhaps
this is the biggest area of competition
where the browser maker, like Firefox as well,
now has this sync service.
And essentially it's this backend infrastructure
I rely on for some of these browsers
that's the most appealing aspect to them.
And how does Vivaldi sort of draw me away from that
and give me something else that says maybe also competitive?
Well, I think something you should bear in mind
is we're not anti-sync at all.
I mean, it's something we've put a lot of man hours into,
but we're not quite there yet,
but we fully intend to have sync.
So those kind of things will appear in Vivaldi in the future.
But we're coming up to our first version.
We've just had one beta, so we're not quite there yet.
But yeah, sync is something we want as well.
And sync is something that we intend to deliver in the long run.
So they'll essentially be sort of the same kind of implementation
that I will be able to sync those things across.
And one of the kind of nice power user features I noticed
is right out of the box, you can check a box,
you have a dark theme.
Love that.
Also something else that's very cool
is there is a quick commands, like you hit F2,
and it's a keyboard-based command system for the browser.
Really like that a lot.
What other kind of power user features are in Vivaldi
that maybe I'm not familiar with?
You mentioned the panels on the side
and things that you sort of like notes,
but we also have panels for each of our different properties.
And we also have a thing where you can add a panel.
If you click on the plus, you can add a URL,
and it will add that as a page.
It actually sends a phone user agent.
So it usually gets a page optimized for a phone,
so it has the right size.
And then it's a way of like adding an app
or checking on something.
You can add a page which has maybe nice RSS feed
or some news items,
or maybe you want to stick Twitter in there
and then you can keep track on Twitter or Facebook
or whatever it is you're interested in.
You just add that in the side
and then you can carry on watching.
I love that actually.
That's really cool.
Yeah, that's a great idea.
Picture in picture.
You mentioned the quick commands.
The quick commands, I don't know how much you played with them,
but when you're typing, it can be both,
you can type addresses in there.
It will search your address book.
It will give you the option to search,
but it also will narrow down your list of tabs.
So it's a way to switch tabs.
It also will allow you to type actual commands.
So when you said, when it's called quick commands,
it really means that.
So for example, if I type new,
you'll see in the list below the search engine,
it says new window, new tab, new.
And so they're commands that you can just hit enter on,
arrow down and hit enter and it does the action.
Yeah, like a new private window, for example.
Yeah.
Very cool.
That's very nice.
As someone who's used a lot of like,
you know, like VI type extensions for other browsers,
having those kind of quick commands
just from the keyboard is really nice.
Yeah.
Yeah.
I think having it built in and making sure it works is what helps.
I mean, we have other things as well.
We have a keyboard navigation.
If you go to a page and you hold shift,
you could use arrow keys to go around on links and so on.
And then you can hit enter to go on the links.
I like that.
We also have tab stacking.
So again, you can drag one tab over another.
They will combine.
They're a stack.
You might keep maybe a stack of, say, you're looking,
you're doing shopping or you search for various things
on Google.
That is really cool.
Yeah, I'm seeing that.
And when you're done, you just delete the whole stack.
You can also, things that are in a stack,
you can right click on the stack and you can choose to tile it.
So you can see two sides, side by side.
Oh, I got to try that.
All right.
I got to try that.
I got to try that.
So I will open up a couple of tabs here.
And I will drag a couple of episodes
of Jupyter broadcasting on top of stuff.
Oh, it's kind of hard to drag it on top of stuff.
But I see.
I'm bound and determined, Wes.
I'm bound and determined to do it.
I think once you just get over it a little bit,
like when the back one fades, then you can do it.
Yeah, OK.
There you go.
It colors slightly.
There you go.
OK, so then how do I stack them?
What do I do now?
OK, there's a couple of different ways you can do it.
There's down at near the bottom of the UI.
Oh, I see.
To the bottom right, there's a little.
Oh, my gosh.
You've got tile.
Oh, my gosh.
That is so cool.
That is so cool.
I'm glad you like it.
Yeah.
That is really kind of something, isn't it?
I could see people, though, who keep
track of a lot of different things.
You know, you're kind of trying to get an overview,
or you have to monitor a certain thing.
Yeah.
Or I was, you know, social media feeds, RSS feeds.
Yeah.
Monitoring for your like, you know,
uptimes and like Nagios type stuff.
Exactly.
That could be super cool.
Huh.
Now, producer Rottencorp, you had something
you want to jump in here with the web panels and extensions
and things and quick options and things like that.
Go ahead.
Yeah.
One of the things I found out that I really liked about it
was one of the, like, there was an extension I had to test
some, like, the tab group concept that Firefox has since
they're getting rid of it.
I was wondering if there was something you could do with,
like, Baldi or something.
Yeah.
I mean, the tab stack.
I actually took, I found a cool extension.
And you can take the extension controls
and turn it into a web panel so that you always
have that extension just quick shortcut.
OK.
You can have, like, just the options and the controls
for a particular extension can also be it.
So it doesn't have to be a website.
So this is a pretty competitive market, Rory.
Do you suppose that the market for the Vivaldi browser
is the user who wants something a little more capable
than just the sort of watered down mainstream browser?
Or is it somebody that is, like, doing research?
What's the, like, when you look at the core demo
for the Vivaldi browser, who is it?
And why is the Linux desktop part of that story?
I think it is for those types of users,
but I don't think it's only them.
I mean, a lot of people used to joke back
when we worked at Opera about Opera having no users.
But I was there when we had 60 million users
back for Opera 12 and so on.
And there are a large number of people,
more than you would think, who like to have,
maybe even it's just one feature.
They just appreciate one thing.
They appreciate having notes.
And they don't use any other power user features.
Or they just appreciate having web panels.
So I think it's bigger than that.
But yeah, sure.
I mean, that's our core demographic right now.
That's who we focused on.
The browser is, we call it a browser for our friends.
And really, Jan von Teichner, who's the founder
of both Opera and now Vivaldi,
I mean, that is really what he meant by.
He's making it for the kind of people
who are real fans of the old Opera,
for people like him, for people who want
those power user features first and foremost.
We expect others will come as well.
And then I'm wondering, Rory,
if there's anything you could comment.
I mean, legitimately, if I'm gonna switch to this
as my main browser, one of the first questions
that comes to mind is what steps is Vivaldi taking
to ensure my privacy when you're looking at
upstream Chromium code and you're making
a browser based off that?
Is there things being removed that Google includes?
Is there any kind of tracking?
What's the privacy situation with the Vivaldi browser
versus, say, the upstream project?
Yeah, if you open the settings, just Alt-P
and go to privacy, you'll see that there's
a bunch of stuff that you can tick off.
So if you don't like the Google phishing
and malware protections, for example,
you switch that off.
You switch off diagnostics.
Whatever you don't feel comfortable with,
you can just switch that off.
We also looked at some of the options.
Like, for instance, some people are worried
about the amount of data that, say, Google collects.
And so when we came to do our HTML5 notifications,
when we came to look at things like tracking,
so when you're on Google Maps and you click
to find your location, a lot of people
use a Google service for that.
We actually use one provided by the guys at Mozilla
just to give something different.
So we do look at those kind of issues.
And if people raise them, if they say,
you know what, I don't like the way you do this,
or I feel like this is some form of tracking,
we are very open to adding options
for those kind of things.
Yon has like a catchphrase, which is basically,
when in doubt, we'll add an option.
And we really do do that, which is why a browser which
hasn't even been released has so many options already.
I have to appreciate that.
As somebody who's been using the web browser
for more than six months, it turns out
it's really nice to actually have some configuration
control over some of these things.
So I really do appreciate that.
Roy, is there anything else you want to touch on
before we wrap up on all this stuff?
This has been really cool.
The only thing I'd like to say is that the Linux community
have been great with us.
And at the moment, we have two package types.
We have RPMs and devs.
We do really support the browser with as many distros
as possible, though.
The only reason we don't do more packaging types
is simply because we think that the distros do it better.
So I think it'll happen more when we get to final.
Distros may consider putting us in one repository or another,
which is appropriate.
But we would like to work with package maintainers
to get native packages, because we think that's
the best experience for users.
Our packages are OK, but people who do packaging all the time
do a much better job.
Yeah, I was very thankful.
It was really easy to install from the Arch user repository.
They have the beta in there.
They have the git build, and they have the stable.
And I just installed that real quick,
and I was able to use it for the evening.
You know, actually, the one bit of feedback I would have
is I wasn't able to watch Netflix.
I wanted to watch the new Jessica Jones series,
and I couldn't watch it in the Vivaldi browser.
OK, yeah, we're looking at the Widevine support now.
That's a proprietary component that we have to pick up from.
Yeah, we do do a little trick right now,
because we have to test these things internally.
If you got it from Arch, there's a package there
in the recommends that they suggest,
which gives you H.264 support.
If you install that, we'll also do another trick.
If Chrome happens to be installed,
like as a test while we're seeing how this works,
we'll use their Widevine installation that is there.
So you should be able to use it if Chrome's installed them.
And of course, we don't want to encourage you to install Chrome,
but just in the interim thing.
Yeah, all right.
And Rory, if you wouldn't mind, Heaven's Revenge
has a couple of questions that he wants to ask.
Go ahead, Heaven's.
And I would be curious to hear what you think,
because I've been using it.
I've been pretty impressed.
So fire away.
Hello.
Well, I used to be a very massive Opera 15 or 12 fan
back in the day.
But this is basically a reborn version of the old Opera,
a nice customizable power user version of Opera.
What prevents another company from just buying Vivaldi out
and changing the new wicked Vivaldi into the new Opera
that doesn't have all the power user options
and just destroys the old user power user base
that we used to...
It was beautiful, the old Opera.
And it's just saddening.
And I would hate for the same thing to happen to Vivaldi now.
I think there's an interesting story there.
If you look at...
I don't know how much...
If you're an old fan, you probably remember Jon Pontechno,
one of our two founders of Opera.
And he's the guy who runs Vivaldi.
And it got to a situation where obviously there were more
and more shareholders involved,
and they were able to do things outside of maybe
the way he would have liked it to go.
I think what we have at Vivaldi is what Jon would have wanted
Opera to be.
Our company is wholly owned by him really at the moment.
I mean, the employees have small amounts of share,
but I don't think this is intended to be floated anytime soon.
This is a reaction to the fact that Opera isn't the way
people like Jon wanted it to be.
And so there's kind of a protection there in a way.
He's not going to sell this out anytime soon.
And that those of us who have small shareholdings in it,
neither are we.
This is...
I don't think this is going to be floated anytime soon.
So he's more of the embodiment of the old loved Opera
that we all used to love.
Very much so, very much so.
I mean, Jon is very much that kind of a guy.
I mean, a lot of us joined purely because it was him
and we know his thoughts on the matter.
I mean, I myself was working at Opera.
I had a job there.
There was...
Not long ago, I don't know how much you follow the news,
a bunch of people were fired from the Oslo office.
I was not, but I quit because I specifically wanted to work
with Jon because I know how he feels about these things.
So what...
You know, this is a horrible question to ask really,
because nobody likes to talk about this.
But also, I kind of wonder...
I totally grok why Google makes a browser,
makes sense, I even grok why Apple and Microsoft
make their crappy browsers.
I understand why Mozilla does it.
What is the long-term sort of revenue model?
What's the path to success for Vivaldi?
Obviously, you're probably not going to charge
for the browser itself.
And it may not be in stone yet, but is there sort of...
As somebody who might become really passionate about this,
I like to know you guys are going to be around here
for say, five, 10, 15 years.
What's going to make that happen?
I mean, the revenue model is actually the same
as we had at Opera.
It's the same way that Firefox makes their money.
I mean, there are a few things that you can do
to make money from the users, which also benefit the users.
One of them is doing search partnerships,
and that's where most of the browsers nowadays
make most of their money.
So like, a fraction of a fraction of a penny
for every X number of searches we get paid on.
And so we add some search engines there
and we do deals with them.
We do other small deals as well,
but the idea that we always had at Opera,
and I think we did quite well,
is to add things that are both benefits to the user
and benefits to us.
I mean, people want those search engines anyway, right?
Sure, yeah.
You try to walk that line.
Yeah, exactly, try to walk that line.
And it was feasible to do at Opera.
You need some millions of users to make it work,
but I think that we can get to those millions of users
and it should be self-sufficient.
As it happens now,
to show you the level of commitment that Jon has,
I mean, he's bankrolling pretty much this
until we get to that level.
So when I said he's making this for his friends,
he's doing it, he's putting himself on the line
and he's gonna make it happen.
So, you know, I think you can feel comfortable
because it's different from the old Opera
in that he has much more control here.
And so, of course, we are on Linux Unplugged
and one of the questions can probably be very nicely
summed up by Heaven's Revenge.
I think Heaven's Revenge, you've been asking,
what's sort of the open source story here?
We know it's built on top of some open source technologies,
but some of the things that the Vivaldi's offering
are closed source.
And Heaven's, I don't mean to cut off your question,
but is that essentially what you're asking?
Yes, considering they were touting how fast and fluid
their user interface is.
And it is.
Because it is JavaScript and CSS based.
And since the old, or at least Chromium project
is what they're based upon,
will they go down the old path of Opera,
which is a closed project and a proprietary one,
which prevents a default installation
on a lot of live disks and a lot of distributions?
Yeah.
That is what prevented Opera from being so widely used
on a lot of distributions.
Being legally allowed to, yeah,
like so could a distribution legally redistribute the browser.
Right.
And honestly, there's a lot of people out there
that are looking at this thinking,
if I'm going to switch to something,
I want to be able to trust it.
It's a little more trustworthy if it's open source.
Or at least Firefox and Chromium
just because they're open source.
So Ubuntu won't even give Chrome,
because of its closed nature,
Chromium or Firefox is their default options.
Unfortunately, to that end too, yeah.
So what do we get?
So, okay.
So there are a couple of things there.
Firstly, all the stuff on Chromium,
all of the C++ code and everything that makes up Chromium,
the changes that we make there are essentially to run our UI,
which is written in HTML, JavaScript, CSS, and so on.
And all of those changes we make,
some of it we'd have to anyway,
but not everything because there are different licenses
in Chromium and Blink and so on.
We put up a source code.
If you go to vivaldi.com slash source,
you can download the source code package.
And that is basically the Chromium version
we're currently based off plus all of our changes.
And any change that we made will either match license,
say for example, if we'd adjusted FFmpeg,
we haven't, but it's LGPL,
it would inherit the LGPL license.
In any other case, we give it under a BSD license.
The details are explained in the readme
and the license file and so on.
So it's only our UI, which is proprietary.
That is, however, auditable because it's,
you can just get that from the package,
the regular package.
I mean, it's just, as I said, HTML, JavaScript, and CSS.
It is minified, but you can go through it
and see what it's doing and people have tweaked it.
We have talked internally about possibilities
for other licenses and it's definitely a door
that's open to us.
I think that there are people here
who want that in the team
and that our whole team works together
so we can make that happen, maybe.
But I'm not gonna promise it,
but it's definitely something we look at.
And it is a box that is already being called Pandora
because there's a distribution
we're gonna talk about later in the show today
that's already shipping with Vivaldi as the default browser.
And you know, we're fine with that.
We're absolutely fine with that.
I mean, in Opera back in the old days,
the Opera 12 days,
we had a situation where the license for...
It was quite a proprietary company in some ways,
but we had a license for Linux,
which was different from the other desktop browsers,
and it allowed redistribution and repackaging
to fit the distro.
At some point, we tweaked the license unintentionally
and basically, if you read it literally,
it didn't look like you could redistribute
and a bunch of distros actually dropped us
and it was sad.
And it was a lot of effort to get us back in Arch.
I did a lot of the community work there.
I maintained the package myself for a while.
I got another guy to take over.
He's actually the guy who maintains the Vivaldi package now.
He's one of our volunteers.
We have a small volunteer team who help us as well.
So, you know, we would bend over
to kind of help people get it in the distro.
We would really help them.
If they wanna get something in the distro,
we'll see if we can do...
Tweet the license if that it needs be.
We just, we try to protect certain things.
I get, maybe it's the wrong word,
but we are willing to work with distros
to allow them to distribute it.
It also suits them.
Lovely.
Well, I have...
John is an amazing guy.
Hey, Chris.
No, go ahead.
John was a great man,
but I don't want him to bring his mistakes of Opera into Vivaldi.
Hopefully he learned from the potential mistake
of being the browser closed
and not make the same mistake with Vivaldi.
I think that John is open to things.
As I said, I don't wanna promise stuff
because it's still discussions we have internally,
but I think he's very much open to things.
He likes people messing with the browser.
Back in the old days in Opera,
we had a situation where there was a guy there
who was just a fan
and he used to binary patch Opera to tweak certain things.
Later on, because he was interesting in the community,
we hired him.
That part is great.
Yeah, there you go.
So we're not anti-people messing with it.
And some of them, as I mentioned briefly,
we have this volunteer community,
a group of people who just help us out for free,
who are like in a circle.
They end up on our Slack channel and so on.
One of them is the package maintainer
and those guys have been tweaking
and adjusting small things here and there.
Okay, so to sort of summarize for those listening,
if you are creating a Linux distribution today,
the Vivaldi project on the most part
is okay with you including it in your distribution by default.
Is that correct?
Yes, yeah, yeah, that is.
And if they want to tweak the packaging slightly,
because not everyone's RPM on dev
or they hate our RPM on dev,
so we're cool with that as well.
Sure.
All right, so we'll have links to download it
in the show notes.
It's also in a lot of distributions repositories already.
And I have to say, it's pretty exciting
because it's fast, it is very feature rich.
And if you need to take notes,
if you do research and things like that,
it has some of that stuff built in,
which is nice because I have yet to find an extension
that doesn't drive me fricking crazy
that does that kind of functionality.
So it's nice to just have that included in the browser.
And also feel like the UI makes my computer
feel like a super machine.
Like everything snaps open super fast.
I'm like, oh yeah, it's 2015.
So if you want a browser that feels like that,
go check out Vivaldi.
We have a link in the show notes.
Rory, thank you for joining Linux Unplugged
and telling us a little bit about it.
And congratulations on the new release.
Yeah, thanks a lot.
All right, so check it out.
We'll have a link in the show notes.
And Wes, what do you think after using it for a bit?
Your closing thoughts, sir.
I haven't heard from you.
You know, I'm really happy to hear
that it's built on standard technologies, HTML, CSS.
I have mixed feelings about the closed source nature,
but it does perform really well.
And it is built a lot on our open source tools
that we use anyway, Chromium, et cetera.
This is what I like about it.
What I like about it is it adds some competition
to this landscape.
Yeah, I think it brings a lot of, you know,
it's well designed.
It brings a lot of features.
And even if I don't end up sticking with it,
I think it should probably help the ecosystem.
And I feel like it's a pragmatic competitor
in the sense that it acknowledges some of the innovations
that Google have done are legitimate,
and they really have brought some new blood
into the web browser market.
But at the same time, it's sort of pulling away
some of the black magic and allowing you access
to some of those privacy things,
like being able to opt out of Google's content filter
is actually a big deal because that means
you're sending them a hell of a lot less data.
And it's nice to see someone using the Chromium base
that's not Google but that has a little more heft,
you know, like this will exist for a while.
Right, also, and this is kind of my closing thought on it,
what I really like about it is you have a group
that is just legitimately focused on a great browser.
Yes, exactly.
At the end of the day, Google is focused
on collecting data, selling, advertising,
and really moving their whole web agenda forward
because the web is very important to Google as a company.
Chrome is just a piece.
Chrome is an important piece to that.
One of the things about the Mozilla Foundation,
and obviously with Vivaldi and other projects like them,
I really, really respect the fact
that what they actually are focused on for the most part
is just creating a great browser.
Now, the Mozilla Foundation, you know,
that's not their only focus,
but it's a huge part of their focus.
And at the end of the day, as a user,
I really like where their intentions begin.
And I think that's really awesome too,
so I'm glad to have another thought leader in that space.
So check it out.
We'll have links in the show notes.
And in the meantime, I encourage you to spend
your holiday weekend not consuming turkey
but checking out DigitalOcean.
Head over to digitalocean.com
and use our promo code DOUNPLUGGED,
DOUNPLUGGED, one word, lowercase.
You know, it's way better for the waistline.
Exactly.
Don't eat that stuffing.
Nope.
Don't eat that crap cranberry from the can.
Ignore your family.
You should play around with DigitalOcean instead.
Which is way better for your psychology.
Let's be honest.
You know what, guys?
Here's the thing.
I am 33 going on 34.
And let me tell you something.
It doesn't get any better.
The family is, it is...
Let me tell you something.
The family, you could just avoid that.
I can tell you after 33 years, just avoid them.
This is my personal recommendation.
Stay home and play with DigitalOcean.
And if you're not going to do that, like I tell you to,
that's Chris's personal recommendation.
Don't get mad at him, folks.
Yeah, hey, I warned you.
Just carve, if you'll excuse the pun,
carve a little time aside to go play with DigitalOcean
and use the promo code DOUNPLUGGED.
DigitalOcean is a simple cloud hosting provider
dedicated to offering the most intuitive and easy way
for you to get your own Linux rig
up on their super awesome SSD-based cloud
with 40 gigabyte connections all running on KVM
with Linux as the infrastructure
because Linux is a boss, right?
So they got KVM, which is a super great virtualizer.
It's awesome.
It is.
Did you know that we have a KVM rig here in the studio?
I did not know that.
So before DigitalOcean was like a thing in Chris's world,
they existed, but it wasn't in my world yet.
I was out building KVM machines off of old rigs
that are just monsters with ridiculous water cooling.
And I mean, yeah, it is a system, Wes.
And you'd be pretty, I should show it to you
before you leave.
You should, yes.
And anyways, this was how I was going
to grow the Jupyter broadcasting infrastructure.
Thinking about scale here.
Yeah, yeah.
I was going to spin up machines on this rig in my garage.
It's just so ridiculous.
Now that I think about it now, because for $5 a month
I can get 512 megabytes of RAM, a 20 gigabyte SSD,
one CPU, and a terabyte of transfer, right?
That's tier one bandwidth.
That's the beginning.
What tier do you have, Chris?
Here at home, do you think?
I don't even, so for those of you, hopefully,
you don't even know, but we've actually
had to stop recording and rerecord parts of the show
because we've had connectivity issues here at the studio,
which, as Wes can attest, made Chris a little grumpy.
Yes, just a little bit.
I got a little grumpy because I started cussing.
I started talking about how much I spend.
And you know, the thing is, $5 a month,
that's less than a Big Mac.
It's nothing.
It is less than I spent on beverages for this show
by quite a bit.
You go to DigitalOcean, use the promo code DOUNPLUG,
you get $10 credit.
They got data center locations in New York, San Francisco,
Singapore, Amsterdam, London, and a brand new one in Toronto.
And they're super nice, kind of brand new,
not as new as Toronto, but it still smells like that.
It has that new data center smell in Germany.
But it's that interface.
Man, is it that interface.
They have a great interface that really makes
all of the kind of virtual machine management
really straightforward, deploying applications,
destroying your machines.
You wanted to go deploy a free BSD rig,
a Core S rig, CentOS, Debian, Ubuntu, Fedora 23.
Yeah, they have Fedora 23.
You can go deploy them right now.
Use the promo code DOUNPLUG.
You get that credit.
You get that credit.
You put it up in that little spot they got there.
No credit required.
Feel like getting a little credit spot there, Wes.
They got a little credit spot, you know?
That's what they call it.
And you know, the other thing I really like about DigitalOcean
is, well, they got some really, really good tutorials.
They have a brand new one up.
I recommend you go check out How to Create a High Availability
Setup with Heartbeat and Floating IPs on Ubuntu 14.04.
This is a really, really nice write-up
with some super great visuals, the basic understandings.
Because what DigitalOcean has done
is they've hired professional content editors
to actually edit this stuff.
It is good.
It is good.
And it's all just included with DigitalOcean.
Use the promo code DOUNPLUG.
Get a $10 credit.
Go deploy an own cloud server, Minecraft server,
SyncThings server.
My gosh, you guys.
There's so many things you can do with it.
Wes, do you have anything you'd be wanting to add?
It's just, I mean, just the kind of level of stuff.
You don't have to get, you know,
you don't have to buy a really nice edge firewall
that you put on your network.
You know, you could just get floating IPs.
You can have these kinds of enterprise-style setups.
I know.
But for your own peace of mind.
Now, Wes, is there a way I could take
my MB Fedora 23 Droplet and combine floating IPs
so that way I could have high availability MB?
Can you think of?
I'm just spitballing here, Wes.
I'm spitballing with you.
I don't know if that's possible.
But it's open source.
So we can make it happen.
Screw you, Plex.
Go over to digitalocean.com and use the promo code
DOUNPLUG at a $10 credit and try out DigitalOcean.
And say, sorry, family.
I got more important things this holiday season.
That is the holiday spirit here at Jupiter Broadcast.
And use the promo code DOUNPLUG.
And a big thank you to DigitalOcean for sponsoring
Linux Unplugged.
All right.
So on this week's episode of the Linux Action Show,
we talked about Solus OS, a really slick, built
from scratch operating system distribution,
if you will, of Linux, GNU slash Linux, by the way.
Don't get that s wrong.
That is embarrassing.
GNU slash Linux distribution.
I've never installed GNU slash Linux.
Yeah, there you go.
And we talked about it.
We reviewed it.
It has a really nice desktop called Budgie based off
of a little bit of Gnome.
And I could tell you all I could go on about it all.
But instead, Aiki, who is the guy behind the distribution,
who has joined us before on the show,
has come back on Linux Unplugged to not only do
a little bit of follow up on the review,
but correct pronunciations, tell me anything I've missed,
and maybe hopefully tease the big release.
Aiki, welcome back to Linux Unplugged.
Thank you very much.
So what was the biggest thing I got wrong in my review,
or our review?
Let's blame Noah.
Noah's review.
What was the biggest thing Noah got wrong on this week's
episode of the Linux Action Show while we were talking about Solus?
To be honest, it was mainly just the stuff about Solus.
Yeah, sure.
Yeah, that would make sense.
That would kind of be the range.
Yeah, so anything pertaining to the actual review
was probably wrong.
And so where do you want to start?
Is there anything that really jumped out at you
that was offensive?
No, not offensive as such.
I think there was probably a misunderstanding about what
the whole thing is about.
So we won't be doing a 1.0 until a day later.
Until a date that I haven't got because of Murphy's Law.
Well, wait a minute now.
I saw specific GIF animations that implied it may be coming
to a stocking stuffer near me.
This is your source.
Yeah, GIFs.
But they are GIFs on the Solus Project website.
You didn't say that.
Yeah, there you go.
Yeah.
Busted.
So there's no specific date yet, just sometime before Santa
turns up, which is not hard.
You know, he's fat, so we should make it.
Yeah, he's slim.
Yeah, so sometime before Christmas.
But I mean, there is a lot to be done yet, to be honest with you.
Budgie at the moment is gone for a complete and utter rewrite.
We put normal 3.18 for recently, which I noticed in the words.
I'm not good at them.
When you guys were showing up on the screen last time,
it was shown normal 3.16, which kind of gave me an idea that
that system was badly out of date.
We've upgraded Kernel since then.
We've done a lot of security updates since then.
But in itself, it's not such a bad thing that it is out of date,
because I may be completely and utterly broke, Budgie.
So the 3.18 update, I mean, Budgie's nearly two years old.
Yeah.
So when I started out, it was normal 3.10 or something like that.
We started out with the code base.
And the stuff that we put in there to actually keep it all working,
that's completely broken now.
And GTK and Motör are on less drugs than they used to be.
So all the workarounds that we used to have in place now break it.
So we've had to do a complete rewrite of the Budgie desktop.
But it now looks nothing like the old Budgie if you want it to,
if that makes sense.
It sounds like you're heading towards a cleaner version, though.
Yeah, get rid of the old hacks.
Basically, take out the trash, to be honest with you.
There's a lot of it's built up after the last two years.
So I mean, last two years, I mean,
it's still two years of engineering experience put on top of that.
So you're going to find a lot of stuff that makes you think,
really, was that me?
I'm ashamed.
As in many projects.
Yeah, that does happen.
But OK, so when we were looking at it, I guess it could have been out of date.
I suppose that is possible.
Although I think what it was is I was showing,
so every now and then I kind of waffle on this issue,
almost every other review is a lot of times I get slammed for installing updates
and customizing the distro.
And actually, I'd be curious to hear your opinion.
And then other times I get slammed for not changing the distribution.
So I kind of, when it's like a boutique distro
that is trying to deliver an experience, I try to go all defaults.
And when it is something that I feel like is your day-to-day workhorse,
like an LTS or a Fedora release, I try to customize.
And I'm curious, Ike, so in your experience,
if I was going to do a review of your distribution, say, down the road,
would you prefer that I sort of live in it for a week and customize it?
Or would you like me to go on air and tell people,
you know, this is the experience right out of the box?
Well, you see, it's not up for me to tell you what to do with your computer.
We try and go over with same defaults by default.
You know, you want things to look nice by default,
but by no means are we trying to stop people from customizing things.
I know there are certain design-led projects out there
which would rather you didn't ever post a screenshot
without a wallpaper within a certain hue, shade, and battery level.
But we're not along those lines.
You know, we're not really into the whole hipster culture.
This is exactly how things should be.
You know, if you want to put a picture of a dead pigeon
or a dead budgie on there, for all matter, you can do it.
Yeah.
Really not bothered.
Okay, good to know.
Noted.
So, all right, so I know we're going to retread some ground,
but I, you know, just in case people haven't heard old episodes,
I've got to ask this question.
Are you completely crazy for creating your own desktop?
And why don't you just tweak the GNOME 3 desktop?
Because I don't like GNOME Shell.
So, I like certain things about it.
And when I first started out with Budgie, I thought, well, logical step.
Let's try and, you know, shove a few things in here,
get rid of the overview.
Let's try and put something down the bottom that looks like a panel.
But at the end of the day, as nice as GNOME Shell is,
it is monstrously heavy.
Yes.
So, the computer I'm running on now is actually an Intel NUC,
and it has 16 gigs of RAM.
Now, that's more than most people have for any reason.
Most people have for any day-to-day stuff.
And I probably shouldn't complain, you know,
when I have enough RAM to do everything I want to do.
However, on cold boot with Budgie,
I'm using just under 200 megs of RAM,
and that's obviously with Intel graphics.
If it was Nvidia graphics, you know yourself,
it's going to be slightly higher.
They do tend to leak.
But with GNOME Shell, I'm using something like 760 megs of RAM just to start.
Another problem with GNOME Shell that I found myself,
because everything is implemented as clutter.
So, they have their own toolkit, which is a fork of MX.
Basically, everything that's on the screen is a frame buffer object.
So, if you, which is basically how clutter works.
Now, when it comes to Budgie,
the only frame buffer objects basically are the windows themselves.
And that's the things that we animate around and we push them around.
When it comes to GNOME Shell, every last thing,
whether it's the little popover menus or the panel at the top or your wallpaper,
every single one of those is a frame buffer object,
which is using more of your GPU,
which obviously means more GPU wakeups.
And if you're using software rendering, that means a lot more CPU wakeups.
That means you're actually using more power than you could be.
And it also means that if you have shared video memory,
you have less of that to go around for the applications or the games that you're using.
All right. I mean, that's all fair.
But essentially, at the end of the day, though,
you are also sort of banking on some of the underlying technologies they're iterating on.
I mean, obviously, for example, GTK 3.18 was important enough for you
that you're willing to sort of bump some things around and rework on it.
So there's some underlying technology there that you must seem sound to you, right?
Yeah, I mean, that's the whole idea.
So the GNOME technology, the GNOME stack, I absolutely love it.
I have my problems and I do rant and bitch, but we all do.
It's stuff that we work with on a daily basis.
The only thing I don't like is the GNOME Shell itself.
That's personally not for me. That's not how I want my desktop.
That's very much, here's the experience you're getting, this is how we see it should be.
But all the rest of the technology like libmotor, glib, valr,
we use all those stuff and we use them quite proudly.
I mean, me, myself, I'm a member of the GNOME Foundation anyway,
and I'm quite happy to use GNOME technology and to see other people using it
and improving, contributing to it myself.
So I try to, when I'm talking to people,
I try to get them to differentiate between GNOME and GNOME Shell,
because one is built on the other. It's exactly the same with Budgie.
Budgie is built on GNOME, but Budgie couldn't exist without GNOME.
It's very, very much dependent on it.
And we're happy to integrate with all that,
because we don't have to go right in our own control centers,
our own sentence demons and all that crap.
So to me, what it seems like the elephant in the room for a distribution like this
is sort of the big meta problem.
And that is the community, the documentation, the packages, the how-tos,
all of the tribal knowledge. And so it seems like you run the risk of
basically the desktop becoming a feature of something else
that's based on a more mainstream desktop,
or I mean a more mainstream distribution of Linux.
So what, when I'm looking at SolarOS,
what do you feel is the compelling thing about the underlying operating system
that is powering this pretty cool desktop
that would actually make me choose SolarOS itself
over, say, Budgie on something that's derived from Arch?
What is your thoughts there?
Well, straight off the bat, and I know everyone's going to flame me for this
and say, how dare you say this? This can't be true.
Solus boots faster than Arch.
I know it's a controversial statement,
and I'm probably going to be shot in my sleep for it, but it does.
So before I did a reinstall on my Nook,
Arch, I'm saying Arch now,
Solus boots in just over a second for me.
The highest I got it is 1.189 seconds, and I didn't bother optimizing it anymore.
It did seem extremely fast to me as well.
Yeah, the point is, Solus is not a generic distribution.
While you can take a generic distribution and try and shoehorn it to your needs,
the fact is that thing can run on everything from a toaster to a satellite,
whereas Solus can.
You can't put it on a Raspberry Pi, you can't put it on a server,
you're not putting on embedded hardware,
you don't have the potential to do any of that.
So there isn't any situation where we have to have 100 different package codes
or different package conflicts,
and we have to worry about all these different groups
and all these different architectures.
Solus is built specifically for an x86-64 computer,
and only for the desktop.
So there's only a desktop kernel,
and it's a single kernel that we maintain.
It's our configuration for a 64-bit desktop.
Focus.
Yeah, and that's up and down the entire stack.
Now, don't get me wrong, people say to me,
well, why don't you take Debian, you know, strip it down,
just do a kernel config there.
It's still the same situation,
because you still have all those packages, right?
And I can't exactly go through rebuilding the whole distribution.
Now, I've made that mistake before, and that was Solus OS.
We all know what happened.
I ended up closing down Solus OS,
because in the early days when that was happening,
at the end of 1.3, when we closed doors,
I had over 7,000 packages that was maintained outside of Debian within Solus,
because the amount of problems I had trying to implement what I wanted to do.
So it's actually easier for me to be a from scratch distribution.
The main thing with us is being focused entirely on the desktop.
But unlike some of the projects that come out and say,
yes, we are desktop-orientated,
we are looking at mainstream desktop usage.
That means, can I use this for my work at the office?
And for me, I need to do it for my job.
So I'm a software engineer.
I need to be able to do that.
But at the end of the day,
I still need to be able to go on and watch YouTube.
I still need Netflix.
So Aiki, is it your impression really that my question is maybe out of date
and really the end user doesn't give a shit what the underlying distro is?
And as long as it watches YouTube and reads Facebook
and does Gmail and Google Docs and Office 365 and Chrome or Vivaldi,
is it in your impression that that would be what all that really matters?
And if you create the own,
I guess what I'm trying to ask you is,
do you feel like when I look at your distribution,
I think to myself, well, geez, there's all these packages not available.
But it sounds like to you, that's not even a concern at all.
No, I understand a lot of people are going to say it's like,
well, you're building this from scratch.
You've got to make all these packages.
And that's going to be very, very difficult.
So we've tackled quite a few problems with the whole packaging situation in Solus.
It got to a point, it was probably about six months back,
we say, right, all this manual packaging is a complete and utter pain in the backside.
And so the simple answer was, automate the shit out of it.
So I'm going to, I'll give you a link there now on IRC so you can see it yourself.
Okay.
Because here's where I'm going with this is, I mean,
I guess, Ike, what I'm trying to get to is,
is this maybe coming down to a philosophical difference?
A fundamental, different expectation from who you're creating this distribution for
and maybe who would normally consider themselves an advanced Linux user.
And the reason why I bring this up is I want to introduce you,
and of course, I'm sure you're aware of it too,
Velt OS, which is using your desktop environment but built on top of...
Arch Linux.
Arch Linux.
And it promises you everything Arch has with the rolling base, the AUR,
but yet this new nice... The package manager that many people already know.
But with this nice new desktop.
Oh, and of course, the Vivaldi browser as default.
What are your thoughts about Velt OS?
And this seems like a natural kind of open source thing to happen
when you have a pretty compelling desktop,
but a base that maybe is not appealing to the more advanced user.
Your thoughts, sir?
Sure. I mean, you've got, I say this to everyone.
People say to me about, why didn't you use Pacman for Arch?
And to sum it up in a statement,
I don't care about package managers.
Okay.
The fact that people still care about them in this day and age
is nothing short of disturbing for me
when we're saying that Linux has no mainstream adoption,
yet it must have the most advanced package manager of rollbacks,
it must have user repositories, it must have exit compression.
Nobody should actually be caring about that in this day and age.
They want Linux to actually get somewhere on the desktop.
So in the case of Velt, I mean, that's built on Arch Linux, that's great.
I'm actually concentrating on building something
that focuses on working from the ground up.
So the user never has to mess about with anything.
At the same time, I don't want to make something
that's completely condescending to the point
that it's holding your hand the whole way through.
So you were talking about philosophy.
Some part of it is philosophy, the fact that it will get out of your way.
And the other part is that no distribution actually exists
that is optimized for a desktop experience.
Everything is shoehorned because you take a generic distribution
and you try and apply it to the task at hand,
which we've already shown doesn't work.
Now, as for Velt OS, yes, they're using Budgie Desktop at the moment.
They've claimed that they're starting their own new desktop.
There was a bit of attention about this on Softpedia, as I'm sure you saw.
Initially said that they were forking Budgie Desktop.
They later retracted the statement to say that they wasn't forking Budgie Desktop.
Now, I went along and looked into their package repos.
I looked on GitHub.
They renamed the package to VOS Budgie Desktop and made another change to it.
The mock-ups they've put up in their community,
I mean, I'm not going to insult their mock-ups.
They're not quite my thing, right?
They're not quite for me.
I follow your lead.
But they've never at any stage ever approached us
about getting changes made in Budgie.
So they themselves are showing their own project immaturity
by attempting a fork and then, you know,
then going back and saying, oh, well, we're not forking now
because they was made to look stupid, to be quite honest.
Everyone was saying, why are you forking it?
Well, we're not forking it.
That's OK.
But had they just approached us upstream and said, you know,
these are the changes we're going to put in,
even the Budgie Desktop in its current iteration
supports applets, and it can be built out of tree.
It has an API.
You can develop your own plugins.
You can develop your own applets.
There's absolutely no need for a fork at all.
So if it was another project, I would say, OK,
maybe you've got something going.
But I don't quite see it.
So you feel pretty soundly that the entire,
in order for the desktop experience
that you're trying to create, the entire thing
needs to be a complete package.
It's not abstractable.
You can't really remove the desktop from the underlying OS
because the underlying OS is fundamentally
built to sort of support what the desktop is
trying to deliver.
Am I following your basic logic?
Well, I mean, if you really want to go and remove it, you can.
That's not a problem.
I mean, we've got normal shell and repos.
We've got GDM.
So you can switch to desktop if that's up your street.
But I mean, out of the box, nobody
has to worry about a package runner.
That's kind of the idea we're getting to.
It's an operating system.
You run daily.
It looks after itself.
And this has kind of been my problem
with distros and operating systems over the years.
We have all these workarounds that we put into place.
We have these config files that we go edit in.
We have these packages.
We go add in because we know that they add the functionality
we need.
Or we have these set fixes that we know always work.
Yet the distribution of the operating themselves
never does anything about it for you.
Now, my argument should be it's an operating system.
So it should operate.
It should actually do what it knows how to do.
And I don't see any distribution like that.
And that's my argument against any current desktop
distribution.
They don't look after themselves.
You have to maintain the distribution.
You have to maintain the distribution.
It doesn't maintain itself.
What is sort of the, you know, let's just say,
let's say you managed to beat Santa.
And as an end user, something I might want to install
on my machine arrives.
After it's installed for a bit, what does the update picture
look like?
You know, a few months down the road, a year down the road.
What can I expect as sort of a long-term maintenance
of my Solus rig?
So in terms of support, what we decided to do,
figured it'd be kind of an effort to have like one
release and then an LTS release.
And to be honest, I'm going to lose count.
And I'm not the best fellow with numbers.
So what we decided to do is we'd do a release.
We'd do that release each year.
And then each release gets a two-year support.
Because ones and twos are very easy for me to add up.
So every two years, you know, your distribution as it was
loses support.
But you've already had two releases since then.
Do you know?
So if I release this sometime in December, next December,
there would be the new release, which would be 2.0.
But the one you're already using would already
be supported for that next year as well.
Or you can upgrade.
Very nice.
That makes sense.
Some options, yeah.
Wes, any other follow-up questions
before we wrap up here?
What have you thought after using it for a bit?
You looked at VELT OS 2.
Was there something that struck you between the differences?
VELT did feel a little more bolted together.
You know, it's also very new where Solus has clearly
had a lot of thought.
One of the things VELT gets is sort of inheriting
sort of all of that work there.
But at the same time, I mentioned this in the review
on the Linux Action Show.
If you guys haven't had a chance to listen to it yet,
I wouldn't want to over-promote.
But you might want to go check it out.
I mean, you just might want to go check it out
before you finish listening.
You definitely should.
Yeah.
And in there, one of the things is I really
like the idea of something.
And I don't know if I really touched on it very well.
But what I really like is something
that's just I'm focused on the desktop.
I'm not worried about ARM and mobile and convergence.
I'm not worried about the server and cloud.
I'm not worried about any of that.
I am worried about kick-ass desktops
and kick-ass laptops.
And there is something about starting at the very beginning
with that intent and moving your project forward
over a series of years with that intent,
but not getting so, so, so, so far lost into it.
No offense to the elementary OS folks,
because they still do great work,
but not getting so lost into it that it takes literally
years for things to happen, which is just not happening
for any power Linux user.
So what SolOS seems to be trying to strike the balance of
is here's something that has a pretty fast development pace.
It really is truly targeted for your high-end workstation,
an engineering station, a development station,
a sysadmin station, whatever.
You know, a great porn machine, whatever you want to do,
it's targeted well for that.
And you know what?
Yeah, there's things called the Raspberry Pi.
Yeah, there's things called the Nexus 4
that you can install images on.
Don't care about that.
There is something about that intention
that appeals to me quite a bit.
What do you think?
Well, I think we see that space,
like just the number of developers
who end up using MacBooks.
You know, they want that desktop development
or desktop environment that gets out of their way.
They don't have to worry about package management.
So if SolOS can deliver on some of those things,
you know, at first I was thinking like,
well, you know, it's another package manager to learn.
A lot of people like to use Ubuntu on the desktop
because they use Ubuntu on the server.
But there's lots of people already who, you know,
use the Mac, use a different environment or Windows.
So if this can be the kind of desktop where you install it,
you don't have to worry about it.
You've got your shell.
You've got, you know, YouTube that works.
And also, it's very pretty and usable.
I could see that.
There's something bold about a Linux distribution
that's saying, yeah, we're for power users,
but don't think about the package manager.
Right.
There's something kind of bold about that.
I don't know how that's going to shape out.
I mean, I think we'll see when 1.0 is out.
But yeah, you can see how maybe it's time
we start talking and going that direction.
All right, Aiki.
Yeah, go ahead.
Feel free to jump in and tell us how we're wrong.
Well, so I mean, that is definitely one of the things
that I really don't care about the package manager.
Now, another thing to remember is Solos
is about having a stable core and up-to-date applications.
Which is a thing of mine.
I love that.
I mean, yeah, so I mean, we're using the example here of Arch,
right?
Arch Linux is a role in release.
So to give you an example, which many Arch users
have gone through themselves, you have to go into the block
because these binaries or these libraries are gone.
So you have to now move these files across,
which is unavoidable and it cannot be solved
by their package management.
So the package manager here doesn't mean nothing.
To put a nice label on a package,
it's a tarball with a bit of information.
It's just a glorified tarball.
That's all a package is, right?
So as much as somebody might derive from Arch Linux
and they might have our desktop on it
and it might make it very, very, very pretty.
At the end of the day, they're going
to run into these update problems
because it is a role in release.
Something like a libpng update, which breaks the entire system.
Now, I can imagine there's a few Arch Linux users around
who can remember that.
Or the rename of the JPEG libraries,
any one of those incidents.
So role in release already has a major disadvantage
in a desktop, which is aimed at not just Linux users,
at people who just want to use their computer.
They're not going to be able to fix that.
So yeah, that's kind of our take on it.
In terms of adding packages, we're one of the easiest,
if not the easiest, distribution going to package for.
The average package meter information file that we have
is probably about 30 lines.
Most of that's auto-generated from a tarball.
So adding a package probably takes a couple of minutes
in our distribution.
So if somebody wants something, we'll add it.
The thing is, we're not going to go around looking
for the packages to add.
Because at the end of the day, I don't know what people use.
I don't really feel like you need to defend it.
It almost seems like in a year or two,
it's going to be obvious.
And you just might be a little bit ahead of the curve
because you have the XGG app stuff on the GNOME side.
And also, the KD guy has been talking
about containerized applications that are easily
portable between distributions.
You now have folks like Valve that are shipping
Steam with the Steam runtime environment where you install
Steam on Fedora and OpenSUSE and on Arch.
And what are you actually getting?
You're getting an Ubuntu runtime inside your Steam folder.
And they're making this possible now by saying,
target these libraries.
We guarantee that if they have Steam installed,
they'll have these libraries because we're
putting them on the system.
And I think when you have commercial vendors that
are coming up with solutions like that,
you have the open source guys that
are looking at things like XGG app
and containerized applications.
It is being solved by multiple different sources and forces.
And you don't have to really worry about that problem
maybe in a year or so.
Right.
And that's one of the things I've been trying
to get across a while for people.
So I mean, one of the things we have to accept as a project,
I mean, we're coming up for a 1.0, right?
Most people are like, who the hell is Solus?
Never heard of you.
Don't really care.
So we have to acknowledge the fact that we
will have a 1.0 come out.
This is the distribution Solus come in and out and say,
hello, we exist now.
You should probably get interested.
Yeah.
Which is something you have to accept.
I mean, you've got to put your foot in the door somehow.
But when it comes to 2.0, I mean, one of the things
we're working towards is making Solus stateless.
It's one of the things I've actually adopted from work,
which basically means there are no configuration files
by default.
There are no overrides.
Everything is the same default.
And it would quite literally mean your ETC tree being empty,
which is something worth thinking about there, right?
Another thing I want to do when we come up to Solus
2.0, which I can't do at the moment,
because we have to get the distro out there.
We have to get people to know it.
They have to say, this is Solus.
Look what we do.
We're very pretty, aren't we, right?
You have to do all that sort of thing.
But for 2.0, I mean, you're going to be seeing
a complete separation between the operating system
and everything that you have.
Because as far as I'm at, the best example I can give,
like the 3.18 update that I put in for Gnome.
Now, that was to put the new user land applications in,
because people want the new pretty knowledge.
They love all that shiny stuff.
Thank you, by the way.
Oh, no, it's absolutely fine.
Google Drive as well, why not?
But people want all that stuff, which is absolutely fine.
But at what cost?
That should not break the operating system.
Now, in our case, Budgie would be considered
part of the operating system.
That's the stack in the shell that everybody gets, right?
Now, that should not be broken.
So when we go towards 2.0, you're going to see
a separation between that.
Applications will be out in the user's control,
but you won't be able to break the operating system.
So an update to an app won't break the OS, and vice versa.
The OS itself wouldn't break the apps,
which I think is something that really
needs to start happening for something
that wants to be mainstream and a desktop.
Well, that's very ambitious.
And I would love it if you would check back in with us
from time to time and give us an update.
I've also been following the blogs, like the weekly,
like number 11 just got posted, I believe,
which has kind of been giving some good insight on updates.
Exactly.
So Aiki, thank you very much for coming on
and sharing with us.
And I'm going to keep checking it out.
I now have it installed.
And I don't know, maybe one day.
Yeah, JB community, do the same.
We'll go out, try to break it.
Could be the distro of choice one day.
Check back in.
Do make sure and break it.
And while you're at it, make sure you keep an eye out
for Budgie Next, which is the replacement for Budgie,
which is very, very, very sexy, by the way.
It has a notification center as well.
That is, I mean, that is honestly looking like it's worth
its own episode to discuss because the video that was
posted looked very nice.
Yeah.
Yeah, it's definitely.
And we have links to all of that in the show notes.
All right.
Aiki, you are welcome to stick around.
Thank you for coming on the show today
and telling us about that.
Before we move on to the last topic, which I hope,
I hope doesn't get me fired from the show.
Hopefully the boss doesn't fire me.
But before we get to that, I want to talk about our friends
over at Linux Academy.
Now, Linux Academy is a platform built around educating you
around all of the technologies that make Linux a really
awesome platform.
Of course, Linux itself is good.
And there's tons of stuff you could learn just there.
So go to linuxacademy.com slash unplug to get the Linux
unplug discount.
Linux Academy is not like, I don't even want to point you
in the wrong direction.
But let's just say, I don't know if you're familiar
with this, Wes.
But there are a lot of resources online for learning.
Yes, there are.
Yeah.
And a lot of them have what you might call features that they
just kind of throw on there.
It's more like a kitchen sink kind of thing.
There you go, Wes.
That's not the Linux Academy.
It was created by people that are actually genuinely
enthusiastic about Linux and open source.
And then they have the idea, well,
why don't we just pair up with our friends that are educators
and get some professors in here.
And then we have these folks that we
know that are developers.
They could create this incredible platform,
and they've done it.
And for me, one of the key features about Linux Academy
is you log in and you can look at all of the courseware
and all of these things that are sort
of mythological technologies or skill sets
that you've only dreamed of before are now
all of a sudden quantified in hours and your commitment.
And that is really a powerful situation.
Go to linuxacademy.com slash unplug to see
what I'm talking about.
They've got almost 2,000 self-paced courses
with instructor help available.
Seven plus Linux distributions you get to choose from.
The courseware automatically adjusts,
and so do the virtual servers.
I really like that aspect because they
realize it's not just a Red Hat world or a Debian world.
Or an Ubuntu world.
Thank you, sir.
There's seven plus distributions
you get to choose from.
They have scenario-based labs, which are really kick ass.
You get to go in there and do something
that's like something you would do actually at work.
Which, what a concept, right?
But they really have thought this out.
Also, they recognize you're probably
going to want to work on this stuff
through an SSH connection from your desktop.
So you can just bring up your favorite terminal application.
You can SSH into a DNS name.
You get access to these things.
If you're doing AWS training, they'll
spin up the AWS rigs for you.
It's really cool.
And also, one of the things that I respect
as somebody who gets super busy with three kids
and my own business is they have an availability plan.
You can log into the dashboard and tell Linux Academy,
basically, I'm going to follow the Jupyter Broadcasting
calendar and make sure I watch every live show.
And every moment where Jupyter Broadcasting isn't live
make me available.
Or I've got a lot of work and Thanksgiving this week,
so I'm not available on Thursday.
I'm going to take Friday off.
But you know what?
I might dedicate four hours on Saturday
and an hour on Sunday evening after everybody
goes to bed.
You go into Linux Academy, just kind of give it
your availability, and it will automatically
generate courseware that matches that with quiz reminders
and all of that kind of stuff.
It is really cool.
Also, they've done a whole new update on their CDN,
so things are faster than ever.
They're downloadable, comprehensive study guides,
the audio stuff, and the video distributions you can watch.
I've heard from several people now
that listen to the Linux Academy stuff in the shower.
Wow.
Specifically.
Huh.
I mean, you might as well learn something
while you're getting clean.
I'm not making this up.
Like, at meetups, even when I was at Denver,
he's like, I'm another guy that listens in the shower
to Linux Academy.
Like, add me to the list.
I don't know, maybe, you know what?
Maybe, have you ever heard of shower thoughts?
Yes, I have.
Yeah.
What if it's not just like really great ideas
when you're in the shower?
What if it's like your brain is in overdrive
and you can crazy learn?
What if that's what it is?
Because I'm not kidding you.
A lot of people have told me they listen
to Linux Academy in the shower.
And I'm trying to figure out what's going on here.
And now I'm realizing shower thoughts plus training,
oh my gosh, linuxacademy.com slash unplugged.
Go learn all of the fundamental technologies
that make Linux kick ass.
And when you don't have a lot of time,
they also have dim nuggets.
These are just like deep dives into a specific area.
Like, here's one on managing iSCSI,
which you probably are a total expert on
and don't need any help, I'm sure.
But maybe if you wanted to be set up
an HTTP secure proxy over SSH or do some SSH tunneling.
And you do want to.
I mean, if you don't know how now,
just go learn it right now.
Again, these are nuggets.
And look at this list.
This list is cray.
Everything from reverse tunnels
to setting up active directory under Linux.
I'm telling you, they've got it all.
So go check them out at linuxacademy.com slash unplugged.
And a big thank you to Linux Academy
for sponsoring the Unplugged program.
And I hope you guys go eat a whole bunch of turkey.
I know some of you guys will be at least.
Go put, and gals, go put some turkey in your face.
So Wes, kind of a big moment happened this week.
I don't know if you noticed,
it might have, you might have missed it,
but GNOME turned 20 years old this week.
20 years old.
That is impressive.
Yeah, it is, man.
It's been with us for a long time now.
And it's brought many interesting fundamental technologies
that we now use on the Linux desktop today.
So it's kind of a big deal.
And there's a lot still coming to GNOME in 20 years.
Also, another milestone this week.
LibreOffice hit a thousand contributors
going from September 2010 to October 2015.
A thousand developers.
And they have some interesting stats too, you know?
They pretty much added 16 new hackers a month
since September 2010
as a result of a global mentoring effort
by some of the project founders.
And after five years and a thousand new developers,
they are sitting in a pretty good position now.
And they have wide distribution.
They're really well known.
Default install on many distributions.
And yet, both LibreOffice and the GIMP
have really failed to unseat
the industry professional products,
like, you know, Adobe Photoshop or Microsoft Office.
20 years of the GIMP.
Is it time to just admit that sometimes
open source will never be a completely competitive replacement?
Wes?
Well, I think there's something to that.
I think you can also frame it in a couple different ways.
And I think one way to look at it is that, yes,
I mean, there are some reasons that we really should all talk about.
You know, that maybe this is the case.
But I think the other way to look at it is that
maybe it's not as competitive.
Maybe it doesn't meet the high-end business needs.
You know, maybe professionals aren't using it
for their day-to-day workflows.
But we do have a very successful, you know, free application
that is kind of the right of any human to use, right?
Like, as part of a free society, I think we need these essential tools.
You know, you get a free operating system.
You can get this free image editor.
And, you know, if you have a business case,
then you have to shell out for something more.
Let's say after 20 years,
GIMP manages to get to 80% of what Photoshop can do.
Well, then, essentially what you're saying is you flip that around,
and that means that 80% of humanity now has access to
a fairly competent photo editor.
Yeah, right. I mean, it doesn't matter what you make,
how much resources you have.
If you have access to a computer, you can do these things.
You can edit your photos. You can touch things up.
You know, I think that's success.
I do agree that we need more pressure to reach the higher-end features.
And I think that we could unseat some of that market.
It's obviously not happening.
Apparently, I said no at some point instead of GIMP.
I have no idea. Who can keep it straight?
I was thinking, obviously, so much of GIMP and GTK are closely connected.
But does anybody in the Mumble Room have any thoughts on,
here we are 20 years of GIMP,
and it's still really not quite there yet for pretty much any professional use.
I've dreamed for the day that I could switch my mom,
a professional graphic artist, to GIMP.
Yeah, I think we all have.
And it's not there yet.
So, Rottencorp, you and I were chatting about this on the pre-show.
What are your thoughts about it, looking at it sort of from a design standpoint?
Well, yeah, I'm actually a professional designer, and I use Photoshop.
In an ashamed situation where I don't want to use Photoshop,
but it's the best option, so that's why I use it.
And it's not necessarily the fact that they haven't been pushing it enough.
It's mostly the fact that GIMP's problem is that the people who control
the future of GIMP don't care about community input.
So there's been multiple forks that have created things like layer styles
that has been one of the most important things that people wanted from Photoshop.
People wanted from Photoshop in GIMP for a decade.
It has actually existed since 2008 as a plugin,
but GIMP refused to actually look into it at all to give it as a standard.
And there's other things like that, like CMYK also exists as a plugin,
but again, they refused to put it in the main system.
And it took 10 years of people complaining to GIMP
to get them to do a single window mode, and they don't even do it by default.
So majority of people who use GIMP don't even know that there is a single window mode.
So it's mostly the fact that they have a vision.
If you don't agree with it, they don't care.
And that's what the biggest fundamental of that is the leaders of GIMP are not making progress.
And they have such a huge market in the open source graphic world.
There's not really any competitors against them because they just kind of take over.
So I think it's mostly they don't really want to progress it as much as it could be,
but also they've already taken so much market away from the people who could do what
the whole community wants that they kind of give up and the developers just go somewhere else.
Poby, I wanted to hear from you because I hear what Rotten Corpse just said and I thought,
okay, I think where a lot of us have been is you've got to throw everything behind GIMP
because so often in the open source community it's fork, fork, fork, fork.
Everybody's got a revolutionary idea and we constantly are rebuilding the foundation
and never actually getting to that end user polish.
And I'm curious what your take is, Poby.
Here we are 20 years after GIMP.
Have we sort of all been betting on the wrong horse?
Is it just something a matter of wait another 20 years?
What do you think, Poby?
So this is a tricky one because I'm not a designer. I opened GIMP and I use like three features out of GIMP.
And it works for you, right?
Right. All I do is set the color levels on a picture of my cat and then
unsharp mask and then export it out as a PNG.
Great post by the way this morning. That was a good one.
Thanks very much. Yeah.
He's very photogenic, my cat.
So, you know, I'm not the best person, but in an open source community,
in an open source in general, I think part of the problem is, you know,
we just don't have enough people working on the thing.
You know, I've mentioned before that hundreds of people at Samsung who work on, you know,
one particular component of their platform or the hundreds or thousands of people at Microsoft
who work on one particular component.
We've got people who are not necessarily working on this in full time, but part time.
They're doing a job, then when they get home and, you know, put their kids to bed
and have made food for the family, then they start hacking on free software.
Or after they finish doing their studies, they're hacking on free software.
Who are we to tell them that they're not doing a good enough job?
And Wimby, I want to give you a chance to sound in here too.
Do you feel like really in the big picture GIMP is actually good enough?
Well, again, I'm not a professional graphics designer,
so you're asking the wrong person.
No, actually I think...
A bit like Popeye, I'm more of a super user because I use four features from GIMP.
This is sort of perfect, right?
This is sort of Wes's premise is that really if GIMP gets 80% of the way there,
then that means it appeals to 80% of the users, which is kind of a big deal.
So I'm kind of curious to hear your take as a non-professional designer.
Yeah, no, it does a job for me.
I always install it as the go-to graphics editor on my Linux workstations.
And I think most of my difficulty with using GIMP comes from the fact that I don't know how
to drive graphics applications in the first place.
It's not that GIMP is hard to use, I just don't know how to do it.
So I always have to go and Google, you know, the more complicated things.
But, you know, and the other thing to think about GIMP is if it wasn't for GIMP,
we wouldn't have GTK.
Thank you.
Yeah, yeah.
And that was sort of what I was implying earlier.
The G in GTK is GIMP, it's not GNOME or GNU.
Right, yeah, that was what I was getting to earlier, sort of implying that.
And Rodin, go ahead.
As somebody who, you know, thinks about this probably a little more than most of us do,
since we're not super power users in graphics, you have a chance to respond.
Go ahead.
Yeah, well, I just wanted to say that, wow, I think GIMP is atrocious for professionals.
Not in the sense that it's, you know, when I say they're not professionals so they don't know,
it's not that it's bad, it's that it's fundamentally garbage.
When the methodologies that for normal proper technique of design are impossible to do in
your application, it's fundamentally crap.
You think it'll never, you think it will never serve the role that the professional needs them?
No, actually, I don't.
I think the fact that it took 10 years to just get everything in one window means that the fact that
I want non-destructive editing and I want the ability to have CMYK and I want layer styles and
smart objects and all these different things for multiple composites, that there is probably
a minimum 10 years more for one of those.
Are you going to pay a developer to do that then?
No, I have Photoshop.
No, but you say, I want this, I want that.
You can't just like rock up to the door, knock on the door of the GIMP developers and then say,
I want these things.
You should do it because I want it.
I want to create, I will happily put my money in where my mouth is for having a GIMP
is not going to be that because GIMP, the people who are behind GIMP don't want to be that and
have specifically said that they have no intention of ever actually competing with Photoshop,
which is fine.
It's their decision.
That's fine.
But people should stop comparing them because they're not even remotely close.
That is actually, that is actually just a posse right there.
An interesting point.
You know, I'm not going to say that I'm not going to say that I'm not going to say that
I'm not going to say that I'm not going to say that I'm not going to say that I'm not
going to say that I'm not going to say that I'm not going to say that I'm not going
to say that I'm not going to say that I'm not going to say that I'm not going to say
that I'm not going to say that I'm not going to say that I'm not going to say that I'm
not going to say that I'm not going to say that I'm not going to say that I'm not going
to say that I'm not going to say that I'm not going to say that I'm not going to say
that I'm not going to say that I'm not going to say that I'm not going to say that I'm
not going to say that I'm not going to say that I'm not going to say that I'm not
going to say that I'm not going to say that I'm not going to say that I'm not going to
workflow, but people chose to dog on me for the wrong thing.
What I took away from that was there are a great amount of tools on the Linux desktop
right now that we constantly get stuck in the mode of comparing to the proprietary alternative
like Final Cut or Adobe Premiere or in the case of GIMP, obviously Photoshop.
We constantly are doing, well this is not as good as that.
Photoshop is an incredible program with a massive legacy that appeals to a niche.
It's market.
I mean, that's the company for designers, so they have all of the resources there.
Wes, what I've been reflecting on is, so on Sunday's episode of the Linux Action Show
coming up, because of the holiday, we wanted to talk about some open source projects that
we are genuinely thankful for that have improved our lives.
Well, that's a good idea.
Yeah, so we're going to do like a thanks to open source.
We haven't done it for a few years.
In fact, I'd love to hear the audience's ideas if you want to go to linuxactionshow.reddit.com
and submit them, but one of the things I was reflecting on about all of this really is
if GIMP never ever is a serious alternative to Photoshop for those really high-end power
users or designers, that is perfectly okay.
When we're talking about something that is open source in GPL, we are literally talking
about something that is available to humanity as long as we want to make it possible.
Photoshop, even though it's going to be a market-dominant thing for 30, 40 years, it
may be around for 60 years, GIMP is literally available to humanity as long as we want it
to be available and it can continue to get better.
The thing about that is if it is appealing to 80% of humanity and it is available to
80% of humanity for as long as they want it for absolutely free, if they can just get
to the internet, it fundamentally offers something that Photoshop can never offer and can never
compete with.
When you think about it at that level, I'm pretty damn thankful about that.
That's pretty cool.
Yeah.
I mean, I know I've definitely needed something in a pinch.
I don't have time to, if I was willing to even pirate or buy or any of the options that
people commonly employ.
I can just get GIMP.
I know it will work for what I use it for.
I think you just nailed it.
I think GIMP just has to continue to iterate, honestly, as long as the project handles new
leadership and brings in new blood.
That is essential, yes.
They can get another 20 years and if they can get another 20 years, then they can just
slowly continue to iterate and yeah, it does suck for those of us in 2015 that want it
all right now, but it is something that's going to be available for a very long time
and they can continue to make it better and better and better and maybe one of the places
they'll get to is instead of it becoming commonplace to pirate Photoshop, a proprietary crap application
that locks your freedoms down, maybe you just decide to go get GIMP instead.
Even if they just got, and I think they're damn well close to it, even if they just got
the status of instead of stealing Photoshop, go download GIMP because if you're the kind
of person that's stealing Photoshop, you probably don't actually need Photoshop to do your job
and so you could probably use GIMP and as long as they can get that reputation, which
I think they're damn close to already with the common person, then it is actually a very
serious thing.
I think it's pretty cool and you know what?
Also, we were dogging on LibreOffice, I feel bad about that.
If you don't like the way LibreOffice looks, which is kind of where I was going, I think
LibreOffice is an awesome project, I hope you guys don't think I was dogging on it,
I think it's very awesome and I used to work in school districts, trust me, I understand
how revolutionary it is.
We have a link in the show notes if you'd like to get involved in maybe sprucing up
the look of LibreOffice.
Yeah, I mean that's the thing, it's our project, right?
It's everyone's, so if you want it to be something, go help.
We got a link in the show notes to help out the LibreOffice project to get another thousand
developers.
Alright everybody, well thank you so much for tuning this week's episode of Linux Unplugged,
we'll be back here on Tuesday, go to jplive.tv to watch us live, jupyterbroadcasting.com
slash calendar, linuxactionshotoutreddit.com to contribute, see you next week.
And shove some turkey in your face.
Oh!
Nom nom.
Yeah, happy Thanksgiving everybody, see you next week.
I will answer Wimpy's encoding questions if he will answer, I have a very, I'm gonna
be very ignorant here.
I'm very ignorant, I don't understand why Canadians have Thanksgiving, do people outside
of the US also have Thanksgiving, is it just a North America thing?
No, just you.
Okay, alright, so what do you guys do on Thursdays, you're just super annoyed by all of us Americans
talking about?
It's a normal day.
Yeah.
That sounds lame.
I think all the retailers over here have started doing Black Friday, which is ridiculous.
Yeah, yeah.
That needs to stop.
Yeah, I apologize, I bet it is extremely, extremely annoying.
Okay so...
It is because there's never any offers, it's one of these things where everyone says there's
these big bargains and you turn up and it's like, you know, a bunch of tennis balls and
some string or something.
You know what you ought to do?
They're doing it in Germany now too, it's just, it's wrong.
You should just come to the US on Thanksgiving, because here's two things, we really know
how to eat, and man do we eat.
And the other thing is, besides Christmas, it's like the only other day of the year where
everybody's nice.
So if you ever want to come to the US, they will share with you.
You actually want to have a good experience, you come on Thanksgiving, everybody's nice.
So it...
Chris will have turkey for you.
Yeah, oh yeah, that's true.
That's true.
Speaking of coming to the US, I've just booked my ticket to come to scale, so are you guys
going to go to scale?
You know, so, boy, we're actually thinking about not going to scale because...
Fine.
I know, well...
Because you're going to be there, Popeye.
The timing in January is real bad, it's real bad.
And the thing is, it's because we do a big show at Linux Fest Northwest and I have limited
funds so I kind of have to pick and choose.
But the other thing is, scale is a great show and it's a really good show to go to if you
don't go to all the other shows.
And if you go to all the other shows, scale is just a bigger version of all the other
shows.
But the thing about the other shows is they're a little more intimate, a little bit quieter,
and a little more focused.
So from terms of content and actual access to the people, we get better results from
some of the smaller shows than we do from scale.
So I'm still kind of like, I'm like 90% decided, but I'm still kind of on the fence about it.
Scale's almost getting, I don't know, like overdone?
I don't know.
I don't know.
I don't know.
I think there's like, so we're having an Ubicon summit thing for a couple of days along with
scale and I think there's like 20 or 30 of us flying over there, which like never normally
happens, but there's a whole truckload of canonical people coming over.
Yeah.
You know, I'm still considering, I am, it is a part of me.
Not that that's a selling point, just...
It would be nice, you know, I hadn't, it would be nice to just say hi to people in person.
That would be a nice thing, but it's all these other events are really nice and they're really,
you know, genuine, connected, like personal events and so, I don't know, if scale was
after Linux Fest Northwest and then I knew how financially devastated I was from Linux
Fest Northwest, then it would be easier to plan for scale because I could just plan accordingly,
but because scale comes before Linux Fest Northwest, I can't sacrifice Linux Fest Northwest
in the name of going to scale.
I don't know.
It's a difficult situation.
It is a difficult situation.
Isn't Linux Fest Northwest like on your doorstep?
Can't you just like rock up in your trailer?
Right.
Right.
But when you...
But he has expectations there.
Well, here's the...
Well, like last year we...
Lazy, lazy...
No, no, no.
See, last year we flew the whole crew in and we did dinner and rooms and, you know...
It was demands for scale.
A live event, right?
So it was a major expense for the network because, you know, mostly all these people
are never actually here.
So to actually bring everybody together in one place was actually a rather expensive
investment.
That was...
Oh!
Oh!
So then, okay, so we're gonna talk about Solus, which, am I saying Solus right?
Yep.
Yeah.
Solus.
Solus.
And how do I say the desktop?
Is it budgie?
That's what I...
Budgie.
As in the bird with wings.
Cute little budgie.
The...
Like a birdie?
Birdie?
Birdie?
Yeah, perky.
Like the bird...
The bird budgie.
I don't fucking know about a budgie bird.
I know about crows and blue jays, I don't know about a budgie bird.
I know bungee software.
I know bungee software.
I know that pretty well.
No, budgie.
No, budgie.
I don't know about a budgie.
I don't know about a budgie.
This is not a list of approved birds.
It's the kind of bird you'd have in a cage in your house.
I don't know about a budgie.
Okay, I accept it's a thing, but I've never heard of it before.
And I...
I have...
Bless you, Chris, and your lack of knowledge of the world.
I know, I know.
But here is the thing.
You know what I have heard of a billion times over?
Bungee software!
Like, haven't you guys...
Come on, you're a bunch of kids.
You know what?
You're all a bunch of kids.
That's what it is.
Kids and their budgie birds.
I used to have a budgie.
All right, somebody link me, I want to see what this damn bird looks like.
You know what it is?
I just don't give a crap about birds.
I mean, the birds that fly around are great, but I always feel like the birds in the cage
are just super annoying and loud and they poop a lot and they're not all that fun to
look at.
What about penguins?
I'm telling you, birds in the wild are great.
That kind of bird I can get down with, but the birds that are just in a cage have never
interested me at all.
I don't know.
I don't want to expand...
Okay, you guys...
It's another name for the common pet pair.
Yeah, okay.
Yeah, I've seen that ugly ass bird that doesn't...
That looks like a stupid bird that poops a lot.
Yeah, I've seen that bird.
I don't know why you...
I'm sorry, I can't...
I don't know why you bang your desk up after that.
That bird looks like an asshole.
Well I made it.
Of course it's gonna be an asshole.
Perfectly done.
Perfectly done, perfectly done.
