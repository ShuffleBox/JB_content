You've got a workstation with drives in it that has ButterFS, is it a RAID or is it just
straight drives?
It was a single disk with ButterFS as the root file system and my home partition was
on that same root disk.
Anything fancy like LZO compressor or anything like that?
Everything that you covered in your recent ButterFS article, I've been doing that for
two years.
Okay, alright.
So now, as it happened, fate came to calling and I lost the drive.
So I was able to actually restore from backups and I was determined not to lose my Arch install
that I'd been nurturing for two years.
This is where I'm at right now.
So I R-synced the whole thing over and there were a few files that were complaining that
they were lost sectors and what have you and it was mostly Firefox cache and stuff like
that.
So I went with it and I bit the bullet.
So what I've done is I've got two drives now in that machine, an SSD for the root file
system which is ButterFS and LZO compression and all that good stuff, but a second spinning
disk which I'm using for my home drive and I've put XFS back on that because I trust
it.
See, this is what I was wondering is if XFS isn't maybe the way to go.
Until I experimented with ButterFS a couple of years ago on Arch, I've used XFS on everything
for donkey's years and it's never gone down.
Yeah, you've been wimpy.
XFS all the way.
Yeah, it's pretty good.
Yeah, I mean XFS back when I really cared about it and also because I needed extended
attributes XFS was the way I went.
This time around, it's like Linux needs an answer to the ZFS problem so bad and I think
it's way worse than as a general community we acknowledge it.
CPU comes from a large server storage back end.
The benefits of ZFS and just sort of like the brand that it is now accumulated so you
just say the name ZFS and people kind of associate a lot of factors with it.
Just that alone is going to deploy more free BSD than I think we've seen in a really long
time and so for me, my take was well here I am, I'm doing these shows, I want to live
in Linux's answer to ZFS, I want to experience it and now I'm a year and change into it and
I'm pretty disappointed in the result.
So it sounds like Wimpy, your solution was copy it off in the format.
Well because the disk that it was on was dying but yes I took that as an opportunity to actually
switch to XFS and I was thinking of doing it anyway and your whole thing there about
ZFS is quite correct because I run a completely Linux data center except I've just bought
two stonking TrueNAS devices because of ZFS and Linux doesn't have an answer to ZFS and
I think Linux's answer to ZFS will actually be ZFS and I can't see that ButterFS is going
to because apart from anything, despite the fact it's flaky and it is flaky because every
time you look at the kernel revs, you'll see that it's fixing corruption issues and things
of that nature.
The fact that the built-in tools can't properly read it, it's supposed to be the native file
system Linux and yet and I know it's for technical reasons DF isn't aware of reserved blocks
and things like that but it boggles the mind.
It seems so disconnected and I just can't get over it, it just seems like such a disconnect
and it's so disappointing because there are aspects of using ButterFS that I've enjoyed
like the performance, the compression has been quite good, the feature set I feel like
you get does not have a huge performance penalty, of course I've been using it exclusively on
SSD so I probably shouldn't make that as a proclamation but at least in my experience,
I've got an incredible feature set with very little overhead on a system that has been
fairly good except for these final problems that I've now reached to do and the problem
is these ones, there seems to be no solution other than reinstalling.
The issue with this is, and this has never really been a problem for me before, is this
is really like the one install, I really don't want to reinstall because I really, you know
I haven't had a Linux distro that maybe lasted a year or more, I usually nuke and pave even
just to test things out for the show but because of the hardware setup I have now, I've been
able to keep this thing dedicated to it and it's nice.
Don't reinstall, I didn't have to, get yourself a second drive.
I mean I know I could, I know that's the part I'm not looking forward to.
So Chris, I have a mate who works on Butterfess and he suggested that wiki article and I just,
you know I'm not teaching you to suck eggs or anything but have you gone through the
steps on that which is quite clearly for people who are in your situation?
I think so.
In fact I think I...
The only way you're ever going to stop Butterfess from taking too much goddamn space is turning
off copy on write.
Yeah I know.
The only feature is basically everything that takes up all the space.
Unfortunately that's one of the big huge benefits of Butterfess.
Yeah exactly.
I don't think so.
I don't think so at all.
Well maybe not.
Maybe I should change my mind about that.
I did, so when I first started running this problem about a month ago, I did a Linux action
show special on like Butterfess and this was one of the things I went through and I did
like initially reclaim like 10 gigabytes of space.
I was really stoked.
In fact I even installed another Steam game to celebrate and then quickly that has already
gone back to like only one or two gigs free and then I do a scrub or I do a defrag and
then it kind of frees like one, two gigs free and so like every time I keep going back through
and take another pass at it and I try something to clear up space or I delete something, clear
out the package cache or you know or whatever.
So if I disable copy on, I haven't done the disable copy on write though.
Every Butterfess installation I do, I always disable copy on write.
Can you do that?
You might as well not be using Butterfess at that point.
Well but then you still get compression and trim, you still get compression and deduplication
and trim.
I don't use dedupe but you get it.
So that's not bad.
Well use F2FS then in which case.
Well it's actually funny, all you guys want to use ZFS but here I on purpose don't use
FreeBSD because the ZFS progs package is not good enough and up to snuff.
I stay on Linux because of XFS even though I philosophically like FreeBSD better.
So you think, so why are you running Butterfess with copy on write disabled if you could just
use XFS?
Testing.
That's all testing.
I generally use XFS for all my actual installations.
Yeah, yeah, yeah.
Okay.
That's kind of why I put it on there.
And the reason I still run Butterfess in the root drive is because when I'm doing rebuilds,
the way that the Arch build tools are set up is if you're running Butterfess, you can
create a chroot and then clone from that rather than having to create a fresh chroot from
everything each time.
A bit like the way jails work so it speeds up the build process.
Hmm.
I certainly recommend dropping by hash Butterfess on because they are very good in there.
That's what I should do before I go too far, really before I go too far down the rabbit
store.
Yeah, don't wipe it or do anything.
Yeah, yeah.
If you actually want to save it, yeah.
Well what happens is I keep thinking, even though I've been using it for well over a
year, I keep thinking to myself, well this is Arch, eventually it's going to blow up
and when it blows up, that's when I'll nuke and pave and I'll just switch to a different
distro.
But the thing is it just hasn't blown up yet.
And so now-
Well, it's more reliable for me than people make it out to be.
My server is sat on top of my fridge and the repetitive slamming-
That's a great server spot.
Well, yeah, it's not, I know.
But it's the only space I've got.
Yeah, no, it's like-
The repeated slamming of the fridge door means that the eSATA cables have popped out of the
array on more than one occasion.
I SSH into my server and the file system has gone read-only.
I just go into the room and I just pull the cables out the back of the sata array, plug
them back in again and remount it and it's fine.
It recovers.
It's not a problem.
I have not had any data loss with ButterFS.
And there is the story of Canonical's build infrastructure.
No.
Oh, yeah.
No, I haven't had any data loss.
I'm thankful for that.
I loved the idea, but yeah, I actually-
So here's my question, and Heavens, I wonder if you play with this.
Once you disable copy on write, does it free up all of the blocks that it saved in the
meantime?
I'm not sure if it'll actually remove all the previous snapshots that it's trying to
keep.
Yeah.
But most of the time, or at least a lot of times with time, since it's B-tree based,
as you do your snapshots, the B-tree gets bigger and the depth gets broader and deeper.
So when you trim it, you're going to get faster because your tree, your B-tree, is going to
be a lot less deep.
And is scrubbing that trim?
Because that counts.
I'm not sure.
Yeah.
Okay.
So that would be something I might look.
You know, that sounds like questions to toss in the ButterFS IRC.
I like that idea.
Maybe I can get this thing fixed and not have to reload.
Welcome to Linux Unplugged, your weekly Linux talk show that's powered by guacamole this
week.
My name is Chris.
And my name is Matt.
Hey, Matt.
I had a little chips and guacamole before the show, and I thought, you know what?
I'm drawn from that today.
I'm drawn from that guacamole.
Hey, we've got a fun show coming up on today's episode of Linux Unplugged, episode 54.
We're going to have a little chat with Sam from the Mocha Project.
Sam's working to make Linux look a little better.
Not just Linux, as a matter of fact.
He's part of probably a new group of folks out there trying to bring a little beauty
to Linux desktop, and I think they're succeeding in a big way.
So I want to talk to him about what they consider to be a theme layer and how that works and
learn a little more about the Mocha Project.
We're also going to discuss a little bit of Linux-powered RoboCars.
That should be interesting, self-driving cars.
And then, using our mumble room as our counsel, we will have to discuss the situation in Munich.
The reports are going crazy this week that Munich is pulling back from their 10-year
initiative to convert to the Linux desktop, and that they'll be re-embracing Microsoft
any minute.
So we'll discuss that and maybe why it's not as dramatic as some, it would seem to be Softpedia
making it sound.
So that'll be all coming up in today's episode.
But first, like we do, we're going to start with our emails.
You guys always send in some great emails to linuxactionshowjupiterbroadcasting.com,
or go to jupiterbroadcasting.com and click the contact link.
You can choose unplugged, send it right to us.
So Heath writes in, we've been kind of covering this whole MacBook phenomenon that we noticed
at OSCON, and now elementary OS is targeting MacBooks.
So Heath writes in and says, hey everyone, I absolutely have and will again purchase
Apple computers with the sole intention of installing Linux on them.
Disclaimer, I'm a developer.
You summed it up perfectly, a laptop with a decent resolution, even 1080p, won't cut
it anymore.
I need the latest processor and SSD in a compact form, and you're left with a very short list.
I certainly don't agree that the Apple closed source walled garden vendor lock in philosophy,
but when it comes to high-end laptops, I haven't found anyone that competes.
I don't know if I totally agree with that, but I think it's easy to slip into that, especially
because the marketing is really pushed in your face.
He says, in regard to the similarities between elementary OS and OS X, all I have to add
is that while they may visually be very similar, they offer very different functional workflows.
I'm forced to use OS X for work, and I'm constantly frustrated with their outdated window and
workspace management.
Conversely, I'm annoyed with elementary OS, if I am annoyed, well, it's just Linux.
There's always a config file for that.
Obviously, everyone has their own preferences, that's why we use Linux, right?
We weren't happy with the status quo.
But if you dismissed elementary thinking it was trying to just be an OS X clone, I'd recommend
giving it a test drive, because it's really very different.
I agree with that ending statement, too.
I think some people do just sort of cast it off as an OS X clone and call it good.
Oh, yeah, no, it's much deeper than that.
There are other OS X clones that are much more clone-like.
This is actually trying to differentiate the experience from the ground up, I think.
Yeah.
A little follow-up on those Chromeboxes that Noah mentioned kind of bit him in the butt
last episode, I think it was.
Bryce writes in, he says, tell Noah, he can put those Chromeboxes into production.
And remember, Noah had this problem where the gal hit spacebar and reset the BIOS and
disable the ability to run the Linux, because she just wanted to move the power plug?
Well, he says, this script will flash the BIOS of a Chromebox, and then you can install
normal Linux.
My main PC is now an Asus Chromebox with eight gigabytes of RAM and Linux Mint installed,
and everything works.
And I just completely wiped Chrome OS, the script linked above works on the HP Chromebox
also.
And we'll have a link to that in the show notes.
So I would ask Noah about that, but he's actually in route right now to LinuxCon.
He'll be doing coverage for us this week at LinuxCon.
So if you're going to be at LinuxCon starting on the 20th in Chicago, stop by and say hi
to Noah.
He'll be the one wearing Google Glass.
So probably not too hard to find.
No.
All right.
The last email for today's show comes in from Michael, and he has a question for us.
Matt, he says, hey, Chris and Matt, a longtime fan.
Thanks for continuing to put out the best show anywhere, and I can't live without it.
I'm sure that's very true.
I'm just wondering, if you ever thought about doing a segment on flash drive distros.
I've got four USB 3.0 drives on my new laptop, and it seems like such a waste not to have
at least one of them doing something as cool as actually facilitating my whole operating
system.
Which one would you recommend?
Is it feasible to make one of your distros full time, a desktop OS based on a thumb drive?
Again, I love the show.
Keep up the great work.
Sincerely, Michael.
So, I was thinking, what do you think, Matt?
Should we do like a thumb drive distro roundup at some point?
I've been toying with the idea for a while as it sits now, because I mean, previously
it was either going to be like a puppy Linux or maybe a damn small Linux or something like
that.
I mean, something very lightweight that you can run in the background.
But boy, I don't know.
That could be interesting, because I've tried a few that didn't really leave a great taste
in my mouth.
So, it might be worth trying.
Yeah, because it's got to be a right strike.
So, right here I've got...
Yeah.
It's got to get that balance.
So, right here I've got a Patriot Rage, 64 gigabyte, supersonic Rage, USB 3.0 thumb drive.
And I've actually, I've ran off this for a couple of days when I had some stuff going
on with one of the NUCs, and I didn't feel like troubleshooting it.
I installed Fedora 21 on the beta on one of these thumb drives, and then ran off that
for about two days.
And because I think this Patriot USB thumb drive is specifically designed for performance,
and it's USB 3.0, and there was nothing else on the USB bus, I actually, I really felt
like it was performing very well.
And then I started to toy with the idea of a NUC here at the studio, a NUC back at the
house, and a thumb drive between them.
That could be really cool, right?
Because the NUCs, if they're the same...
I think so.
Same hardware, maybe same monitor on both ends, so it's always the same screen resolution.
Huh.
I'm just saying.
You know, that could work.
So, maybe we'll do a thumb drive review episode.
That might be really neat, because that might be something both Matt and I could toy around
with.
So, stay tuned for that.
If we do that, we'll give you guys a heads up.
Hey, let me give you a heads up about DigitalOcean, our first sponsor for this week's episode.
Go over to DigitalOcean.com right now and check them out, because we've got a special
promo code that if you use this code, you'll get a $10 credit.
So you're probably saying, Chris, what is that?
I'll tell you.
Unplugged August.
All one word, lowercase.
Unplugged August will get you a $10 credit over DigitalOcean.
Now, if you're not familiar, and you need to get familiar real quick, DigitalOcean is
a simple cloud hosting provider dedicated to offering the most intuitive and easy way
to spin up a cloud server.
Users can create a cloud server in about 55 seconds.
However, sometimes people get it done a little faster.
A little faster.
Jimmy Jr. wrote in, he says, I created my DigitalOcean server in 36 seconds.
Hi, he says.
I spun up an Ubuntu 1204 VPS at DigitalOcean in 36 seconds.
He attached the screenshot, but I didn't grab it.
And he says he'll be turning it into an encrypted email server.
What a great use for DigitalOcean.
One of the great things about DigitalOcean is they have data center locations in New
York, San Francisco, Singapore, Amsterdam, and London.
They just announced they're turning on IPv6 support in their third New York data center.
So if you know about IPv6 and know why that's a big deal, DigitalOcean can get you a droplet
in one of their New York data centers with IPv6 support.
Their interface is amazingly simple and intuitive.
Their control panel is powerful, and power users can replicate that power on a much larger
scale with DigitalOcean's straightforward API.
And if you're an Ubuntu user, check out the applet that you can get for your menu bar
that allows you to manage your DigitalOcean droplets right from the menu bar.
You just drop it down.
It sits right up there in the little notification area.
It's really cool.
And when you use the promo code UnpluggedAugust, you get a $10 credit.
You can try out that $5 rig, which will get you 512 megabytes of RAM, a 20 gigabyte server,
one CPU, and a terabyte of transfer for $5.
I've been using a $5 rig for months, and I've spun up a couple of new servers recently because
it's so obvious once you start using it.
It's so obvious.
DigitalOcean.com and use the promo code UnpluggedAugust.
And a really big thanks to DigitalOcean, and congratulations DigitalOcean on adding IPv6
to another data center.
You guys are rocking it.
And thanks to Robert Danny Jr. for sending in his DigitalOcean success story.
That was kind of cool.
Good stuff.
Yeah.
Hey, Matt, joining us now on the Unplugged podcast is the creator of the Mocha Project.
His name is Sam, and Sam is joining us on the mumble line to talk a little bit about
Mocha.
Hey, Sam, welcome to Linux Unplugged.
All right.
Thanks for having me.
Oh, absolutely.
Thanks for joining us.
If you've followed any of our shows for a while, you know I'm a big fan of making the
Linux desktop more purty.
So I really like following what groups like you and the Numix Project are doing and making
not just a set of themes that work on one system I use, but across all of my systems
so I can finally have, you know, a little bit of consistency, but each device is still
sort of meant for that particular task.
So I wanted to start with you.
What was your motivation for starting with Mocha?
How did you get started?
And has it evolved into something bigger than you were expecting?
Well, I started it for myself, basically.
I wanted a look that I couldn't find anywhere in the other themes.
And I decided to share it with the community.
And from there, it kind of took off as people started using it and sending me requests and
such.
And I don't know, it just got very popular, I guess.
That makes sense.
So you call it, too, I've noticed you call it a theme layer.
What is that?
What is that?
Well, it's made up, really.
It's just that you can, because I do like theme, a GTK theme, or icon theme, shell theme.
You can replace your entire default set with the Mocha styled one and layer it on top,
let's say.
I've made it across RPM based stuff, and Arch, and Ubuntu, and you can basically put it wherever
you want to put it.
Very good.
So I call it a layer.
Yeah, I like that.
So tell me about, I noticed there's also other projects that are coming out right now.
There's not just Mocha, there's Numix and a few others.
Is that a friendly cooperation?
Are you guys inspired by each other?
Is there any kind of maybe animosity, because it's kind of the same turf?
I don't know.
There's no animosity.
I know a few people in the Numix project, and it's a friendly, it's more a friendly
competition and we make fun of each other sometimes.
What do you think about some of these distributions that are partnering with some of these theme
groups, like Antigros and Numix, who have come up with the Numix Frost theme and bundled
it with their distro?
Anybody talk to you about that, and do you find that to be a potential area of growth
possible?
Well, there was talk with Ubuntu GNOME to get it included in that one, not as default,
but just as an option for users.
But I am open to getting it on as default in some other OSs or distros.
There's no reason.
Yeah.
I think that'd be interesting.
Kind of the really last question I kind of had for you is I wanted to get your take on,
I don't know if it's a business model, a way for these projects like yours, like Mocha,
to generate a little money.
Is it partially, do you see a part commercial, part free?
Is it going to be donation driven?
Because it seems in the past folks have tried this and have had a hard time making it worth
their time.
For me, I'm not that, I've tried, it's more an experiment and trying to see if it'll commercialize
well.
And I just pay what you want or download it for free or just pay that $2 or whatever it
is I have.
And more often than not, people like the free thing.
All right.
Well, so if folks want to check it out, go over to mocaproject.com.
You can get Mocha and he's got themes up there for Cinnamon, for Plank, for Gnome, obviously.
He's got icon themes up there.
Android wallpapers too, it looks like.
Mocha for Android as well.
Icon packs.
Really a lot of stuff.
You must be working your butt off.
And folks, I have to tell you, this kind of stuff takes a lot of time.
So you might want to consider tossing a few bucks his way if there's something you like,
if you feel like it makes your Linux a little more beautiful and increases your enjoyment.
Sam, is there anything else you want to touch on before we run?
No, not really.
All right.
Very good.
Well, keep us posted because I'm a big fan of projects like yours.
I think, I believe, and if you look at Xiaomi's new MIUI OS 6 that they just released yesterday,
to me, I don't know if you've noticed, but a lot of those icons look a lot like some
of the stuff you're doing.
I think projects like yours are inspiring designers at these ginormous companies, and
they are implementing your ideas.
I don't want to say ripping them off, but they're definitely being, I think, inspired
by your ideas.
If you look at their new operating system, if you look at their new OS, a lot of those
icons have a bit of a Mocha look to them, or some of them maybe have a little bit of
a Numix look to them.
And I think that's interesting, and I think you guys are setting a trend, even if you
don't have millions of users.
So I congratulate you, and thank you for joining us, Sam.
It was fun to chat with you, and keep us posted on future developments.
Well, I'm flattered.
I don't think those guys are influenced by Mocha.
I get people compare it to Mui or iOS, but thanks anyway.
No, I wouldn't sell yourself cheap.
You might be surprised.
Well, those have been around longer than Mocha has, I think.
Yeah, maybe.
You might be right.
I noticed it was sort of a, it seems like a trend that's been picking off, but okay.
All right, so Sam, thank you again.
It was really great to chat with you, and keep up the great work, guys.
Go find them at mochaproject.com, and kick in a few bucks towards Sam, if you like the
work he does.
And try it out.
You might build a, Sam, are you, like, can I also get it from, like, Distro Repos?
Are there, like, packages available for, like, Arch, and Ubuntu, and all the others?
Oh, I think he's gone.
Dang.
All right, that's okay.
Oh, shoot.
He'll be back.
That's okay.
I have him up there in stage, and working on that Echo, so he might be back in a bit
and answer it.
Or Rotten will get it for us.
All right, Matt.
Well, we're going to talk about, a little bit about robotic cars.
Producer Eric went to a conference and got a whole bunch of really good deets that he
wants to share with us.
So, before we get to that, I'll just take a quick break, and I want to thank Ting, our
buddies over at Ting.
Go to linux.ting.com.
Linux.ting.com.
Why?
Because you're going to save $25 off your first Ting device, yeah.
Or you'll get a $25 credit if you have a Ting-compatible device.
Either way, it's a pretty great deal, so linux.ting.com.
That also just kind of lets them know you heard about them here on the show, and then
once you go there, you can try out that savings calculator.
Take a look at that bad-mama-jamma.
Put your numbers into there.
The actual usage.
That's the trick.
See, Ting's all about what you actually use.
That's, get ready for this, you pay for what you use.
Ha ha!
Right?
Yeah.
That's kind of concept, right?
You're not paying into some imaginary number of minutes that you may or may not use, and
so you always have to budget high so that way you don't get screwed.
No, every Ting line is a flat $6, plus any taxes for the man, and then it's just your
usage on top of that.
They take your minutes, your messages, your megabytes, add it all up, whatever buckets
you're falling into, that's what you pay, and it's so easy and so straightforward once
you switch to that model that you kind of look at the old model and realize what a gimmick
it is.
So go over to linux.ting.com, linux.ting.com, try out the savings calculator, and put your
actual usage in there.
If you are in my range, now I think the craziest we've had was Rotten Corpse.
I think Rotten Corpse was like $3,200 or something ridiculous.
Mine's like $2,000 in two years.
$2,000 I've saved by switching to Ting, and here's what's great.
I've got LTE everywhere I go, built-in hotspot and tethering, it's included with the plan.
Ting's like, hey, you want to use this as an ISP?
Go at it, bro.
I don't care.
Hey, you don't ever want to use our data?
Go at it.
I don't care what you've got.
Bring it.
Ting doesn't care.
They don't care because they just want you to be happy.
That's why they've set up no-hold customer service, too.
You can call them right now, 1-855-TING-FTW, we should call them during one of these shows
because they're open right now, 8 a.m. to 8 p.m., East Coast time, a real human, an
actual human being answers the phone and is like ready to answer your question.
Oh, you got a question?
Yeah.
Oh, you need something solved?
I can do that, too.
The other thing that's really cool about Ting as a long-time customer is their transparency.
Over on their blog, they're constantly posting stuff, like here's a behind-the-scenes video
with product management, and you can interview with their product manager.
They've got the customer service reps on here across the whole board.
There's the ICE Challenge, all of that stuff.
It's really an awesome company that really is on a mission.
They realized, hey, guess what?
There's a market need to make the wireless industry better.
Literally.
And they are trying to fill that.
The people behind Ting are also the folks behind some other great properties you might
be familiar with.
They're two cows, and they have a mission to do this.
They recognize a market they can go into and fix things up.
I got to respect that, too.
Linux.ting.com, go try out a device because you're going to take $25 off when you use
that promo code.
You're going to own that device.
It's yours.
You're only going to pay for what you use.
There's no contract.
You're not getting locked into Ting.
If you don't like it, you're not locked in.
There's no early termination fee.
And to make things a little easier, they also have an ETF relief program for your existing
crappy carrier that abuses you.
They'll help you get out of that.
Go over to linux.ting.com to get started.
And a really, really big thank you to Ting for sponsoring Linux Unplugged.
So Producer Eric, tell us about this conference you went to.
Well, I went to, this was a conference that a friend of mine put on.
It's called the Think Big Conference, and it took place in Coeur d'Alene, Idaho at North
Idaho College.
And it was actually really good.
It was just a one-day event on Friday, just this past Friday.
And it was where we had, basically, my friend Nick, it's his vision to put together a, basically,
bring tech companies into Coeur d'Alene, Idaho.
Coeur d'Alene has been kind of suffering from the economy, and he sees a great idea of bringing
a whole bunch of different tech companies.
And one of the things that, one niche that is kind of coming out of this is robotics.
So there's a whole idea of bringing the robotics industry into Coeur d'Alene.
So that's just part of it, but the first, you know, we're talking about RoboCars here,
and that's what Brad Templeton, Brad Templeton is one of the guys who spoke, he's the first
guy who spoke.
This guy, I mean, he helped build Usenet.
He was there helping build the internet in the early 70s.
And now he's working on RoboCars.
Yes, correct.
That's kind of what he's up to right now.
Now, does he see it as specifically RoboCars, or does he see it as, well, everything that's
going to be mechanized and automated will eventually be a robot of some form?
What he sees it as is, in this case, specifically, he didn't really talk about that.
He just talked about the cars themselves.
Okay, I noticed a MacBook up there, so not a Linux user.
No, that wasn't his.
That's my friend Nick's laptop.
Oh, okay.
He was just holding the presentations.
But yeah, he wasn't a Linux user, from what I could tell.
Basically, his whole point was that human drivers, like 3,400 are killed every year
in the US, costing $871 billion, 1.2 million people die worldwide due to driving.
And it's just crazy.
The thing is, we actually do have self-driving cars that are here now.
Mercedes and BMWs both manufacture cars that drive themselves if there is heavy traffic.
So you can purchase those.
They're extremely expensive, but they're out there.
One thing that we were talking about was that if people had access to self-driving cars,
then people with disabilities could benefit.
It would be like a poor man's teleporter, you could call one up, almost like you do
with Uber.
I've also thought about it, it's almost like a cab in a sense.
I could potentially tell my truck here at the studio, go home, and then Dylan could
get in the truck and it could just automatically drive back to the studio and he could visit
dad for an hour.
Correct.
Exactly.
There are all sorts of benefits.
We spend hours on the road.
Myself, driving up to the studio every now and then, that's a 90-minute drive.
That's three hours out of my day.
But in terms of if cars could drive themselves, then we could use that time.
To drink and drive.
Yeah, to drink and drive.
There you go.
I was going to black out.
Credit to Blackout in the chatroom for that one.
Yeah, there we go.
To me, more accurately, drink and ride then.
Right, of course.
Yes, very good point.
But what's interesting is that it would potentially use far less energy than we use now.
If they could all be electric cars, they could even be more efficient.
One thing though that I did question, there was a question and answer session, I asked
how much does open source play a part?
Yeah, that's my question.
Yeah, for instance, what's driving the car?
What's behind the car?
What's managing it?
Basically what Google is using is they base their project, their self-driving car, off
the source code from a car that Stanford University had in a contest and won this project.
Google hired those people, the people from Stanford, to develop the Google car that we
have been making news.
I thought the Google system was Ubuntu based.
It is Ubuntu based.
Okay.
That's why I said, the source code actually for the car that won that contest that Stanford
has, that's available on SourceForge.
So you have that, but most of the companies that are developing self-driving cars have
proprietary code and they're keeping it locked down and there's confidential.
He said he couldn't disclose too much without basically screwing over his NDA on a lot of
these things.
Okay.
But he wasn't clear as to what my question was and I said, well, what if people want
to audit the code to know what's driving them around?
And personally, I don't know about you, but that's why I wanted to bring to the discussion
today is what kind of things can we expect from this?
And this is coming fast too, because we talked this morning on Tech Talk today about the
vehicle to vehicle communication standard that the US is working on that will be mandated
to be in all cars sold in the US by 2020 and it allows for them to communicate speed to
each other, potential collision information, things like that.
And that's, I would assume, designed to facilitate localized automated driving decision making.
And I also deeply am concerned by, it's sort of like, it's not the same thing, but I have
the same feelings about voting machines, is I really feel like that code needs to be public.
The public needs access to that code.
And in order to have a truly nationwide driverless system where I could be comfortable putting
my son in the truck by himself and having to drive him over all by himself, it really
needs to be something that everybody's on the same page with.
And that means whatever software we pick to manage and run it, I think it's going to be
the one that gets used for decades, right?
By everyone.
Right.
Yeah.
And you know, I was, basically my question was inspired a little bit by Karen Sadler,
who we met at OzCon.
She was the person who wanted to see the source code for her pacemaker and was basically overall
told no.
That's right.
Yeah.
And when I hear stories like that, I'm just like, that's a safety issue.
There are people who are going to want to be able to see that source code so they can
trust what they're using more.
Well, it's also a safety issue in the sense of bettering public safety by allowing more
really smart people to look at that and find problems and fix them.
Right.
It's Lance's law.
You know, the more eyes on a project, the safer it is.
This is, you know, and the other problem is, and this is something we touched on on Tech
Talk today, was the security implications here.
And how, you know, when these vehicles are communicating with each other using this vehicle
to vehicle communications technology, they talk in, I think, what did it say, 10 packets
a second or something like that.
Not crazy.
Something like that.
Or 10 times a second.
That's what they said.
10 times a second.
But they're communicating things like, this is my current speed.
I am doing 60 miles per hour.
If you could intercept that signal as somebody, you're not hacking their car, you're hacking
your own car, and then transmit false information.
You could potentially alter all of the cars around you, either bringing them to a stop
or speeding them up or causing chaos.
And I go back to open source means we could audit this and look for these types of vulnerabilities.
Obvious statement.
We all agree on that, but we are watching the legislation and the industry, not necessarily
always together, steaming down a path that I don't think as Linux users and open source
advocates we're going to be all too comfortable with.
Yeah.
And that's one thing that Brad Templeton touched on, was that there is definitely going to
be some security implications, and there is definitely going to have to be some security
work done on cars, because, like for instance, the cars that are out on the road with the
computers that are onboard, they're not built with security in mind.
That's going to have to be a reality for whatever is running the cars in the future, especially
self-driving ones.
Yeah.
Big time.
Big time.
And there are some systems, like we talked about it before, that have the CAN bus, where
the Bluetooth radio is on the same bus as the brake monitoring system, because that's
the way the regulations specify it must operate.
And you compromise the Bluetooth radio, and now you have access to the CAN bus system.
It's a bad situation.
Yeah, exactly.
It's just a bad situation if you compromise any part of that.
And I guarantee, and this is something we've mentioned before, is that there's going to
be times where people are going to have to do updates to their software, like Alan says,
patch your S.
Yeah.
So, yeah.
Or there's going to be, or could there be car manufacturers who eventually abandon applying
updates to these cars?
And how will you get people to properly apply updates to their vehicle?
Because they're sure as hell not doing it to their routers, even though it could be
very harmful not to.
People don't update their routers, people aren't updating a lot of their set-top devices.
They just don't bother.
Right.
So the car is going to have to also, likely, using the argument of public safety, be self-updating
without user intervention.
So it's going to...
Exactly.
And then do we want closed-source software that's self-updating?
Yeah.
And that's the other thing I'm seeing, like current cars with their GPSs, you have to
actually pay for a GPS update.
And I think that's ridiculous, because that could potentially be a safety issue, especially
as cars get more and more automated.
Unless they update the celebrity voice.
Yeah.
Yeah, that's true.
Got to get Arnold.
Get Arnold.
I think TomTom made a Snoop Dogg one.
Yeah, this is one of these... Matt, I don't know how you feel about this.
This is one of these where it's like, part of me is totally ready for automated driving.
I still, of course, want to be able to drive.
But the other part of me is pretty freaked out by a lot of the security and privacy.
Because another thing to keep in mind, if every person is being driven by a central
computer system, then everybody's being tracked where they're going.
Does that bother you?
Well, so here's the biggest piece of it for myself, from my own perspective, anyhow, is
that I think you've got to look at it from... Let's get our house in order before we
start handing over more things for people to regulate when they don't understand the
technology they're regulating anyway.
We can start off with the internet and let them actually learn how it works first.
Then when they got a handle on that, then let's let them handle regulating how our cars
work.
That scares the hell out of me.
Because not only are you going to be concerned about closed source and stuff like that, but
the fact of the matter is, where is this person from that is in charge of the regulation?
What's their background?
Do they understand it?
Do they have a vested interest in a past company that is going to benefit from this new... There's
a lot of holes in that that concern me.
So I think we're way too early on that.
Not from a technology point of view, but from a common sense point of view.
Yeah, I get you there.
Dr. Dovin, what do you think about it from a data security standpoint?
From my understanding, even though we don't have as much efforts in the automated cars
in Europe, there is already legislation in place.
I really hope that the data is considered from the user.
If that's the case, the data is considered yours.
Under the current digital laws, you actually have the right to tell them to delete everything.
They have to comply legally, otherwise they will get fined like hell.
I think as consumers, one thing that maybe we can influence, and I think we have to demand
it from the manufacturers, is we do not want the Android update catastrophe that we have
now where Samsung releases one update, and maybe Motorola releases another update at
a different timeline, and LG, and et cetera, et cetera.
Wouldn't that be awful if Toyota puts out an update that maybe Honda takes another year
to put out, and maybe Lexus never ships it?
And so you have all these different cars, and that will make the system stupid.
It will make it vulnerable and stupid.
You could have literally people driving around in 2,000, 3,000-pound vulnerability boxes.
I mean, honey pots.
It has the potential, as you make these cars more sophisticated, and you're actually running
an entire operating system on there to get dicey fast.
I'd like to hear the audience's ideas for solutions, and maybe some folks that are out
there working on some of this stuff have some insights, so go over to jupitabroadcasting.com,
click the contact link, and choose Linux Unplugged from the dropdown.
Hey, one final point, I just overheard this while Brad was talking, and somebody behind
me said, if cars are driving themselves, where's the fun?
Yeah, there's that, right?
Yeah, that's huge.
I do enjoy driving.
That's why I always hope that, at least in my lifetime, on the main roadways, like freeways
and highways, that's automated, and then when you get off the freeway, the steering wheel
reactivates, your seat sits up, and it's okay.
You're driving now, human.
And by the time you're onto the off-ramp, it's transitioned into human mode.
Right, right.
That would be because, really, I don't need to drive the freeway.
And if the computer can do it twice the speed I can, then maybe we'd never have traffic
jams, or very few traffic jams, until there was a breakdown.
And that would be great.
But on the off-roads, let me have my fun.
I've got some laws to violate.
Hey, we...
Can you?
Yeah, go ahead.
In EU, they actually...
It's mandatory that you...
To be able to disable the automatic driving and be able to drive the car as well.
Oh, really?
Yes.
So why are you guys so...
Why are they so on the ball with this when it doesn't seem to be the same stink, necessarily,
behind automated driving?
Why are they so ahead of this already?
It seems to me that even though we don't have the companies, the companies are struggling
a little bit because they're putting their feet in the water.
And it's also a way of inviting companies.
Look, we have a well-defined framework coming here, and you're ready to set up shop and
do your business.
Yeah, and I guess, too, they want to get left behind, right?
Yeah.
Because I was looking at this proposal that the US is working on that they announced today,
and it's US-specific.
It only applies to US cars.
It's only mandated in the US.
So it could mean that Europe ends up with an entirely different car-to-car communication
system than we use in the US.
But not the end of the world.
But look at the steering wheel situation.
We somehow made that work.
Yeah, it's not like we did that with measurement.
Oh, wait.
What?
What?
Get the king in here.
All right.
There is an elephant in the room that people have been asking me for days if we're going
to talk about it, and it's been snowballing.
It's this report coming out of Munich that they're about to abandon Linux and switch
back to Windows.
But before we get to that, I want to thank Linux Academy.
I think Linux Academy is a great sponsor for this show because you guys know what's up.
You know how this works.
We only pick sponsors that we think are truly great, and I got a chance to meet the guys
behind Linux Academy.
And it's really cool because I can relate with a lot of it.
They were off on a path, an IT career, which was great, but really felt motivated to do
something that could help the Linux community.
And so they combined their efforts.
They've got web folks there.
They've got educators there.
They've got Linux admins there.
And they're all working together to create Linux Academy.
If you go over to linuxacademy.com, slash, unplugged, you can take advantage of a special
30% offer.
It's the summer of learning over at linuxacademy.com, slash, unplugged.
Go there right now if you would.
I'd appreciate that.
And sign up.
And here's why you want to sign up for Linux Academy.
They're always making it better.
They're constantly adding new courseware, holding live events where you can ask the
educators directly.
They have step-by-step video courses that you can download and watch offline, or audio
versions if you want to listen while you drive, kind of like a podcast.
The study guides are great.
You also get to keep those, download those.
And it comes with your own server.
So if you get somewhere in the course material where you're ready for a server, they'll spin
up the VM and make it part of an integrated course experience.
And each course tells you how long each section's going to take, so you know how much time you
need to dedicate that evening or that day.
Whenever you're ready to just make yourself better, you go there, you log in, and you
know, okay, I've got 45 minutes to make myself a little better, to intellectually challenge
or stimulate myself.
Why not take advantage of it?
Plus, with their 7 plus Linux distributions available, they'll automatically adjust the
courseware to match the distribution you've chosen, which is really slick.
And you know that they were thinking, eh, some people aren't even going to need this.
Pretty much everybody's going to choose Red Hat, but they're Linux users.
So they know.
They know what's up.
And they're also expanding their OpenStack sections and AWS sections.
And they have good scenario-based training in all of those areas.
So when you walk away from Linux Academy, you'll really feel like you've actually implemented
one of these things in production, because part of the courseware will involve you actually
deploying an application that depends on the services you're learning about.
I think that's really smart.
Plus, since they automatically spin up a server for you, you're not worried about raising
like a bill on the Amazon Web Services while you're just learning.
Because that's all part of your Linux Academy subscription, and they're managing that for
you.
It's pretty slick.
So go over to linuxacademy.com slash unplugged.
Check out some of their content.
Once you become a community member, you can hang out in their forums.
People will help inspire you.
If you ever get stuck and need a little bit of motivation, just that little push.
You know, like people recommend if you go on a diet, you should diet with somebody else.
That way, or if you're getting off the booze, you should find a partner or a sponsor.
Go find your sponsor over at linuxacademy.com slash unplugged.
And a big thank you to Linux Academy for sponsoring the Unplugged program.
Yeah, it is a great one.
Okay, let's talk about this Munich situation because it is snowballing out of heck.
One of my favorite headlines came from Softpedia, Munich disappointed with Linux plans to switch
back to Windows.
Bracketed updated.
And we've also gotten some other ones like Ed Botts having, I don't know if you saw Ed
Botts, Matt.
He's having a heyday with this.
Microsoft commentator Ed Botts is pleased as punch about this Munich news.
But it sounds like the story might be a little crap.
Is anybody in the Mumba room kind of up to date on the Munich situation and want to chime
in with some background?
Well, isn't it the deputy mayor of Munich that is just proposing going back to Windows
and nobody else?
That one guy.
Yeah.
Yeah, just the one guy.
Yeah, one guy.
Yeah, that's kind of, you just nailed this entire story.
And what's so funny about this, kind of proud of myself too, actually, now that I think
about this, I was reevaluating stories Friday, Saturday, and Sunday morning for the Linux
Action Show.
I always am looking at our mix and constantly thinking, well, maybe I'll add this to the
news.
Because sometimes, you know, we might cover four news stories in the Linux Action Show,
but I've followed 30 or 40 that week personally and chosen which ones to put in the show.
And that's why I feel really bad when we get it wrong, but I feel good when we get it right.
I saw this story, it initially popped up online, and the problem really comes, it's coming
from a German media outlet and it's all in German.
And so there's a translation problem that happens.
The headline's awesome.
And then once guys like Ed Bot run with it, it kind of adds some legitimacy to the story
and then it's everywhere.
And this is a way where the Linux community eats their own fricking tail because it started
here.
It started in, not here, like on Jupyter Broadcasting, it started in the Linux community.
We started this and then we snowballed it and then the rest of the media, who now pays
close enough attention, picked up on it.
And now the meme is that Linux has failed Munich and they're going to switch back to
Windows.
Even though it's the deputy mayor, it's the one guy, it does sound like there has been
some legitimate like customer satisfaction issues from the end user standpoint.
It also sounds like there's been some improper training and any kind of transitions difficult.
So I don't mean to discount the entire story, but what I am not so pleased with is just
how once again we're seeing another story go crazy.
Am I missing something?
You know, I don't think so.
I think you pretty much nailed it.
Cause if it's essentially really stems down to one guy, I mean.
Well, Der Devlin wants probably, go ahead Der Devlin, you probably want to say that
one guy maybe has the power to make the change.
Yeah.
And that, that is a legitimate concern if he's saying that.
But I do believe it's a false disappointment.
Don't you think that's even still, shouldn't the headline be deputy mayor decides to roll
back from Linux?
Not Munich decides to roll back from Linux?
Well, he decides over Munich, I guess.
So for all that.
No, they have a city council.
It's not as flashy.
For example, for me is a false disappointment because they've done an exchange of programs.
There is little time and from that exchange, they hadn't invested like even half of the
money they were investing in windows to be actually saying that they did a degradation.
Like they tried to save everything at once.
And of course that will bring bad results.
Do you think maybe Microsoft is influencing this deputy mayor since they just set up an
office in Munich?
Yes.
Yes.
And they did mainly because of that guy.
Yeah, so this is kind of like, this is kind of like how the city of Seattle was planning
to deploy fiber internet everywhere.
And then when the mayor who was backed by Comcast got elected, they killed it.
Now it's a little black and white.
That's not exactly what happened, but it has that feeling from afar.
However, since I'm not sure, but this is at least from people I know a little bit the
reaction in Germany is because also these NSA spying things actually lead people to
drive a little bit away from these US companies.
And as a result, I'm not sure if the citizens are not going to pull up some to revert that
situation if that's the case.
Yeah, the chairman's also pointed out that he's been a self-admitted quote unquote Microsoft
fan.
He says Microsoft has been flexible and helpful.
I bet they have.
I bet they've been extremely flexible and extremely helpful to the city of Munich recently.
It really doesn't matter what happens now though.
The damage is done.
The fact that this has spread like wildfire around the internet, that Linux was a disaster
and Munich made a tragic mistake.
It really doesn't matter what the decision is now.
That is the headline the decision makers are going to have in their mind.
The correction will never be issued.
There won't be a correction ever made.
No, and Microsoft will be lapping this up.
I'm sure it will be up there on their whymicrosoft.com website before long.
Along with that, you can practically hear the sigh of relief.
These old quotes that they like to roll out.
Yep, and it feels like this is a reenactment of some of that.
And I think you've got to look at this and think who really loses are the citizens because
this is an opportunity for the output of their government to be stored in open formats using
code that benefits the people.
And when a government, when a large institution is using things like Libre or Open Office,
then they have more people using that.
That helps that project.
So that helps everyone who uses those projects in the entire world.
And it is a great way for a community funded organization like a government to do something
that helps everyone in the technology field.
And the fact is, is that the things that they are creating for those people belong to those
people and that if those documents cannot be opened by the people, then it is a disservice
to the citizenry.
And so it is not just like saving money.
It is deeper than that.
And that is, as our buddy would say, the most egregious thing about this.
So Chris, my perspective on this is you don't just switch from Windows to Linux overnight.
Well it took them 10 years.
Exactly.
And similarly, you're not going to switch back overnight.
They're not going to nip down to Best Buy PC World or whatever and buy a thousand laptops
running Windows 8.1 and say, there we go, we've switched back again.
They're going to have a mighty project to switch back again.
And that's the opportunity at which people who are stakeholders in the Linux community
can bid for that work or, you know, back up our claims that the total cost of ownership
on Linux is lower and that you have better more freedom on Linux.
I think one guy making a statement that they're going to move back is not…
It's more of a PR hurt.
I'm not so worried about…
Yeah.
Whatever happens to one particular place happens.
It's just more of the…
Just adding to that narrative that sort of hinders Linux adoption, it just drives me
crazy because it feels a little dislegitimate, I'm trying to think of the right word, illegitimate.
And the fact that the Linux, in inverted commas, Linux-friendly press have jumped on this,
probably more than the mainstream press have, gives it more legitimacy than if, you know,
this was a press release from Microsoft themselves.
Right.
Yes.
Very much so.
Very much so.
Very good point on the legitimacy aspect.
That's very true.
And I think that's also kind of like…
And isn't that the exact…
Isn't that the exact group of people who should be getting this story right?
Like, who does it help by getting this inaccurate?
Like, it doesn't help anyone.
Yeah, research is apparently done.
But here's the thing.
I saw this story on Saturday before last and decided, you know what, this doesn't look
like it's worth running, this is more hype than it is anything.
I recognized that Saturday night, like at 9.30 after putting three kids to bed, and
I would manage to suss it out somehow.
And I'm not some genius.
Clickbait.
Clickbait.
It's so annoying.
Yeah, slow news day for many people.
I guess.
You know, maybe it is that.
Gosh, that's cynical.
But maybe it is that.
Yeah, maybe it is.
Anyways, we'll keep watching it because it could develop into something.
I think maybe that's why it does have some legs is because it could eventually, PR damage
is done.
Like what Popey said right now, if they did switch, it'd probably be another massive transition,
which we would then have to report on ad nauseam.
But we'll see what happens.
But don't believe everything you read on the internets.
And it's funny because it does hurt a little more since it started internally first, I
think.
I don't know, maybe that's also why I'm just a little sour about it is because it started
in our community.
It wasn't, like Popey said, it wasn't started by Microsoft or something like that.
So it cuts deep.
Cuts deep.
Chris, you've got something of a platform here and Mike Saunders, who is one of the
Linux voice team, lives in Germany.
And he's spoken about this and understands the issue quite well from a German perspective.
So maybe it'd be worth getting in touch with him and getting on one of your shows because
it's a platform to help air the truth.
It'd be great maybe to have him come on next week if he's around.
I'll try to get a hold of him.
Let's chat more in the post show about that because yeah, that'd be good to get him on.
You could join us in mumble and kind of break it down for us.
Before we run, just a couple of little pluggy plugs.
If everything goes as planned, we might, boy this is a big if, but just check out the calendar,
check my Twitter feed.
We might have some live feeds from LinuxCon.
Noah is kind of wrangling all together right now so if it doesn't work out, it doesn't
work out.
We will have interviews soon from LinuxCon going on starting tomorrow.
We may have a live feed from the floor and if we do, it'll be over at jblive.tv.
I don't know when it would be because we're not going to stream the sessions.
That's their domain, but we might stream some stuff from the floor.
Just check twitter.com slash Chris LAS because if it happens fast enough, I might not even
get a chance to add it to the calendar.
It might just be one of those click click things.
Just keep checking my feed and we'll also record and have all kinds of good coverage
coming up from LinuxCon 2014 happening right now in beautiful Chicago, downtown Chicago.
Don't forget, I'm also seeking your runs Linux, your personal runs Linux.
It could just be a quick blurb with a picture.
You could take it with your smartphone of your Linux setup.
A video is even better if you've got a few minutes to maybe do a, is it called a selfie
video?
I don't know.
But I'd like to see your setup and maybe your face and you could upload it to YouTube and
then send it in to linuxactionshow at jupyterbroadcasting.com with a link and a description.
I'd love to make those my runs Linux picks for upcoming Linux action shows.
I've been having a ton of fun doing that.
And last but not least, if you love what we do, if you enjoy a few of the shows over at
jupyterbroadcasting.com, please consider going over to patreon.com slash today.
That's where we're crowdfunding expansion of the Jupiter Broadcasting Network.
It is a tech talk today Patreon in the sense that the show is associated with it, but the
funds go to all of the shows on the network.
They pay for physical goods, contract goods, a software we have to buy or whatever it would
be.
It's just kind of depends on the month or LinuxCon expenses, for example, for this month.
And that money over at patreon.com slash today funds everything, not just the tech talk today
show.
It's kind of like my thank you.
That's why I do that show is like, I feel bad taking your money.
So here's a show I'm doing for you every single day to say thank you.
And you can support any of our shows by going to patreon.com slash today.
We have pledge levels in there that you can just jump in at.
Matt, is there anything else we want to cover on today's Linux Unplugged?
Well, I think you hit all the important pieces and that's definitely going to be interesting
to see where the whole, you know, the whole Linux situation goes overseas.
That whole thing just stinks.
Yeah, we'll watch it.
We'll watch it.
Yeah.
All right, Matt.
It's going to be Sunday, so have a great rest of your week.
It's nice out.
It's really nice out.
I know it's weird, but go out there, get some sunshine.
The big orange thing in the sky.
Yeah, now I'm going to go home to Ange and the kids and we're going to go play in the
water park.
Nice.
Yeah.
So everybody say hi to Ange in the chat room.
Say enjoy the water park.
And don't forget you can join us live, jblive.tv, 2 p.m. Pacific on Tuesdays.
Hang out in our chat room or join our mumble room.
It's an open mumble room.
You can get the address in our chat room, jblive.tv, jupiterbroadcasting.com slash calendar for your
time zone.
All right, everyone.
Well, thanks so much for tuning this week's episode of Linux Unplugged.
We'll see you right back here next Tuesday.
I'm going to drop it on your brain faces and you just, you just let it marinade.
Let's see.
Where was it?
Good question.
Good question.
Oh yeah, here it is.
Yeah, here we go.
Here we go.
Okay.
I promised somebody I would, I would bring this topic up to you guys.
I want to get your take.
Corky started a thread.
He said is rolling really the future of Linux?
Oh boy.
He says with Linux Mint Debut Edition and Solid XK kind of announcing plans to go from
semi-rolling to more sort of stable, are we seeing the pop of the rolling bubble?
Anyone want to take that one?
Well, here comes the arch fan boys.
I'd say rolling is.
Oh, you cut off, Rodden.
Your mic's still on, but I don't hear you anymore.
Weird.
Is that better?
Yeah.
Okay.
I was thinking like maybe the, the rolling is not necessarily a rolling or stable as
in like one is better than the other.
It's more of a particular type of experience that someone wants.
So the fact that Linux Mint Debian is going more stable, which makes sense because the
other version is stable, uh, uh, Solid XK going more stable so they can just not have
to deal with it.
And if they're trying to attack, they're trying to go to a particular type of the audience
or whatever, then it makes sense that they would do that because they're going for the
new users or the, the, the business area.
Whereas rolling is typically not associated with that.
Chrome OS is rolling.
Chrome OS is rolling.
Chrome OS is rolling.
Chrome OS is rolling.
Yeah.
Anything rolling properly vetted is fine for businesses.
I mean, that's, that's the thing.
It's just heavier vetting, you know, just as much rolling, but heavy, you know, just
vet the hell out of it.
It's great for business.
There's no problem.
I agree.
I use, I use rolling in production as well, but it is, I'm just saying like the people
who want rolling can get rolling and there's really no, there's, there's no, which one
is better.
It depends on the person choosing it.
Right.
Yeah.
That's true.
That's true too.
We had a good response to Corky says, hi Corky, I think the discussion is getting parked by
a lot of distros and perhaps the big fat super distro story is coming to an end.
The real value of rolling is the availability of services and applications.
And I think the sourcing model is about to change.
Shouldn't the, shouldn't the future be as simple as we finally standardized on one package
format powered by system D. Big projects start shipping source code and containers, containers
for each iteration.
Big ones take the lead like Firefox or LibreOffice.
I as a sysadmin install an application and I'm able to set up per container.
If I have it auto update a rolling, thus getting a custom rolling release where the application
levels are rolling, but they're totally isolated from the main system.
The distro upgrade becomes far less critical.
This is the core OS philosophy.
You containerize everything and then the damage when you update the core OS is much less wide
spreading.
Worst case, it doesn't boot.
It doesn't fix that problem, everything's back up and running the libraries, the software
and the containers were never touched.
Distro upgrades would become far less critical and easier to manage.
This is also something that Fedora Cloud is working towards.
Both Fedora Cloud and core OS, especially core OS, not so much Fedora Cloud, truly believe
in updating as frequently as possible.
Core OS is building a enterprise grade server OS that's being deployed by Rackspace today
on the concept that a server operating system should be rolling.
You containerize the apps.
So it boils down to are we talking about desktop users or servers?
Well, I think the technology applies in both cases.
Just like we see it right now on phones, you bring in sandboxing, you bring in containers,
you isolate the application off from the system, all of a sudden it doesn't really care.
It might not even care if you switch from QT4 to QT5.
It could be that level of separation.
Yes, it adds waste, blah, blah, blah, but if it's managed properly, it's not so bad.
Hard drives are big.
Chris, we did exactly that on the phone.
We containerized and we switched from QT4 to QT5.
And how did it go?
As long as you did the atomic things, it should be fine.
There were some apps we did an audit and there were very few, like less than 10, that needed
to be recompiled because they had binary components, but the vast majority of them were QML, so
it wasn't a problem.
That's got to be the future.
It's got to be, right?
Yeah.
Well, that will be coming to the desktop.
There's no doubt about that.
What we're doing on the phone, we're going to push to the desktop as well.
So you'll get image-based updates and click packages in containerized formats.
I don't know.
The chat room is giving me a hard time.
I've had a couple of things break on me.
I'm trying to think of the major breakages and it's been mostly VirtualBox, but I saw
that like seven months ago.
I'm thinking from an update standpoint where on a server, you're not going to want to update
it nearly as often as say a desktop, therefore I wouldn't use Arch on a server, even though
I did at one point.
It's just kind of experimental, but the thing is, you've got to update that thing every
so often.
Otherwise, you go to update it and it breaks.
I come at this from two aspects.
I come at this from a security conscious standpoint.
Old software that hasn't been fixed by security seems really unhygienic.
It's very gross.
It's nasty.
It's dangerous.
I'm a little risk adverse in that sense.
It seems risky, not just for yourself, but also as an internet citizen, it's bad for
everybody because your machine can get owned and used for bad things that launch attacks
against other people.
There's almost a social responsibility to have my router updated, my boxes that I connect
to the internet updated.
I almost do feel a bit of a social responsibility there.
To me, getting new code in there, I feel like we are such a bunch of wusses.
We have somehow locked ourselves into the philosophy that whenever software updates,
every update has to be huge.
What about just only a rolling distro that pretty much just is always rolling security
fixes or things like just minor stuff.
I wish we could redefine what rolling means and have one standard definition that everybody
agrees on because rolling to one person is not the same rolling to another person.
Then they'll argue at it from their individual standpoints like, well, rolling means that
you could have major feature changes in an application and that's scary.
Then another person is like, yes, but rolling means a config file could change and it could
break.
Then I'm sitting here going, none of that in practice has been a big problem and I have
fresh software that's totally up to date and secure as possible.
There is obviously some pros to it on desktop and especially on server, then it just becomes
a matter of making it work.
Well, guess what?
It's just technology.
It's just computers.
We have the ability to figure it out.
I think the idea of rolling itself is fine.
Where I am becoming increasingly frustrated though, like say with an arch-based distribution,
is the fact that I have no problem, no matter how bad it gets borked, I can get to a command
prompt, I can revert the package who gives a rip.
But when I just updated 1500 of them, no.
That's when you piss me off.
It's like, look, I'm a reasonable fella, but this is getting to be stupid.
It's too much on, I guess the arch problem is like you go two, three weeks and now it's
like 500 packages or 400 or 200 or whatever.
Well, and the rub is that here's the real rub.
That's my problem.
That's my choice.
That's my bad.
I'm the one, it's too big of a bonehead to update on a regular basis and so I got to
eat my own dog food.
That's not against arch.
That's the fact that I'm really lazy when it comes to updates.
I don't care.
I don't want to deal with it.
I want to do it occasionally and then leave me alone.
Yeah, no, I get that.
And I think that's a totally legit use case because that's how a lot of businesses are.
That's how a lot of the machines here in the studio are.
I'm busy.
But you also got to own the responsibility of how you handle your updates.
I own the fact that I am really neglectful there.
So I own that.
One of the things we've done here at the studio is we have two arch servers, one that we primarily
use.
And what we just did is, all right, well, these are the roles we envision for this.
And if it goes out beyond this role, we spin up a new VM.
So that way each box individually, like, I have gone two months without doing a package
update on that arch server and then I'll do an update and it's like 25 packages.
It's not a big, yeah, no, it's not bad at all.
And it's like all like, yeah, it's all safe stuff.
Well, I think when you're using rolling, you use your own level of stagnation, depending
on what your needs are.
Yeah.
Yeah.
And you can control how many packages you're adding to it.
I mean, if you're like on an arch, for example, and you've just gone on a shopping spree on
the AUR, you know, you're responsible for that for sure.
Yeah.
Yeah.
Yeah.
