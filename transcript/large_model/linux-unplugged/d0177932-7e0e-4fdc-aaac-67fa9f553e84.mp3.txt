Very impressed that they've got Linux running on the iPad Air, too.
You knew it would happen, right?
But this is Linux 518.
So this is like the most recent version.
And another group then built on that work and got
Linux booting on the iPhone 5S.
That's so crazy. It is really great.
When you start seeing things like from the GNOME project, like that
they're working on mobile.
My first reaction when I saw this is like, oh, here we go again.
GNOME's focused on mobile again.
Well, we all know how this is going to go.
But then I thought, you know, for a tablet, which Google's about
to make a big push into tablets again, they announced that at Google I.O.
And on an iPad, if I could get Linux 518 and then eventually they could get
a graphical interface working based on the work the Asahi project is doing,
who they just got their first triangle rendered on the M1 platform.
I don't know, maybe there's going to be a day where I'm running GNOME on an Apple
device.
Yeah, but OK, I support this, obviously, because I like it seeing Linux
run really wherever it can. Yeah.
But what are you doing on that tablet?
I mean, I don't know.
Browsing the web? I don't know.
Hello, friends, and welcome back to your weekly Linux talk show.
My name is Chris. My name is Wes.
And my name is Brent.
Hello, gentlemen.
It's been quite the week.
Each one of us is bringing our own topic.
Brent's been battling the lizards all weekend.
We'll find out how his tumbleweed box may have gone sideways.
Wes has been cramming Nixos into places that I didn't think
it'd be able to go.
We'll find out where and why.
And then I am reversing course on an executive decision
I made about a year and a half ago.
And I'll tell you why that is.
Then we'll round it all out with some boosts, some picks and a lot more.
So before I go any further, let's say time appropriate greetings
to our virtual lug.
Hello, Mumble Room, everybody.
Hello. Hello, Chris and Wes.
And hello, Brent.
Hello.
Thank you for making it. Nice to see everybody there.
This is an interesting trend.
We've got a lot of people in quiet listening again these days.
I love it. Thank you for making it there, too.
We are live on Jupiter.2.
Oh, oh.
More about that later in the show, because up first,
I want to take a moment and just put the word out there
that if you are planning to attend the London meetup,
there is some things in flux that they need to know about.
Right, Brent?
Yeah, I just learned that the date has changed.
So instead of August 6th, Alex, I guess, has shifted things slightly.
That's why he's planning so far in advance to August 5th.
And that's six p.m. GMT.
Don't be showing up at like Pacific time or anything,
because that's how meetup.com tends to show it.
I did also notice that there are more than 70 people who have RSVP.
So I think last week we were at 40.
That's almost double, which is kind of impressive.
The location, therefore, is to be determined.
But I think we'll figure that out in the next little bit.
Yeah. And this is unfortunate, but it's doable.
I think it was going to be on a Friday.
Now it's going to be on a Saturday or something like that.
Alex is still figuring it out.
He got contacted by his airline.
And for his convenience, they're rebooking his flight.
For his convenience.
Who would have thought that, you know, planning a cross-country meetup
might have some details to figure out here?
Who would a cross-continent meetup?
Really? Indeed. That's pretty cool.
I'm I'm bummed we couldn't make it even speak the same language over there.
No, they speak English. Yeah.
You know, I realized, too, they actually say HDMI right
because they're pronouncing the sound the H makes.
We say HDMI.
I mean, I'm used to saying a all the time, so it's fine when you say.
But how do you say HDMI?
Do you say HDMI or do you say H?
No, I'm with you. HDMI.
But, you know, they invented the thing.
So I don't know, Jeff Giff, RGA.
I don't know. Anyways, I'm just saying it's not all bad over there.
Now, if they just didn't smell so bad, except for Pope, he smells great.
But yeah, so keep an eye at meetup.com slash Jupiter broadcasting.
That's unfortunate, but that is the state of the airline industry right now.
And we'll just keep it up to date over there.
So let's start with my reversal.
This will be pretty quick.
So I think this is probably a good place to start.
I surprised a lot of the hosts last week here at Jupiter Broadcasting
when I announced that Jupiter Broadcasting was getting back into PeerTube.
PeerTube is a YouTube in a box replacement that is based around WebTorrent
technology to do peer to peer streaming of the video to offload
the most expensive part about live streaming, which is the bandwidth.
And it's something we've talked about before on the show.
We're a big fan of where they're going with it.
It participates in the activity pub Federation Network.
So you can actually you can actually there's this beautiful world
where mastodon and PeerTube can actually communicate and cross
pollinate each other. It's it's really cool.
We shut it down due to some limitations at the time that didn't
just didn't really work for us.
Yeah, right. We had an old PeerTube and it was fun to try, but it didn't.
It just seemed like it wasn't, you know, the place where we were at
and wanted to do and its stage of development.
Yeah, we were kind of at the time, we were kind of thinking of it
as a full YouTube replacement.
So we would post all of our stuff there. Right.
Yeah. Be another like the archive of J.P. stuff. Right.
And maybe we would create a channel for each one of the shows.
You could subscribe to the Coder Radio channel and the Linux Unplugged channel.
And don't listen to the guys on Linux Action News.
They're crazy. Don't know what they're talking about.
No. So you could pick and choose.
But this time around, I've decided to do just sort of a live version,
a limited archive of our live shows.
And we're trying to do video where we can for those to make it,
you know, a little more enjoyable. I get all of that.
The idea really came to me, though, when I thought, well,
we've gotten a decentralized community with Matrix.
And that's been going really well.
We've been working on a decentralized value system with Boose.
That's building out. It's early days, but it's building out.
But we don't really have a decentralized media solution.
And that really got me thinking about PeerTube again,
because I think it really brings everything we've been talking about in 2022 together.
We don't really need another project,
but I think we can do something here that completes a picture of decentralized media.
So everything from the distribution to the funding to the community interaction,
it can all be decentralized.
We've never really been at this place before.
This is a new era in technology that you can actually host yourself
on your own infrastructure.
Still early, but it seems, you know, just based on some of what you say,
I read some of the other results like seems like something worth continuing to explore and invest in.
And the whole stack is free.
It's all free software right from the OBS machine that we're using to stream right now
all the way up to restream.
And if you're watching on a Linux box to all the way down to your system,
that's why you want Linux on your tablet.
There you go.
And, you know, this is the advantage of things like no takedown bots.
But here's the idea is I thought, well, we'll have livestream recordings up there.
It'll be archived for a period of time.
We'll stream special events like Apple's WWDC.
I'm going to do it like a Mystery Science Theater WWDC stream tomorrow.
Yeah, I'll have a link in the show notes if you want to try it.
And we can go live earlier over there because we don't have to worry about copyright violations.
So you can kind of get the pre pre show over there.
And the number one question I got is why not make this a members only thing?
You know, now that you've added video.
I like that that somehow the audience is suggesting this.
Yeah. Yeah. Well, you guys to not you specifically, but a lot of the team did.
But also it was like that when I in Matrix, I was asking people their opinions and, you know, trying it out last week.
And a lot of people said, well, why not just do a members only thing?
Well, so the members only feeds not going away.
It's an audio feed with the show notes and we publish it like almost immediately after the show.
That remains the source feed for that audio is better quality.
It includes some processing in Jack and it doesn't include like all the dead air on the livestream when we're bringing the streams up.
And it's just a standby screen and all of that kind of stuff.
And we don't go back and prune the archive like we're going to do on PeerTube to keep storage costs down.
And we're not going to be posting the livestream video version to anything like YouTube or anything like that.
Or so with the with the member feed, you get the convenience, right?
You can just it's like any other podcast, etc.
This is a something a little different.
Yeah. And to dip our toe into something which is bigger that I'll talk about here in a moment.
But another reason it was an audience first reason is work from home.
You know, we hear from people that they just don't commute as much now.
And I'm honestly humbled that so many of you have figured out new ways to work us into your routines.
And we don't take that for granted at all.
And we're going to work hard every single week to try to make that decision worth it.
But also, I just hear from people out there that they're at their desk more when they listen.
So this might be something you could you know, when you're at your desk, you go up to Jupiter tube and watch it on there potentially.
Also, it's just a minimal overhead.
We're not making these video shows.
These are still audio multitrack recordings and have an audio editor.
We're just adding some cameras because of the low key nature of it.
It actually probably looks worse than we did 10 years ago.
But I just don't care. Right.
I'm not taking it seriously.
YouTube is a fool's game.
I don't much respect anybody wants to try it.
So it does work for some people.
But I hate what it incentivizes as a platform.
So we have no interest in that.
And the overhead is pretty minimal.
I've done live switching for a decade.
So for me, it's pretty natural to to live switch while I'm talking.
Just didn't know. Whoa, whoa.
So that's no big deal.
So that's no big deal, but the other bigger reason kind of looking out the podcasting
to community is working on live stream support inside the podcast app.
Now, this is where this is going.
Tell me more about this.
So you got your favorite podcast app and you pull up your podcast.
And when Linux Unplugged is live on a Sunday,
we'll just show up as another entry in the list of your podcast with a little badge or however
the developer implements it that says this is a live show.
And then you can tap that and in your existing podcast player,
you can just listen to the live stream like like with all your podcast controls.
That is neat.
Yeah, we've needed that for a long time.
Yeah, because otherwise we have to direct people like a whole separate setup, right?
And there's a lot of URLs to figure out.
And yeah, and some apps will let you some of those like Podverse,
some of the podcasting to do apps already support this.
They'll let you opt in for notifications when the show goes live.
If you want inside the app, you manage it inside the app.
Just say, yeah, notify me or by default, it doesn't.
So that I'm looking forward to.
But right now it's primarily audio that's in these apps.
But there are members in the podcasting to community who are working on making this
also a video and audio option.
So you would pick when you tap on if you want to watch the video or the audio.
And the awesome thing about that is they're doing this based around PeerTube
as the origination point for the video.
So the podcasting to folks are going to basically kind of encourage PeerTube
adoption for people who want to stream their video.
And one of the developers working on this is Alex Gates.
He's one of the podcasting to community members working on a bunch of awesome projects.
But he's working on this video stuff using PeerTube.
And he said, this was this morning in a conversation I had with him.
He said, the goal is to get PeerTube live stream support, either upstream or via a
series of plugins, which live notifications go through Podping on a federated live chat
via XMPP in a curated RSS feed out of the box.
Now, this is a lot of jargon.
But what he's saying is they're going to leverage a bunch of open standards like
ActivityPub and XMPP to do this back end work.
And he's going to create an example spec for people to follow that can then implement it
in the app or implement it as a podcaster.
And he says, I also want to provide the capability for apps to choose to participate
in a web torrent bandwidth sharing or just stream it directly to so you could also help
with that.
That'd be nice.
All from the podcasting app.
So that's another reason we're doing it.
Right.
So that's another reason we're doing it, we're just going to kind of start experimenting
with that stuff.
And the PeerTube project is such a great piece of free software as well.
So I just wanted to experiment with it again.
And I've gotten some community members who have offered to help us do some of the admin
side so we can kind of take over some of that.
And I'll do my first experiment, which our YouTube I was just looking.
Our YouTube channel has been in trouble since November 20th, 2020, when I did a mystery
science theater Apple stream and they gave us one of those like, if you screw up again,
you can't live stream anymore.
And it's been on our account since November of 2020.
So I just got to try it now.
You know, like next week, I'm just going to give it a go on Monday and see what happens
to do all of that.
We ended up deploying this instance of Jupiter tube on NixOS.
Yeah, we did.
And we deployed NixOS on Linode, which is not one of their default images.
No, no.
We have we had a little bit of fun with that.
Yeah, we learned a few things along the way.
And I don't know what you think would maybe be the most helpful thing to relate to people
that want to try this as well, because I know what we figured out was there's some label
stuff with the disks and that kind of thing.
Yeah, you know, you kind of you got to learn the particulars of the hosting platform that
you're using.
And so I'd play with it on like a couple other hosts that I already had set up when I first
started dabbling for the NixOS challenge.
But we hadn't actually deployed anything like on the JB stuff, really, except playing around
with VMs.
Yeah, locally, nothing up on Linode.
So it's fun.
I liked it because it was just like you and I sort of like pair installing NixOS.
And I'd never like walked through, you know, we've installed other like we've done Arch
before and that kind of thing.
But it was it was neat.
It was.
It was fun because we were tempted to follow a guide, but also wanted to do it on our own.
So we kind of just like a mix of both, which did lead us to make one little mistake with
I guess how the Nix installer finds the drives to set up for boot.
Yeah, so one of the particulars that we had to take into account was just sort of the
nature of the virtualization and the setup.
And so instead of having, you know, like a partition table set up on the disk by default,
you get just like the whole disk and Linode has a fancy setup where they'll run grub and
then that'll find your, you know, find your boot drive and load your kernel and that kind
of thing.
But NixOS is so neat that you just kind of enable a couple command line options, right?
You say, oh, yeah, well, I'm choosing BIOS boot or EFI and enable grub for me, please.
Then you don't really have to do much else.
And that was the first time we got into a situation where it's like, I know how to fix
like regular grub things, but, you know, or the ArchWiki's guide to install grub or whatever.
But here we're kind of just seeing this failure and it's saying like, oh, this mode, you have
to install in this mode, but you can't actually use, you know.
Yeah, not supported and yeah, and it just airs out when it's trying to do the bootloader stuff.
Yeah, exactly.
And you could go the other way.
You could obviously repartition things.
So we thought about taking that path, but we found some resources that suggested that
can break some of Linode's, you know, they've got functionality and there's reasons, obviously,
they've chosen that, you know, the default setup that they have.
And if you want to keep things like, have it be able to, you know, fix your root password
for you or something like that, you probably shouldn't vary that.
That's where they also suggested, I guess Linode suggests don't use UUIDs for your disks,
go by label, at least.
I don't know if that's still relevant, but at least at one time that was the suggestion.
Oh, okay.
I thought that was our secret sauce because it seemed like when we started going by label,
then the bootloader finished installing.
Well, so then we also found out how, you know, learn more about how the grub setup works
in NixOS to go ask it, still write all the config files because we wanted those, but
just don't bother with the part where you go, you know, write the grub magic onto the
physical part of the disk.
And that was the part that was failing.
So then, like, you know, there was no, once we got that little config change, it just
worked.
So that's pretty easy.
They do have a guide, which we could have followed.
But yeah, we did it the painful way.
So instead of doing what we did, we'll have some links in the show notes that will sort
of lay this out if you want to copy it, because I mean, once we figured that out, even though
we kind of we did it a couple of times, we debated like, to be clear, this was like after
the show last weekend.
And so we're kind of just like, how quickly can we get PeerTube back up and going?
Yeah.
Trying to like hazily like remember the last time because we just played with it, right?
We threw the old one away.
We didn't think we needed it again.
Now we were done.
Never going to use that again.
But it was nice because we went down and then we decided, oh, no, let's like start again,
reinstall.
Now we found some like better directions for how we're going to do this.
And since we just had our same configuration.nix file, it was no big deal.
Yeah, that was what was so great is to put that another way is when we were trying to
go through all of this and it didn't work and we were just about like, ah, screw it.
We'll just go, you know, we'll go deploy 2204 or whatever.
It'll be fine.
When we right at that moment, we're like, actually, yeah, if we just grab that configuration
file and we just start over and do it the right way.
Well, all the work was really filling out the config.
It'll just rebuild.
And that is such a great moment with Nix.
It's it's so nice.
And to that end, right after we went through all that manual process of installing it,
like the next day or something, two days later, the new version of Nix came out with a graphical
installer, ironically.
So we tried it out for the Linux Action News and I put it on my ThinkPad that we were doing
the BcashFS testing on a couple of weeks ago.
And I left it on there and I started using it over the weekend, just kind of filling
out that configuration file.
And it's the same thing as a test over the weekend.
I just blew the whole thing away.
I dropped the configuration file back on there and rebuilt the whole system.
And it's amazing.
And I have everything in that file I need to work on my applications, my Flatpak support,
my tail scale stuff, everything.
And I like having it in one file.
I know I could do includes.
I don't want to.
I don't want to, Wes.
I like having it all in one file.
I love it that way.
And I wasn't really sure when we took the Nix challenge a bit ago how Nix would be on
the desktop.
I was solely focused on the server.
Totally.
Oh, oh, it's so good on the desktop.
It turns out for a certain kind of like, I just want this thing to always work.
Like on my ThinkPad, I want to raise the screen and get to work.
Maybe it's not you're like tinkering, constantly fiddling with your setup or something, but
on a machine.
Yeah, right.
You're just like, I want a few plugins installed.
I want to configure a couple of things and then just be playing.
You can even declare the Nome extensions you want a little plain with fire in case there's
a Nome update, but I think that's pretty great.
And then last but not least, and I'm sure this is true with Silverblue as well, what
really seals the deal and bridges the gap from like a 90% solution to a 100% solution
for me is Flatpak.
So when you have Flatpak on NixOS, I've declared like all of my core system in the configuration
file and that's incredibly powerful.
But then like, if I want to just rando try something, there's almost always a Flatpak
of it now and I can just throw it on my system with Flatpak and that also works.
But between Flatpak and more, you know, the server world of containers, obviously Flatpak
uses the same sort of primitives.
Yeah, right.
We've got we've got these nice escape hatches now that you really can have a really locked
down set up sort of base system and then put some stuff on as you see fit.
So if you haven't heard the news, if you haven't listened to Linux action is from last week,
the latest version of NixOS with the either the Gnome or the Plasma ISOs has the was
it Climaris, is that how we say it?
Colomaris, I don't know.
But it's a really well known distro agnostic installer.
If you've used Manjaro or Endeavor OS or lots of distros out there, you've actually used
this installer before and we we were both really impressed with the implementation.
We weren't sure how that would port to something like Nix.
No, you know, just because here's a sure it's set up to be multi distro and have plugins
and have some extensibility built in, but even when you're supporting multiple distros,
like how many of those distros are set up like NixOS, you know, it's kind of a unique
set up.
So can can you work with that framework to actually marry those two things?
Because there's a bunch of different, you know, the process and the set up is different.
You got to hook into the next system.
But what's so neat about that is like once you've learned a little bit about Nix enough
to go like read some Nix slang files, you just go look at like you can just go look
at the MR adding this feature and see exactly all the patches and what had to change and
how the modules fit together.
It's so cool.
Linode.com slash unplugged go there to get $100 in 60 day credit on a new account, and
you go there to support this show.
This show is made possible by you taking advantage of our sponsors offers and Linode is one that
I am totally on board with endorsing because we have built so much of our infrastructure
on Linode.
It's one of these sponsors where I have just spent hours and hours and hours using their
platform.
I can tell in those hours that this is something that has been iterated and approved on for
years.
You know, Linode started nearly 19 years ago before AWS was a twinkle in Bezos's eye and
their mission has remained unchanged since all of that.
Even with all of these other crazy competitors coming on board jacked up with their VC funds,
Linode has focused on making cloud computing simple, affordable and accessible to all.
This has led to the best in class experience with performance, with configuration options
and with support.
Literally Linode can provide a level of support that the hyperscalers are just not designed
for.
And you can really see what I'm talking about when you go to Linode.com slash unplugged
and you get that $100.
And you know, they've got one click system.
Say you want to deploy something just super quick and get up and going like a next cloud
or a Jitsi or lots.
I mean, there's those are the ones I always mentioned because those are the ones I have
deployed.
But there's so many in what they call their marketplace.
But it's also really great for those of you who are cooking with gas.
You know, maybe you use Terraform or Kubernetes and to that end, Linode has a free ebook
they've put out Decorative Cloud Infrastructure Management with Terraform.
It's a book that covers infrastructure as code, covers a lot about Terraform specifically
and they talk about the unique aspects of Linode's Kubernetes engine and Terraform that
let you import your existing infrastructure into Terraform and do things that are really
next level.
I've only really begun to understand the power of this, but now I really understand
why some of you out there like this kind of stuff.
Linode's all about it.
Plus, they got 11 data centers around the world.
They are their own ISP, S3 compatible object storage, which is just killer.
DDoS protection, VLAN support, a powerful DNS manager with pricing 30 to 50% cheaper
than those major cloud hyperscalers.
It's pretty great and the best customer support in the business and it's a great
way to support the show.
Go build something.
Go learn something.
Go try something.
Go sign up today at linode.com slash unplugged.
Get that $100 in 60 day credit on your new account and you support this here show.
Linode.com slash unplugged.
Brent, you kind of surprised, I think, both Chris and myself this week when you let on
that you've still been running Tumbleweed on your laptop.
I kind of totally, unfortunately, I'll admit it here.
It's my bad, but I kind of just forgot, you know, we engaged in the Tumbleweed world.
I got very distracted by NixOS, but you, you kept on the path.
He stuck with it and sounds like it kind of went sideways, maybe, at least most recently.
I remember I think it was, well, it's actually Linux unplugged 4.3.2 when we did the Tumbleweed
kind of the three of us tried a bunch of different ways of playing with it.
And I remember distinctly making a promise in there, which was that I would
continue using it and we would do an update at some point.
Now, I did not plan for that to be this week, but it seemed like a natural, natural thing
to do, considering I ran into a few little issues that I thought I would discuss.
Uh oh.
Yeah, it's like Tumbleweed tribulations.
The weeds of Tumbleweed.
Okay, let me give you a little context, I guess is fair.
I have a laptop that I use, you know, every single day.
It's not running Tumbleweed.
It's running something else.
But I do have a podcasting laptop that its sole purpose is just to make sure my voice
sounds great and records everything and connects with you guys, you know, once, twice, three
times a week, and it's kind of the podcasting appliance.
And that one is running Tumbleweed.
Ah, so you're putting the most risk over there.
Yeah, okay.
I know.
Well, if you remember correctly, during that episode way back, I think it was November,
actually did our episode recorded it on that laptop, even though it was the first time
that we were kind of getting familiar with it.
So it was a little risky.
And, you know, I like risk.
So I stayed with it.
And it's been great.
All right, now, that being said, it's been an appliance.
So I haven't really treated it maybe the way I should treat a rolling release.
Christ, I know in the past, you've got caught with this with with Arch, but I never updated
it since November.
Oh, oh, oh, oh, oh, Brent.
It's going to be quite a few months since November now.
That's not how rolling distros are supposed to work, Brent.
And I know better as well.
But it ended up being kind of fun.
It's going to be a new thing.
And you were traveling too.
I mean, there's all kinds of excuses you probably could come up with, I imagine.
Yeah, I've got I got many of them that I'm telling myself.
It started as a really simple thing, because this thing just runs and I never have any
issues with it.
But I tried to use it for a different purpose, which was I tried to use cheese, if you guys
are familiar with cheese, just to do a little video with some audio of me playing the drums
over here that are on my right and ran into like a small issue.
And I was like, Oh, well, I'll just, you know, I'll just update and reboot and everything
will be fine.
I was like, Oh, yeah, I haven't updated this ever.
And it turned out to be slightly problematic.
So it wanted to do updates of like 2300 packages, which yeah, I guess makes sense.
Like two gigs worth of stuff.
Wow.
Like a Brent's offended by this.
Don't give me all these.
Why so many packages?
Geez, how dare you bring me to the current state?
It was an interesting experiment, because I've, you know, run enter goes enter goes
before, thanks to the, you know, the arch challenge, Chris, that you enabled way back.
And I just got sort of cozy again with the rolling lifestyle.
You know, every once in a while, something breaks, and you have to dig in and you can't
really schedule this, you just kind of have to be okay with it and solve some issue and
stay up later than you want to and learn a bunch along the way.
And I think this time, really, what I learned was the power of zipper and how nice its interface
is.
At first, when I was solving this, and I was trying to play drums, I just wanted to quickly
record something.
I just use discover to try to do the updates.
And it was, hmm, let's say problematic.
So it threw like 20 errors, which I thought, no, that's not great.
And some dependency resolution errors, which I don't think discover is built to solve.
And then it started asking me for pseudo privileges for every single package thereafter that actually
works.
And there's 2000 packages, right?
I remember this in our chat.
You're like, nope, this is where I'm out.
I'm out.
Shouldn't have chosen a really, really long secure password there, Brent.
So using discover is not typically my way of doing upgrades.
But I just forgot to remember zipper.
It had been, you know, since November that we talked about it.
So I dug into our show notes, and I remembered all of these things.
And it turned out zipper was far more helpful, as you might imagine.
It gave some really helpful tips, like it suggested, oh, wait, you got all these updates.
But actually, you want to run a different command.
So it said, consider canceling, right at the bottom.
It said, consider canceling.
You have to sort of use a different command to update the entire OS.
I was like, oh, that's so helpful.
It was really great.
So it was like, no, no, run zipper, you know, disrupt, right?
And I was like, oh, that is nice.
So I decided to do that.
And those 21 problems showed up with some helpful solutions and stuff.
So I was able to get through those.
They ended up being some like vendor change problems, which I think is sort of normal.
I'm not sure.
I'm not that familiar with it.
I did install the like codecs, multimedia codecs.
So I think it might have something to do with that.
I did some research.
Some people were talking about is really helpful.
Like my research was very short because I was able to search for exactly the error errors
and they came up right away.
So it was really nice to see that the community was on top of this stuff pretty quickly.
I did find Neil in there somewhere sharing comments as well about how things were working
and not working.
So it was nice to see some familiar faces.
So thanks, Neil.
So I got through all those errors pretty smoothly, which I thought was wonderful.
And the process that Zipper offered to solve those was equally nice.
So I stayed in a fairly good mood for that.
So I was finally able to get through the upgrades.
There was some stuff that stood out to me that I thought you guys might find was interesting.
There were 20 vendor changes.
Like I mentioned, two packages wanted to be downgraded, which I didn't expect.
And two packages also wanted to change architecture, which I don't think is a good thing.
Yeah, unless they're going from 32 to 64, possibly.
It looks like in this case, it's going from being explicitly labeled x86-64 to no arch.
So is it maybe just that those packages no longer have a strict requirement on that?
Or there's just no 32 option anymore.
Yeah.
So that's where my mind went was either that's totally fine and I can just safely ignore it
or it's going to be very bad.
And I thought, this is great show content.
So I'm just going to go for it.
Fair enough.
I like the way you think.
Right.
You've trained me well, sir.
It went fine.
I ended up with one last error that I haven't solved yet.
And it's nice because they offer, you know, Zipper offers solutions.
So I have some issue that I've described that I won't get into here.
You know, it has like solution one, deinstall that package.
Solution two, keep the obsolete package.
Solution three, break it and ignore its dependencies.
So it's at least nice it's trying to solve the room.
I don't know which one of those is supposed to be good.
I'm just going to ignore the whole thing.
But it was super great.
Zipper with its like extra verbose information was just fabulous.
So and it color codes like the warnings that are like pretty critical seeming are red.
And the ones that are like, well, these are just maybe warning.
They're yellow.
And it's just super nice.
So if someone wants to try that, I think it was a pretty good time.
But it brought me to remembering the whole rolling release lifestyle.
Do you remember what that's like?
I feel like you're describing a worse version.
I mean, because the rolling lifestyle you update.
You just pick your update time.
You know, you have to have a little care about it.
Yeah, you're kind of like the maniac at the right time.
For sure.
And but I do remember when I was, you know, more regularly using sort of a arch base as
my everyday, you know, you get into, you know, an arch.
I don't know how this happens.
But then you end up wanting to, like, update five, six, 20 times a day.
Feels good to type SYU.
There's something about it.
I've seen Alex.
Every time he sits at his computer, he does that.
It's crazy.
It felt like these were the exact kind of problems I used to run into on a not daily
basis, but you just randomly sort of run into them.
So I don't know if I'm doing something wrong or or whatever.
But it also has taught me a heck of a lot.
You know, a lot of the skills that I've learned was trying to troubleshoot some of this stuff.
So I think I've at least with these experiences that I've got under my belt, I've come to
the conclusion that the rolling release lifestyle is great because you get the updated software.
You get to play with new stuff like, you know, pipewire comes out pretty darn fast and all
the new stuff you can play with.
From that perspective, it's awesome.
The community tends to be also quite great.
You know, if you run into an issue typically within an hour or less, someone's already
talking about it.
That I found really great.
Is there a but coming here?
Well, it just gets me pondering because you also have lots of unplanned learning and maintenance.
And I think maybe I'm at a point now where I don't really appreciate that.
And I wondered how you guys feel about that.
That's interesting because that was going to be my observation is you kind of have to
be and it seems like you successfully did it, though, but you kind of have to be willing
to convert a real pain in your butt into a learning opportunity.
And you kind of have to keep your head about it and work your way through it.
Because I know my initial reaction these days is when there's a whole bunch of package issues
and I'm like, screw this, I'm out and I'll just wipe it.
But with Seuss in particular, when we were trying tumbleweed, I stuck with it when I
had an issue so that way I could try to learn it.
And I do think it was beneficial, but you have to.
It's a mindset thing.
Well, I know it's true, right?
There's that sort of trade off.
You certainly you could switch back to, you know, LTS, Brent's LTS lifestyle.
But then you what what kind of cadence do you want for upgrades and you kind of have
to figure out you want the do you want lots of small changes or less frequent big changes?
Because this could be a story of sort of like, oh, gosh, the new Ubuntu is really different
now and I'm getting some pipeline or whatever.
And then your whole system isn't working for the weekend as you refigure that out.
Yeah.
And there is leap.
There is leap.
That is true.
That is true.
Maybe that's worth considering.
Hmm.
Well, I think it's worth me sticking with this because then we can, you know,
see where it goes in another six months.
That's the real question.
Yeah.
I mean, you're connected today, so it must be working right now.
I think it's working.
It's working, right?
As far as I can tell, yeah.
You know, at the back of my mind the whole time, I was remembering that ButterFS is just
baked in by default and that I can just roll back if I totally went down the wrong path
and try something else.
So I think you're going to have to try that for the show.
Yeah.
Maybe I should try harder to screw it up.
But that insurance was really nice, too.
So that's one of the things that can mitigate, right, the unplanned nature.
Because if you're sort of like, oh, I wanted to do an upgrade, but I'm also about to go
traveling.
I don't have time to fix this because I needed to go download my podcast for the flight
or whatever, right?
And you can just be like, nope, old one.
I'll deal with this later.
Very good point.
I did notice in OpenSUSE's news section, they had a community annual survey that came out,
I guess, a few months ago now.
And they did mention that most people who took the survey recommend OpenSUSE distributions
for advanced users.
And they least recommended for new users.
So at least users are thoughtful in how they're recommending these things.
That's interesting.
That's interesting because don't you think YAS is sort of trying to appeal to a new user?
I mean, I do think I kind of agree.
But when I think of SUSE, I think of a distribution that's trying to cater to people that have
never had to configure a Linux machine, too.
Yeah, it's true.
But I wonder if that's not necessarily new user and it's like differently competent computer
user.
Because I feel like you'd need to also understand how to configure, say, Windows for that to
be super useful out of the gate.
And probably the same people who aren't into configuring computers at all.
It's not like YAS is suddenly going to be.
I mean, it is better than figuring out the command line, perhaps.
But it's still a complicated system if you don't understand the basic of how your system
works.
Yeah, that's probably where I was when I first started trying it.
And I was used to managing a Windows system.
Yeah, one of the quotes from the survey results I thought packed it up pretty nicely.
It said the distribution was easy to use and were held in high regard, especially for the
core uses of the server with web hosting, databases, containers and virtualization.
So I think if you're in the world already, go try it.
You're going to be fine.
But if you don't really know what Linux is and you're just getting into it, this is not
the place for you.
So you're going to stick with it, though?
Yeah, I don't know.
This seems exciting.
Otherwise, it's been totally fine and very fun to use.
So yeah, unless someone has a better idea for me to go down some rabbit hole, I'm willing
to hear about it.
Linux subplug dot com slash contact.
I like it.
You know, we kind of had to give up the whole Arch updates on the air, but now we can rent
us as Dumbleweed.
Bitwarden dot com slash Linux.
Go get started for free at Bitwarden dot com slash Linux for an individual user or start
a trial for your team or enterprise.
Bitwarden is the easiest way for businesses and individuals to store, share and sync sensitive
data.
It's fully customizable.
You can turn off features in your enterprise with policies you don't want.
It's built on open source.
So, you know, I love it and trust it.
And it has a huge community around it, including a big self-hosting community.
It's what Wes and I use to manage all of our passwords, our two factor code tokens and
other sensitive data like recovery keys.
Some apps these days require things beyond just a password to recover, get back into
them.
And one of the things that I really like is how they keep iterating the experience and
making it better and better.
You guys know I'm all about that.
It's like do something, do it really well and then just focus on that and make it better.
And that's why when they added username generators, I was like, heck, yes.
But now, now it's even better.
Now, when you use Bitwarden to generate your username and a password, it'll also tie in
with simple login or a non Addy or something like Firefox Relay.
You enter your API key for one of those services and how it'll generate an email address.
So you're getting a username, password and email address that is unique just to that
account, just to that service, just there.
Right.
So if something happens, if the worst thing happens and their passwords get leaked, you're
good.
They didn't even get your email address.
This is brilliant.
And this is what I'm talking about is a Bitwarden user.
I've noticed it just keeps getting better and better.
I've been a user for a couple of years and it's just great.
On Android, they've just now added quick account switching.
When you're at the password fill out screen, you just tap your user icon, switch over to
your other account, maybe like, you know, for your business stuff.
They're adding features all the time to that are great for businesses and individuals who
like to just self-sovereign it.
You know, like, I appreciate that, that they can walk that line and they do it so well
and they contribute back upstream to make it possible.
It's easy to get started with Bitwarden, too.
That's the best thing.
You might even import your existing password database.
It did mine.
So go to bitwarden.com slash Linux, try it out for yourself, for your business, or more
than likely, maybe you have a friend or a family member or a colleague that needs to
just do a little bit better with their passwords.
I legit can't tell you how many people I've seen to store their passwords on a sticky
note under the keyboard.
If that's you or you know somebody that's doing that, stop right now and go to bitwarden.com
slash Linux.
Support the show and try it out for free.
Bitwarden.com slash Linux.
As usual, we got some great boosts this week.
They just seem to be getting better and better all the time.
And now it is time for the boost.
Silver Koala wrote in four days ago with 5000 sats.
First time trying the Breeze app.
Simple, easy to use.
First impressions are that it's easier and less buggy than Fountain.
Nice.
So Breeze is a lightning storefront in your phone, basically.
It's a lightning wallet that runs a lightning node, so you are all 100% self-contained,
and it can connect to our podcast feed and you can send a boost in without having to
switch podcast apps.
Convenient.
Double boost.
Silver Koala also wrote in again four days ago with 5000 sats.
I've noticed that Breeze app also has limited notes like Fountain.
Yeah, I like this.
I like you can send a little note in there.
I think it's like 300 characters or something like that.
Just fine by me.
See, I interpreted that to mean limited notes, i.e. not our full show notes show up.
Remember?
Oh, you're right.
This sounds like an issue tracker kind of boost to me.
Okay, all right.
We can add that.
I think I wouldn't count on Breeze having all the notes, though, you know, but Fountain,
we got to get on that.
It's all part of figuring things out in the relationship.
Yeah, well, speaking of 412 Linux boosted in five days ago with 500 sats with some
feedback on, you know, the whole members feed stuff and video live.
We asked for that.
So let's have it.
Well, 412 Linux has been listening to the live feed since its availability.
Hey, that's awesome.
Really enjoys it.
Multitask while listening.
So video is not that important, but it is nice occasionally to, you know, pop in and
watch the video or for special occasion.
Something you mentioned there, Chris.
Mm hmm.
Part two.
I do like when you include small bits about the sponsors in the live feed.
I like that I don't have to listen to the whole ad, but I get to know the sponsor in
special deals or info.
Thanks for the show.
You know what?
We have the best members ever.
I mean, so 412, thank you for being a member and then for boosting on top of that.
You are you are great.
So thank you very much for that user 609 to six days ago, boosted in with 5000 sats.
Yes, this one was about the Intel software defined CPU that we covered.
And a lot of people had thoughts on that.
And user 609 wrote, is Intel underestimating the risk of geeks managing to crack their
processors?
I'm not condoning or promoting this, but surely buying a processor for 100 bucks and
ending up with an equivalent $400 model is very tempting.
And I could see disgruntled Linux users giving some direct feedback on what they think of
this business model.
Do you guys think you think it's possible people could figure out ways to hack this?
You know, I'm sure Intel has tried not to make that happen.
And you got to get past some of the crypto stuff.
But probably the most, you know, realistic way is like all these things, right?
There's a mistake somewhere.
You can take advantage of it.
That said, I imagine that's somewhat less of a concern if like perhaps the enterprise
or data center market or some of the things there is more where they're thinking for this.
I don't know that us, you know, retail consumers are really going to be the people paying to
enable the features.
Maybe it'll go that way.
I hope not.
We were speculating in the pre show that this could be years away.
Like if Intel is trying to get it upstream into 518 now, it might be years before we
see a product that uses this because perhaps they want to get it into something like REL.
So that way, when they do ship an enterprise product that uses the software to find features.
Distributions like REL and Debian already have the feature set.
And if that's the case, we're looking at years of not knowing.
But one of the things I'm trying to figure out, and we talked about how this mechanism
works, I'm trying to figure out how the mechanism is going to verify that you're going to
verify that your authorization files, your licenses to do this, to activate these features.
How does it figure out it's valid?
There's two mechanisms.
There's a feature that gets enabled and there's a file that's the license to enable that feature.
And what prevents me from taking that license file off of my file system and giving it to
Wes and him putting on his file system and having that feature?
Maybe there is something I'm missing.
Maybe it's more complicated than that.
Or maybe there's some sort of cloud activation aspect to this as well that we haven't heard
about yet that wouldn't be revealed in their code to the kernel.
Yeah, right.
We just kind of know about the interface, not necessarily what user space thing is going
to be talking to the kernel and loading these various things into the capabilities.
Boost.
Marcel wrote in six days ago with 1969 SATs.
Chris, have you figured out if there's anything, any special meaning to that number?
That feels like a birthday.
Or just a really great year?
Yeah, feels like a year to me.
1969.
That's how I read it.
Good music that year, I think, if I remember.
Yeah, maybe, maybe.
They're right.
I'm very anti-SDSI.
But let's remember Intel is responsible here, not Linux.
Why should the kernel get flack for implementing this feature?
You're right.
Linux is about freedom.
With this feature, you're free to use the horrible model of Intel's, which you couldn't
before.
Linux is not restricting you.
Intel is.
They didn't support it.
I think it wouldn't change anything.
We just have kernel patches rolling around, and it would be worse for everyone involved.
Vote with your wallet.
Yeah, point there.
Yeah, I think the kernel community has kind of learned that people are going to do it
anyway.
So maybe this helps.
No, Marcel's right.
Last week, I was just saying, should we, as a community, try to act as a last line of
defense for this?
And it would start with the kernel community.
But Marcel's right.
It's like, OK, if you do it for Intel, then you've got to do it for so many other hardware
devices.
Where do we draw the line?
You know, it does occur to me 1969 was right before the start of the old Unix epoch.
That could be it.
Let us know, Marcel.
That could be it.
Mage also wrote in via the feedback at linuxunplug.com slash contact on the same topic.
They write CPU as a service.
Say hello to the next generation from ransomware.
That's a nice compute slash virtualization cluster slash database CRP you've got there.
Would be a shame if virtualization and extra CPU cores were disabled until you paid us.
That would be a shame.
That's the enterprise use case I'm thinking of.
It's funny to kind of pitch it as ransomware.
Like you have something on your computer, but you can't unlock it until you pay us.
There is like there is a little bit of that.
All right, I'll take this next one because this was a special triple boost by the Golden
Dragon.
I didn't know that was even possible.
Totally in 2000 sats, Golden Dragon was boosting along as they listened in the pre-show.
They speculated that this system D stuff may play out fairly interesting to observe and
wondered if it would work well on a system like Arch.
And the system D feature they're talking about is building in the AB system updating mechanism
into system D. And you know, you hear what Brent just went through, maybe.
Because right now, SUSE is accomplishing that with file system technology and things like
Snapper sitting on top of that.
But wouldn't it be interesting if system D could manage some of that AB system switching
for them?
I could see that being nice and the sort of unification factor is a few, you know, more
distros have have that functionality and it worked similarly across them.
That could be neat.
Keeping up with the triple boost in B-O-O-S-T on SDSI, I'm mostly an opponent of DRM.
So this seems like an anti-consumer move, locking parts of the experience behind a paywall
just reads the same as when the gaming industry went to full downloadable content and day
one patches.
Yeah, I remember that world.
Who knows what the lengths Intel is willing to go to on this want to overclock pay us
virtualization pay us virtualization would be really, you know, like these low end consumer
devices that just can't do the same thing.
And it would just suck to from the Linux perspective of, you know, like we're so used to assuming
that, like you get this OS and you get all the you get all these things, you know, maybe
it's not the most performant version or whatever, but like you can do it more limitations would
be lame.
A lot of people wrote in this is a common thread on Matrix two about the resale market.
How is this going to mess with the resale market, especially if Westpain buys the features
it's licensed to Westpain's Intel account.
Yeah, it's licensed to me or the chip or.
Yeah.
And does it make the resale market just totally screwed like you got a you had an $800 value
computer, but when you sell it and the features get deactivated, now it's only a $600 computer
because the CPU doesn't do it.
But that's why it makes sense to have an ongoing subscription cost that way.
You know, that's why when you're done with it, you don't have to keep paying for it.
Just make it part of your Intel plus subscription.
Oh, man, I hope not.
Oh, geez.
I think the resale market was the aspect I didn't think of the most.
During the show that we got the most feedback on to here's the last boost that came in from
the Golden Dragon, although they said quad.
I saw three boosts, but they invoked the cone of silence for this one.
So this is private.
The cone of silence.
That's just for us.
Come on in here.
They're right.
I might have a slight boost addiction.
So let's just try to move right past this.
The cone of silence.
He writes, I just wanted to say I really enjoyed the show and I'm glad to be able to help out
this way.
I streamed some stats and I got my two cents in all in a cool new way.
F yeah.
Boost to grams and F yeah.
Go, JB.
Oh, that's great.
We got a thank you boost from user eight eight nine to did a mic test for 2100 sats.
Test, test, test.
And this is I think we'll do one more week now of our splits.
So we're going to do a mic test for 2100 sats.
Test, test, test.
And this is I think we'll do one more week now of our splits.
So when you boost in a split, I think we're doing 10, 15%.
Maybe I can't remember.
I think it's maybe 15.
We're giving 15% of the splits to open sats, which is a charity that donates 100% of the
funds they receive to free software projects.
So yours, your boosts are going to help open source as well.
If you'd like to send a boost, go grab a new podcast app at new podcast apps.com,
or keep your podcast app and you can just use breeze B R E E Z dot technology.
Something special for our picks this week.
We don't ever do this ever.
I don't think we've never picked a subscription.
We've never picked anything really that's not software for the most part,
except for with a very few exceptions.
But this week's a, is an exception week.
Our buddy, Michael Larable over at Ferronix has launched a special edition of the
subscription price for the 18th birthday of Ferronix.
Yep.
Happy birthday to Ferronix.
Freaking.
Hey man, that is very impressive.
June 5th, 2022 marks the 18th birthday for Ferronix.com for Ferronix.
It's kind of hard to say fast, but I got it to mark the occasion.
There's a premium special.
If you'd like to go all ad free and I'm going to say this, you know, the reality is guys,
um, even if you're not a big Ferronix reader on the daily, uh, Wes and I are super tuned
in to like all the news in the Linux world for Linux action news.
And a lot of our stories for Linux action news start with a Ferronix article that then
sends us down a rabbit hole for coverage in the show.
And there is only a very, very small handful of original content creators in this space
that are not just taking something somebody else is reporting and repeating it.
Doing the hard work of following, you know, the day to day ins outs of the work going
on in these projects and then knowing enough, understanding enough, having paid attention
for years to give the context to know like what things the rest of the community should
know about.
Yeah, that's just it.
And every year he gets better at doing what he's doing.
Uh, and you know, he's testing the hardware when new hardware comes out and doing the
benchmarks as well.
Finding kernel regressions.
Yeah.
Yeah, that's a great point.
I mean, I think he probably is most known for the benchmarks, but a lot of what Michael
does is dig through kernel development stuff.
And yeah, there was a regression, a performance regression that we talked about in Linux action
news in 518.
And you know, sure enough, you start digging into it and Michael's one of the first people
talking about it in public.
And the kernel developers knew behind the scenes, they weren't saying anything.
They were submitting the patches.
But Michael, you know, brings light to this kind of stuff.
And he does a lot of the original reporting in the Linux community.
A lot of other people are based on the reporting off of what he does.
So I just wanted to give him a plug.
He didn't ask us to.
In fact, a year or so ago when I invited him on the show, I invited him to plug his membership
and he declined.
He's very humble about it.
He doesn't ask very often.
So, you know, 25 bucks for a year or 140 for a lifetime.
It's a steal.
Yeah, it's it's it's for Onyx's birthday.
It's pretty great to see.
It reminds me I need to get my subscription.
I need to renew mine.
Yeah.
Oh, jeez.
You know, I think I might have a bonus pick here.
It's actually a software piece, too.
Brent sneaking in.
Well, audience member JJ wrote in with a really great tool that they wrote in Rust.
I'm sorry.
What'd you say?
Oh, I said, I think the tool was written in Rust.
Huh?
Rust you say?
And they got inspired by episode 448 of Linux and plug.
Do you remember when we did that encrypted show notes episode where we didn't have any
idea what we were talking about to each other?
That was our first of each one of us brings a topic, which is what inspired this episode.
That's right.
And Chris, you touched on some steganography that you hid a bunch of hidden messages in
a cute little Levi photo.
Well, JJ wrote a little Rust program called a steganosaurus that does a lot of cool things
in the steganography world.
So check it out.
Well done, JJ.
That's great.
We'll put a link to that in the show notes.
I love it.
What a great project, too.
He writes in there and helped him ignore some exams, which he did get through.
He did finish the exams, which that also is important.
Just remember that we get together every single Sunday to do the show live.
We started usually around noon Pacific, 3 p.m.
Eastern, usually a little bit earlier over at Jupiter Tube, Jupiter Dot Tube.
And don't miss Linux action news.
No, do not.
Companion piece.
Stuff going on every week in the world of Linux and open source.
You know where it goes?
LinuxActionNews.com.
Yeah, exactly.
I think, you know, there's an RSS feed you can use, too.
Huh?
Yeah, one of those newfangled technologies.
Sorry, sorry about the XML.
There's a JSON one, too.
You know, you could build some stuff on top of that RSS.
You know, if you think about it, you could build some stuff.
See you next week.
Same bad time, same bad station.
And of course, links to what we talked about today are over at our website,
LinuxUnplugged.com slash 461, right?
That's right.
How that happened, I don't know.
Does that mean we're now closer to 500?
That can't be, because we just did the beer thing.
So that can't be right.
That can't be right.
We're going to have to brew a cider this time?
That's not bad, Wes.
We should just be doing that anyways.
I'm surprised we're not brewing a cider right now.
That's how we get Brent to come back to the studio.
All right.
Well, thanks so much for joining us this week.
Yeah, I'm only going to take some if it's a hoppy cider.
All right.
All right.
We can make one of those.
Be sure to join us next week at LinuxUnplugged.com slash subscribe for the feed.
Thanks so much.
And see you then.
So we got some propane for the grillskis.
What?
So and I got some Costco beef dogs.
That's...
You're inspired, sir.
Mm-hmm.
Mm-hmm.
You going to take care of yourself after this, Brent?
I always do.
You got some work to do over there.
More zipper updates to fix.
I feel like things are slowly falling apart, but yeah, yeah, yeah.
We'll fix them all.
I think it'll be OK.
That's better, right?
That's better than things quickly falling apart.
Yeah, you're right.
You can at least see it happening and you can do something about it.
Pretend that you can do something about it.
At least you have some hope that you might someday finish all of them.
Right, right.
Yeah.
I feel like you just had a...
You just made like a really deep metaphor for life when you were talking about his laptop
updates.
That's...
That's deep, Wes.
That's why we run Linux, right?
Yeah, that's the Wes way.
