Over at the Minimalists, if you can say it, Minimalists.com, here's a post about killing
my home internet is the most productive thing I've ever done.
Earlier this year, I made the conscious decision to remove all internet service from my home.
It ended up being the best productivity decision I've ever made.
I was not content with the time I was wasting.
I felt I could do more purposeful things with my time than spend it on the internet.
This doesn't mean I think the internet is evil, bad, or wrong.
It's not.
Internet is an amazing tool, one that changed my life for the better.
But you run a popular website.
How could you possibly go without internet service at home, you might ask?
My answer is easy.
I plan my internet use.
I don't do so in a regimented way.
It's not like I say, okay, I'll be on Twitter from two to four next Thursday.
If I see something I want to research on the internet, I write it down and use that list
when I have internet access.
So I thought that was a really interesting approach.
I know I've certainly had times where, you know, even if I am being productive, it's
very easy to get distracted.
You're on the Linux subreddit or Hacker News or a million other places, or you put on a
J.B. show.
Does anyone else have, like, productivity tips?
Does anyone else do this?
It kind of reminds me of Stallman's practice of, you know, getting online, syncing all
this stuff, writing offline replies, and then syncing back up with the internet.
I don't think it's something I would want to do in my day-to-day life, but it does make
me think about how I think about my internet access and how I plan my time.
This is Linux Unplugged, episode 192, for April 11, 2017.
Welcome to Linux Unplugged, your weekly Linux talk show that's kidnapped the host of Ask
Noah and we're forcing him to answer all our toughest Linux questions.
My name is Wes.
My name is Noah.
Hey, welcome to the show, Noah.
Thank you for joining us this week.
We very much appreciate it.
How are you doing?
Happy, happy, happy to be kidnapped.
Excellent.
Well, we've got an excellent show today, jam-packed.
Starting out, we've got some new projects we're going to highlight, some updates on
all of our favorite open source projects.
And then with the end of the Linux action show coming up, I thought it might be fun.
You know, Linux Unplugged started out as a follow-up show to the Linux action show, kind
of as a way for the community to engage with the topics.
Since then, we've kind of gone our own way, diverged a bit.
We frequently talk about different topics.
But since the Linux action show is going away, I thought it might be fun this time.
And since that last Linux action show, boy, howdy, that was a powerful show.
I thought it'd be fun maybe if we returned in spirit to the origins of Linux Unplugged.
So if people have questions for Noah and they want to talk a little bit about the Dell stuff
or know if there's anything that you want to talk about that you didn't get time to
talk about on the show, we can do that.
And of course, we need to talk about the big news, the news everyone's talking about.
That's right.
Ubuntu, dropping mirror, going to GNOME.
So I think to do that, we really need the people that make this show what it is, our
mumble room.
Time appropriate greetings, mumble room.
Greetings, appropriate greetings.
Hello.
How's everyone doing today?
It's Biffy.
Excellent.
Excellent.
Okay, so starting out today, I thought we'd talk about something.
We've talked about a little bit before, we've definitely covered it, and it's the Pinebook.
I just saw this update here that says the Pinebook Linux laptop is ready to ship for
$89 and up, plus shipping, of course.
So we've talked about it a little bit before, but not with our friend Noah.
So the Pinebook is a cheap, low-power laptop with an ARM-based processor.
First unveiled in November, the Pinebook comes from the makers of the Pine A64 single-board
computer and uses the same processor as that tiny desktop.
Now the company is getting ready to begin shipping laptops to customers.
Prices start at just $89 for a model with an 11.6-inch display, or $99 for a 14-inch
version.
But shipping from Hong Kong can add as much as $37 to the price, depending on where you
live.
It's available through a build-to-order system, so you enter your email address and choose
a screen size and then wait for the sales team to contact you.
It's got a 64-bit all-winner A64 ARM Cortex-A53 quad-core processor, two gigabytes of RAM,
16 gigabytes of eMMC storage, BGN Wi-Fi, Bluetooth, some USB 2.0 parts, a microSD card slot, headphone
jack, and a mini HDMI port.
Is this something that you might be interested in there, Mr. Noah?
Very much so, for a number of reasons.
The first is I think that it's important to acknowledge that we now live in a world where
the laptop is predominant, right?
You know, in the past, people would build their desktops, people had powerful workstations.
These days, if you go to the Googles, if you go to the Amazon, certainly during my time
at Dell, there are not a lot of people working on desktops, and the people that do work on
quote-unquote desktops, if you look at them carefully, they're not desktops.
They're desktop screens, desktop keyboards and mice connected to docking stations.
They're actually working on laptops.
I think that's the first thing to point out, that the world is transitioning towards a
world of laptops.
Yeah, I think that's a good point.
And then I'd add to that that I think that the ARM platform is particularly compelling
for those of us that like Linux because really, we dominate that space.
You know, Windows is not competitive on the ARM platform, to say the least.
Mac OS is not competitive on the ARM platform, to say the least, at least as a desktop platform
goes.
So I think that the more competition we have in the processor architecture space, the better
chance we have for Linux to take off as a desktop platform.
Yeah, I think that's definitely a good point.
It's somewhere where we maybe even have a little bit of an advantage, you know, especially
from the open source side of things, it's really easy to get things to work.
Sure, there's some differences.
But if you have access to the source code, it's really easy to start pointing those things
to different architectures.
What about you guys?
Anyone interested in something like this?
Well, I would be, I don't like the fact that it's all winter.
But other than that, it's interesting as far as like the price goes.
I don't think it even ships with an operating system, does it?
You know, that's a good question.
I'm not sure.
Yeah, I'm kind of wondering if they're pushing Android for this just because that's what
they were pushing for the Pine 64 in the first place.
Oh, yeah.
It generically says Linux or optional Android.
Yeah, I feel like it really means Android because the upstream main line Linux support
is pretty terrible on the Pine 64 still.
Really?
Yeah, it's really unfortunate.
I actually have a bunch of Pine 64s and I'm a little disappointed with how poorly supported
that CPU is, or the SoC that is.
How is the GPU?
The GPU is non-existent in open source.
You have to run, I think, their kernel and their U-boot.
That's always a problem with these AMD boards.
It's not AMD.
It's all winter.
It's all winter.
Sorry.
Yeah.
ARM, I think.
The problem is that the GPU often is not well supported only for Android, but not for the
Linux kernel.
Well, but you do have the standouts like the Raspberry Pi where everything is open now.
That is one of the advantages of using something like a Raspberry Pi over a Pine 64.
But you remember the first versions of the Raspberry Pi, how bad the GPU was supported.
Oh, yeah.
Oh, yeah.
What was that?
Are you talking to me?
Hold on.
I think Noah got dropped out of the on-air room.
Oh, no.
We've got production problems.
All right.
That's fine.
I'll be right back.
There we go.
Okay.
Well, yeah.
I think they don't know that I'm me.
I think that's the problem.
I think what happened was because I just basically smashed my face into the keyboard when I was
coming up with my name.
And then additionally, because I'm connected to you via Skype, I'm not connected to you
via the Mumble Room.
I think I've confused the Mumble admins.
That's what makes this show very special.
Exactly.
Okay.
So, following up then, we are on to our next story.
OpenELEC 8.0 Linux OS officially out with Raspberry Pi Zero support and Kodi 17.1.
It's based on the latest Kodi 17.1 Krypton open source and cross-platform media center
software.
OpenELEC 8 is here with a lot of updated internals as well as support for new platforms such
as the recently launched Raspberry Pi Zero W single board computer, the Witek Hub, and
the Witek Play 2.
I'm not familiar with those two, but they say Witek Play 2 brings endless entertainment
to your living room.
Enjoy the latest movies and series in 4K UHD.
So it sounds like they've got some new devices.
Other new stuff includes Linux 4.9 kernel, numerous updated components along with new
XOR system D. So they've bumped provisions on a lot of the system software, including
FFmpeg, which I imagine will be at least somewhat important.
Plus there's no longer going to support iSCSI along with NFS.
And they also no longer support HFS or HFS plus file systems.
Hey, I can understand that as well.
Lerk, Linux infrared remote control support, got removed from OpenELEC 8 as well.
So if you guys are using that, watch out.
That's a big change.
They say it was mostly used only for older IR hardware.
So hopefully that doesn't bite anyone.
I've tried OpenELEC a little bit myself.
I liked it.
It was fun.
It was neat.
It was easy to set up.
But for my needs, at least on the device that I was using, it was a little bit easier for
me to just install Kodi on top of an existing platform where I had a little more control
and a little more familiarity.
But I could see this being a huge win for people who just, you know, they're not super
experienced with Linux, or they just want to get up and go and have this going and just
have it work in a consistent way.
What do you use?
You're talking about how you use offline media, Noah.
Do you have any Kodi in your life or is it all different things?
Yeah, so actually, I had a really rough start with OpenELEC.
Basically, we went to review the latest version of Kodi on the Linux Action Show, and I was
under the impression that Kodi was an appliance that you installed on your computer and then
you could turn your computer into a media center, right?
That's not what it is.
It's an application, and I wasn't aware of that.
And in my ignorance, we go on the air, we start talking about this, and I start talking
about how there's no utility to configure the network.
I always have to get out of Kodi to go manage my network interface and how silly that is
and how that would never work in an actual media environment.
All these people in the chat room are going, use OpenELEC, use OpenELEC.
Have you heard of OpenELEC?
Try OpenELEC.
You don't know what you're talking about.
That was my first clue that the chat room is always smarter than you are.
The chat room is telling you something, you need to listen to them.
This is before I learned that lesson, so I learned it in a very hard way.
I get off the air and I go, okay, what is this OpenELEC thing they're talking about?
That's the appliance thing that turns Kodi the application into an appliance.
And so then I was like, oh yeah, that was a huge embarrassing thing I did on the air,
so I didn't really want to play with it.
And after I got over that, then I actually built my first OpenELEC box, and it was incredible
everything I wanted it to do.
And I started slowly deciding that this could replace my current media player, which is
the Western Digital TV Live.
I mentioned that numerous times, I'm a big fan of them.
And what I found was the fall through with me anyway, was I have these universal remotes
that communicate RF, and they tie into all the home automation stuff, and the way they
do that was with little IR blasters.
And so I needed to be able to put the IR blasters on the OpenELEC box, and so I didn't have
an IR receiver.
So I bought one, but it was like that was an additional USB port, it just got to be
a pain.
So I eventually wound up with a box that runs Kodi, but it is the Android-based boxes called,
I believe it's a Matrix.
And we've done a review on it on the Linux Action Show, and you can find notes to it.
But I have one of my OpenELEC boxes left, and that's downstairs in my lab.
That's what I watch media on downstairs, so there's definitely Kodi in my life.
I am slowly transitioning the Western Digital TV Lives over to those Matrix boxes because
they run Android with Kodi, and that runs all of my local ISO media just fine, and all
the stuff I download on YouTube deal runs all of that just fine.
Nice.
That's awesome.
Yeah, see, that seems exactly like what it was useful for.
In my case, I was kind of bundling a box together that had, it was going to perform more than
one function there, so after trying it out, it was just a little bit too much of a pain
to get other software installed.
So I ended up going with Bantu Mate, which worked really nicely, and then a couple little,
you know, like a system B thing to start Kodi.
But I think you're right, though, that like if you need it to be an appliance or, you
know, something that can be standalone, something that a user can interact with in a consistent
way, you really do want something like OpenELEC.
Exactly.
Mumbo Room, do you guys have any thoughts on this, anyone using it or anyone not using
it?
I'm not using it, and to be honest, I always get surprised that there's so many people
interested in media centers because I really don't see them useful.
They're need anymore, really.
Okay, hold on.
Hold on.
Hold on.
Let's talk about it.
Let's talk about that for a second.
Are you a single male that is living either by yourself or your entertainment is controlled
solely by you?
That's not what I mean, because I have other people living with me, non-technical people,
so I can see the appeal to them, but again, I guess maybe it's also because of the discrepancy
in my country, like what the media services also come with the TV cable provider, tend
to be already pre-immersive and combined with all of the rest of your network.
Nobody really feels the need of, you know, I'm going to actually make this extra box
in here.
I think we should.
I think we should break that down.
You usually have that box out.
I feel like we need to break this down a little bit.
So you're saying that you don't see the need for a media center because the cable company
is providing it to you.
Is that, am I understanding that correctly?
Well, I'm saying that along, like having actually the need of an extra media center or want
something that will be providing extra features, like these extra features don't seem anybody
really asking for them.
I'm saying personally, I always get impressed and surprised at the quantity of people interested
on the topic personally.
Well, let me ask you this.
Do you own movies?
Yes.
How do you play them?
Well, do you already have either your PlayStation or you have your DVD?
If you have a media center, this is the other thing that I was saying, the box, the default
box, just to access your channels connects to your home network and can access any computer
as long as you basically enable the permission on the computer, basically one click away
and all of a sudden your hard drive is displayed in that box.
Right.
Though I guess my point is that first of all, I need a box that can play the media that
is stored on my hard drive one click away.
But more importantly, that the optical media thing works if you have five, 10, 20, 50,
maybe a hundred movies.
But I have something like 7,000 DVDs in my collection.
Do you know what a task it would be just to find a given movie, let alone organize and
store all of those movies if I had to physically store them all here at the house and have
them available so that I can watch them?
I mean, at some point it becomes a scale factor and it just becomes untenable, right?
My NAS, I have something like 64 terabytes of storage on my NAS.
My NAS, I can store as many movies as I want and I never really have to think about it
or worry about it because I just click on it, they're all alphabetized.
Sure.
Realistically, how many people have 7,000 movies though too?
Well, I don't know exactly and that's a combination that's movies and then TV shows too, right?
Because every TV show is, one season is 24 different video files.
I shouldn't say movies, I should say video files.
But one season can be up to 24 video files in the case of 24, right?
And then there's eight seasons.
So that's how many-
Multiple seasons.
Yeah, sure.
Right.
So I mean, I'm just saying that the media center to me, it makes a lot of sense if you
want to organize local media.
Now I could see the argument if you said, I don't care about local media, I'm just going
to stream everything or I'm going to do everything off my cable provider.
Okay, very good, but then we're relying on services, right?
And oftentimes not only relying on services, we are also having to pay for those services.
And so I don't know what it's like over in your part of the world, but over here, cable
starts at like $50 a month and then it goes up from there.
And my sister, I think her cable package is like $300 by the time she gets done adding
all this stuff, she needs a month.
Yeah.
Well, it's great.
And she has access to like everything under the sun, but that's a reoccurring cost.
You know how many, you know how much content I can purchase with $3,000 a year, well, really
$3,600 a year.
I mean, that's a lot of content if you start looking, if you start doing the math.
Yeah, that's true.
So the price might be actually a great point here because we started like 20 euros.
It's basically not 22 bucks a month and you have the channels and you have the recording
and you have the streaming and all of that is included.
You have all that as long as you continue to pay the ransom fee.
Right.
I think it comes down to people's priorities.
Well, it's not really a ransom fee.
By the way, it's not a ransom fee because you actually own the box that it's in your
home and that hard drive.
So if you'd low load to have it locally, it's locally available even if you close the service.
So if I cancel the service, I still have access to that content?
Yes.
See, that's a big difference.
You download it to your box.
Right.
That's a big difference in the way it works here in the U.S. Here in the U.S. if you pay
like you use like the hopper and direct TV, if you cancel the service, all of that prerecorded
content is gone.
In fact, and this is a big thing for cloud connected Chris, if he were to get a direct
TV subscription and he wants to take it in his RV, he has to leave that direct TV box
powered up because if he doesn't have access to the direct TV satellites, he can't even
watch his prerecorded content even if the subscription is active because it has to verify
that before you can play, you know, prerecorded content.
So it may be somewhat different from the way it works here in the U.S. That may be partly
why we have such different beliefs.
Yeah, I think that sounds about right.
So Ryan, you wanted to talk a little bit about your use case for Kodi.
Yeah, my wife and I use a Kodi box and we also have RetroPie installed on it.
And I think that for the longest time, we had a Plex server and we're using our TV's
built in app in order to connect to it because I had a built in Plex app.
But media playback for really, really big content like 4K, you know, content was not
the best and that was partly because of the server was not the newest.
So we just got a new, I work at System76, we got a Meerkat with, you know, an i5 and
connected it to our television.
Now we can do 4K playback no problem.
And we just moved all of our content locally to that box.
And she really likes it because we have a couple of controllers, Super Nintendo like
USB controllers, and she likes to pop open RetroPie, which like Kodi, you know, that's
local content, you know, that you own on the box and play games on it.
But she's not non-technical but as a less technical user loves Kodi and it didn't take
any time at all to, you know, for her to get started in using it.
And we moved all, like Noah, not 7000 videos, but we moved a lot of content there.
And it's nice to have it local because during peak hours here, you know, the internet streaming
can sometimes get really crappy, especially with high DPI or high, you're really high
def media.
But if it's just local on your box, you don't have to worry about, you know, what your neighbor's
pulling down, you know, and how stressed the pipe is.
Yeah, that's a good point.
Not everyone has, especially if you live in a place where you don't always have good internet
connectivity or you just, you know, you share an apartment building with a bunch of other
nerds who want to use internet all the time, it can give you a lot of flexibility.
Okay, so Mr. Tennell, you also wanted to chime in here.
I know you're...
Yeah, I wanted to talk about something else, but this topic kind of also wanted to address
the, like Kodi's not just local though, like, yeah, local, the Kodi is great because you
can do both and that you can do local if you want to, which is, you know, all the benefits
of using that, but it's not like you're required to do local media.
You can watch YouTube videos.
You can watch live streams of ESPN, all kinds of stuff on Kodi, and there's even now a plug-in
being made for Netflix.
Right?
That's a good point.
Also, you have the ability to use most of the streaming stuff you want, well, soon,
with Netflix, but it's not like...
It's an interface where you can have both and it's more of a convenience interface and
also you can deploy it on, like, a TV for your family members or maybe in, like, a lobby
of a business or something.
That's a good point.
There are a couple of apps on there.
I just wanted to make a point.
There are a couple of plug-ins that are better on Kodi than their apps on, you know, the
Samsung Smart TV, which is what I switched to recently, and the interface is better,
the ease of use is easier, and there are some apps that exist on Kodi that simply don't
exist on that platform.
So I think everyone...
I've made myself pretty clear numerous times what I think of, you know, local content versus
streaming content, but just for the purpose of an exercise, I'll take Devil's Advocate
and I'll play the other side here for a moment.
Why Kodi over just buying a Roku or an Amazon Fire Stick?
I mean, why would I use Kodi if I'm going to stream everything?
Because here's the thing, the streaming apps, the YouTube and Netflix and stuff, that stuff
is amazing on those things.
In fact, spending time with Chris in the RV, I mean, that's his primary source of entertainment
is the NVIDIA Shield with a YouTube app.
Well, I mean, my opinion, the reason why is not necessarily...
If your sole purpose is to only ever stream, Roku is fine, but Kodi is great because you
can do both.
Like, if someone wants to do local as their primary, like yourself, but then occasionally
maybe Netflix, Kodi's perfect.
Like you have all the benefits that you want for both sides without having to worry about,
you know, does this device have a specific channel?
Like Roku, you're only able to watch certain things based on whether someone has made a
channel for it.
That makes sense.
Kits and Kitty is telling me in the chat room that DirecTV has actually updated their policies
for playing local content and they now have specific provisions for people that are in
RVs.
Kits and Kitty.
I used to work for the parent company of DirecTV.
So you actually need special equipment and special flags on your account to do this.
This has kind of always been the case.
You can't really pack up your equipment, put it on your RV and then go because there's
location-based sensors inside the satellite equipment to prevent pirating and satellite
theft.
Fair enough.
And I should point out, Chris does not have DirecTV.
He does.
I mean, as an independent content creator, that would be kind of weird, right?
But just people like him in his position that are in RVs, that is a popular thing.
Nomadic fanatic, somebody who both Chris and I follow, he went through that about.
So I should make that clarification.
He doesn't have it as just using him as an example as somebody who may be interested
in it.
And that's very interesting, Kits and Kitty, that they've actually updated that.
It's actually not something that was updated.
It's something that's kind of always been there.
It's just a lot of people haven't had the need for it and everything.
So one more thing, regarding the OpenELEC news, I would suggest people take out LibreELEC
instead of OpenELEC, mainly because LibreELEC is a forked version of OpenELEC.
There was basically, like last year, they had a falling out between a lot of the developers
on OpenELEC, so they branched out and made their own.
And I would say that the reason why you would look at it is because they are much more up
to date with Kodi and they're basically on the same line of when Kodi updates, LibreELEC
updates.
So you'll see that version 8.0, first version of Kodi 17 being available in OpenELEC was
released a couple of days ago.
The first version of LibreELEC with version 17 of Kodi was a month and a half ago.
They are way more up to date and way more attentive to everything.
And you could actually, I've been using the beta of Krypton or Kodi 17 for months now
thanks to LibreELEC's consistently updating through the beta program so you can actually
just keep trying it the whole time.
There's a new beta for Kodi, there's a new beta for LibreELEC.
What are you using it on?
What hardware are you using LibreELEC on?
I tried to install OpenELEC on the Meerkat and it didn't really like it and I never troubleshot
it through enough to figure out why it wouldn't install, but it wasn't just a straightforward
install and run.
I've used it on a Pi, I've used it on a laptop, and I've used it on like a spare desktop computer.
Okay, so that seems like a perfect opportunity to segue into our next topic.
If you do have kind of trouble installing these things, here's an update from one of
our favorite projects, which is Snaps.
So Snaps support has landed in Fedora 24, 25, and 26.
David Callier on the Ubuntu blog writes, as part of our mission to get Snaps running everywhere,
we are pleased to announce that support for Snaps has now officially landed in Fedora,
starting with Fedora 24 and up.
Big thanks to Neil Gompa, who has been instrumental in landing SnapD packages in the Fedora archive.
So then they kind of go through some steps, you know, sudo dnf install SnapD, which is
kind of fun just to see.
They've got a little provisos here and there for if you're running on Fedora 24, but you
know, if you if you're hearing all the Ubuntu news, you're thinking, well, you know, even
with no Ubuntu, maybe I still really like Fedora, this kind of goes a little bit of
the way to bridging the gap between the systems and might make it a little bit easier to install
some of your favorite software that might not be in the Fedora repos.
What do you guys think?
Is this something that you guys would actually use?
Or is it just a novelty?
Use Fedora.
Well, as someone who was, to be honest, really against the whole idea of these containerizing
of apps, Snap has gotten really great.
And it just works TM a lot.
So this as far as I'm concerned, I'm really looking forward to it being available there
because you know, a lot of people go and say, oh, you know, snap, it's just a new Ubuntu
thing.
It's only really works there.
So as it actually moves out and people like see it, I think that it's going to have a
lot stronger standing, especially dealing with, you know, its competitors.
Snaps are available on a lot of distros now and the only holdout was really Fedora.
So now that it's on there, it's fantastic.
I've been using snaps for quite a lot and I think snaps are going to be so far, they
seem to be the most potential against the other ones.
Yeah.
I wanted to point out I did some snap packaging of a couple of apps and I noticed that they
actually, the desktop apps I packaged, respect my desktop settings like themes and so on
more than Flatpak, even though I'm using Ubuntu Gnome now.
So they just like Wizard pointed out, they just work a lot of the times and that's really,
you don't want to think about how something is packaged when you use it, you just want
to use it.
Right.
Yeah.
There's definitely a lot of places where you're just like, okay, I need to get this thing
done.
Let me install it.
How can I install it?
Oh no, library problems.
And if the snap works, then you're like, okay, great, now it works.
The Flatpaks don't have support for themes and fonts because they just don't have any
connections to the desktop.
Whereas the snaps have a specific snap app desktop package where it's specifically for
if you include that as a dependency of your snap, it will be able to detect whatever settings
you have.
Naive.
Also, I've been working on doing snaps and stuff and I've been working on all of it,
but I noticed one of my favorite things about snap is that I can have my project on GitHub
and then I can just mirror everything I do onto Launchpad and the Launchpad will automatically
make a snap every time I change something in my commits.
Kits and Kitty brings up an interesting point and I have asked this question before.
Kits and Kitty, do you want to ask your question about the difference between dev, rpm, and
snaps?
Yeah.
I mean, we already have a universal package format.
It's called rpm, dev, tar, gz, Flatpak, app image.
I mean, every one of these try to, at some point, be the universal standard and it's
just one more thing that we have to support.
Okay, so that's the question.
Michael, do you want to see, can you address that for us?
RPMs and devs have never been universal.
They're not only very specific to distros, they're specific to distro versions.
And when you say that we already had Flatpaks and app images, yes, we had app images first.
Flatpaks are actually older or they were made after snaps.
Snaps were beat Flatpaks by like three weeks or something.
There isn't actually a universal app format yet and all of the devs and RPMs are not,
that's not even what they're meant to be doing.
Now what do you prefer, Michael, from the standpoint of a universal package?
Do you think Flatpaks are better?
Do you think snaps are better?
And then my second part of that question is, regardless of what you think is technically
superior, which one do you think we're going to wind up on?
I think technically superior is snaps.
But I think as far as usability wise now, app images are much more usable because they're
easily accessible, whereas snaps still have work to do.
So like I think in the long run, snaps are going to win.
But I think app images are going to get a large chunk really early because you can just
create an app image right now and run it.
That makes a lot of sense.
Wes, what do you think?
Yeah, you know, I'm definitely interested in it.
I've played a lot more with things like Docker in this space for server side apps.
That's one thing.
But I was looking, you know, deploying software is an interesting problem.
I think there's different angles from the server side and the desktop side.
And that's one thing like I really like kind of the things that snap, some of the abstractions
that they're using.
I've really thought about these things.
And whether or not you want the sandboxing or not, the way that they've kind of described
here's the ways that you can connect their like ports and sockets, what do they call
it?
Something like that.
I think it makes it very useful.
And I'm excited for a world where I'm hopeful that some of these splits can make it a little
bit easier where we can focus like our package, the package management standards that we have
now that work really well with open source software, software or things that work really
well as libraries or system things.
And I'm really hopeful that that will let us focus there.
I completely agree.
And one of the things is being able to test all of this stuff on various distros.
And you know, a great way to do that is if you have access to simultaneous machines,
you can kind of compare.
This is how this works on Ubuntu.
This is how this works on CentOS.
Are you following me?
That's kind of that really starts to bring it home.
And so one of the things that's been really helpful to me and I don't know about you Wes
is, you know, DigitalOcean.
That's a great way where I can spin up four or five different servers running four or
five different distros and I can see, okay, Snaps works really well on Ubuntu.
Okay.
But does it work on CentOS?
Yeah.
We can get it to work.
We just have to, you know, tweak this or tweak that.
Okay.
How about Flatback?
Does that work on this distro or that distro?
Have you found that to be the case, Wes?
Oh yeah.
No, I think, I think that's exactly the case.
It makes it so, DigitalOcean just makes it so easy to get started.
Right?
I mean, you just, you just go over to DigitalOcean.com, you use our promo code D-O unplugged.
That gets you a $10 credit.
And when you find out that it starts at $5 a month, yeah, $5 a month, you can spin up
one of these awesome droplets in under 55 seconds and then bam, you just have a throwaway
disposable system, whatever Linux, pretty much whatever Linux system you want.
They've got all the best ones and because it's a real KVM hypervisor, you can install
whatever Linux you want.
There's some instructions.
It'll probably take your Linux game to the next level, but that's the thing, DigitalOcean,
that's what they want.
They support that.
So just get started.
You get a $10 credit.
If you start with the $5 plan, you get like 512 MB of RAM, 20 gigs of SSD drive, a CPU
and a terabyte of transfer.
One of the things I love about DigitalOcean, it's that transfer.
They really make sure that you have the bandwidth and the networking capability that you need.
And that is not true of all cloud providers.
So it makes it like a go-to for me.
Like there's a lot of times, you know, we were talking earlier about like when you have
bandwidth problems or connection problems.
I've had to talk with some servers like in Europe, say, and a lot of like the residential
ISPs.
Sure, you know, you got good connectivity, you want to go talk to a server in California,
fine.
But they don't always have the best connections across the Atlantic or to Europe.
DigitalOcean has great peering.
They have great networks.
So I'll just proxy some of my connections through DigitalOcean and they'll like instantly
be faster, even though I'm adding another hop to the path.
It's just better.
So some other things you might really like about DigitalOcean, they have data center
locations all over the world.
New York, San Francisco, Singapore, Amsterdam, London, Toronto, Frankfurt, these are all
places one, I'd like to visit and then two, these are great data center locations.
They understand how these work.
They've got great peering, 40 gigabit right into that hypervisor and, and they have really
ramped up their game in terms of competing with some of their competitors.
They've got monitoring, they've got load balancing, they've got private networking.
If you have droplets in the same data center, DigitalOcean has just been killing it and
now is like the best time to go try it.
So just head on over to DigitalOcean.com, use our promo code DOUNPLUG, that lets DigitalOcean
know that you appreciate them sponsoring the Linux Unplugged program and then you can come
back next week and tell us about all the awesome things you've been doing with our friends
over at DigitalOcean.
Okay, so after that, DigitalOcean is an awesome platform for getting stuff done.
So I just wanted to kind of like rapid fire, there's still a discussion topic I really
want to get to, but before we get there, I just wanted to highlight a couple projects
I saw this week that I thought would be interesting and then I'm just going to run through these
and then we can kind of talk about them.
Noah, I want to get your input.
Absolutely.
First up, it's kind of an older project, it hasn't seen a ton of use, but I thought it
might be interesting.
It's called journal trigger D and it runs a trigger on systems D journal messages.
So it kind of hooks up to the journal, waits for messages, and then you can kind of define
it as a script runner, right?
So you're like, oh, well, when I see this log line, right?
Or maybe, you know, I'm running fail to ban or something elsewhere.
Stop putting things to the journal, something happens, and then this is able to parse it,
you can kind of configure things so that then it will launch whatever program you want.
Maybe that's to send you a text message, or that's to restart a service.
So that's just one thing.
I think system D adds a lot of that nice format, right?
Like the journal does a really good job of capturing input and output to programs.
It does a good job of like, you can express it in JSON if you want.
So if you want to have it machine readable.
So I just thought that was neat.
I wonder if anyone would be would find that useful.
Next up, here is something from Mark Kolich.
He's a software engineer, and he has a nice blog post about how to manually throttle the
bandwidth of a Linux network interface.
So this is something I've run into.
I know at least a couple times at work, I was doing backups or other things that I accidentally
triggered an alarm where, ooh, I'm using like a whole bunch of the traffic through the switch
or something like that.
I was using pipe viewer PV, so it was pretty easy to throttle it that way.
But it made me curious about like, well, you know, what is the best way to do that?
If I want to say that this application can only get this much bandwidth or partition
things or say like, you know, traffic on this port should only use this much.
On Linux, in the new IP route 2 package, there is the TC command, which is traffic control.
But it's very poorly documented by like a lot of things, unfortunately, in that package.
And it's rather confusing to use.
So I thought this was a really good blog post just as an introduction about like, you know,
how you might do that if you need to do traffic shaping, traffic control, anything like that.
This gives you something of a starting point where you can kind of get a grip on this very
complicated topic.
Because once you use it, it works very nicely.
It works very effectively, efficiently.
It's just a little hard to get started with.
And...
I think that...
Oh, go on.
No, that's okay.
I just was going to stop you for a second and just say the interesting thing, and I've
seen this transition in the industry, I'd be curious, because I know you work in industry
as well, to see if you've seen the same thing, and that is that they are trying to bring
together the networking side and the server side.
And I think the rationale behind that is if you train a bunch of people that are system
administrators and know how to administrate the Linux system, and if we can take those
skills and use them to administrate the network side, now as a company, we don't have to employ
system administrators and network engineers.
We can just let the system administrators deal with all this stuff.
Do you kind of see that same trend, and do you see these new tools in Linux going to
that end?
You know, I do.
I think...
I'm not sure that that's exactly where it's going to go, but I do think we've seen a lot
of developments, like Ansible in particular has been targeting switch platforms, router
platforms, because we want to be able to use these same kinds of tools to...
Tools that sys admins already understand for managing the servers to be able to manage
the network hardware.
And in kind of the opposite way, one of the projects I've been following is Cumulus Linux.
I would love to have a Cumulus Linux switch in my house, but there's like really no options
under a grand right now.
But what they do is they use these like Broadcom switch fabrics to do software-defined networking,
but they have implemented basically a kernel module that implements all those standard
Linux IP table stuff, but accelerated with this proprietary Broadcom SDK.
So that lets you use all your standard commands, but on this actual hardware that has full
networking support where you can get real performance.
So I think you're dead on about that, especially in a world where you have these proprietary
networking devices that have different command lines, different configurations, they're all
kind of similar, but all kind of different.
That makes a lot of sense.
Okay, so one more thing I'd like to highlight really quick here is Hashicorp Packer has
hit their 1.0 release.
So Hashicorp is a neat thing, they're the people behind Vagrant and a few other tools
that you might be familiar if you do any sort of development or sysadmin or DevOps, if you
will.
So they're proud to announce that Hashicorp Packer 1.0 has been released.
Packer is a tool for building images for cloud platforms, virtual machines, containers and
more from a single source configuration.
They say that Packer 1.0 is a significant milestone.
It's a powerful and full-featured tool to create cloud images and application packages.
So if you're not familiar with it, that's exactly what it does.
So you can kind of define your configuration, how you want it to look, what distribution
it is, and then it handles all of the details about packing that into the right format.
So whether you want a QCOW image or you want an AMI or you want something that can run
on a DigitalOcean droplet or you just want something that can run on Libvert, it does
it all.
It'll even do bare metal images, that kind of thing.
So I know we've used it at work.
I've seen other projects and companies that use it, and I just thought it'd be good to
mention it.
Noah, do you use anything like this at alt speed to kind of like, you know, if you need
to build a bunch of images before you, you know, pixie-boot them or images to deploy
at customer spaces, do you guys use any tools?
We do use tools.
We've never used that specifically, but what we've done is we actually have a server where
we still use plain old, what's the name of it, Clonzilla, plain old Clonzilla.
And you know, it's great.
Here's what we've done.
We've gotten to a point now where we have a Clonzilla image server where we keep images.
So like when the new Optiplex 3020 comes out, we'll install Ubuntu 16.04 and we'll configure
it and we'll put the, you know, Adobe Reader and the Flash Player and all the junk that
none of us really want on our computers, but we have to have them to make them useful.
Then we make an image of that machine.
We store that on our image server.
And what we've started doing lately is we've started syncing the most commonly used images
down to a small 2.5 inch USB drives, SSD, and we take that into this little backpack
sling that we have along with the USB copy of Clonzilla so that we can go on site to
a customer's premise and say, okay, we need to redo this machine.
Okay.
We'll go ahead and take this USB key.
We'll stick it in.
We plug the USB drive in.
Then we re-image the machine.
That's been absolutely fantastic.
And I'll tell you, you know, you brought up pixie-boot and that just kind of sent, it
just kind of made me, I have PTSD there for a second.
If you've set up a pixie-boot server, then you'll understand why I have PTSD.
And if you haven't set up a pixie-boot server, I highly recommend it.
It's a great, great opportunity to realize how little you know.
Yes.
And to learn something about the Linux boot process and all of the mysteries and vagaries
that are contained within.
And if you're going to do it, try iPixie.
It's fantastic.
Great open source project for managing all that stuff.
Yeah.
That's a good point.
It was like, it used to be gpixie or something.
Did they change their name at one point, if I recall?
It's possible they did.
But either way, they have a lot of great support.
You can both run it, you know, you can like chain load into it, or they have some versions
that you can flash onto like a pixie rom.
Chain loading is really popular because people don't want to flash their roms on all their
disparate machines, and it's pretty easy to push a config that just loads this binary
up off the network.
Yes.
I mean, I think even like Arch Linux provides one of those, right?
So you chain load into it and it automatically goes and grabs the latest images from their
servers, which, hey, that's, that's pretty slick.
So speaking of things that are slick, let's just let's just do we all love them.
Let's jump over to our next sponsor this week.
That's our friends over at Ting.
What is Ting?
Ting is the mobile service provider that just, it just makes sense.
They make mobile make sense.
And that's their mission.
And that's what you'll find about Ting, things that you really love.
They have a mission, right?
They're just not I mean, obviously, they're business, they want to make money, but they
have a mission.
They are they are passionate people, and that is, that is to change mobile.
So they, they resell, right?
So they have they have both CDMA and GSM.
And that I think really is one of the factors that's defined Ting.
And it lets them it lets them change the way that the game that mobile is played, right?
So they can focus on their customers.
And that it's amazing.
So whether you're using their app, which is great, whether using your web, their website,
which is great, or you're actually calling in, and you get to talk to a real human, which
you will, you'll find that there's some of the friendliest people, and they had some
of the best customer service in the entire mobile industry.
Beyond that, they have no contracts, no early termination fees, and you just pay for what
you use.
Yeah, that's right.
Minutes, messages, megabytes, doesn't matter pay for what you use, and make it really easy
to find out how much you'll save as well.
So just head on over to ting.com, right?
That's linux.ting.com, hit this, what would you save button, and there you'll find this
wonderful rate chart, it's like, it's honestly, it's one of my favorite things.
I kind of come here, even in my spare time, I just kind of click around.
It's fun to just estimate, like, lines start at $6 a month.
So whether you need it just as a backup cell phone that you keep in the truck for when
you're out in the country, or if you use it as a backup data connection to your home server,
it doesn't matter.
It's $6 a month, you can kind of just forget about it.
You buy one less coffee or one less hamburger, and then you have a whole ting line.
And then you just kind of click around like, yeah, you know, someone might call me.
So let's say I have 100 minutes, no one ever texts me, and I love it.
So that's zero.
And then all the rest of that, I can just spend on my data.
And even if I use a gig of data, like, what happened, I lost my Wi Fi connection, I don't
know, my monthly bill, yeah, that's right, $25 a month, and that number, that number,
my friends, if you head over to linux.ting.com, you are going to get a $25 service credit.
So as you can see, that will probably pay for your entire first month's bill, if not
more.
Or, or let's say you don't have a cell phone that you love, just pop on over to the Ting
store, they've got an awesome selection of phones, they start at super reasonable prices.
And if you want to, not on the necessarily, you know, you can't use it on the Alcatel
one touch fling.
But if you're if you're buying a nice new phone, you know, like this, Motorola Moto
g4 play, that service credit can apply there too.
Plus, they have a lot of stuff, you know, they understand that you might just want to
use them as we were talking about the beginning of the show, you know, you might just want
to use them as an LT connection to your house.
If that's the case, they've got this home connect device, they've got a ton of options,
they really make it easy.
And you know what, on Ting, it really is mobile plans for adults, right on Ting, you don't
you don't have to pay more for extra services, right?
There's no, there's no contracts, there's no early termination fees, there's no add
on charges.
So voicemail, caller ID, tethering, hotspot, three way calling, call forwarding, all of
these just come right with your service.
So if you're unhappy with your mobile service plan, just go to linux.ting.com.
Wes, can I tell you how Ting is going to be working with AskNoah?
Please do.
Not like the company Ting is going to be working officially with, not that, not that.
But I'm going to activate a SIM and I have a product here and I'm throwing a link in
the chat room.
But basically, what this thing does is it gives me a public address, a public IP on
Ting's LTE network.
So the advantage is, what I can do is I can purchase this device and put a Ting LTE chip
in it.
And then I have a public address and I can plug that into this new remote broadcast system
that we have.
So I will be able to do AskNoah from anywhere as long as I have this device and a Ting GSM
card.
Of course, because it's only $6 a month, that's, that's all I have to pay.
If I don't, you do a remote broadcast, oh, well, six bucks a month.
And if I do a remote broadcast, I only pay for the data that I use.
It really is, it really is great and it makes it very easy exactly for those kinds of use
cases where you just want to plug and play, fit it into your workflow and it just works.
So go over to linux.ting.com today and start saving on your monthly cell phone plan.
Okay, so speaking of things that are maybe less efficient than our friends over at Ting,
here's our goal, I just thought, no, no, it seemed kind of interesting to me just as a,
just as a news update.
Banks scramble to fix old systems as IT cowboys ride into the sunset.
Oh, boy.
Bill Hinshaw is not a typical 75 year old.
He divides his time between his family, he has 32 grandchildren and great grandchildren,
oh my, and helping US companies over crippling computer meltdowns.
Hinshaw, who got into programming in the 1960s when computers took up entire rooms and programmers
used punch cards, is a member of a dwindling community of IT veterans who specialize in
a vintage programming language called COBOL.
The common business oriented language developed nearly 60 years ago and has been gradually
replaced by newer, more versatile languages such as Java, C and Python.
Although few universities still offer COBOL courses, the language remains crucial to businesses
and institutions around the world.
In 2013, Hinshaw launched a new company, COBOL Cowboys, which connects companies to programmers
like himself.
So they're really, I love this quote here.
Of the 20 cowboys that work as part time consultants, many have reached retirement age, though there
are some youngsters, Hinshaw said.
Well, I call them youngsters, but they're in their 40s, early 50s.
Experienced COBOL programmers can earn more than $100 an hour when they get called in
to patch up glitches, rewriting coding manuals, or making new systems work with the old.
This seems to me like something that's going to keep happening as some of these really
big companies kind of phase out into new systems.
And I wonder, Noah, if you've seen any of this over at Autospeed or, you know, is this
an area where Linux can really, you know, the flexibility of Linux, the open source,
and just the ease of deployment and the, you know, it can really, it can fit in so many
different use cases.
Is this something that you have encountered or you see like a real opportunity for Linux
to gain traction?
I definitely see the opportunity for it.
I can't say that we have, we have, we have executed on that opportunity at Autospeed.
I know that's not very helpful to you.
No, no, we've not really, we've not really taken that opportunity.
Yeah.
Okay.
So Wizard, what would you like to say about that?
Yeah, Noah, it's actually a legitimate problem.
One of the big things, at least where I am right now, is so many old businesses just
basically went off of COBOL and many old systems still rely on it.
And there's just, you know, there's not a whole lot of places that teach it.
And to be honest, you know, it's one of those things that a lot of, you know, university
colleges, et cetera, will try and give us an option to students.
But it's not fun.
You know, it's not something that is used and can easily branch into other languages.
Just because of really what COBOL is, it really is something that was used in the seventies
and designed in the sixties and it doesn't translate well to other languages.
So it's almost a disservice to teach it to people because it's like, okay, we'll teach
you COBOL, but if you want to go and learn Java, Python, whatever, it's just, you know,
it's almost, you've lost a full semester.
It's kind of kicking the can down the road, so to speak.
Exactly.
Yeah.
You know, it's not helpful.
And this is the thing, like so many banks and I'm not kidding, like I bet you, I would
say over probably 60% of all banks in the US and Canada and probably just North America
in general, all use COBOL.
It's just, it's there, it's omnipresent and everyone in the back rooms are panicking because
like even, you know, where I work, we have COBOL programs and we're not even in the financial
sector, which is where it was huge.
So it touches everything.
Yep.
I think that's exactly right.
And it's one of those areas like, you know, you're just stuck in the past, you know, you
maybe need like specific mainframes to run it on.
You have these systems that are business critical where you really, you know, your business
depends on not having downtime, having the systems work and maybe you just, you know,
you don't have experts left.
IBM Systems E series is completely, almost completely funded just by COBOL.
Wow.
Hugely.
So you go in and you see the S396 package, you'll sometimes see in distro packages and
things like that and you're like, that's kind of odd, I don't remember that being that.
That's the IBM Systems E system and that's almost all funded by COBOL.
Interesting.
Oh, okay.
Well, so I think that's a good segue to transition to something a little more modern and that
is Pinterest.
So Linux.com has been having a neat series about the companies that support Linux and
open source and this week they'd like to hire, they'd like to, you know, they'd like to talk
about Pinterest.
So I thought this was kind of interesting just as someone, you know, who's very interested
in open source.
I think we all are attached to it as a platform and see that it, you know, it should be used
and supported by these big internet companies.
So Libby Clark here talks with John Price over the technical architecture lead and open
source program lead over at Pinterest and I just thought this was like a really interesting
article kind of just about, one, if you don't know what Pinterest is, not that I use it,
but just as an example of one of these popular websites whose user base doesn't use Linux
isn't aware of Linux really maybe, I mean some are sure, but where a lot of that, you
know, all that technology on the background is powered by it.
So, you know, part of the stuff here is they ask how and why do you use Linux in open source?
And he answers, Pinterest is built on open source from our first lines of Django code
over six years ago to the release of Ruxplicator, our latest open source project, we've directly
benefited from open source projects and the support of communities surrounding them.
In turn, we've made significant contributions to the open source technologies we use and
have pushed the limits of technologies like HBase.
Internally, open source is part of a product cycle.
I think that's a key thing.
We frequently open source the technologies we build as both a way to give back to the
communities and because it's the right thing to do.
So they've recently joined the Linux Foundation.
I think that's neat.
And they talk about how the Linux Foundation is home to Linux, it's home to Node.js and
other mission critical projects that form the backbone of modern internet services,
such as people like, like Pinterest.
I just thought this was like a neat article kind of highlighting like, how, how useful
open source is and one of the good guys because we see a lot of companies that use open source,
but might not be very active in supporting it might not be give back might not open source
their own tools.
Not that they have to, right?
I mean, if they modify a GPL code, yes, they do.
But for a lot of these, you know, that's not the license or they're not redistributing
it.
So it's really nice to see kind of how people in these key positions at these companies
are able to give back or how they see open source as part of their workflow, how it can
make them make their jobs easier and help them, you know, be a successful business.
I agree.
And I also think it's very interesting that you, you are now seeing these large companies,
you know, and I saw this a lot with Dell, where they're not just interested in making
a buck off the back of open source.
They're genuinely interested in contributing upstream.
They're genuinely interested in being a valuable resource to the community, becoming a part
of the community and growing with the community rather than stomping at the backs of the community
to make their money.
Right?
Right.
Yes, exactly.
And it's not, you know, there's nothing wrong with making money.
And in fact, I think we should encourage, you know, people to build profitable businesses
using this.
But that's where it's awesome to see that like, yeah, we realize and you know, especially
like when you can open source something, a lot of times, you know, especially if you
do a good job, it's not just like, what, you know, throwing it over the wall and forgetting
about it.
But if you can make sure that like, you know, you use the open source app from the public
GitHub internally, then you get to benefit from all the feature, you know, new features,
bug fixes, anything else that the awesome community of open source people are going
to provide for you.
There's also an interesting thing that Pinterest does as far as like the design of their website
was like the first one to do like a fully like a column responsive card based system
that's like constantly adjusting itself for the size of the content.
They release some of their code for the how that works and also an API that explains stuff.
So the documentation was taken to make like, and there's like, probably five or six frameworks
now that are built on top of that, that design structure.
Oh, yeah, that's an interesting, that's an interesting history as you know, as we've
come to this like single page app future that we all live in now.
Okay, so talking about open source thing, open source projects, over at Dave Cheney's
blog, he has a post, something we've touched on a little bit, but I think we've seen this
trend only continue, I wanted to revisit it.
He writes about why slack is inappropriate for open source communications.
He says, Okay, also full disclosure, his employer does make a slack alternative.
So that's something to know.
But he's tweeted a few times about my frustration with the movement of open source projects
from open asynchronous communication tools like forums, mailing lists and issue trackers
to closed synchronous communication services like slack.
This post is a long form version of this gripe.
So he first starts out with what is slack good for?
Before I stick the boot in, let's talk about the good things about synchronous chat applications
like slack, hip chat, and so on.
In a work context, chat applications take place take the place of at staff email blasts
about fire system testing, broken live, blah, blah, you know, all those things.
It's a place where you can, you know, you know that people are, are there and have seen
your messages.
But in the context of an open source project, slack, hip chat, getter, etc, they they provide
a forum for advocacy, gossip, informal discussion and support right in some ways very similar
to what you might find in an IRC room.
These complaints start when slack and friends are promoted as a recommended way to communicate
with the project.
So then he writes, why is slack bad for open source communication?
One slack at all are paid services with closed memberships.
Sure, there are lots of little apps running on heroku dinos that automate the send me
an invite process.
But fundamentally, these are closed systems.
This means that the content inside those systems is closed.
I cannot link to a discussion in a slack channel in a tweet.
I cannot refer to it in an issue report and I cannot cite it in a presentation.
Knowledge is siloed to those who have the time and the ability to participate in chat
services in real time.
And then secondly, slack at all are based on synchronous communication, which discriminates
against those who do not or cannot take part of the conversation in real time.
For example, real time chat discriminates against those who aren't in the same time
zone, you can't fully participate in an open source project.
If all the discussion happens while you're asleep.
And if you are in the same time zone real time chat assumes a privilege that you have
the spare time or employer who doesn't mind you being constantly distracted to be virtually
present in a chat room.
Online chat clients are resource hogs and presume the availability of a fast computer
and ample always on internet connection.
Again, raising the bar for participation.
So yeah, what do you think of that?
Yeah, okay.
So let's start and break this down.
First of all, I don't necessarily agree with this premise that slack is not the best choice
for open source communities.
I I'm having a hard time agreeing with how he arrived at that solution in any way, shape
or form, even stretching my imagination out.
Let me explain why to.
So first of all, this a string in his versus synchronous chat, when I am working particularly
at all to speed, we work with people from all over the country and sometimes from people
outside the country, right?
But I expect those people to deliver on any in a time fashion that is conducive to my
clients, right?
So I don't want to hear, well, it's 5 a.m. my time, so I'm not going to address those
messages or respond to that ticket too bad.
Then don't work for me.
Go work for someone that has your time zone because we have a deadline to meet and you
need to meet those deadlines.
And I'd be happy to take to take your labor and, you know, compensate you for that.
But you need to meet the need to meet the requirements of the business.
So that that to me sounds like a ridiculous premise that we can't have real, we shouldn't
have real time communication because it might exclude some people.
Those people need to work when the work is getting done, unless their job like, you know,
the web guy, right?
I don't care if the web guy does his job at three in the morning or seven in the morning,
I'll send him requirements.
That's perfectly fine.
And there's no reason why he can't use slack to I can put what I want in and he can pick
that message up when he has time.
I think slack perfectly supports synchronous and asynchronous communication.
So I disagree with this premise there.
The the reason that I have a problem with slack is because it's not open source.
It is tied to a central service.
But the reality that we live in is that people, especially businesses, tend to go with the
lowest common denominator and they tend to go with the place of the path of least resistance.
And the thing is with slack and I know this just from just from my experience at Jupiter
Broadcasting.
It's not that we wouldn't want to go to another service.
It's not that we don't want to use something else.
But somebody else has to make that product or service available so that I can go to the
website, sign up with my username and password, click on a button and then it's just up and
somebody else has to manage it and update it and maintain it and deal with all of the
times and stuff.
Because frankly, at Jupiter Broadcasting, we just don't have the resources to manage
every single thing ourselves, even though in an ideal world, even though from an ideological
standpoint, we acknowledge that that's a better way to go.
It simply isn't cost effective.
It simply isn't practical sometimes.
No, I think that's a really good point.
And that's I think that's a lot of how people get hooked in the parts that most resonated
with me.
So I think you're right, like that, you know, it does it does work well for close teams
or you know, when you have an accountability thing, right, like we're all going to be here.
We need to get this done.
I expect you to be, you know, responsive to me.
What struck me about it was just the you know, like you can't reference it.
It is close, like you can't, you know, on bug reports or other things.
You can't easily link to a Slack conversation if you don't have an account there.
I think the other thing too, is for open source projects, right, like you might be a really
big contributor to a project.
But if if you know, most of the core team is in America, and they have a Slack conversation,
and that is what's considered, like, that's how we decided we were going to do this next
move or yes, we were going to accept this PR.
You might feel very left out in, you know, if instead it was a mailing list discussion,
or over the course of a couple days, then you, when you were awake, you could respond
to it.
Now, obviously, that makes a much slower cycle, and that might not work for a lot of people.
But I guess I can see where he's coming from.
Well, couldn't you argue that, like, I agree that what Noah said about the asynchronous
versus synchronous, that's not the issue with Slack.
You could argue that the private aspect of Slack is what makes it appealing to companies,
whereas open source projects don't really work that well for any kind of private chat
like that.
Exactly.
But in the sense of the open source software, you wouldn't even need Slack in the first
place, because there are alternatives that provide the exact same functionality, including
asynchronous and synchronous.
So at Intergos, we did a test to see if we could get, basically have an IRC channel that
also has asynchronous chat, so anytime anybody wants to have a conversation about it, they
can go scroll back up and look at anything.
And you can do that with Matrix.
So if you create a Matrix bridge with IRC channels, you can have the benefits of IRC,
which is real time, and you can have the asynchronous benefits of Matrix, and have the conversation
completely synced.
So either way, if you're available now or available later, you can still be included
in the conversation.
I think that's a very good point, and I think the Matrix project is definitely something
that people, if they aren't familiar with it, that's definitely something that they
should check out.
So something you said, Noah, that made me think that it's a perfect segue for us.
So you're talking about like, a lot of times we don't have the resources, especially podcasts
are the first thing.
Content creation is really what Jupyter Broadcasting focuses on, and we don't always have the time
or extra time to focus on building our own servers, maintaining them.
But something that really helps me when I do need, you know, when we do have business
critical needs, podcast critical needs to get things done, that's our friends over at
Linux Academy.
Go to LinuxAcademy.com slash unplugged, start, you'll get a seven day free trial, sorry,
one week free trial to Linux Academy, and believe me, if you're anything like me, you
will be hooked.
So what is Linux Academy?
Linux Academy, it's the Linux first online training program, right?
This is not like one of those sites where it's, you know, focused on academic courses,
or it's focused on just teaching you, you know, how to garden, how to knit, oh, yeah,
and how to install Apache on your server.
No, Linux Academy is built by Linux experts, people who've been using Linux for years who
use it on the server.
They've come together to make this awesome courseware a cohesive program that will teach
you all the skills you need to get your next job in open source, in the private industry,
wherever you want to go.
Linux Academy, they've really come a long way.
You can run on any of seven plus available Linux distributions, and they customize their
courseware to make sure that it works for you, right?
So oh, I really need to get, you know, my next, I got a new job.
I've been on Debian for my whole life, but they're using Red Hat.
Linux Academy, just turn there, it's the perfect place to go.
They have all these nifty features that really, it really takes them to the next level, right?
There's a lot of online tutorials or resources for learning things, you know, I can go Google
X tutorial and find something.
Linux Academy is not really in that same space because what they provide is up-to-date, maintained,
state-of-the-art interactive courses taught by real instructors with community members.
So you have this whole platform of people who are trying to learn the same thing.
And what's most helpful to me is they have this, they know how long it's going to take
you, right?
So you can, it gives you the ability to estimate, like, I really need to learn Ruby, right?
I don't know Ruby.
I come from Python.
I need Ruby for my next job.
How long it's going to take me?
How do I learn it?
You don't have to go struggle and like, oh, do I buy a book?
Do I, what do I do?
No, just go to Linux Academy.
They've got these courses that will one, there's a lot of industry respect for, so it'll, you
know, your employer will see that and say, look, they've, you know, they can go look
what these courses are and understand exactly what you've learned and understand that you've
proven yourself and that what your skill level is at.
And two, they give you tools to say like, okay, this is a six-hour class.
This is how long it's going to take.
I can expect that's what it's going to be.
And at the end of it, you have very quantified outcomes about what you're going to know and
what you're going to be able to do.
And they have a ton of tools to let you keep track of your progress, right?
So you're not like, oh, yeah, last week when I had time, which chapter was I on?
What was I learning?
Now, Linux Academy, it's very structured so that it gives you, especially for busy professionals,
busy students, whatever you are, right?
You're busy with trying to make things and you just need a little bit of help.
And Linux Academy is at that perfect level where these are the people, you know, they
use it every day.
They've come from this background.
They've built their whole site using Linux, so they really are experts.
They really do dog food it.
And if you're in one of those situations where you need to learn AWS or something like that,
it comes with the server.
You don't have to worry about spinning up a new AWS server and then a year later getting
a big bill from AWS.
No, Linux Academy takes care of it.
They spin up just the distro that you need.
You get your own server to play with so you can interact with the courseware.
So if you have some goals, you want to get a new job in DevOps, open source, backend
servers, head over to linuxacademy.com slash unplugged, start your seven day free trial,
take some courses, try some of their nuggets, which are just, you know, little bite-sized
tasty morsels of learning that really get you started and really get you hooked, linuxacademy.com
slash unplugged.
All right, so I think that brings us to our discussion topic this week.
And that is the big news over at our friends at Ubuntu.
Ubuntu abandoning Unity in favor of GNOME.
So on April 5, Canonical announced that they would no longer be developing Unity and they
were going to transition 4.18.04 to GNOME.
This also, you know, that's also had implications for their mobile platform as well as, you
know, the mirror display manager.
There's a lot going on.
It was covered in Linux Action Show.
I just thought this might be a really good platform for the Mumble Room.
I think we were all, you know, it was kind of a surprise.
It was a big surprise in some of the biggest Linux news this year, I would say.
Noah, I'd like to turn it over to you.
What were your thoughts as someone who's deployed a lot of Unity desktops and a lot of Ubuntu
operating systems?
I think that Ubuntu from the start has been marching to the beat of their own drum with
their own desktop environment.
And I think that they have done a lot of really positive things in the space.
In fact, I stand by this.
I think they have the best multi-monitor support of any desktop environment, bar none.
Not GNOME, not KDE.
Unity really perfected the multi-monitor support to the point that I could use six monitors
flawlessly.
And so I have this internal dichotomy.
On one hand, I would really like to see, I've really wanted to see Ubuntu working with the
existing desktop environments that are supported on multiple distros and stuff like that.
And so we have everyone kind of working on the same page.
And on the other hand, I definitely can see where Unity shines through.
When you sit down at an Ubuntu desktop, it's very, very evident that the desktop environment
is made by the same people that make the operating system and that all of the applications that
run are aware of how the desktop works.
So I'll give you an example.
You mean because it's all purple, right?
That's part of it.
The background change, you know, you change the background and then the bar and stuff
will change to a company.
There's little stuff like that.
But more than that, though, there are so many times in GNOME or GNOME where I will install
an application and it doesn't seem to be aware of an extension.
And the best example I have of that is the dash to dock extension.
So you turn on that extension.
If I maximize a window, it's clearly not aware that there is a dock there and it will extend
past the dock and I can't click on certain buttons.
And I've tried the auto hide and, you know, I talked to Chris about this frustration.
His answer was basically, well, just don't use the dock, just get rid, just stop using
the dock.
And, you know, if there's a feature that I like and it is available, I feel like I should
be able to use it.
But there is no feature inside of Unity that if you turn it on or you enable it, it makes
something else not work correctly, right?
So it has a very cohesive feel to it and there's a lot of polish to it.
And so I commend them for that.
And I hope that they can take that same direction, focus and leadership of polish and bring that
to the GNOME desktop and tie that back into Ubuntu.
I think that would be really, really great.
But overall, I have to say, and I know this is a little bit frustrating for the people
that are really in love with Unity, I think this is the right decision.
I think it's the right decision for a number of reasons.
One, because I think that it's going to be a really great thing for Linux as a whole
to have the biggest manufacturers of the desktop Linux operating system, that being Red Hat
and Canonical, both of them working together to form a single desktop environment.
And I think it's going to be really good for the end users because they're going to have
more freedom to go from one to store the other.
And it's all going to look the same because, hey, they're starting with GNOME.
Right, it might also, you know, like there'll be more, perhaps more resources now dedicated
to GNOME or more interest, or we can kind of, you know, focus there and it maybe provides
a little bit more pressure on that to not just be a Fedora, Red Hat style project, but,
you know, have another really big name in the Linux community throwing their weight
behind it.
Wizard, you had some thoughts about this, especially as it relates to the mobile industry.
Yeah, I actually had Amazio Pro 5, which was the Ubuntu phone.
I used it every single day from the time I got it.
The big thing that I noticed anyway was Ubuntu on mobile, I don't know, as to the OS, there
was work to be done.
I'll put it that way.
There was a lot of work that needed to be done.
But the one thing that was actually like the shining light in everything else was the applications
that they made for it.
For example, their Deco app, which was the email app for an Ubuntu phone, was excellent.
I would love to see that come to the desktop and to see that not die.
Yeah, it's absolutely lovely.
It's I'm amazed.
It's also already coming to the desktop right now.
Yeah.
And that's great.
Isn't part of the beauty of open source that if there are enough people like you that really
like the Ubuntu phone, the Unity 8 on Ubuntu phone, isn't it great that there is a there
is a system in which the market can speak and say, we want this project to continue.
People can fork it and it will continue outside of Canonical.
Isn't that a great thing?
And that's the thing.
And I would hope that maybe Canonical wouldn't completely throw everything out the window,
as it seems like everyone is saying they should right now.
I would say that maybe with them going to GNOME and that they don't have to pay as much
attention to their own, you know, their own DE, that maybe they can focus instead on the
applications and maybe more of the greatness that I saw in the applications and not have
to worry about, you know, mirror or you know, whatever their back end stuff is with Redhat
also helping with this now.
Yep, that's a I think that's a good point.
Ryan, you want to chime in as a from the perspective of someone who also has you know, you guys
are shipping a lot of Ubuntu desktops as well.
Yeah, oh, boy.
That was a day.
I bet.
Oh, boy.
So we were getting ready to go into a meeting with Canonical to discuss something else.
And then we see the yes, and I at first it just got shared with me in the System76 Telegram
chat.
And that's just full of, you know, kind of our fans and customers.
And I read it and suddenly that whole day changed.
We have a lot of users who work here who who they're Linux enthusiasts, they play with
other desktops, Cassidy here even is one of the main contributors to elementary.
So we're very familiar with other desktops.
But it was so out of the blue and it was so I mean, we didn't know.
Everybody asked, did you guys know?
We had no idea this was coming.
And so we kind of immediately stopped everything that we were doing and started talking about
what implications that had, because a lot of folks don't realize how much work and how
much upstream work we put into making these things, making, you know, Unity 7 work correctly
on our machine.
What specifically is System76 doing to make this easier for their customers?
So earlier today, OMG Ubuntu posted a story that covered kind of our thought process and
what we think about the future.
The first thing I want to say is that the is and I think we should always do this is
that there were there were people who who poured, you know, a ton of years of their
lives into, you know, six, six years into Unity and that converged vision.
And some of those people don't have jobs today.
But the but jumping off of that, we we are looking at our taking Gnome and adding our
own touch to it.
So are you are you saying that you're going to take what canonical ships and what Gnome
is shipping is stock and then System76 is going to modify that and add to that before
they ship it to their customers?
That's correct.
We are not going to be forking anything.
We're not going to be doing anything that that represents, I guess, bloat.
We're just going to be adding nice little touches using extensions that ship with the
desktop and so here's a question for you.
I read an article that was that kind of when when when Mark Shuttle work with that was
asked, he said, they asked him, they said, you know, or how do you feel about this?
What are you going to do?
Are you going to modify Gnome?
And his answer was, you know, we need to respect the desktop development team.
We need to respect the work that Gnome is doing.
And so if Gnome believes that this is the best way to ship a desktop, well, then it
canonical, we're just going to back them and we are going to accept that that is their
design philosophy.
We will.
Well, obviously we'll offer input, but at the end of the day, we are going to deliver
the desktop the way that Gnome intends the desktop to be delivered.
Are you saying that that's not System76's view that you guys that that's you're going
to do something different?
Well, first I want to say that we have been in conversations with the Gnome community
and with, you know, some of the main contributors over there since the announcement, or at least
some of them, some of the people on the board of directors and so on.
So I don't think what we're doing will represent a getting away from stock Gnome.
I mean, it's just a layer of visual.
Our own design.
Sorry.
I mean, that's what extensions and theming is for is is for we think we want to offer
a System76 experience from the time you buy the machine being on the website and seeing
kind of our design touches and what we think of how how things should look and feel.
And we want the people to have that same experience when they get their box.
Absolutely, you know, that cohesive experience is great.
Absolutely.
Having been to System76, I have seen you guys do this in person, you know, where you make
these tweaks.
And so I can definitely appreciate that.
But at the same time, having been a Gnome user and seeing how these extensions that
I mean, it's being pointed out to me right in the chat that, you know, a lot of these
extensions, they really aren't they're really not it's we have to separate an extension
from actually being part of Gnome.
It seems like it would be it would it would provide a better experience if you could get
those changes enacted right at Gnome.
If you're working with the Gnome people, why can't why can't those changes be pushed to
Gnome as a whole rather than, you know, System76 specific systems with these?
Oh, oh, really?
Yeah, you can look at all the examples of like, the most one of the most basic things
that people want is top icons.
And people ask Gnome to include that extension, like five years ago, and Gnome's like, no,
because we don't want it.
That's not our design vision.
And so and so that that's what that's what brings me to this interesting question is
if Gnome has has made a line in the sand, and they're like, this is not what we want
to deliver.
This isn't the design vision that we have.
And Canonical is willing to accept that.
Doesn't it seem a little doesn't it seem a little strange that System76 is going to say,
no, we're we really believe that X is what customers want.
And so we're going to deliver X.
So all of our all of our work will be open source, and we're not going to do anything
that represents that that goes against the I this goals that Gnome is striving for.
But top icons is an excellent example of an extension that see that people have an expectation
of, especially our users who who might be moving from Unity and doing a direct upgrade
to a Gnome desktop.
You know, this is going to be a big transition for a lot of them.
Of course, we're going to have documentation on how to turn these things off in Gnome tweak.
It's fairly easy.
And if we can get this accepted upstream, which based on my conversations this week,
doesn't seem out of the question, we're going to collaborate with Gnome on that.
And hopefully we don't have to ship anything that is that isn't part of the Gnome experience.
The the thing is, is that in my conversations, it seems like the Gnome community is taking
a look at itself.
And I don't want to speak for them, but it seemed like they were really doing some soul
searching on on what hills they're willing to die on, you know, in order to accommodate
the new users who are in the new contributors who are coming to the project.
And I take them their word on that.
I think that they're open to some of these conversations that they've maybe had before
because we're here and we're willing to contribute.
And we already are talking about how we can contribute to Wayland and how we can contribute
to big projects that they're working on.
And so I think that I don't know what that looks like, but I but I know some of the things
that we've already identified that seem like no brainers that we would really like to offer
our customers.
We we sat around for a long time and offered Unity 7, which was in maintenance mode and
things that our customers asked for, things that we got feedback from for every day.
We waited on someone else to implement and I'm not sure that we're going to continue
doing that when our customers provide that type of feedback and they clearly have demands
and desires.
It was actually really funny because I think it should be I think it should.
I was just going to say the feedback that they got on Hacker News that Canonical got
on Hacker News, most of that feedback we'd already documented from our own customers,
you know, and so we we were starting to collaborate on Unity 7, you know, doing high DPI support,
doing scaling between monitors, which should be available for our customers here soon and
upstream.
So I think that I think what we're trying to do is create the perfect experience, or
at least as close as we can get to it.
And if we have to enable some extensions to do that, we're going to do that.
I think Rikai asked a really good question here in the IRC room.
Was there any consideration of moving to a different Ubuntu official flavor?
Seems like this would be a good time to consider that considering this is kind of a time of
forced change anyway.
Yeah, everything was on the table when we got the when we read the announcement.
Yeah, that's fair.
I just want to I just want to say it just so it's said at least once.
You know, the the GNOME team has been doing an excellent job of delivering on a class
A desktop for a long time.
And so as you know, if a distribution and a computer manufacturer wants to take advantage
of all the all the hard work and contribute back to all the hard work that the GNOME team
has done, I think it I think it needs to be at least said once that we need to keep in
mind that this is a team that has a direction that they are they are going and input is
always welcome.
Ultimately, though, I think it's important that, you know, that, you know, your comment
about something that you said, you know, kind of rubbed me and you said something along
the lines of like, now they might be more open because of all these new users that are
coming there.
But those new users and that new user base and all of those projects that, you know,
that are, you know, now coming over to GNOME because of, you know, Canonical's decisions,
I think they need to come into it with the understanding that, you know, they are already
on this train.
This train is already moving.
If you'd like to come along for the ride, offer some input, help us steer the train
fine.
But we're not going to derail the train, take it a totally different direction just because
there's more of you on board.
Right.
Yeah, but that's not what I'm talking about.
I'm saying, I'm repeating what they have told me, some members of the community, that they
recognize that there's a lot of contributors.
I don't even want to talk about users actually.
There's a lot of contributors who are coming in who are willing to send code upstream and
willing to participate, including our own engineers here who have been contributing
a lot to Unity as of late.
And we're ready to provide code to solve some of the problems that they want to solve.
And they seem very, very open to working with us to solve what we want to solve.
For instance, menus in GNOME, especially in applications, can be a mess.
There can be like three different menus in some applications in order to get to different
stuff.
This is one of the things that we're talking about addressing.
And if we can't address it through GNOME proper, then we'll likely still address it.
Yeah, I agree with you.
And I think that one of the first things that struck me about using GNOME was finding this
menu inside of like the dock thing.
So you know, that was interesting.
Monkey Comm, you wanted to chime in here.
Yeah, we, my company switched over to System76 systems probably two years ago, and we're
running servals and Meerkats and we're just running the stock System76 systems because
when my guys have problems, they call it System76.
And if they want to modify GNOME, but if they want to modify GNOME so that it makes a better
presentation to my users and so I'm not having to go over and help them tweak their desktops,
I'm all on board because that's the whole reason we're using them.
And that's a great point.
However, I have to ask the question, if the entire Linux community, you know, the entire
Linux community, but the major players in Linux being Red Hat, you know, and SUSE has
actually done a lot of contribution to GNOME as well.
So SUSE and Red Hat and Canonical, now they're all on GNOME and Mark Shuttleworth, the guy
with the vision of Unity, is willing to accept GNOME to ship as is.
And what I'm hearing is, and I can't quite get over this, is System76 is now going to
kind of go out on their own and say, well, we'll make these extensions and kind of modify
and stuff?
Am I?
I like to be devil's advocate in this point, and if you look at it, System76 already went
out on their own with Unity and made modifications and things like that.
So it's not like they're changing their MO, but mostly GNOME is designed specifically
to allow extensions, like it is intended to be modified via extensions.
So even if you do install an extension or you create your own custom extension to modify
it in some way, are you really going against GNOME's, you know, intent?
Well, I think if GNOME wanted to include, you know, like the menu system, they wanted
to rework that, they wanted to include the minimize and maximize stuff.
I feel like that's something that was pretty simple that the GNOME team could have done
long before, you know, Ubuntu switched over, System76 offered, you know, their engineers
and stuff like that.
So I guess I'm just having a little hard time understanding how we are respecting the direction
that GNOME wants to go and what the decision is going to be if the direction GNOME wants
to go is a different decision than what System76 feels is best for their customers.
I would like to add two things here.
One, you know, I'm basing this off of conversations with the GNOME guys.
They love the idea of making use of the extensions.
Sorry, the GNOME guys I've talked to don't seem to mind the idea of the use of their
extensions that they put into the desktop environment in order to make the changes that
we want to make.
In fact, it seems like that's what they intended it for, was for the last bit, you know, if
it's an OEM or someone who wants to put in their own stuff to do that.
The other thing is we're, so I want everybody to take this with a grain of salt.
We are engineers to Guadec in Manchester this year, you know, that's a big GNOME conference.
And before we implement anything, we're going to be having conversations about, and I'm
fairly optimistic based on my conversations, of course, we made this decision before we
had all the conversations we've had now, you know, that there's a lot that we can work
out without having to ship extensions.
But I just, but the thing I'm trying to iterate here is that we are interested in implementing
our customers' feedback and we were waiting for a very long time.
And this is one of the downsides of canonical strategy before this change.
We were waiting for a long time because Unity 8 was coming and we thought, well, we could
pour all this time and money and resources into Unity 7 only to have it trashed, you
know, and now we realize, well, you know, there are things that our customers want that
ultimately we're going to have to either take into our own hands, you know, or not see them
at all potentially.
And just like I'm sure you listened to customer feedback and implemented it, you know, at
your role, so long as we do it in the right way, I feel like it will be a net positive
for everyone.
Of course, all this stuff will be made open and we'll provide it in a package that people
can easily install and have all of our extensions there.
And we're just interested to really get involved into hacking around with Gnome, you know,
our new toy and see what we can do.
But all around, we're really excited about this and Gnome community has been fantastic.
Well, Ryan, we really appreciate you stopping by on Linux Unplugged and thanks a lot for
all you guys are doing at System76.
We wish you the best.
I still have my reservations about how all this is going to play out, but I guess we'll
see.
Wes, what are your thoughts?
You know, I think that's spot on.
I'm hopeful that it's going to be a good move for Linux desktop users overall.
You know, there was Mark Shuttleworth had some comments about what he thought about
the hate on Mir and Unity in general.
I do agree with you as someone who's used it at a work desktop, like I didn't, I did,
obviously I could change my desktop if I need to.
I didn't go that far.
It worked.
It worked for me.
It wasn't when I chose on my home systems, but it was, you know, it was very functional.
It had a lot of nice features that maybe other things didn't.
But I'm very hopeful that we can take the energy that was going there, redirect it and
build a better foundation that we can all benefit from.
But we'll see.
I think we're going to have to see.
That seems like a perfect time to end this week's program.
I think it's been a great discussion and something we're going to have to consider.
So that wraps it up this week, episode 192 of your Linux Unplugged program.
If you'd like to see more, head on over to JupiterBroadcasting.com.
There you can find our reruns, other show reruns.
Hey, there's a new show called Ask Noah.
You should most certainly check out if you've enjoyed Noah's commentary here today, or if
you didn't because you're just going to get more of that wonderful guy.
You can find me on Twitter at at Wes Payne.
Noah, where are you?
At ColonelLinux at AskNoahShow, AskNoahShow.com for the Ask Noah dashboard.
Excellent.
Well, thank you very much.
This show wouldn't be the same without all of our Wonder Mumble contributors.
You can go to JupiterBroadcasting.com if you want to find out more about how to get on
our Mumble Room, or you can join us on our IRC.
We love having live contributors.
It's what makes this show the virtual mug.
And please stay tuned.
Join us next week.
All right, everybody.
Let's go over to JBedTitles.com and pick our show title.
So I got a bone to pick with something Colonel said.
All right.
Uh-oh.
That's the perfect opportunity for our post-show discussion.
Okay.
So Noah, you mentioned something about developers' intentions and whatnot and the way that distributions
package the desktop environments.
But I always kind of see it as the distro's job to kind of smooth out those rough edges.
And Ubuntu's always done a really good job of that.
Like in the past, even when they shipped GNOME 2, they really put a lot of polish on that.
I agree.
Adding that top menu and stuff like that.
I agree.
And I think it's one thing for a large software company that ships hundreds of millions of
copies of a software that has 700 employees, offices in multiple locations to make that
kind of a change.
And a computer company in Denver, Colorado that's in a single place, this is not a hit
on System76.
I have given more praise to System76.
They had the most airtime of any segment we did at scale because I was so in love with
the product that they're doing.
So this is not a hit on System76.
But the market confines of the reality that we're living in is that Canonical, a company
many, many times the size of System76 is saying that we think it's a better opportunity to
ship GNOME the way the GNOME team wants to deliver it.
And System76 is saying, no, we don't quite agree with that.
We think that we need to make these changes here, there, and everywhere, and we'll make
these kind of tweaks.
And if we can't get it done through actual GNOME, then we'll just hack on an extension.
And that whole thing starts to make me feel like we are going down a path that I'm not
real comfortable going down.
If it was a hack on of changing some part of the core or something like that, then I
would agree with your point.
But the extension system is built by GNOME for this purpose.
The other part that I got from him describing what he was talking about as well is it sounded
like this was more minor tweaks with the extensions and theming, which a lot of OEM manufacturers
for computers, not only do they do that kind of thing, I've seen stuff on computers when
you get them new that you don't want that stuff on your computer.
And I have more confidence in System76 making small changes than I'd say HP shipping me
a brand new computer.
I agree with that.
But when it comes to redoing the menu system, when it comes to modifying the taskbar and
stuff like that, it seems like those are the kind of things that in my personal experience,
and again, I'm not speaking for everyone, my personal experience, those kinds of things
done with extensions seem to leave little holes in the polish, and again, not to beat
a broken or a dead horse.
Well, that's because the extensions don't have people backing it.
They don't have a company backing to make sure that they are polished.
And I'm wondering, does System76 have the infrastructure, do they have the capital,
do they have what's necessary to bring that forward?
I don't know the answer to that.
Maybe they do.
Maybe I'm solid, I'm short, I don't know.
So let's actually go and down this route a bit because like, okay, let's say that you're
right and it leaves holes in the polish, wouldn't they then go and get some complaints and then
maybe they'd fix it?
I think that this is really not a problem.
I think we're getting hung up on only one stage of the pipeline because we're not looking
forward enough.
If there's problems, then people are going to notice it and they're going to complain
to them and they'll fix it.
I'm just looking bigger picture.
Canonical ships, Ubuntu, everyone that's using Ubuntu perfectly happy with Gnome, including
Mark Shuttleworth himself, and then not quite good enough for a single computer company
out of Denver.
I'm having a hard time squaring it in my head.
Well, I don't think anyone leaves Gnome stock.
I don't think anyone installs Gnome.
According to Mark Shuttleworth, OMG Ubuntu ran a piece, they did an interview with him
and in his words, we believe that the Gnome team is going to take direction.
We're going to offer some input but ultimately, we're going to let them take the design decision.
They will ship Gnome and we will just implement it.
They specifically asked him if he is going to be tweaking the stuff and according to
him, they're not.
They're just going to take Gnome.
Yeah, but I think he's out of the desktop business after Unity.
That's someone who's gone down six years of trying to do something and realize this is
too much of a nut to crack, we're going to go back to Gnome.
That's really what that is.
It's not him saying that Gnome doesn't need improvement.
He's just saying, we'll let them worry about the desktop.
We're going to worry about the Ubuntu Chronicle products.
I think this is a good way to segue.
What a great design idea.
Let the Gnome team deal with the desktop.
Let us deal with the backend Ubuntu and I agree with that design philosophy and that
makes it all the more difficult for me to say that this computer company is going to
say, well, it's good enough for all those people, not quite good enough for our customers.
That is what I have a hard time getting my head wrapped around.
Mostly because I spent the last week getting so excited that all of these companies are
rallying around a single desktop environment and so that's going to become consistent between
Red Hat, Fedora, Ubuntu, Seuss, all of these companies.
Everything is going to be consistent and now I feel like right at the beginning before
we even have the first version out, we already have one of the biggest supporters of Ubuntu,
one of the biggest shippers of Ubuntu laptops saying, we're going to go a slightly different
way.
We're going to do some little tweaks, but we're going to go a slightly different way.
That's what kind of gets me.
I think that chimes right in with what Rekai was asking.
And Rekai was saying he didn't really get an answer to his question, but did System
76 really decide, should other companies decide that maybe KDE or Mate?
How about elementary OS?
Yeah, exactly.
They have one of the elementary OS designers at their company.
That seems like a direction that could be a good way to go, particularly if they are
concerned that the gnome isn't going to adequately fit their customers.
You want something upstream that they're going to be receptive, especially if you're going
to be willing to apply extra effort, submit patches, you want an upstream that's going
to be taking them or iterate on them.
Going to elementary would be like, your argument as having a whole unified approach would be
the exact opposite.
Why would you be okay with them choosing elementary versus adding some-
I'm not.
If it were up to me, I would ship stock Ubuntu.
But what I'm saying is if you're going to start making UI tweaks, if you don't feel
like that's up to the task, and like Rekai correctly points out, they're at a point of
force change anyway.
I think if it were up to System 76, they'd continue shipping Unity because they've been
selling Unity for seven years.
They've been telling their customers to expect Unity for seven years.
Probably before this announcement was made, they were telling customers, one of the great
things about it, because I know, because I've been telling my customers this, one of the
great things about Ubuntu is you won't have to worry about the desktop change because
they don't make those big changes, right?
And then all of a sudden, boom.
Are you bothered by Intergos, Fedora, and SUSE all having different things from the
stock gnome?
Kind of.
None of them ship stock gnome.
Fedora is pretty darn close.
I mean, there really is not.
They're the ones who even make it and they don't ship the stock.
Don't forget to vote, everyone.
What's modified in Fedora?
They don't even modify the color template of the theme stuff.
That ship stuff.
That's because they designed it.
Yeah, they designed that part, but they also add extensions.
There are official gnome extensions, such as the application menu.
If you don't like the default menu in the overview, gnome provides an extension for
changing.
Fair enough.
I have a question here.
Let's imagine that System76 does some changes and let's imagine they would present some
kind of pop-up menu and they would say, okay, you can do the change with Ubuntu.
You can switch to gnome 3 or you can have some patch set, some extension set that we
provide for you and that will give some kind of legacy Unity experience for you.
Would that be a solution for you?
Maybe.
Maybe.
I just, the whole thing is treating gnome like it is some golden goose that obviously
is making all the right design decisions and ultimately, that's the way you're describing
it.
Here's an issue I have and I'll admit it's kind of a raw spot for me, but I see this
happen time and time again.
What happens is something really cool starts off and at first, it's a bunch of geeks who
love it and then what happens is it kind of takes off and then they put a marketing term
on it and then it gets sold to commercial ventures and then everyone jumps on board
and then they take this thing that all of these core geeks really liked and then they
take it in a direction that it was never meant to go in to begin with and I'm having a hard
time coming up with something off the top of my head.
Home automation.
Home automation is a great example, right?
It started out as I had close contacts, I had relays, I owned all the technology, I
could fit all in my house, I could see it all, I could use it all.
Everything was open.
There was no restrictions.
There was no proprietary stuff and then it got eaten up by these companies who marketize
it and productize it and now you buy everything from Amazon, you link it to your Amazon account
with an API key and Amazon controls everything and then now everyone says, oh, I like home
automation.
Well, they don't like the home automation.
They like paying for Amazon services and that's what I'm kind of afraid of happening
to Gnome.
The Gnome team has been consistently delivering a better and better and better desktop every
time it comes out.
Is it perfect?
No.
Do I like it for everything?
Absolutely not.
Do I have problems with it?
Of course, but they are going a particular direction and the people that are using Gnome
are very happy with the direction they're going and what concerns me is as we all of
a sudden load up the millions of people that are on Ubuntu and now they're coming back
into the Gnome projects as we load up these, you know, software, hardware manufacturers
that are shipping to their end clients and they have to meet a profit line and they have
to deliver to their customers and their customers' expectations.
My concern is does the direction of Gnome change or is there going to be a lot of undue
pressure for the direction of Gnome change from all these people that are going to Gnome
because the desktop they were on, frankly, wasn't good enough for the market.
