This is Linux Unplugged, episode 300 in Lucky 33 for December 24th, 2019.
Hello friends and welcome into a special holiday edition of your Unplugged program.
My name is Chris.
My name is Wes.
Hello Wes.
Hello.
I'm impressed that you dressed up even though this is an audio podcast.
Yeah, I mean this is not a comfortable suit.
You gotta be warm right now.
For the holidays.
You are such a trooper.
And look at this beard.
Also wearing a pretty hat, it's Alex and Cheese.
Hello gentlemen.
Hello.
Ho, ho, ho.
Is that one hat?
They're sharing the hat.
Yeah, I'm impressed.
You guys both fit in that really well and the audio still sounds good.
Pros.
And then of course here to help us celebrate this special event, it's our virtual log time
appropriate.
Greetings mumble room.
Hello.
Hello everybody.
You know, I'm, I just got to say as a special holiday, welcome to Ace Nomad, Ben, Mr. Big
Daddy Linux, AKA Rocco, Brent, Byte, Cubicle, Nate, Jill, Minimac, and the Silent Drifter.
Happy holidays.
Thank you for joining us live today guys.
It's nice to have you here.
Now we're going to do something sort of special this episode.
We're going to look back at the last decade of how open source has changed the world and
a couple of key moments that bent the universe that led to the eventual takeover.
I think it's indisputable.
Open source has won the technology sector to the point where every major company you
can announce has some skin in the game.
It's on most people's handsets.
It runs the cloud and here we are not 13 years later, still podcasting about the very topic.
And when you look back over the decade, there's a few monumental moments, just a few, just
massive things that changed everything.
And we're going to look at those, but then because we like to always kick things up a
notch here on the old unplugged cooking program, we're going to ask, what would the world be
like if that never happened?
And we'll use our future casters to kind of talk about what things would be like if some
of those wins and successes had never happened.
I think that's going to be a lot of fun.
I'm a little scared for a world we come up with, but I'm comforted that we live here.
I know it's funny because so often, you know, we think about how there is just awful consequences
of these platforms or those platforms or this is a lock-in or that's a lock-down.
All the limitations of proprietary tech that's out there.
But we take for granted some of the wins that we really should celebrate.
Yeah, you get where I'm at.
You get where I'm coming from.
So we just have a couple of community items I wanted to cover before we get into that.
A couple of them actually must just be the time of the year are also looking back at
the last 10 years for Tails and looking back at the last 10 years at GNOME.
But let's start with something that's a little more modern.
This is an accumulation of all the stuff we're about to talk about.
And Alex really found a great article over at the Linux server IO blog.
This sounds really cool because it's got a couple of words in the headline, Alex, that
I like.
And that's all it really takes these days.
That's how you get in the show.
Tell me about it.
Well, it's nothing new, really.
You last covered this on last 400 back in January 2016.
And this is netboot.xyz.
And what this lets you do is network boot over pixie boot any server, really.
So rather than having to download an ISO and flash a thumb drive and yada, yada, yada,
you can just netboot off of this pixie server.
So it's very useful for those of us that like to distro hop or whatever.
And now thanks to the team over at Linux server, you can run it out of a Docker container.
So are pixie booting containers now?
Not quite.
It still lets you pixie boot ISOs effectively to boot into Debian, Ubuntu, Zorin OS, like
any.
To be honest, you can actually have a BSD installer in there, a Windows installer, as
well as any Linux ISO.
So it seems like it's sort of streamlined that from somewhat from the somewhat arcane
sort of set up a pixie server somewhere, go find and source all the images, get them set
up the right way.
If I can just do that all that with one container, right.
And then when you're done, unless I'm unless you don't have a network bootable system,
but pretty much every systems network bootable, you could kind of be all done with using thumb
drives and burning ISOs to sticks like just use this on your network.
That's that's pretty slick.
And you plug it in with the nginx let's encrypt container that they offer as well.
And you can host any image you want locally.
There's no cloud required.
Wes, this is this is how we could sort of do like a parachute approach for the arch
server.
So we've got the snapshots and then this as like a backup.
You don't remember when you were saying if you could have it any way you would have it
where we would deploy images.
So we would just do the updates as an image.
Yeah.
What if we use pixie boot?
Yeah.
Okay.
And we use this right?
Right.
I think you're trying to find some ways to make this setup go horribly wrong.
But I'm it.
Oh, you crazy guy.
You're supposed to tell me now just imagine a net bootable mem test or a net bootable
G party or something, you know, it's useful, right?
So you add a container to one of your systems that does that host this thing.
And then I guess you'd have to update your DHCP config to to point to that container.
Correct.
Yeah, they go over the full details in the article.
But you can download there's a web interface built in and you download the ISOs that way.
Oh, it's got so cool.
Look at that.
That's pretty cool.
But the friendliest way to set up pixie I've ever seen.
Wow.
No kidding.
That is all right.
That is pretty great.
Hmm.
Linux home plug calm slash three three three if you want to get a link to this.
I mean, I've had that before, you know, like an arch ISO ready to go and it can be nice
you have your you know, you have someone over need to do tech support, you just plug it
in, you've got your environment ready to go and you can start inspecting their device.
Anybody here ever use Norton ghost and like did like the whole ghosting of a whole lab
or anything like that?
This is the sound of me sheepishly raising my hand.
Yeah.
Yeah.
I mean, we're talking about the proprietary stuff.
That was boom.
Norton ghost.
I can't remember like that some sort of like ghost cast can't remember the name multicast
where you would broadcast the image to all the stations at once.
It was pretty slick.
Yeah, it was kind of cool.
It's just that it was just a hell of a thing to have to manage.
It was too much.
But this is way cooler.
So check out a link to that in the show notes.
Now let's talk about tales celebrating 10 years of well, itself.
10 years of tales.
What kind of a legacy really?
I mean, the first release of tales was really called amnesia back in 2009.
Since then, they've released 98 versions of tales and remember tales is this secure live
environment you can go into, you know, do all your private Bitcoin and whatnot.
It's very handy.
I'm glad it exists.
And to their credit, they also call out some of the projects that sort of inspired and
helped them when they got started way back in the 2000s.
And one of those stood out.
That was Knoppix.
Remember Knoppix Chris?
Oh, yes, I remember Knoppix.
Knoppix was the first live CD and what's incredible about Knoppix and you can check this out for
yourself.
Go to knoppix.org.
K-N-O-P-P-I-X.org.
I swear to Linus that looks just like it did back in 2000.
I don't think it has changed.
It really hasn't changed at all.
But it was the first live CD that kind of gained wide adoption.
And Jill, you remember this had like the little hardware scanning progress thing when Knoppix
would boot up?
Oh, yeah.
Oh, definitely.
That was cool.
It would felt like, oh, man, Linux can detect anything like it can just adapt and boot on
any system.
That's what Knoppix felt like to me.
Yeah.
Yeah, definitely.
In fact, I still have it installed on an old Penny and Pro 200.
That's awesome.
Well, I remember thinking it was one of those things that sort of stood out to Linux, even
if you weren't yet into some of the, you know, the philosophy underlying it.
It was like, here's this thing that your other operating systems can't do.
What a demo.
What a demo.
Yeah.
And now that's how we install every distro basically.
Well, not every distro, but you know what I mean.
And we still call them live CDs.
Yeah, it's so funny.
I saw recently the Fedora project was discussing like if they actually want to make CD compatibility
like a blocker for the release or not, and they're like, yeah, maybe we should drop this.
There's a lot of complicated stuff that goes in there, you know, to make these images that
work on CDs and USBs, I'd be, I'm all for simpler.
So here we are now, started as Amnesia, but now it's known as Tails.
Now, of course, they've got the installer, which is forked from the Fedora live USB creator.
They have persistence mode if you want to stay in Tails all the time, automatic updatings,
back spoofing, the Tails greeter, which helps you get through some of the initial stuff,
the metadata anonymization toolkit, which they've been using since 2011, as part of
it started as a Google Summer of Code thing, like, so much legacy now.
Yes.
One thing that I really like about this post at the end is one of their section titles
2015 to 2019, sort of the era we've been in now, and the section title is maturity, user
experience in automation.
And I think that just sums up a lot of what has happened in the entire Linux ecosystem.
Really, seriously.
We just really have seen a lot of that from automated testing to automated continuous
building and deployments to all of it.
It's really...
I mean, we're still here to gripe about the edges that are not yet polished.
We have to hunt pretty hard to find them.
Not hard enough.
And then over on Feronix, Michael Arbel has a 10 years past Gnomes 10 by 10 goal.
The Linux desktop is still far from having 10% market share.
I think he woke up on the wrong side of the bed one morning and he wrote this piece because
he's just...
Maybe his Gnome shell crashed.
I know.
He's just kind of having an unnecessary go at Gnome.
We all know this happened, but he writes way back in 2005, the Gnome 10 by 10 goal was
formed to, quote, own 10% of the global desktop market by 2010.
Now approaching 10 years past that failed goal, Gnome or even the broader Linux desktop
market share is still well off from seeing a 10% market share.
All right.
This is relevant for our episode today.
Let's talk about this.
Yeah.
He does note that that very ambitious goal is still documented on the Gnome wiki.
Yeah, it's still there.
The year of the Linux desktop is another cliche and all of that.
It's something that Rocco and I got into in my Linux spotlight actually was what is really
the year of the Linux desktop?
And you've probably asked that question Rocco in a few different ways and you must get various
different answers on that.
Everybody has a different take on it.
And one of my favorites is actually Cubicle Nate's take on it where he said that the year
of the Linux desktop is the year you found Linux.
Right.
That's what I thought.
He's kind of, you know, like larbles kind of having a shot here.
It's like, well, haven't we all gotten past this mentality?
We're kind of over this.
And I think to those of us who really see people's choice of an operating system is
a very personal thing and you know, you choose what works for you.
I have found what works for me.
I pass no judgment if something else works better for you.
We have a lot of things going on in life.
This is something I'm passionate about.
You don't have to be.
Right.
I'd love for you to be passionate about it.
I'd love to share it with you.
Very willing to tell you why it's great.
But yeah, people, you know, you got to make the choices that work for you at the end of
the day.
Here, listen to my podcast.
Listen to my podcast.
Only one?
Okay.
Listen to all of them.
But no, really, I genuinely do try to practice in real life.
When I meet somebody, I try to be accepting of what operating system they use.
And I think we've all, well, I shouldn't say that, but a lot of us have kind of come to
that way of thinking.
Ten years in, we're really kind of looking at like, by most metrics, it seems to be somewhere
around 2% market share.
I wonder, too, how much of this is, you know, we're in a different position.
We talk a lot about the Microsoft's new position in terms of open source and Linux.
So I think us being so vitriolic about the fight to convince everyone, it makes less
sense when there's less parties that we're fighting against.
Hmm.
Yeah.
And I think, too, the type of user can matter a lot.
It can be 2% of a very particular type of user that can matter a lot to a large industry.
I think the Sputnik program is an often cited example of that.
But you look at the desktop strategy of Ubuntu in general, and I think it is an indicator
that that 2% is something that corporations are still interested in catering to.
2.1, I think, was the latest net market share report.
Something around there.
You look at the valve stats.
You look at different stuff.
Right.
And it also doesn't tell the story of, you know, like what the support actually looks
like.
We've seen a lot more, at least just with the advance of web technologies in general,
we're in a lot better place now than we were for the software you might need for everyday
life actually running on Linux, despite relatively no change in market share.
Unquestionably.
Just so much better now.
So much better off with, I mean, there's so many things that we do for work now that are
web based or online that in the past required Windows to do basic things at work like submitting
for time off.
I mean, I remember having a complicated virtual box set up to run Outlook so that it would
pop up in its own little window.
So glad I don't have to do that.
Heck yeah.
I totally rock one of those.
Yeah.
I made a lot of sacrifices back in the day to make Linux happen.
I was one of those individuals running Xandros.
You remember Xandros?
Yeah, Xandros.
If you bought the pro edition or whatever it was, came with crossover office out of
the box and during the first user set up would allow you to join to a Windows domain.
Really?
Yeah.
So I could log in to my Xandros KDE4 desktop using my Active Directory or NT4.
I can't remember how long ago this was, credentials, both worked eventually.
And I would even be able to set like file permission ownerships based on the usernames
and groups from the NT domain.
That is nice.
Yeah.
Although still that we don't have to do that.
I know.
And this was like a special commercial version of Linux that I personally paid for.
And then like, on the low key installed on my work computer.
It's funny, you know, we had to have those fights.
But it was made easier by the fact that Linux is so flexible and that you can actually do
things like that.
Yeah, really.
It really, it really was, it was, it was incredible what the operating system could do.
And 10 years ago, plus I felt like I was trying to show everyone the light.
Like I had found out and discovered about this new promised land that nobody believed
in.
Right.
And we were all staying in this place where there wasn't enough water and there wasn't
enough food and everybody was miserable.
It's just over this Windows XP Hill.
Yeah.
And now that is clearly not the position we're in anymore.
There are so many voices advocating and there are so many reasons to run free and open source
software or to build products around it that it advocates for itself really.
I mean, the momentum of it.
Right.
I mean, and people who are in that space, you know, they don't use it.
I mean, you know, business people, everyone knows at least that it's involved or it's
a name in the space.
So every year I go on this annual shopping trip since I've been 21 with my dad and his
two lifelong buddies.
And every year it's my opportunity to kind of check in with where they're at, you know,
on the technological curve.
How they observe what's happening in the tech space.
And you know, gone now are the questions of what, what is Linux?
What is this Linux thing?
And it's, oh yeah, that's what's the cloud runs on there, right?
Linux run, that's what the cloud runs on.
I'm like, yeah, and your phone.
Yeah.
Yeah.
And your phone and your bank and, you know, everything.
But it's interesting that they actually are aware that it's a thing, even though there's
nothing they connect to on a daily basis that says the word Linux, nothing they interact
with that says Linux, none of their jobs.
I mean, mostly they're in the telco industry, the construction industry, yeah, and the construction
industry and like, there's nothing really in there that has anything to do with technology.
So it's always fascinating to see what the sort of perception level is.
And they, they get it.
They get that services are a thing.
They might not quite understand the scope of responsibility, all the privacy implications,
but they get the idea that there's these third party services.
And they, one of the things they were discussing is, well, how can I back up my photos when
I take them on my phone, but not put them on the cloud?
Like I want to transfer them to like a thumb drive if I can.
And how can I do that, Christopher?
Cause they'll, they'll, all three of them call me Christopher.
And of course I'm walking through all the different scenarios and asking about their
dumb little Android devices that are horrible and all these kinds of things.
And oh, and then of course my dad's got the iPhone, so I'm like, yeah, well, listen, dad,
here's what you got to do.
You got to go through this whole rigmarole because otherwise you're going to be using
iCloud and it's just this whole process, but they get the questions now.
And I didn't introduce them to these things.
Yeah.
Yeah.
Amongst their buddies on their various excursions.
So it's been fascinating to watch that trend, but we got a lot to get into.
You ready to do this?
A decade of Linux West.
So we do have a couple of probably just, let's say last week we had a big housekeeping.
This week we have a short housekeeping.
So just a couple of things right off the top.
Great chance to get caught up on Linux headlines.
It will be taking a holiday break.
All of that's in there.
So go check that out if you haven't yet.
If you, if you haven't, it's fine.
It's totally fine.
It won't take you long to catch up.
Just three minutes or less.
I mean, last week you were so hard on people, Wes, about not listening to headlines and
I just want to say it's fine.
You're right.
I was wrong.
I don't want to be a big man and say that.
And if you'd like to get all your content with YouTube DL, you know, I do Jupiter extras
is on YouTube now so you can go get that.
Go subscribe to so we can name it.
Have we gotten enough?
Let's go look Wes.
Have we gotten enough subscribers to name our, uh, extra show?
139.
I think that might be enough.
Right?
Oh, probably.
Was it a thousand?
We need it.
I can't remember.
Better go subscribe.
You bet.
You better go over there and subscribe.
Cause I can't remember.
And you'll get some extra notifications about, you know, when there's a new extra.
Now I know over the holidays you're missing us.
We're not live.
We're not around.
You want a little more West pain.
Don't we all Jupiter broadcasting.com slash telegram.
Keep the conversation going in our telegram group.
We're chatting over there all the time.
I try to pop in a couple of times a day.
Most of us are in there in and out throughout the day over there.
Check it out at Jupiter broadcasting.com slash telegram.
Yeah.
I promised you it was a short one.
Didn't I?
Boom.
It's just a couple of things to mention.
Now last week we talked about brunch with Brent and Jason.
Help me with the Brent.
Help me with it.
You got this.
You got this.
All right.
Spezac.
Spezac.
Spezac.
Spezac.
Spezac.
I wrote it down.
You did write it down and then crossed it out for some reason.
Cause I nailed it.
So then I cried.
I don't need that anymore.
Four thoughts.
Just going to throw this away.
We got a great brunch and part two is out now and it made me really kind of think about
this topic we're about to get into this decade.
And Jason makes a fantastic point from a great perspective of years past.
And we look here now where open source is ruling the world and we're joking about Android
on their phones and yucking about how it runs the cloud.
Ha ha ha.
Look at us.
The champions.
We are the champions.
But it didn't actually have to go down this way.
Maybe if the antitrust case hadn't gone the way it had or the right deals have been made
or the right person offered Linus the right job maybe maybe we wouldn't have had these
victories and in Brent's chat with Jason he really got me thinking so I want to play this
clip it's just a couple of minutes long.
It'll set the stage for the rest of our conversation.
It was my first experience with the idea that you have all the source code.
You're not beholden to a corporate entity to run your computer to license the software
and if you make a change and you improve the software if you have an idea it can be contributed
back to the greater whole for everybody so to me it was a micro example of human knowledge.
Patents are not.
He's talking just to set this up a little bit about Linux and open source and free software
in general.
He's talking about how the difference between something being available for free and something
being locked behind a patent is the difference between all of humanity knowing something
and a select few.
millennia you know thousands of centuries when a human gets an idea he shares it with
another human and then she shares it with somebody else and then she gives it to her
kids and then he shares it to his kids and then you basically have the volume of human
knowledge accelerated our ability to enforce our will upon nature at such a pace because
of the interconnections and sharing.
That's why we are the dominant species on the planet not just luck but our ability to
communicate and share ideas and then share knowledge because of that allows us to get
solve problems that there's just no way you could solve them if your your knowledge died
with the last person that knew a certain thing you know fast forward centuries into the future
and here we are.
That's why Linux has such a snowball rolling downhill effect when it comes to software
for computer and then Mike the ecosystem around it is because it's basically a representation
of what's happens with human knowledge without any restrictions.
If you don't have patents and if you don't have arbitrary lines between you know boundaries
between countries or whatever you know we share ideas with each other and just to make
the sum total of that knowledge better for everyone.
Well that's why it works that's why it works and that bit me in the leg.
I'm like okay this is awesome.
So it's the embodiment of what human knowledge and sharing is normally in software which
part of this point hadn't been and it was digital freedom or what I call digital independence
and that's huge because I could see the future developing around me that the internet would
soon be everything fax machines were just on their way out.
And I was like okay if everything happens inside the computer and wires that connect
us he who controls the wires and the computer controls everything will control the knowledge
of the world.
So we can't let that be a company especially not Microsoft.
They were awful awful from a business practice perspective not just a convicted monopolist
but good night.
So that's a bit of the framework I want to work from as we discuss through some of this
is let's appreciate the success we have seen so far even if we don't have 10 percent of
the desktop market share like we thought we would 10 years ago.
We still have some incredible wins and maybe we're not at that 10 percent because in some
areas things didn't go super well.
I think a lot of us remember the day when Ubuntu shipped Gnome 2 and then there was
the day when they no longer shipped Gnome 2.
Well I mean just to think that at the start of this decade Gnome 2 was still quite relevant.
Yeah.
Yeah.
Gnome Shell became the default.
Gnome Shell 3 became the default I should say in April of 2011.
That's how long ago it was.
Ubuntu 11.04 shipped with Unity.
Mate first released in August of 2011.
Are you seeing how close these are together?
Razer Cute and LXDE merged in July of 2013.
Once that announcement was made about Gnome Shell 3 we just kind of went off in a bunch
of different pew, pew, pew, pew, pew, pew, pew, pew, pew, we just went off in all these
different directions.
We just we really fractured as a community.
You can really see it in the desktop there and of course that also was around the Vista
and Windows 8 timelines where we had our own missteps and very cunningly Apple picked up
a bunch of the DevOps sysadmin type terminal workers that also wanted a reliable stable
GUI.
Their OS was beginning to mature, their Mac OS, next based OS was beginning to mature
at that time.
They had time to iterate there on that.
So it's not a huge win.
It probably depends on your perspective though.
I think we often get too distracted by the miss on the desktop and we don't focus on
all of the other wins.
It's like wins everywhere else.
It's this one area and I personally, and I think I speak for you too, I'm very happy
with my Linux desktop.
Right.
So that's it.
I mean it depends on what we've defined as success because in some ways if you were using
one of these desktops that emerged from that tough period you're probably ecstatic, right?
We have Montair, we have the very different direction that Gnome has ended up going.
We're on the other side in some sense.
Yeah, and now looking back at it, it seems almost necessary, like we had to work through
it.
It also sort of speaks to what is different about the software we're using and the Linux
desktop communities, right?
Like it has cost us.
There were costs to pay.
We missed up on some adoption, drove some users away for a while, but at the same time
it happened because it can happen in our ecosystem because there is this free sharing of ideas
and code.
Hmm.
True.
True.
So it was Ubuntu 11.04 that shipped Unity and then it was Ubuntu 17.10 that went back
to Gnome.
Some years in there.
Yes.
I mean I remember I was one of the ones that was like, oh like Unity, no.
That's when I first started playing with XFCE, so that's one thing that hasn't changed too
much.
Isn't that the UI they made for netbooks?
Unity, that was my reaction.
Unity, that's the netbook UI.
And now you know there's people listening that are still running it.
It ended up being a great desktop.
So let's talk about where we're clearly doing really well, and that's on the server side.
And there's been a few key technologies over the years.
I think it's without a shadow of a doubt, in part due to the accessibility of Linux,
the cost of getting them started, the way you can run on your own systems to test development,
and you can move something that you built on your own system up to the cloud and run
it in production, and it's just as reliable with thousands of users using it.
I mean this decade was the cloud decade, right?
It was one of the biggest transitions we've seen, and Linux was ready for it.
It wasn't absolutely necessarily clear though, and this is one of the areas I'd like us to
reflect on if things hadn't gone right.
I want to take you back to, when was it Wes?
Go back in the time machine.
September 9th, 2013.
Doodly-doot, doodly-doot.
So we're going back to September 9th, 2013.
Before Docker was a thing, it had just recently been open sourced, and it wasn't clear really
what the point was and how big it was going to be.
And so a couple of dudes from DocCloud joined Mike and I to talk about this new Docker project
that they open sourced recently.
Right.
So we were running a platform as a service company, and platform as a service basically
makes it easier for developers to get their ideas up and running in production.
And the thing that we noticed as we were running this platform as a service company is that
developers were, even with a great service like ours, were still spending far too much
time worrying about whether their code would run in-house, whether it would run on different
clouds.
And so in 2013, it was hard to appreciate that you were hearing what these developers
were solving.
They were solving a problem they had for their own software as a service platform, and in
doing so, they created this thing called Docker.
And then they thought, well, if it's useful for us, maybe it'd be useful for other people.
And that's when it caught our attention.
And so they're worried about how the code is going to run rather than worrying about
creating awesome code.
And so we took a lot of the core technology that we had in running our platform as a service
and released it as open source, and that's the Docker project.
And Docker really basically lets you, as a developer, take any application and its dependencies
and package it up in a lightweight virtual container that will run almost anywhere.
It will run on any Linux server, so it can be in-house, it can be at Amazon, it can be
at Rackspace, it can be at any other of the cloud providers.
And you know that what works on your laptop as a developer will work in cast and production,
et cetera.
What a trip to hear that now.
The co-founders of Docker coming on our humble little podcast, Coder Radio Episode 66, to
talk about this new thing they'd started called Docker.
And now here we are many years later, and it has obviously led to the dominance in the
cloud.
It's interesting how it caught fire too, right?
I mean, cgroups emerged back in 2008, and LXC had been around roughly since then.
But Docker had the right pitch, it had the right explanation, and then the right interface
to get people excited about what containers could do.
And it's that classic open source story where they had a problem that they needed to solve
and they thought, hey, maybe somebody else could use this.
Real treat to talk to the co-founders before it was even a thing.
And if you follow Mike on social media, he's doing a Thaleo giveaway right now for students
I think.
I think it's students.
So check that out, because if you're a student and interested in getting a Thaleo, he's got
details on his social media.
So Episode 66, if you want to hear our full interview with the co-founders of Docker before
it was even really a thing, it's really a treat.
And the thing that I want to stress from that discussion is, in talking to them, we had
a sense this was going to go somewhere.
That's why we invited them on the show, obviously.
But you really had no idea the revolution it was going to lead to.
Because there had been what seemed like similar attempts to solve this problem.
Right.
Obviously, those sort of concepts weren't new.
But there was enough to push it over.
I mean, you've sort of just recently come around to having containers everywhere in
your life.
It took a little while to get there.
I got them at home and at work now.
But the tooling has advanced so that the tooling created to solve these scaling problems for
cloud providers can help you too.
Yeah.
So, fast forward, we have a community around these things, like Linux server IO speaks
to that, Alex.
There's a huge community, billion plus users over there, or dead polls or whatever the
quote is.
But I mean, it's a huge group of folks all around open source software shipping using
Docker.
6.4 billion image pools at the latest count.
Holy smokes.
Yeah, I don't know that we would have seen that, right?
I mean, it made sense sort of from the developer side, you're working on it in the back end.
But it's also become an app distribution platform.
Well, there were other projects trying to solve this issue.
You know, HashiCorp had Vagrant trying to make developer images that were kind of shippable,
so to speak.
Right.
But where I saw Docker really win was in the enterprise.
And I think that bears out pretty well over the next five or six years of containers and
orchestration and that kind of thing.
Because it allowed software developers who were working on their laptop to have quote
unquote, the same environment as was in production for the first time.
Yeah.
The Docker co-founders mentioned that too.
That was a thing that really mattered to developers.
That quality of life thing mattered.
More people were making code.
And you know, by 2015, they gained a bit of a reputation for moving too fast.
In 2016, things have sort of shifted.
Red Hat started getting more involved.
Then Red Hat actually shipped Docker in RHEL.
In 2018, Red Hat got Sirius and acquired CoreOS.
And it's really kind of just gone from there.
Now here we are in 2019, and Mantis has acquired the enterprise division of Docker.
Right.
I mean, it sort of popularized things, but as those ideas were proved out, somewhat been
undercut in the sense that all the tech was just packaged up essentially in the kernel
and other open source utilities, right?
So you've got other implementations of basically all the different features of Docker now.
I think there's a little bit of a question of what's the next decade going to look for
them.
Everyone has a container strategy.
You know, Amazon have EKS, Google have their Kubernetes offerings, and so does Azure as
well.
VMware acquired Pivotal, who were competing in that kind of container space as well.
So you know, if you don't have a container strategy at this point, you're not a player.
It is interesting to me to note how well Linux has continued to do in the sense that, you
know, you see Docker having somewhat of a troubled path, but Kubernetes has taken off
in that time and become a rising star based on a lot of the same technology because of
open source.
It's a little surprising in some sense that, you know, some of the technology underlying
Linux hasn't already been broken off to new tooling.
In fact, in a lot of ways, it's become the universal runtime.
Right.
I mean, that's why we have the WSL and Chromebooks can run Linux stuff now.
I mean, there's really not a reason besides maybe the adoption, the right timing, it could
have been a BSD, it could have been some proprietary OS.
Should we shift gears?
You want to talk about what would happen, what would the world look like if that hadn't
come along?
I think we would have been stuck in dependency hell.
What Docker truly solved was reliable shipping of software from how you designed it to how
you sold it to production.
Like we think about it in a different context than the way the market thinks about it.
The market thinks about it in I've created a product, I've promised the product as XYZ,
and I've created documentation on how to make it do XYZ, and I've sold it for tens of thousands
of dollars, and now I give it to client A. And they expect it to do exactly what the
box said it would do.
And you don't always get that until you can exactly reproduce the environment.
And that's what VMs allow for, but at a much higher overhead and not nearly as distributable.
Containers came along and solved Linux's packaging problem on the server in a big way.
The reality of it is, right, they made software more immutable, more portable.
Yeah, I mean, it's a nicely defined boundary that you have where you've got an inside and
an outside and communicate only through certain channels.
So if for the purposes of this discussion, we assume that particular problem hadn't been
solved, it would have meant shipping software on Linux would have been much more complicated.
I think it would have meant we would have had to consolidate more, even more so around
one or two leading distros.
Right.
I mean, because if you think about things in the decade before, you know, you had virtualization,
but I think there was still a large era of, you know, sys admins sort of caring for their
pet servers.
And it worked well at the scales at the time, but clearly there were issues where that just
wasn't going to meet the new demand for all the services that were trying to be created.
Look at how many businesses can scale up because they're doing things in containers instead
of VMs or physical hardware, like I think of DigitalOcean and your GoDaddy's out there
that can sell 599 WordPress a month.
But yeah, back in the day you had cPanels, didn't you, that you had to log into and all
that kind of nonsense, which is just gone now.
Right.
And that was all hocus pocus behind the scenes with Apache virtual hosts and whatnot.
I mean, that was, yeah.
I think what we did have is you'd have an even more consolidated Linux ecosystem.
You'd have maybe Red Hat and Ubuntu.
You wouldn't really have, you wouldn't hear much from any of the other distros in terms
of any kind of like software distribution.
It would really have limited the game.
Today we're able to run CrazyArch on a server and run the exact same software we ran when
it was Fedora because of containers.
And it just, the OS became an implementation detail up to the admin and sort of abstracted
away from the actual function of the application.
We wouldn't have that.
That would be gone in this scenario.
Your applications would still be very closely married to the operating system.
They might be in a VM, but they're still very closely managed.
The dependencies are spread out across the file system.
Right.
You're shipping whole systems.
Yeah.
And the thing is now, you know, with a container that's properly packaged, you are leveraging
the expertise of people that know how to deploy applications properly.
It could be the developers of the application themselves, or it could be some third party
like Linux server or whatever.
Hopefully, hopefully they know what they're doing.
There is the other side of that coin too.
The hub is full of a bunch of, a bunch of stuff that isn't so great.
But you know, when I was getting into Linux to start with, Docker was kind of that gateway
drug that let me deploy stuff that was well ahead of where my understanding was at that
point.
Yeah.
I could do Docker run Plex and suddenly I didn't have to install dependencies or anything.
It just worked.
It was magic.
I'm also grateful for some of the other technologies that fell out of that.
I was just talking with Brent the other day about network namespaces and just sort of
all the, you know, the things that needed to get invented to make containers work.
That's just made, you know, using Linux for other regular admin tasks way better.
Yeah.
There's ways that stuff gets used now that is totally transparent, but very beneficial.
Okay.
All right.
So that was fun.
Mobile Linux.
Not so fun here.
Mobile Linux time, guys.
I see how you're doing this.
It's been a day.
Yeah.
It's been a decade for mobile Linux.
Shuttleworth's grand vision for Ubuntu on phones launches in October, 2011.
It includes TVs, smart screens, tablets, and phones.
What a world that would have been.
Ubuntu Touch.
I still kind of would like a bunch of TV.
That sounds fine to me.
Yeah.
Yeah.
Wes and I reviewed a bunch of clips for this to, you know, we thought we'd play a couple
different ones.
And we found one where Matt and I on the Linux Action Show were running Ubuntu Touch on a
tablet.
And it was kind of usable.
So that was around October, 2013.
Wow.
BQ launches their Ubuntu edition phone in April of 2015.
Those were exciting times.
Yeah.
And then the Ubuntu phone project was killed by Canonical in April of 2017.
And of course, Ubiports took over and released their first stable OTA update in June of 2017.
That was a hard moment.
The Librem 5 crowdfunder kicked off in 2017 of August.
Yes, it's been that long.
And of course, the very first early devices shipped to backers, a handful of backers in
December of 2019.
And then the PinePhone was announced at Fosdom 2019.
And the Braveheart editions went on pre-order on November 2019.
And they are estimated to begin shipping on January 8, 2020.
In there, there's Firefox OS, there's WebOS, there's a lot of different tracks to go down.
But this is the one that I think when a lot of us that have been watching this for a while
look back, these are the ones that really stand out.
That mobile vision that grabbed Canonical, that convergence vision that grabbed them.
They really followed that with a passion for a very long time, from 2011 to 2017, without
ever realizing a profit on it.
I think it felt something like a failure, too.
We talk a lot about whenever the year of the Linux desktop, etc., but it's enough of a
nebulous effort that I don't think we've, we can't really succeed at, but we can't really
fail at the same time.
And I think when Canonical stopped pursuing this, it was just kind of a big, it was a
big failure.
Right?
Yeah.
I remember being so excited when these ideas initially started coming out, and the idea
of convergence, and having this one device to kind of rule them all.
And then I was really upset because I couldn't get a BQ phone here in the U.S.
Because the GSM radios were different or something like that, or they weren't licensed with the
FCC or something similar, I don't remember.
Still stings, actually.
Now that you bring it up.
It does.
Still stings.
Now, I'm in the mumble room, I'd like to flip this one around now.
So let's go the other way.
What if this had been a success?
What if Ubuntu Touch had been a hit?
What would 2019 look like?
I'd like to hear a couple of thoughts from the mumble room, and Brent, I'll go to you
first to let other people warm up.
Can you imagine a world where there was maybe a third option, or perhaps it was iPhone and
Ubuntu Touch?
Yeah, I feel like I've been dreaming of that for this last 10 years.
What would be different?
At least for those of us who are sitting in this virtual room right now, I feel like we
would be taking whole advantage of these technologies.
So we wouldn't be kind of handcuffed with some of the compromises that we're making.
I can easily say that all of us feel like we're making some compromises.
You've said that with some of your choices.
I know, certainly, I would love to be running something that matches my ideals a little
bit closer.
It feels like a real shame that we keep getting a little bit closer, you know, one step ahead
and then it feels like it falls back quite a bit.
But if we were there, man, I would be so much happier with my everyday interactions on these
little devices, because then it would be Linux on all of my devices, open source on all of
the devices I interact with on an hourly basis, really.
Absolutely.
And that would feel like a true sign of success that we actually are there.
Do you think we would be able to appreciate it, though?
Would we fully be able to appreciate it if it just had happened?
Can we only think it'd be a big deal now because it didn't happen?
So the contrast seems amazing.
Well, I think you might still have that contrast because, you know, you could look 10 years
back and say, Oh, remember when we didn't have this?
And now here we are.
I mean, we can do the exact same.
You just did the exact same thing with probably we would have a world of a lot of sort of,
you know, mid range phones, maybe a few flagships, and there would still be Android.
Yeah, for sure.
I just the thing that came to my mind is, and who knows, who knows what directions this
would have gone with the carriers, who knows what the product would have turned into.
So this is all just speculation, obviously.
But assuming Canonical could have walked the line, we may, as a general society, have a
much better privacy situation had the Ubuntu phone.
Yes.
One, because at the end of the day, they're not an advertising company.
But Minimac, you put your money on the line, if I recall, for the Ubuntu touch phone device.
And you were really hoping this thing would materialize.
Could you imagine when they started to get some money for the phone, that was a premium
device.
Hardware specs were gorgeous.
That was a really premium device.
And I was really ready to give my money.
It was like the same like the Librem 5, it was about $500, $600, if I remember well.
But it was packed really as a premium phone with a guarantee that it will be a long time
software update and anything.
And if I remember well, they got millions, millions of dollars from the backers.
But it was not enough to get it straight.
And the thing is, afterwards, I switched to Sailfish OS and there were a lot of people
from Nokia in it.
But they knew how hard the business of mobile will be.
So the mobile business is one of the hardest, I think, when it comes to hardware and software
that we see now.
And they knew how hard it is and they were struggling.
They are still there.
But to get some foot in the mobile business is one of the hardest things that you can
get.
I think we all learned that.
We watched Canonical publicly learn that lesson.
And it's so sad.
Imagine.
If that Ubuntu phone.
There were other tries.
You see that Mozilla tried it and Firefox OS and everything.
Firefox OS lifts on with KaiOS.
As do some of the other projects.
Like WebOS is considered one of the best smart TV platforms now, which is kind of funny.
You have Ubuntu OS that lifts on with UbiPorts.
It's a geek OS.
But they are getting lots of things done.
Sailfish OS is still there and they're getting better and better.
So yeah, but it's hard to get a foot in the mobile business.
Yeah.
Although one of the things I mean, I think we could look at this and say, yeah, OK, it
was a quote unquote failure.
But what's sort of beautiful about free software is the code lives on.
I think Cubicle, Nate, you could probably argue wasn't necessarily a failure at all.
Yeah, I really don't think that that Ubuntu Touch was a failure.
Maybe from a business standpoint, it turned out to be a failure.
But if you look at it, most things in the open source are a slow burn anyway.
I mean, Linux has been a slow burn and look at plasma.
Just a few years ago, everyone was harping on plasma saying, oh, it's so bloated and
slow and blah, blah, blah.
Now look at it.
It's actually it's great.
It's light on resources.
I think what UbiPorts is developing is going to be far greater than what Canonical even
conceived of.
You know, we're now with a PinePhone and also you can run on Raspberry Pis.
So it's a whole world of, I think, better devices or potential for better devices than
we could imagine.
It's a much more open and I look at it as an incredibly, incredibly positive outlook
on Linux in the mobile space.
Well said.
Absolutely well said.
And I hope you're right about UbiPorts.
I hope we're in a future down the road where we have a couple of different hardware devices
and I can load different mobile operating systems like I load different distros on a
laptop.
I want a dream.
Wouldn't that be?
And let's be realistic.
There's only a few efforts out there that are going to get us there.
And that's one of them.
And they're doing a great job.
Absolutely.
And they're just keeping at it.
And they're humble still to this day, even after years of work.
And they're doing they're literally doing the people's work.
So there's a few other things on this list.
We'll have some additional links in the show notes.
There's so much area we could talk about.
Like we have a section in here for universal packaging.
It's funny because it's kind of solved in a big way on the server with containers, but
not 100 percent.
It's not a perfect solution for everything.
And then, of course, the desktop sides all over the place still.
But taking advantage of some of the same, you know, the benefits of open source technology
is invented, pioneered by large cloud companies to secure their applications we can use on
the desktop to secure ours.
Isn't that funny?
That's so great.
Because we have the same kernel.
That's something Mac users just can't really appreciate.
And I don't mean to be disparaging when I say that.
I'm just simply saying on the desktop.
Yeah, Cubicle Nate said it perfectly.
It's a slow burn.
But when we are using something that's a contained or, quote unquote, sandboxed application,
it's using technologies that have been tested at a billion dollar scale.
And in Mac OS, like their container stuff is like kind of bolted on.
If you use the app store, like it's just kind of a mess, right?
And it's just simply the difference between an operating system that's made for a couple
of desktops and laptops and an operating system that runs the world's economy.
And that technology trickles down to the applications you're using in your desktop.
And I don't know how you pitch that to people when they're asking what the difference between
the Linux desktop is and every other desktop on the planet.
But about a trillion dollars is our many trillions is probably the answer.
So Chrome OS came around in July of 2009, became widely available when some of the first
Chromebooks arrived in June of 2011.
We got the first pixel book thingy or no phone, I guess.
No, book.
I can't remember what they called the first pixel Chromebook.
What did they call it?
Chromebook Pixel?
Okay.
Whatever that was called in 2013.
Not the phone, because this is confusing, but they called the 2013 laptop.
Yes, that it was called the Pixel and it came out in 2013.
It was kind of the first higher end Chromebook.
Very high end.
Yeah.
Many apps arrived on Chrome OS in 2014 and that's when we started taking it a little
more seriously.
Yeah.
You and I think both kind of like raised an eyebrow at that when we started doing the
coverage and luck for pretty much then on, because then you got network file support
in September of 2018.
Linux app betas arrived in October of 2018 and May 2019, it was announced that all new
Chromebooks would support Linux apps.
And then in Q4 of 2018, Chromebooks were reported making up 21 percent of all notebooks sold
in the US market and that was in 2018 of Q4.
And if that trend continues on, it's probably ticked up a few percentages since then.
And if that wasn't an interesting story all into itself, you then have the Raspberry Pi.
What a few years it has been and it has just been getting faster and every iteration has
gotten better.
In early 2012, the first 10 boards were put up for auction on eBay.
You remember that's how this went down, right?
The 10 boards with a total real price, retail price of two hundred and twenty funny monies
raised around sixteen thousand dollars total when all was done in auction.
That's how they started.
And now look at them in that something initial sales commenced in February of 2012.
The Pi 2 came out in February of 2015.
The Pi 0, I can't believe it was this long ago to tell you the truth, November 2015.
Feels like it was a lot sooner.
It's interesting, you know, it's another space where Linux was just like the right fit, ready
to go, adaptable.
I mean, you can get Windows on your Raspberry Pi, but why do you remember those attempts
early on?
Yeah, it took them a long time to get it right.
It was bad.
Pi 3 came out in February of 2016 and then the Pi 4.
My personal favorite, glorious June of this year, 2019.
As we reported in Linux headlines recently, as of December of 2019, the Raspberry Pi folks
have sold 30 million boards and just crossed the one billion dollars in revenue.
That's amazing.
Fantastic.
Selling thirty five dollar computer boards running Linux.
That's 30 million Linux devices that are in the hands of kids, adults, enthusiasts, makers.
Deployed in whole little corners all over the world.
Like the best market possible.
Like when you think of like, who would you like to get Linux in front of?
It's all of the things I just said.
Oh, God, it's so exciting.
It's just genuinely thrilling to see some of these successes.
And how critical do you think these are?
So what if the Raspberry Pi hadn't happened?
I think it was one of the best things that happened to Linux.
On like the consumer side in a very, very, very long time.
What do you think, Cheezy?
Because I know this is an area of passion for you.
Yeah.
So for me, you know, I followed this project much like Ubuntu Touch originally, and I believe
the first boards were actually based on a different CPU, the Amtel CPU or something
like that.
I don't remember the auction bit.
But you know, I think obviously with 30 million boards out there now, that's an amazing number.
And the real heart and soul behind this is that they wanted to basically replicate the
BBC Micro.
So they wanted a computer for kids that they could learn on.
And you know, not only did the board and the hardware come out, which is amazing in itself
and we're using it for so much stuff now.
One thing that we didn't mention on there, too, is the compute module, which, you know,
Raspberry Pis are used everywhere, like you said, in industry to now, it's really a widely
adopted format.
But all of the additional stuff that they've created around it.
So if you were to go to Raspberry Pi dot org slash education and the time that they've
spent to really cultivate that, I think it's going to bring up the next group of Linux
users.
You know, these kids are going to have had Linux experience when they were much younger,
which I really wish I had had.
Yeah, for sure.
Oh, how fun would that have been?
Yeah.
And in four decades, where would I be if I had Linux when I was a kid, right?
So you know, I think it's a really interesting project.
Obviously it spawned several other hardware manufacturers that are doing similar things
now, Pi being one of them.
I think in part it was a result of the technology coming down, pressures from the mobile industry
and other embedded industries that were bringing some of these costs down.
So I think if the Raspberry Pi had never happened, you'd still have the small board computer
market, right?
Absolutely.
You'd still have devices out there.
But would you have that critical mass, would you have that 30 million number, that 1 billion
revenue number?
All the tutorials, all the introductions, you know, the ARM ramps that makes it really
easy to get started with Linux and all this foreign world.
I talk about my Pi 4 servers a lot on Self Hosted and people write in all the time, like
Chris, don't you know there's more powerful boards out there that cost less or cost just
a little bit more and do all these things?
And I try to emphasize, yes, I know that.
But the Raspberry Pi is, it's more than just the hardware.
It's the foundation behind it, it's the commitment to iterate, it's the community, it's the pre-baked
images, it's the network effect for support.
All of these things come together to make it almost a product, like it's a complete
entire product where you have a whole ecosystem of open source things that you just write
to an SD card like it was a floppy disk and you put in the computer and boot like it's
the old days and now you have a dedicated device to do something.
Yeah, and like I said, they've really reached out into education and the foundation has
done a lot there.
They do their Raspberry Pi jam and all these additional tools and programs that they have
set forth to really bring, I feel, the Linux desktop into education and I think you touched
on it when you said we would probably still have single board computers.
And 20 years ago we had microcontrollers that were running industry and now we have these
other microcontrollers that are consumer level that we can use.
But now we have a single board computer that can run a full-fledged desktop.
While it's not always the best experience, it's still great.
It's a great way, I think, for the next generation to get into Linux and I'm really excited
about this most of all because I think what we all grew up with and over the last decade
what we've seen in Linux is going to be so much more than what we ever expected in another
decade and it's because of the Raspberry Pi Foundation and single board computers and
bringing that forth to education.
I think it's going to be another real push.
Long-term knock-on effects.
Absolutely.
Yeah, preach it.
I like that.
Jill, you have another pitch for the Raspberry Pi.
Yes.
To me, I've always considered the Raspberry Pi as the Heath kit for the modern age.
Okay, explain the Heath kit to me.
Yeah.
So back in the 50s, actually when it became very popular, the Heath kit was a radio that
you could build with tubes, vacuum tubes.
I had learned how to build one as a kid with my grandmother and grandfather who were both
into radio.
It just seems like the Raspberry Pi is that tool.
The Heath kits became wildly popular in the 60s and 70s and up through the 80s.
To me, the Raspberry Pi is the continuation of that development.
That's a great way to put it in that term.
That's exactly how I think of it with my kids.
I've done a couple of projects with them now and one of them was, I can't remember, I think
it was a Kano kit.
It was a whole kit where we assembled a little computer using the Raspberry Pi.
Oh, cool.
Yes, it is particularly great.
And Minimac, you make a great point that it's not just the educational aspect, but the software
that runs on these has also enabled a whole other kind of, I would say, increasing quality
of life.
Increasing quality of life.
That's a good point.
Isn't it?
In fact, a lot of people started buying Raspberry Pis to have some multimedia center.
Yeah, some Kodi.
So software like Kodi Plex started with that and have developed in a way that it's just
great.
Yeah.
Imagine you have all these open source add-ons that you can use now in these media centers
and imagine all these things were closed source and you wouldn't have this possibility.
So there is a lot of development in that regard.
Oh, gosh.
I can remember having like an x86 with Windows Media Center on it or something.
Oh, dark days.
Oh, dark days.
I tried so many things.
I tried, I had boxy boxes, I had popcorn hours, which I thought were pretty good.
I had Windows Media Extenders that were built by Logitech or Linksys or something.
And I didn't, even back then, I wasn't a Windows user necessarily, but I was willing to use
Media Center if it meant I could watch and pause stuff around my house.
Let's not forget, XBMC is named after Xbox, right?
Which I ran on hacked Xboxes back in the day.
I actually ran XBMC.
Until they closed down it for the patch.
Yes.
Well, that's why you don't get those Xboxes.
You buy them on eBay without the patch.
Yeah, you make a great point because the Media Center software that we have today genuinely
does improve my quality of life because I have a limited amount of time where I can
just sit down and hang out with the old wife skis on the couch and watch something.
And if I'm sitting there fiddling with, that's why when you blokes out there tell me, oh,
yeah, I just have my laptop hooked up to the TV and I just use VLC on the second monitor.
It's no bigs.
I'm like, bro, that's like a solid five minutes of setup that I don't want to spend that.
I get my dinner and I like to watch me something while I eat.
I don't know about you.
Do you do this?
That's nice.
Yeah.
I like to watch something every time I can.
Breakfast, lunch, or dinner.
I like to watch something while I eat.
By the way, subreddit MealtimeVideos, it's a real thing.
And so I like to just get right into it.
I don't want to be munching around with anything.
And so the fact that Kodi is just right there, or in my case, Plex and Kodi together, kumbaya,
it's so reliable, it's so solid, it's so fast, and it's so well done that it makes everyone
in my family comfortable using it, which means it's a solution that sticks.
And that it's not just crazy dad likes to have his tech collection.
It's actually something the entire family can use.
Right.
It's easy enough.
It's worth the extra time that we're learning it.
When we do get an opportunity to sit down and like watch a holiday movie or something
like that.
One of the most embarrassing like dad moments in my life has been when you hit the old play
button and it doesn't work.
And I haven't had that hand on wood table right here.
I haven't had that in years thanks to the quality of media center software available
on Linux now.
You see, I have an IPTV service that I pay about $8 a month, and the implementation
on Kodi is almost better than the software you get from the company.
No, almost about it.
It's really amazing.
Yeah, it is.
So you're right.
If we didn't have that, I think we'd all be, you'd have to just have whatever the proprietary
streaming service has available.
And I do worry where this is going.
I worry about when streaming is mainstream and I've got my Netflix box, right, and there's
motivation perhaps to go after your jellyfins, your MBs and your plexes and Kodi's.
There's maybe a little more motivation to shut down things that enable your own personal
streaming.
When the world's mentality shifts to streaming, and this could be a few years out, I just
wonder if maybe there's going to be some doors that get knocked on.
And if that isn't why you see Plex pushing their ad-supported streaming service now inside
the Plex software, because simply put, if you look like you're enabling piracy, they're
going to come for you.
I mean, we're talking about Disney now.
We're talking about Apple.
We're talking about all of these major corporations that are in the media game now getting into
streaming.
And if they discover their software that makes it super easy to pirate their stuff, so this
reality could happen.
So I think it is really good that we have such well-developed, sophisticated, open-source,
free software projects that if they want to play whack-a-mole.
Yeah, that's it.
Once it's open source.
I mean, good luck.
You can take that one.
And if it hadn't gotten to this point, to Minimech's point, if it hadn't gotten to this
point where it is now, and we were in this streaming revolution, we could really be screwed.
Well, and I think if you flip that, too, when you talk about going after the piracy aspect
of some of these media players, or these streaming services, these streaming services wouldn't
exist without Linux.
Yeah, right?
No kidding.
How much of all of this is running on Linux boxes, and they're pulling all these files
off of Linux file servers, and all the applications doing are running in VMs and containers.
It's encoding the files in Linux.
Yeah, that is very true.
And we can watch them on Linux, which is nice.
Yeah, actually, Disney Plus ratcheted their DRM one down, and so now...
And think about all the hoops we used to go through just for Netflix.
Oh, yeah.
Speaking of Disney Plus, one of the authors of the Cloud Native Infrastructure book actually
works on the Disney Plus infrastructure.
I saw that.
Yeah.
The guy is really brilliant.
Yeah, at Rothgar on Twitter, if you want to follow him.
It turns out Disney didn't just slap together some streaming service.
They really built something special, including their own custom accelerated optimized encoders
and decoders and all kinds of stuff.
They really went all out.
That's what...
I mean, who knows where the next 10 years are going?
However, in all the categories we typically talk about, I feel like Linux is sitting pretty
good.
It's positioned pretty good in all of these.
Even the desktop.
We're looking pretty good.
The slow burn effect, that slow burn, we're in that phase now where things are getting
pretty good.
And if that burn continues, by the time we get to the end of it, we're...
I mean, geez, I'm happy.
I'm already happy.
So I'm really...
I think the next decade is going to be really great.
I don't think Linux is going anywhere other than up and up and up.
What do you think?
I agree.
Well, Wes Payne, we have some very important feedback to cover before we leave.
Stuff that really covers an issue that's been going on for a decade itself, really plagues
the open source community.
And honestly, I'm not sure if there's anything that can be done.
It's a travesty.
So let's go ahead and address it here on the program.
Yeah.
I mean, we've tried to fix it.
Some severe regimens of torture and the like.
Chris, I'm curious, what sort of drive do you have in that really nice computer upstairs
again?
My boot drive?
It's an NVME drive.
It's a, yeah.
It's an NV...
So we've got some excellent...
NV drive.
Excellent feedback that might just help here from our friend, Colonel Panic.
Chris, please, it's NVME, not M-V-N-E.
Every single time.
I know.
I know.
And actually, just to really mess with him, last episode, I said it right once.
Yeah, you did.
You caught that?
That's hilarious.
Well, I could see you were clearly focusing intensely.
Yeah, you could see it in my face.
Yeah.
Okay, Colonel Panic does have a tip for you.
It's NVME.
Yeah.
Like NV My Fast Storage.
That's funny.
He also says, thanks for the coverage on Nebula.
It seems like a fantastic product, which Nebula is that peer to peer VPN solution.
Don't call it a VPN.
Overlay network.
Overlay network that Slack just released as open source that we talked about recently.
If you haven't caught some of our recent episodes, do go catch up on the Unplugged catalog.
But do not fear, even though we're not live over the holiday, we still have episodes planned
over the next couple of weeks, including our predictions, our results, and more.
So do go to linuxunplugged.com slash 333 for show notes and links to some of the things
we talked about, including some of those stories with some quotes that are a little cringe-worthy
these days.
And I should also mention, oh yeah, we got holiday music.
Whoa!
I was like, where is that?
What was that, Wes?
I should also mention the all shows feed.
Gotta give this a plug.
Now is a great time to get subscribed to that.
There's good stuff in there because that's where the extras land.
That's where Choose Linux lands, or TechSnap, or UserAir, or all the other shows.
Probably other ones like Linux Action News, probably.
If you just want more Jupiter Broadcasting content, the one link.
That's over at JupiterBroadcasting.com.
Now when we are live again, great question.
You are on the ball today.
Look at our audience.
Sometime next decade, right?
Yeah.
Wow.
JupiterBroadcasting.com slash calendar.
Have a great holiday.
Thank you for joining us, and we'll see you soon.
Happy holidays!
Two things that I'm glad that I don't have to deal with in Linux anymore.
One is XF86 config and potentially blowing up your monitor.
Yeah.
Oh my gosh.
I couldn't agree with that.
And the other is FW cutter or the NDIS wrapper to get wireless working.
Oh gosh, cheesy.
Those are two really good ones.
I also remember the era before CUPS printing and after CUPS printing.
Printing is so much simpler now in Linux than it used to be.
In fact, I think it's simpler on Linux than it is Windows.
I completely agree.
I have a bit of a controversial one, and for me it's System D.
I like System D. You're not going to get any hate from me.
Yeah, well before System D, you had to muck around with upstart scripts and all sorts
of non-standard stuff between each distro, and now I can switch from Arch to Ubuntu to
Red Hat to whatever, and it's all System D, and it's the same, and I just like that.
I'm liking Linux Wayback Machine as a title, that's pretty good.
That's fun.
That's pretty good.
When it comes to printers, we have that interesting fact that CUPS is now maintained by Apple,
and that's changed a lot, I think.
And it's been like that for a really long time now, and they haven't screwed it up apparently.
Because they need it.
Well, the fact is now I can just plug in a printer in any Linux distribution and the
driver is just loaded, and it's just working, besides some HB printers that have scanners
within, but nowadays, plug in a printer and it works.
This is something I'm really surprised by, to be honest, because it's always been such
a pain in the butt.
I'm curious if anybody else in the old virtual lug there has a glad that they don't have
to fight with us on Linux anymore story, because these are fun.
I know you got one, Jill.
Yeah.
In some modding for sound card drivers, to get sound card drivers working.
That was a thing.
Oh, my gosh.
Sound on Linux.
And remember this one.
Only one application could use the sound card at a time, back in the old also days.
Yes.
Awesome.
Also, yes.
You got to choose carefully.
Yeah.
Wow.
I think I've got one.
Yeah.
What is that?
I think one of the very first Linux experiences just getting squashed with dependency hell.
And I don't really deal with that anymore, but just kind of all gets handled in the background.
I did get on my universal packaging soapbox for a brief moment there.
But in the back of my mind, I was thinking that it is so much easier to get software
now.
It really, if you take the time, if you take a day to educate yourself, problem solved.
It's really all it takes.
And is that a big ask?
Yes.
Is it an impossible ask?
Nah.
I mean, like half the time we have picks, I can end up during the episode cloning them
down and I'm able to get them working, almost regardless of what language they are from
a makefile or a Docker container or whatever.
Yeah.
You just boot into Kexec for those things, do you?
I was going to make a Kexec one.
Well, to keep it clean, you know.
All right, Drift, I'd love to hear yours.
So the one that I'm grateful for is stable updates.
Much better than they were.
Yeah.
Oh, man.
Yeah, we recently had a coworker that was having some weird grub air messages after
an update, and it just totally took me back to a time where you had like these impossible
questions that were asked by your package manager.
Would you like to destroy your config or completely overwrite your config?
What?
Neither.
Yes.
What about you, Cubicle Nate?
I don't have to worry about win modems anymore.
Oh, good one.
That's a good one.
Yeah.
Win modems were the worst.
Oh, man.
It took me like days of just tooling away and back on Mandrake Linux.
And when I got it, when I finally got it, man, I was jumping up from office chair to
office chair.
I mean, I was so happy.
Man, Cubicle Nate, I kid you not.
I think win modems was the hardware that taught me it's worth paying a little more if it has
Linux compatibility.
And to this day, I just a few days ago, I ordered myself a steering wheel to play video
games on Linux, and the first question I have is, which of these is actually compatible
with Linux?
That's where I start.
And that was drilled into me because of win modems.
I was going to say, I think my first incompatible purchase of hardware was a win modem.
And then whenever I got it home and realized I had purchased the wrong piece of hardware,
I was so incredibly upset.
My first machine I really used was actually a laptop that put Linux on in 2003, late 2003.
And getting all the different little pieces of it working, specifically the win modem,
was just such an exercise in frustration.
Rockwell, I'm curious, roughly how long have you been running desktop Linux?
Probably the early 2000s.
So it's not...
That's a pretty long time.
It is.
Do you have a recollection of something you used to struggle with that no longer is an
issue?
Well, to be honest with you, I don't even have to go back that far to think about it.
I mean, you think about the installers themselves, how far they've come, but just think about
things like no mode set and having to edit the grub menu just to get into a Linux system
where you don't have to do that anymore.
I never thought I'd have a flicker-free desktop, honestly.
Right.
And remember, I kind of vaguely remember the time before the Intel graphics were just always
baked into the kernel.
There was a time where you didn't necessarily have a guaranteed video mode that was going
to work.
You did have to just essentially go say, all right, very basic graphic.
Let's just get this thing off the ground and then fix it after you got it loaded.
Yeah, that wasn't that long ago.
No, and NVIDIA drivers have come a long way since then, so...
I mean, even Fedora now makes it easy to install, right?
Or God forbid, the old Lilo.
Lilo.
Aw.
Aw, I miss Lilo.
I actually still use it.
Do you really?
I love Lilo.
I really do.
Yeah.
Yes, me too.
