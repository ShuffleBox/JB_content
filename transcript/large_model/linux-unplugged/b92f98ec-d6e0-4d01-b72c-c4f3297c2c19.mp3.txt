Wes, what do you think?
Nintendo and Super Nintendo,
good game consoles or greatest game consoles ever?
Here we are almost 30 years later
and people are still remaking these games,
replaying these games.
We're watching right now on the live stream
the automatic 3Dification of an NES game,
which started out as a bit of a ruse
because there's this April 1st conference
where people have published fake research.
It's been going on for years.
And as usual, this guy over here,
we got a link to the blog post.
I think his name is Tom.
He created an NES emulator
that actually renders the NES game in legit 3D.
So manual steps involved,
but best game console or greatest?
I'm just gonna throw my PlayStation 4 right out the window.
What do I need it for when I can have this?
VR v Schmar, I want this, exactly.
Yeah, yeah.
I mean, it does say something
about the enduring value of these games.
Yeah, you know what it tells you?
You code something really well once
and you make people love it and it sticks around.
It's part of the culture forever.
Yeah, it's almost open source by default.
Yeah, exactly.
This is Linux Unplugged, episode 194 for April 25th, 2017.
Welcome to Linux Unplugged, your weekly Linux talk show
that's celebrating International Penguin Day.
My name is Chris.
My name is Wes.
It really is legitimately.
Well, that's great.
I know, I'm very excited
because we got a great show to celebrate.
Yeah.
Tux's birthday.
It's officially Tux's birthday.
Happy birthday, Tux.
The mascot of Linux.
Yeah, coming up on this week's episode,
of the Unplugged program.
I'm not gonna say we're gonna talk about System D.
We're actually gonna talk about the total lack of System D.
Yeah, but that's totally different.
That is totally different
and it's coming up at the end of the show.
So if you have no interest,
you'll be able to tune out before we get there.
But first, the Linux Foundation has made
their largest announcement in the history of the Foundation.
Whoa.
I'm not sure if a lot of people are talking about it.
Yeah.
But I actually have some exclusive footage
that I've been sitting on for three weeks
I wasn't allowed to tell you about.
And I will play it for you today
now that Linux Foundation has made their announcement.
So that's coming up in the show.
Plus, of course, we're gonna go through some updates
on our favorite open source projects.
And it turns out, I know a lot of you love it.
I know it.
But I got some bad news.
Thunderbird is on the ropes and it's not coming from me.
It's coming from the developers of the project.
And it's really thanks to improvements coming to Firefox
that robbed Thunderbird.
So we'll be talking about what's all going on there
and why you should actually care,
even if you're not a Thunderbird user.
And trust me, there are some reasons.
Some drama going on with some Unity 8 ports.
We're gonna clarify some announcements
that were on the show last week.
And big changes coming to Debian.
But before we can get to any of that, Wes,
we gotta bring in that mobile room.
Heck yeah.
Time appropriate greetings, Virtual Lug.
Hello.
Hey.
Hello, hello.
Hello, you know, you guys,
I think if we practice a little bit after the show,
we could make a pretty good singing group.
Ooh. Sometimes they nail that.
A little acapella up in here.
That's what I was thinking, Wes.
That sounds great.
Yeah, just something we'll play with.
Just something we'll play with.
But that'll be after the show.
Let's start with some news.
Let's start with some updates.
And I wanted to follow up on something
that we started talking about last week.
And we were literally just talking about it
before I hit the go button on the show.
And there's a group of Linux users.
You might not be one of them, Wes.
I'm not one of them.
But there's definitely a group of Linux users now
that are looking for replacements to Unity.
They're coming from Unity,
and they're looking for maybe another
desktop environment to land on.
Is it GNOME with some extensions?
Is it Budgie?
Is it Plasma?
Is it XFCE?
Probably haven't looked in a while.
There's a lot of options now.
Yeah, and one of the things you might notice
when you're making the transition
is every now and then, things will look out of place.
They won't look quite right.
And it's nice if you can kind of smooth things out,
make everything look like it belongs on the same desktop.
And I don't know if it's just because
of Canonical's announcement,
but it seems like there's a lot of energy around GNOME.
I agree, yeah.
Themes.
And I wanna just follow up on this one,
which I thought was pretty great
because it makes Qt apps, or Qt apps,
feel at home on the GNOME desktop.
It's Edwadia Qt.
It's a theme that you can get
for the Plasma desktop applications.
And it will match the default GNOME theme.
Now, I'm not gonna sit here and assume
that you would run Edwadia like an animal.
I am assuming you're probably running Arc.
But if you're not, this could be very useful.
Actually, even if I was on Arc or ArcDark,
I would still like my Qt apps
to look as close to a GNOME app as possible.
Right, yeah.
This is better than what they natively look like.
Yeah, and a lot of folks do run Edwadia by default.
I think they're insane, but they do it.
Once you have it installed,
you set it as the theme for your Qt apps.
If you're on GNOME, you can run qt-config to do this.
Or you could start the Qt app specifically
on the command line with tax style space edwadia.
And then I actually. I'm not gonna do that.
No. I'm not gonna do that.
No, but if you had like one Qt application
and you wanna just add it to the desktop shortcut.
Make an alias so you have a desktop shortcut,
it would work well.
Can I stop calling him Qt now?
Can I just say Qt?
Can we, is that okay?
Can we, hey, a mumble room.
Is anybody gonna get offended?
Anybody in the mumble room gonna get triggered
if I just refer to this as Qt application instead of Qt?
Will everybody be okay?
If anybody's gonna get triggered, say something.
Go on once.
Oh, go on.
Monkey, you're gonna get triggered?
No.
Oh, dang.
I was excited there for a second.
What were you gonna say, monkey?
What were you gonna say then?
I was gonna say, I don't need my safe space.
I'm good.
Well, dang it.
All right, well, there goes all the fun for this show.
There goes all the clicks.
Anyways, you can find a link to this in the show notes.
I find this whole process to be really interesting.
I think in all of this,
I'm gonna end up switching back to GNOME myself.
I've had a few people tweet me and ask me.
I don't know why.
I don't know why people seem to care.
But yeah, I have been using Plasma
on about half my machines.
And I haven't switched over on a couple of systems.
And I think on the systems, I have switched to Plasma.
At least for a little while,
I'm gonna switch back to GNOME.
So gotta go full bore here.
Well, I feel like most of the community is in a large way.
I'm not trying to downplay Plasma or people that use it
or the Neon Projects work or anything like that
because I think those are all super relevant.
In fact, after the dust settles,
the Plasma desktop will probably be
more important than ever.
Yes, I think so.
You're right, but.
But right now, I wanna.
Be part of the zeitgeist.
Yeah, I just wanna,
I've been running Plasma desktop for a while.
One of the things I'm interested,
going from Plasma back to GNOME,
is if I'm gonna feel like it's slow as shit.
The whole thing about GNOME,
when I remember switching to Plasma,
was that Kaywin felt like everything was lubricated.
Butter smooth, I think you said.
Just, yeah, everything just flew around on my desktop.
Windows render, I could perceive how the Windows
just moved better.
And I've been doing some reading about that.
Is it mutter?
Because really, the GNOME Shell is like an extension
that runs on top of mutter.
GNOME Shell itself, in some ways,
is like an extension that runs on mutter.
And so is it mutter?
Is that the problem?
Is it JavaScript?
Is GNOME Shell just stuffed full of JavaScript?
And that's why it's so slow.
And that's not really a fair characterization either.
It's, there are some blocking things
that make performance not as great as it should be.
But I have to tell you,
and I don't know if you recall,
but last week when we had Aiki on the show,
I said, hey, tell me about these patches you did
that supposedly make mutter support
the NVIDIA proprietary driver.
Remember that?
And he's like, oh yeah,
that's just something Pharaonyx cares about.
I'm like, no, no, no, no, no, no.
I wanna know.
Well, so since that conversation with Aiki
in the last week's show,
I've been running Solus Gnome Edition
on that Dell 7720.
And it flies, man, it flies.
And it feels like everything's faster
and I don't understand why,
because it feels like even the menus in Chrome are faster.
Like when you click on the bookmarks bar
and you drill down and you click on a bookmark,
the way that shows up and fades away feels faster.
The way that the rest of the desktop performs
while five Chrome tabs are loading at once feels better.
The, there's, I think it's a combination.
I think the first part of the mix
is that Solus by default with their Gnome spin
is shipping the impatience extension.
Oh, right.
And the impatience extension shaves off animation times.
So I think there's a bit of that.
But I tell you what, Wes,
I'll have you use this Gnome machine before you leave.
It's out there.
I'll have you play around with Gnome
and just tell me if it's not the fastest damn desktop.
I'm excited, that sounds nice.
I, so I feel like gonna move back to Gnome,
gonna try it out again for a little while,
gonna live that lifestyle,
gonna maybe try experimenting
with some of these things people are doing.
Yeah, right.
It makes it a lot easier to like,
to be with, see what the community's doing,
play along with them,
even if you don't want to use that for the long term.
Monkeycom, you have a comment about switching to Gnome?
Well, our whole office is in the process
of upgrading to, from 16,
and they're talking about going to 17,
and now it's okay, well, what do you do?
Gnome or whatever.
Most of our group has gone from Unity to Gnome.
They were going, a couple of them have gone to KDE,
but they ended up with Gnome
because they had Java issues,
and they had Java issues in KDE,
and it may have just been-
Like Java apps not working properly?
Yeah, they have custom apps.
One of them was, oh, the Ruby management,
development environment that they use,
and it runs in Java,
and they were having problems in KDE
where it would just crash randomly,
and it doesn't do it under Gnome,
and the only difference is Gnome.
So it's not, you know, 1704 with KDE.
That just doesn't make any, it's gotta be,
it's gotta be like a,
that just doesn't make any sense to me.
It doesn't.
Why would a Java app be impacted
by the desktop environment?
I don't know.
I mean, it was why we switched from Unity to KDE.
We were just thinking it would be faster and smoother.
Well, you know, Monkey, I hear this
in different versions from a lot of people.
So since the news, Noah and I have been trying to talk to,
like, as many people as we can that are using Unity,
that are switching to Gnome,
or that went from Unity to Gnome,
and we're specifically trying to talk to people
that are using it in the workspace, just like Monkey is.
This is super awesome that we're having this conversation,
because one of the things that we've heard
over and over again in different iterations
is X, Y, Z didn't work under X desktop environment,
so we moved to a different one,
and it's sometimes something didn't work under Gnome,
so they used Unity, and it's, I don't know,
I don't know what, so what it comes,
what I think it must be is something with graphics drivers,
either with the compositor,
and if you're using proprietary versus free.
Do you know, Monkey, if that could be a factor
on any of these systems?
Maybe it was like Compiz versus Mudder.
I mean, could it be something dumb like that?
It could be a thousand things.
It's, you know, when you're installing a bunch of programs,
one of them was a database development program,
and it was a commercial application
that they had running in Unity just fine,
and then when we installed it on KDE, it didn't run.
We were running Neon, so it was 16.04,
but when we went to 17.04 Gnome,
it just ran fine, we had no issues,
so there might have been a distro issue on that one,
but it, you know, it's, you talk to the vendor
who's selling the application, and they're saying,
well, we did all our development under Unity,
and we are in the process of revamping for other distros.
Hmm, wow.
Hmm, well, the beard hooks us up
with something that's perfect for me.
It's exactly what I was just talking about,
the theme for Qt applications
to make them look like Gnome apps.
Well, instead of using Adwadi, if you do use Arc,
the beard's linked us up,
a Arc theme for Qt applications,
so I'm gonna grab this right now.
Yeah, you should, yeah, just grab it.
I'm gonna bookmark this, it'll be in the show notes,
if you run Arc or Arc Dark,
and want to be able to run a few Qt applications.
I'll give you an example, Quasal Core.
There's nothing like Quasal and Quasal Core on Gnome.
I'm using it right here, right now.
And are you on a GTK desktop, otherwise?
Yeah.
Exactly what you're doing.
Yeah, at the end of the day,
even if you've replaced everything with a GTK app,
eventually you're gonna want good IRC,
and when you do, you're gonna wind up at Quasal.
Exactly.
Hmm, this looks really good, thank you, beard.
That is a good one.
He's never so helpful.
You know, that beard, he has got the Google food down,
that is for sure.
Maybe he uses something else,
he's just not telling us about it.
Maybe he's using DuckDuckGo.
While the peeps are using Google.
Yeah, right, that guy.
He's clever.
So Debian is making a big change,
and it feels like a passing of an era.
They're shutting down their public FTP servers.
Goodbye.
I don't buy any of this.
I think this is really a shame,
and oh, I know FTP's old, hmm.
If you're one of the few people, LWN writes,
that's still using FTP to access Debian repositories,
well, the time has come to move on.
They're gonna shut it down in November.
It's driven by the following considerations.
FTP servers have no support for caching or acceleration.
All right, fair enough.
Okay, okay, you got me there, okay.
Most software implementations have stagnated
and are awkward to use and configure.
I find that to be weak.
Stagnate, yeah, they've stagnated because FTP's finished,
and awkward to use, that's totally an opinion.
That's absolutely an opinion.
Okay, the next reason.
Usage of FTP servers is pretty low,
and our own installer has not offered FTP
as a way to access the mirrors for over 10 years.
Whoa, okay, all right, got me there.
The protocol is inefficient
and requires adding awkward kludges to firewalls
and load balancing daemons.
That feels like an argument from 10 years ago
when it was hard, is this FTP or is it FTP passive?
I gotta configure my, like that's a problem
that all firewall administrators literally figured out
15 years ago.
But maybe that knowledge is gone, right,
like these guys didn't do that?
No, it's built in now, it's baked in now.
I find all of this, to me, to my personal preference,
I really find FTP to still be one of the fastest ways
to pull down files.
So you use it day to day?
I can't think of the last time I used it.
SFTP sometimes, but regular old FTP is tough.
I don't use it daily, I don't use it,
the shit is fast and great,
and if I'm just pulling down stuff that's GPL code anyways,
it's not like I care about privacy,
it's all open source code,
it's not like I'm moving around in the Nuke codes
or something.
And here's the other thing that's gonna be,
you wanna talk about awkward,
they used awkward twice in this reasoning,
here's some awkward, they're gonna remap ftp.debian.org
to go to the HTTP mirrors, that's awkward.
Yeah, that is a little awkward.
You go to ftp.debian.org and you end up on an HTTP site,
that is a definition of awkward, my friends.
That is awkward in kludge.
I don't know why this hurts me.
This cuts me deep.
I'm a little surprised, honestly.
I know, I can tell.
I guess like, I feel like it's just, it's not.
It doesn't matter at the end of the day,
but it feels like the passing of a, it feels like.
I agree with you there, I do.
Part of what it is, is it feels like we're shitting
on a perfectly good technology.
I'm not claiming that we should all be updating
our websites or pushing our applications
or moving around databases with FTP.
But if you're downloading something like a package
or a source file or an ISO that is GPL'd,
there is literally no security consideration here.
You're not logging in with an authenticated account.
You're just pulling down open source material.
It happens to be one of the fastest, most efficient means
to file transfer protocol.
Well, you say that, but it's not like,
like they said, like there's no.
Hypertext, that's what ACTP stands for.
It's for hypertext, Wes, not file transfer.
But since then, we've invented CDNs,
all kinds of methods to make this sort of thing
much more efficient for the provider.
Especially if you're a beleaguered Debian admin
where like, all right, this is another daemon to configure.
There's not very many users.
No one serious really uses it or has to use it.
I don't know, Wes.
To me, it feels like.
I don't even know if I have like, I mean,
do I have FTP here?
It feels like you kids today with your system Ds
and your containers and your Kubernetes
and your microservices all wanna shut down
good old simple FTP.
I'm not trying to say we should all go
to the Church of Telnet here.
I'm not trying to advocate that we should all be sending
our usernames and passwords over clear text
across the internet.
I am simply saying that when you have a simple, clean,
efficient file transfer protocol
and you need to transfer files, it kinda makes sense.
Like, it kinda works.
Especially for the Debian project, right?
It's not like we're talking about Solus here.
We're not talking about elementary OS.
We're talking about Debian, okay?
But it's fine, Wes.
It's fine.
Mookie, what do you think?
FTP is old and works and that's all that matters.
Okay, all right.
Thank you.
It's like we're gonna talk about Thunderbird
here in a little bit.
And what everybody always says is,
Chris, you're an asshole.
Thunderbird is finished.
We don't need to be working on it anymore.
Nobody's doing anything with email.
It's fine.
And everybody's like totally cool with Thunderbird
being this thing that isn't revolutionary
every couple of years.
But FTP, well, God forbid.
Well, there's a big difference though
because that's open source client-side software.
It doesn't require anyone to maintain a server
or perform security patching.
That's true, that's true.
I would not, as an admin,
I would not run FTP if I didn't have to.
I agree.
I actually agree on my own service.
Right, right, yeah.
I use SFTP.
And like you said, you wouldn't expect Solace
to have an FTP archive for you, would you?
I just use SCP, to be honest with you.
Yeah, right, totally.
But that Debian project, Wes.
I do, it is the end of an era.
You are right about that.
Yeah, yeah.
You know what the reality is too, when it comes to-
You should go download something before they shut it off.
Yeah, just to celebrate.
What really probably killed off FTP though
is corporate firewalls.
Because they all support,
corporate firewalls don't care what you're doing
when you're going to 80 or 443.
Have that at Haas, enjoy yourself.
Oh, you wanna establish an SSH connection or FTP?
Oh no, you might be hacking.
So, I think it's really corporate firewalls.
I don't think so.
I mean, we use SFTP.
I mean, I know it's SSH,
but we use SFTP in the banking industry like crazy.
That is the protocol.
And when you start getting into stuff
like just the file transfers between financial institutions,
they still use SFTP because it works.
You're just dropping a file into a directory
for someone else to go read later.
And there's nothing really better than SFTP is fine,
but you really can't beat that,
especially when you're doing shared search
and stuff like that.
Wes is over there doing a passive FTP session right now.
I just got downloaded the read me from that archive.
You went to ftp.devian.org?
I sure did.
Good man, good man.
Pull that down while you can.
Now I have a piece of history.
You have until November 1st, 2017,
and then they'll shut it down and redirect you to HTTP.
What we have to do, see, we can't do it
because it's the observer effect.
Now that I'm gonna say this, it won't happen.
But in the future, you could all play a game at home
when we do something, when we cover a story like this.
So when Chris talks about FTP or something like that,
you could play a game at home
to see how many people go to the comments
to tell me about R-Sync or SCP.
Even though we kinda gave them quick mention on the show,
you'll be amazed at how many people listening
think Chris has never heard of these things.
Somehow, dude manages to do a Linux show for 11 years
but doesn't know about R-Sync or SCP.
And so it's such a fun game to play at home.
You can tell I love it.
You should play it too.
But now that I've mentioned it, it's the observer effect.
It will have 90% less.
I bet you we'll still get a couple.
Maybe two that are ironic and three that are serious.
Be careful if you drink while you play this game.
You have to set a reasonably low limit
or you will hurt yourself.
Yeah, that's like when you were playing drinking games
during the election.
You will get wrecked. Yes, exactly.
Let's talk about another way to get improved.
Let's talk about Linux Academy.
Now this is why I'm a big fan of Linux Academy.
It's on my terms.
I did schooling when I was in IT.
I mostly through community college like programs.
Do you have any, does your work give you a budget?
We do have a training budget.
That's nice.
Do you go to like classes?
We've had some, I've had some people come in
and then I think, you don't even get to three
like your individual managers but you can request training.
Yeah, this is, man, if I work somewhere,
this JB, you know, they don't have the perks.
But if I work somewhere that gave me a training budget.
Some baddies.
Yeah, exactly.
Just a little.
This would be such a great way to use it
because then it's on my terms.
Linuxacademy.com slash unplugged.
It's a platform to learn about Linux.
You go there, you support the show,
Linuxacademy.com slash unplugged
and you can sign up for a free seven day trial.
Now you'll learn about the core of Linux
and everything you really need to know to manage
and set up and really be a great Linux administrator
or DevOps or sysadmin.
That's nice and that's fancy
and I pretty much use it exclusively now
for a couple of years just to do that kind of stuff.
I have dabbled a little bit in like Ruby and Python.
They have some great courseware.
Nice.
A little bit.
But I gotta tell you, if I was in the industry today
and I felt like OpenStack was over my head
or I keep hearing all these big data concepts tossed around
or containers fell out of my reach
or I didn't understand what made AWS so competitive
or why Microsoft is killing it with Azure,
even if I didn't have to work in that field just yet,
I would totally dive into these courses.
So we use Chef where I work.
We had some Chef training, intermediate level.
Linux Academy was an awesome resource
for everyone who hadn't done Chef before
to get up to speed on the basics.
Everything that Linux Academy covered
was exactly what the best practices in the industry.
They just, it's up to date.
It's focused on the real tools that people use.
Yeah, I think it makes a difference
because they have, not only do they have
a lot of passion for this stuff,
but they've really doubled down
on bringing in-house staff in
that's constantly making this stuff relevant,
keeping on top of this.
They're going to the events.
They're staying abreast in the industry.
And they think the other big differentiator for them
is if you get stuck,
they have real human mentorship available,
like actual instructors that know the courseware,
know the stuff in and out, and they can help you.
You can master Linux at linuxacademy.com slash unplugged.
And a big thank you to Linux Academy
for sponsoring the Unplugged program.
Last week on the program,
we tried to make sense of the big Docker announcement
because DockerCon was going on.
And I thought we did a pretty good job
of cutting through the BS.
We weren't the only ones.
It was a lot of BS to cut through though.
I felt a little validated that you found
a few other conference discussions online
where people were incensed by the amount of BS
coming out of Docker.
And now we have a little bit better understanding
of what the hell's going on and why you should care.
So it appears, kinda sorta,
that Docker became Moby last week.
It was like a rebranding thing
that has just sparked a shit ton of confusion.
So at DockerCon in Austin,
apparently I leave Austin and then they
decide to have DockerCon. They just both talk.
On last Tuesday, which was the day
we were recording the show,
Docker announced the Moby project.
It's a new name for the open source software
from which the commercial versions of Docker are derived.
And it serves as like a starting point
to create customized container software
for specific purpose-built infrastructures.
It's essentially what we said last week.
Turns out though, we were probably
one of the only news outlets that got it right.
Because, and it's not other folks' fault,
they got really confusing.
There was a series of issues
that totally muddled the message.
First of all, you had Docker's extremely thick,
complicated PR announcement.
Then there were some vague mentions
on some poll requests that sort of
led people to misunderstand.
So there was some terminology
in one of the recent poll requests
where it just said, Project Moby
is the new upstream for the Docker project.
And people are like, what, what, what?
What is this, what?
And then people went to go check what was going on
and GitHub connectivity problems
totally messed up this announcement.
The message had disappeared.
Docker had to get in the hold of GitHub's support staff
to try to get this stuff restored
while people are trying to figure it out.
Then the problem was compounded
during another poll request
where the CTO of Docker said,
Docker is transitioning all of its open-source
collaborations to the Moby project going forward,
which people didn't have any idea what that meant.
Yeah, so then they go to the PR announcement
and they can't make sense of it at all.
There really was, like last week,
there was no straight-laced, easy-to-read description at all.
Yeah, yeah, so we have this other announcement
that kind of actually makes more sense.
They should have led with Linux kit.
Now, it sounds like something for iOS,
but Linux kit includes the tooling
to allow building custom Linux subsystems
that only include exactly the components
that the runtime requires.
So you got an application,
maybe it's a web app with a database,
it will only include the components necessary
to boot that container up and get those applications started.
All system services are containers that can be replaced.
Everything that is not required
can just be removed from the system.
All components can be substituted
with ones that match specific needs,
so different runtimes, different containers,
different DNS servers.
It's a kit very much in the Docker philosophy
of batteries are included, but all are swappable,
and Docker announced it an open-sourced Linux kit,
which is up on GitHub.
And if my understanding of it is correctly,
it's like an Alpine Linux shim
that goes on top of Mac OS or Windows
that gives them the basic elements they need
in the user land space to fire up a container.
It's not a Ubuntu Linux, it's not a Red Hat Linux,
it's Alpine Linux,
which is like this hyper-focused container Linux.
Am I tracking this so far?
Well, yeah, it's a way to build these very minimal,
customized Linux.
I mean, you could call it a distribution, but it's not.
It's really this image that's meant
to just have the bare bones necessary
so that on top of it, you could just run a bunch of containers.
It kind of seems like a lower-level
container OS kind of thing.
Right, that can run on top of a host OS,
but it's not a VM because you're not virtualizing
the disk controller and the ethernet
and all of the hardware stack.
The kernel of the host OS is facilitating
the actual processes.
So the processes are using the same type
of containerization they use on Linux.
So you could be running on a Mac,
but it's not necessarily virtualization,
which is very confusing to me,
but it's all made possible with this Linux kit,
which Docker is billing as a lean, portable Linux subsystem
for all OSes, basically.
And how far does this go?
Could a group like the FreeBSD Project
come and make it their new Linux subsystem?
That's a good question.
Is this now basically, is Linux going to become
like the bash for Mac OS 10,
like getting a bash on Windows?
Is this, I know OS 10 already has bash,
but is this going to be a way for people
to just have a Linux environment running on their Mac now?
Where does the line stop?
When do we stop taking from Linux
and let Linux just have something for God's sakes?
Now the user land and containers,
and the only thing we have left is the curve.
Well, they don't seem to want to take our desktops.
They don't want those.
Damn it, Wes.
That just made me feel worse.
I did note here at the bottom,
they talked about how Linux kit provides a space
to incubate security projects that show promise
for improving Linux security.
So like WireGuard, I don't know what Landlock is,
but Mirage and O-kernel.
Damn, you know, I also got the, I got a smell,
I got a Microsoft smell coming off this.
There's nothing in this.
I mean, they do reference,
they do reference Windows 10 customers
will get access to Linux containers
and we will be working together
on how to integrate Linux kit with Hyper-V isolation.
So there is some reference to Microsoft technologies,
but it doesn't, when I read this,
yeah, that's Redmond.
Yeah, I know what Redmond smells like.
That smells like Redmond.
And I don't quite know what it is.
I think when I was on Twitter,
I noticed some Microsoft employees that I follow
were promoting this.
And I think some of this was done in partnership
with Microsoft to get this on Windows
and the work they did to make this work for Windows
is basically opened up for other BSD, Mac OS,
other platforms as well.
So Linux kit, they say, is a container native.
They just can't help themselves.
They still got to talk like a bunch of monsters in here.
I don't know what it is, but it just gets me crazy.
Yeah, Linux kit.
They do, I mean, they talk about security
like a thousand times in that little article.
So I hope it means that they are focusing on that
and helping to advance,
like they mentioned the kernel self-protection project
and other things.
And I think we need that, right?
Like, especially with all the hype around containers,
whatever that means on Linux and all that thing.
I think a big name like Docker taking it seriously
or at least looking like it is a good sign.
I wanted to talk more about it,
but I sense that there is just a,
I don't give a shit aspect in the audience.
Like people, as soon as you start talking about Docker
and containers, I feel like there's a portion of the audience
that just doesn't care.
And I don't know how to grapple with the fact
that at the same time,
this could be one of the biggest things that's happening
in the Linux space in the last few years.
Like I don't know how to connect those dots.
It's also one of the ways where it's like,
it is kind of far away from this show, right?
Like especially the desktop focus,
but this is like one of the main things
that's selling Linux to the enterprise
or the modern enterprise.
Yeah, we talked about it on Monday's Code to Radio,
but basically Michael Dominic is refocusing in a large way
his entire company on delivering Docker solutions,
not even like container solutions, but Docker solutions.
And I just, yeah, I feel like I have a hard time
figuring out a way to make it connect with the audience
because there's only so many reasons they should care.
At the same time, like if you follow Linux,
this is a huge thing that's happening.
And at the same time, there's this undertone,
what's really happening here,
and it's something we've talked about before,
is Linux is the runtime.
They're delivering software in containers,
but what is the software actually running on top of?
It's Linux.
Well, now with this Linux kit move,
it's like a hybrid Linux
because it's no longer the Linux kernel.
It's Linux user land and some aspects of the kernel
and a host kernel, something's happening here.
And in some ways, it doesn't all feel good,
but it definitely feels like inevitable progress.
Yes, I mean, I think that that is one of the thing
about the Docker stuff,
their strong cooperation with Windows,
it really is focused on cloud, cloud workflows,
whatever that means, right?
But that's the marketing,
that's what they're trying to talk about.
And the Linux part is really an implementation detail.
Jeez, that's so true.
Which is both like good and useful and maybe, right?
And it does advance Linux,
it brings people to Linux Foundation
to see a lot of benefit from that, I think,
but it's also like, do we lose sight of the core thing?
Does that make it easier for Linux to then be replaced
as a component of that ecosystem?
I don't know.
Yeah, something that we've been kicking around here,
like if you can take Docker containers
and you can run them on macOS,
if you have Bash on Windows,
you go to a tech conference like DockerCon,
they're all MacBooks.
You just go search for hashtag DockerCon on Twitter
and then sort by images, it's all MacBooks.
It's on, DrupalCon's going on this week.
I'm doing the same exercise.
I'm working on a project
and so I'm following all these conferences
and no one I notice when we go to these things.
And I gotta tell you, it's all MacBooks.
So you got MacBooks with Bash terminals
and Docker containers.
You got Windows machines with Ubuntu in a terminal
and the ability to run Docker containers.
It feels like Linux has been recently gaining a lot of ground
for the DevOps web developer type role.
I mean, look at Project Sputnik
and the year over year 100% growth
they're having there selling to developers.
But why the hell does a developer need to use Linux
if the Bash shell and containers
are on their favorite OS that they're used to
and they've been using for years?
Where's the motivation to switch?
Where's the platform advantage?
Am I overthinking?
It seems like just as we're finally gaining a foothold
with a certain type of user,
all of the things that are driving users to that
are beginning to vanish in front of us.
Yes, it means that the server world
of Linux and the desktop world
are even farther apart than they have been in the past.
There's no reason to use Linux on the desktop really anymore
unless you want to.
Which is fine.
Right, and maybe it's good.
But I was sure enjoying the competitive advantage we had
where there was like, you couldn't reproduce production
unless you also ran it on your laptop or desktop.
And now with containers, now with Bash on Linux
or Bash on Windows.
And I feel like there's at least a small subset of users
that have misconceptions
or those people that tried it 10 years ago
when it was really rough or other things
that before they had that incentive to give it a try
and maybe they would find something they like
but now they can just be like,
well, then I'll just keep using my MacBook.
Why did I change?
Right.
Or Windows.
Or Windows, yeah.
I mean, Windows has become a much better option.
Right, I got the Linux subsystem.
I can run Bash if I need to.
I can SSH into a VPS when that doesn't work.
Oh, oh, and now with, oh, I just, all right.
Well, it's not gonna be Thunderbird
that's moving them over to Linux
but let's talk about Thunderbird here for a second
because it's a topic that's come up on this show before
that I was met with a surprising amount of interest.
And there is a proposal to start a new implementation
of Thunderbird based on web technologies.
Now, does that mean Electron?
What do you mean when you say web technologies?
What does that mean?
Yeah, I don't know.
Because isn't Thunderbird already based,
isn't Thunderbird based on web technologies
by the very fact that it's like a Zool app
that runs on top of the Gecko engine?
I mean, isn't that kind of?
But those are old web technologies.
We don't talk about those anymore.
Oh, okay, I see, I see, okay.
New web technologies like Electron and WebKit, right?
No, so here's the point they make
and how are you gonna ignore this.
Their base is going away.
What Thunderbird is based on is going away.
This is reality.
Gecko is gonna change dramatically in the future.
It already is.
They're dropping features that Firefox does not need anymore
but Thunderbird clearly relies on.
Plus, the Thunderbird code base is now 20 years old.
JavaScript and HTML5 have evolved dramatically
since they created this application.
They think a rewrite in JavaScript makes sense now.
He, in this article, points out that,
look, this is a Zool app
and Firefox is discontinuing Zool extensions.
They're killing off small projects this way.
I mean, it's just the reality.
It's a cut that goes to the base of Firefox
and they did that because these extensions
are sort of holding back internal architecture improvements
that they've been trying to make.
And also, the Thunderbird base is based entirely
on the XPCOM, the back end communication module,
XPCOM, whatever it's called,
and Zool for the user interface.
So if you take away XPCOM and you take away Zool,
which Firefox is doing,
you've effectively taken away Thunderbird
and they're gonna have to rewrite anyways.
This is a huge problem.
This is a huge problem
for a project that's already struggling
and understaffed or funded or whatever.
Yeah, that was basically put on the shelf
in maintenance mode.
And this week too, I don't know if it's related,
but there's been some folks posting mock-ups
of what a new Thunderbird could look like.
It's not bad.
It looks like a web browser a bit to me.
It does, yeah, very much so.
That's a crew, oh no, that's, yeah.
Yeah, that would be their Thunderbird,
this would be their Thunderbird redesign right here.
It's kind of nice.
Could be worse.
I've moved on in myself,
so I have a hard time connecting with this story.
I found Thunderbird to be really, really my go-to
for many, many, many, many, many years.
Especially with Enigma, like it was so hard
to get away from Thunderbird and Enigma combo,
which is a great, easy, simple way
to do GPG encryption in your email client.
Just gorgeous, beautiful, love it.
It's the greatest encryption I hear from the people.
It's the best.
I can't, I can't, I can't.
I'm not a very good Trump impressionist.
I can't work on my Trump impression.
For a new Linux user.
I've moved on.
What would you recommend?
If they want, they don't want web-based email,
they want a client.
I don't know, I don't know, I don't know.
For me, it's N1,
but I can't recommend the latest to everybody
because there's other issues people have with it.
Kmail is still just as quirky as Kmail ever was.
And, I mean, I just don't, I don't know.
Geary was my go-to, but Geary kind of faded,
and now it's merged with elementary OS.
Claws gets mentioned a lot.
Claws does, yeah.
Yep, Claws does.
I don't have a ton of Claws experience.
True.
What about you?
What's your answer to this?
I don't, you know,
I just end up using web mail most of the time.
What if somebody comes to you and says,
Wes, I'm moving to Linux, and I just.
I would probably say, try Nihilus.
Really?
Yeah.
I mean, it depends on the person.
If they were, you know, more computer savvy, maybe not.
Maybe I would, I would maybe say Kmail or Claws
or something like that, but.
Yeah, and Elias has the advantage
of being very easy to use,
and it has features that people expect,
like the ability to snooze emails
and follow up and.
And the interface is pretty nice and responsive
and rich in a way that people coming
from other platforms might like.
I don't know how I feel about having to say that,
but that's probably what I'd say.
So maybe it is time for a Thunderbird reboot.
Yeah.
At least in our world.
Because I mean, I do think it's important that we have,
I mean, I don't know how important we can debate that,
but it would be nice to have a good,
open source, free software email client
that people can come to and use,
and that is well supported and modern and good.
A lot of love for Claws in the chat room right now.
Look at this.
Yeah.
I know it's producer Michael's favorite too, I think.
So a lot of love for Claws.
Look at the beard trolling us with his wood dust bail.
Oh my gosh.
Can't even with you right now.
Get out of the air.
I do use Evolution sometimes.
I have on occasion.
The nice thing about Ev,
the nice thing about that is the,
it's still sort of baked in a gnome in some sense.
Like when you use some of the online account stuff.
One of the things that the internet
was saying a lot about Thunderbird
is it needs to have native exchange support,
which I guess is still a big thing.
Yeah, yeah, yeah.
That probably would add a lot.
You can do it with a plugin, but.
Yeah.
I got a problem.
I gotta, we gotta move on.
We got a problem.
We gotta do a little,
you know, we should do the Linux Unplugged
consultancy agency for some.
Oh, I like that idea.
Yeah, for some of these open source projects,
because the folks behind the Unity 8 port
could use a little consultancy.
I'm not gonna give another stupid shit
going on in their community right now,
but there's a lot of dumb drama.
And it all centers around one core problem.
And I'm gonna tell you what it is here in just a minute.
But so, for those of you that don't know,
there is some rash, brave souls out there
that have been fighting the good fight
when it comes to Ubuntu on the phone for years now.
Yeah.
Making it available to devices
that Canonical didn't officially support.
And that group decided, let's take on the Unity 8 desktop.
We will continue it, which, brilliant.
You know, in an open source, when a door closes,
a window opens.
I think that's the saying.
When you take a leak and flush it, right, that's the saying?
That is a brilliant philosophy,
one that brought us the Nautilus file manager today.
The great files file manager
that has been of much controversy in GNOME
actually was called Nautilus,
and it was created by a company called Easel
that was trying to do this crazy thing.
Get ready for this, Wes.
Server-side storage and integration with the file manager.
That's crazy.
Yeah, they didn't call it cloud back then.
That's, you have to say cloud.
Right.
We didn't learn that yet, though.
No, it was just an online storage service.
Yeah.
See, that sounds expensive.
And they were gonna integrate it
into their Easel file manager called Nautilus,
and that's how they're gonna make money.
And they were gonna make great tools
to manage Linux desktop along with this file manager.
Eventually, they had this customized desktop,
the Easel desktop, that was like this respin of GNOME
that was like the best implementation of GNOME you could find.
You could even get it with a special software manager.
It was the bee's knees, as the kids say.
And nobody was interested in storing their files online.
That is crazy, people said.
I'm not just gonna hand my personal information
over to some company and have them store it on their server.
Then would I have to download it if I wanted to get it?
How's that gonna work?
That's ridiculous.
So, Easel eventually went out of business.
But they had, by the day's standards,
created one of the best file managers for Linux.
Turns out it was open source,
and so the community picked it up.
And from the ashes of Easel,
we have files that we still use on the GNOME desktop today.
It's also used on Unity.
It's been around.
So, in that same spirit,
the folks that wanted to continue on Unity 8,
yeah, the commercial company behind it
may be turning to a different direction,
but we can continue Unity 8.
Seems bold, seems brave,
seems like in the spirit of open source.
They made a problem, though.
They made a real 2017 mistake.
And it is hollowing the project out from the inside.
It's gonna burn out the developers.
It's souring the community.
It's poisoning the well.
And it's gonna stunt the project
before they've even shipped some code.
And the problem is,
they've focused their community around Reddit.
They thought they could start an initiative like this
with a subreddit.
So, you can go to reddit.com slash r slash unit Y-U-N-I-T
and you can watch the train wreck for yourself.
They can't even get a logo or a catchphrase together
without all of the alpha geeks living on Reddit,
shitting all over each other,
and creating a massive invite.
It is one of the best displays
of how humans cannot work together out there right now.
This is a rough threat.
And I gotta tell you,
if you have an open source project
that you actually wanna build a community around,
you have to build some of the infrastructure yourself.
Go do it on Mastodon.
Go do it on a forum.
Do it on a mailing list.
Do it in an IRC room.
But for God's sakes, do not do it on Reddit.
It will poison your project from the beginning.
And unfortunately, we're watching this
de-evolution of humanity right here for public display.
It's really unfortunate.
And I think it's a lesson
that so many open source projects could take away.
Do not base the center spoke of your community
around Reddit.
Because it's a place where people wanna go
that have an opinion,
and they think that they've gotta be
the smartest guy in the room.
And they've figured it out,
and they're gonna tell you about it.
And it is, it's shocking to watch this.
And you have people saying,
don't bother replying here.
I won't be reading this.
You have all kinds of typical
man-child type behavior that happens.
I don't see, I just,
I don't see how this is gonna go anywhere.
This is so unfortunate,
because it's a project that's gonna have
minimal community interest to begin with.
Because let's be honest,
it was never a massively popular project.
We probably wouldn't be here today if it was,
in this position we're in now.
And to focus it around this,
it's just such a shame.
Because I would love to have seen
what a modern QT desktop could look like.
Maybe they'll still pull it out.
But it's a little lesson we can all take away.
Because the core problem,
the thing that always made me leave hope,
a little bit of hope for Ubuntu Mobile was,
we've gotta do something about Android.
I don't care if everybody does something about Android,
but I would love to use it.
I would like an option.
I still would like an option.
That has not changed.
And I would love, even if it's a community.
We're just a little more sad in the press.
So a community project
that gives us a legitimate,
legitimate type image we could download one day,
and flash to your Nexus slash Pixel devices,
is absolutely something that interests me.
So I hope that these early growing pains get worked out.
Because my hopes are that one day,
they can save us from the Android.
Save us all from the Androids taking over our humanity.
Exactly.
Spying on us.
Dun, dun, dun.
All right, you know, let's talk about mobile.
Let's talk about something you can do right now.
That might all be out in the future,
but there's something, there's action,
there's something you can do.
You can switch to Ting.
This is such a great story, I'll tell you in just a second.
But start by going to linux.ting.com.
You go there, this is the landing page to support the show,
and get $25 off a device.
Or if you bring a compatible device, check their BYOD page.
They'll give you $25 in service credit.
You might have a device that already works,
because it turns out cell phones have been around
for a little while, and they've got a CDMA network,
and a GSM network, so there's probably something
in there that'll work for you.
You get $25 in service credit then.
Now Ting is pay for what you use mobile.
Minutes, messages, and megabytes.
You just pay for that.
It's $6 for the line.
Now here's the story.
So Noah's out here visiting the studio.
But he has a client that's like, no, I know you're busy,
but I just really need to get my phone situation figured out.
Can you please tell me which phone plan I should get?
And she links him all the different options.
And Noah's like, just look at all these different options.
It's like 40 bucks a month for this line,
$65 a month for this line, all these different things.
And he goes, just go to linux.ting.com.
And she goes to linux.ting.com, and she says,
well, this can't be right.
She writes him back.
She's like, how can, I just did the savings calculator,
and for my phone it's gonna be $12 a month.
How can this be right?
This can't be right.
And Noah's like, yes, that is exactly right.
It's that simple.
She said, it's so simple, this can't be right.
It can't be right.
That's the funny thing.
It's the rest of the industry that's wrong.
That's the funny thing.
They've all got it wrong,
and we've just all gone along with it.
We've just all, well, it's like the boiling pot, isn't it?
We've just, we grew up in an environment, I started,
I started with my folks having these huge phones,
and I had a pager, and I thought that was cool.
And I would have taken any plan they gave me.
And then when these phones started coming out,
for all, VoiceStream, I got on VoiceStream,
I got all these different plans, tried all these different,
anything they would give me, I would take it.
Anything I would take,
because it was such an incredible new technology.
But now, here we are in 2017, looking back at it,
we got snow jobbed.
Why am I paying for minutes and messages and megabytes
I never even use?
That's crazy.
Why am I getting in these agreements?
Don't call it a contract, it's an agreement.
This is insanity.
You can make a difference by voting with your wallet.
Linux.ting.com, you go there, you sign up, oh!
No contract, nor the termination fee,
and if you're a business with like 11 to 20 employees,
there is like a 99.999999% chance you're gonna save money.
It's so awesome.
And they got a great blog too, you can check it out.
Just start by going to linux.ting.com,
and a big thank you to Ting for sponsoring
the Linux Unplugged program, linux.ting.
So here's something that's relevant.
What do you have here?
Hello, it says, hello, what is this?
Take a look.
That is my pixel replacement, the first one died.
Oh, really?
Yeah, so I've been forced to use.
I noticed.
I know, I was like, why is he on his Nexus 5 again?
So you got the new phone today?
I got it yesterday, I didn't have time last night
to set it up, I know, right?
So I was like, wow.
So it comes in a, here, do I have a, yeah.
So it comes in a hello box, look at that.
Pretty cute.
Yeah, and it's still all wrapped up too with, whoo!
No!
No!
Not the best packaging, I think, is what we learned.
I should have planned that as a bit.
I just dropped it.
I just dropped it on the wood floor in the studio here.
All right, all right, here we go.
Wes, it's got this big crack across it.
I'm kidding, it's totally fine.
This is a nice-feeling phone.
It is a nice-feeling phone.
And this is really nice.
So can you, did you just take the SIM out of your old one,
put it in that, and now you can move it into this,
or did you have to do something fancier?
No, I had a prepaid plan on my old phone,
so I just activated a month of that,
and then I'll go back to.
So you'll just be able to, yeah,
that's so you don't even have to worry about it.
That is nice, smooth move, Wes.
Well, does it not come with a charger?
No, so you keep your original charger and everything,
and then you just send back the phone.
Oh, I see.
A little package.
So that's a specific replacement box.
So I went through Google, talked to them,
they got me a replacement and everything, so that's good.
I'm happy about it, and I'm very happy
to have a regular 27, you know, like a modern phone again.
Does it feel like a huge downgrade?
Oh, yes, oh, terribly, yes.
I didn't, I mean, I knew I liked the phone,
like it's been a really nice phone,
but I really missed it when it was gone.
Now you've, now you realize like, wow,
I probably use this Nexus 5 longer than I needed to.
Yes, exactly.
The camera alone.
Oh, I know.
Wow, all right, well, so there's this huge announcement
by the Linux Foundation.
I wonder if anybody in the Mumble Room even saw it
or could even explain it to me.
Did anybody in the Mumble Room see this announcement
by the Linux Foundation this week
of the launch of Edge X Foundry?
Anybody see this?
Sorry, I haven't.
Yeah.
I missed it as well.
I find this to be interesting,
and I think it's because we all have IOT fatigue.
That's a great phrase.
I'm gonna run with that, IOT fatigue.
I've heard now, I think it's one of the phrases
that's taken off is the Internet of Shit,
which feels a little clunky.
Like, I wish we could do something with the T,
you know, to keep the IOT acronym,
like the Internet of Terrible might be better
because you're keeping the T, but anyways.
Otherwise it's iOS, that's overloaded enough.
It's true.
I don't know why this isn't,
so I suspect, actually, I do know why.
I suspect this is why this is not making
a big splash in our crowd,
is because we all glaze over when we hear this.
And what this is, this Edge X Foundry,
is actually something that is going to,
it's going to shift IOT into a direction
that I think everyone listening to this show would like.
It basically takes it out of the cloud
and it puts it in your LAN.
Yeah, it's actually-
I'm scared, Chris.
Are you scared?
Buckle up, Wes.
See, I don't like IOT,
and if it's on other people's computers in the cloud,
then I feel safer.
So I have a little insider story here.
I'll give you a little background before we start.
While we were at Dell in Austin, Texas recently,
there was a lab they took us into.
And actually, just walking by, you'd have no idea.
It's called the CTO Lab.
It's called like the CTO Lab or something like that.
You'd have no idea what it is.
And in this lab,
they're using these purpose-built hardware devices.
They're like, they're x86 rigs,
but they look like tiny arm systems
where they have like the thin cooling on the sides
and they have antennas coming off them
and they're ruggedized x86 computers.
And the ones I was looking at was running Ubuntu core.
So they're testing a lot of this stuff with Ubuntu.
And the whole idea is IoT is fun.
And this is literally, I don't know if I'm,
this is literally what Dell told me.
IoT for the home looks fun,
but let's be honest, they say, Amazon's won that.
Like Amazon with the Echo has just,
dude, you're not gonna,
like Dell's not gonna come out
with an Echo competitor, right?
I'm like, yeah, you're right.
How refreshing is it that finally some company
just go acknowledges, yeah, there's a market leader there
and we're probably not gonna unseat them.
But you know what Dell said is like,
there's really nothing like this for the enterprise.
And the enterprise-
And that's their game.
Yeah, and it has, and the enterprise
has a much bigger problem to solve.
And if you think about it, like in manufacturing,
either be like food manufacturing
or even car manufacturing,
there's so much equipment that's kicking off
on schedules and stuff where you could be getting data,
like motion sensors, pressure sensors,
temperature sensors, like IoT, if you'll call it that,
it's basically remote sensor devices
and network connected devices, has real practical advantages
in the enterprise and nobody's trying to solve that problem.
So what EdgeX Foundry is,
it's a Linux Foundation initiative
where Dell is seeding the initial technology
to try to make a standard framework,
all these different vendors, IoT devices can plug in
and you can do local LAN management.
And so I think, whoa, hello there.
Hi there. Hello.
Hello, hello, hello, hello.
I guess it's time for us to start the show, Wes.
Yeah, we're late.
Yeah. Whoops.
And it's actually probably solving the problem
that so many of us have with IoT,
where it's like, you have to give everything
over to the cloud, they have all of your data,
and there's other problems that brings in for businesses.
And I think EdgeX Foundry is gonna solve all of it.
So I got just a couple of minutes and we got some footage.
I had to sit on it for a little while,
but now I can share it with you guys
to give you a little insight on what this is
and why the Linux Foundation is calling this
their largest announcement ever.
We're here in the CTO lab, talking IoT.
How about that?
And this is Jim, and Jim's gonna give us a walk around
to some of the tours, give us a couple of demos.
I'm looking around, I'm just seeing all kinds
of really great devices, like that guy right there.
There's some hardware over here.
So where should we start?
We'll start in our mini lab, let's do it.
During our visit to Dell, there was one thing
we couldn't share with you just yet.
So we're gonna save this for three weeks.
Future Chris and though, save this for three weeks.
Dell and the Linux Foundation are launching EdgeX Foundry,
an initiative that aims to build a common framework
to make IoT usable in the enterprise.
The problem we have in IoT is that all these different
types of devices that speak all these different protocols,
everything from BLE to Modbus and BACnet,
which are ancient protocols, at least by most
of our standards, they all speak a different format,
they speak a different language.
How do you bring those all into a single platform?
Yeah, exactly.
And then make it available to people
like you and I to actually use.
That's what our platform called EdgeX Foundry is about.
It's a software platform that allows us to bring
all that data in, normalize it to a single format,
and then make it available to your cloud or enterprise,
as well as be able to control things
at what we call the edge, that's the name, EdgeX Foundry.
If you can't control things at the edge,
it's too much data and it's too slow for reaction.
And we'll talk and show that here in a second.
So you're right, right here we're seeing
just a little visual, a little graphic
of the data coming off of, in this case,
the gyroscope and this Bosch sensor.
So you're seeing the ups and downs of that.
In fact, we always have fun with those sensors
when we take them out of the road,
we throw them around the room,
you get big spikes up and down.
We also get to see who drops them
and watch them go to the floor.
So that's the collection of data,
or example of a collection of data
by our EdgeX Foundry software into our gateway.
That's one job of the system,
collect data and make it available.
Second job is to be able to offer the ability
to do what we call actuation,
which means respond to data you see coming in
and take some action.
But it also solves a big problem
I never really thought much about.
More importantly though, it's not just about
gathering data and being able to actuate back down.
It's being able to do those in combination,
meaning you have to have what we call edge analytics,
or some smarts, some intelligence on that gateway
that's watching all the data come in
and being able to translate that back down actions
down to your systems.
Say for example, if we moved that punch machine here,
I'm gonna lower that arm down.
Get the little mouse on there, right?
Beep, beep, beep.
Sending off the signal there.
Actually, I did it the wrong way.
I moved it up and it was already up,
so let me move it in the other direction here.
So there we go.
You'll notice the sound came out of that pat line.
That's a rules engine that's running
as part of our edge x foundry
that's in this case looking for movement on that arm.
There's no way that's triggered as long as you want.
But you can see it happening for lots of different devices
for lots of different business.
Exactly, you maybe have a proximity sensor
that shuts the machine off
if your arm gets too close to it.
That's the intelligence you want at the edge.
They can be that quick?
They can be that quick.
As you see here, we're not exactly real time
yet, but pretty darn close, right?
Enough where you can send off a sensor like that
in seconds.
You don't want to operate your automobile airbag
with our edge x foundry yet,
but we're getting close to doing that.
That's what local intelligence is all about.
That's why you need a gateway.
You can't afford to let that data go all the way to the cloud
all the way back down.
It's too late.
Somebody's lost an arm.
It's not just about security and privacy.
It's also about timing.
I hadn't even thought of that too late.
Somebody's already lost an arm.
Yeah, that's morbid, but true way to talk about that.
And you know, it wasn't clear in the video there,
but the system, the, the, the beep that the alarm beep
was coming from a separate device.
So there's like, you know, and they're talking
what's great about, what's great about Dell is they have
the resources to say, so they've gone into these businesses
that already have like all of these systems
and these, these things can connect this edge x foundry.
It's based on an existing open source project
that has been sort of merged with some other stuff.
And Dell then went out and did some industry research
and they found people that have like
serial connected controllers.
And they made that work with edge x foundry and yeah.
So it's not, it's, it basically works with all of them.
And then it gives, it gives people a framework to target
if they want to make their device specifically compatible.
And you can run this edge x foundry stuff on Linux.
You can run it on windows.
Dell has a combination of Ubuntu hardware and software
that you can run it on top of.
But there's 22 other companies involved.
Right.
Today Canonical announced they're one of them.
And so that's a huge ass start.
It's being head up by the Linux foundation.
It's got a huge investment and initial seeding by Dell.
It's got Canonical on board.
And then you've got 22 other companies that are,
that are device manufacturers and software makers
that are going to work with this thing.
And it might come, we might get to the point
where the enterprise, because they got work to get done
and money to be made,
we'll get this IOT situation figured out.
I know, isn't that funny?
But it makes sense.
Like, yeah, they have the money
and they have like strict requirements about security,
what things they are allowed to install or use.
So that can drive a lot of things.
Well, and when you think about it from a standpoint of,
we want that machine to stop crushing
before the guy's arm is totally lost.
You do want something a little more fast,
maybe gigabit speed, maybe not, you know,
going up to the Amazon cloud
and waiting for the API to respond.
And you know, like that might just add
a little bit of unnecessary delay.
AWS is having an outage.
No one use the paper crusher today.
Now this is not going to work, is it?
All right, before we move on from this,
does anybody in the Mumble Room have any thoughts,
questions, comments about any of this?
You guys have been quiet for a bit.
So I want to give anybody a chance in there.
Charlie Brown, AU, are you new here?
Are you welcome, welcome to the Mumble Room, sir.
Hi, hi, Charlie Brown, AU.
How you going, man?
Not bad, thanks.
Hey, so what do you think?
Is this all crap, is it hype?
Do you think there actually could be
some actual value here?
I don't know enough about it to have a view on it.
I was hoping the segment would give you
a little bit of an idea.
I think, you know, for me, Charlie,
it seems like, okay, oh, I get it in the business sense.
I get where you would want Wi-Fi temperature sensors,
and I get where you would want Bluetooth controllers,
and I get where you'd want serial controlled stuff.
I get Internet of Things in the business
in a way that I don't necessarily get it in the home.
Do you have any device, do you follow me?
Do you have any devices in your home,
or are you kind of on the same page?
Like, I just don't get IoT for the home.
I've got a Steam Link, which is like an armed device,
and I want to actually get a Raspberry Pi
to turn into a PFSense box,
and I've actually got a Adreno Nano as well,
which I'm making a track IR out of.
Charlie, that's all sounding kind of thingy on the Internet.
That's getting close, Charlie, that's getting close.
Yeah, I've actually, what I have found it really useful for
is controlling my space heaters.
I know that sounds weird.
No, I get it, I get it.
But with the-
When you're cold, you don't want to move.
Well-
I'd like some warm me up, cancel.
Actually, you say that, but it's funny.
So today when I left the house, it was like 38 degrees
when I left the house, when I left the RV.
A brisk spring morning.
And so we have an electric space heater
in their oil-enclosed systems, so they're like coils,
and we have one in the front of the rig,
and we have one in the back of the rig.
And they're both controllable by the echo.
And when we left today, it was cold,
I didn't even think to turn them off.
And they're just sitting there sucking power.
But when I got here to the office, I was like,
you know what, it's like 58 degrees out now,
I don't need those running.
And it's one command, I could say it right now,
and it just turns off the oil heaters in the RV.
That's really nice.
And it is super nice, actually,
because I then compare them with Belkin WeMo plugs
that will give me the real-time amperage
and voltage and watts draw.
Now you've got data.
And I can actually say, well, today's Earth Day,
so after I've drawn X amount of watts,
just turn the thing off.
Just turn it off.
And I can also say, I'm gonna get home
around four o'clock today, so turn the thing on
around three so it starts warming the place up,
but don't leave it running all day.
And that's actually kind of nice,
because some places I go, I actually pay,
they meter me, and they actually pay for how much I use.
Some places I go, it's free.
So it's nice when I'm at somewhere
that'll actually watch the meter and charge me.
It's nice to be able to have that kind of control.
See, that makes this more exciting.
Imagine then, maybe if you're like Charlie
or other people, you already have some of these devices,
but then if you have your own devices
or you would be able to interface with that,
see the data in another way,
maybe have it interface with a non-proprietary format
or just store it locally, that would be cool.
One of the things they were showing me there,
so I just gave you guys the real raw stuff,
just those real specific, like this is what
Edge X Foundry does, but they then took me over
to their R&D side of the room,
and they have three major sections.
Well, actually, they have four major sections.
So you walk into this room, this lab,
and it's like a lobby.
There's a couple of couches, some chairs.
Then to your left, they have a mini lab.
And this mini lab is where the bulk of that video
just took place, which I have, by the way,
if you're listening on the audio,
I have the video embedded in the show notes.
It's only four minutes long.
It's kind of worth checking out.
That's the mini lab.
Then they have a glass window.
On the other side of the mini lab is like a fucking lab.
It's like a lab, dude.
This ain't no mini lab.
Yeah, it's like false floor, false ceiling, racks,
like full on, can't go in there, no media allowed,
don't even think about it, dude, lab.
Then next to that, they have this R&D room.
It's like this long room, one window at the end of it,
brown walls, and all along the walls
is gear just mounted like crazy,
like tons of different IoT stuff,
everything from custom in-house built stuff
that looks super crazy and esoteric
to Amazon Echoes, like the whole range.
And what they were trying to demonstrate to us was
you can go completely local, you hold all the data,
you hold all the analytics,
you do all the controlling of all of these devices
on the LAN, or if you really want to,
you can go as far as,
you can abstract all of this away to an Echo.
And so they showed me where they have,
where they can start a motor actuator
and start something going down a conveyor belt
and an arm using a dot.
Wow, that's pretty slick.
And they're like, the real thing we see here,
and this is how far out they're going,
like the first thing, the first stage we see this is
the worker is doing something and their hands are full,
and so they're using voice commands to trigger something.
And I guess people are experimenting
in the workplace with dots.
But they're like, but what we kind of have
a long-term thing here is it's AR.
Like what we are working towards is creating sensors
that we can mount in things and on top of objects,
and then all of these sensors will give data back
to the EdgeX Foundry box,
and that EdgeX Foundry box will supply data
to an AR headset that, you know,
you're looking at the engine
and you're looking at real-time stats and schemes,
schematics and temperatures and all that stuff,
and all real-time data that the EdgeX box is processing,
collating, and then feeding an AR headset.
Totally way out in the future stuff,
but like that's how far they see this going.
Like right now, today, it's just about a framework
to manage IoT in the enterprise.
But in the far future, it could be the key part
to feed a real-time data feed to an AR headset.
Are we just making the sensory organs
for our future AI overlords, Chris?
We are the biological bootloader for sure, my friend.
Yes, absolutely, and this is a key part of that.
Right, yeah.
So do your duty, help out.
Make no mistake about it, Wes.
But let's be honest, it's gonna be way better.
It's gonna be great, yeah.
I could see it too.
Like I could see like you're working at Boeing
or you're a doctor, like I could so see it.
So it seems inevitable.
It really does seem like you can.
When you have technology like the HoloLens
or even Google Glass, and then you have the data
and the devices doing the analytics.
And they didn't wanna come across to me as biased.
They were very sure to make sure I understood
that it could run on multiple operating systems
and they have partnerships with Red Hat
and SUSE and Microsoft.
But it is clear to me that to them,
they prefer running all of this stuff on Ubuntu Core.
Interesting.
Something about working with Canonical.
I think Canonical's the right size for them.
They're not too big, not too small.
Dell can have some influence.
Yes, totally.
I don't know, it just seems like,
it seemed like to them, like this was their-
They have experience working with them.
Yeah, it was fascinating to see.
So while we were there, servers obviously, storage.
It turns out, and I'm gonna try to find more information
about this though, Dell's also working
on a Debian-based network switch OS.
Right, yes, I remember us talking about that.
Yeah, so I gotta get more information on that.
But there's just a huge range of stuff
they're working on over there.
And so this is one of it.
But like they put in the Linux Foundation announcement,
the foundation says, this is coming from Linux Foundation,
that EdgeX Foundry is unifying the marketplace
around a common open framework
and building an ecosystem of companies offering
interoperable plug and play components.
I guess that's actually pretty possible.
They say it's designed around any hardware
or operating system with any combination
of applications environments.
And EdgeX can quickly and easily deliver interoperability
between connected devices, applications, and services.
Jeez, all right, it's just getting ridiculous.
You know what's crazy too, is they make it worse
because it's just a bunch of commas.
So this sentence has one, two, three, four commas in it,
just to explain all of these buzzwords, yeah.
It's too much, but anyways.
See that list there of the companies,
that's more interesting.
That is actually legit in here, and good on them.
Lenaro's in there, that's interesting.
Yeah, yeah, VMware.
Yeah, VMware is pretty involved with the Linux Foundation.
And of course, Canonical, which I think is the bigger part
because that's what's gonna be powering the machines
that are managing all of this.
So that's the part that actually is maybe more takeaway.
Anyways, something to follow, so it's the EdgeX Foundry.
Not a ton of people in our space are talking about it,
but I think it's because we don't realize it means
bringing a lot of this internet of things to the LAN,
controlling it there.
And it's one of those like,
Dell hasn't talked that much about it.
Other people haven't talked that much about it.
And it's one of those enterprise, business-to-business
things that just happens behind closed doors.
It is very much that.
And I think that one of the bigger stories here
that is sort of hard to relay is it's super intentional
that Dell's not talking a lot about this.
It is a big deal that this was a Linux Foundation
announcement and not a Dell announcement.
I can see that, yeah.
I think Dell very much wants us to be an open source
community project, and they are so willing to push
that angle that they are, do you understand?
It's a big deal for a company not to take
the PR win for this.
Yeah, totally.
Because they could have come out,
this could be the Dell EdgeX Foundry.
Yes.
To be very clear about how much development happened there.
But they've worked since the beginning of this project
to make it a Linux Foundation thing.
Like you don't just get 22 companies.
That took like a year of work.
Yeah, totally.
And a lot of agreements and other things
that have to be signed, legal things to work out.
That is a part of, that's a bigger story.
I don't know how to quite tell it,
but that's a very intentional thing they're doing.
So this is like, we've talked a lot about
maybe the downsides or the controversy
of the Linux Foundation, but maybe this is
an example of the other things they do
that other types, not an industry organization, can't do.
Yeah, and this was never, these types of tools
and IoT is never gonna be a credible thing
you can use in the enterprise that's actually manageable
and secureable unless something like this came along.
Yeah.
And so if it was one-
Let me get my app on my phone that connects
to this private cloud and then, yeah, that's done.
Imagine if this was Apple doing an extension of HomeKit.
They would have, it would be so less relevant
to how it's gonna impact the industry.
Doing this as an open source Linux Foundation effort,
I think, long-term, might actually make this legitimately
a real, like the real products
that we can use in the enterprise.
Speaking of things that are legitimate and real
and you can use right now, DigitalOcean.
DigitalOcean.com, go there and sign up.
And then once you sign up, use our promo code DOUNPLUGGED,
that's one word, DOUNPLUGGED to support the show
and get a $10 credit.
You wanna mess around with something,
DigitalOcean's perfect.
You wanna put something in production,
DigitalOcean's perfect.
You wanna rely on it, resell it even, DigitalOcean.
It's the range.
You know, that's what's incredible about it.
So for three cents an hour, you can get a rig
that's probably faster than any machine
you've got on your land.
I mean, if you wanna make Chris feel bad,
you have a MacBook, you're never switching to Linux.
Bam, DigitalOcean, get a VPS, 55 seconds.
I know, right?
It's great because, okay, so for $5 a month,
like that's gonna run most your stuff
that you wanna run headless on a Linux box.
That's nice.
For $5 a month, you get SSDs.
You get 40 gigabit eConnection.
They use Linux for the host,
they use KVM for the virtualizer,
that you get to use their awesome interface.
You can use the one-click deployment
of open source applications.
You get to use the API.
Like all of that stuff is there
for like the $5 a month rig.
And then you can step it up from there
to machines that are just monsters
with 200 plus gigs of RAM, tons of processor cores,
crazy amounts of storage.
But what's nice is what,
and this is always what I've done,
is I've either started at the $5 one
or maybe if it's something I'm using a lot,
like I'm running Mumble and Minecraft on there,
I might do a nicer rig, maybe at most a $20 a month rig.
I mean, sometimes I'll go crazy
if I got a lot of stuff going on there.
But I can, there's this whole range.
And there's also baby steps.
You can just take little itsy-bitsy beautiful baby steps.
Beautiful babies.
You just go over there
and you attach block storage as you need it.
Just, it's all SSD based.
You can go up to 16 terabytes.
It's so crazy.
You want to mess around with ZFS or ButterFS?
I mean, why not?
Because they'll show up as block devices.
I mean, have at it, Haas.
You'll really get a chance to learn something.
Also, they have monitoring available.
That'll give you metrics.
It'll give you alerts.
It makes you look like a boss for a team of one or 100.
And then speaking of teams,
you can easily manage and transfer droplets.
So if you got like, you got kernel Linux here.
Kernel Linux in the house.
This dude's over here spinning up droplets
for customers that want Nextcloud instances.
Sets them all up and transfers it to them.
It's brilliant.
You can also resell at these prices too.
It's so nice.
And when you bring in things like monitoring
or when you have their CDN,
you have private networking for backups
that don't count against your transfer.
There's a lot of opportunities for developers,
for sysadmins, for enthusiasts,
for people that just want to learn.
Go to digitalocean.com.
Use our promo code DOUNPLUGED, one word, sign up.
And check it out.
And check it out at digitalocean.com.
Big thank you to DigitalOcean
for sponsoring this here Unplugged program.
Boop-a-boop, boop-a-boop, boop-a-boop, boop-a-boop.
So this is a hell of a story here.
And I commend them for getting a release out.
This is not gonna be a mocking thing.
I say this is actually potentially a good thing.
A little competition actually is a very good thing.
Duvon?
Devuon?
Devuon?
Devuon.
Oh yeah, that's right.
Devuon.
Devuon.
There we go.
Devuon.
Devuon GNU slash Linux has been released, version 1.0.
Jesse, hmm, I've never heard that before,
I bet Debian's totally gonna assume for trademark,
was just announced.
The release candidate is actually out.
The Devuon project, as I'm sure you recall,
is Debian without the D,
without the system D init system.
And instead they're using, I don't know,
probably Hope, Bubblegum, and Magic, maybe Ponies?
What's that, init, init system, what's that?
Oh, I'm sorry.
And so I actually, at first I was gonna laugh this off,
and I thought, this is no big deal.
Who cares what Devuon is doing?
And then I started thinking about it a little bit,
and why the hell not do it?
If you want a sort of a Debian of a different era,
and more importantly than that though,
what a great potential base for a bunch of respins.
Maybe Devuon, Devuon itself won't be massively popular,
but I could actually, for some weird reason,
see like a remix respin derivative
that uses Devuon as its base,
building a really competitive Linux distro.
Yeah, I think, I mean, I could see that too,
especially, I feel like Debian's,
I mean, a lot of the strengths of that family
is the huge, you know, the huge app repos,
that they put a lot of efforts into like, you know,
the Etsy defaults alternatives,
all that kind of stuff, right?
There's like, you can, there's a lot of configurability
and options built right in.
So I can see, I don't know about the desktop space,
but on the server side, container side, other things,
I can totally see, maybe you want like an old style,
minimal, you know, reproducible in its system
that just starts things in a row, okay, great.
Yeah, or maybe on even like,
like they're working on Raspberry Pi 2
and Pi 3 support right now, I could see that.
Anybody in the mumbler, what do you think
about a system D-less Linux?
Do you care anymore?
So one of the other things we thought was interesting
about this story,
and this might be something somebody could jump in on,
is it's 2017 and the multi-year hoopla
that was system D has passed us.
And essentially it's just been normalized now
into Linux culture.
Wow, does it feel good to say that?
I think so.
So here we are now in 2017,
and I'm feeling like things are actually worked out
pretty good.
We haven't had a security nightmare
that's rolled across Linux, leaving us all exposed.
Well, at least not because of system D.
Yeah, boot times, man, I gotta say.
Great.
The one way I interact with system D
on a more frequent basis is boot up time,
and so far, my system D based systems boot a lot faster.
System D service scripts, or service units,
whatever they're called, just make a lot more sense to me.
It is really easy to write a unit file
and just like turn this into a service, please.
And the system CTL enables such and such,
and stop and start, like all those commands
are really straightforward.
And I cherish the fact that I can log
into multiple different distros now
and use the same command.
That is really nice.
Cherish that.
I came from a time where that was not the case.
Never gonna happen.
Yeah, every distro had its own syntax
for enabling, disabling, and starting and stopping services.
Every distro did.
And then we finally got that service wrapper
right at some point, but it didn't bring any features
because it was too disparate.
And still, there was frequently variations
in the names of the services,
which is also standardized as Apache 2,
or HTTPD, or who knows.
Yes, yes, yes, exactly.
And now that's much more normalized as well.
These are all things that we had to struggle with
back in the day that I feel like System D has helped with.
And now, here we are, here we are in 2017,
and MonkeyCom has just moved to System D,
like just moved to System D.
MonkeyCom, how has it been for you?
Oh, it sucked in the beginning.
I mean, just, well, you have the thing
where you move your MySQL server
from, let's say, 12 to 16,
and everything's working great until everything doesn't.
And then the jackass you hire to come look at it
removes System D and wipes out your MySQL install.
No.
That's always awesome.
Whoa.
But because he said System D was bad.
I feel like there is a sitcom at where you work
that could be filmed right now.
So you had an outside contractor come in
who can't kind of have an agenda,
like an anti-System D agenda?
I don't know what his problem was,
but he got on the database server
and it was production development.
I mean, it wasn't gonna hurt any customers,
but it was definitely something I didn't wanna rebuild.
And yeah, he removed System D
and that just completely hosed everything.
I mean, it literally, you couldn't even,
it wouldn't even boot.
It was bad.
I mean, that kind of makes sense
when you remove the edit system.
That's like, you're coming in here and fixing it
for free kind of bad.
Yeah, exactly.
We really liked having that database.
So after the Nuke bomb was dropped
and you guys rebuilt the village, how has it been?
Oh, it's fine.
You just gotta learn the tweaks.
You gotta understand how to exclude it from,
you know, System D automatically does a bunch of stuff
and especially with the security profile.
And you just gotta know how to deal with it,
especially when you're running really intensive loads.
And once you figure that stuff out,
it's an excellent solution.
And it's much better than Annette.
And I don't know why anyone would wanna go back.
It's just, it's a pain in the ass
to get your head wrapped around.
Yeah, it is definitely a paradigm change.
It's new tools, new switches, all that stuff.
Yeah.
We went through that with SE Linux.
We went through that with, you know,
every time something new comes out
that has a performance or a configuration impact,
we always freak out and say they shouldn't have done that,
but it always improves your life.
Yeah, I mean, yeah.
It does something.
There was people that with the transition
from Lilo to Grub, I think some people drew blood over that.
Like there has always been big moments
we've made moves that have been really, really,
really painful publicly.
And it's done so in a way that most projects
that are commercial projects
don't ever get that kind of exposure.
And so we get to watch the sausage get made
in a way that most people never see.
But Monkey Comm, it's fascinating
because what you represent is probably the reality.
Most shops are just now beginning to make this transition.
Like to me, my systems have been running
system D for ages now,
but people that have like Monkey Comm
and probably like yourself, you probably have,
do you have systems in production that are?
Absolutely. Yeah, of course, right?
I probably, there's probably systems
I've still set up years ago that are still in production.
I just got off a 12, so let's be honest here.
And I do think like, it's interesting to compare,
like I've talked to some developers in particular
who felt a little burned about the whole Upstart thing.
They're like, we finally got off Etsy in it for Upstart.
You told us that was the next best thing.
And we switched all of our programs
and now we have to switch them again,
which I mean, I think just that improvement already,
it's like pretty easy to turn an Upstart job
into a system D job.
So it's not a huge deal.
And I also think that like just the rate of adoption
and the expanse of the adoption we've seen
means that I don't think that,
I don't think it'll take longer than maybe five years
probably before we see a new system D thing
that replaces it in the reach that system D has.
So I think it's in a better position,
but I can see why people are like, I have to change again.
I don't know if anybody does this out there on the web,
this would be really cool,
is all of like the top 20 Linux distros.
Now you know what, let's make it simpler than that.
The top four Linux distros used by enterprise,
and I don't know who determines that,
but whatever sold determines that to be fact.
We'll just ask Noah, he'll tell us.
That's probably true.
I would like just a simple HTML table,
doesn't have to be fancy,
of the current production Linux's
and the kernel versions they're running.
And current versions, yeah, I feel like
if you look at the last five years of Linux,
and this is so true when you look at the enterprise graph,
we are converging in a way that if you gave 2017
current day snapshot Linux,
if you took a snapshot of it,
and showed it to Chris of 1998,
I wouldn't call this Linux anymore.
Everybody, every major vendor
shipping a GTK Gnome 3 desktop,
every vendor, every major vendor shipping system D.
Now if you look at the middle layer is system D,
and the user land is GNU,
then almost all distros are now exactly common.
GTK, Gnome, GNU, system D,
and then I bet they're all based
on a semi-modern kernel four.
And more and more of them at the end of 2017
are gonna all at least have kernel version 4.10.
We're pretty much all gonna be,
anybody running current Linux
will be on version 4.10 or later of Linux by the end of 2017.
So you're gonna have this unprecedented,
I mean, have we ever been this cohesive as a community ever?
Maybe like only when it was just small enough
that there couldn't have been this much,
you know what I mean?
Like early days, but it's been a long time.
And also by the way, every distribution
that matches what I just mentioned
also can install flat packs.
Whoa.
So now we have universal application
installation capabilities on Linux.
I feel like we're talking about BSD.
Yeah. Yeah.
Kind of, in a different way.
Only way more badass, right?
Like this is way better.
Like it's so awesome.
And it could also be the shittiest things
ever happened to Linux.
Like you have to keep room to understand
that one of the things that's made Linux great
is diversity, lots of little things,
doing single tasks, like there is the possibility
that this could lead to ruin.
But it seems more likely that we are reaching
a level of consensus in the community
that is gonna make us more targetable,
more applicable, more commoditizable,
which is gonna all lead to a greater adoption,
more applications, more use case scenarios.
To me, it seems like we're in a better spot
than we've probably been in a really long time.
Now, we're not quite there yet,
but the skate or the puck
is certainly skating in that direction.
So does that like play hand-to-hand
with what we were talking about before,
where will that also make it like,
so that branding and other things matter less
when it's all just Linux?
Like it doesn't matter if you use a bunch of,
or I don't know if it's like 90% the same now.
I would use Docker potentially,
oh God, I can't believe I'm gonna throw up
a little bit in my mouth when I say this.
So don't judge me too harshly.
I would use Docker slightly as the example
in some sense here and I'll explain myself.
So what's Docker selling?
Docker is selling, this is what sucks for Docker.
Docker is basically selling water
to folks that have a town well.
Like the problem with Docker is
they're just selling namespaces,
CNAME groups, Linux kernel features,
and a bunch of great management utilities on top of that.
Now, if you take away the management utilities,
everything else is a commodity of the Linux platform.
Like every distribution has the capability
of namespaces and control groups.
I mean, SystemD could make containers,
I mean containers or whatever, but right there for you.
Right, so this multi-million dollar company
named Docker is selling something
that you get for free with the platform.
Now that's telling of where we could go in the future
because we all could be selling the same thing,
but yeah, we can have a multi-million dollar company
on top of it that is branding and productizing
the management infrastructure or the community around it
or whatever it is that they do.
So there is still space for a canonical
and a SUSE where the product is commoditized
because Docker is the example.
Docker is selling something that comes for free with Linux.
You get containerized, you install a modern Linux,
you've got what Docker, the core of what Docker can do,
and yet somehow, somehow, they're still making money,
they're still a name we're still talking about.
I thought they're called Moby now.
Yeah, right.
But you see what I'm saying.
I do see what you're saying, absolutely.
It almost makes, it almost gives,
it's just at a different, it's at a different layer
where the product and the innovation happens.
It's at a different layer.
There's a common technology base.
Which I think is good, right?
Like that's a, I like, you know,
you always have to decide where that level,
where is the value add layer going to be?
I think pushing it up a little higher in the stack
is a good thing.
Yeah, because what it does is it makes it sane
and manageable and deliverable for developers.
So I know what I'm targeting,
I know how many systems I'm gonna be able to run on,
and I know how to package it up
and ship it for those systems.
And I know how it's gonna run once it lands there.
Those are not things you could actually say about Linux
a few years ago, and especially not 10 years ago
or 20 years ago.
You couldn't say that.
You kind of, like, depending, like,
well, if it depends on a couple of libraries,
you got a good shot.
But when you're developing a modern huge application
with all its components,
the only way to do it in the past was to say,
we work on Red Hat Enterprise 6, and that's it.
We've tested for Red Hat Enterprise 6,
and we work on Red Hat Enterprise 6,
and you must run in Red Hat Enterprise 6,
and that's the only way we support Linux.
That's gonna go away.
And what we're gonna have now is,
well, you must have Linux kernel 4.10,
you're gonna need systemd version dot dot dot,
and you probably should install these packages.
And that will be the requirements.
That's a game changer.
That's a game changer for all of us.
And then the fact that at the same time that's happening,
we just accidentally have Flatpak and Snaps,
which are universal package installations,
and we just accidentally happened to have
all of the major Linux companies
now working on the GNOME desktop and GTK.
I mean, holy, holy convergence, Batman.
That's a whole different type of convergence,
and it's gotta be one that's in the long term
gonna be good.
And how the hell is BSD gonna compete with that?
All right, that brings us to an end
of this week's broadcast.
One more episode before the big Linux Fest Northwest, Wes.
Whoa! I know.
It's really snuck up on us.
I'm excited now.
I am, I am too.
I'm really looking forward to it.
Audience, you should try your darndest to get there.
But you know what, like every Linux Unplugged
is almost like a Linux Fest.
You can join us in our virtual lug.
Just go over to jblive.tv, join our chat room,
and then do bang!
Mumble, that's the exclamation mark.
And you'll get our server address.
You join that, you can hang out in our lug.
You can also send us an email over
jupyterbroadcasting.com slash contact,
and get it converted to your local time
at jupyterbroadcasting.com slash calendar.
Thanks so much for being here.
We'll see you right back here.
Next Tuesday!
Hey guys, good to see you again.
JBtitles.com, why don't you all go over to that JBtitles.com.
Let's pick our title real quick and then we'll make room for the TechSnap program.
Wes, the light's still burned out in there, I have ordered replacements but they just
take weeks to arrive.
I'm sure.
So you're just going to look like a tan man.
All right.
I watched last week's episode, you just look like you have a real healthy glow.
I like, okay, not a problem for me.
Mumble Room, thank you guys very much.
You guys are awesome.
Yeah, thank you.
Monkey, thank you very much for carrying a lot of the weight.
It was a fun chat today.
Charlie, it was good to hear what you're working on too.
Come back.
Yes.
JBtitles, JBtitles, won't you all go boat.
I just am tired of Docker being the end all be all of the developers.
I mean, half the developers don't even know them and they know they're developing in Linux
but they've lost all understanding of what they're doing.
It's creepy.
It creeps you out because it makes Linux feel like it just doesn't matter, like it could
just go away and nobody even know, oh, just keep making containers.
It's never going to go away because every developer I know, when they build a Docker,
they always use the same fucking port and then they put it on a Docker server and nothing
works.
And then it never gets updates and it sits there riddled with security issues.
But that's, yeah, that's got to get worked out too.
Maybe what we need is Edge X Foundry for Docker.
Just got so enterprise.
IoT, biological bootloaders, not bad.
Oh, WW, you had a rant.
You wanted the floor.
Go ahead.
Okay.
So chat room, when you type in bang mum, you look stupid.
If you want to come and join mumble and talk to Chris and then do Chris last mumble, hey,
I want to say something, then that's what you do.
Outside of that, you look like a donkey.
Are you saying they're doing bang mumble just to get my attention?
Is that what you mean?
I don't know.
I don't know why they're doing bang mum unless they want to, you know, bring down fears.
Yes, you know, they're just trolling because that's all they know to do.
I was doing it just because I saw somebody else do it and they got the floor.
In fact, I think I saw a monkey do it.
Well, yeah.
Well, if you're in the mumble room, you do mum, Chris last, and then what you want to
say and I'll call on you.
Bang mumble, bang mum, bang mum or whatever, I think just gives you the server.
I'm not even sure what that does.
I think bang mum is just a misnomer, which is why it's making, it's rustling some jimmies.
There is a way to like they're like when people preface like a comment, if you do like Chris
last mum, colon, and then what you want to say, I almost always will call on you.
Like that seems to be, that was the confusion.
Yeah.
Yeah.
I don't know why people get confused.
You know what?
I saw someone do it and they got the floor.
Yeah.
It's cause you know what?
It's the, it's the, it's the, it's the wonderful cycle of noobs, w w it's, it's both glorious
and excruciatingly frustrating at the same time.
