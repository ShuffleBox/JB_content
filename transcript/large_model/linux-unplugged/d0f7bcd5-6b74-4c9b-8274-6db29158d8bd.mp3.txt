A really big happy birthday to VLC, the Videolan, champion of open source, reached 20 years
old.
That's really all we have to say.
Happy birthday to VLC.
The project was released to the world on February 1st, 2001, and I've had that traffic cone
on my desktop ever since.
And sometimes it's Christmas and it gets a cute little hat.
I do love that.
I do love that.
So really, we're kind of laughing and joking, but we have a lot of appreciation for good
old VLC.
Hello friends and welcome into your weekly Linux talk show.
My name is Chris.
My name is Wes.
Hello, Wes.
Thanks for bringing in the slow cooker to the studio today.
That's going to be delicious.
And this episode is brought to you by the all new, a cloud guru, the leader in learning
for cloud Linux and other modern tech skills, hundreds of courses, thousands of hands-on
labs, get certified, get hired, get learning at a cloud guru.com.
So here we are gathered together today on episode 391, and we have some really interesting
big community news that actually impacts our local community as well this week that we're
going to get into.
And then later in the show, we've spent some time on Gnome Shell 40, and there is a lot
to talk about here.
And maybe something you should be aware of, especially if you're a multi-monitor user,
we're going to get into that a little bit into the show.
We got some pics, we got some feedback, but we really do have some great community news
to get through.
So I want to start by saying holler over at our virtual log, time appropriate greetings
mumble room.
Hello Chris.
Hello.
Howdy.
Hello.
So last week we recorded early, and we still showed up and hung out live on the stream,
and that's up on our PeerTube instance over at Jupiter.Tube.
If you want to see that, I don't know, I'm just experimenting.
And people still show up, even if we're pre-recorded, they don't know, they still show up.
So we figured we'll be there.
And we just did a little hangout, it was great, and that's up on Jupiter.Tube if you'd like
to see it.
So let's get into changes coming to Ubuntu, and some of them are quite significant.
We'll start though with the refreshed Ubuntu installer.
It's a new installer, and it's looking quite different than what we're familiar with.
With the key takeaway being that it's built with Flutter.
That is of course a project that Google works on, and Canonical and Google work together
to bring Flutter to the Linux desktop as a snap.
Wimpey writes on the development discourse that the development process for the new desktop
installer is being led by the Canonical design team and the Ubuntu desktop team.
Both teams have a wealth of experience navigating the challenges presented when installing a
modern operating system.
Don't worry though, the Ubiquiti installer will remain available in the Ubuntu archive
for official flavors, remixes, or derivatives to continue using in their images.
You don't have to change just right now.
These timing couldn't be better because in the chat room right now returning to the show
is Mr. Martin Wimperis.
Hello, Wimpey.
Hello, how are you?
Hello.
So we have lots to talk about today, but why don't we start with this one?
This seems like a big endeavor that the project's starting with, and I would imagine hoping
to land before the next LTS.
Yeah, that's the plan to land this in time for 2204, and in fact, land it in time for
2110.
For people that like to be on the cutting edge and something you can tinker with later
in this 2104 cycle.
Now is the intention that essentially main Ubuntu desktop will use this and then flavors
like Ubuntu mate will use the traditional Ubiquiti installer?
Yeah, I mean, we're not going to force people over to a new installer all at once, but we're
definitely going to give them the opportunity to use the new stuff and get involved in that.
Okay, so if they want to, they can, but the old one is essentially available.
There's been thought to that in the development, or there will be anyway, to support all these
other users.
Indeed, and that initial announcement is not just sort of outlining broadly our intentions,
but also a call for what's your feedback, how do you want to get involved?
So if I'm an Ubuntu user, I should expect to see this not in this next release, but
the one in October, the first version of this?
Correct.
We didn't just want to like throw it over the wall, you know, in a release.
We wanted the opportunity for the community to get involved in a conversation and make
sure that all of that's accounted for early on.
What are your thoughts around the selection of Flutter?
Well, I mean, it's no secret that we've been working with Google to enable Flutter for
the Linux desktop, and we're not doing that for no good reason.
You know, we're doing it for several reasons.
One is it's the fastest growing developer community right now, and there's lots of momentum
and interesting applications being developed in Flutter, and we want to invite those developers
and software vendors to bring their applications to the Linux desktop.
So that's sort of mission one, and mission two is we have a host of interesting projects
that we want to work on internally, and they're not just for the desktop, but the desktop
as well.
We wanted to pick something that could, you know, cover all of those bases.
Yeah, it seems like there's a lot of the advantages that, and I hate to even associate this word
with it, but go with it for a second, a lot of advantages that you get by using Electron,
but without the downsides.
It's a native application that's produced, it's built in support for GTK3, so it's going
to look and act and run like a Linux app.
Yeah, I mean, Flutter applications, regardless which platform you're running them on, you
know, whether it's a mobile device or Mac OS desktop or Windows desktop, they are highly
optimized native applications.
So it's not a tool like Electron.
They are optimized OpenGL, optimized 3D accelerated apps.
It's interesting, just some of your comments there, it almost makes it sound like some
of this work is a kind of dogfooding, you know, develop more in Flutter from Canonical
directly.
And that just sort of smooths out the issues for other folks that want to use Flutter on
the platform.
Yeah, and there are other projects at Canonical that are using Flutter that, you know, you
won't have seen yet, but you will do in due course.
Ah, very good.
And then do you have any details on this repair function that it looks like the screenshots
are showing for the new installer?
Well, I don't have any hard details about how it's going to work, but the fact that
that icon is presented, there is no accident.
That seems like I can just, I don't know, the possibilities there seem like there is
something that could be developed over time, but like a good one.
Like that's a great, that's going to be a great option for end users.
Well, you know, if you've used things like Chrome OS, it has a power wash feature, for
example.
So it would encompass things like that, you know, that you don't have to go back to the
very beginning with a stick in something on a USB flash drive in order to sort of do a
clean install or a fresh install.
You can do that from an installed system as well.
Am I getting the implication that maybe this is taking advantage of some of the ZFS plumbing
that's been happening under the hood?
I can't comment on that, but there are a number of technologies that this is going to be leveraging
that have been developed elsewhere in the Ubuntu ecosystem.
All right.
Well, let's change topics.
You're going to, you have a habit you're going to have to break and it's that we habit because
breaking news.
Just moments ago, Wimpy, you announced that you are taking a new opportunity and moving
on from Canonical after a long time.
And first, I just want to say congratulations and tell me a little bit about the change.
Thank you very much.
Yeah.
I've not gone yet.
I'll be around for a little, don't quite get rid of me just yet.
I'll be around for a little bit longer, but yeah, I'm moving on.
You will know this.
One of the areas of work I've enjoyed most at Canonical is developer advocacy.
You've seen that firsthand.
You got to join us at the Ubuntu rally in New York in 2017 and then a SnapCraft summit
in Seattle the following year, 2018.
So you know the sorts of things that Alan and I have been involved in and I've loved
that work.
So I've been looking to do something where I focus on dev rel, developer advocacy and
community building.
So I'm moving to an organization called Slim AI and I'm going to be working exclusively
as a developer advocate for them and I'm really looking forward to it.
Congratulations.
That's wonderful.
That is really good.
Yeah, that's an area of work that you can drive a lot of passion for and get a lot of
return from.
So Slim AI is an open source platform that automates the creation of fast and flexible
containers for cloud native applications.
And they've recently gotten some funding, so it seems like they've gotten some people
that think they've got a workable and potentially successful product.
Are they in your neck of the woods?
Is it remote work?
What's the details there?
It's a remote position.
The whole company is remote, although the sort of the core of the company are based
in Boston, Massachusetts.
Well I know a lot of us in the community will be sad to see you leave Canonical because
I think a lot of us felt really good about having you there in that position at the top
of the Ubuntu desktop.
But at the same time, I know that when you are available to interact more with the community,
when you are in there as part of the conversation, it has a lot of net benefits that are really
also going to be positive.
And so part of me is sad to see you go, but part of me is actually really happy for you
because I know this is kind of like unleashing you and letting you do what you do best too.
And the net benefit of that is also going to be really good.
We all ultimately will win, but ultimately I'm just happy for you Wimpy.
Congratulations.
Thank you very much.
Now, do you know when we would expect to hear who may be stepping into your old position?
Do you have any kind of indication of when Canonical traditionally makes those types
of announcements?
Well, I don't think Canonical ever announced positions that get filled.
It was a bit weird last time because when Will left, he was well-liked and well-known
in the community.
And I was obviously also well-known in the community.
So there was a little bit of, let's say, a news cycle around that.
But we're not in the position of announcing when people leave and join the company.
Yeah, it's kind of a weird thing, I suppose, in a way, isn't it?
It's not something companies generally like to do.
Well, thank you for letting us know.
And thanks for helping answer some of those questions around the installer.
And on your run here, you got, I think, one of the best LTSs out under your run.
And you'll always have that, regardless of what projects you go on to.
2004 is a hell of a release, and 2010 is really great, too.
Does that mean we can never update?
Dang it.
Yeah.
From henceforth, they'll be called Wimpy Edition.
And we'll run them until the very end.
But yeah.
Well, very good.
Our friends will be hearing more from you.
Yes, you most certainly will.
This will free up a little bit of time for me.
So I'm looking forward to taking up a regular seat on Linux Unplugged again.
Fantastic.
Let's talk about OnePlus 6 and the OnePlus 6T, which may end up receiving mainline Linux
kernel support in the near future.
And you can imagine the long term benefits that could have.
It's been nearly three years since the launch of the OnePlus 6 series, so it's not like
it's the latest.
But if you still have one or want to pick one up used, it may soon be possible to boot
that with good old stock Linux.
And that's thanks to the work of an independent developer named Caleb Connolly, who's been
working hard to include the OnePlus 6 and 6T in the mainline Linux kernel.
Now with the OnePlus 6 and 6T being built atop Qualcomm Snapdragon 845, the upstreaming
effort shouldn't be too hard, mostly just adding all the appropriate device tree bits
for the kernel.
And thanks to the existing minimal mainline support for that platform, things like Bluetooth,
Wi-Fi, 3D acceleration are already working right now, which is great.
What's more interesting maybe though, is that users should be able to dual boot postmarket
OS and Android on the OnePlus 6 and 6T using the installer that the developer has already
created.
So you can try it out now.
You can start using it.
It's probably not daily driver ready or anything, but the results are already promising.
It's a solid, I mean, it's not the latest phone, but that's a solid phone.
Previously, there had been a build of Windows 10 ARM that they got bootstrapped for the
OnePlus 6T by a separate developer, but just nobody really seemed to care.
It just didn't get any interest.
And so it kind of just whittled away, which I guess that tells you something right there.
When Linux is on there, it's headlines, when Windows is on there, it's quickly, quickly
forgotten.
All is as it should be.
All right, Mr. Westpain, you know what time it is?
It's been weeks since an Arch upgrade, and we have committed to keeping our Arch server
up to date here live on the show.
And so we figured enough time had gone by, let's do it again.
Probably should have done it weeks ago, but this time it seems like package creep has
snuck in, and there's a lot more packages than I remember being on the system.
125 packages need upgraded, Wes, how you feeling?
Yeah, no kidding.
You posted a little screenshot in an internal channel, and Drew was up in there making fun
of us for all the weird stuff on our server, and I think rightfully so.
Why do we have the Adobe source code pro fonts on here?
It's a server.
Why is Wayland on there?
How did that happen?
Like, how did Wayland get on there, dude?
Thankfully though, it's not too bad.
I mean, this is most of the system, and I think by and large, it's a pretty minimal
install list, which was one of our design goals with this thing.
We've got 500, 600 ish megs to download.
That's an install size of over two gigs.
Hey, look at that nice, fancy compression, but still just a net upgrade size of 10 MB.
I love that.
I love a two gig download.
Normal install size is two gigs, but net upgrade disk space is going to be 10 MB for 125 packages.
That's just fantastic.
So this is essentially absolutely everything on the system, and I'm thinking where we have
this package creep come in, my guess is net data, but I can't say for sure.
But that's the only thing we installed via a script that automatically installs dependencies
and everything else we've installed by hand or it runs in a container.
Yeah, you're right.
That's one of the few things on the system that's not running in a container.
All right, Wes, are you ready to kick off the upgrade?
Standing by.
I've already even put in the Y into the terminal, so I'm just waiting for the go ahead on hit
and enter.
Okay, let's just be clear.
Are you doing Pac-Man or are you doing Yay?
I'm doing Pac-Man.
Okay, so we're not going to do the AUR, which I think is, well, what about ZFS?
Doesn't ZFS come from the AUR?
Yeah, we'll get there.
I mean, we still got the LTS kernel.
We'll do the AUR next.
No, I think that's fine.
I just want to make sure that was your plan.
All right, kick it off, Wes.
Let's do it.
That'll take a little bit to run, so we'll let that go, and then we will come back and
check how it's doing, and then maybe also keep an eye on it to do the AUR.
Just let me know when it's going to reboot.
My God, I can't believe we do this live, and you know that we use that damn server more
than ever now.
Well, there's no going back now.
The new kernel just downloaded.
That's always what makes me nervous.
How was I thinking?
You know what you should do is you should go to linode.com slash unplug.
Don't be like Chris and Wes and run a server out of your garage slash data center.
Go to linode.com slash unplug and receive a $100 60-day credit towards your new account.
This is really where I go when I need infrastructure.
We have a bunch of servers that run the backend of JB 3.0.
They are our cloud infrastructure, and we like to be strategic.
We pick from Linode's 11 different data centers depending on what job we think that box is
doing.
A lot of times, if it's an internal tool that doesn't face the audience, we deploy it in
California because we are on the West Coast after all, but we can be strategic about that,
and you can too, and Linode's been doing this for a long time, since 2003, so they've been
able to secure really great data center contracts, really great connectivity contracts, super
fast connections coming into the hypervisors, really fast native SSDs.
You bring it all together with their great interface, and it's just the obvious way to
deploy infrastructure.
This is now my also go-to for making a safe environment for my kids to game.
I've deployed Minecraft and a Rust server, the game, Rust, on Linode.
They make these one-app click deployments for a lot of stuff, including really great
full stacks for getting your website up and running, but they also do them for game servers.
I just deployed a couple, chose the boxes.
It wasn't until just yesterday that I ever needed SSH into one of them and change a config
at the command line, but the way they deploy it, it works the way you would think it would,
so I didn't even bother checking the docs, because I'm that guy, and I thought, let's
see if I can just figure out how Linode deployed this, and so they set up the Rust server.
Well, they set up a Rust user, and in the Rust user's home folder, and that Rust user,
by the way, is what runs the process, not root, and in there, it's simply laid out.
It's a nice, clean layout for a Rust server.
I was able to get to the config, change the option I needed, so that way I could connect
to a custom server under Linux from the client, which is essentially turn off the copy protection,
and saved it, and the performance is fantastic.
I played it from my desktop, and I played it from the G4 streaming, connected into the
server, running off of Linode, and it's just so great, because now I've created an entire
world that runs on our Linode server, and you can deploy anything you need.
Maybe it's a website, maybe it's a portfolio, maybe it's a gallery, or maybe it's the backend
infrastructure for your team's communication.
Linode costs 30 to 50% less than major cloud providers like AWS, and with that $100 credit,
you can really see what I'm saying without having to put anything on the line.
I mean, $100 lets you deploy some serious infrastructure and see how it works.
And I get emails, and thank you for people who send those in, because it's really great
to hear that.
I get emails from people that tell me this is what they're doing now by testing it with
that $100 credit, convincing themselves or convincing management that it works, and then
deploying.
For yourself, for your business, for your company, it's great.
They've been around since 2003, they're going to get it right.
So go to linode.com slash unplugged.
Get that $100, 60-day credit, support the show, help us stay free, and get yourself
that credit, linode.com slash unplugged.
Let's do a little housekeeping while Wes is updating the server.
I think that'll help, give him some time.
You haven't rebooted yet, right?
No, no, of course not.
Okay.
All right, okay, all right.
We've got DKMS modules to build.
Come on, son.
Oh, what's being installed via DKMS?
I'm curious.
Well, we've got a new kernel, so that triggers things to rebuild for ZFS.
Yeah, sure.
Okay.
So maybe we don't need the AUR.
Oh, we'll find out.
In the meantime, just want to give a shout out to the Luplug.
Join our community that gets together and talks about Linux every Sunday.
Also a chance to play around with Mumble.
So if you ever had a chance to join us on the show, you could try it out on Sunday.
We have all the information at our website for Mumble, and we have the calendar at jupyterbroadcasting.com
slash calendar with our live times and also the Luplug on there.
You don't want to miss anything because, I mean, on Minimac, I don't know if you want
to put anything on the record yet, but there's some great stuff coming up.
There is, in fact, some great stuff coming up.
So we scheduled the next recording and I would pass the microphone to Byte Bitten because
he will talk about that a little bit.
Thank you.
So we all have usually our tools as an alternative for the big paid packages.
But sometimes we just want an overview of what is available or what others use and what
is the pros and cons.
So with the next recording, we will create an overview of all the available packages
that are mostly used within our community.
Interesting.
That could be a good way to learn about new apps and stuff that people are using.
Yes.
And later on with other recordings, we will go more in depth on some of those packages
like Nextcloud, Mycroft Assistant, you name it.
So that's every Sunday.
You can join them.
Sometimes Wes and I pop in too, sometimes we even do the show with the Luplug.
Check that out.
Details at linuxunplug.com.
For Mumble, there you go.
That's just about all the delaying I can do for you, Wes, before we check back in.
Where are we at over there?
All right.
Well, no AUR updates yet, but we've gone through Pac-Man.
We've got a new ZFS build.
I say we give her a restart.
Okay, Wes, kick it off.
Let's do it.
No going back now.
Okay.
We'll let that reboot.
We'll check back in.
We'll see how it goes.
I tell you, we really should just do these offline more often.
We shouldn't wait until we do it on air because what happens is we have a busy show and then
we try to stick this in here and then we're trying to do it live when really it just doesn't
work out.
We should just do it once a week.
Maybe what we ought to try for a while is a cron job.
No, this is a horrible idea.
Don't let me talk us into that.
Don't make me take your SSH privileges away.
Now, I wanted to talk about Gnome Shell 40 on the show today, but I want to give a chance
for Carl to jump in and he's going to be joining us a little bit in the show.
So in the meantime, I think we'll jump ahead to feedback.
Let's do the email now.
Let's just do it out of order so that way we give Carl time to join us later in the
show.
How do you feel about that?
How do you feel, Charles?
Yeah, good idea.
Well then, shifting gears to the feedback here in the podcast, out of order, Zach writes
in with a surprising solution for recent Chromium woes.
I'll take this one, Wes.
He says, hey, Chris and Wes, I shared your frustration regarding the recent news that
Google was going to cut off Chromium from Google's sync API.
I'm also in the same boat as you, waiting for Chromium Edge to get built in sync from
Microsoft whenever that comes around.
But in the meantime, I've stumbled on a browser that's hiding in plain sight this
whole time, Epiphany or Gnome Web.
I know what you're thinking.
You've probably used Epiphany in the past and it wasn't quite there really.
But I was there too, until I recently gave it a shot again.
I had a fresh install and I needed to check the Arch Wiki real quick, by the way, he runs
Arch, and I was blown away by how snappy and lightweight it feels when being still quite
feature complete.
And it supports Firefox sync out of the box so you can migrate most, if not all of your
Chrome settings over to Firefox sync service.
They let you import, by the way, and it blows away all of the other browsers.
By the way, it's great for video playback now, but for a while I've had to choose between
X11 and smooth 4K video, but a choppy desktop or Wayland with a smooth desktop, but drop
frames on video playback.
I no longer have to choose.
Epiphany can handle multiple 4K streams running in different tabs on different monitors on
Wayland, and on an integrated Intel GPU, no less.
More than that, I tested my quiet profile on my XPS 15, which disables turbo boost and
maxes my clock at two gigahertz, and I had no slowdowns, not one drop frame.
And it has an unobtrusive UI that gets out of your way.
I could go on, but the bottom line is if you haven't tried Epiphany recently, give it
a chance over the weekend.
I think you're going to be really surprised.
Wow, it really sounds like it's already been Chris tested there.
I agree that, you know, where he's got me is the Firefox sync.
That to me is a killer feature because I like having, I'm a two browser kind of guy.
You know, I don't just stick with one browser.
I got to have multiple browsers.
I could even be a three browser guy.
It's just a lot of effort.
So I stick with two browsers primarily, and that's generally, I divvy up like work or
different account stuff between the different browsers, or if one browser is better at doing,
you know, a Google app or something, I'll use that browser.
But the downside to that is there isn't something like X marks anymore that would sync my Chrome
browser with my Firefox browser.
So I end up having some bookmarks or some whatever extension history, whatever it is,
something in Firefox that isn't in Chrome or vice versa.
And it, it stinks.
This would solve a lot of that, and it would give me that, that two browser lifestyle that
I prefer while completely cutting Chrome out.
And I don't know if I'm there yet, but I like that this is there as an option, and I think
I am going to start using Epiphany a little bit more.
Try it out.
It's probably an option I wouldn't even thought of.
I mean, despite having easy access to it, but to hear that it performs so well and,
you know, is up to stuff with modern CSS and JavaScript features, I guess, why not?
Danny Mac, you point out that it has a really handy app mode.
It really has.
So I'm using Epiphany or Nomweb as my default web app browser, so I have a lot of sites
that I use like Gmail or everything like that.
I lose it in app mode with its own icon.
It shows up in the program list and everything.
And you know that it has a profile separate, stored separated.
So if you have a password, something is separated in a different profile, so it's really handy
and it's really lightweight, so you can have multiple of these apps open and really, really
love it.
It's a good alternative to the Chromium app mode or the Google Chrome app mode.
That is a good tip.
I think I knew that, but I think that's one of those things I've totally, totally forgotten
about.
While we are in this kind of community discussion section, I wanted, and I've been trying to
think about how to bring this up on the show because it's pretty supercharged.
Drew DeVault has a blog that we've covered before on the show.
Drew is a developer behind Sway and has a lot of experience working with Wayland.
And he wrote a post that is titled, I am tired of this anti-Wayland horseshit.
And I'm going to read parts of it.
I'm going to censor some of it because I want this to be available to kids as well.
But he starts with, what do anti-vaxxers, flat earthers, 9-11 truthers, and anti-Wayland
activism all have in common?
All of them are characterized by a belief rejection of facts to embrace a narrative
of victimization by a vague authority.
In the case of Wayland, the vague authority are a bunch of volunteers who have devoted
tens of thousands of hours of their free time towards making free shit for you.
Wayland sucks is a conspiracy theory with no basis in truth, and its supporters have
spent years harassing Wayland maintainers, contributors, and users.
It's time for this to effing stop.
He doesn't say effing though.
A little more explicit in the full post.
Maybe Wayland doesn't work for your precious use case.
More likely it does work, and you've swallowed some propaganda based on an assumption which
you might have been correct seven years ago.
Regardless, I simply don't give a blank about you anymore.
I've tried appealing to reason and rationality and trying to debunk each lie that some Wayland
detractor flavor of the week is touting to toe the party line, but it hasn't worked.
So my new approach is eff you.
None of the Wayland detractors have a clue.
They don't understand Wayland, they don't understand X11, and they don't understand
Linux Graphics or OpenGL or Vulkan or anything else in the stack.
They don't even understand what it's like to use Wayland because at most they might
have spent five minutes installing it, realized that something was gasp different than X11,
and then uninstalled it and wrote their angry Reddit comment.
This is a great reason why I advocate for developers and content creators to never read
the comments.
I think this entire rant was triggered by some comments on Hacker News and obviously
some comments on Reddit.
And you can tell Drew's really, he's burned out here.
He's really kind of sick and tired of the armchair comments that kind of just repeat
crap that has been said online a thousand times.
And we've all seen it, experienced it in some form or another.
But this obviously isn't going to serve to improve the situation.
And I think unfortunately, and I'm going to leave it to the listener to read the rest
if they'd like, because it actually gets even more incendiary as it goes.
But the key point here, I think, the key takeaway is don't be a dick to maintainers and it's
hard on their mental health.
And I think this demonstrates it right here in front of all of us.
I think it's unfortunate though that Drew will be associated, these comments will be
associated, rather Drew intended or not, with the Wayland project and Wayland developers
in general.
And it'll be generic and it'll just be nebulous as part of the Wayland developer attitude.
That kind of stuff, those sort of associations happen with these sort of posts.
Wimby, I noted you're still here and I'm wondering if you have any thoughts in general on pushback
around Wayland adoption and where Drew's coming from.
Do you feel he's got a point or do you feel that he is essentially seeing it as too black
and white?
No, he's got a point for sure.
I mean, it's been a while since Ubuntu last tried on Wayland to see if it worked for them.
I think it was 2017 and you may have seen that we're implementing Wayland by default
in 2104 because some of those issues from a few years ago no longer exist.
So now's the time to make the change.
And Drew's comments about X11 are inflammatory but accurate.
We can't continue to kick that can down the road.
Each time Ubuntu chooses to stick with X11, Canonical and the desktop team are basically
taking on the maintainership of X-specific bugs in Gnome Shell, for example.
And we can't continue to lift that on our own.
So it's better to be a part of a whole and a group moving forward together.
Yeah, that I totally agree with.
And it is getting so much better than it used to be.
And I was really, I was really happy to see that the next release is going to try it again
of Ubuntu is going to try Wayland by default.
I was also extremely disappointed because the guys talked me out of making that one
of my predictions for 2021 and I was sabotaged.
So I was also upset.
Yeah, I know.
Here we are in February and already you've been, you've been scuppered by your own team.
I know.
How unfortunate.
Pipewire's baked in now already to 2104.
Oh, see, now you're talking my language.
Because also I think sticking with Gnome Shell 338 is also going to be a feature, but we'll
get there.
We'll get there.
I'm going to leave this, I'll leave this link to Drew's post.
Again, it's not, it's not Drew R. Drew who comes on the show and edits.
It's, it's Drew Duvall, the Sway developer, not, not R. Drew.
Different Drew, same first name, different Drew, just want to make that disclosure, disclosure.
And I guess buy a Whalen developer a beer when we can start seeing them in public again,
because they are doing the people's work here.
It is a great experience.
And with a few exceptions, I run it at least, you know, on a couple of my machines and the
ones I don't really are the one that has an Nvidia driver.
That's sort of self-evident.
And I don't think my desktop at the moment with plasma, with the multiple monitors, I'm
not generally having a great Whalen time, but it's getting really close and the projects
are doing a lot of work.
Plasma 521 is putting a ton of work into that.
Good Home Shell has been doing so for quite a while.
So the situation, the situation is, is changing, but it, it, if your assumptions are, it's
sort of like, you know, the same thing we run into with ButterFS.
If your assumptions are from your experience from a few years ago, then you're kind of
out of date and you kind of need to, you know, the thing, the things keep improving.
The code gets done.
More people, more people join.
One last email before we move on and talk about GNOME 40.
Ed wrote in, he says, Chris and Wes, you talked about Ventoy last episode, which is that USB
solution that lets you just drop ISOs on the USB thumb drive and then it'll boot any of
those ISOs.
Wes and I have been using the crap out of that already.
No kidding.
He says, thanks for featuring it.
I've been using it for a few months and I think it's a great program, but you guys actually
told me a few more things that I knew you could do with it.
I want to give you a tip.
I first tried it with a normal USB thumb drive.
That's what Wes and I are doing.
He says it works, but I decided to grab an M.2 SATA SSD that I had laying around that
I could install into a USB 3.0 stick and boy, do I see a difference in boot times.
So he links us, we'll have a link in the show notes for this, to an enclosure that is a
USB, it's a big, it looks like a big thumb drive, but you stick an MVME SATA disk into
there.
That's important.
It has to be SATA compatible, but you install that into there and then close it up and it
becomes essentially a super fast thumb drive and it looks really like a great solution
for booting.
And I was, I've been running Gnome Shell 40 a lot and I've been doing a lot of live sessions
to get there and the speed has been something that I have not been satisfied with.
So I picked this up because the price is actually, is really quite reasonable.
So we'll put a link to this and the SSD that I got.
The drive itself is $15.99, 16 bucks for this thing and you just pop it open and you put
the MVME SSD, SATA SSD in there and you're off to the races and it just shows up as a
thumb drive.
So I paired that with just a cheapo $32, so it's not like it's a performance monster,
but it's faster than a USB thumb drive, a $32, 256 gigabyte SATA M.2.
That is plenty for all of the VMs and ISOs you can name.
For sure.
I'm just thinking, Ed, that's a great tip.
And so I wanted to pick it up before a bunch of the audience went and bought one and they
went out of stock.
Yeah.
You know, we should also mention too that just Ventoy can do so much, like yes, it's
good for this, yes, it's also good for, you know, if you get fancy with SATA and SSDs,
but you can also use your little USB to boot from files or VHDs or raw image files from
a VM that are directly on your hard drive, just on your main hard drive and they've even
got a nice little thing you can chain load in your bootloader if you don't want to have
to have an actual Ventoy USB involved at all.
So there's a ton of options included in that project.
That's more for us to play with.
Odear.
Odear.app used promo code Linux for a $10 discount on any plan.
Odear was co-founded by the author of the Cron.Weekly newsletter, listener of the show,
a community member, just a great example of somebody who I think is a perfect sponsor
because they're from the community offering a product to the community.
It's complete website monitoring from multiple locations and it goes deep into the site with
broken link and mixed content detection, advanced SSL reporting.
It'll watch all aspects of your site for performance.
It'll give you an idea of performance is trending downwards or give you a snapshot of a certain
point in time.
Of course, the idea here is to be the first to know if your site's unavailable.
Before your users or your customers, you want to know.
So Odear has global uptime checking with servers worldwide that report a problem from around
the world whenever they see it.
And that deep checking means that if something shows up on the site that you may be broke
because somebody else that you link to went away, you're going to find out about that
kind of stuff.
But something that makes Odear very special is their API and lets you configure everything
about the application.
They have a great dashboard, but what's even better about it is everything you see in that
dashboard can be controlled with an easy to use restful API.
And as a bonus, all the changes you make via the API show up immediately in the dashboard
because they've built it around that.
The idea is they wanted to embrace automation.
So they made a feature complete restful API, and they paired that with kickass documentation.
So you can embrace automation with Odear monitoring.
And that API also means there's already a lot of third party integrations that are totally
possible and ready to go, a CLI client, Telegram chatbot, JavaScript SDK, Terraform provider,
which come on, how great is that?
Talk about building into your automation.
So right now, head over to odear.app and start your 10 day, no strings attached trial, no
credit card required.
You can get set up in less than a minute.
And then when you do sign up for a plan, use the promo code Linux for a $10 discount.
And if they ask you via email or something, or when you're chatting with support at some
point, tell them you heard about it right here on the Linux Unplugged program.
It's odear.app and this promo code Linux for a $10 discount on any plan, odear.app.
So we've been trying to wrap our heads around how to talk about GNOME Shell 40 because it's
a pretty big change.
And in retrospective, I kind of understand why they are calling it GNOME 40 and not GNOME
4.0.
They wanted, I think, the space.
It's kind of like when Star Trek Discovery went 1,000 years into the future, they needed
the canon space to do what they needed to do here.
But with that means that those of us who have used GNOME Shell in its current iteration
for a long time are going to have our workflow changed.
Primarily it's this horizontal workspace.
That's the main change that we're going to be talking about today.
There's other improvements.
It's looking like in a lot of ways a very good release.
The team is really coming together.
Canonical even though they're sticking with GNOME Shell 338 in their next release is still
working upstream.
They're still contributing patches upstream.
Right.
It's not like they're going to stay there forever.
It's just going to take a little while before that all gets integrated.
But what's been recently merged now, and so we've had a chance to actually play with it
because the great thing about, quote unquote, journalism in open source, and I think more
people should be doing this, is we can get our hands on the code.
A lot of times it's in a state where we can build it and we can try it ourselves.
We can go beyond just reading what people write about it.
We wanted to try it.
Wes and I did just that.
There's various methods to get it up and running at this point, GNOME Shell 40 with a new UI.
We both used Fedora as a base.
I used Rawhide and then a script that Wes found, I think from the GNOME team, to build
the latest GNOME Shell 40 on top of Rawhide.
And Wes, I think you did it via copper at one point, and then you also did the build
script as well.
So you had a pretty fresh install.
Yeah.
There's a couple of things.
I think early on there was a copper that got some updates to it.
There's even now just a VM image you can boot and use out there, so we had to go the hard
way.
We went from the latest Fedora, pulling down the development right out of the repos and
building it.
And thankfully, since a lot of this stuff happens on Fedora oftentimes anyway, you can
just use DNF to install the build depths.
That takes care of a lot of the complexity for you and just run the Ninja and away you
go.
Yeah.
And you are Ninja Go.
The changes are significant enough that I thought it was appropriate to try it on hardware,
but while there is a way to get it working on VM, it just felt like this needed to be
experienced with hardware.
I wanted to try it with multiple monitors because I think that's one area that this
needs a lot of discussion.
And so that was the route I took.
So a lot of this code's just really fresh, and there is more work being done upstream,
but there are ways to try it out right now to see this new horizontal workflow.
And I'm going to provide in the show notes a link to a very short, like 28-second video
I put up on our PeerTube instance of my three monitor workstation so you can get a visual
of this.
That link is in the show notes, and you can see what that looks like while we're talking
about this.
Because it's a hard thing to explain, but if you can picture the way the elementary
desktop works, or not the same degree, but the way the Mac OS multiple desktops used
to work where the desktop zooms into the background, the dock comes up from the bottom, a search
launcher along the top, and then your workspaces are laid out horizontally to the right.
And they are dynamically generated as you launch applications and place them on there.
And this is all demonstrated in that PeerTube link.
And also, our buddy Carl did a great job of writing this up in what I think was just sort
of started as a bit of a tweet vent, but actually developed into some solid observational feedback.
And Alan Day got involved on Carl's observations about where GNOME Shell 40 is going.
And what I love about this, Carl, is you are through and through a GNOME guy.
I know you've been using it for a long time.
You've often rolled with what the project is doing.
This is the first time where it's kind of, they're changing the default and it's leaving
you behind.
And you're one of those particular, a thorn in the sides of the GNOME developers because
you're doing this thing where you want your virtual workspaces to span all of your monitors.
By default, GNOME Shell leaves your second or third monitor static, and only the primary
display actually changes workspaces.
But you can change that.
Until now, that's kind of going away because it just sort of falls apart.
So Carl, I think you do, I should let you explain it from here because you did such
a great job on Twitter.
But can you kind of break down what the problem is and kind of why you feel like you're being
left behind as a GNOME Shell user?
Sure thing.
I mean, you already summarized it really well.
Not sure what else I can say.
Oh, did I?
I thought I was, I thought I struggled, so I'm glad I kind of got it right.
No, that's it.
I mean, like I said, I like GNOME a lot.
I've used it for a while.
I was so, so to it in the GNOME 2 days.
GNOME 3 was weird at first, but eventually after I started trying it again, I was like,
okay, I see what they're doing.
You know, they got me hooked on the vertical workspaces and now they're taking it away.
Why vertical?
Why vertical instead of horizontal?
So for me, I'm a multi-monitor guy.
I use three monitors spread horizontally across my desk.
And whenever you have three monitors horizontally like that, physical monitors, adding a new
virtual workspace vertically just gives you rows of three underneath each other as you
keep adding them.
So you just get this three by whatever grid of however many virtual workspaces you have.
But in the horizontal layout, they get added side by side.
So you go from a one by three to a one by six to a one by nine to a one by 12.
And it just quickly, I mean, I routinely have five to 10 virtual workspaces going for different
tasks that I'm doing.
And I like having three fresh displays every time I start a new workspace up.
And now that just gets very unmanageable very quickly.
Yeah, it gets really kind of awful too on my setup where I have three displays and two
of them are vertical and then the center is horizontal.
When I start to get multiple desktops, it's really awkward to navigate.
This to me doesn't really like disrupt my workflow because I switch desktops all the
time.
I'm used to things changing on me.
But it does seem like a bit of a downgrade in overall efficiency.
And I know, Wimpage, it's great that you're here today because I know that Canonical was
looking at this for the next release of the Ubuntu desktop and decided not yet, not no,
but not yet.
Yeah, and that decision has nothing to do with the design changes as it happens.
Oh, really?
I thought it was actually 100% about the design changes.
No, it's not.
Well, aside from GTK4, right?
So, you know, it's not to do with the design changes at all.
It's to do with where we are in the release cycle and when feature freeze happens for
the next release, which is later this month.
And there's simply not enough time for us to do the main inclusion request processing
for the new stuff that needs to be in the main archive, which has to be security reviewed
before we can introduce it to meet our deadlines.
So we're purely putting it off because we can't get there in time.
And in fact, I met with the Yuru team last night to discuss GTK4 and GNOME 40 and some
of the design changes and how we could accommodate all of that.
And they were very clear that it was business as usual.
This wasn't going to present any major road bumps.
So yeah, our move forward is for very different reasons.
Curious what your personal opinion is about the design change.
So I was quite fortunate to be invited to a session with the GNOME Foundation at the
back end of last year.
They recently commissioned some user acceptance testing to look at a number of different prototypes
and different ways that the GNOME shell had been presented to users in different distributions
to sort of inform some of the changes that they were going to make in GNOME 40.
So it's really good to see that, you know, the changes that they are introducing have
been sort of, you know, user tested and there is data to support the direction that they're
going in.
Now, from a personal point of view, the business of switching workspaces and leaving a screen
behind, I'm really not a fan of.
I know that's a configuration option right now.
And it's a configuration option that I personally enable.
But you know, in the great scheme of things, I think the direction that they're going in
is is a wise one.
Certainly they've got data to support what they're doing.
I could see how spatially it makes more sense for new users because you see it laid out
and everything's next to each other and you're kind of moving to them.
What I don't like about it from an efficiency standpoint is with the current vertical stack,
you can see everything in the overview mode.
You can see all of the desktops at once.
That goes away with this.
But additionally, it scales a lot better when you have multiple screens where this really
falls apart.
Say you have three monitors.
You have like three squares you have to move through to get to the new desktop.
It's it really kind of doesn't scale properly.
And I think, Carl, there's two issues here.
The issue is workspaces should be spannable across multiple monitors, which right now
they're not designing for.
Right.
That's not the default setting.
That's issue number one.
Right.
And the question there is, are we ever really going to see traction on that?
Because it doesn't seem like Fordy's being designed at all with that consideration.
Right.
And the thing that gets me, I know they're doing a lot of user testing with this, but
I honestly I'm speculating here, but I don't think that they're doing any user testing
on multi monitor, at least.
No, they're not.
Yeah, that's a that's a huge oversight in my mind.
There is a reason for that as well, which was explained, which is that they did the
user testing remotely and there's no way to simulate multi monitor user testing under
remote conditions.
So it was a known sort of gap in the way that they were testing things.
That's unfortunate because even using sort of the latest builds, I'm not going from copper,
I was building it and there's pretty obvious bugs moving stuff around in multi mon.
It's not smooth yet.
And I understand it's alpha and I actually have every confidence that a lot of the stuff
will be worked out.
It's a really solid, you know, it's it's it's changed, but they're going to they're going
to fix it.
But it is troubling when I hear that, that it's not being tested on multi monitor is
a major shift and to and to make that major shift without the user testing experience
of a multi monitor, that's going to leave a large portion of the of the user base just
out in the cold.
Yeah.
Yeah.
Just so that we're clear, Carl, that's really two main issues again.
One is workspaces that span all the monitors.
But what's the second issue here?
From what Manuel, one of the known developers was discussing on Twitter with me about he
says that, you know, that is one issue, just the desire to have workspaces span across
all monitors, which, to be clear, that's not a default.
That's something you have to go in with either tweaks or decomp settings and change.
The other thing is once you do enable workspaces across all monitors, things are messy in the
horizontal layout, because by default, the horizontal layout isn't a problem and it works
well for them.
So they kind of want to classify it as two separate problems there.
And I can kind of appreciate that when just trying to break it down from how do we address
this?
And that may actually be the first part of figuring this out.
Right.
Yeah.
Establish that there is value in having, you know, spanning workspaces across all monitors,
not just as a hidden decon for gnome tweaks setting, but something that perhaps is even
right directly in gnome settings to allow people to do and set up.
I'd even take something in gnome tweak, put it in tweaks.
I guess the reason that Carl and I were, we were talking about this off air and I thought,
you know, after chatting with him and after trying it myself, I think the takeaway we
have is if you're on a laptop or you're a single monitor set up, it's probably not going
to be a big change for you.
If you're on a multi monitor set up, this first release may be one to sit out and stick
with gnome 338 and upgrade to gnome 41 or 42 when they get some of this other stuff
worked out, because I tried it here on my ThinkPad and it's actually really not bad.
It works pretty well.
It does, I feel like it's, it's a bit of a loss because the way I could move windows
around it was like a much smaller and it doesn't quite work right and it seems a little buggy,
but I can see where they're going with it.
And on a single screen on a laptop, it's pretty usable.
Yeah, same.
That was kind of my experience.
Like, okay, yeah, I could get used to this on a single screen.
I mean, that would be, I would have forgotten about it in a week's time.
Yeah.
On multiple monitors though, this is where we kind of wanted to put a bit of a disclaimer
and say, hey, you might want to think about skipping this one.
But it's not to, you know, to be disrespectful to the gnome team or anything like that.
It's just having tested it.
I think that's something you guys should know about.
And we all have links to all this stuff so you can see what the hell we're talking about
and get a visual when you're listening to this in the show notes there.
I'm sure they'll get it, right, Carl?
I mean, you, you, you see the thing with the gnome, with the gnome shell team is like they,
God, I feel horrible even like criticizing them because I know eventually they're going
to work it out.
As it is right now, it, it just doesn't seem very usable, but I have the faith, I think.
I want to have faith.
Yeah, exactly.
I definitely think they have good intentions and I can understand a lot of them have mentioned
how the, the gesture support in gnome 40 with a touch pad on a laptop with a single screen
is so good.
They can't go back.
And I can understand and respect that that's something that a lot of people will find valuable,
but the multi-monitor thing is just at some point you have to realize that that is, I
don't know, maybe the best possible outcome is that they actually make optional vertical
workspaces, not just an extension, but like a built-in native supported thing where you
choose, do you want them horizontal or vertical?
Minimac, perhaps they could take inspiration from another desktop environment.
Yeah.
We were laughing about in the pre-show, there is always a solution and it's called enlightenment
because enlightenment has that for decades because it treats the desktop.
Every screen is treated independently and that is so gorgeous.
I can have four virtual desktops on my left screen and three on the right one, and I can
just skip these workspaces just on the left screen and on the right screen independently.
That would be the solution, right?
That would mean you would have to rethink gnome shell, that it treats the screens independently.
So imagine you would have just these possibility as you have now in, apparently you're having
in gnome 3.38, that you can just have a window overview for your left screen and the window
overview for your right screen.
That is so gorgeous and enlightenment has that for decades and that was my primary thing
because I switched to enlightenment.
A point that you, of course, wanted to make sure we did not miss.
So thank you for adding that.
And of course, I think, Carl, I'm supposed to tell you to try plasma.
Has that crossed your mind?
I still haven't seen any way to do dynamic workspaces in plasma or enlightenment or any
other desktop.
If I'm missing something, please let me know.
I'll try other desktops.
I like gnome, but I'm not married to gnome.
If there's something else that does it, then I'm all ears.
You just got to preallocate like three times more than you'll ever possibly need.
Just get a giant grid.
That's right.
There you go.
That'll take care of it.
Hashtag Marte desktop.
Oh, yeah.
Also, I think just to allay concerns, Ubuntu Marte remains under your stewardship with
this transition, right, Wimpy?
Yes, indeed.
That is my passion project.
It's the thing that I love doing in my spare time and I will continue to do so.
That's good to hear.
All right.
Now, before we run and before we update, before we get an Arch server update.
It's not the distro.
It's how you use it.
I want to mention that if you want to follow your stonks in the terminal, we've got an
app pick for you.
It's called Ticker.
It's a terminal stock ticker with live updates and position tracking.
Why wouldn't you want to have that in your drop-down terminal?
It's not written in Rust, is it?
Because that would be really perfect, but it doesn't look like it is, unfortunately.
So we won't be able to play the Rust horns.
It does look like you could probably run it in Docker.
So I mean, maybe if we had some sort of...
It is written in Go.
That's got to be a close second.
Okay.
I just don't have any theme music for Go.
Yeah.
Yeah.
Also, it'll track cryptos, I believe, as well.
So if you're investing big in the Doge over there, like Wes Payne is, you can keep an
eye on that as well.
We had to.
I mean, with all the news going on, that had to be our pick this week, right?
You need a nerdy desktop terminal client to keep track of things.
Yeah.
If you don't have an option for every possible single use case so I can avoid a web app,
what are we even doing here?
I want to say a special thank you to the scientifically confirmed most awesome people in the world.
That would be our Unplugged Core contributors at unpluggedcore.com.
Keeping this show indie, helping us reduce the ad load, and getting yourselves not one
but two different feeds.
Limited ad feed, just the same full production, but limited ads.
So it's a little bit shorter runtime.
You get just what you want in there.
Not a little bit too much.
I appreciate.
I appreciate the busy, busy core contributor, and we value their time.
If you're on the other end, maybe you want a little more content.
Maybe you like the bootleg kind of music.
You're one of those people.
You like the live tracks, well, that's feed two.
Live stream.
All our screw ups.
All the stuff that Joe cuts from the show, because thank God he makes it sound better.
But we leave it in for you.
Transparency is the name of the game with full pre and post shows.
It's basically an extra show.
It's right there.
You just don't even know about it.
So I'm jumping around the room.
I'm so excited about it.
It's unpluggedcore.com.
And I think if we could get 15 new members for next episode, I'm going to get Wes Payne
to drink three beers before the show.
That's fair, right, Wes?
That's fair.
Yeah.
All right.
I will sacrifice my body for the show.
I think that's a bad idea, because I had three beers before this show, and I've been
having to dash to the toilet.
Oh, there is that.
Yeah.
Yeah.
Yeah.
Well, you know, we'll just give him a wireless mic.
Right?
Yeah.
Podcast from the potty.
Yeah.
I know how to mute appropriately, I think.
Yeah.
Yeah.
It's all about appropriate muting.
Exactly.
Like a pro.
All right.
Well, I want to mention you can join us live.
You may hear us mention mumble rooms and chat rooms and stuff like that.
Well, we do this show live every single Tuesday at noon Pacific, 3 p.m. Eastern.
See you next week.
Same bat time, same bat station.
And wouldn't it just be great if you could join us for that?
So do make an effort one of these days if you can, or maybe on a Sunday.
We just love hanging out with you.
It really it really does feel like one of the happiest, best communities on the Internet.
And we'd love for you to be a part of it.
Thanks to everybody who goes over to linuxunplug.com slash contact and sends in feedback or tips
to the show, helping it make it better that way as well, or shares it with a friend.
All of that is very, very much appreciated.
The entire network of Jupiter, Jupiter, Jupiter, Jupiter broadcasting.
Easy for me to say.
Jupiter broadcasting shows that's over at Jupiter broadcasting dot com links to everything
we talked about today as at linuxunplug.com slash three nine one.
Thanks so much for joining us on this week's episode of the unplug program.
And we'll see you right back here next Tuesday.
All right, everybody, let's go pick our title.
JBtitles.com
JBtitles.com
Head on over there.
There's only one place to vote.
JBtitles, JBtitles.
Now you all got to go boat.
Hey, Wes Payne, just real quick.
Just curious, how did it how did it go over there?
We are back online.
So the update was done.
Yeah, flawless.
ZFS mounted.
No problem.
Yeah.
Docker containers are up.
I'm right back on the box.
So that's pretty anticlimactic then.
Well, congratulations.
I will say we didn't have any ZFS updates this time.
So that kept things simpler.
Ah yes.
And that's because the AOR package has been flagged out of date.
There's been actually just a point release out I think today or yesterday and another
one a little bit earlier this month to two point zero point one and two point zero point
two.
That was from yesterday.
So presumably those will be there soon.
And maybe we can do this whole thing again next time.
