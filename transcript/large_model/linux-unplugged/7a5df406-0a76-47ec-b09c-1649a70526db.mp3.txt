It's a Linux-unplugged birthday party.
Slackware has turned 25.
No, no, no, they didn't turn 25 before.
I know, we all thought so, but it was originally released,
version 1.0, on July 17th, 1993,
and its founder, Patrick, originally never intended
to do a Linux distribution.
He just wanted to help out Softlanding Linux,
but you know how things go in the open source community.
It's the oldest distro around,
and it's been very influential.
The earliest releases of Soos Linux were based on Slackware.
Distributions such as Arch Linux can see their
philosophical heritage back into Slackware.
It's been around for a long time.
So for this episode only,
Wes and I are running exclusively on Slackware.
I mean, since we did that whole Slackware experiment,
I just have never gotten rid of it.
It has its own little place on my hard drive.
We've never gone back.
Right next to Gen 2, no doubt.
Ooh.
Ha, ha, ha, ha, ha, ha, ha.
This is Linux Unplugged, episode 258 for July 17th,
2018.
Oh, welcome to Linux Unplugged,
your weekly Linux talk show
that's loaded for bear this week.
And I'm not so sure if that's a good thing,
but we have so much to get into
that maybe you won't even notice.
We'll come around to how SSH got its port number.
We'll talk about Chrome using a little more memory,
but then we'll dig in to some crazy projects
that are going down this week.
I'm talking stuff that we've been meaning to get to
for months now that are finally making it into the show.
Plus some ideas that I'm not so sure are fully cooked,
but we'll run them past you guys and see what you think.
We've got an update on the Atari VCS and the Librem 5.
And then towards the end of the show,
after we've gotten through some app picks
and some community news, we have a question.
This is in light of Python's benevolent dictator
for life stepping down.
We covered that on Linux Action News this week.
And I thought maybe we could use the context
of that situation to talk about a broader topic.
What happens when Linus steps down?
What happens to Linux?
What happens to the structure?
Where does that go?
Does it go to Greg KH?
Does it go to the Linux Foundation?
We'll talk about that.
And then we'll also discuss maybe
how other open source projects could learn
from what happened with Python.
We'll do a quick recap too, just in case you didn't hear that.
So Mr. West, we're fully loaded.
It's just you and I this week.
No, no Brent.
No Brent, he's ditched us.
But I think he might've been intimidated
by just how much show we've packed in here.
I was scared myself.
Yeah, it was either that or it was the man eating clams.
I'm not sure, it was something to that effect.
But I think after the show, we'll head out
and see if we can't find him and save him
so we can make it back.
But we do have a mumble room and they're here.
Time appropriate greetings, virtual lug.
What's up?
Good evening.
Hello, oh, you stop it you guys, you stop it.
There's so much to get into this week.
I don't even know where to start with it.
We have a bunch of community news.
It's good to see some familiar faces in the mumble room.
Daniel Foray made it back, even though,
I mean, I thought he's busy working on elementary OS.
Dan, how'd you make it here?
Aren't you supposed to be busy?
Oh, you know, taking a break.
That's my nice way of thanking you for being here really.
You know, I'm nice to my guests, what can I say?
All right, so we have much to get into, so much to talk about.
So let's start with the one that I thought
was kind of just the most interesting.
I'd never really known the story about how SSH got its port
and the author wrote it up.
And I wanted to relay it to you guys
because it's fascinating how SSH received
its port in the spring of 1995.
The author starts with, I designed SSH to replace
both Telnet and FTP, Telnet being on port 23
and FTP being on port 21.
Port 22 was free at the time, and it sat conveniently
between ports for Telnet and FTP.
I figured having that port number
might be one of those small things that would give
some extra credibility to SSH.
But how could I get that port number, he writes.
I had never allocated one, but I knew somebody who
had allocated a port before.
The basic process for port allocation
was fairly simple at that time.
The internet was smaller, and we were in the very early stages
of the internet boom.
Port numbers were allocated by the Internet Assigned Numbers
Authority, which really at that time,
run by John Postel and Joyce K. Reynolds.
Among other things, John had been the editor
of some minor protocol standards you may have heard,
such as IP, ICMP, and TCP.
And he was a little intimidated by that fact,
but he built up the courage, and he wrote an email to John.
And he wrote in July of 1995, dear sir, just before,
just like a week before the announcement of SSH,
dear sir, I have written a program
to securely log from one machine onto another
over an insecure network.
It provides major improvements in security and functionality
over existing Telnet and R login protocols
and implementations.
In particular, it prevents IP, DNS, and routing spoofing.
My plan is to distribute the software freely on the internet
and to get it as wide of use as possible.
I would like to get a registered privileged port
number for the software.
The number should preferably be in the range of 1 to 255.
And then he goes on to notice, I am currently
using port 22 in the latest beta test,
and it would just be great if I could just keep using that.
The service software name is called
SSH for Secure Shell, sincerely yours.
And then it looks like the next day, almost within just
a couple of hours, but I think it was a different time zone,
Joyce writes back, we have assigned port number 22 to SSH,
and we've marked your email address
as the point of contact, Joyce.
And that's it.
On July 12, 1995, at 2 AM, the final beta of SSH
was announced using port 22, and it
was one of those small touches that he believes
helped it gain credibility.
And it's such a simple, easy, elegant story.
Like, it's not this big corporate explanation.
I guess I always thought it was like a big standards body, Wes.
I made that assumption.
Where are the forms filled out in triplicate
and the months of procedures before you
can get anything approved?
I don't see that here, and it's very confusing and kind
of heartening.
Yeah, it's just a simple email.
Dear sir or ma'am, to whom it may be concerned.
And the response email is so short, too.
Just like, yeah, no problem, 22 is yours.
And we just added your email address, no big deal.
Makes me think of the Steve Jobs quote in Steve Jobs' book,
that when you realize the world around you
is just made by people, it's just two people emailing,
and yeah, that's fine, let's do that.
Yeah, yeah, everybody's just as smart as you.
I think it also sort of harkens back
to that era of the internet when if you were on the internet,
you probably had an email and you
used it to correspond with real humans,
not just receive junk mail or ads in your inbox.
So it's kind of quaint in that respect,
like that you don't have to be all your guards up.
You can actually communicate.
Yeah, quaint is a good way to put it.
It's like, aw, it's a simpler time.
It was so easy back then.
And it's fascinating, the launch of projects
like Linux and SSH and many, many others, the just blatantly
humbleness of the like, I think this could be a good thing.
Maybe it'll replace our login and telnet.
You know, it helps fight against DNS spoofing.
And I think that's kind of a good thing.
And now it's like the underpinnings
of how we administer all of these systems.
Like SSH is so pivotal to what we do now.
It starts so humble.
I think that's fascinating, just like Linux itself.
We have some books we could talk about.
Maybe mention those right here at the top of the show.
The Humble Bundle folks have a Humble Book Bundle.
And it's the Linux Geek Bundle by Non-Starch Press.
So they have a whole bunch in here that you might
want to go check out, including Perl one-liners,
The Art of Debugging, The Book of GIMP.
That's kind of cool.
The Book of Inkscape, that's also very cool.
Blender Masterclass, oh, I might just
have to pop on over there.
How Linux Works is probably just a good one to page.
Oh, Absolute OpenBSD, who would ever want that?
I don't know about that.
Think Like a Programmer, the Linux Programming Interface,
that's awesome.
So there you go.
Humble Bundle, I'll have a link in the show notes
if you want to check that out.
It's got 12 days as we record this.
You know, we think a little bit too much about our desktops,
things that we have like bookshelves in our home.
Make sure you have a robust e-bookshelf, too, though.
And these will really stack the deck
when you want to open up your browser
and look really smart in front of your friends.
Yeah, when you want to open up the browser
in front of your friends, because that's something
you do all the time.
Well, I don't know about you, Chris.
Hey, guys, come over here and look at my browser real quick.
You know, just get a really big monitor.
If only the e-book market wasn't taken over
by one single proprietary source, RIP.
RIP.
Now, I wanted to just give a quick mention, just
an update on everybody.
I am still down here in the Tejas, Texas.
And boy, was that a mistake.
Holy crap.
I have learned a new kind of hot.
112 degrees outside right now.
The National Weather Service has just
issued a warning for the next two days.
The dead of night, it's going to be like 86 degrees.
It's intense.
But boy, have I been having a blast.
So Linux Academy has been doing these live streams
where they're like doing giveaways and launching
new content.
So I've been hanging out for that.
They put me up in a hotel.
So it's not like I'm not having to pay for it out
of my pocket or anything.
So they put me up in a nice hotel.
And I decided to stay here because they just
had me give a talk a bit ago at their summit.
They have a company-wide summit here
that most of the company is at, and had
me give a talk on community and leadership
and contributing upstream.
They're working on something that I probably
can't say what it is that will be a big code
project that they're going to start contributing
to open source upstream.
And they're getting ready to try to figure out,
try to learn how to do that, and how to position it,
and all of that.
Wow.
That's really exciting.
It is.
It's really neat to see them do that.
They've, the other thing that they've talked a lot about
at the summit is they've had a program in place
where it's like choose your own weapon.
So you come in and you say, I'd like a Chromebook.
Or hi, I'd like a MacBook.
Or hi, I'd like a Linux box.
And you just picked whatever worked best for you.
But now what they're doing is to try
to encourage people to pick more Linux boxes.
They're setting up a little Linux support group,
like people that are also, not like support in terms
of technical support, but like support group.
And like, hey, I'm switching and I don't know how to do this.
So they have a little internal group that helps everybody
figure that stuff out.
And so that's pretty neat.
Seen a lot of gnome shell here at Linux Academy,
which I'm not too surprised by.
I don't think I've seen any Plasma desktop yet.
So I don't know if I can leave just yet.
I may have to stick around until I've converted a few people
over to the Plasma desktop.
Yeah, if you join that group, you can just sort of be like,
oh, no, that's just a gnome problem.
If you install this other shell, it works way better.
Oh, man, that's so insidious.
You troll, you.
I'm trying from the top.
So I'm trying to get the CEO switched over to Kubuntu 18.04.
And then once I get Anthony on Kubuntu,
I'm going to set him up with LatteDoc.
Because the other thing I've noticed
is when people see my Plasma desktop setup,
they are, you know, it's like the old days when
I used to have Compiz and Barrel.
People used to be like, oh, what's that?
And in my IT department, then they started trying out Linux.
And it's why I actually became a big fan of desktop effects,
not because they had any practical effect
other than they helped me switch people to Linux.
And so I was all for it.
Same thing now with my Plasma desktop setup,
which does look good on that XPS 13 with the Infinity
edge-to-edge display.
It's 4K.
And I got a high-res background.
And then I got LatteDoc going.
And I got a dark theme going.
And so I was showing Anthony, I'm like, yeah,
this is how you can make it look.
And this is pretty nice, right?
I'm like, this is LatteDoc here?
He's like, I'm doing that.
So you'll see.
I'm beginning to spread my tentacles.
And I don't know, it's like, it's not good enough
just to get them on Linux anymore?
No, no.
No, I must go all the way.
But actually, the folks that are running Gnome, they love it.
It's great for them.
So it's been pretty cool to see that.
It's been cool to see people that come in
from different organizations.
There's some folks that they hired recently from Rackspace
and brought them in here.
And Rackspace was all Macs.
And so they came in here, and they wanted a Mac.
But then they started seeing other people's Linux desktops,
and started working here at Linux Academy for a while.
And now they're trying to figure out
how to switch over to Linux.
And there's people that are like,
how do I run Linux on a touch bar Macbook?
I'm like, oh.
Don't even start.
That's been a thing.
It's been a real thing watching that.
I'd be curious to keep tabs on how that goes
throughout the company as they kind of make that shift.
Yeah, it's unique to see.
It's not like you're a secret group hiding around like,
oh, yeah, we use Linux.
We don't really talk about it much,
and don't tell desktop support.
But here's some tips.
It's out in the open.
It's even almost sponsored.
That is awesome.
I know that if I was an employee,
I would much prefer a you choose your system policy
than you have to use X, Y, Z, regardless of whatever it is.
Because it's never going to be perfect.
And one year, maybe I'd like to use Kubuntu.
And then maybe the next year, I'd like to use KDE Neon
or something.
And I want to be able to move around,
and I want to be able to change.
And so I like that.
I would like that.
If I wanted to use Windows 10, I think I should be able to.
So I think that's kind of a cool policy.
It feels a little bit, too, like if you were a master carpenter
and you came into a job, and they're like, no,
we only use this brand of hammer.
So here you go.
Throw away any tools that you know and love.
And I think from the security side, it's good.
If you have to deal with whatever operating systems are
going to be on your network, you have
to have a better level of security
than if you're just going to trust whatever crappy programs
you force on the Windows desktop.
I think this is probably the most prolonged time I've
spent at a company that is a Linux shop,
and what they do is Linux.
You know what I mean?
Like, I've definitely been at lots
of places that use Linux, lots of places that use Linux.
But the product is all based around Linux,
and the people are using Linux, and the server side's
all Linux.
And like, it's not like a thing.
It's just normal.
It's not like this weird thing.
It's just, well, yeah, it's Linux.
Of course I'm using it.
I started a job as a developer a few years ago,
and the first day, the girl who was doing my mentoring said,
here's your laptop.
It's running Windows.
What I do is I run Ubuntu in a VM
and do all my dev work in a VM.
I'm like, why couldn't you just erase it
and put Linux straight on it?
Oh, it's too complicated.
Yeah, I mean, sometimes there's an advantage
to having your dev environment in a VM, for sure.
But I could just never live with the performance.
I've tried.
It's just no good.
Yeah, it's been pretty interesting to sort of be
around where it's, I was trying to come up with a term for it.
This isn't a great term, but what it feels like
is just ambient Linux.
Like, Linux is just an assumed.
It's just like this normal, not this edge thing.
It's just this normal thing.
It's just Linux isn't assumed.
It's just ambient Linux, and that's not a big deal.
It's never been a big deal here, so it's not part of the cult.
It's just so weird, though, because it's always
been other companies I go to, it's
like maybe they have a product that runs on Linux or something.
And then there have been companies like System76
that are all Linux, but it's 20 people, where
this is over 100 people.
And it's a huge summit and all that kind of stuff.
It's a big group of people.
So it's an experience to be inside a corporation,
like an actual legitimate corporation
with over 100 employees.
But they're all geeks.
It's just a very strange experience to me,
but a good one, but one that the younger version of me,
who fought the good old wars of Microsoft and Linux
and trying to get people to use Linux all the time
and trying to convince people that open source didn't mean
it was bad quality and fighting all of those fights
that I used to get in the middle of to try
to get clients to switch their systems over to Linux.
That version of me now seeing this
is still having a hard time accepting what I'm seeing.
You mean people besides my little social group
use this now?
It really is a thing.
You're no longer a cool outsider, right?
There's no fight to win.
You just can get work done now.
In the best way possible, in the best way possible.
The fight is so over that the Earth is no longer warm
from the bombs even.
They've rebuilt and repaved the roads
and now life just goes on.
You've mourned for the dead, you're moving on.
Yeah, exactly.
Yeah, and I'm like the old war vet going,
I remember how it used to be though.
We're all okay with this now?
It's where the latent distrust of Microsoft is still there
and we have all these wounds deep in our psyches.
And it's just kind of bringing some of that up.
So that's the thing is like,
there's a couple of people here running Windows
but they're Azure administrators.
That's what they do, is they write Azure courseware.
And then it makes whatever, then you can be,
there's no judgment on either of the sides.
I don't mind if you use Windows,
if that is what helped you get your job done
and you don't care if I use Linux to get my job done
and we can all be happy and everyone gets stuff done.
Yeah, yeah, it's pretty cool.
It's pretty neat and I'm really glad
I stuck around a little bit longer
even though the heat is, it is now a heat death.
It is a massive, massive heat death right now.
So in fact, this, I'll move on,
but just something I've never witnessed before,
but grasshoppers like get paralyzed by the heat down here.
So they, when you walk around the sidewalks in some places,
there's grasshoppers everywhere.
Like you're crunching them as you're walking around
because they jump out of the bushes
and they land on the cement and then they paralyzed.
Oh, it's so hot.
And so you have these grasshoppers all over the ground
in some areas all day long until the evening
when the sun sets and the ground starts to cool
and then they come back to life
and they hop back in the bushes and it's super gross.
Oh, that sounds like a really useful trait.
Yeah, it's great for harvesting
if you wanna cook some grasshoppers.
Just go get some sun-dried grasshoppers.
All right, well, let's talk about Linux.
I just wanted to update you guys
and while I'm still down here roasting my balls,
but it's been a really good eye-opening experience
to just spend some time around a largish,
or to me, 100 plus organizations getting there.
It's obviously not a big, it's still a small business,
but it's been really kind of a good experience
to just be around a whole bunch of Linux users
for an extended period of time
and where it's not like, oh, we're fighting a good fight.
It's just, this is life, this is how we do our work
and it's not even a big deal.
Let's talk about Fedora though
because speaking of Fedora,
that seems to be one of the more popular ones around here.
Fedora 29 isn't eliminating Yum as we reported recently.
It looks like it was up for debate
and at Fedora's engineering and steering committee meeting,
the plan to drop Yum for Fedora 29 was rejected
when the council realized it was still shipping in RHEL.
No, I'm kidding.
When they realized that it was connected
to a bunch of other components in the infrastructure
that would cause major logistic issues
if they wanted to pull it out.
So if when I said recently that Fedora was losing Yum
and you panicked, well, now don't you feel silly.
Because I was just wrong and they hadn't decided yet
and now they have decided.
I did panic.
I just, sometimes I get a little worked up,
especially on these Tuesdays that are so intense
with all the Linux news.
I know.
But I think actually it's a pretty mature choice,
especially, I don't know,
I certainly do get that itch for spring cleaning
and I don't want any extra binaries floating around,
but in the world of open source
where you really wanna make things compatible
and you want things that worked on Fedora 27
to work on Fedora 28 and you want it to work on 29
and 30 and 31, just keeping these things around
for a little longer than feels necessary,
sometimes can make a good subset of users' lives
that much easier and it's probably worth it
for one megabyte of disk space.
Yeah, these seem to be fitting in line
with a series of decisions that I feel like
I've witnessed the Fedora project make recently
that conservative is the wrong label,
but it's not as breakneck pace
as it once was in some regards.
Like they're still hall and button innovating,
but there was a time where they would ship stuff
just way early as almost like a point of pride.
And it seems like they've sort of dialed it back a bit
where they're trying to find a balance there
where people can get a little more predictability
and experience like a little bit more,
I don't know, is consistency the word
I'm looking here for, Wes?
Yeah, I mean, it seems like there's a little more intent.
It's no longer just the sort of bleeding edge proving ground
for things that might make it into RHEL later,
it is actually sort of shipped and marketed
as something that an end user could and should use.
I mean, you still have to be the right end user,
but that doesn't mean that you grab some,
like it's not like getting a random snapshot of Arch
and just hoping things are all working nicely together.
There's actually been a lot of intent
and design put into it.
Yeah, speaking of a lot of intent and design,
Mir, yeah, Canonical's Mir, still kicking,
still rocking with version 0.321 coming out recently,
and it's looking really good.
Think of it as an abstraction layer,
and it's more than just a Wayland client now,
but of course, they've been rewriting it,
I suppose you could say, in a way, for Wayland support,
and the Mir AL shell, which has reinstated the spinner
when you're starting the Wayland shell,
so now you'll have somewhat of a status indicator
when the shell's launching,
and the developers are working on support for XDG shell,
as well as supporting the Wayland extensions
and other upcoming work.
So this was, oh, I thought, okay, that's kind of interesting.
It was like following a trail,
so then after I read that, I thought, well,
what is Canonical really envisioning the use of Mir?
Like, really?
Like, why are they actually spending real money?
Well, it's funny money,
but I mean, their version of real money on Mir.
Like, what's the, why, and the individual,
at least that I have met, and there's probably more than one,
but the individual I've met that's working on Mir
has gotta be one of the more talented developers
I've ever met.
So it's like real money they're probably spending.
At least I hope he's getting real money.
And it's an implementation of something
that we are starting to see other solutions for,
especially when it comes to stuff sitting on top of Wayland.
So I really was trying to grok where it fit in.
And it appears that the Mir graphical stack
is really being positioned down the road
for IoT devices by Canonical.
They say, when we first conceived of it six years ago
as part of an initiative to unify the graphical environments
across desktops, TV, and mobile devices,
we continue to move it forward into modern standards
like the Wayland protocol.
The thing is, is Mir is designed with low memory
and disk space and CPU usage baked in.
So memory and disk space is much lower than other solutions,
and they've also tried to build it with security in mind.
If you, for example, were setting up an Ubuntu Core
distro, Mir, and a small LCD display server
with a low-cost sensor and a Raspberry Pi 3,
the next thing you know, you have a 24-7 monitoring solution
which could graph information with Mir and Ubuntu
at the core.
And I thought to myself, I said, self?
That sounds like a very specific example
that they just gave there.
Why that specific example?
So Jamie is the author.
He's a developer over at Canonical
and is involved in their IoT efforts.
So I started digging around a little bit.
I saw he has a blog post, which I'll
have a link in the show notes, about setting up
an Ubuntu-powered greenhouse monitoring system on his home.
In one of my favorite areas in the UK,
it's a town or an area, I don't know, a village.
I don't know what you guys call them over there, called Bath.
It's a city.
It's a city, OK.
Bath.
I love it.
That's so awesome.
It's so awesome.
And over in Bath, he's got a greenhouse.
And he's been looking at different solutions
on the market to monitor his greenhouse.
And so many of them are consumer products.
They only work with iOS or Android.
They don't really let you get to the data.
You know what?
You and I have talked about this quite a bit,
sort of off-air more, but like sensor data and things
like that that I've wanted to track.
Yeah, very much so.
And he was looking at some different solutions.
He came across, by the way, his greenhouse
is a pretty cool little greenhouse.
He says that he's cooking, or he's
cooking, growing in their chilies, tomatoes, cucumbers,
strawberries, probably cannabis.
Although he doesn't say that.
I'm just assuming.
Lemons and things like that.
The UK exports more cannabis than any other country.
Just saying.
No way.
Is that true?
Yeah, apparently so.
You guys.
And also, our minister for drug controls, husband,
also works for the largest medical cannabis company
in the world, apparently, or something like that.
Jeez.
You stoners, you.
Yeah, really.
Gosh, get to work, you slackers.
So after a bit of research, Jamie came across the YaoMei
temperature sensor, which does temperature and humidity
for like nine funny dollars.
And you just get it from a Chinese reseller.
The sensor itself is small, ZigBee based.
It's powered by just a little cell watch battery kind
of thing.
And it has a range of negative 20 to 60 Celsius,
as well as bringing in the humidity.
And he can get access to it.
Now, YaoMei, they provide an Android and iOS application.
But he wanted something where he could get the data elsewhere.
So his initial idea was to put together
a small, dedicated, low-powered device, like a Raspberry Pi 3,
running Ubuntu MATE.
Ah, that's awesome.
Set up SSH.
Ding.
Boy, we're hitting all of the points today.
And then from there, he had a fresh Ubuntu environment.
He also installed a MQTT messaging system
in the form of Mosquito, which is an open source,
I guess, message gateway would be the way to put that,
where you can send messages between applications.
Not like text messages, like data messages.
He also loaded some Python on there,
and Wes's favorite, Grafina, to visualize the whole thing
into some beautiful charts, which is pretty cool.
I know when you see the charts, you're really like, oh, yeah,
this was all totally worth it.
Just like looking at the temperature
in the greenhouse over multiple days,
as you can see the cycles of the sun, it's just so cool.
Yeah.
Yeah, and the weather's been hot over there recently, too.
So it's actually been pretty great to have this.
So he puts all of that into an InfluxDB,
and then Grafina looks at that.
He generates two charts, one for the temperature
and one for the humidity.
And he points out that then you could
put Mir in kiosk mode with a nice little display
on there, a little small LCD cheapo,
and have it visualizing 24-7 in real time a view of the data.
And you can do all of this on small ARM devices
with Ubuntu Core, and then using Mir to generate the displays.
Grafina, which is another open source project.
It's pretty nice how you can build all this.
It should all scale pretty well.
You invest a little bit of money in the sensors,
a little bit of money in the pie.
If you're like me, you probably have pies just floating around
that you haven't yet found a use for anyway.
So you need to stick it out there.
And then as you go, if you want more sensors,
you find more sensors to buy, you add them on there.
They can all just send data to the same back end
you already have.
So boy, this is a fun project.
Poby, before we move off of the Mir topic,
is there anything we're missing about this subject
that you've heard in the hallways,
the virtual hallways of Canonical about Mir?
No, you've got it about right there.
I personally have it running on a laptop here.
I've got an Ubuntu Core laptop.
So it's only Ubuntu Core, like super minimal install
with a bunch of snaps on top.
And I've got the Mir kiosk on top
to test out delivering graphical applications
as snaps for Ubuntu Core, which should be fun.
But that's something we're just playing with.
Have you looked at what the total install
size of that setup is?
It's got to be not much.
Yeah, it's not a lot.
It's not much at all.
That's neat.
Well, cool.
And I'm glad to see that Mir's chugging along.
It sounds like it may be just digging itself out
a little niche that it could serve quite well.
So I'll keep tabs on that.
Let's move up the stack a bit.
And let's talk about Mutter.
Big, big performance improvements
coming to Mutter because it's going
to be doing a lot less math.
This is going to be landing if all things go as planned
in GNOME 3.3.0.
And it looks like, aside also from just other little things
like, I don't know, dependencies on X11,
there's going to be performance optimizations.
A GitLab request was merged about reusing paint volumes.
Now, that sounds like a simple thing.
But it cuts down approximately all paint volume calculations,
all of them, any time it has to redraw a window.
And particularly, there is massive improvements
if there's a window for some reason that needs to be redrawn
but hasn't moved.
In the past, essentially, Mutter would do all of the math
and repaint that entire thing and recalculate all of it
every time constantly.
Boom, boom, boom, boom, boom.
It's that way faster than that.
And this, instead, essentially will just
keep a cheat sheet of the math answer
and just keep referring to that until it
has a reason to change things and redraw,
like the window's been moved.
That could be a big improvement for Gnome.
And I think I've witnessed this issue, perhaps,
although it could be way wrong with my terminal window.
So if you've been a Gnome user and all of this Plasma talk
has really been kind of tempting you,
maybe don't disrupt the whole workflow yet.
Maybe stick it out for Gnome 3.30.
Maybe, although things are getting
good on the Plasma side, too.
I was just talking to Wes on the pre-show
about how we're still kind of like going back and forth
on just the perfect laptop.
And Alex in the Mumble Room has been sort of convincing me
that perhaps a Lenovo T480 would be the way to go.
14-inch, 2K display.
And it's got an i7 four-core processor.
It's got Thunderbolt 3.
It's got a 512 megabyte MVD drive.
It's $2,000.
Now, that sounds like a lot of money,
but this is a machine to do live media production.
And it's cheaper than an equivalently priced MacBook.
It's really tempting.
And when I think about that, the reason
why I bring all that up is when I think about when I get
a new piece of hardware, I really, really, really
can start to understand why some people do these super
minimal desktops.
Because the idea that the fact that Mudder is sitting there
redoing this math every time it has to repaint a window
from scratch every single time is disappointing.
It was really, really disappointing.
It sort of makes me think like I'm
wasting some of that horsepower.
I'm wasting my money when I try to get something that powerful.
So I say all that with I really, I can really kind of,
even though I'm never going to be like an awesome window
manager guy or an ex-monad, I can completely appreciate
some of the logic behind it.
I thought you were just running OBS straight on top of X11
these days.
You know, that's what I should be doing.
That's what I should be doing, shouldn't I?
It takes all the things.
Yeah, it did.
Oh, I have in the day.
We also have ourselves GTK 4 coming in the spring of 2019,
it looks like at this point.
Of course, all of that is possibly to change.
And we're going to be getting, just as a reminder,
GTK Plus 3.24, which is a minor feature update, very soon.
It looks like there will be some things we are hoping
for that won't land in GTK 4.
They're going to be postponed until GTK 5,
like constraint-based layout support,
shader compilers, application-provided shader
support, and the UI designer support.
It also looks like GTK 4, with the Mac OS Quartz back end,
is in a pretty bad state.
But they think that they can probably get it cleaned up
soon.
So there you go.
How's that for a little gnome corner?
Little gnome corner.
Look at you.
I mean, we all know that you're secretly forever plasma biased,
but you're really doing a good job of pretending
that you're not.
But plasma's really good, though, Wes.
Come on.
That's true.
We've got to turn the show into The Plasma Hour
at this rate.
Hey, that's a cool title.
Hold on.
Hold on.
I know, right?
Yeah, go ahead and suggest that.
Our next story is really probably,
I should just defer to Poby, because he
is an expert on all things Bitcoin and blockchain.
And he is our resident expert.
So I don't know.
I'm sure you're probably aware of this,
but there is a very fancy phone.
I think you pronounce it SerenLabs.
They're the folks, you may have heard it.
They once had this celebrity phone that was $16,000.
They call it the world's most secure phone.
And they're out with their next product.
They call it the Finney.
And this time, it's only $1,000.
And it's got blockchain built in.
It costs much less than that $16,000 too,
so it's already a great deal.
And it's got the world's best security.
Just ask them.
They've included phrases like decentralized economy
in the advertising, decentralized apps, clouds,
or I'm sorry, cold storage wallets,
and a decentralized app store, as well as
their own cryptocurrency.
And that's right, it doesn't use Bitcoin,
doesn't use any actual established cryptocurrency.
It uses their own tokens.
And then users can trade tokens on their own blockchain.
It has a dedicated firmware for verifying wallet transactions.
It has supposedly intrusion protection.
It has a decent Qualcomm chip with six gigs of RAM
and 120 gigs of storage.
But the most interesting thing about this blockchain powered
phone is it has a secondary two inch display, which
slides up from the body of the phone,
like some of those new cameras we've seen on a few phones,
that is your wallet display.
So you can check your balances in your wallet
without having to wake up your entire phone.
Oh my, wow.
Maybe it's just an extra heat sink
when it does all the crypto mining in the background
for you.
It's definitely an extra heater.
That little screen probably, I could just
see it sliding down and failing to turn off and warming up
the back of your phone, which warms your battery
and decreases battery life.
It's a brilliant idea.
You also didn't mention that it has a notch every once.
So don't worry, the notch is there.
Yes, it does.
I somehow missed that.
I must have blacked that out.
So HTC might be the ones to pull this off then.
So they're coming out with the Exodus.
And no, it's not an Exodus of HTC's customer base.
It's the name of their next smartphone.
And they really, really need this thing to pay off.
They announced it back in May.
And I kind of made a little murmur about it.
But now, this week, we've got some details.
And it's not looking good, in my opinion.
It appears we can expect their blockchain-powered phone
from HTC at the end of this year.
And the price, although they wouldn't commit,
will probably be around $1,000 for this, too.
They envision a phone where you hold your own keys,
your own identity and data.
Your phone is the hub.
That was what they said back in May.
But now, they're kind of walking that back a little bit,
that whole stuff about your identity and keys.
That's not so much in the first model.
But the first model will have a wallet.
And it'll come with CryptoKitties, a crypto game
where you play with crypto cats on your screen.
Can I ask a question?
What does blockchain-powered actually mean?
Oh, yeah, that's a completely reasonable question, Alex,
and one that you would think that they
would have a very solid answer to,
since they're basing the entire messaging around that.
Well, you see, it's going to have a cryptocurrency wallet
that will, quote, be the most secure hardware
wallet out there.
He also hopes that by trading virtual cats,
it'll encourage gamers and people
who are less familiar with cryptocurrency
to try out the phone.
They think it's going to be the most approachable thing
on mobile for the non-crypto crowd,
even though the crypto crowd is the only people that
ever be interested in buying this.
So they don't really talk about how it's a blockchain phone,
other than it can have a wallet on it.
They wanted it to be like the storage of your driver's
license or whatever, like whatever identity information
you'd have.
But of course, that would take wide-ranging government
support, and nobody's going to do that for HTC.
I'll tell you what blockchain-powered means.
It means we go high up in the Google search results.
That's what it means.
This is so sad.
This is really sad to see this happening.
And there's a trend.
A lot of companies are just relaunching and just
putting blockchain in the name.
And like Kodak did that.
Obviously, now Kodak's pulling back on their plans.
That's kind of one of the famous ones.
And just today, I saw a news story
go by saying that Kodak's basically
screwing the pooch on that.
So here's their idea.
It's a conflicted message.
HTC hopes to build an Android phone with all of this Bitcoin
wallet stuff baked in.
But of course, I would fundamentally argue
that if you're shipping Android, especially with the Google
apps pre-installed, that automatically disqualifies it
as the world's most secure hardware wallet,
automatically, especially when it
has a hardware wallet with an always-on cellular modem that
runs a firmware that we have no control, no insights, no even
insights into what it's doing at all, not even,
let alone source code.
Just you're not even aware of what it's doing at any point.
That, by its very definition, makes
this an insecure hardware wallet.
So they're blowing it.
They're blowing the very premise.
And then they have this mixed message.
Like Chen here says that they think
that the niche market of 30 million Bitcoin wallet users
is their demo.
But then early on, he says, but we're
bundling CryptoKitties because we're
hoping to convince gamers to try out a Bitcoin blockchain
wallet phone.
So are they targeting gamers?
Or are they targeting Bitcoin users?
Because neither group is going to take this thing seriously.
Nobody gives two shits about CryptoKitties.
And no Bitcoin enthusiast is dumb enough
to think that an always-on, Google-connected,
cellular modem-powered hardware wallet is secure.
No Bitcoin enthusiast is going to buy that.
Don't print out your keys anymore
and put them in secure storage.
Just use your phone.
It's fine.
I'd love to think that after the craziness that
was last December, January, that people
have learned their lessons about crypto and blockchain.
And it's not a way to make a quick buck.
But things like this makes me think
that maybe people are more gullible than we
give them credit for.
Yeah, I think also it's just one more way
they can try to get you to buy into their, oh,
use our currency on our chain to buy media from our apps
and purchase things in this weird little private community.
Right, yeah.
Who is the target market?
People with money, that's who.
I'm really, I am such a hypocrite about this topic.
Because I completely agree, creating their own cryptocurrency
feels so cheap.
It feels so basic.
But then at the same time, I'm sitting here thinking to myself,
man, I really wish cryptocurrencies had gotten
more traction in some ways.
I don't mean Bitcoin should be $20,000 a coin.
But I wish there was a healthy, legitimate cryptocurrency
ecosystem.
Because the idea of open source money is a good one.
Well, it's coming.
There are some customers that I'm
aware of that are working on all sorts of blockchain things.
And there was a house sale ledgers in Northeast US
somewhere that someone sold a house
and recorded those house sales on the ledgers.
So they're coming.
But it's just not as crazy as we've all thought.
I agree, it is coming.
And what we're seeing right now is the leg
as businesses build their products and research markets
and stuff like that.
We're just in the leg of that, I think.
But just it'll take time for legitimate, trusting brands
to build products around this technology
and then market in a way that customers will accept.
But where I was going with that is
I think it could have gotten better traction faster and more
usable amongst open source projects.
I really saw there was a potential avenue there
where there could have been a way for,
I mean, this is really dumb.
But just because this is off the top of my head,
so I hadn't really thought this out.
But I imagine if, I don't know, let's just pick Solus.
Let's say Solus had a package in their app center.
And it was the Solus donate package.
And I click that.
And I install it.
And it spends the evening.
And I set it a small, minimal, but approachable
UI where I have a little slider.
And I say, dedicate three hours of CPU time a day to Solus.
And I run it.
And it keeps a little system tray icon.
It lights up when it's going.
It lets me know what's happening.
And maybe back, bake in even some cool stats there, maybe.
So I can see some chart numbers, make a pool,
and have a Solus pool, and have all of the Solus distribution
users who go into the app center and choose to install this,
and choose to dedicate a certain amount of CPU time
to the project, all automatically join a pool,
and have that revenue go towards the project.
It could be a sustainable model that
scales with the distribution as it grows.
And it could be something that they promote.
They say, hey, if you want to support Solus,
install it, and launch that miner for us,
and be completely upfront.
But instead, it has a negative connotation now.
It's seen as more like spyware and malware,
like a browser toolbar.
And I think that was a really missed opportunity,
because it's something that a technical audience would grok.
It's something that one thing that people are experimenting
with is crypto mining in the web browser.
But legitimately, you go to a project's website,
and you press a button.
And you say, donate some time.
And it just runs while you have the browser open.
It's not hidden.
It's not sneaky.
It's a user opt-in thing.
And then all of a sudden, you're donating something
to the project.
I really don't feel like it's any different than people
who seed torrents for weeks at a time,
and donate gigs and gigs of bandwidth to projects
by seeding torrents.
Or they mirror infrastructure, and set up FTP mirrors,
and donate their server bandwidth.
I see it as a similar thing.
But it could have been that.
But instead, it's turning like this negative association.
Am I crazy, Wes?
No, I mean, it seems like another symptom of all the hype
before things are very useful.
Because I think this discussion has been pretty spot on.
It's not there yet.
We've seen a lot of false claims.
But the technology itself is interesting,
and certainly does have some use cases,
and will probably lead to some exciting things in the future.
But everyone's just soured.
Everyone's burnt out on like, I've
been overly hyped, I've had all of these web pages trying
to steal my CPU time.
I just don't want to have anything to do with it.
And I think it's a long, slow march of showing real deliverables
before people's attitudes start to turn around again.
Maybe it will over time.
A lot of people lost a lot of money.
That's one way to get burnout.
Yeah, that sours people too.
Right.
All right, well, let's talk about the Atari VCS.
It's sort of struggling for credibility right now as well,
especially after a pretty brutal trolling by the register.
So Rob Wyatt, the system architect for the Atari VCS
project, did a FAQ.
And I want to go through just a couple of them.
Real quick reminder, Atari VCS is a Linux powered Atari console
that's coming out next year.
And I backed it.
I backed it so that way I can talk about it on the shows.
I backed it because after going through it,
I think they have something here.
And I think what they're trying to pull off
is not insurmountable.
And one of the things that I really
appreciate about the Atari VCS project
is they looked at the Ouya specifically,
that little Android cube, and said, well, how did that fail?
And why did that fail?
And then they said, OK, let's not do that.
And I think that is, I think, a really good starting
point of lessons learned.
So Rob here answers various questions
that I can only presume he created himself and then
asked himself, which is always a little awkward.
Or maybe they were really legitimately frequently asked.
But he gives us some details on the VCS hardware specs.
The Atari VCS hardware will be powered by an AMD Bristol Ridge
family APU with Radeon R7 graphics.
And they're going to add eight gigabytes of RAM, which
is more than the original amount they're going to add.
And he does note, yes, that means
this is not going to be a Ryzen family board.
But they did the math.
They ran the tests.
And they said increasing the cost
and increasing the thermal ceiling for a Ryzen
APU that couldn't run at full performance because
of the thermal ceiling didn't net an appropriate amount
of performance increase.
It was a marginal improvement.
And so they figured that cost would
be better spent on adding more RAM to maximize bandwidth.
And then that benefits everybody all the time
because now the RAM, I believe, is,
I guess you call it unified.
And I know some people were upset about that.
That seems completely reasonable to me,
especially for the types of games
you're going to be playing on this thing.
So that leads the question then to development.
So will there be development hardware?
And he answers, you won't need development hardware.
Any Atari VCS device will be a development kit.
To get an application in the Atari store,
there will be a few technical requirements and rules
as to what is permissible, as with other curated stores.
Atari is a neutral partner.
And we have no say in what applications get developed
or when an application gets released.
You are free to develop any application you like,
as long as it fits the guidelines.
There is no developer program that is open yet.
But there will be one that comes online in the coming months.
And if you have an application in mind, you can start today.
And I love this part by making sure it runs on Linux
at a high resolution using a standard runtime libraries.
And then you're pretty much good to go.
The changes from that to what they
are going to be calling Atari OS will
be minimal and mostly related to application startup
and packaging.
So Atari OS will be based on Linux
with a modified Linux kernel.
Now, you remember, they're also going
to allow you to load your own OS, they claim.
They have an open platform and a sandbox for that.
So say you want to run XBMC, something like that.
They specifically talk about this in the FAQ and mention
that.
So the way they're going to do this
is they're going to have the Atari Secure
Hypervisor, which is probably KVM.
And they'll have all this stuff, all of the core stuff
for this in flash memory.
And before the Atari loads, any external storage device
that is checked for a bootloader file, if it's bootable,
the Atari VCS will boot that device instead.
So you can hook up external USB storage.
And if it detects it and it's got the right type of boot setup,
it'll work.
They don't have a typical bootloader like Grub
because they have the CPU in protected mode
and they have their own firmware to check
for the other OS drive.
And they're going to release example code on how
to do all of this, they say.
And they're going to release a demo OS, the boots
on the Atari VCS, that's based on a standard Ubuntu image.
So how is this thing going to compare to the NVIDIA Shield
TV, in terms of power and everything else?
Well, the NVIDIA Shield is an ARM platform, right?
So this is an i6-86 platform, so there's that aspect to it.
So that's kind of nice.
But yeah, and it's going to have newer graphics, more
capable graphics.
So it should be, in some ways, more competent.
But of course, the NVIDIA Shield now
has multiple years on the market.
If they do even half as good of a job as NVIDIA have done,
then they're on to a winner.
And that box, damn, is beautiful.
Yeah, it looks good, right?
Yeah.
And by the way, when you load the, quote, other OS,
you'll get access to the hardware.
The hypervisor setup in a way where you get raw access
to CPU, GPU, memory, audio, USB.
Oh, wow.
So that's not bad.
And then you just reboot, unplug it,
and you're back in Atari OS.
They say they have test hardware running.
They have different prototypes.
So they have crazy, ugly, wires everywhere,
doesn't fit in a box prototypes.
And then they have prototypes of the hardware mold,
but with no motherboard in there and stuff.
But I think it's pretty cool.
I think it's a decent solution.
I know there's a lot of skepticism around this.
People really think they've screwed the pooch here.
But I think what they're trying to pull off is achievable.
The hardest job they have, outside from the hardware,
which is achievable, because they're
working with all known good quantities here.
They know the thermals and all this stuff.
They're working with the Linux kernel.
They've got all of that that they bring with it,
including all of the networking, all of that
that they don't have to invent themselves.
Now they just have to manage to stuff a Bristol Ridge APU
into this little case, which they've already figured out
the thermals.
That's why they rejected the Vega or the Ryzen stuff.
So they're obviously monitoring that.
And then they've got to write their UI, which they've already
got art mockups for.
And I'm not saying writing a UI is hard.
But let's be honest.
It's writing a television UI is, as far as UIs goes,
much simpler than creating a desktop UI or even a phone UI.
All this is achievable.
No, I think you're right.
They have a lot of the basics there.
They just have to actually deliver on all the goods.
I wonder, too, is there any chance
that this will be something people who haven't heard
of Atari would be at all interested in?
Or is it really only a retro market
for those of us old enough to have fond remembrances
and who also are interested in open source technology?
To anybody listening, I highly recommend
going and reading the Medium article on this in the show
notes.
There's a wonderful description about how
Sony made loads of missteps not giving people GPU access,
how Microsoft made missteps allowing XBMC to be installed
on the original Xbox.
It's fascinating.
I highly recommend going and reading that.
Yeah, I agree.
We have a link, linuxunplugged.com, slash 258.
And I hope Atari pulls it off, not just because I backed it,
but because every time somebody's tried to do this,
like I just mentioned the Ouya, but there's been others.
I mean, going back to the Boxee Box,
really, every time somebody's tried to do this,
they've gotten so close and just missed the mark.
And I'm not saying that they are hitting the mark,
but I think they're close.
They're like really close to hitting the mark.
And I think the fundamentals are there.
And the stuff where they're going to miss
is going to be content partnerships
or the applications.
But all of that can be added after the core product ships.
It has a lot of potential, especially
because what you get these days for a decent price
is fully capable of playing HD video.
It's fully capable of playing HD games.
I mean, most people are going to be hooking this up
to a 1080p display.
Right, exactly.
So I think if they get all the other little bits right,
it could work.
Speaking of a lot of bits to get right,
Purism has an update on the Librem 5.
This is their 15th progress report.
And so this is not looking good as far as I'm concerned.
I really appreciate their hard work.
I think their laptops are really banging these days.
And I'm really glad they're keeping us updated.
But every red light is going off that I could possibly
think of for this.
So this is kind of understandable.
But let's start with this one.
The dev boards have slipped.
They were supposed to ship in June.
That was the projected ship date.
And the current rough estimate they have now is August,
so next month as we record this.
But they're going to have more details as that firms up.
When these things happen, there's red flags, though.
They had certain issues, like getting
all the information available to what
appears to be possible builders, information like the camera,
wireless, the battery, how the buttons work,
those kinds of things.
So those weren't finalized and ready yet.
But that's understandable.
Yeah, that's early days, and you got to get things rolling.
The other thing that I'm pretty concerned about
is if you remember from the specs, for those of you who
don't, they promised to build in around the iMX8 development
board.
That's the actual phone.
It's got a little bit faster of a processor.
Still a MediaTek, but it's a little bit of a faster one.
However, after some experimentation,
they've learned that there's basically
very little support for getting actual Linux working
on the iMX8 board right now.
Very basic mainline Linux kernel is possible,
but drivers, like display driver and all that stuff,
it's not happening right now.
So all of their development images
are based around an older board, the iMX6.
That's what's in the hardware team.
That's what the image they've built around.
Now, they believe that they can use this
to kind of get things rolling.
And then once the iMX8 boards are onboard and working
with the Linux kernel a little better and the drivers,
they can do work to shore up the gap between the iMX6 and the 8.
But I don't know, Wes, building all of this stuff
around one version of the CPU and board
and then trying to up right before a release or something,
doesn't that sound like potentially disastrous?
What do I know, though?
It's a hard game.
I mean, this is just a hard space
to be in in trying to get this all right
and still make a good release time
and have something that is really well battle tested.
You're right.
I think that's a tall order.
I don't know that it's impossible.
And I think the people over at Purism
have done some pretty incredible things in the past.
So I wouldn't put it past them.
It does make me a little nervous.
Yeah.
Yeah, maybe they can pull a real rabbit out of their hat.
You might be right.
I really want Purism to succeed.
But wasn't Purism the one where you
had a laptop without a fan that worked and all the rest of it?
The fan worked.
The fan just never stopped working.
And they did a make good.
And they sent me a working one.
And that's one thing that gives me a little hope,
to tell you the truth, is I had a really early version
of their laptops.
And then I had the third crack at it.
And there is noticeable improvement in the unit.
Right.
I mean, it seems like they care about this stuff a lot
and take it very seriously.
It's really just the limitations of physics and the universe
that are the most threatening here.
Yeah.
Plus, then there's the software stack,
which I'm really uncomfortable with.
If they had me in there as a consultant,
I would be pushing hard against this.
Because they're writing to, well, they're
writing or contributing, trying to contribute code upstream,
to create their own whaling client.
So you have Posh, or however you say it, Posh.
And you have WL Roots.
WL Roots comes from Sway, which that's good heritage there.
But they are trying to contribute things to that,
too, to make it work.
And Posh, or Posh, is sort of their creation.
That's the shell that will be running on top of Whalen.
Their GTK shell is Posh, or Plosh,
however you freaking pronounce it.
Because they've made up a word.
Now I'm just sitting here, and I'm a dumbass on a microphone,
trying to say it for the first time.
So this is all getting work to try to support the D-Bus API.
They're trying to get Redshift to work.
They're doing a bunch of groundwork
that would already be done if they
were, say, using Plasma Mobile.
And so they're having to create work.
Epiphany is going to be the phone's default web browser.
I couldn't think of a browser I'd least
like to have on my mobile phone.
But I guess they don't have any other choice.
They've kind of got an XMPP mobile messenger working.
And they say down here in a footnote
that their collaboration with the Plasma community
continues.
They have some flat packs of Plasma software
for their architecture now.
And they're actively investigating a Plasma image
for the iMX6 board as well.
So what gets me, the real red light here is,
if in case it wasn't clear, is they're building things
like libhandy-gtk.
They're creating a keyboard and a phone dialer in GTK,
like a full phone interface.
They're trying to patch a version of Mutter
to work on their phone.
And they're creating their own GTK-based shell.
They're not using Gnome shell.
They're creating their own.
And they're using a CPU and board
that will not be the final CPU and board that they ship.
None of this is unbelievable and just completely untolerable.
It's like, OK, I can kind of see the logical reasons
for all of this.
The hardware wasn't ready.
You don't think the other software stacks it.
You want to build something you own.
I can kind of get all of it.
But I'm thinking that Q1 2019 ship date
is slipping at this point.
This is a massive investment.
And Wes, I suspect it's one of those things
where you don't know what you don't know until you start it.
If I knew how much work it was to do podcasts
and to do broadcasting and live shows,
I never would have done it.
You don't know until you start.
And it's always those last minute details
that suddenly you couldn't have planned for because you
didn't think or couldn't have known
that it was going to be a problem.
And then it's three days before you need to happen.
And you realize, oh, yeah, no, this
has a higher failure rate than we expected, or whatever it is.
And suddenly, the whole world falls to pieces.
Yeah, I really want this to succeed.
And I wonder, and I kind of want to toss this
to the Mumble Room.
Popey, I'm going to maybe ask you.
Dan, I'd like to ask you too.
Alex, I'd like to get your take on this.
If this bombs, maybe they ship something,
but it never takes off, or they never even ship it.
If this doesn't work, is this concept
of a crowdfunded, all-free phone dead?
Does it die here?
Well, speaking as someone who worked for a company who tried
to do this, the whole concept of building on one device
and then switching to another device later in the cycle,
fingers crossed that it'll work.
It will take way more time to do that switch
than they can possibly imagine.
And they will need a long lead time
to do all the necessary hardware enablement and conversion
to this new device.
It won't be like sticking a USB key in a new laptop,
and the same software will just work on this.
History has taught us that does not work.
And so when we were building on the lowest end hardware
that we could, like the Nexus 4 and the BQ 4.5,
we had an eye to the future, and we
knew there were other devices coming.
And we had those on site flashed with Ubuntu Touch.
So we had access to the devices, and we couldn't make that work.
Now, neither could Firefox with Firefox OS.
And Tizen isn't a blazing success on phone.
It's certainly way more successful than Firefox
or Ubuntu Touch ever was.
So maybe Purism aren't the right people to do this.
I don't know who is.
Yeah, that's why we need this to work.
Dan, what do you think about this from a project standpoint
even?
I started looking at this from a project management standpoint,
and it starts to make me cry a little bit.
I don't know.
I talked to some of these guys at WADEC,
and I think, like you said, they have
a lot of reasons for the things that they're doing,
especially stuff with, like, GNOME Shell isn't really set up
to work as a mobile shell.
But they're actually making a lot of headway
as far as trying to make GNOME applications more responsively
designed, doing some interesting things there.
And actually, we're showing off some concepts they have
and talking to different people, and there's designs
they're trying to push upstream.
And I've seen some patches landing in Epiphany
to this end.
So like you said, I don't know how realistic Q1 2019 is,
because I could tell you out of anybody
that deadlines are hard.
Yeah.
It's totally unrealistic.
They're not Google.
They're not Apple.
They're not Microsoft.
They don't have enough.
I mean, you look at what Microsoft did,
and they failed spectacularly with Nokia.
They just don't have enough clout, I'm afraid.
Is the goal mark here maybe not a successful phone
in the market, but is perhaps the goal post for us
improvements to GTK and making GNOME and the GNOME desktop
even more modern?
Some of this may remain.
This upstream work they're doing may
persist regardless of the success of the phone.
And either way, we'll have purism to thank for that.
I'm not sure.
We got a lot of flack when we got
innovative commerce distracted by Ubuntu phone,
and the desktop took a backseat.
I don't see how GNOME can improve by being,
I'm not saying core GNOME developers are
going to get diverted by this, but I
don't see how core GNOME can get made better
by a phone project that may not even come to fruition.
They're going to come back to the desktop
again after that, are they?
Quick question, Popey.
How many people worked on a Ubuntu phone versus,
I don't know if anybody knows, how many people
were working on this Librem project?
Well, a significant chunk of the company, at the time
the company was, I don't know, 800 people.
So there was a fair chunk of people
across many disciplines, like Harbor Enablement, Qt, OpenGL,
QML, Qt, like people with many, and then
the general infrastructure stuff,
people building build systems.
There was a ton of people.
It was more than 100 people working on it at its height.
That's a lot of people.
Wow.
Yep.
I think that a phone is just such a high bar for just
an even minimum viable product that people will even consider
putting in their pockets.
And even if you get all the pieces right
and build a perfect mobile OS, then you
don't have an app ecosystem.
And what are people going to do on this phone?
Look at the Essential phone.
That was a beautiful piece of hardware,
but it went nowhere.
Yeah, if you're not in every carrier store,
you're never going to get mass market adoption.
Now, maybe that's not the goal.
And even if you get just the tech audience,
I don't mind having a couple of extra, maybe less useful
devices at home, but I'm not going
to carry a second phone around if it
doesn't meet all of my needs.
That's what I was thinking is, how fricking
bad ass would this be if we were just dominating some tablet?
We had a great tablet workflow.
I hear a lot of Apple users talking
about using the iPad Pro, and there was talk
of convergence forever ago.
But I just would love to be able to pick up,
say, three or four market tablets out there
that I could go get, like you would
get from a community project that's supporting
a small range of hardware.
And what I get is a complete kickass hardware and tablet
experience where I have multiple windows.
I can multitask.
I can do real work, and I could even maybe hook up
a USB device somehow to this thing,
and it's got the whole Linux USB stack inside there.
Really, I think what I'd kind of like,
the more I talk about this, is just a really, really great
Surface Book-focused Linux distribution
where you could just go get the latest Surface Book.
Isn't that just a laptop, what you've just described?
Yeah, yeah.
The tablet thing is there is something
about when you're at home, you're watching TV,
or it's the weekend, and you want
to consider yourself not working,
but you just want to stay connected.
A tablet is that extra level of casualness.
And the ARM processor and its long battery life
contribute to that, so I don't know if a Surface Book would
actually do it.
And I'd like it to be Linux-based.
I'd like it to have a bash terminal.
But I really have no interest in a phone.
I really don't.
I would be more likely to go get a basic bitch, no feature
phone, and some flip phone with a week-long battery life,
and then just have a tablet and a laptop.
And I know that's not a huge market,
but I feel like there's probably a few people listening
nodding their head right now, probably going,
that's how I do it.
I just do it with Android, or I just do it with iOS already.
And I tried when I went to System76
for their Superfan event.
I tried only bringing a tablet, and I
ended up having to use computers at System76.
It's interesting.
My boss often turns up to work with only a tablet,
and will do everything just for the tablet.
Won't even have a Bluetooth keyboard.
He will just have a tablet and does everything,
from documents to joining us on Slack
to having meetings with people in Hangouts, everything.
He just uses a tablet.
Must have some fast thumbs over there.
He dictates to us.
He delegates.
Oh, OK.
We have minions.
Maybe that could work too.
That's what I got to do, Wes.
That's just what I got to do.
I'll have somebody else use my Android phone.
I thought you were training Dylan
to fill that role for you.
Right.
Yeah, I need Dylan following me around carrying my phone for me
and then relaying messages.
You know what?
That's probably the solution I need.
Well, while we're talking about phones,
why don't we take a break and thank
Ting for sponsoring the Unplugged program.
You can go to linux.ting.com to take $25 off a device
or get $25 in service credit.
Ting would work great for this solution
that we were just talking about, by the way,
because you can just buy a SIM card.
Sometimes they have crazy deals too.
Right now, even when they're just like regular price,
they're $9.
And there's no contract.
So why not?
It's like you can buy it and then
activate it when you need it.
So for example, we had an Android tablet
that had just been sitting around forever.
And I had a SIM.
And I just thought, you know what?
We're going on a trip.
Why not pop it in there and have it?
Why not?
Then it's one less Wi-Fi situation
I have to worry about when I'm traveling.
Why not do that?
And then when I get home, I can log in and turn it off.
And then we have to talk to a human being.
You just pay for however much you talk, text, and data
you use with nationwide coverage.
And they have CDMA and a GSM network and no contracts,
no other termination fees.
The average Ting bill is like $23 per phone per month.
That's it.
And they've got a great control panel.
They've got a ton of devices.
You can bring your own.
Or you can go get a device directly from them.
They've got a bunch of the really good Moto phones, those
ones that are like a super great value
and have pretty much a clean Android implementation
with just a couple little actually kind of nice tweaks.
Those Moto phones, I think, don't get talked about enough.
And so Ting, though, Ting knows what's up.
So they've been expanding their lineup.
So go check that out.
If you go to linux.ting.com, they'll take $25 off.
They're also giving away a Moto Z2 Play
with the attachable camera that basically turns it into a DSLR.
And they're also giving away a Sony Alpha A6000.
I have details linked in the show notes
if you want to check that out.
Or just go to linux.ting.com and then visit their blog.
They're doing a Ting Summer Giveaway.
It's pretty sweet.
So big thank you to Ting for a long time support.
Actually, you know what I just realized?
And I don't know if I've ever mentioned it.
Ting has been such a big supporter
of the Unplugged program.
Ting became a sponsor before we ever
launched our first episode.
They said, you know what?
We love what you guys do.
We love being on the Linux stuff.
We love the Linux audience because they're smart
and they get the value of Ting.
Where they have to really educate average consumers that
just buy into the duopoly stuff all the time,
they really have to teach them.
That's a big part of their marketing effort.
But with the Linux crowd, you guys
understand what a text message is and data is.
So it's a great audience.
They're like, yeah, yeah, yeah, we'll sponsor.
Yeah, absolutely.
We'll sponsor.
So they've been a sponsor on the Unplugged program
from the very beginning.
And we really appreciate it.
Go to linux.ting.com to keep them going and keep us going.
And also, a big thank you to DigitalOcean,
do.co slash unplugged.
do.co slash unplugged is where you
go to get a $100 credit when you sign up with a new account.
do.co slash unplugged.
You've got to go there to get the $100 credit
and then try out DigitalOcean.
You can use it for 60 days with that credit.
They have industry-leading price to performance.
They have machines that are killer.
My favorite system has 4 gigs of RAM, two CPUs,
80 gigabytes of space, 3 terabytes of transfer,
and it's $0.03 an hour.
It's just crazy.
They got optimized droplets.
It's what we're using for our PeerTube instance, which
is crushing it.
Also, we've run a lot of our backend stuff
up on DigitalOcean because they just have great uptime.
They have a 99.99% uptime.
That's fantastic.
They got Cloud Firewalls.
I was just seeing on Reddit some noob was having a hard time
with his DO droplet.
He's like, I don't understand.
I'm getting this traffic here.
I'm like, go to the Cloud Firewall and just block it.
It just blocks it at the network level
before it even hits your droplet.
It's sweet.
They have monitoring and alerting baked in
that you can turn on.
Great DNS management.
You point the name servers to DigitalOcean,
and then you can just start assigning subdomains
to your droplets.
And I have a whole system.
I've got subdomains and domain names
for my personal droplets.
Of course, I've got a system for the Jupyter broadcasting.
Droplets, and they're crazy fast.
They got 40 gigabit connections coming into those hypervisors.
Data centers all over the world, and then
every single instance, regardless
of the $0.03 an hour or the one that's
like a monster with like 64 gigs of RAM, 32 dedicated CPU cores,
9 terabytes of transfer, you know that one?
They're also all enterprise-grade SSDs,
from the $0.03 an hour up to that guy.
In fact, you can even go in there
and do the, they have these new flexible droplets.
You can tweak and mix and match resources.
You can go crazy with the RAM.
They have even more configurations than that.
Let's see here.
Do they list on the website?
Yeah, so here's a droplet for you.
196 gigabytes of RAM.
How about that one?
32 CPU cores.
Oh my god.
Maybe that will run Gnome.
Yeah.
Yeah, Mudder's going to repaint real quick on that one.
Oh boy, isn't that something?
So they've got a whole range of hardware.
And they've just recently launched tons of updates
to the tutorial section.
I mean, for days and days now, they've
been releasing new tutorials.
So there's tons of new docs, which you don't have
to be a customer to read it.
I don't know if Crazy Digital Ocean knows this,
but they're giving this stuff away for free.
And they just posted a great VPN setup guide using StrongSwan.
And StrongSwan is an IK2 VPN server
that gives you a whole UI to manage users and revoke keys.
And it's slick.
StrongSwan.
And they have an introduction to setting up
StrongSwan on 18.04 and then getting your clients set up.
They walk through.
It's a seven-step process.
But by the end of it, you've configured the VPN client
on a Windows or Mac or phone and connected it
to your droplet running StrongSwan IPsec VPN.
This is killer.
I love their documentation.
It's so well done.
Everything Digital Ocean does has a bit of a design touch
to it, from their dashboard to their marketing
to even the guides.
It's just so clean.
And they also release something every quarter
called Digital Ocean Currents, where
they surveil their customers without them knowing.
No, actually, they just were sent out a survey
and say, hey, what programming languages are you using?
What desktop environment are you using?
What server technologies are you using?
And then they answer, and then Digital Ocean takes all
the results, collates them, and puts them in their currents.
And it's great.
And I covered it recently on Coda Radio,
and you can find it on their website, too,
if you're curious about trends and containers and programming
languages and just sort of where the market is going.
Because Digital Ocean customers, again,
are a little more cutting edge.
So they are a good indicator audience.
And that's why I really appreciate those currents.
And then last but not least, another from the beginning.
Linux Academy has been a sponsor of Jupyter Broadcasting
since 2014.
That is a really long time in this business.
I'm really proud of that, because it's a great fit.
The Linux Academy goals and our audience
are like a perfect lineup, because they
are so dedicated to the students, it's obnoxious.
So much of what they talk about around here, it's great.
It really is great to hear it.
It's one thing to see it online, but then it's
been a totally another thing to be here and be at that summit.
The effort and the expense of flying all these people out
and putting them up in the hotel room is enormous.
And the reason they're doing it is to keep a remote team working
well and cohesive and help people build relationships,
which is massive to a functional setup like this,
where people are all remote.
They really invest in these people.
But what I've learned being down here,
and you've never asked me to tell you about this,
but it is the truth, is there is a ginormous staff
of real experts in this stuff.
These people that are here, the Azure people
are from Microsoft.
The OpenStack people are from Red Hat, on and on.
The AWS folks are coming in from all over the place, really.
But they've got people here from Amazon.
And it's interesting.
It's a very competitive environment for the folks
that work here, because when you are really high up
in those fields, your skill sets are in demand.
So that has been an interesting thing to watch, too.
And so Linux Academy tries to treat their people really well
here, because some of these course authors
are really in demand.
And that is a massive investment they
have made to keep these people happy,
keep their team working together,
and keep them turning out content, which
is a massive job.
These last two weeks, they've launched over 75 new courses
and challenges and learning activities.
And they're not done yet.
That's one of the reasons I'm still down here,
is we're doing another little release this week.
And then there's two more, which I don't know if I'll stay for,
next week.
Plus, they're doing a hardware giveaway of this Ansatel 1,
which is this monstrous red, like rocket red,
box that you can take cloud images and run them locally,
and then send them up to different cloud instances,
like AWS and Digital Ocean.
It links it all up, and it's a super cool learning tool.
And it's going to fit really well
with a new feature the Linux Academy has in development
right now, that once it's done, we
will be obvious why this is such a cool box.
And so they're doing a giveaway on their live stream next week.
I may or may not be here for that one,
but you can go to linuxacademy.com slash live
if you want to learn more about that.
That is just a thing, man.
I tell you, that box is this really neat appliance idea
that I've seen different companies take a crack at.
And the Ansatel 1, you can go look it up.
It's like a $700 box, but it's great for learning.
It's just so awesome.
Also, I don't know what Anthony's Twitter handle is.
Off the top of my head, I'll go look it up for you.
He's giving away exam vouchers on Twitter.
And that is, you don't have to be a Linux Academy subscriber
to get those.
He's just Anthony D. James on Twitter
if you want to follow him.
He's doing giveaways from time to time, Anthony D. James,
at Anthony D. James on Twitter.
And he's giving out LPIC exam vouchers and things like that.
So also not a bad way.
Because really, think about it.
You're not competing with thousands of people.
You're competing with a couple hundred at most,
maybe 30, 40, 50 people, depending on when he does it.
So if that's something that would maybe be a break for you
and really help you out, go follow him.
Because I think he's got like 40 of them to give away
or something.
He's got a lot.
I don't know how many he's going to give away on Twitter.
But he's just got a whole batch of them
that he's going to be giving away.
LinuxAcademy.com slash Unplugged is
where you go to learn more about them and support the show
and get a free seven-day trial.
LinuxAcademy.com slash Unplugged.
And yeah, thank you, Wes, for posting that there in the IRC.
That's a good deal.
Those are not cheap, those exam vouchers.
So it's a pretty nice deal.
Yeah, that's awesome, especially if you're just getting started
or want to really come in back to the field
and want to really feel like you know what you're doing.
That's a great way to start.
So a couple of app picks.
Everybody loves command line apps.
So how about an RSS reader for the command line?
It's called NewsBoat.
And it's a pretty snazzy text-based RSS reader.
It's sleek.
It also supports Atom feeds, of course.
And it's meant to run in the console.
And it is a fork of newsbateur, which
is how I used to pronounce it.
So that's how I pronounce it now.
And it looks pretty nice.
It's pretty straightforward.
It's kind of what you'd expect.
And it has a configuration file that's easy.
And it's in the Debian repo.
If you want to install it on vanilla 1804, it's NewsBoat.
So just apt install NewsBoat.
And you can read news articles on the command line.
Actually, not as ridiculous as it sounds.
Actually, no.
I was going to say, I've kind of shied away
from RSS readers in recent months.
Really?
But really?
I mean, I don't know that I would use it for everything.
But this could really be sort of useful,
especially I think I'm like, oh, yeah, I've got some tests running.
And I'm waiting on some output of some program.
I'll just pop this open real quick, check on a couple things,
do some show research.
Might be handy.
Actually, it's also got an additional feature.
It can download podcasts.
Oh, good catch.
Really?
Nice.
Yeah.
Good catch.
You know, where I really hit my power stroke
with automated messages from servers
was when I came up with different systems
to dump it all into RSS feeds.
And I got them out of my inbox.
You know, like cron jobs that have output or a backup report
and stuff like that?
Got them into different systems that
would convert them into an RSS feed
and then put them in an RSS reader
so I could just check on all of my cron job
reports and backup reports as part of my daily news routine.
And that was a next level hack I did.
I really liked that.
Oh, that's clever.
I imagine that would help you kind of see things that stood out
as well, rather than having to sort through an inbox.
You get like legitimate chains of related content.
I was trying to keep this to be a short episode,
but I got to side rail us here because you don't use RSS.
You cast a pretty wide news net.
Like when we do our link dump, you got a big list of links.
I thought for sure you must be doing RSS to collect all that.
You know what?
Surprisingly not.
I mean, it's not like I haven't ever done RSS.
Just lately, I haven't been that happy with any
of the particular readers.
So I've just kind of fallen off.
And I obviously have indexes and other lists
I keep of places to check.
So it's sort of just a hacky manual system.
It's really in need of some more automation.
Well, to keep us on the tech space train,
Joey over at OMG Ubuntu calls out Browse, I guess,
is how you say it.
Browse, B-R-O-W-S-H. And it is a modern tech space browser
built for the command line.
And it's pretty great because unlike links,
it supports JavaScript.
It supports WebGL content.
It supports photos.
The only hard requirement is you do
have to have a version of Firefox on your system.
Browse uses Firefox to fetch the web pages
and then passes the necessary bits via a web extension
so it can then render it in low-fi glory in the terminal.
So I guess you just got to leave Firefox
for on somewhere, Wes, and then set this all up,
and you're good to go.
Have you seen the images it renders?
It's pretty rough.
It is pretty rough.
But one interesting thing I saw, too,
is they have a way that you can actually
view it on the web as well.
So you could almost just use it as a way
to take some sites that were way too complicated
or full modern web and turn it into something a little older.
Yeah.
Yeah, it's great.
I kind of want to do that.
That's sort of a cool look.
That's pretty awesome, though.
I mean, I think that's probably we're
not going to be able to beat that for AppPix for the day.
So we'll stop there.
But Browse.
And you can get it at brow.sh, B-R-O-W-S-H.
I will also say they have a call out here.
It's early days for the project, so you're probably
going to find some pages that don't work.
But don't despair.
I think if this is going to ever get really good,
it's important for people to go submit URLs.
They have a way to do that on their GitHub repo
so you can get better support for the sites
that you actually want to visit.
Nice.
I would say we could end it there,
but I do have to ask the question, what
happens when Linus quits?
This got on my mind because after Joe and I finished
Linux Action News, where we covered Python's leader
stepping down and sort of what led to that,
Joe and I were talking off mic.
And afterwards, they're off recording and still on mic.
What happens if Linus rage quits one day?
I mean, you can tell the job is stressful at times.
And you've got to figure he's going
to get to a point where he's going to put his hands up and go
either very happily say, I'm done.
Thank you, everybody.
I've had a great time.
I'm passing the torch.
I wish you all the best.
Or there could be a time where he tells everybody
to go F themselves, and he signs off the internet
and never comes back.
But either way, what happens when Linus retires?
And where does that role shift?
And is that something that we even need to worry about?
These are all the questions that have been floating in my head.
So let's break it down a little bit.
Does anybody in the Mumber Room actually
know what the official handover process is for the Linux kernel
when Linus moves on, when he retires?
We're not saying he dies.
He retires.
Maybe he gets acquired.
Yeah, Microsoft buys Linus out.
I mean, right now, he's employed by the Linux Foundation.
So my assumption has been that the Linux Foundation would
sort of manage that.
So I did a little research, because I didn't
know the answer to this.
So I did a little digging around.
And what I found is a post by Linus on the mailing list
forever ago.
And he says, not everybody reads every post in the Linux kernel
mailing list.
In fact, nobody expects to have time left over
to actually do any real kernel work.
We'll even read half of it, except for maybe Alan Cox.
But he's actually not human.
But 1,000 gnomes working in underground caves
are powering Alex Cox.
None of the individual gnomes read all the postings either.
They just work together very well.
So if there's one person he might pass the role to,
people speculate it could be Alan Cox.
There's also been discussions, I found, online
where there's a group of people that they would probably
pass the torch to.
It looks like someone had asked Linus at an event.
And the way that Linus described,
although there isn't a transcript of it, at the event,
was that over time, he would start
to make a slow transition to different people.
So he would essentially break his role out.
And then others would begin sort of filling those spots.
And then they would start vetting other people.
And it would just sort of spread out from there.
In the end, he said the result would be better
for Linux in the long term.
Rather than having one person who gets overwhelmed
by vetting everything, it would be spread out
into a process that could scale, which would probably
be better for Linux in the long term.
So Linus himself didn't seem to be too worried about it.
As long as there's the case that he doesn't get hit by a bus
and then we're left in a little more chaos,
I imagine it'll be kind of like what Guido seems to have done,
and an announcement of retirement or whatever else,
and then a slow fade as things are doled out.
And the community, I imagine, would naturally sort of step up
and some rules would be established.
Maybe it starts off with one person doing most of it,
and that gets further delegated.
Maybe it's eight people that are all just taking it piecemeal.
Now, it might be a good idea, as that gets closer,
to have some more formalized stuff.
I do really like the way, for instance,
the FreeBSD project is managed and have
an actual organization responsible for this.
Maybe it'll go that way long term.
It would be nice to have some maturity,
even if it's not really a problem
that we expect to have right now.
I have a question.
On a day-to-day basis, I mean, this
might be an obvious question, but what does Linus actually
do?
He did a recent interview where they asked him what he did,
and he said, my job is mostly very boring.
And he says they're reading emails and processing
pull requests and doing admin.
So it's mostly admin.
Yeah, exactly, and facilitating communications.
My vote would be go to Greg KH.
I've only had two opportunities ever to talk to the man,
but really just really respect him.
And I think he's really level-headed,
and he really seems to stick with stuff.
So Greg KH would be high on my list.
Somebody better step in, though.
I think we do need a leadership role.
I feel like you do sort of need somebody to sometimes push
things through.
And if it's not Greg or Alan Cox,
you know it's going to be Lenard Pottering,
and you know it's going to be Colonel D.
And he'll announce a fork.
It'll be Colonel D. It'll be System D, Colonel D,
and Lenard will control the entire stack.
Oh, finally, a unified stack of the future.
Yeah, you know what?
Lenard, I love you.
I'm just kidding.
It would be great.
It would probably be a good stack,
and we'd finally, finally have a decent API.
Go get more Mr. Popey over at the Ubuntu podcast.
He's over there doing his thing.
A new episode is just around the corner.
Go get more Wes.
He's on the TechSnap program at TechSnap.systems.
Shout out to the Mumble Room for making it this week.
Really appreciate you guys.
If you'd like to join the Mumble Room,
go to irc.geekshed.net, and you can do pound mumble in there,
and you'll get all the info.
Or just Google search Jupiter colony mumble setup,
and you'll find a guy.
It's absolutely magic.
Hey, did you know this show is live on Tuesdays,
and you can join us.
Get it converted in your local time zone
at jupiterbroadcasting.com.calendar
and jblive.tv for the live stream.
Saying thanks for being here, and you know what?
See you next Tuesday.
Bye!
You know, the real question, Chris, is what happens when you, when you resign?
That's the real question.
I'm going to, are you kidding?
I'm going to be broadcasting until the day my mouth quits working.
I can't help myself.
I get antsy if I take a couple of days off.
It's good for my sanity to keep going.
Unless, unless I could go live on a big piece of land, maybe a ranch somewhere, park the
RV.
Oh, ranch style.
And then just start a small colony there.
And then I, and then I, and then I might be happy to.
