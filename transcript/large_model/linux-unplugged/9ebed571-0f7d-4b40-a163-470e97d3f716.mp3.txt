The internet should be simple and safe.
We strongly believe that having nothing to hide shouldn't mean having to show it all.
This is Silent Keys.
A beautiful and secure keyboard that defends your privacy.
Open source and plug and play, Silent Keys protects you from viruses, ransomware, mass surveillance and identity theft.
Stop governments, employers, search engines and credit agencies from seeing what you do online.
Browse without fear and protect who you are, what you do and what you like.
Block annoying tracking ads and encrypt all your traffic so you can surf the web privately.
Every year, millions of people experience banking fraud and lose their savings.
Be safe from keyloggers when accessing online banking, Bitcoin and social media.
Stream your favorite TV shows from all over the world with no restrictions.
Because a simple keylogger can record all your keystrokes and defeat the best security,
we created a tamper-proof keyboard, an aluminum shell that can't be opened without breaking.
It's really easy to use. Plug it in, press a button and boot.
Silent Keys includes Satya, a modern and secure desktop.
The best way to protect an operating system against viruses is to make it read-only and have it load from scratch at every use.
This makes it immune to insecure systems and leaves no trace.
Just like a CD-ROM.
Silent Keys features a secure update switch with free and unlimited updates.
To protect your privacy and prevent data leaks, Silent Keys automatically encrypts your web connection using Tor or VPN.
Anonymous browsing on Silent Keys safely counters fake Wi-Fi, ISP snooping, mass surveillance and hackers.
All ads are blocked too.
Secure messaging and end-to-end encryption for your email comes out of the box.
That is the slowest email encryption I've ever seen.
Okay, if this is legit, if they can make this something that's really simple for the average person, it's not so bad.
But look at this, Wes, 616 backers. They were only going for $55,000, they've raised $105,000.
So they're scratching some itch, but it's essentially a read-only live GNOME desktop with a decent GNOME theme.
Yeah, I mean, it doesn't look bad.
You know what, Wes?
Why is it a keyboard as well?
Well, because then it's the tamper-proof device where it freaks out when it gets broken.
You know what, guys? This is what it tells us.
It doesn't matter about the technical whiz-bang because, you know, they mean this is or it is what it is.
It may or may not be hacker-proof, right?
Right.
What it does tell you is that we are in the wrong business.
This is Linux Unplugged, episode 150 for June 21st, 2016.
Oh, welcome to Linux Unplugged, your weekly Linux talk show that is awash in distribution releases.
My name is Chris.
My name is Wes.
How about it, Wes?
Like today, this week at least, it giveth.
We have some great releases to talk about today that are super fresh.
We've got a Mycroft update that I'm really excited to talk about for multiple reasons.
We'll tell you guys all about that.
Some cool hardware coming for Ubuntu Phone.
A free great game for Linux this week.
DockerCon's going on right now, and I've snussed out – snussed out?
That's sussed and sniffed.
I snussed out some of the best stuff.
And then coming up last but not least, we're going to look at Maroo?
Maroo OS.
The desktop on your Android phone.
Yeah, it's – they claim they've got Convergence, and they've based it on Debian, and it's here today.
And I – it uses like Wayland or some shenanigans.
Like there's some crazy far out future technology in that thing.
I don't know, Wes.
You have to dig into that.
Wes has got a load on his phone.
He'll give us his take, how it runs on his Nexus 5.
And towards the end, Flatpaks, they're officially here.
Yeah, you know, universal software installation.
That's another universal answer.
Another standard Flatpak.
Now we've got Snaps, Flatpaks, App Images.
They're all competing to essentially do the same thing.
But we've already talked about that aspect of it.
But since we started that conversation, people have gone to war.
It is a fast-moving story.
Holy.
I mean, I don't want to drop an S-bomb at the top of the show.
I'm sure we were all like kind of bitter about Linux packaging or something.
I don't know.
I mean, it has gone to full-fledged war over this.
And boy, my – somehow because I talked on two shows, I have wandered in the middle of this.
And I am just getting slammed on all sides.
And we're going to just talk a little bit about it today in the show.
And we'll see.
Depending on how far this beer gets me, I may get a little ranty, but I doubt it.
Because we just got one great beer here from Fremont Brewing just a bit down the road.
Just a piece from where you probably work.
I mean, not too far.
All things considered, coming right out of a local Seattle brewery.
Because beer matters, it says.
This is the Summer Ale, their American Pale Ale.
This looks like a nice treat, Wes.
And I've got to say, too, it's got a good color to it.
Do I have the camera on?
Yeah.
You guys probably can't make it out.
Yeah, it's a little dark.
But it has a really good color to it.
Oh, I didn't open mine.
Jeez.
Come on, Chris.
Let's see.
Let's document the hazard and mess right now.
There we go.
So we will be –
We've come prepared.
Yeah.
We've been enjoying that during the show today.
So we've got a lot to get into.
Let's bring in our virtual lug.
Time appropriate greetings, Mumba Room.
Hey, yo.
Good to see you.
Hello.
Wow.
I really caught – look at that.
I caught them off guard.
Did you see that?
Yes, you did.
All right.
So guys, I already asked you on the pre-show.
So I already know the answer.
We haven't really got a chance to kick the tires yet.
I'm going to hold my powder drive for the segment.
But Fedora 24 is officially out today.
And there are some really nice things in this one.
Mainly, the one that I'm really looking forward to is in GNOME 3.20 is in this.
Also, talked about it just a bit briefly there,
Flatpak support is also included in this version of Fedora.
So they have sort of an official, unofficial upgrade guide,
I'm going to call it, that we will link in the show notes.
Interesting.
Yeah, where you can do an update.
And I have a – just put it actually recently back into production a bit.
I'll tell you about that later in the show.
The Fedora Cloud installation that I have running a couple of different containers
and whatnots that I'm going to do an upgrade from 23 to 24 as part of my –
I'll be curious to see what you think about that.
Yeah, I'll give you my thoughts.
Part of my review in Linux Action Show on Sunday, I'll talk about Fedora 24.
But congrats to Fedora for getting a release out, shipping it with GNOME 3.20 in there.
And I think it's got kernel 4.5 or some shenanigans like that.
And of course, looking pretty solid with the Flatpak support.
So that's Fedora.
We don't have a lot to say about it because we have so much to cover.
Why don't we jump into a little Mycroft news because Ryan is joining us today.
Wonderful.
Welcome back to Unplugged, Mr. Ryan.
Hey, it's good to be back.
Thank you, sir.
Thank you.
Thank you, thank you, thank you, thank you, thank you very much for being here.
We really do appreciate it.
So tell me about version.7, responsive listening, third-party skills, a new voice,
the big update, and better emotions on the front panel too.
Like there's a lot to cover here.
But what the hell is responsive listening?
Can we start there?
Responsive listening is a name I came up with because I didn't have a good name for how to describe it.
But for the longest time, and you'll see this in the blog post that I made,
we played around with this idea of passive listening, and it worked all right.
And that was the deal where you can say an entire sentence, put Mycroft's name anywhere,
and it will trigger and then take action.
But what we found was that lots of people were already interacting with the device
in the way that Google now has trained them, and Siri and the Echo.
And so they were saying, you know, hey, Mycroft, and then saying whatever they were going to say.
How were they supposed to be saying it beforehand?
Well, it's not that they couldn't say it that way.
It's that they could insert the name anywhere that they wanted to.
Oh, so the actual Mycroft part of the sentence, the word Mycroft might be four or five words into the sentence,
and the system would have to be able to wake up and scan back to find what was said before the name, right?
Correct, and it was pretty cool technology, but people didn't understand the latency that came from that.
And it was only about a second, but there are now expectations,
especially because people are comparing us against the Echo.
And so what we've done is we've gone ahead and put responsive listening as the default.
So you say, hey, Mycroft, and then your query, and it comes back pretty much instantaneously.
And then what we've done is we've gone ahead and begun working on making the existing passive listening,
is what we called it, an option that people can just go in and check in the config.
Oh, that's neat.
Responsive listening, that's a good name.
And I guess I assumed because of that's how, like you just said,
all of the other assistants that are sort of on the market right now operate the other way.
I just assumed that would be the way Mycroft would operate.
There's so many little aspects to this.
And Ryan, it got me thinking about sort of an advantage that Mycroft might have,
being open source, where the code can be publicly audited.
People have a higher level of trust in it than say maybe the Alexa or the Google stuff,
because you don't really fully understand their complete motivation behind the product.
You have a pretty good idea, though.
And with Mycroft, everything being kind of out in the public,
it doesn't quite matter what the motivation is,
because you can still see what the end result is literally for yourself.
And so that gives Mycroft the opportunity to maybe be a little creepier than say Google or Amazon can be.
Like it could eventually give Mycroft room to say,
hey, would you optionally like that we listen to everything all the time?
I mean, there's like a lot of different things that people might be willing to let a fully open source assistant do
that they wouldn't want a commercial version to do.
Am I making sense here?
Yeah, but you're operating under the assumption that the Echo isn't already listening all the time.
Well, yeah, that's true.
But yeah, and what we're hoping is that eventually I think that's the way that a lot of these little smart assistants will be,
regardless of whether or not they're in a dedicated device in your house or on your phone or wherever.
The question is about trust and about whether or not, because I think eventually,
and we talked about this at one of our meetings, one of our all hands meetings,
somebody brought the fact that eventually they thought that the benefits would outweigh what a lot of people saw as security concerns.
I'm not saying that that's how we feel.
But, you know, it's the idea that it could listen and be smart enough to actually offer you up suggestions
or take notes for you that you might forget to take yourself and things like that.
Those benefits might eventually outweigh people's privacy concerns.
But the worry is, you know, what company are you going to want to trust your data with?
Are you going to want to trust your data with a company?
Being an open source company, an open source project, we get to be a little more transparent with users
and let them know, you know, here's kind of how things are.
You can audit the code and make sure that it's only listening when you want it to
and not have to do some sort of crazy gymnastics to figure out what exactly is happening with your data
and whether or not you just bugged your house.
Yeah, and what exactly is it that they're storing and why are they storing it?
You know, you make a good point because I think, unfortunately, and I want to make sure that sinks in
because I always get pushback on this, unfortunately, I think you are right in the sense that
the convenience that a lot of these different platforms offer, be it iOS or Android or the entire Google platform,
it is, for people who just need a little extra help in life, it is actually very tempting.
And it seems to me that if they're willing to make that concession to use Google, like I have recently
kind of started going all in with Google because Google Photos is just, they just happen to nail something
that is exceedingly important to me as a father of three young, adorable children.
Google Photos is one of two offsite backups, plus I have a local storage of all my photos.
And the ability to search that and say, you know, Grandma and Hugs and Dylan and get all that mapped out is super useful.
And then I started using Google Fit because I'm starting to exercise more and getting all of that information,
being able to use different devices for different tasks and have all of them report back to Google Fit
as a central input to get all of this. So now I have like one spot to go to get a lot of different information
from weight, water, sleep, quality, walks, all of this information is in one dashboard for me now.
With charts and all this kind of crap that is very nice to have.
And of course I know, I am fully intellectually aware of what that means they are doing in terms of tracking
and the information they're building about me. And if I had a better solution for some of this stuff,
I immediately would probably go somewhere else. So I think even if Mycroft gets to the market in a year or two
where they're competitive at some of these levels, be it the artificial assistant where you can prompt it
and ask it questions or whatever it is, I think if people are already like me who are very aware of the problem
and are still willing to make the concession, as soon as something like this comes along,
it's going to be like, I'll be an early adopter, we've got to go all in on this.
I think it's from people like me to just the average person are going to be really responsive to a product like that.
That's a big one.
I think that what we have to do as a community is consider what we want the future of this stuff to look like.
It's so crazy how locked down this specific technology is with these providers that aren't Mycroft.
They're much more locked down than let's say like Android, which is slowly moving that direction.
But when it comes to these intelligent personal assistants, it's really, really a black box.
What's crazy is they're quickly becoming one of the most intimate things you interact with.
What I think is that we should have an answer and that's what we're trying to do with Mycroft.
One thing I wanted to get back to is before we talk about all the crazy stuff going on in this space,
I wanted to talk a little bit more about the release because you talked about a couple of things that were in there.
One thing I want to know more about is third party skills and things like that too.
Absolutely. That was the end of discussion on that. I was kind of curious to go more back to the 0.7 release.
For those with developer kits, we got a lot of new face animations.
It's a lot more responsive.
We're looking at trying to present data on the face on that little LED array.
Whenever you ask for the weather, it gives a really nice, clean interface for seeing the weather as well as other things like that.
Then third party skills, which you talked about.
This is the beginning of something we've been planning for a long time was a way to install third party skills.
Right now, you have to literally drop the skills into a directory for them to be loaded when Mycroft starts.
We're building a skill management system that talks to a repo full of skills people have submitted.
The idea is that you can just add a Roku skill and various other skills.
Oh, man, Ryan. Oh, man.
The thing is, there's already third party skills out there.
We need to get a list of those so that people can start playing with them now.
That's why we kind of accelerated this piece because we keep getting people saying,
Hey, I wrote a skill. Will you accept it in the core?
We have to walk this line of, yeah, that's a really cool skill, but I don't think most people use that.
I know that there are people who will use it.
Let's see about getting it, making it installable by people.
For instance, there's this one called diagnostic skill,
and you can ask it all sorts of questions about your system that Mycroft is running on.
What's the CPU usage? What's the RAM usage? Things like that.
Then we also saw, oh, boy, there's lots of skills.
Mycroft is a little bit more personal now.
You can say, how are you doing? Hello?
Hello, that's so sweet.
I'm not sure if it's still in there, but for a while, when you asked him how he's doing,
sometimes he would tell you a little bit about what's going on.
He would say, hey, I'm doing good. I'm busy.
Then he would list off a few processes that were running on the bar.
That's awesome.
That's really funny.
I secretly use Arch Linux.
Yeah, and we got a new voice, too.
That's cool. In fact, we have an example.
Poppy posted this. I think he's pretty excited by this.
This is the new...
74, Lawrence, Kansas has few clouds and is currently 76 degrees.
Yeah, here, I'll start from the very beginning.
With a high of 78 and a low of 74, Lawrence, Kansas has few clouds and is currently 76 degrees.
Certainly a little robotic, Ryan, but that's pretty...
That's really cool.
Yeah, I mean, it definitely sounds like Poppy.
It sure does.
That's amazing.
Yeah, it's pretty awesome.
We're continuing to make improvements to that voice,
but frankly, now I'm very accustomed to it.
Yeah.
Poppy keeps talking to me every day.
Fake Poppy.
It kind of makes me want to be able to address the unit as Fake Poppy.
You know?
That's...
Phoebe.
Yeah.
Phoebe.
Okay, and also, I saw there's a Debian repo.
Oh, I'm excited for that.
That sounds great.
So if I'm...
What does this mean?
Can you...
Is it just now a couple of app sources away and now I can install all the Minecraft packages?
So, yeah, we have an app repo.
Aaron, our systems administrator, he's been on here before,
ran into a problem that he talked to the packaging community about.
So I think that repo will probably be shared out, I would guess, tomorrow.
Yeah, I don't know if you got the memo, Ryan.
We're all about snaps now, so not repos.
No, flat packs.
Oh, flat packs.
Yeah.
No, snaps.
I know.
I'm very, very familiar with snaps.
I'm very, very familiar now with flat pack.
We're playing around with those.
We have a snaps repo up where people can watch as we package that up.
And at this point, we're just asking for help on all of our packaging.
We want to package in all of the different standards for every repo,
as I know that we've been talking a lot about lately with the universal...
all these different universal packaging...
Solve, yeah, all these universal solve all problems standards,
which we're going to talk more about when we get to flat packs in a bit.
But yeah, it's...
But we're just trying to package Mycroft in as many...
get it to as many different people as possible, and that's kind of our focus.
So if people in the Jupyter Broadcasting community want to help us do that,
that would be great.
And then finally, we've got...
if you look at the bottom of the blog post,
which I hope that you'll post in the show notes,
there's a few other projects that we're working on.
We're working on a community website
that has a lot of information for those who are interested
in contributing to the open source side of Mycroft.
And then we're working on just all this stuff that you can see in GitHub
as far as, like, we have an issue tracker
and we've just been throwing all of our ideas in there.
And so we're really getting tons and tons of feedback,
and lots of people are submitting front ends for Mycroft.
We now have a plasmoid...
a home extension, an Electron front end, an Android app.
Oh, cool. Oh, man.
So it's coming in really, really fast, so fast, in fact,
that we're finding it really, really difficult to answer all the questions
as people charge ahead, but that's a great problem to have.
You know what would be a killer feature in comparison to the Echo
and probably even the Google Assistant and Siri is
if somehow all of these...
if I had it on an Android device on my desktop and in the hardware device,
I know we've kind of mentioned this before,
but if somehow all of these were connected in some way
where if one of them learned something or could, like,
if I could, say, send a telegram to Wes to one of them,
all of them can have that functionality without me having to install an app
on each one or install a third-party feature on each one.
Like, if at the end of it, you know, maybe it's a couple years down the road,
these different Mycroft endpoints all felt like a shared brain,
truly got us closer to Jarvis.
Because right now, all the other AI assistants,
they're each their own individual thing.
Like, if you're using Siri and you have an iPad and an iPhone
and now you're going to have it on the Mac OS,
you literally, you could say, you know, hey, telephone,
and it will, if they're all in the same proximity, they'll all light up
and they'll all try to answer the question like a bunch of dummies
and each one of them doesn't have any idea that there's another instance
of it running.
Now, I don't know what the solution is there, but if there was some way
to make it feel like one cohesive intelligent system, Ryan,
is that possible? Is that within Mycroft's future?
Yeah, it is.
It was one of our day one features working on,
and we're still working to make it so that the units are aware of each other.
They live in what we call a domain.
They're supposed to eventually have awareness of each other,
and if, for instance, two of them pick up the same thing,
go through some very, very quick election process to say,
you're getting the better stream, you're in a better position
to answer this question, you go ahead and do it.
And the other thing, too, is that we already have shared configuration
across instances.
I have four Mycroft instances.
They're all in the same settings, and that's all done through our backend,
which is currently named Cerberus.
However, a lot of our backend stuff is going to be getting a really,
really big update soon, and so you'll see maybe that name go away
and a true backend that really feels comfortable to use
and is really a great user experience comes to the forefront.
We're super, super busy, but everything's going great,
and we're trying to build as many relationships right now
with folks who are packaging software and folks who are interested
in working on frontends for Mycroft to just let it permeate
to as many different places as possible and to make that process
of getting started with Mycroft that much easier.
It's great you guys are working on snaps.
Do you know what it is in packages that started to land in the AUR?
That'd be great, too.
I don't know.
The thing is, every time I check out the AUR for a project that I work on,
someone has already beat me to it by the time I go to package stuff.
So it wouldn't surprise me if there was already Mycroft in the AUR,
and I've got an Arch machine in front of me right now,
and I haven't taken the time to check, but it wouldn't surprise me at all.
I've been working really, really hard on trying to help people
get the information they need to finish their frontends.
I'm super interested in the GNOME extension and the Android app.
Yeah, that is looking really good.
So, Ryan, my last question.
Are you ever going to make it out to Washington?
Because we've got to Mycroft up the JB Studio like nuts.
Yeah, I actually was just contemplating this the other day.
Now that we've really got so much done, I'm interested to come out
and not only hook up the JB Studio, but also Lady Jupiter with Mycroft.
We've got it controlling some things like the Nest
and some early smart things stuff and Philips Hue stuff,
so maybe we'll also have to see if we can figure out some smart things
to pimp your place out with.
Yeah, that's going to be so ridiculous, because I actually,
a couple of months down the road, am going to go on a road trip
to go to a developer summit, and I think I'm going to do
a Lady Jupiter technology rover log video for that.
I probably should have just said that out loud, because now I have to do it.
Damn it!
Yeah, I'm wondering if we can put like a,
what's your internet connection like when you're in Lady Jupiter?
It depends on where I'm at, very much.
Anywhere from a megabit, you know, 700 kilobits a second
to up to 30, 40 megabits, depending on location.
Well, the thing that we could do that I think would be really cool
is to take like a NUC and hide it somewhere in Lady Jupiter
and then connect it to like this complex microphone system
throughout the thing, so it's just one brain all the time.
You know what, I actually have a spot.
There is a spot underneath one of my seats,
there's an AC outlet underneath the seat, and it's an open space,
and I already have a Linux powered access point and router down there.
So I was just planning to kind of expand that out,
and I got a spot in there for a NUC already.
If we got a dedicated, somebody who's been working on an Electron app,
it'd be cool if you full screen that Electron app on like a display.
Oh, totally.
Oh, man.
Totally, totally.
Oh, man.
Lady Jupes, you know what would be really cool is
Lady Jupes has an outside outdoor television,
and so like when we go to like, you know, like summits and stuff.
Lady Jupes played the live stream.
Yeah, put that up on the TV, on the outdoor TV.
That would be really crazy cool.
And actually, all the video is routed to a switcher,
so it would be no problem.
We just send the feed.
Yeah.
It's easy peasy.
So people want to know in the chat room,
is there anywhere that they can find the Android app yet?
Is that out yet?
You can.
I would tell everybody to go to the docs.microsoft.ai,
and there's a little contributing option there where you can see like
all the ways to get involved.
And if you join either our IRC or our Slack channel,
we've been talking about it a lot lately,
and if you're a community member who's working on it,
I'm not entirely certain that he's popped it into the repo yet,
but I'll ask him because I know he's collaborating with somebody else
in the community, so they have to be collaborating somehow.
So maybe it exists, and I just haven't gone and visited it yet.
So it sounds like it's an open source Android app?
Yeah, yeah, and it runs the full stack on the device too.
Wow.
Like, my crop is running on the device.
Holy crap.
I want to try that.
It's not hitting an API or anything.
We got a pull request a while back that took,
so this is a core on a Raspberry Pi, so bear this in mind.
It took it down from using 100% of one core on a Raspberry Pi to less than 1%,
just based on improvements that we made to the listener.
And so since we did that, we've been loading it on many, many small devices,
and it's been flying.
That's awesome.
And a lot of phones, a lot of Android phones,
are actually more powerful than a Raspberry Pi.
So from what I saw in the little demo video,
and I'll try and share it with you,
because the guy recorded his son talking to his phone
and the Android app answering.
Wow.
It seemed to be running just fine.
That's amazing.
So what you're telling me is you pulled a Richard,
and you Pied Pipered this thing, and you went from like 99,
and you just cut it.
That's an incredible reduction from maxing out a CPU core to 1% CPU usage.
Now you just have Minecraft everywhere with me.
That's what you get for...
It was a community member.
He now is an intern, but he wasn't at the time.
Isn't that awesome?
And so we can't really take...
I mean, I guess we can take credit for it now that he works for us,
but at the time we couldn't.
That's a huge benefit of being open source.
Man, that feels good.
Well, Ryan, thank you for the update.
And if you are able to stick around,
we will be getting into Flatpak and Snaps in a little bit,
and I'd love to hear some of your thoughts on that.
While you're just mentioning...
Yeah, go ahead.
I can say something that gets me yelled at.
That's what this show is for.
I got to tell you, don't worry, nobody's listening,
nobody's going to comment afterwards.
Certainly not.
Don't have to worry about that at all, Ryan.
There's not even a subreddit for it.
There's not even a subreddit.
We were just talking about the Android phones.
OnePlus 3, you know, the new OnePlus phone,
which is just getting complicated.
Very complicated.
OnePlus 3 looks like it's going to become
an unofficial Ubuntu phone, though.
There is some interest out there by the ubports.com folks,
a group of independent developers.
They're going to port Ubuntu Touch to the OnePlus 3.
This would make the Ubuntu Touch available on a very nice,
modern, capable, fast, and very well-reviewed smartphone.
Considering a new smartphone, maybe the OnePlus 3
should be my future.
Maybe, because it's getting really good reviews, too.
I mean, I want convergence, right?
Like, who doesn't?
Well, we'll find out how Maru works on your phone
in just a little bit.
Speaking of phones, let's also just take a moment right here.
Guess who we're going to talk about, Wes.
Do you have a guess?
Ting.
Oh, it's Ting.
That's right.
Go over to Ting and check them out.
Ting is a little different than anybody else.
They don't work like your regular cell phone provider.
Ting keeps rates simple.
We don't make you pick a plan.
Instead, you just use your phone as you normally would.
How much you use determines how much you pay each month.
All right.
You can have as many devices as you want on one account.
That's good, because when you use more,
you pay less per minute, message, or megabyte of data.
Is that math right?
Your usage plus $6 per active device on your account
plus taxes is your monthly bill.
Yeah, it is.
Simple.
That's what we mean when we say mobile.
I get it.
That makes sense.
Yeah, it's your minutes, your message, your megabytes.
That's your Ting math.
And then it's $6 for the line.
And then whatever Uncle Sam's cut is right there.
You see, you just got...
Wes?
Boom.
That is what you get right there.
And I got to tell you, Wes, I was sort of all in on Ting
just because of the savings when I switched over.
I was like, okay, well, that seems obvious.
I want to pay less every month.
Yeah.
And I have Wi-Fi at home.
I have Wi-Fi here at the studs.
I have Wi-Fi at family member's house.
I have Wi-Fi at, you know, there's Wi-Fi on the bus these days.
Freaking McDonald's has freaking Wi-Fi.
So I was like, this is going to be great because I'll be able to game the system.
So that was sort of what brought me over to Ting.
But then what kept me at Ting, the first bit,
is I kept having these revelations about how they were actually a really cool company
and not just like a bullshit like, we're hip.
And so we do blog posts.
No, it's like actually there's really cool people and they really get it.
And they really are not playing a gimmick.
They're not playing a game.
They don't have to wear a leather jacket and a pink shirt to get you to be convinced to switch over.
They just make a really simple mobile service.
Every device they sell is unlocked and you own it.
The customer support, you get to talk to a real human being.
The control panel allows you to control all aspects of your phone.
Oh, that control panel is awesome.
It really is super good.
They're a store.
You can buy SIM cards.
You can buy feature phones.
You can get the latest phones.
You can bring your own.
And they have GSM and a CDMA network for you to pick from.
If you're a small business, this is a no-brainer.
Really, seriously, like independent surveys have been done, conducted.
And not only, by the way, speaking of that, not only does Ting totally kick ass in consumer reports for their category of provider,
I got to tell you what, nobody touches them when it comes to small business plans.
If you have like 10 devices and you bring them over, nobody's going to touch Ting.
You go 10 devices and more and it's nuts because it's $6 for each line.
A lot of places, the minimum is $15 a line, something like that.
And in a business account, it could be even more.
And that's even when they cut in some big scale deals.
$6 a line.
One line, 50 lines.
$6.
If you want to give somebody an emergency phone, it's $6.
CDMA and GSM, which means you can repurpose a lot of your existing phones that still work perfectly fine
or you can find a great phone off of eBay or buy one right from the Ting store.
Go get it from Google Play.
Great controls, great customer service.
It's a really good service.
I think everything about Ting is top and tops.
And they really do actually have a good blog.
They constantly are posting interesting stuff there too.
You can check that out.
If you start by going to linux.ting.com, you support this show.
You can try out their savings calculator and just use that as a litmus test.
Does this work for you?
It might not.
And that's why they have the savings calculator.
You can just figure that out right there.
You don't need to waste your time or Ting's time.
Just try the savings calculator.
That won't take long.
Linux.ting.com and then if it does look like it's going to work, like for me, I end up saving like $2,000 every two years.
Linux.ting.com.
That's crazy.
Take $25 off your first device or if you bring a device, you'll get service credit, which will probably pay for more than your first month.
Linux.ting.com.
Thank you, Ting.
All right.
So before we go any further, let's take a little break.
Refresh with a free game.
Oh, is that a Linux game I see?
Yes, it is.
And it's a good one too.
I already own this game.
I got it on sale during the sale, but it's a limbo, which the thing that really stands out about limbo is it's sort of a platformer.
So you have to like the side scrolling platformers, but it's not like a lot of colors and a lot of whiz bang.
It's beautiful.
It's dark and it's moody and it's mysterious and it uses lighting and shadows in a way that really no other game has ever before or has since.
And it's exceedingly beautiful and also very reasonable to play even like on an Intel chipset.
And it works great with the controller.
It's a great SteamOS game.
It's been out since 2011.
So it's not like it's brand new, but it's one of these overwhelmingly positively reviewed games.
It really is.
People love it.
And it's freaking free right now.
Can't be free.
Yeah.
If you're listening to the show for the next couple of days, it is free right now and you can find it in the show notes.
So I think that's just really super cool.
Look at that.
Did you see that huge creepy spider?
That thing is just...
Man, that always creeps my kids out.
They love this game because it's slightly creepy.
So they love that.
All right.
So I believe Mr. Ikey is in the Mumble Room.
And that just happens to work out great because a brand new release of Solus is out.
1.2.
Don't call it 1.2 though.
Call it Shannon.
And it is looking good.
I've heard people talk...
People have been talking about the boot speed this morning.
This is what the chat room is saying this morning as I was setting up.
They say, Wes, that new SolOS sure boots fast.
I've never seen a distro boot that fast before.
That's what the chat room is saying.
So Ikey, you're doing something right.
What's new and notable in the new shiny release?
Ikey, I don't hear you.
Did he leave?
No.
Ikey, that's your cue.
Somebody bring Ikey back.
Somebody bring Ikey back.
I don't even see him.
Hey, Wes.
Where's Ikey?
I don't know.
Jeez, Louise.
But I do want to give this 1.2 Shannon a try.
Yeah, it does look nice.
Although, this is such a good setup to have a fail like that.
I just feel like now I don't want to talk about it.
I mean, that was like...
I think that was my best setup of the show.
What do you think?
You think that was my best setup of the show?
You've peaked, Chris.
Yeah.
I think I peaked and then the payoff wasn't there.
Hi.
Sorry.
The man of the hour.
So how's audio working on SolOS, Ikey?
Audio is working fine.
It's great.
It's great.
So it turns out like I spent ages earlier setting up this mouse because it's got all
these buttons.
I thought, I'm going to set that mouse button up there and I'm going to use that one for
Mumble and I'm not going to forget which one it is.
There's three of them, not two.
So I'm here now.
No worries.
I actually gave me a chance to have a little fun.
So what is the new shiny in the big release here?
So I mean, where do we start?
I mean, we're 20 days late and I can only apologize for that to people.
Oh, so you guys are copying Fedora, huh?
What does it say?
Yeah.
I mean, it basically turned out the same time as them and before Half Life 3.
So I'd say, you know, we're doing all right there.
Yeah, yeah.
It's both a difference.
It's good.
Yeah.
I mean, it was later than I anticipated, but I mean, I've not been too well myself lately,
but we made it.
It represents over three months of work, over 150 bugs fixed, a completely new replacement
Steam runtime and the Linux Steam integration with roughly 160 of the libraries that we've
enabled for Steam now being optimized as well.
Yeah, we got the epic boot time, obviously.
It's been a massive, massive release.
So tell me a little bit about this Steam stuff because I got a little wind of this earlier.
And I don't really – I'm not hip with the Steam stuff, but here's my rough understanding
of Nike is if you got all the necessary libraries that all the different games need, if you
use the more modern versions that come with current distros, you often get better performance,
less problems than using the prepackaged Ubuntu runtime libraries that are based on an old
version of Ubuntu that come with Steam itself.
And so I guess some people prefer to use the runtime libraries, some people prefer to use
native libraries, and you guys have tried to solve this problem.
Am I tracking?
Yeah, I mean, that's pretty much it.
I mean, I know that you yourself go between Fedora and Arch and so you've probably seen
some of the Steam issues yourself.
On Ubuntu, I mean, people tend to get it easy on Ubuntu up until about 16.04.
I was going to say 16.10.
That's not happened yet.
But these libraries are like from Ubuntu 12.04.
So, I mean, in Linux terms, they are crusty.
These are really, really old libraries that are built specifically for Ubuntu.
I mean, we're talking about libraries that just don't exist in other distributions.
They've got different soul names.
You've got like curl, GNU, TLS, which are specific Ubuntu and Debian things.
So, what we decided to do is like, okay, one, this is nonsense, right?
We build Solace and we optimize it for our users.
It's like, okay, so if we're going to have to do some hacks here to get it to work, well,
we're going to make sure we do it properly.
So, we took what would constitute the full runtime and just started building everything
and disabled Steam from running its own runtime.
So, we've got something called Linux Steam Integration, which basically replaces user bin Steam.
So, this shim will run instead of that.
And we made sure it doesn't leak or anything like that.
And it replaces itself with the Steam process afterwards.
So, when we disable their runtime and we use ours, you actually get nice integration.
So, you'll actually see things like font config is actually working.
You get all the right font rendering come through.
I don't know if you guys have seen it on Archer and other distros, but you'll see the font
are ever so slightly out of line.
The buttons along the top of Steam, they're all kind of drunk as well.
So, it fixes those issues.
The tray will be natively themed as well, which it's those little touches which really,
really help.
But the main thing really was the performance.
Those were advantages that came afterwards.
You can disable our runtime and forcibly use Steams because ours is new.
There's going to be things we haven't tested yet.
We were responsible and tested 100 titles in the first 24 hours.
It was our duty, right?
But that also sounds like a good idea just from, you could see some game developer go,
oh yeah, well, that distribution's doing their own weird thing with Steam.
So, that gives the person a reset button to say, okay, well, I'm testing it with the native
runtime and I'm still having the problem.
Yeah, that's true.
Yeah, I mean, they can do either way.
There's even a third option if you like.
So, one of the games, well, there was two of them.
Counter-Strike Go wasn't working for me.
I don't remember if you guys saw the update a couple of weeks ago.
Basically, something went wrong when they suddenly switched it to use 64-bit only on
CSGO.
It still shipped with the 32-bit version.
So, I thought, aha.
So, I added a tweak in there, which you know when you run things via the Linux 32 command
line, it basically forces things into a 32-bit environment.
So, I added that support inside of LSI.
So, Steam will then be tricked into running only 32-bit versions of the applications.
So, what that does is for CSGO, I'm able to use the native runtime in 32-bit mode.
And for Goat Simulator, a very serious strategy game, you're able to run that in 32-bit with
Steam's runtime because that uses some special Nvidia physics libraries.
You are doing the Lord's work there.
That's great.
It's, you know, somebody's got to do these things, right?
Why not me?
So, that's all coming in, the new update.
And so, along with that, do you package it all up with like an update mechanism or is
it sort of a nuke and pave process?
No, I mean, people can update.
So, in terms of the packages that have already got installed in the system, those will change,
right?
So, whatever updates you got through there, like security updates and things like that,
those are going to come through.
Between Solus 1.1 and 1.2, we decided to change how we put certain packages together.
New distributions are coming out and they're starting to use Budgie and we thought, well,
maybe those patches we've been doing aren't quite the best approach.
So, we'll try and set an example, show people how you can actually ship a distribution or
an operating system just to be pedantic and show them how you can actually have all the
presets in place and how you do the configuration.
So, we added a couple of packages.
One of them is Solus Hardware Config, which takes care of certain mouse configurations
like the RAT5 mouse and things like this and Budgie Desktop Branding, which contains all
of the live CD configuration and all the tweaks that are needed for Gsens for basically the
Budgie experience we now offer.
So, those don't come through as an update.
They're basically going to have to be opt-in.
So, the package selection is very much dependent on the ISO you downloaded.
You can upgrade and install those things as well.
But if you're already in 1.1, you'll just get the normal updates that come through.
Of course, you're still going to get all the optimizations that come through for all the
lower libraries as well.
So, you will still benefit.
It just won't look exactly the same or won't have exactly the same software installed.
It's easy to do, though.
That sounds like a lot of thought is going into every single thing about this release.
Is there something that you work on that you think a lot about that you assume probably
people don't even notice?
Like, is there something in here that people miss?
Like, what is it?
Like, I always know when there's something I work on, there's something that I just sweat
the details on.
And then after I'm done, I'm like, did anybody actually even notice that?
Yeah.
Well, I mean, it's going to be that way for me for a lot of things.
I mean, you know yourself.
Once you put something out, like you say, you sweat on something, it's not so much when
someone doesn't notice that as they notice something far more insignificant.
Yeah.
And that's the killer.
So, I mean, not as insignificant.
So, we've had a bit of a UX update.
We've actually been lucky enough.
I mean, I think you guys know yourselves, but the guy behind the Arc theme, Horst3180,
we've worked directly with him for a long time now.
And with him, we actually just redesigned the budget desktop.
And that's how budget desktop 10 came around, like designed by the theme author.
Wow.
Yeah.
So, like it was actually called Arc Desktop for a long time.
Yeah.
Okay.
That was the code name.
He's helped us a lot more with getting things together this time.
And we now have the Arc icon theme as well.
So, within 40 minutes of it having a Git repo, it was the default in Solus.
He'd be on all the cards for a while.
Sam Hewitt has also helped us a lot with UX design this time around.
I mean, you all know Sam.
Sam, I don't know.
I probably know him by a handle.
I probably don't know him by Sam.
So, Sam Hewitt, the guy behind the paper theme.
Oh, okay.
Yeah, yeah, okay.
Yeah, that guy.
Right?
That guy.
Yeah.
So, he's helped us with designing the software center, giving like little hints and tips
and fixes and mock-ups for that, as well as the installer itself.
So, how has adoption been?
Adoption?
I haven't a clue.
When did we release?
Early yesterday?
Well, I just mean as a whole.
I don't mean one particular release.
I mean, as a community, you get a sense that there's growth there, that things are picking
up.
But what is your sense?
Yeah, I mean, definitely.
There's a lot of people really now starting to get it.
I mean, Solus goes against the grain in so many ways.
And it's never easy to explain exactly in one sentence to people.
It's like, you know, this is what Solus does.
And they're like, well, why not use Ubuntu, Stora, Debian, insert something here?
It's like, because kill me if you want, but I don't think it works.
We have to do some...
There's so many things that we do that are so fundamentally different that we couldn't
do as a downstream.
So, explaining those things, but people are now realizing that.
And you do see comments now.
People are like, I can actually see why you did this from scratch.
Like it was designed to avoid the problems in the first place.
Like, it's not like we're somehow superior to or holier than other people.
We've taken that experience, and I've taken my own experience in doing this as well, and
folded it into something new.
That's pretty cool.
And I think it always, after we chat, it always makes me want to download it.
So, I'll download the new release and give it an install.
I'm looking forward to that.
So, I always like using something.
There's a lot of thought and intention that goes into it.
Yeah.
Well, Aiki, thanks for the update.
Anything else you want to touch on?
Maybe that crazy mouse?
I don't know.
Okay.
No, I mean, no, because it only fires things up.
You are welcome to stick around.
I know, I think I saw you mention something on Google+.
You're getting lots of questions about snaps in Solace.
So, if you want to stick around for that discussion coming up in a few minutes, you are welcome.
Okay.
I'll bite.
Excellent.
Just really quick, I just wanted to give a mention because it's happening right now as
we record the show.
DockerCon is going on, and they're integrating something that I'm hoping Wes can explain
to me what it is, because I think it's kind of a big deal.
Docker is integrating orchestration right into the core Docker engine with their new
release.
This is some of the big news that's coming out of DockerCon going on in Seattle.
So, Wes, you've seen probably some of the shenanigans as a result of DockerCon.
I've certainly seen a lot of people with really cute little whales walking around, which,
hey, that's not bad.
Yeah.
So, you've probably seen all of the DockerCon traffic.
So, container orchestration, if I'm understanding what that there means, Wes, now, you'll have
to forgive me.
I haven't been a sys admin for a couple of years now, but that's another fancy way of
saying like a framework to manage all of your containers and spin them up on different machines
and shut them down and delete them and version them and standardize them and things like
that, correct?
Yeah.
So, it's like, as they say here, container orchestration is what is needed to transition
from deploying containers individually on a single host to deploying complex multi-container
apps on many machines.
Yeah, okay.
So, yeah, as you're growing your cloud, maybe you're on other people's infrastructure, you're
on your own infrastructure, you need something that will help you take your single little
Docker instances and actually scale them, make sure they fit into the roles, integrate
with your configuration management.
There's a lot of ways to do this and now there's something built right into Docker.
I can even see a scenario where you have four or five digital ocean droplets that you spin
up containers on demand for, like I would just be playing with Fedora 23 today.
So, to me, it seems like what Docker just announced is they're going to take a huge
part of the Docker ecosystem and integrate it into the core functionality of Docker.
Like, last time I was at DockerCon was last year around this time.
It was LinuxCon DockerCon and the number one industry at DockerCon is container management
and orchestration of containers.
And they just announced they're integrating that into the core.
I read about it.
It's some badass stuff.
It allows you to do swarms of Docker containers with just a couple of commands and set up
clustered Docker containers with a few more commands and you don't really have to really
worry about any of the, quote unquote, you don't have to worry about it, quote unquote,
underlying technology.
And they're building that in the core Docker using just a Docker command line.
I mean, this is like a massive thing.
Right.
So, we'll probably see it rolling out and everywhere.
I haven't played with it yet, so it'll be interesting.
I don't know how we'll see, like, will other people adopt it, will it be wrapped around
by other systems like Kubernetes or all that kind of stuff?
Right.
Yeah.
That's a good point.
So, we'll just be watching and see what happens.
I don't know.
That's probably all we really need to talk about here on this show, I imagine.
I don't know.
But I'm sure there's lots of news.
I looked over the talks.
There's a lot of interesting stuff.
Microsoft's giving a talk about how the containers on Windows are going, if that's your thing.
You know what I really don't like about them?
So, I've been following the DockerCon thing just to see if there's stuff for us to talk
about.
And so, I saw the Microsoft talk.
And you know what the really arrogant thing about the Microsoft talk was?
Is Microsoft positioned their entire talk as, well, now that Microsoft's getting involved
with Docker containers, now Docker's coming to the enterprise.
Now it's production ready.
Now Docker's production ready.
Meanwhile, those SOBs are running it in a virtualizer on their Windows platform.
It's not even a true container.
Like, they're such a bunch of posers.
They're so desperate to make their Windows platform relevant that they're bending over
backwards to make Linux containers run on their platform as easy and thinly as possible
using their virtualizer.
And then, they have the sack to say, well, now Docker's arrived at the enterprise.
I will say the Mac support is kind of neat, just that they're using XHive, which is ported
over from our friends at FreeBSD, which is pretty neat.
Isn't it interesting to see one of the first things that Beehive does in a large production
scale is bring Docker containers to the Mac.
Oh, I'm sorry, guys.
Full circle, everyone.
Full circle.
Welcome to BSD Unplugged.
You know, it's just one of those things.
It just happens.
Okay, so.
Oh, man.
Yeah, you know, speaking of Beehive, it just got Windows video support, so you can VNC
into that thing.
You don't have to do it over a serial console.
Yeah.
That's a big usability win.
Speaking of DigitalOcean, let's take a moment and talk about DigitalOcean.
You've got a container you want to deploy.
Do it over at DigitalOcean.
Now, we've been talking about Docker, but Wes here, you do LXD containers in production
on DigitalOcean.
And what do you like about the LXD containers over the Docker containers?
Well, you know, they're just a little more familiar.
I mean, Docker works well if I was, you know, making maybe like a big fleet of microservices
and using orchestration tools and that sort of thing.
Docker may be something I would look to be using.
LXD containers are nice because they really act a lot more like VMs, which is something
I'm familiar with.
And I get all of my regular Linux tools for admin, right?
So, like, I know how to use like SystemD and journal control and all that kind of stuff
to manage services, et cetera.
It's all the same tools, and then I can just spin them up, transfer them from server to
server.
So, it's simpler in some regards.
Make copies, take snapshots.
It's very simple.
And if you don't need a huge enterprise-grade thing, you just want a few containers.
Yeah.
You know, I basically set up a system, turn it into an image.
I can then just update the image when I need to.
I can transfer it and then just make as many images as I want.
Are there LXD container images like there are Docker?
Like, could I go grab a pre-setup LXD container to be lazy, or does it pretty much build it
from scratch each time?
Well, so they are like actual image files, right?
So, like, they're tarred up file systems.
Okay.
So, they send these on the file system as an image.
Oh, okay.
And then are there – is there like a place you can find pre-built ones?
Yeah.
So, they have like a repository, and then you can also – the nice part is that they
all have a REST API, and then they'll all just – you can like – if you have your
own, you can then share images with any two servers that you want to let talk to each
other.
Oh.
It's also really easy to make.
Like, you pretty much just take any install that you want, and you can trim it down,
you know, uninstall packages or build it up minimally.
And then the format's really easy.
It's like you make two tar files.
One's metadata.
One's the file system.
You run, like, load it into an image.
That's nice.
And then you can use it.
So, what's the process like of getting LXD running on a droplet on DigitalOcean?
Well, use like Ubuntu 16.04 when it's there by default, and then –
Oh, so it's like sex.
Type LXC.
Yeah, right.
Pretty much, right?
Type LXC, and then it generates a client certificate, and then you can get started and –
Nice.
So, you can pretty much do like LXC launch Ubuntu, I think.
Huh.
You know, I think I'm going to play with that for a bit, because I was messing around
with Docker, but I was on Fedora.
But I was messing around with Docker, and it did feel like it was way more than I needed,
really.
So, that's interesting that you say that.
So, you go over to DigitalOcean, and if you use our promo code DOUNPLUGGED – DOUNPLUGGED,
one word lowercase – that'll give us a little bit of support, a little bit of like,
hey, yeah, that unplugged show is sending traffic our way.
That keeps us going.
But it also gives you a $10 credit, and you can try out like a droplet for a while.
They have hourly pricing, so the droplet you may use may not need to be on all the time.
And then that $5 – or they have a $5 a month if you want to just run it for a month or
whatever.
Like, they have a really flexible pricing structure.
So, the $10 credit could actually get you quite a bit of distance.
All their rigs have SSDs, so it's a nice, fast I.O.
They have data centers all over the world.
They run Linux for the host.
KVM for the virtualizer.
40 gigabit connections into the hypervisors.
Tier 1 bandwidth at the data centers and the best interface.
I mean – and it's not even like a good interface for a web application.
It is a good interface for managing this.
You know what was sweet is today when I was – I decided to install a whole bunch of
crap on this Fedora droplet that I have.
And it was really super, super nice to just go in there and have the HTML5 console pop
up.
And I was able to watch the console spit out information while I'm SSHed in.
So, my SSH session feels fast and native and just – in fact, sometimes I even use Mosh.
Oh, yeah.
Totally.
Yeah.
Which really makes it feel like I'm sitting right there.
But then to still have like the – to have it in a separate window on my second monitor,
the console of the droplet is just the best, dude.
I love the –
You know if you break anything.
It's just right there.
And it took four seconds to reassign a DNS hostname to the Fedora.
It's like I was like, you know, I want to change the name of this Fedora machine.
So, I used hostctl, hostnamectl or whatever it is.
Is that hostnamectl to set the hostname?
And I set the machine name and the icon name.
And then in DigitalOcean, I just copy and paste just because over the interface, when
you hover over the IP, it gives you the option to copy the IP right.
So, boom, boom, pasted, updated the A record, and because the DNS was already pointing to
DigitalOcean's name servers, it was SSHed immediately.
And I was up and working.
I'm installing, just experimenting.
I'm hoping to eventually get like a nice secure open source location tracking program that
we can have for family members.
And also when production – like during Linux Fest, we can have like crew members install
it if they want.
Totally.
They're on their way.
Yeah, exactly.
But I don't want to use any hosted service, and so I wanted a rig to try these out on.
And to be able to install these different packages and stuff, the faster you're going
to access that HTML5 console, it's a great setup.
Plus, you can take snapshots if you need to.
I did.
If you're worried about breaking it, you're just like, boom.
I did.
Peace of mind.
Yep.
DO Unplugged to get the credit and support this show.
So, tell me about Meru, which seems to promise real big, Wes.
For those of you out there that aren't familiar with it, their tagline is, your phone is your
PC.
Now available for the Nexus 5, it's a new kind of computing experience.
We've talked about it in the past.
It's based on Debian, and supposedly it's context aware.
You plug it into a big monitor, and boom, you get a big old Linux desktop.
Is it true?
In my experience so far, I mean, it hasn't been perfect, and I haven't tried it extensively,
but I do have it running right here on my phone.
So, is it an app on Android that runs in a virtual environment?
I mean, so is that Android I'm seeing right now, or is that the phone UI?
That's Android, but that's Meru OS.
So, it looks just like what we're seeing in the video right now, is exactly what I'm seeing.
I have multi-ROM, so I just booted right into it.
So, this is Meru OS running Android?
I think it is Android.
I thought it was Debian-based.
It may just launch through Debian, New Zealand.
I'm not actually sure how it works.
Okay, so how do I initiate a different desktop experience?
Unfortunately, I don't think we can without the right cable, which I do have.
That makes sense.
So, if we want to set up a demo, I can film it and upload it.
Yeah, I see what you're saying.
Because, of course, you'd have to plug it in, right?
But you plug it in, and it just, you know, XFCE desktop launches.
You need like a Bluetooth keyboard and mouse, which I tested.
There's some problems, and I did run into this, where the Bluetooth mouse is like a little laggy.
They suggest just turning it off and on or turning Bluetooth off and on.
That did not fix it for me.
I have not been able to fix it, but I have not tried that much.
So, it may already be fixed, or it may just be something I need to configure.
But the keyboard worked perfectly.
It was otherwise, it was like fast, it was responsive.
I've seen some videos of people using Blender, using GIMP.
So, it appears to be running Android 5.1, and it says is Maru on the Nexus 5 is the version, version 0.2.3.
Kernel version 3.4.0, GEAA 8415.
And so, it's very much right now a pure Android experience.
So, it does mean you've now had to downgrade from Marshmallow to Android 5.
But in exchange, without a reboot, you plug in the HDMI cable to this son of a gun,
and you're telling me it instantly expands to an XFCE desktop.
Because this is not an XFCE launcher on the phone right now.
And what happens on the phone screen?
It stays, you can use the phone too.
You can use both at the same time.
So, Android remains running on the phone.
Yep.
So, it must be an Android app then.
And so, you usually just want it to go fall asleep.
What do they call that?
Doze?
Yeah.
And so, it'll keep everything on.
Otherwise, if you explicitly lock it, it can sometimes trigger the screen saver in the other window.
But otherwise, it really works very well.
So, in what scenario could this actually be practical?
Because here we are, you wanted to show it to me, and yet, without the hardware, you can't actually do anything.
So, you have to have the cable.
Everywhere.
You have to have the port cable.
Everywhere you go, you'd have to have somewhere to plug that into.
Yep.
So, you also have to have an external monitor ready to go.
And a Bluetooth keyboard and mouse.
Yep.
Those two are fairly easy, and I suppose you might have them anyway if you have a tablet or something.
This is starting to seem extremely, I mean, now that you actually have to live with this in practice,
all the dependencies to actually be able to use this as a desktop machine is really kind of making it limited.
Because at some point, you're going to go, well, I could also just go get a Chromebook.
You could just get a Chromebook, especially now that they're running the Android apps.
Yeah.
You know, and I haven't tried it that much, and you are kind of surrendering, like,
if you're not going to go to the trouble of having a computer and you're just using your phone,
and you bring your phone to work, and then you plug your phone into your keyboard and monitor,
then you're left with the computing power of the phone.
Here's what I would rather have for me.
I would rather have a really easy image that allows me to run Google's version of Android
so I can get my monthly security updates.
That's why I buy a Nexus phone.
And then I would like something like multi-ROM, but maybe like a fork of it or something,
that easily reboots me into another OS that can still access the Android data or something to that degree.
Oh, yeah.
Because I don't want to forfeit having modern Android.
At the same time, it's probably only, now that you mention this,
it's only like a couple of work case scenarios.
At best, Wes, you could have a dock and a keyboard and a mouse at work,
and a dock and a keyboard and a mouse at home, and you could go between home and work.
But it's not like you're going to go to a coffee shop and use it.
You're not coming here to the studio and using it unless you put a dock here.
Really, at a certain point, the overhead of having to just reboot into a dedicated OS
that is designed for a desktop computer, I don't know.
And all I'm doing is using my phone all day, which is like,
I have a lot more powerful computers I'd probably want to use.
But it is an interesting idea.
And the performance is better than you thought.
I mean, XFCE doesn't really need that much, but it was working fine.
I haven't installed a lot.
I haven't tried taxing it.
I'm going to try to play with it more this weekend.
Anybody in the Mumble Room have any questions for Wes's test drive with Maroo OS?
I guess, yeah, NorthRanger, you were going to say, what's the point of having to reboot?
Yeah, I mean, Android is running a Linux kernel.
Is it really that much overhead having the extra Android user land kind of shoved to the side
if you're ultimately booting up an X server and running a desktop shell anyway?
Probably not.
It probably depends on how they do it.
I'll have to do some more research to see what I can find out.
And it only supports the Nexus 5 at this point, which is kind of a bummer because...
Yeah, I mean, I like it.
It's working for me, but it's definitely feeling old.
Yeah.
So does this change your anticipation at all one way or the other for a Ubuntu phone?
So you mentioned getting the OnePlus 3 because, you know, you were thinking maybe upgrading in the future.
Yeah, I'm thinking about that, yeah.
Now that you've tried this, has this chilled your opinion of convergence at all?
I mean, I think I'm still waiting for, like you said, I'm waiting for the real use case in my life.
I did have a really powerful device, and I did have, you know...
There's just a lot of things to bring around.
You can't carry a screen, a keyboard, and a mouse with you and the cable everywhere you go.
One use case I could maybe think of is, like, my wife, for instance, she's an artist,
so she has a little Cintiq small screen that she carries around with her.
That might be something, if you could connect it to something like that,
where you're already carrying around a screen for some reason, maybe in that case, but that's pretty niche.
N3, you had a question?
Yeah, is it running mirror?
Oh yeah, did we figure out what the Linux display manager was?
I didn't see anything on their website about it.
There's not that much information on the website.
There is a Google group for development.
Yeah, I don't think they actually have the info,
but we will link to the page if you guys want to dig through it.
And then I saw JM, you had a question.
JMBBBBZ, go ahead.
BBZ.
Yeah, can you make phone calls and text and things when you're in desktop mode, when you're docked?
I have not tried a phone call, but texting, I've been using other apps.
That stuff all seems to work fine.
Yeah, it's the full Android OS.
So if people have more questions, too, I'll be happy to film a little thing
or film me using it or stress testing it if there's things people want me to try.
Is it Google Apps on there?
Not yet. It's pretty minimal.
It looks like here I'm reading a thread right now on how to get the Google Apps on there, though.
In fact, it's interesting.
It's kind of revealing on how they do this.
Does it feel kind of snappy when you're using it in desktop mode,
or does it feel like you're running off a phone?
It really didn't feel very laggy.
I mean, the mouse was lagging a little bit, but I pulled up a terminal, I was browsing the web.
That part wasn't laggy at all.
It is. There is. Oh, boy.
You know, the Motorola laptop is really the best scenario.
That's really what you need is something like that.
You can still find them on eBay every now and then, but that would make that.
If you had something that was in your bag that was lightweight,
that extra battery, LCD screen and a keyboard.
Yes, exactly. They're out there.
You should have the Motorola laptops out there.
All right, so any other notes on the Meru or any other questions?
No? All right.
Then we shall move forward because I do want to talk about the snaps and flat packs here for a second.
But before we go any further, let's take a moment and thank Linux Academy.
LinuxAcademy.com is where you go.
That's a platform to learn more about Linux and the technology around it.
Not just Linux itself, although that's a huge part of Linux Academy,
and not just the core essentials and all the expert things around it.
Yes, all that stuff. Yes, it's true. It's true.
But also a lot of projects built around it.
So things like Ruby or things like NGINX or things that are tangently related,
like the entire OpenStack setup or Amazon Web Services.
This is all different aspects. And even to that end,
now Linux Academy is introducing Microsoft Azure Essentials.
How about that? Because you know what?
Azure is a competitive cloud computing platform that runs a whole ton of Linux.
That's right.
Yeah. And so they've launched a courseware on that, which I think is pretty awesome.
And they've also recently launched a new social note card system
where you can fork note cards and get really good learning stacks.
They have scenario-based labs that put you in the middle of everyday comment day tasks.
They have instructor mentoring, which is slick,
and also a little bit of secret sauce,
and the graded server exercises for those of us who just don't test so well.
It's nice knowing, like, getting some verification, right?
You're just like, yes, I actually did learn that thing.
That's me shaking because I was taking a test.
Yeah, it's really nice.
It's a good platform stacked full of Jupyter Broadcasting members.
And if you go to linuxacademy.com slash unplugged, you get a great discount.
I love the fact that they spin up a server on demand that you get to SSH in
just as the courseware calls for it.
You choose the distro.
It modifies the courseware and the machine they spin up, which is nice.
And the other thing is, and, boy, I could have used this a few years ago,
is if you're learning some of the Amazon Web Services stuff,
they're managing all of that for you so you don't have surprise bills.
You don't have to worry about their complicated setup.
You don't have to, like, go get your boss to give you the credit cards.
That way they can pay for it.
None of that, it's all just built into the Linux Academy courseware.
Check it out, linuxacademy.com slash unplugged.
All right, guys.
So we have the official announcement that Flatpaks were released this week.
And I thought since it's newsworthy, it came out literally today,
it's worth talking about here on the Unplugged show.
And I don't know where to go with this without just putting it all out there.
And hopefully people...
So on the Linux Action Show, by the time we got to the Linux Action Show on Sunday,
people had really, really, like, drawn a line in the sand
and picked a side in the new universal packaging war.
And there was a full-on response, a lot of it from the Red Hat folks,
about Canonical's PR strategy.
And there was some attacks, some of which we covered in the Linux Action Show.
And it got really kind of ugly fast.
A lot of focusing on the PR initiative.
A lot of talk about how they use distribution names.
I think, you know, that is worth thinking about and having a discussion about.
I think that is a fair discussion.
But I was really disappointed to see they didn't go after the technical merits.
Yeah, that's what I'm most interested in.
I wanted to take a moment, though, and just point something out
that really rubbed me the wrong way once I came to the realization.
A lot of the posts on the mailing lists, on the blogs, on Twitter,
even today, actually, I'm still seeing them even today,
about how Canonical is manipulating the PR in this.
One of the Fedora mailing lists developers, they said,
Canonical beat us to the marketing punch.
And then they focused on this aspect so much that I realized what bothered me about it
is, Wes, can you do a, do you have a web browser on that?
I sure do.
Can you go to opensource.com for me?
I'll go there with you, too.
Let's all go there.
Opensource.com.
Yeah, let's give them some traffic.
How would you describe opensource.com, Wes?
I do see a big, friendly Red Hat right in the top right corner.
Yeah, uh-huh, uh-huh, yeah.
This is, opensource.com is an extremely valuable domain name.
Now, especially, picture the outsider coming into the Linux ecosystem
wanting to learn more about open source.
This has got to be one of the biggest pieces of real estate in Linux
in the open source ecosystem, opensource.com.
This is an outfit that is funded by Red Hat
damn near all of the writers write for or are employed by Red Hat.
The ones that don't are Red Hat friendly.
I mean, no disrespect to the people.
I know some of them that run this, and they're fine people.
But this is literally, this is literally one of several propaganda fronts
that Red Hat finances to gently nudge the news coverage in the Linux ecosystem
on a fucking hourly basis.
I just, this company is among many tech companies that makes and establishes
PR outlets, works with journalists, hires Red Hat friendly people to write things.
This is something that all of them do.
And I understand that the Fedora project is not directly hooked up to Red Hat,
but let's be honest, it's a Red Hat project.
So to come after Canonical for just having a successful PR launch,
should they have name dropped distributions?
Maybe, maybe not.
I think you could quibble about that.
Should have Mark Shuttleworth taken a pot shot at Flatpak saying that
95% of contributions come from one person?
No, I don't think so.
But you can't fault them for working with different outlets,
for doing interviews, for people behind the scenes working with projects,
making sure they understand the SNAP package format,
troubleshooting problems they run into, directly outreaching to work with them.
That's not manipulation.
And see, if you read some of the posts, they all essentially go like this.
Canonical manipulated the PR.
They didn't want to go with somebody else's technology.
And the conclusion is, if they really wanted to make this a community effort,
they should have come around and talked to us all.
They didn't follow the process.
They didn't follow the rule.
That's the same line of thinking that prevents women from joining different
groups and industries or singles out minorities.
They didn't follow the process.
They didn't go through the proper channels.
It is a contribution that happens organically.
Everybody treats it like it's some master Shuttleworth plan.
Like Mark Shuttleworth is up in his moon tower up there plotting the global
dominance of Linux and his master plan is to manipulate the tech press and get
them to all orchestrate his brand new package format so that way he can declare
dominance and earn all of the millions of dollars by coming up with this technology.
And so when Canonical releases something, instead of going after it on its
technical merits, we go after it on the evil Canonical once again trying to drop
something in our laps just like Upstart and Mir.
It's all part of Shuttleworth's master plan.
It just gets so old.
And the constant attacks on the PR are so unfounded.
And the Linux Foundation is just as guilty.
They also have donor friendly writers who write puff pieces and don't even
disclaim it's being financed by these companies.
Again, manipulation.
Go ahead.
The Flatpak thing was interesting because they were saying that Ubuntu was not
working with the community and they're trying to build this stuff because the
whole not invented here thing except for the fact that Snap was created first and
the Flatpak is the actual not invented here.
Do we really even care which win was created when?
Because it seems like...
No, we don't care.
It's just what they're saying.
But the more important part is that they're saying these things about how...
When he was saying that 95% of the work, he probably didn't actually tally it up,
but the people who were saying it was not 95, it's 75.
That's a significant number still.
You're caring about a percentage that's not that big of a deal.
It's 100% canonical contributors to Snap and SnapD.
I mean, really.
At the end of the day, there's a Red Hat initiative and there's a canonical
initiative.
To be honest with you...
I think his point was it was 100%.
I think he was saying not necessarily it was 95 Red Hat, it was 95 one person.
I think what's interesting about the Snap initiative is the work to get it on the
other distributions, a lot of that was community driven.
People were interested in getting Snap packages on their distribution,
so they put the work in.
Again, it wasn't some sort of canonical master plan.
Once there was momentum, canonical pushed some of the final bits into piece,
made things work, did the outreach.
I mean, in their interest, for sure.
That absolutely makes sense, but you can honestly see how this was an organic,
like, well, let's create something that solves our problem.
Oh, there's some interest here.
Well, if there's interest here, we just have to do this, this, this, and then now...
Okay.
I mean, you could almost see how it just fell in their lap.
Like, they're lucky in some sense, and yet it's from their own doing.
But the reaction is it's part of this master strategy, and that mentality that
comes out brings us all to war, and then everybody picks their side.
And I intentionally, in the Linux action show, was like, there's a lot of different
technologies here.
I don't know which one's going to work.
I think security sucks on all of them right now, and I just think this solution
is inevitable at some point.
That was my core point in the Linux action show, and I got emails,
you have to stop ranting.
That was a horrible rant.
Chris is supporting Snap Pack.
Chris is a Flatpak yes man.
Like, that's just stupid crap that I can't even believe.
Everyone knows you're for app image.
I mean, come on.
I just don't care.
Yeah, right.
I mean, we just need a successful technology.
Hopefully, we can all figure it out without too much of the same thing.
So with that said, Flatpak, I think, is an interesting solution.
Yeah, totally.
I'm a little uncertain that it's going to be the long-term winner for a couple
of reasons.
It's very desktop focused, and that's a point I meant to mention in the Linux
action show, where snaps are definitely more designed for server, Internet of
Things devices, and desktops.
And if you think about the huge ass server market, just having all of the
momentum that snaps just – okay, how can I say this?
You know what I'm trying to say, Wes.
Because snaps are going to support server installations, there's just going to be
more snaps by raw numbers right there.
There will be just way more snaps because it supports server stuff and because it
works on Ubuntu than app image is probably ever just right there.
And then the fact that – I would think there's going to be so many people
familiar with creating snap packages for the server that there's going to be a
lot of knowledge sharing that is going to just sort of, I think, be a snowball
effect for snaps.
Well, and that makes a lot of sense, too, with how Popi was talking last week
about how it works with how they're mounting that at boot time.
So everything will be there.
You can just spin up an Ubuntu droplet, install your snap, and now you're running
your binary with all the dependencies handled for you, and it's super easy,
right?
J6 points out in the chat room that after the Linux action show, the blog I was
reading – Adam's blog I was reading.
I like Adam.
I think he's a nice guy.
The blog I was reading, he updated his post to say, oh, and I guess there's this
thing called AppImage.
They weren't even aware of AppImage.
Okay.
So maybe there's something to say, like, was enough prior research done?
Maybe not.
I don't know.
I wanted to see – I wanted to give – oh, go ahead.
Go ahead and start.
Let's start.
Let's go in the mobile room.
So the AppImage thing is funny because AppImage has been around the longest.
Yeah.
And there's, like, project shipping with AppImages right now.
One of them by the creator of the kernel we all speak about all the time.
Yeah.
It's just unbelievable.
But the funny part is, like, this – it's all about the – like, the main core problem
is that all this hatred towards Ubuntu, whether it's – like, whether it's even technically
justified or not, they just want to jump on as many things as possible.
So, for example, when Snappy was first released in 1604 and it was big, big press, the first
thing people said was, well, they just made it for Ubuntu.
They don't care about any other distro.
And then when they show that they're working with the community to actually make it for
all other distros as much as possible and as soon as possible, well, that doesn't count
anymore.
Like, that – let's completely ignore the fact that the main complaint we had is now
completely voided.
Let's make – let's find another reason to hate them.
Yeah.
I think that's definitely a component.
I think what makes it sort of murky is there is also a technical argument to be made and
there is also legitimate concerns and questions about the CLA and about their closed backend.
All questions, I think, could eventually be answered but don't have good answers right
now.
And so I wanted to – let's start with – is Ryan and Ike – yeah, good.
So let's start with Ike real quick.
Ike, I saw your G Plus post on this and I thought it made it a good opportunity to say,
you know, we're talking a lot about this in a way that it makes it sound inevitable
but there's probably some pretty common work cases where this type of packaging isn't
really necessary.
I think you've been getting a lot of questions about snaps in Solace so I'd be really curious
to hear your thoughts about it.
Yeah, I mean, it's been a bit of an outbreak so from my perspective, I've just seen people
asking about it because they've heard about this thing called snap.
It's suddenly a thing now everybody needs to ask about it.
People who hadn't ever heard about it before, this is now the future of everything.
Why aren't you using it, you human scum?
And this has pretty much been the weight of the tide so far.
Boom.
From zero to 60.
Yeah, I mean, far be it from me to be outspoken at all.
But I mean, people started straight up with Solace.
It's like, you really, really, really now need to be using snaps.
And it's like, well, I mean, I'm probably going to go into a bit of a rant now myself,
so may I?
Yeah, go ahead.
Right, so Solace has been around in one form or another now for the last few years.
It's got a bit of an old code base and it's got this commotion in the old bugger behind
it for the last few years as well.
Now, Solace was designed, as I said earlier, to avoid these design issues, right?
Solace doesn't have 14 different versions of a library.
We'll have one.
You're only using that.
So immediately, we don't have the problem of what if I need this version of a library?
Well, you're not getting it.
It's as simple as that.
Well, how are we going to get LibreOffice?
We already packaged LibreOffice for you.
Why do you suddenly need LibreOffice packaged?
And then there's the fact that Solace doesn't use a traditional packaging format.
So if you look at any traditional format, say a Debian package.
Now, Debian packaging is hard, right?
It's one of the reasons I first went with an independent base because I passionately,
passionately hate Debian packaging.
That if it was on fire, I wouldn't piss on it, right?
I hate it that much.
So I went as far away in the opposite direction.
Now, when you package something, you have a policy.
You say, these are development files.
These are files the user is going to need.
This thing has relational dependencies between them.
So I designed a packaged build system that would tie all those pieces together
and put the policy in place.
So I don't have to do manual file lists.
I don't have to do manual things at all, right?
So to give an example, Michael Hall posted up an example of how easy it was to package
the Genie Editor for Ubuntu and Apple Snaps.
You saw that post, right?
I think it was about 32 lines.
Yeah, he said he was editing the YAML file for the GenieSnap from within Genie.
Right.
The Solus package is smaller.
The build file is smaller.
So from the perspective of Solus, just from a packaging perspective mind,
I'm not talking about confinement or sandboxing.
Snap is technologically inferior to what we already have, okay?
So that's one huge reason for Solus not to need to adopt it.
We go for integration.
So say Solus is using GTK 3.18 now.
We have the 3.18 theme.
We want everything to look good, yeah?
So why would it then want to bring in 3.20 packages that then don't quite interact properly
or don't look quite well?
Solus has an optimized runtime.
Would it then want to use a runtime that isn't optimized or is built or maintained by somebody else?
So it sounds like you're worried about it taking away my curation is kind of what you're saying.
I mean, curation is definitely one part of it, but I don't want to water down my system
and trust somebody else to build my operating system because if they were capable of doing that,
I wouldn't be the person building Solus.
You are in a unique position there, that's funny.
So now I want to ask Ryan, who's sort of on the other end of this, who's got an upstream project
that's moving extremely fast, there's lots of features they want to ship, they want a guarantee.
Clearly he's involved with packaging and the difficulties there.
And he wants to get out on as many freaking distros as freaking possible.
So Ryan, what are your thoughts about snaps and flat packs and all of that and some of your experience so far?
Oh boy.
You know that Ike and I used to work on Solus together.
I used to try to help out.
So the problem is when I'm packaging my crop, I have to pack it for every single thing.
It's not enormously – well, no, it is.
It's kind of an enormous task.
Yeah, that's what I hear a lot.
And you've got to do a lot of talking with folks who are involved in the distro.
And it's just – it's kind of a mess.
Even Debian packaging is a mess.
Well, I guess Ike kind of said that.
You're trying to be diplomatic about it.
Just go and say it's awful.
I think everyone knows that.
Yeah, and so the thing is it doesn't have to be snappy.
It doesn't have to be flat pack.
It doesn't have to be AppImage, but whatever – or maybe it's all three of them.
Well, actually, can I make you – I disagree.
I think you're being too polite because Mycroft, I mean legitimately, has some server-side components that AppImage simply just doesn't address.
Yeah, and I've thought about that, especially when you're running headless or you're running with the device.
But the thing is is all we want to do is be able to give people the newest version of the application.
That's it.
And we just – and we don't want to spend all of our time packaging.
I've had a guy who's – Aaron, who's been working two weeks on just packaging.
And that's kind of ridiculous.
Like we just want to get a version that somebody can pull down and install and not have to worry about it.
If that's snappy – I've got SnapD on my Arch machine since we were talking about it. I installed it, but I haven't restarted yet.
So the SnapD isn't running.
It's not on your path yet.
But I was going to – but like the – but the idea is as an application developer, I just want to be able to tell people like here, this is an easy way to install it.
If you want to pull it from your distro, that's great.
But like this is a fast way to do it.
And we know everything's good in there.
We know the system libraries.
You don't have to worry about them.
The thing that really actually made me look at Flatpak and look at SnapD is I updated FreeType 2.
I think I talked about this last time I was on here.
And FreeType 2 broke all my Electron apps when it went to 2.6.3, I think.
And I was like, I can't believe that happened.
I can't believe that such a – just this font library broke my Electron apps.
And you can say whatever you want about Electron or about anything along that path.
But it would have been great from a user perspective when I'm just trying to use Slack to tell somebody something if it was just all self-contained.
And I don't know what the security implications of that are.
But it's frustrating, especially when you're trying to get stuff done.
Yeah.
So I guess I think, Ryan, the reason why I like your perspective is because I think it represents two valid points of view.
So I want to toss it back over to Aiki.
So Aiki, I think really what I see here is Ryan makes a case for certain specific applications to be distributed this way.
And I think you're making the case that the base system and all your daily driver applications should probably be maintained by the distro.
What do you think?
Yeah, I mean, you do need a domain separation, right?
So I have what I call the operating system.
And in the case of Solus, that is basically up to the budget desktop and any – the fat stuff and the stuff that we own, like the web browser, text editor, things like that.
Apps on top of that are then separate.
In the case of applications, so from Solus' perspective, we're not owned by a corporation.
It's just me, Paddy, here you have to deal with, right?
So I can be a bit more flexible than most.
If I was a company or something, it'd be harder to deal with Solus, but it's just me because, you know, I'm not here to make a fugue without Solus, so it's simpler for me.
So I'm happy to, if you like, bend a few rules to help the application developers get in.
But then from the other perspective, I mean, I can make it as easy in the world for any of these guys to package their app up for Solus.
I'll even make sure their patch is getting for libraries, or I'll even make sure they have the different versions of the libraries they need.
I'm happy to do that.
From my perspective, and sorry, Ryan, but you kind of made yourself a target there.
Now, to use MyCraft as an example, now, that's something that I look at as having a system level of components.
Now, as for being up in a flat pack, well, I've already gone and looked at the code.
Now, Ryan himself will tell you, I've already requested an architectural analysis of that.
I've gone and looked through Mimic because I'm not happy with the code, right?
And I've worked with them.
They've had a few issues there and I've spoken with them, and they are responsive.
I'm good in that.
But things like that, I wouldn't want to go in first because I don't want Solus users in the dark, right?
Because then you're getting into an area, now, not to use, specifically not to use Mimic or MyCraft in this example,
but what you then get is a downward spiral that contributes to incompetency of software engineering practices.
So, by allowing everybody to run in a container, by allowing everyone to be isolated, they can get away with having shite code.
But don't they already?
Yeah, but I'm not one of those people.
I'm the sort of person who runs their code through Valgrind and static analysis and makes sure it doesn't leak.
So, by allowing these things to just break, like, do whatever they want because they're in a sandbox,
we're just going to have this downward spiral of incompetency.
It would be like saying if you put your car and limited it to 10 miles an hour and put cushions all around the side of it.
I think you're caught in a logic loop here because I think we are already in that paradigm of software quality
and that's why projects like yours exist in the first place because we're sick and tired of it
and we need people who care about some of those small things.
Sure, but I mean, there does need to be, it's a case of owners, isn't it?
We all need to agree, first of all, we do need the OS app separation, right?
So, the OS, everything up to and including the desktop that you ship, that belongs to you.
If your version of a library breaks the applications, you're a bad vendor, right?
If the applications break the operating system, that's a bad application.
So, I can see why you need the separation.
What about the use case that some of these things solve?
Not necessarily a flat pack, but definitely app image and snaps.
What about this really important use case where you just have no control over this?
Somebody discovers Solace, they download it, they've just recently switched over from a Mac or Windows
and the way they install software is they go to the vendor's website and they download it from their website.
They're dumb, they don't know any better, curse them, but that's how they want to do it.
That is a one example, but legitimately, let's be honest, it really is solving a problem.
Did you be able to say, there are better ways to get software on Linux, but if you want to download this snap,
just go here, download these snaps or that use case, here's a thumb drive full of snaps, install these.
There are scenarios where it is beneficial to the entire platform as a whole to be able to say,
this could be installed on Linux.
End of sentence.
I mean, it can be beneficial, but I mean, there's so many problems with this as well.
So, when I install a.exe, I mean, I'm sorry, when I install a snap from the internet,
because this is exactly what we're emulating.
Between Flatpak and Snap, we're just trying to emulate Android, right?
Yeah, I guess so.
This is exactly what we're trying to do here.
We're downloading arbitrary files from the internet and install it, but this time,
we're going to do it without the store itself, which is what snaps are trying to do.
Except there's a store and there's a repo with snaps, so no.
Yeah, except for the store, none of our distributions can actually contribute code to this unless we,
the store itself, we can't see, right?
That's completely proprietary.
We're not allowed to see it, but we're going to trust code going through though, yeah?
There's a difference between saying you don't trust it and saying it doesn't exist.
Along with that, if I want to contribute code to get any of Snap fixed or better integrated,
I then have to sign a contributor license agreement.
I agree.
So, how open is it really?
It's open in terms of code.
The code is open, but if I want to contribute it and I want to integrate into Solus, then I can't.
I think you could throw snaps out there and the entire conversation is still valid
if you're just talking flat pack and app image.
I agree that I think none of them are technically close yet.
I mean, close might not be the thing, but...
I mean, they have kind of definitely a while to go.
And this is the thing.
We're getting into heated arguments nowadays like, well, everybody is,
but neither of them have had a chance to prove themselves yet.
It's early days.
I think it is early, and I think what I think I really appreciate about your viewpoint is
it represents sort of the person who's willing to go that extra step,
to think a little bit harder about the way these things are built,
to present the user with better options, to make sure that things are built and designed properly
and things are running current, and those are going to be the people that are the most disserviced,
I think, by the more generic software installation gets on Linux.
And so I think the point that you're representing here in this conversation is a huge point of input
that we're getting, it's not exactly refined like that yet,
but we're getting a lot of that feedback into the show, is there is a point for the package maintainer.
There is a point for the builder, for the assembler, and we have come to these positions
and had people do these jobs for very specific reasons.
It wasn't just arbitrary that we just one day all decided we're going to have package maintainers
and we're going to have repos and we're going to do software this way,
and we're going to share libraries.
That wasn't just an accident.
There was good reason for it, and when you implement it properly,
it is a very good system, and it's not going away necessarily.
And then I think Ryan does a great job of representing the upstream project
that's got something really neat on their hands that they want to get out to as many people possible
in the most predictable manner possible, in the most user-acceptable manner possible.
And that's also a completely legitimate point of view.
I have a question for Ryan.
Go ahead, Ryan.
Ryan, if you have a situation where the packaging, the current structure of packaging,
let's say the application level and not the core base was just those three competing.
All of the three, the Flatpak, the SNAPS, and the AppImage,
are all equally dominant at some point in time.
Would that be an improvement to the current state?
If they were all competing but all still...
Say that one more time, I'm sorry.
If you had to make three packages, and depending on the distro,
let's say some distros use SNAPS, some use Flatpak,
but they don't all have a universal, they don't all agree to that.
But instead of having to deal with the maintainers,
instead of having to deal with different formats based on the different distros
and the different distro versions, you only had to make three,
one for each structure for Flatpak, SNAPS, etc.
Would that be an improvement to the current state for Mycroft?
Sure. I mean, what we're talking about is kind of totally different, I think.
Ike is talking about some of these lower-level system libraries
that, frankly, Mycroft does use.
We walk kind of a line.
We've had issues packaging with SNAPI in the past
because we touch some things that are not as simple as your normal desktop application.
But the thing that we're trying to do,
and I think what a lot of application vendors are trying to do,
is put something out there where they're not so worried about
system library changing like free type 2 when they haven't written support for that yet.
There are a lot of things like that where you're trying to do your best
as an application developer, but you got so many competing desires from your users
that sometimes you need to have that direct relationship with them
in order to provide a good, consistent, stable experience.
And I think that if we demonize these projects,
and I know that's not what a lot of people are doing,
but there's obviously a reason that they're gaining traction,
and that's because application developers are having a hard time targeting Linux
and getting a consistent experience to their users.
And to talk about the trust issue,
if somebody is willing to go and grab a PPA for a piece of software,
they already trust who's providing that PPA.
Should they trust them? I don't know.
But they already do, and there's a lot of trust that's thrown around anyway.
You know, you're trusting the maintainers.
Sorry, there's people confusing PPAs with being canonically maintained.
Yeah, I think you make a good point, Ryan.
And I want to give you sort of the final input here.
You said you have a proposition.
I'll start off with one bit of confusion I actually had with Ryan there,
which I didn't understand.
Ryan, you just asked if they were all competing standards,
would you then accept them all and it would all be a good thing.
That doesn't seem like it makes sense to me.
You would adopt one of these standards because of the universal standard
to solve the problem of not doing the other packaging formats.
Otherwise, you'd essentially just took on three more packaging formats.
No, I didn't. No.
I never said we would just package one.
I never said we would just package one of those.
That's not what I just said either.
Hold on, stop, stop.
This is not really worth talking about.
It's just simple.
The question was if you could basically get away with using just AppImage,
Flatpak, and Snaps.
You've essentially covered the entire ecosystem.
Isn't that better than creating four different versions of the RPM,
two devs, one for Debian, one for Ubuntu,
and submitting it to the openSUSE build service
and trying to get it in copper.
That's what I was saying.
Yeah, that's all you're saying.
It's not better.
I think seriously that the problem is elsewhere.
Seriously, the problem is that developers have been doing development
relying on system-wide things like package names.
Developers used version control systems appropriately.
By appropriately, I mean include your dependencies in your project tree
as a submodule of GitHub or SVN or whatever.
This would allow any maintainer to go and compile the project.
Now, how they distribute those files in their distribution is their problem.
But everyone, there is a maintainer, will be able to just get your source
and build it.
That would actually fix things.
We wouldn't care if we're deploying 30 different packages
because at the end of the day, anyone really wanting,
they could download the source and build.
I don't want to wait for a maintainer to do that.
I think just the complication of that landscape.
Here's what I get on the Coda Radio show.
A lot of people who want to start distributing Linux server-side apps
and they want to ask Mike and I the best way to go about it.
The number one thing they have a problem with is,
I can't effing figure out how to even get my app out there.
How do I package it?
Which one should I be packaging it for?
Which version of those districts should I package it for?
Then once I've packaged it, how the hell do I let anybody know about it?
There's no app store.
There's no central news place that people check.
How the hell do I let anybody know I've created this thing?
The entire process is so opaque to them.
It's so nebulous to them that they honestly say,
you know what, I got better things to do.
I'll just go make a Docker container and call it good.
I'm out.
Okay, so we should probably wrap it up.
But I guess the point is,
is what I think people are fundamentally missing
when they're not getting the entire argument is,
and maybe I'll send it back to Ikey so we can finish this thought here,
but the point is, there's a problem out there,
a meta-problem that goes beyond the technology,
that goes beyond the sandboxing, that goes beyond who created it.
The meta-problem is, is there is a wave of talent
that wants to create software for a platform,
and they simply can't even figure out how to get the applications here.
And if you don't think it's true,
you haven't been talking to a lot of developers,
because it is fundamentally just that stupid basic problem
is what's holding up a ton of them.
As I looked at it, it looked super complicated.
I ain't got time for that.
And when you have so many choices, how do you know which one?
And they're not familiar with it.
Or a really fancy app for the Mac OS X,
because they're defined.
Or you end up with your own cloud on Debian.
Yeah, yeah, yeah.
But okay, I know that wasn't your main point
about the semantics of the packages.
You had another point you wanted to make in there, right?
Yeah, no, I mean, that one I was just literally confused about.
Yeah, so finish it up there.
Didn't know that was going to happen.
So my proposal is basically this.
I know it probably is not actually on here at the moment,
so I'll let him reply on IRC.
So this one's a bit of a freeway.
But, well, moving on.
So my proposal is basically this.
I know I've raised concerns over parts of the code base in Mimic.
Now, to be clear, this is not me trying to crap on Mimic, right?
This is because of the forked code base that it started from.
Now that stuff is already a nightmare to work with.
I can see that.
So I'm not crapping on those guys' stuff.
So my proposal goes freeway.
Ryan, it feels like this is your life.
I will package all of my craft for Solus, right?
And I will demonstrate how easy this is going to be.
That's a great title.
I will demonstrate how easy this is going to be.
Now, it's something I'm going to be maintaining, right?
And just as long, I want you to take the patches coming back.
So this is, you know, to get everyone back in the mood
and open source and contribute, right?
I will give you the patches back from Solus
for the things that I have concerns about,
as opposed to just sitting there bitching about them.
Now, because there's a lot of that that goes on these days.
And for Popey, there are some things I think
that Y package in Solus has already done, right?
Now, as much as I picked on it before for having some technical limitations
in comparison to Solus' Y package,
that doesn't mean that Snappy isn't good for Ubuntu.
What doesn't work for us will actually work for Ubuntu, right?
This is their solution. That's great.
There are some things we have already done in Y package in Solus
that I keep going to say, flat back, I'm sorry, but it's not.
There are some things that it could really, really benefit from.
So some of the things that we took from Clear Linux,
it could also benefit from them, like the optimizations,
the advanced pattern and logic.
So some of those concepts, some of the constructs that we use
in our YAML files, I think they could really do those.
Now, personally, I'm not going to be able to sign the CLA.
So what I'll do, I will put those contributions out as public domain,
and I will leave those for anyone in the canonical to take them up
and merge them if they wish.
Nice. And you know what? If Mycroft in some way,
like a Venom extension or some capacity,
ended up integrated into the desktop on Solus...
Oh, boy, that wouldn't be a bad thing.
Well, we have Raven, don't we?
I would have to run that on my laptop.
I would think I'd get that on my laptop.
We have the Raven sidebar. How sexy would that be?
Yeah. That's my promise.
I would like to point out, too, that I love Solus.
I used to be a part of that community, and I've used Y package,
and it's a good solution.
So Ike and I, we get along in other settings.
It's Wes. He brings out the worst in people.
I sure do.
Yeah. But what we're just trying to do is find easy ways
to get our software to users.
I mean, this has got to be, wherever we end up,
this is going to be kind of a good thing for projects like yours, Ryan.
So I'm excited for it, and I can't imagine you aren't.
Can you share it all?
Have people from Canonical contacted the project and said,
can we get you started? Can we help?
What's that process been like?
Because that seems to be sort of a key piece that they've done
that's helped them get an early start on a lot of snaps,
is Canonical is working directly with different projects
to help them say, hey, do you have any questions?
Are you interested? Can we help you?
Have you had any discussions like that?
So first I'd like to real quick thank Ike,
and I can't think of who else popped in,
but some early folks popped in from Solace and from Ubuntu
and a guy from Fedora to provide some kind of day one and day two feedback
on the repo when it first went open source, the MyCraftCore repo.
So first I want to thank those guys.
But yeah, we have had the Ubuntu guys reach out to us
and walk us through packaging.
We have some requirements as far as access to the sound devices
that we still do a back and forth with them on.
I'm making sure that it picks the right sound device.
Yeah, it needs to pick the right sound device.
It needs to pick the sound device that's in use by the user.
It needs to have a good default.
There's a lot of nuance in picking and managing sound devices.
But all around they've been really good providing feedback.
I talked to Adam Miller on the Fedora project
who also provided some feedback around Flatpak.
But yes, so far everybody who I've spoken to on the Snappy team
has been really great about answering questions,
so same with the Flatpak guys.
And then of course there have been Wimpy
who helped us out with packaging for Debian for Ubuntu.
So I don't want to poop on any of the packaging things.
And I want to say that the Snappy guys and the Flatpak guys
have been great providing feedback.
My two cents is that I'd really like to start discussing
the technical merits of these projects,
like you've been advocating for, Chris.
I'd love to see more write-ups on what the actual difference is
and not about canonical quote-unquote propaganda.
Boy, that is so great.
I think that's probably our ending note right there
is I think just maybe future episodes,
maybe we'll just start the conversation,
future episodes I'd like to talk about.
First of all, Flatpaks are very much a repo-based technology
which is a totally different approach than say AppImage
or Snap necessarily can be a totally different approach
and is in some ways reminiscent of PPAs, good and bad,
and means software updates will be easier.
There's a lot of technology there, right?
Their sandboxing is further along for different distributions.
Snaps, I think it's only on Ubuntu and Arch right now,
but how are they doing that?
What is AppArmor the right choice?
All these questions that we have,
questions about re-implementing the Snap store backend
or creating your own Snap store.
Do you have to rebuild the Snap D program?
And where will the real community actually flourish?
Yeah, is uApp browser, whatever it is, uBrowser, whatever it is,
is that going to be the place?
All these little questions that we have I think now
are what we should start talking about
and the technical aspects of them.
I think this part of it, it really has moved
to a very partisan discussion very quickly,
but I don't know if there's much more productive conversation
to be had there.
I will say I think we may end up with two regardless.
I think that something you said caught my attention,
just that really Snaps are the only one
with any server focus at all.
Like Flatpak explicitly says that it doesn't really fit with the server
and AppImage has that great desktop in there.
So I think really Docker or something like that
is here to stay on the server side too.
So there's probably at least going to be two.
The momentum and demand around delivering reliable,
consistent, predictable software on the server
is going to make Snaps at least successful
on the Ubuntu platform.
I think probably that alone.
But all of that is a conversation for another day.
Join us on Sunday on the Linux Action Show.
We'll be reviewing the new Fedora release.
I'm really looking forward to it.
This is the release I have been hoping for.
Gnome 320 is looking nice.
It's got Flatpak support.
I've had a Fedora installation on the server running for a while now
that I'm going to be upgrading to Fedora 24
and reporting on that.
Really have been looking forward to it.
Join us live Tuesday.
That's my next Tuesday, my last episode before I go on vacay.
Wes, you may not be here too.
I may not be here.
So we may have a special guest sitting in Wes's chair.
Find out the time in your local time
by going to jupyterbroadcasting.com.
Then join us at jblive.tv, linuxactionshow.reddit.com.
And we'll see you right back here next Tuesday.
I've never installed Gnome slash Linux.
Zombies don't run Linux.
I've never installed Gnome slash Linux.
I got the sense right as we were leaving there,
the rotten, you had something you wanted to add,
but we were wrapping up.
Did you have, did you want to complete a thought?
I was just going to answer your question about the UAP Explorer.
Oh yeah, yeah, yeah.
That's the unofficial, non-canonical thing.
Right, yeah.
Remember how the Ubuntu forms were unofficial at one time?
Remember that?
And they became, that's a long time ago.
That's a while ago.
jbtitles.com.
Well, the UAP Explorer is not just snappy.
It also has click packages, so it's kind of like a mess right now.
Yeah, for now.
Hey, both, a big thank you to both Ryan and Ike,
who had stepped in the ring.
Thank you also, of course, to everybody who contributed.
But it was, there was a lot of heavy lifting there by you guys.
Really appreciate it.
Yeah, I don't think I needed to mention it,
but it was very nice having different perspectives
from the different audiences.
Yeah, yeah.
Absolutely.
Yeah.
Maintainers, packagers, all that.
I wanted to add that Mycroft is already dockerized.
Right, so there you go.
There you go.
Of course it is.
Right?
Everything's dockerized.
All right.
drivertitles.com, you guys.
Got to go to drivertitles.com.
My little poppy.
Oh boy.
That poppy sounded like a robot, huh?
I got to get...
Sorry about the My Little Poppy one.
I got to get Mycroft installed on this machine
just so I can make poppy say stuff during the show
when he's not here.
Right?
You have to.
That's obvious.
Poppies are going to end up showing up on a lot of podcasts.
I want...
So I want the functionality to say Mycroft define coconut.
Like I want to be able to just...
Can I do that, Ryan?
Will I be able to get like a word definition?
Because that's what I would like to have right here
in the studio with a mic on it.
And that way when I want to define something,
I can just ask Mycroft and then poppy reads the answer.
Let me check.
Let me pop them up right now.
I love it.
So Eki, you spent a lot of effort trying to make sure
that games work on it, especially Steam games,
but are you getting any support from Valve
and doesn't it kind of suck if you're not?
Well, I mean, you must have realized by now,
I'm, you know, I'm half wired wrong.
So in terms of support from Valve,
the way I kind of look at it defined is like,
well, I'm doing it because they're not.
You know, I mean, eventually they're going to pick up
on what I'm doing and eventually all this stuff
will become the norm and everything will be fixed.
But it doesn't really bug me, to be honest with you.
Do I think they should have been doing it properly first?
Yes.
Do I think they should have used Ubuntu 12.04
and use a runtime library like that? No.
But it's the same reason why I think Flatpak is doomed as well
because of the whole thing.
We're going to provide your API, um, ABI,
but we're not going to define it.
So what it should have been is like, this is the ABI we need,
not this is the ABI you're going to use in this exact form.
And that's exactly the same problem Flatpak has.
And it's the reason why Flatpak would never go into Solus,
why Snap would never be a primary form.
It could be something we could accept as a secondary form in Solus, you know?
Because it doesn't push that, um,
it doesn't force that distribution method on you.
That's perfect because Snap is not, it's intended to be a supplement.
It's not intended to replace the core at all.
Like, Far Shutterworth was asked about whether Snap would make it
where that Debian was not necessary.
And he said that was never going to happen,
that Debian is a fundamental importance to Ubuntu.
Yeah, there's no reason for them to pursue that.
Hold on, hold on, guys.
This is CNN Breaking News.
We have an update from Robot Popey.
Greetings, Professor Falken.
Would you like to see some projected kill ratios?
Oh, God.
That's awesome.
And that is our, oh, God, that is our Popey robot update.
Where did that come from?
Popey.
The Whopper, I believe.
Popey's inside the Whopper now.
That's amazing.
So, yeah, I got to get hooked up to the stream.
Yep.
Oh, Popey.
That is maybe the next most important JB project.
Oh, Popey.
You know, JBot needs a voice.
Yes, it does.
JBot needs a voice.
It needs to come alive.
Wouldn't it be great if at the end of the show we could turn on JBot?
And, like, wouldn't it be, I wonder if there's a way we could,
you wouldn't want people to, like, jam it up.
No.
But you'd want to have certain people, I don't know,
because you wouldn't want to limit it either,
but it would be great if we could give JBot a voice
at this point in time during the show.
Can we ask Ryan right now that if you asked Mycroft,
would you like to play a game?
That's the answer.
How about a game of chess?
That was pretty good.
That was good.
Greetings, Professor Falcon.
Would you like to see some projected kill ratios?
You know what I got to do is I got to put that on the soundboard
is what I got to do, because that's going to be handy.
I secretly use Arch Linux.
All right, so we got to go pick our title
and then we got to get out of here.
Yep.
It's getting ridiculous.
Oh, yeah, sure.
