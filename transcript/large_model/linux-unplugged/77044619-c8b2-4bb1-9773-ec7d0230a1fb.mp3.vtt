WEBVTT

00:00.000 --> 00:02.800
Dang it, my Rona hair is getting ridiculous.

00:02.800 --> 00:04.080
God, it's just in my face constantly.

00:04.080 --> 00:06.000
You just need to glue it down.

00:06.000 --> 00:07.320
But then it gets all gnarly,

00:07.320 --> 00:09.160
and it gets all hard and greasy.

00:09.160 --> 00:11.120
Chris, last dreads, I think, is what's about to happen.

00:11.120 --> 00:13.480
So then I go for the nothing in the hair thing,

00:13.480 --> 00:15.080
so that way it doesn't get greasy,

00:15.080 --> 00:17.840
but then it's just all over the place.

00:17.840 --> 00:20.040
And when it's like poking me in my eyes and my forehead,

00:20.040 --> 00:21.120
I can't focus.

00:21.120 --> 00:23.080
And everybody says, you'll get used to it.

00:23.080 --> 00:23.900
Well, guess what?

00:23.900 --> 00:25.760
It's been like a solid month, and I'm not used to it,

00:25.760 --> 00:28.160
so I don't think I'm ever gonna get used to it.

00:28.160 --> 00:29.960
My damn hair needs to get cut,

00:29.960 --> 00:32.220
but I just, I haven't got it.

00:32.220 --> 00:33.800
You know, there's like,

00:33.800 --> 00:36.900
there's better reasons to go out during a pandemic,

00:36.900 --> 00:40.160
and my own vanity doesn't seem like a good enough reason,

00:40.160 --> 00:41.000
so I just haven't done it,

00:41.000 --> 00:43.200
but now it is driving me crazy.

00:43.200 --> 00:45.240
Well, if it starts to affect your productivity.

00:45.240 --> 00:47.120
That's usually the way I talk myself into everything.

00:47.120 --> 00:49.480
Right, that's why you need ice cream tonight.

00:49.480 --> 00:54.480
Hello, friends, and welcome into episode 364

01:01.680 --> 01:03.320
of your weekly Linux talk show.

01:03.320 --> 01:04.160
My name is Chris.

01:04.160 --> 01:05.000
My name is Wes.

01:05.000 --> 01:05.820
Hey, Wes.

01:05.820 --> 01:06.660
Hello.

01:06.660 --> 01:07.600
Nice to see you there.

01:07.600 --> 01:08.580
Nice to see you there.

01:08.580 --> 01:09.420
Hello, cheese.

01:09.420 --> 01:10.240
Hello, Drew.

01:10.240 --> 01:11.300
Hello, internet.

01:11.300 --> 01:12.140
Hello.

01:12.140 --> 01:13.240
Nice to see you there.

01:13.240 --> 01:15.460
Everybody really dressed down from last week.

01:15.460 --> 01:18.460
Like last week, everybody was excited and they dressed up.

01:18.460 --> 01:19.800
Biologist in your shorts.

01:19.800 --> 01:21.000
It's hot this week.

01:21.000 --> 01:22.180
That's true, that's true.

01:22.180 --> 01:23.500
Well, we have a big episode.

01:23.500 --> 01:25.200
We're gonna get into some community news,

01:25.200 --> 01:28.060
and then we're gonna discuss the past, present,

01:28.060 --> 01:31.640
and future of Linux on the ARM platform,

01:31.640 --> 01:34.200
which has become of a little more interest recently

01:34.200 --> 01:36.240
with Apple's news, but additionally,

01:36.240 --> 01:38.920
there's just some significant things that are in the works,

01:38.920 --> 01:40.540
even within the last couple of days

01:40.540 --> 01:42.240
as we record this episode,

01:42.240 --> 01:45.080
that we thought the timing was right to do that.

01:45.080 --> 01:46.760
So we'll get to that in just a moment,

01:46.760 --> 01:50.120
but before we do that, time-appropriate greetings,

01:50.120 --> 01:50.960
Mumble Room.

01:50.960 --> 01:51.800
Hello.

01:51.800 --> 01:53.240
Happy Linux Tuesday.

01:53.240 --> 01:55.080
Hello.

01:55.080 --> 01:57.600
31 people hanging out in that Mumble today.

01:57.600 --> 01:58.440
Beautiful.

01:58.440 --> 01:59.260
That is pretty great.

01:59.260 --> 02:00.100
Hello, everybody.

02:00.100 --> 02:01.200
Good to have you there,

02:01.200 --> 02:04.240
and say hello to the new terminal on Chrome OS,

02:04.240 --> 02:06.500
which is shipping in Chrome OS 84.

02:06.500 --> 02:10.120
It's been completely revamped as a system web app,

02:10.120 --> 02:11.660
and it adds a new settings menu

02:11.660 --> 02:13.240
and a bunch of customization.

02:13.240 --> 02:15.920
I think Chrome OS just got really serious

02:15.920 --> 02:16.900
about the Linux terminal.

02:16.900 --> 02:19.240
Yeah, right, it's even got tabs built right in.

02:19.240 --> 02:21.360
Well, now you know they're serious, Wes.

02:21.360 --> 02:22.800
Tabs, you say?

02:22.800 --> 02:24.640
That's how power users get work done, Chris.

02:24.640 --> 02:27.960
Oh, man, could you imagine the meeting

02:27.960 --> 02:29.680
where they're discussing the new power users

02:29.680 --> 02:30.800
they're gonna add to Chrome OS,

02:30.800 --> 02:33.720
and you know, like, tabs was on the whiteboard.

02:33.720 --> 02:36.360
I will say, you know, this continues to make me

02:36.360 --> 02:38.120
more and more curious about Chrome OS,

02:38.120 --> 02:41.160
in that having a usable, configurable terminal

02:41.160 --> 02:42.480
is probably one of the things I would want

02:42.480 --> 02:44.660
if I was gonna actually be using it day to day.

02:44.660 --> 02:46.040
Yeah, and they invested pretty heavily

02:46.040 --> 02:47.560
in the Crostini environment,

02:47.560 --> 02:50.580
and have added significant functionality to it over time,

02:50.580 --> 02:53.760
and now they're improving the user interface to that.

02:53.760 --> 02:57.020
It seems to be a fairly significant through line

02:57.020 --> 02:59.880
of continued investment in the Linux environment

02:59.880 --> 03:03.120
for Chrome OS, and I think the message here is,

03:03.120 --> 03:05.160
this could be your simple, no-hassle,

03:05.160 --> 03:06.880
plug right into your corporate environment

03:06.880 --> 03:11.640
development machine, and that sounds ludicrous,

03:11.640 --> 03:14.040
unless your corporation uses Google Apps,

03:14.040 --> 03:16.320
and all of a sudden, this thing's plugging right in.

03:16.320 --> 03:18.280
It's got your calendar, it's got your inbox,

03:18.280 --> 03:21.360
it's got your cloud storage, it does your Google meetings,

03:21.360 --> 03:22.360
and it's got a terminal.

03:22.360 --> 03:25.040
Right, you can go, you know, hop onto your Google Cloud VPS

03:25.040 --> 03:26.680
and start getting work done.

03:26.680 --> 03:31.240
Oh, what a Google Cloud future it is, Wes.

03:31.240 --> 03:33.040
And it's just, I think, remarkable,

03:33.040 --> 03:34.400
because it's a clear strategy

03:34.400 --> 03:36.960
that has been adopted by Microsoft.

03:36.960 --> 03:39.360
Their manifestation of it is WSL,

03:39.360 --> 03:41.960
which is a much more sophisticated implementation,

03:41.960 --> 03:45.200
but Google is able to take a few shortcuts here

03:45.200 --> 03:46.520
since they're using the Linux kernel,

03:46.520 --> 03:48.280
and so they're able to sort of respond

03:48.280 --> 03:49.800
competitively very quickly.

03:49.800 --> 03:51.840
It's interesting to see them converge

03:51.840 --> 03:53.540
on similar ideas, though.

03:53.540 --> 03:56.360
Yeah, and I wonder, just because we are gonna be talking

03:56.360 --> 03:59.480
about ARM today, I wonder how this impacts the Mac platform.

03:59.480 --> 04:00.980
They seem to be getting further away

04:00.980 --> 04:03.840
from making it possible to run Linux applications

04:04.880 --> 04:06.160
outside of virtualization.

04:06.160 --> 04:07.000
Right.

04:07.000 --> 04:09.180
And there does seem to be, in the latest builds of Big Sur,

04:09.180 --> 04:13.240
there does seem to be specific OS improvements

04:13.240 --> 04:15.880
to enable Linux virtualization.

04:15.880 --> 04:16.720
Did you see that?

04:16.720 --> 04:17.560
Yeah, isn't that interesting?

04:17.560 --> 04:19.240
But, I mean, it does make sense.

04:19.240 --> 04:20.880
You gotta have Docker, you gotta have things like,

04:20.880 --> 04:22.400
you know, developer productivity tools

04:22.400 --> 04:24.720
if you're gonna have developers use your platform.

04:24.720 --> 04:26.400
How much do you think it's about Docker?

04:26.400 --> 04:28.040
Right, right, yeah, yeah.

04:28.040 --> 04:29.400
It's probably mostly about being able

04:29.400 --> 04:31.280
to run Docker containers really easily.

04:31.280 --> 04:34.040
But then you may see other lightweight virtualization suites

04:34.040 --> 04:36.440
that sit on top of a set of APIs that Apple's creating

04:36.440 --> 04:38.080
to make Linux virtualization easier.

04:38.080 --> 04:39.960
If it works smooth enough, I suppose,

04:39.960 --> 04:40.920
you might not even notice.

04:40.920 --> 04:42.000
Yeah, yeah.

04:42.000 --> 04:44.360
All right, well, let's shift gears to Manjaro.

04:44.360 --> 04:46.160
This week, there was an announcement

04:46.160 --> 04:47.920
in the change of the team composition,

04:47.920 --> 04:50.100
and it happened in a fairly public way,

04:50.100 --> 04:54.880
and it appears to involve the use of finances

04:54.880 --> 04:56.560
and community-contributed funds.

04:56.560 --> 04:59.080
And so that always gets everybody's attention.

04:59.080 --> 05:01.940
And Philip is joining us from the Manjaro project

05:01.940 --> 05:03.640
to walk us through his side of what happened

05:03.640 --> 05:05.440
and kind of get a better understanding

05:05.440 --> 05:07.480
of the greater context here.

05:07.480 --> 05:10.240
So Phil, I don't know if my characterization is correct,

05:10.240 --> 05:14.840
but it seems to me that there was a disagreement in the use

05:14.840 --> 05:18.040
of funds to buy a fairly high-end laptop

05:18.040 --> 05:21.640
for a maintainer on the project, not yourself.

05:21.640 --> 05:25.160
And it seems that there was a process that was followed.

05:25.160 --> 05:28.200
That process didn't work out, and so then the decision

05:28.200 --> 05:30.020
was made by yourself to proceed anyways

05:30.020 --> 05:31.960
with the purchase of the laptop, which

05:31.960 --> 05:35.200
led to a disagreement that fairly rapidly went public,

05:35.200 --> 05:38.000
maybe before the conversation was even complete.

05:38.000 --> 05:40.320
And now people don't really know what to believe.

05:40.320 --> 05:44.840
Well, the laptop is for a community developer who

05:44.840 --> 05:49.800
is mostly based in Germany, and he is presenting Manjaro

05:49.800 --> 05:51.360
at several trade shows.

05:51.360 --> 05:55.280
So everybody in Germany at least know him,

05:55.280 --> 05:59.040
and the laptop was actually about 1K.

05:59.040 --> 06:02.620
And we added two hard drives because he

06:02.620 --> 06:04.680
has a special backup system.

06:04.680 --> 06:08.200
And he extended the RAMs because he is simply

06:08.200 --> 06:12.020
doing all the testing and installs several Manjaros

06:12.020 --> 06:14.280
on his machine, and he needs that.

06:14.280 --> 06:16.160
And it looked like you guys took a look

06:16.160 --> 06:20.780
at doing an 18-month contract with a cloud provider

06:20.780 --> 06:21.920
to do the builds.

06:21.920 --> 06:24.840
And you look at the cost, and it sort of just

06:24.840 --> 06:27.000
works out to just end up buying the laptop, plus then

06:27.000 --> 06:30.000
the developer has a machine to actually use as well.

06:30.000 --> 06:32.200
So I think that totally makes sense

06:32.200 --> 06:34.240
and seems like a pretty reasonable laptop

06:34.240 --> 06:36.520
for a development workstation, especially one that's

06:36.520 --> 06:40.320
showcasing the distribution at events once they resume.

06:40.320 --> 06:42.200
I guess what a lot of people seem

06:42.200 --> 06:44.840
to be thinking something foul happened

06:44.840 --> 06:48.400
is with the stepping outside the process for the purchase.

06:48.400 --> 06:49.860
So I'll tell you my interpretation

06:49.860 --> 06:52.680
of it from an outsider, and then you tell me where I land.

06:52.680 --> 06:55.960
But I looked at this situation, and I said, well, it

06:55.960 --> 06:58.520
seems maybe there's some personal things going on

06:58.520 --> 07:00.720
between some team members, so that could

07:00.720 --> 07:01.840
have some influence here.

07:01.840 --> 07:04.480
But is it possible that the project created

07:04.480 --> 07:08.520
a very rather convoluted process to handle expenses,

07:08.520 --> 07:10.400
and then that process failed?

07:10.400 --> 07:13.200
And then as a project leader, you

07:13.200 --> 07:16.680
decided, well, this is a necessary expense

07:16.680 --> 07:18.020
for the good of the project.

07:18.020 --> 07:21.040
Is that essentially the events that happened?

07:21.040 --> 07:22.680
Essentially, kind of.

07:22.680 --> 07:24.320
But Matthew's also here.

07:24.320 --> 07:26.560
He is one of the community developers,

07:26.560 --> 07:31.200
and he can also show you his side.

07:31.200 --> 07:33.360
It was accepted by the whole team.

07:33.360 --> 07:38.240
We talked about it, and even the guy who didn't approve it

07:38.240 --> 07:40.380
also agreed on the laptop itself,

07:40.380 --> 07:44.200
but slightly disagreed with the additional configuration.

07:44.200 --> 07:50.160
So there was a process, but not like everybody on the team

07:50.160 --> 07:52.880
can discuss with him.

07:52.880 --> 07:55.080
So we said, it doesn't work like that.

07:55.080 --> 07:58.040
And since I started the project, it's

07:58.040 --> 08:02.480
really important also to me to have the developers give

08:02.480 --> 08:05.240
their goods so they can develop.

08:05.240 --> 08:08.720
Matthew, for example, has a laptop not working,

08:08.720 --> 08:10.160
and he's still in the team.

08:10.160 --> 08:14.400
And we are now currently looking for a working laptop also

08:14.400 --> 08:14.920
for him.

08:14.920 --> 08:18.720
So a lot of purges will happen, and the process

08:18.720 --> 08:20.080
is currently due.

08:20.080 --> 08:24.680
And Matthew can tell you about what the community board will

08:24.680 --> 08:26.040
do for the next thing.

08:26.040 --> 08:27.400
I mean, that actually tracks pretty closely

08:27.400 --> 08:29.400
with what I would think would happen,

08:29.400 --> 08:32.800
is sometimes a process is created for the project,

08:32.800 --> 08:34.520
and that process doesn't necessarily

08:34.520 --> 08:36.880
serve the project's end goals.

08:36.880 --> 08:38.360
And so it needs to be modified.

08:38.360 --> 08:40.520
Tell me if I'm wrong here, but I think maybe where

08:40.520 --> 08:44.440
the breakdown was is instead of modifying the process to make

08:44.440 --> 08:47.320
it possible for the purchase to happen via process,

08:47.320 --> 08:49.680
the process was just sort of bypassed,

08:49.680 --> 08:51.880
which is sometimes necessary when

08:51.880 --> 08:54.560
you don't have a lot of time and a lot of energy to mess around.

08:54.560 --> 08:58.560
But that seems to be sort of like the core problem there

08:58.560 --> 09:00.800
is the process wasn't really serving the project

09:00.800 --> 09:03.720
as you saw it.

09:03.720 --> 09:05.920
And it sounds like what you're sort of saying there,

09:05.920 --> 09:07.040
and maybe I'm misunderstanding, but it

09:07.040 --> 09:09.560
sounds like you're saying there's maybe a new process that's

09:09.560 --> 09:10.880
being developed now.

09:10.880 --> 09:12.040
Yes.

09:12.040 --> 09:14.480
Since I'm more part of the company,

09:14.480 --> 09:18.080
I give Matthew more or less the freedom

09:18.080 --> 09:21.560
to decide what he thinks for the community project.

09:21.560 --> 09:25.720
And yes, we will see how that works out.

09:25.720 --> 09:27.280
The funds are secured now.

09:27.280 --> 09:29.560
Everything is safe and sound.

09:29.560 --> 09:32.160
And we can only move forward from now on.

09:32.160 --> 09:34.960
And it seems like this probably means long term you'll

09:34.960 --> 09:37.240
have a better representation of what it actually costs

09:37.240 --> 09:39.600
to run a team of developers.

09:39.600 --> 09:40.120
Exactly.

09:40.120 --> 09:41.600
We will be more visible.

09:41.600 --> 09:45.120
And also the team members who are not known yet

09:45.120 --> 09:49.560
might appear in podcasts, shows, YouTube channels, whatever.

09:49.560 --> 09:51.760
It depends also what to do.

09:51.760 --> 09:53.160
Mati is joining us as well.

09:53.160 --> 09:54.120
Yes, I'm here.

09:54.120 --> 09:54.640
Hello, sir.

09:54.640 --> 09:57.280
So do you want to chat at all about what you kind of have

09:57.280 --> 09:57.760
in mind?

09:57.760 --> 09:59.360
I know it's super early days and still,

09:59.360 --> 10:02.320
but it sounds like maybe a new process will be put in place.

10:02.320 --> 10:04.040
Any insights you can share?

10:04.040 --> 10:07.680
One thing I would like to say about what happened,

10:07.680 --> 10:11.040
I think it's a bit misleading or a misconception

10:11.040 --> 10:13.720
to say that the process was bypassed

10:13.720 --> 10:16.560
or that the process was convoluted.

10:16.560 --> 10:20.400
Because I think the problem with the previous way

10:20.400 --> 10:22.640
that things were processed wasn't so much

10:22.640 --> 10:26.560
that it was convoluted, but it was kind of unclear

10:26.560 --> 10:28.640
for the team.

10:28.640 --> 10:36.680
And it was mostly run by the developer who left our team.

10:36.680 --> 10:42.080
And now we're coming together as a team to make a new process.

10:42.080 --> 10:44.840
So we're making sure that everybody is on board

10:44.840 --> 10:47.320
with how the things work.

10:47.320 --> 10:49.280
And everybody knows what to do.

10:49.280 --> 10:51.840
Which should be a lot more sustainable, I would imagine.

10:51.840 --> 10:56.720
I think this, in long term, or actually not very long,

10:56.720 --> 10:59.960
it's going to lead to a better process about this.

10:59.960 --> 11:03.360
I think that's probably what Jonathan wanted anyway.

11:03.360 --> 11:05.160
Fair point.

11:05.160 --> 11:09.520
Is there a plan to communicate the expectations

11:09.520 --> 11:10.840
to the Manjaro user base?

11:10.840 --> 11:13.160
Because I have to imagine part of this

11:13.160 --> 11:17.000
is people are getting a snapshot of a conversation,

11:17.000 --> 11:19.080
essentially one side of a conversation,

11:19.080 --> 11:20.480
that is being responded to.

11:20.480 --> 11:22.560
And I wonder now you must be thinking

11:22.560 --> 11:24.720
it'd be good to get ahead of this for the next time.

11:24.720 --> 11:27.640
Yeah, it's going to be better when

11:27.640 --> 11:31.320
we have finalized the process and decided

11:31.320 --> 11:32.840
how we're going to do it.

11:32.840 --> 11:36.160
Then we can make it public and show that how

11:36.160 --> 11:38.320
the process actually works.

11:38.320 --> 11:41.960
I think there's going to be much more transparency

11:41.960 --> 11:45.440
with the project and the use of the donation funds.

11:45.440 --> 11:47.240
Yeah, I'm glad to see that.

11:47.240 --> 11:48.840
Whatever we can get to a sustainable place

11:48.840 --> 11:50.840
so the project is healthy, continues, and can actually

11:50.840 --> 11:52.320
use the resources that it has.

11:52.320 --> 11:54.440
That's what I think everyone in the community wants to see.

11:54.440 --> 11:55.920
So we'll have links in the show notes

11:55.920 --> 12:00.320
to the announcement and both sides of the discussion.

12:00.320 --> 12:03.960
Also, the item itself, you talk about transparency,

12:03.960 --> 12:06.760
to your credit, is on Open Collective.

12:06.760 --> 12:09.080
The expenses documented there.

12:09.080 --> 12:12.440
The process has been, I would say, somewhat transparent

12:12.440 --> 12:13.960
just in that regard.

12:13.960 --> 12:19.760
It seems like these situations, I've been on the side of,

12:19.760 --> 12:21.480
so somebody comes out and starts talking

12:21.480 --> 12:23.160
before something's supposed to be public,

12:23.160 --> 12:26.600
and they end up setting the narrative.

12:26.600 --> 12:29.880
And the language that they use sets

12:29.880 --> 12:32.760
the tone of the conversation that happens on Reddit

12:32.760 --> 12:37.240
and in Telegram groups and on IRC rooms and wherever else.

12:37.240 --> 12:41.320
And it then becomes the onus of the other party

12:41.320 --> 12:44.600
to either defend themselves or just remain silent,

12:44.600 --> 12:47.440
which is usually my trick.

12:47.440 --> 12:50.440
And that's a difficult position to respond from.

12:50.440 --> 12:54.040
So I really appreciate you guys willing to just come

12:54.040 --> 12:57.200
on the show and just answer any question I throw in your face

12:57.200 --> 12:59.680
and respond to it genuinely because I

12:59.680 --> 13:01.120
know you've probably been getting

13:01.120 --> 13:03.240
a lot of negative criticism.

13:03.240 --> 13:05.840
And I appreciate your transparency

13:05.840 --> 13:09.480
in just doing this part of this process.

13:09.480 --> 13:12.680
And when I said convoluted, I didn't mean it as an insult.

13:12.680 --> 13:14.360
I just meant when you're beginning

13:14.360 --> 13:16.040
and you're starting up as a project,

13:16.040 --> 13:17.840
you have an idea of how things will work,

13:17.840 --> 13:21.520
and you create a process and chains of command and whatnot

13:21.520 --> 13:25.720
that maybe a year or two into it or whatever it might be,

13:25.720 --> 13:27.600
you realize with hindsight, well, that structure

13:27.600 --> 13:28.600
doesn't really make sense.

13:28.600 --> 13:30.080
That's not really how this works.

13:30.080 --> 13:34.160
And so at some point, there has to be a change.

13:34.160 --> 13:36.960
And generally, it's some kind of event like this

13:36.960 --> 13:38.560
that forces that change.

13:38.560 --> 13:40.520
And sometimes people do get their feelings hurt.

13:40.520 --> 13:43.120
And it really sucks to be on that side of it.

13:43.120 --> 13:45.280
So I appreciate that position.

13:45.280 --> 13:47.040
And I appreciate you coming on the show, guys.

13:47.040 --> 13:49.120
And we'll keep an eye on the situation.

13:49.120 --> 13:50.360
And best of luck, Philipp.

13:50.360 --> 13:51.760
Is there anything else you want to chat,

13:51.760 --> 13:53.640
like any teases of future developments

13:53.640 --> 13:56.400
that you want to get out there or hardware sneak peeks?

13:56.400 --> 13:58.560
Well, we're working on several projects.

13:58.560 --> 14:02.880
So currently on the PinePhone, in winter,

14:02.880 --> 14:05.840
we might have our own community edition.

14:05.840 --> 14:10.400
Then a new mini PC with an Ryzen CPU will come.

14:10.400 --> 14:15.360
And of course, more Ryzen CPUs based laptops from Tuxedo

14:15.360 --> 14:17.360
and under and other partners.

14:17.360 --> 14:19.480
So how much is known about this mini PC?

14:19.480 --> 14:21.120
How much can we share that you and I've

14:21.120 --> 14:22.240
talked about this mini PC?

14:22.240 --> 14:24.400
Because that seems pretty exciting, is it?

14:24.400 --> 14:27.240
Is it pretty locked in as likely to happen?

14:27.240 --> 14:30.000
Well, we have a new partner in China

14:30.000 --> 14:33.720
and is one of the biggest manufacturers of mini PCs.

14:33.720 --> 14:37.720
We will sell it in Amazon, US, and EU

14:37.720 --> 14:40.400
and have it there when it's ready.

14:40.400 --> 14:42.280
So we will see.

14:42.280 --> 14:44.000
To recap, I'm really excited because this

14:44.000 --> 14:47.120
is a Ryzen-based system that's smaller

14:47.120 --> 14:50.480
than a Mac mini that has some really nice performance

14:50.480 --> 14:51.360
characteristics.

14:51.360 --> 14:54.520
And it's going to be available to buy on Amazon preloaded

14:54.520 --> 14:55.280
with Manjaro.

14:55.280 --> 14:56.520
That's so cool.

14:56.520 --> 14:57.480
That's a pretty big deal.

14:57.480 --> 14:58.480
Wow.

14:58.480 --> 15:00.680
I mean, here in the States, that's like, well, OK.

15:00.680 --> 15:01.560
That's a possibility.

15:01.560 --> 15:02.920
All of a sudden, it's like, hmm.

15:02.920 --> 15:04.360
I mean, I look at, we have a couple of machines

15:04.360 --> 15:06.800
in the studio here that are getting seriously old.

15:06.800 --> 15:08.800
Like, the recording machine actually

15:08.800 --> 15:10.600
had a hard drive problem over the weekend

15:10.600 --> 15:14.220
that I was able to recover and mark the blocks bad.

15:14.220 --> 15:16.520
But that's the beginning of the end.

15:16.520 --> 15:19.640
And I think, OK, it's time to replace this machine.

15:19.640 --> 15:22.420
Something like that that I could order on Amazon when

15:22.420 --> 15:25.400
the computer dies and I can have in a couple of days?

15:25.400 --> 15:26.320
Game changer.

15:26.320 --> 15:27.520
And it would fit nicely in the studio.

15:27.520 --> 15:29.060
We don't need a giant tower in here.

15:29.060 --> 15:29.560
No.

15:29.560 --> 15:32.080
It's something low profile we could have under the table.

15:32.080 --> 15:34.360
Anyways, again, thank you guys for joining us.

15:34.360 --> 15:36.240
And keep us posted on future developments,

15:36.240 --> 15:38.440
because it seems like there's a lot going on

15:38.440 --> 15:41.520
and some cool hardware in the works.

15:41.520 --> 15:42.680
So thank you very much.

15:42.680 --> 15:45.640
And I just, by the way, recently reloaded my workstation

15:45.640 --> 15:48.560
upstairs with Manjaro Gnome Edition.

15:48.560 --> 15:51.320
It had started as Manjaro XFCE.

15:51.320 --> 15:53.120
Then I switched over to Plasma.

15:53.120 --> 15:53.920
Of course you did.

15:53.920 --> 15:56.960
And then I switched over to Gnome Shell.

15:56.960 --> 16:00.280
And then over the weekend, because I was in here just

16:00.280 --> 16:03.600
like doing computer stuff, I was doing an update

16:03.600 --> 16:04.840
on my workstation.

16:04.840 --> 16:09.560
And I was doing it in retro CRT, because it's awesome.

16:09.560 --> 16:10.960
You just feel like a badass admin.

16:10.960 --> 16:13.840
And watching your packages go by on a cool retro CRT screen

16:13.840 --> 16:14.760
is great.

16:14.760 --> 16:18.080
During the actual installation of the packages,

16:18.080 --> 16:21.240
Gnome Shell crashed on me, dropped back

16:21.240 --> 16:24.640
to the login screen, killed my terminal session

16:24.640 --> 16:27.320
that was running the update.

16:27.320 --> 16:29.480
So I see I'm not even going to mess with it.

16:29.480 --> 16:33.920
I drop to the shell, do like the Control-Alt-F2 or whatever.

16:33.920 --> 16:35.800
I get on just the full screen shell.

16:35.800 --> 16:41.160
I log in, Pacman SYU, all packages up to date.

16:41.160 --> 16:44.160
No, they're not, because I was watching them install, right?

16:44.160 --> 16:47.840
So I do a Pacman clean cache, thinking like,

16:47.840 --> 16:51.320
just clean everything out, redownload all the packages.

16:51.320 --> 16:52.760
Let's just start over again.

16:52.760 --> 16:55.240
We're just going to hit Go again.

16:55.240 --> 16:56.480
Does the whole operation.

16:56.480 --> 16:58.120
Takes a minute cleaning stuff up.

16:58.120 --> 17:00.480
Do the Pacman SYU.

17:00.480 --> 17:02.120
No updates available.

17:02.120 --> 17:03.920
So now what do I do, right?

17:03.920 --> 17:05.960
Because I know it's not done.

17:05.960 --> 17:08.680
But Pacman's pretty convinced it's done.

17:08.680 --> 17:11.600
Switch to Fedora and DNF.

17:11.600 --> 17:14.320
It's funny you say that, because that legit,

17:14.320 --> 17:15.960
when I reached for the thumb drive,

17:15.960 --> 17:17.460
and I had the thumb drive in my hand,

17:17.460 --> 17:19.800
I'm like, what do I flash this with?

17:19.800 --> 17:22.360
And I thought, you know, DNF, this wouldn't have happened.

17:22.360 --> 17:24.920
But this is what I get for doing updates

17:24.920 --> 17:27.200
in a cool retro GPU accelerated terminal.

17:27.200 --> 17:29.560
Let's be honest, I should know better.

17:29.560 --> 17:32.440
So I can't 100% blame Pacman in this case.

17:32.440 --> 17:34.200
So I decided I got no other option.

17:34.200 --> 17:35.800
I've got to reboot.

17:35.800 --> 17:38.120
And sure enough, the system just does not come up.

17:38.120 --> 17:41.760
And I'm thinking, do I try to recover here?

17:41.760 --> 17:44.520
Do I just switch to Fedora?

17:44.520 --> 17:50.360
And I just decided, I don't want to do upgrades of distros.

17:50.360 --> 17:52.240
I just want to keep my packages up to date.

17:52.240 --> 17:53.880
I just want fresh packages.

17:53.880 --> 17:56.000
So I decided to stick with Manjaro again for a bit.

17:56.000 --> 17:59.400
Oh, and then honestly, this sounds really lazy of me,

17:59.400 --> 18:02.280
because flat packs and snaps are not hard.

18:02.280 --> 18:06.200
But I just kind of like having one package

18:06.200 --> 18:08.440
manager for everything.

18:08.440 --> 18:09.000
It is nice.

18:09.000 --> 18:10.560
I mean, it's just slightly simpler

18:10.560 --> 18:13.200
when you have such wide support in your package management.

18:13.200 --> 18:14.800
And there's a bunch of crap I got

18:14.800 --> 18:19.640
to install that's like Slack and Telegram.

18:19.640 --> 18:23.880
And now I even have a reason why I have to have Teams and Outlook.

18:23.880 --> 18:24.920
Well, I use the web app.

18:24.920 --> 18:26.200
But it's bad.

18:26.200 --> 18:27.660
It's getting to the point now where

18:27.660 --> 18:28.920
I have so many weird apps.

18:28.920 --> 18:30.280
Big old mess of software.

18:30.280 --> 18:33.200
I think it's more stuff that's outside the repo that's

18:33.200 --> 18:35.720
in the repo these days that I use on a regular basis.

18:35.720 --> 18:37.420
And so it's just nice to have one package.

18:37.420 --> 18:40.880
So I just went to GNOME Shell, Manjaro edition,

18:40.880 --> 18:41.800
and loaded it up there.

18:41.800 --> 18:43.440
And it's great.

18:43.440 --> 18:44.160
It's nice.

18:44.160 --> 18:44.720
Isn't that nice?

18:44.720 --> 18:46.280
I mean, if you had a traditional Archbox,

18:46.280 --> 18:48.400
you'd have to reinstall, which might take you a bit.

18:48.400 --> 18:49.320
But with Manjaro.

18:49.320 --> 18:51.120
Yeah, I still have to load a bunch of stuff.

18:51.120 --> 18:53.960
But I really don't mind the default configuration.

18:53.960 --> 18:55.640
I, of course, turn it into dark mode.

18:55.640 --> 18:56.680
Naturally.

18:56.680 --> 19:00.000
Although I'm starting to get a little done with dark mode.

19:00.000 --> 19:02.000
That's a topic for a future show.

19:02.000 --> 19:02.500
I know.

19:02.500 --> 19:03.000
I know.

19:03.000 --> 19:05.680
But when you go all in on dark mode for so long, it starts to.

19:05.680 --> 19:08.600
That's like your personal brand.

19:08.600 --> 19:09.600
Well, I'm still using it.

19:09.600 --> 19:12.360
As you can clearly see, everything in front of us

19:12.360 --> 19:14.120
is currently in dark mode.

19:14.120 --> 19:18.320
I thought that was going to be a new handle, dark mode Chris.

19:18.320 --> 19:19.360
The dark tipper.

19:19.360 --> 19:21.320
Anyways, so yeah, it's back up.

19:21.320 --> 19:22.200
It's a fresh install.

19:22.200 --> 19:23.360
It feels good.

19:23.360 --> 19:25.520
I do like doing that from time to time anyways.

19:25.520 --> 19:27.880
But it was funny to sit there with literally the thumb drive

19:27.880 --> 19:29.840
in my hand and go, hmm.

19:29.840 --> 19:31.240
It's a big moment of decision.

19:31.240 --> 19:32.280
All the power right there.

19:32.280 --> 19:33.480
And then I run through this.

19:33.480 --> 19:35.960
I would totally go to Fedora for DNF.

19:35.960 --> 19:37.360
And then I'm like, but then I have

19:37.360 --> 19:42.200
to install a dozen flat packs and all that kind of stuff.

19:42.200 --> 19:44.440
And it's just not that it's impossible.

19:44.440 --> 19:45.040
It's a lot.

19:45.040 --> 19:46.960
Sounds like you need a better FS underneath there

19:46.960 --> 19:47.920
for your snapshots.

19:47.920 --> 19:50.080
I did actually choose better FS this time

19:50.080 --> 19:52.320
through for my main partitions.

19:52.320 --> 19:56.320
I've never really done that with an arch install.

19:56.320 --> 19:58.280
So yeah, it's all better FS.

19:58.280 --> 19:59.760
It's all of the disks.

19:59.760 --> 20:01.760
And there's a lot of disks in that box.

20:01.760 --> 20:04.720
It's got like six attached disks.

20:04.720 --> 20:07.120
I'm looking forward to whatever updates we get down the road

20:07.120 --> 20:08.320
here in a couple of months.

20:08.320 --> 20:09.960
It's pretty great so far.

20:09.960 --> 20:11.080
I actually like it a lot.

20:11.080 --> 20:12.780
I like that you've built this strange machine that

20:12.780 --> 20:14.880
seems to just constantly be stress testing Linux.

20:14.880 --> 20:16.000
I know.

20:16.000 --> 20:18.240
It's a weird configuration, and you keep finding these fun

20:18.240 --> 20:18.720
little bugs.

20:18.720 --> 20:21.040
And then like a jerk, I just insist

20:21.040 --> 20:23.480
on having two vertical monitors, which

20:23.480 --> 20:25.800
I don't think any developer of Linux desktop

20:25.800 --> 20:28.880
has because it is always so wonky.

20:28.880 --> 20:31.280
Anyways, that's my update.

20:31.280 --> 20:33.240
It was one of those Sundays where

20:33.240 --> 20:35.640
I came in for the LUP lug predominantly

20:35.640 --> 20:37.520
because it happens every Sunday.

20:37.520 --> 20:38.440
Hey-o.

20:38.440 --> 20:41.360
So I came in a couple hours early and was like, well,

20:41.360 --> 20:43.640
I'll just bang out a couple of things real quick.

20:43.640 --> 20:47.040
And literally up until like two minutes after the LUP lug

20:47.040 --> 20:50.240
started, I was still fixing the various computer

20:50.240 --> 20:52.000
stuff around the studio.

20:52.000 --> 20:55.400
And then I hung out in the LUP lug for like, I don't know,

20:55.400 --> 20:57.200
two hours, hour 45.

20:57.200 --> 20:58.800
Once you start, it's hard to stop.

20:58.800 --> 20:59.300
It is.

20:59.300 --> 21:01.920
You get sucked in.

21:01.920 --> 21:02.640
All right.

21:02.640 --> 21:04.000
Well, let's do a little housekeeping real quick,

21:04.000 --> 21:05.880
and then we'll get the show back in gear

21:05.880 --> 21:08.360
because we do have a lot to get to still, big show.

21:08.360 --> 21:10.460
So really, really quick, I do just

21:10.460 --> 21:14.080
want to mention the LUP lug is on Sundays at noon Pacific.

21:14.080 --> 21:16.360
It's on our calendar at jupiterbroadcasting.com

21:16.360 --> 21:17.560
slash calendar.

21:17.560 --> 21:19.640
So you can just kind of get our live times.

21:19.640 --> 21:20.400
And you never know.

21:20.400 --> 21:22.000
There may be new live shows popping up

21:22.000 --> 21:23.000
on that calendar soon.

21:23.000 --> 21:25.440
So do check it from time to time.

21:25.440 --> 21:28.320
Also, you are welcome to join this show live.

21:28.320 --> 21:29.040
Please do.

21:29.040 --> 21:31.400
We do it Tuesdays at noon Pacific,

21:31.400 --> 21:33.520
which is 3 PM Eastern.

21:33.520 --> 21:35.000
You got any other time zones you just

21:35.000 --> 21:36.440
want to randomly throw out there?

21:36.440 --> 21:37.120
We should just pick.

21:37.120 --> 21:38.600
3 AM if you're in China.

21:38.600 --> 21:40.320
I don't know how you knew that.

21:40.320 --> 21:41.520
It's just so funny.

21:41.520 --> 21:43.440
And we'd love to have you join us if you can.

21:43.440 --> 21:45.040
And then you can participate in the mumble as well,

21:45.040 --> 21:48.400
or the chat room, or just watch however you like.

21:48.400 --> 21:50.960
And you can get all of that at jblive.tv.

21:50.960 --> 21:55.040
And we also have that full screen IRC.

21:55.040 --> 21:57.800
If you just want to jump in our chat room really easy,

21:57.800 --> 22:03.800
lazy style, go to bit.ly slash Jupiter chat.

22:03.800 --> 22:05.880
And that is all the housekeeping I have.

22:05.880 --> 22:07.080
Nice and tidy today.

22:07.080 --> 22:09.520
Quick and easy.

22:09.520 --> 22:11.600
All right, well, let's talk about ARM.

22:11.600 --> 22:13.880
Let's specifically talk about the past, the present,

22:13.880 --> 22:16.400
and the future of Linux on ARM.

22:16.400 --> 22:22.080
I think this is a little more convoluted than I expected.

22:22.080 --> 22:25.320
As we record this episode, convoluted is my word today.

22:25.320 --> 22:26.120
Did you notice that?

22:26.120 --> 22:26.620
Yeah, it is.

22:26.620 --> 22:28.800
As we record this episode, Intel has

22:28.800 --> 22:32.680
announced a major restructuring of the corporation.

22:32.680 --> 22:35.200
And they've also announced that they

22:35.200 --> 22:40.960
will be delaying, again, their 7 nanometer process, which

22:40.960 --> 22:44.020
is kind of embarrassing because they couldn't really

22:44.020 --> 22:46.440
get 10 nanometer down for more than a couple of lines.

22:46.440 --> 22:48.600
And so they were essentially punting that problem

22:48.600 --> 22:49.640
by going straight to 7.

22:49.640 --> 22:50.280
We'll have 7.

22:50.280 --> 22:51.320
We'll have 7.

22:51.320 --> 22:52.640
And now they can't hit 7.

22:52.640 --> 22:57.240
Meanwhile, TMC is ramping up for 5 nanometer production

22:57.240 --> 22:59.400
for the new Apple chips and some other ARM CPUs.

22:59.400 --> 23:00.940
Right, and of course, there's all the intricacies

23:00.940 --> 23:02.520
around what do those sizes really mean

23:02.520 --> 23:04.020
and the differences in the processes.

23:04.020 --> 23:07.480
But just continued failure on the Intel side

23:07.480 --> 23:09.440
is just a trend that they don't want to see

23:09.440 --> 23:11.080
and a lot of people aren't happy with.

23:11.080 --> 23:13.320
And the massive restructuring they've announced

23:13.320 --> 23:14.920
has people leaving the company.

23:14.920 --> 23:18.120
It has new people in charge of different operations.

23:18.120 --> 23:20.840
Intel is in a vulnerable position right now

23:20.840 --> 23:23.400
because while we won't talk about it a lot,

23:23.400 --> 23:25.480
there's also the AMD platform now

23:25.480 --> 23:27.960
and how competitive that has become.

23:27.960 --> 23:30.560
And we will talk about RISC-V in a little bit,

23:30.560 --> 23:32.440
but there's also that in the background

23:32.440 --> 23:36.640
as well as the open-power PC architecture which

23:36.640 --> 23:37.560
has actually picked up.

23:37.560 --> 23:40.120
So there's a lot of downward pressure

23:40.120 --> 23:43.200
on Intel combined with their own failures.

23:43.200 --> 23:45.840
And of course, this is all in the shadow

23:45.840 --> 23:48.920
of Apple announcing the switch of their entire Mac line

23:48.920 --> 23:52.480
over to ARM CPUs, which early benchmarks would

23:52.480 --> 23:55.980
seem to indicate are actually fairly impressive.

23:55.980 --> 23:58.560
And that's just their early dev kit stuff.

23:58.560 --> 24:01.260
So where does this leave Linux?

24:01.260 --> 24:02.480
And I think to appreciate it, you

24:02.480 --> 24:05.720
have to understand the history of ARM, which

24:05.720 --> 24:11.400
was founded in Cambridge, UK and was sold to SoftBank

24:11.400 --> 24:13.920
many years later, but we'll get to all that in a moment.

24:13.920 --> 24:19.800
The early days of ARM are actually kind of quaint.

24:19.800 --> 24:23.580
It started as the official Acorn RISC machine

24:23.580 --> 24:26.880
in October of 1983.

24:26.880 --> 24:29.960
That is a long time ago, especially in computer time.

24:29.960 --> 24:34.240
You think of the x86 platform as the old legacy platform

24:34.240 --> 24:37.560
because it's from the 80s.

24:37.560 --> 24:40.560
But yeah, it started as the Acorn RISC machine in 83.

24:40.560 --> 24:42.440
But the first samples of ARM silicon

24:42.440 --> 24:45.080
that worked properly when received by a customer.

24:45.080 --> 24:45.840
Who wants that?

24:45.840 --> 24:46.920
I know.

24:46.920 --> 24:50.380
April 26, 1985.

24:50.380 --> 24:52.800
And there's a post from 1988 where

24:52.800 --> 24:55.240
some people are talking about getting the machine working.

24:55.240 --> 24:57.560
It's such a trip to go back to 1988

24:57.560 --> 25:01.240
and read what I think was probably an old Usenet post

25:01.240 --> 25:03.080
that has been saved by Google Groups.

25:03.080 --> 25:06.040
The first ARM application was really

25:06.040 --> 25:09.000
like a second tier processor inside a BBC Micro, where

25:09.000 --> 25:10.880
it helped with simulation software

25:10.880 --> 25:12.600
to finish development of other chips

25:12.600 --> 25:15.040
and also sped up CAD designs.

25:15.040 --> 25:16.880
That's a trend you see to this day,

25:16.880 --> 25:18.840
just little helpful ARM CPUs on board.

25:18.840 --> 25:21.880
And an interesting little historical anecdote here

25:21.880 --> 25:26.880
is in the late 80s, Apple and VLSI technology

25:26.880 --> 25:30.560
started working with Acorn on a newer version of what

25:30.560 --> 25:32.000
became the ARM Core.

25:32.000 --> 25:34.680
And in 1990, Acorn spun off that design team

25:34.680 --> 25:38.760
into a company named Advanced RISC Machines Limited,

25:38.760 --> 25:41.840
which became obviously the ARM Holdings parent company

25:41.840 --> 25:44.760
eventually, which then eventually sold to SoftBank.

25:44.760 --> 25:46.900
The new Apple ARM work eventually

25:46.900 --> 25:51.800
evolved into the ARM6 platform, which was released in 1992.

25:51.800 --> 25:56.560
And Apple used the ARM6-based ARM610 CPU

25:56.560 --> 25:59.880
and system on a chip as a basis for the Newton.

25:59.880 --> 26:00.480
Wow.

26:00.480 --> 26:02.640
It's like a weird parallel history here.

26:02.640 --> 26:03.480
Yeah.

26:03.480 --> 26:04.560
The first time around.

26:04.560 --> 26:05.940
If the Newton had been successful,

26:05.940 --> 26:07.280
they may have stuck with it.

26:07.280 --> 26:10.160
But what I think most people probably are aware of,

26:10.160 --> 26:12.000
but maybe don't fully appreciate about ARM,

26:12.000 --> 26:14.840
is it's really a set of specs and licenses

26:14.840 --> 26:17.120
that ARM Holdings and now SoftBank,

26:17.120 --> 26:19.000
and potentially maybe one day Nvidia,

26:19.000 --> 26:22.120
who's looking to buy them now, sell.

26:22.120 --> 26:26.600
And that really became the business for them in 1994,

26:26.600 --> 26:30.400
when they had that proven CPU that worked in the Newton

26:30.400 --> 26:32.320
at 233 megahertz.

26:32.320 --> 26:33.960
They could sell a slightly faster one

26:33.960 --> 26:36.440
to customers as a license.

26:36.440 --> 26:38.080
They do actually sell chips, too.

26:38.080 --> 26:39.720
That actually is something that they do.

26:39.720 --> 26:42.100
But licensing is really what picked up for them

26:42.100 --> 26:44.120
as a business in 1994.

26:44.120 --> 26:46.220
And now you see all these different vendors out there

26:46.220 --> 26:48.640
that have an implementation of ARM.

26:48.640 --> 26:51.480
As far as Linux is concerned, really,

26:51.480 --> 26:54.920
ARM came to the masses via Debian 2.2, which was released

26:54.920 --> 26:58.160
on August 15, 2000.

26:58.160 --> 27:01.680
ARM for Arch, or Arch Linux on ARM,

27:01.680 --> 27:05.000
came out in March 11, 2002.

27:05.000 --> 27:07.600
Wow, that is way earlier than I would have expected.

27:07.600 --> 27:09.880
Yeah, and then you see just a lot of development

27:09.880 --> 27:12.840
across a lot of different Linux distros from there.

27:12.840 --> 27:15.800
That isn't necessarily the first time Linux developers

27:15.800 --> 27:17.680
had their hands on ARM boxes.

27:17.680 --> 27:20.560
I can find interviews with Linux developers going back

27:20.560 --> 27:25.000
to 1994, where they had custom builds of early Linux kernels

27:25.000 --> 27:26.720
that were working on ARM.

27:26.720 --> 27:29.040
But as far as a mainstream distro,

27:29.040 --> 27:32.500
it appears to be Debian 2.2, which is pretty cool.

27:32.500 --> 27:33.520
That is really neat.

27:33.520 --> 27:35.640
It's been a long time now since 2000.

27:35.640 --> 27:37.840
Here we are, and we're still kind of working it out.

27:37.840 --> 27:39.000
20 years later.

27:39.000 --> 27:40.200
We've covered three decades.

27:40.200 --> 27:41.800
Now there's two more since.

27:41.800 --> 27:42.320
Wow.

27:42.320 --> 27:43.500
Yeah, yeah, how about that?

27:43.500 --> 27:48.120
By 2005, 98% of all mobile phones

27:48.120 --> 27:51.480
had at least one type of ARM processor in them, 98%.

27:51.480 --> 27:55.760
By 2010, producers of chips based on ARM architectures

27:55.760 --> 28:00.320
reported shipments of 6.1 billion ARM-based processors,

28:00.320 --> 28:04.280
which is 95% of all smartphones, 35%

28:04.280 --> 28:09.480
of all digital televisions, and 10% of all mobile computers.

28:09.480 --> 28:10.540
How about that?

28:10.540 --> 28:13.000
Yeah, and since then, they've kind of gone everywhere, right?

28:13.000 --> 28:15.720
What device sitting around you doesn't have an ARM chip in it?

28:15.720 --> 28:17.880
And of course, one of our favorite little projects,

28:17.880 --> 28:22.400
the Raspberry Pi Model B, was released in February 2012,

28:22.400 --> 28:25.640
followed by a simpler and cheaper Model A later on.

28:25.640 --> 28:27.960
So that's when the Raspberry Pi came to the masses.

28:27.960 --> 28:30.960
And then things kind of took a whole new development track.

28:30.960 --> 28:33.560
At this point, 2020, we've had so many different vendors

28:33.560 --> 28:37.080
of ARM systems that you can't just say ARM

28:37.080 --> 28:39.160
and mean you could just take this image

28:39.160 --> 28:40.220
and run it on anything.

28:40.220 --> 28:41.880
Right, that's been one of the big problems.

28:41.880 --> 28:43.720
But the Pi really did sort of pave the way

28:43.720 --> 28:48.280
for the concept of a super cheap board that students,

28:48.280 --> 28:51.560
enthusiasts, integrators could buy.

28:51.560 --> 28:53.640
Right, it was actually an end-user platform

28:53.640 --> 28:55.520
instead of something that you would take as an integrator

28:55.520 --> 28:57.160
to build into your own product.

28:57.160 --> 29:01.680
Here I am now running it as even a server for home use.

29:01.680 --> 29:02.180
That was it.

29:02.180 --> 29:04.720
It's a general-use platform, or almost.

29:04.720 --> 29:06.260
A lot like Linux.

29:06.260 --> 29:08.600
And it really just took things to the next level.

29:08.600 --> 29:11.720
And Cheesy and I were chatting about this last night

29:11.720 --> 29:13.820
and about just sort of how now we've

29:13.820 --> 29:16.280
sort of set the stage for a whole new generation

29:16.280 --> 29:18.560
of devices that really span the range

29:18.560 --> 29:19.840
of different capabilities.

29:19.840 --> 29:23.440
My only other forte really into Linux and ARM,

29:23.440 --> 29:28.040
aside from the Raspberry Pi, were the WRT-54G routers

29:28.040 --> 29:31.960
back in the day, flashing those with DDWRT, or Tomato,

29:31.960 --> 29:35.120
or Letty, or one of those others.

29:35.120 --> 29:36.760
But one thing that I find really cool,

29:36.760 --> 29:38.480
specifically about the Raspberry Pi

29:38.480 --> 29:41.960
and how it enabled a lot of us Linux users

29:41.960 --> 29:43.600
to get something, an inexpensive board

29:43.600 --> 29:46.720
that we could tinker with, I think what that's doing now

29:46.720 --> 29:49.920
is it's opening doors for a lot of us

29:49.920 --> 29:54.080
to really become more maker-oriented as well.

29:54.080 --> 29:55.840
Because along with the Raspberry Pi,

29:55.840 --> 30:02.160
you've got GPIO, DSI now, SPI, I2C.

30:02.160 --> 30:04.520
So you've got a way to really attach

30:04.520 --> 30:08.160
a bunch of different elements onto this machine

30:08.160 --> 30:09.800
and really do something, I think,

30:09.800 --> 30:14.160
that we haven't been able to do with Linux

30:14.160 --> 30:17.260
and our general desktops for quite a while.

30:17.260 --> 30:19.640
There's just a ton of boards out there now, right?

30:19.640 --> 30:22.140
So I mean, since the Raspberry Pi,

30:22.140 --> 30:24.000
you've had everybody kind of come on board.

30:24.000 --> 30:27.600
Obviously, one of my favorites is Pine64.

30:27.600 --> 30:30.600
They tend to be mainly RockChip.

30:30.600 --> 30:32.600
They were founded by TL Lim, the same guy

30:32.600 --> 30:35.800
that did the Popcorn Hour series of media players,

30:35.800 --> 30:38.720
which back in the day, again, like Chris had mentioned,

30:38.720 --> 30:41.600
a lot of your set-top boxes and stuff like that

30:41.600 --> 30:44.280
have ARM chips in them, and still to this day, they do.

30:44.280 --> 30:46.800
BeagleBone, I think, needs a mention.

30:46.800 --> 30:50.160
The Asus Tinker Board, the Onion Omega 2,

30:50.160 --> 30:52.760
the Libre Computer, I mean, there's just tons.

30:52.760 --> 30:54.420
Like, the market has really exploded.

30:54.420 --> 30:58.040
So there's no reason that you can't get

30:58.040 --> 31:01.720
into one of these ARM boards and work on it,

31:01.720 --> 31:04.240
develop for it, tinker with it.

31:04.240 --> 31:09.080
And I suspect that now we're going to, we already have,

31:09.080 --> 31:13.560
but even more so, we're going to venture into ARM CPUs

31:13.560 --> 31:18.560
in data centers, like AWS's new Graviton.

31:18.760 --> 31:20.660
I think you're gonna see more complete products, too.

31:20.660 --> 31:22.640
Like, look at the PineBook Pro.

31:22.640 --> 31:25.480
That is sort of bringing together so much stuff

31:25.480 --> 31:29.520
that we have been seeing develop over the last 20, 30 years.

31:29.520 --> 31:33.120
And it's a genuine product that by version two or three,

31:33.120 --> 31:36.080
I'm gonna be recommending to just about everybody I know.

31:36.080 --> 31:38.920
It's great because I think, in a way,

31:38.920 --> 31:41.020
it showed me that this really,

31:41.020 --> 31:42.580
there really is something to it.

31:42.580 --> 31:44.280
I don't know if it's for all tasks,

31:44.280 --> 31:46.760
but there really is something to Linux on ARM.

31:46.760 --> 31:49.400
And I know you've had a chance to kind of like,

31:49.400 --> 31:51.760
actually open the thing up and take a look at it

31:51.760 --> 31:54.880
from more of like, modifying the hardware standpoint.

31:54.880 --> 31:57.040
Did it hold up to that process?

31:57.040 --> 31:59.320
I purchased the original PineBook

31:59.320 --> 32:02.840
that had the ISO keyboard.

32:02.840 --> 32:04.000
So I switched it over to ANC.

32:04.000 --> 32:06.240
I bought the top case, which was super inexpensive.

32:06.240 --> 32:08.940
I think it was like 15 bucks or something.

32:08.940 --> 32:10.800
But doing so meant that essentially,

32:10.800 --> 32:13.560
you had to disassemble the entire laptop

32:13.560 --> 32:14.640
aside from the screen.

32:14.640 --> 32:15.980
Oh, go figure.

32:15.980 --> 32:18.360
So once I disassembled the laptop,

32:18.360 --> 32:20.160
you know, it was super easy getting into it.

32:20.160 --> 32:25.160
I would say maybe 25 screws, maybe 25 screws completely.

32:26.720 --> 32:30.240
And as you open it up, I mean, really the largest portion

32:30.240 --> 32:33.280
of the inside of that laptop is the battery,

32:33.280 --> 32:35.060
like a lot of laptops these days.

32:35.060 --> 32:39.500
But the motherboard, for lack of better terms,

32:39.500 --> 32:43.600
is a quarter or a third the size.

32:43.600 --> 32:45.640
Is there room for more battery in there, do you think?

32:45.640 --> 32:46.760
I would say no.

32:46.760 --> 32:48.520
I would say there's no room for an extra battery.

32:48.520 --> 32:50.100
I did add the NVMe adapter.

32:50.100 --> 32:53.040
I haven't popped in an NVMe drive yet,

32:53.040 --> 32:54.640
because I still think there's some issues

32:54.640 --> 32:58.520
with U-Boot and booting directly to the NVMe drive.

32:58.520 --> 33:00.800
You could leave the eMMC in there to boot off of, right?

33:00.800 --> 33:02.680
Right, and so that's the idea, right,

33:02.680 --> 33:05.400
is you could boot off of that and then throw it to the NVMe.

33:05.400 --> 33:06.600
And that's totally worth it, dude.

33:06.600 --> 33:08.640
That would haul, that'd be awesome.

33:08.640 --> 33:11.280
Yeah, I mean, I think that's when you would start

33:11.280 --> 33:13.840
to see the limitations of the hardware itself, right,

33:13.840 --> 33:16.480
as compared to the current eMMC that it uses.

33:16.480 --> 33:17.620
Yeah.

33:17.620 --> 33:20.200
Why don't we talk about the future a little bit?

33:20.200 --> 33:21.880
Stay awhile and listen.

33:21.880 --> 33:24.200
And Dalton from the Ubiports Project

33:24.200 --> 33:27.200
is joining us to chat a little bit about,

33:27.200 --> 33:29.520
I wanted to really kind of get a handle, Dalton,

33:29.520 --> 33:34.140
on what some of the challenges are for the ARM platform,

33:34.140 --> 33:35.120
kind of going forward,

33:35.120 --> 33:37.640
what some of the significant barriers still are.

33:37.640 --> 33:39.980
I alluded to like all of the different hardware versions

33:39.980 --> 33:42.560
and whatnot, but I know you've kind of probably

33:42.560 --> 33:44.060
gotten a pretty close look at this

33:44.060 --> 33:45.520
being part of the Ubiports Project.

33:45.520 --> 33:46.900
I would imagine a bit.

33:46.900 --> 33:48.320
Yeah, for sure.

33:48.320 --> 33:51.040
So one of the things about ARM

33:51.040 --> 33:53.920
and what makes it complicated to develop on

33:53.920 --> 33:57.520
is that ARM products are designed to be this vertically

33:57.520 --> 34:00.080
integrated full stack thing.

34:00.080 --> 34:02.920
You know, most phones that are out today,

34:02.920 --> 34:07.840
you have Samsung who buys their chips from Qualcomm.

34:07.840 --> 34:10.880
Qualcomm gives them this blessed version of Linux

34:10.880 --> 34:13.800
that works on that Qualcomm chip,

34:13.800 --> 34:16.760
and then Samsung takes it and makes their product out of it.

34:16.760 --> 34:18.840
And it's not like the mainline Linux,

34:18.840 --> 34:21.320
and it's not like any Linux distribution,

34:21.320 --> 34:24.880
it's Samsung's, well in most cases, Android

34:24.880 --> 34:28.320
that's going to run on that hardware device eventually.

34:28.320 --> 34:30.560
And that makes things more difficult

34:30.560 --> 34:33.240
when we are a third-party software vendor.

34:33.240 --> 34:34.080
Sure.

34:34.080 --> 34:37.040
What we expect and what a lot of our users expect

34:37.040 --> 34:41.160
is the horizontal platform that x86 has become,

34:41.160 --> 34:45.040
where you take Ubuntu, period,

34:45.040 --> 34:49.240
and you boot that on whatever computer you want to.

34:49.240 --> 34:51.440
You can boot it on my Dell XPS,

34:51.440 --> 34:53.800
my Ryzen 7 workstation downstairs,

34:53.800 --> 34:57.640
all the way back to some Core 2 Duo machine from 2008.

34:57.640 --> 35:00.680
Where we're going now is people are seeing,

35:00.680 --> 35:03.120
especially server vendors,

35:03.120 --> 35:06.440
don't want to be that vertical integrator.

35:06.440 --> 35:08.880
Dell doesn't want to make, well, maybe they do,

35:08.880 --> 35:12.440
but Dell probably doesn't want to make Dell Linux

35:12.440 --> 35:15.600
for the Dell EMC server platform, right?

35:15.600 --> 35:16.800
Right, and they're selling to customers

35:16.800 --> 35:19.160
who sort of expect this plug and play, just,

35:19.160 --> 35:20.600
they're going to put on their own operating system

35:20.600 --> 35:22.040
and configure it afterwards.

35:22.040 --> 35:24.800
They're going to want to put Ubuntu on the server

35:24.800 --> 35:26.480
for lack of a better option.

35:26.480 --> 35:28.000
And I think that's kind of where we come

35:28.000 --> 35:31.120
into ARM Server Ready,

35:31.120 --> 35:32.800
which is a set of technologies,

35:32.800 --> 35:37.400
a specification and a certification by ARM Holdings.

35:37.400 --> 35:38.360
So this is really cool.

35:38.360 --> 35:39.520
I didn't know about this Dalton

35:39.520 --> 35:42.680
until you educated me on it.

35:42.680 --> 35:46.840
And as luck would have it on July 20th of this year,

35:46.840 --> 35:49.560
a VMware developer who works in the bootloader area

35:49.560 --> 35:53.240
for the ARM platform held a video stream

35:53.240 --> 35:54.640
about Server Ready.

35:54.640 --> 35:55.960
We'll have a link to that in the show notes,

35:55.960 --> 35:57.120
but you guys know me.

35:57.120 --> 35:58.840
I grabbed you a couple of essential clips

35:58.840 --> 36:01.720
and here's his definition of Server Ready.

36:01.720 --> 36:05.560
Server Ready is about making boring infrastructure.

36:05.560 --> 36:08.600
Boring in a sense where I can buy an HPE

36:08.600 --> 36:10.560
or Dell server today,

36:10.560 --> 36:12.320
and I don't have to ask myself

36:12.320 --> 36:14.080
whether it will run an operating system

36:14.080 --> 36:16.040
that can also run on my laptop.

36:16.040 --> 36:18.200
So that's kind of the definition of boring.

36:18.200 --> 36:21.880
Boring means that I don't have to retrain my IT staff.

36:21.880 --> 36:25.640
Boring means that you don't need any new skill sets

36:25.640 --> 36:30.640
in OEMs or ODMs to design platform solutions around chips.

36:31.120 --> 36:33.960
Boring means that software developers

36:35.400 --> 36:38.240
can continue doing what it is they do best,

36:38.240 --> 36:39.480
and they don't have to completely

36:39.480 --> 36:42.800
kind of change the worldview.

36:42.800 --> 36:45.320
So Server Ready seems like it could have some potential

36:45.320 --> 36:47.440
if it's implemented correctly.

36:47.440 --> 36:49.440
Neil, I wanted to give you a chance to jump in

36:49.440 --> 36:50.760
on that particular topic,

36:50.760 --> 36:51.960
because I know you have thoughts.

36:51.960 --> 36:54.720
This isn't worth the paper it was printed on.

36:54.720 --> 36:57.440
Server Ready certification boils down into two parts.

36:57.440 --> 37:01.240
The first part is implementing a ARM-based system

37:01.240 --> 37:05.200
that follows the Server-based system architecture, or SBSA.

37:05.200 --> 37:09.080
And this essentially mandates that it should behave

37:09.080 --> 37:13.680
somewhat similarly to how modern x86 machines do

37:13.680 --> 37:17.880
with UEFI exposing an ACPI-like interface,

37:17.880 --> 37:19.520
all these sorts of things like that,

37:19.520 --> 37:23.080
like PCIe support is actually like specified in there.

37:23.080 --> 37:25.200
That is fine and dandy.

37:25.200 --> 37:27.880
You're not really going to see

37:27.880 --> 37:31.160
anything that's in an approachable price range

37:31.160 --> 37:32.880
supporting SBSA.

37:32.880 --> 37:35.560
So where you're typically gonna see this is

37:35.560 --> 37:38.560
in rack mount servers and stuff like that.

37:38.560 --> 37:40.680
So the developer from VMware,

37:40.680 --> 37:42.560
he addresses, because he agrees,

37:42.560 --> 37:45.000
the issue right now is that it's for very high cost systems,

37:45.000 --> 37:46.520
server grade systems,

37:46.520 --> 37:49.000
but he makes the case, and I'll play his clip,

37:49.000 --> 37:51.320
that for the developers that are gonna be

37:51.320 --> 37:55.040
writing applications for these future high-end ARM servers,

37:55.040 --> 37:58.440
they need something within their comfort level

37:58.440 --> 37:59.320
to develop on.

37:59.320 --> 38:02.720
But I'll play it and then, Neil, I'll let you respond.

38:02.720 --> 38:05.360
There are folks in the audience who don't care about IoT,

38:05.360 --> 38:07.200
don't care about small board computers,

38:07.200 --> 38:10.720
and might actually not really like the Raspberry Pi.

38:11.800 --> 38:13.720
Why would any of you care?

38:13.720 --> 38:17.520
Well, because there are no good client platforms today

38:17.520 --> 38:20.280
to build a good mass of developers.

38:20.280 --> 38:23.240
If I want folks to build from my Xeon E7,

38:23.240 --> 38:25.240
they can do it on a $200 laptop.

38:26.160 --> 38:29.280
If I want something to build for a Thunder X3,

38:29.280 --> 38:30.480
whenever that comes out,

38:32.040 --> 38:33.480
what am I gonna use?

38:33.480 --> 38:35.560
And I think some of the pressure here will be that

38:35.560 --> 38:38.040
cloud providers will offer a discounted rate,

38:38.040 --> 38:39.720
well, like Amazon already does,

38:39.720 --> 38:41.480
if you run on their ARM system.

38:41.480 --> 38:43.600
The problem with this is, quite frankly,

38:43.600 --> 38:45.040
you're not gonna see anything

38:45.040 --> 38:48.160
that isn't vertically integrated for this space either.

38:48.160 --> 38:50.400
So let's talk about, for example, Apple,

38:50.400 --> 38:52.800
which is the silver elephant in the room.

38:52.800 --> 38:55.640
They will follow SBSA

38:55.640 --> 38:58.160
because that is how they're going to design it.

38:58.160 --> 39:00.400
However, it doesn't matter.

39:00.400 --> 39:03.160
You are not gonna be able to take advantage of it.

39:03.160 --> 39:07.440
They do SBSA not because it makes things easier for you

39:07.440 --> 39:09.160
as a developer or consumer,

39:09.160 --> 39:10.880
but it makes it easier for them

39:10.880 --> 39:15.880
to transition the macOS platform from X86 to ARM

39:16.600 --> 39:19.320
without having to retool the plumbing layers

39:19.320 --> 39:21.720
because the plumbing layers will behave the same.

39:21.720 --> 39:25.040
For some context, Jeremy from System76 is here,

39:25.040 --> 39:29.240
and I also emailed Carl, the CEO of System76,

39:29.240 --> 39:31.480
and I said, just your personal thoughts,

39:31.480 --> 39:33.760
not like a company position, but your personal thoughts

39:33.760 --> 39:36.320
on ARM because Carl thinks a lot about this stuff.

39:36.320 --> 39:39.320
And by the way, great brunch with Brent.

39:39.320 --> 39:41.280
So go check out brunch with Brent.

39:41.280 --> 39:42.680
That's well worth listening.

39:42.680 --> 39:46.560
Carl got me thinking about how I view choice in Linux

39:46.560 --> 39:49.360
and how it's the true competitive strength.

39:49.360 --> 39:50.200
It's a good chat.

39:50.200 --> 39:51.640
But I asked him about ARM,

39:51.640 --> 39:54.680
and he said that he doesn't really find it very exciting.

39:54.680 --> 39:57.880
He said device-specific OS images are pain,

39:57.880 --> 39:59.680
hard, and limit hackability,

39:59.680 --> 40:02.360
especially without good documentation.

40:02.360 --> 40:04.440
The architecture he thinks makes sense

40:04.440 --> 40:06.960
for a lock-in device maker like Apple.

40:06.960 --> 40:09.880
I like that term, lock-in device maker.

40:10.840 --> 40:12.640
Remember that one for me, okay, Wes?

40:14.240 --> 40:16.640
I know it's sourcing my memory to you on that.

40:16.640 --> 40:19.040
He says, so for like a company like Apple

40:19.040 --> 40:21.720
or perhaps an entry-level performance machine,

40:21.720 --> 40:25.160
but System76 cares about performance hackability

40:25.160 --> 40:27.920
and users easily running whatever they want.

40:27.920 --> 40:29.440
So that's kind of how I think about it.

40:29.440 --> 40:30.920
Now, of course, that's a great position for him to take,

40:30.920 --> 40:33.360
but that's, as an end user, how I think about it.

40:33.360 --> 40:34.200
I mean, it's your device.

40:34.200 --> 40:35.040
You want to do stuff with it.

40:35.040 --> 40:35.880
That's it.

40:35.880 --> 40:39.440
He says, I am excited to see where RISC-V goes, though.

40:39.440 --> 40:40.520
We'll talk about that in a moment,

40:40.520 --> 40:42.840
but Jeremy, I saw you tweeting recently

40:42.840 --> 40:46.120
about moving some fancy stuff over to ARM machines possibly,

40:46.120 --> 40:48.320
and I'm just curious about your thoughts on this.

40:48.320 --> 40:50.080
Yeah, so I agree with Carl,

40:50.080 --> 40:54.800
and I think what Neil has said is completely correct.

40:54.800 --> 40:58.840
What we want to see as Linux users and Linux developers,

40:58.840 --> 41:02.200
we really want to see the high-performance chips

41:02.200 --> 41:03.960
run mainline Linux.

41:03.960 --> 41:06.360
We want to see something like the Huawei trips

41:06.360 --> 41:08.200
or the Qualcomm chips that are being used

41:08.200 --> 41:10.200
in top-of-the-line mobile phones

41:10.200 --> 41:12.640
that are able to do 4K video from YouTube,

41:12.640 --> 41:15.680
which the Pinebook Pro can't right now,

41:15.680 --> 41:17.920
and we're simply not seeing that.

41:17.920 --> 41:19.640
Apple and what they're going to have,

41:19.640 --> 41:22.480
that is not going to run desktop Linux.

41:22.480 --> 41:25.720
So for us who are outside of the server space

41:25.720 --> 41:28.200
and the developers who really want to have a platform

41:28.200 --> 41:31.400
like you get from an x86 laptop,

41:31.400 --> 41:33.800
there was some hope.

41:33.800 --> 41:37.920
There was some hope when Windows was pushing Windows on ARM

41:37.920 --> 41:41.400
because things would have been more like PC

41:41.400 --> 41:43.840
on those ARM platforms.

41:43.840 --> 41:46.520
Now, unfortunately, they had mandatory secure boot,

41:46.520 --> 41:49.120
but that's something that can be worked around.

41:49.120 --> 41:52.360
Microsoft does sign other distributions,

41:52.360 --> 41:55.640
but I think we're kind of doomed

41:55.640 --> 41:57.280
with the way ARM is right now

41:57.280 --> 42:01.280
because ARM Holdings prefers

42:01.280 --> 42:04.360
that they have value add being done

42:04.360 --> 42:06.680
by every single SOC vendor.

42:06.680 --> 42:08.880
So they will produce the minimal,

42:08.880 --> 42:12.520
absolute minimal instruction set,

42:12.520 --> 42:14.640
and then the SOC vendor will add a whole bunch

42:14.640 --> 42:17.600
of memory addresses and memory map devices

42:17.600 --> 42:20.120
to do things like acceleration.

42:20.120 --> 42:22.680
And those accelerations are, in many cases,

42:22.680 --> 42:25.600
important to running a desktop operating system.

42:25.600 --> 42:28.400
So having support for that means,

42:28.400 --> 42:31.520
often you have to run a specific kernel

42:31.520 --> 42:33.440
for that specific device,

42:33.440 --> 42:35.880
which is what we see in the Android space.

42:35.880 --> 42:40.880
So my hope is that RISC-V doesn't run down the same path.

42:41.680 --> 42:45.760
And I'm really hoping that there is a general purpose,

42:45.760 --> 42:47.800
very well-defined thing,

42:47.800 --> 42:50.440
such as what we have in the x86 world,

42:50.440 --> 42:55.440
which is we have ACPI, we have UEFI, we have PCI,

42:55.440 --> 42:59.640
and these standards allow you to do hardware discovery

42:59.640 --> 43:01.400
in a very generic way.

43:01.400 --> 43:04.720
Yeah, that really speaks true to me.

43:04.720 --> 43:07.240
The fundamental just nature of the way

43:07.240 --> 43:10.120
these CPUs are designed and the value add

43:10.120 --> 43:11.920
that's created by the parties involved,

43:11.920 --> 43:14.760
it fundamentally means they're always gonna have

43:14.760 --> 43:16.160
unique properties.

43:16.160 --> 43:18.640
So I kind of look at this, though,

43:18.640 --> 43:21.720
acknowledging all of that in a perspective of

43:21.720 --> 43:24.800
things do change, and imagine a world, Dalton,

43:24.800 --> 43:29.120
where Nvidia buys the ARM holdings from SoftBank,

43:29.120 --> 43:32.000
which is the current rumor that's being reported on,

43:32.000 --> 43:34.480
and structures change a little bit.

43:34.480 --> 43:38.360
Apple releases extremely successful ARM-based MacBooks,

43:38.360 --> 43:40.760
at least from a performance standpoint,

43:40.760 --> 43:44.600
and Windows OEMs, like they have historically now

43:44.600 --> 43:49.600
for 30 years, follow suit and release high-end HP

43:49.600 --> 43:54.600
and Dell laptops that are based on ARM running Windows.

43:55.520 --> 43:58.160
In this scenario, with Server Ready,

43:58.160 --> 44:01.480
you could see just that market pressure

44:01.480 --> 44:04.040
creating more adoption, combined with the fact

44:04.040 --> 44:07.300
that it's kind of close on the Raspberry Pi 4 right now.

44:07.300 --> 44:08.340
What are your thoughts?

44:08.340 --> 44:09.920
Yeah, that's absolutely correct.

44:09.920 --> 44:13.380
And as the talk that you'll link to kind of goes into,

44:13.380 --> 44:17.400
there have been Qualcomm ARM laptops

44:17.400 --> 44:22.400
and mobile processors, or mobile devices,

44:22.400 --> 44:27.240
that use a variation of ACPI or something similar to it.

44:27.240 --> 44:30.360
But at the moment, they only run custom

44:30.360 --> 44:33.440
Windows on Snapdragon images.

44:33.440 --> 44:37.440
But I see that going in the direction that we want,

44:37.440 --> 44:42.440
where devices that ship with Windows on ARM

44:42.480 --> 44:46.080
can boot enough, just out of the box,

44:46.080 --> 44:48.600
to say, I have all of this hardware,

44:48.600 --> 44:50.880
Linux, please look for your drivers

44:50.880 --> 44:52.360
for all of this hardware.

44:52.360 --> 44:55.720
I mean, we want the ARM vendors to be putting

44:55.720 --> 44:58.280
all those drivers in the kernel too,

44:58.280 --> 45:00.640
but it'd also just be nice if we could know

45:00.640 --> 45:03.320
that we need those drivers to be available

45:03.320 --> 45:04.720
in order to use the hardware

45:04.720 --> 45:06.840
that we're currently booting Linux on.

45:06.840 --> 45:07.920
No kidding.

45:07.920 --> 45:11.440
So I see a future where these fundamental problems

45:11.440 --> 45:14.800
that Neil and Jeremy have touched on are not solved,

45:14.800 --> 45:17.600
because it's sort of now, 30 years in,

45:17.600 --> 45:18.960
it's what the platform is.

45:18.960 --> 45:20.360
Right, and someone has to pay for it.

45:20.360 --> 45:21.360
Yeah, exactly.

45:21.360 --> 45:22.200
As Neil said.

45:22.200 --> 45:25.960
And I think, ultimately, you could see a moderation of it

45:25.960 --> 45:29.520
if there is enough competitive pressure brought by RISC

45:29.520 --> 45:33.060
or PowerPC, you know, I mean, a man can dream.

45:34.360 --> 45:36.480
But I don't think it's ever gonna be fully solved

45:36.480 --> 45:39.440
in the ARM ecosystem, which is why I kind of fall down

45:39.440 --> 45:41.520
with Jeremy and Carl and Neil and sort of saying,

45:41.520 --> 45:44.860
we really kind of need a different solution.

45:44.860 --> 45:47.480
But what I like about what Dalton is touching on here

45:47.480 --> 45:51.040
is that doesn't mean the ARM ecosystem goes away.

45:51.040 --> 45:53.120
That's never gonna happen now at this point.

45:53.120 --> 45:55.560
And so if there is something we can do

45:55.560 --> 45:57.000
to apply some kind of pressure,

45:57.000 --> 46:01.560
some sort of at least standards that we can expect,

46:01.560 --> 46:03.360
it would make life so much easier

46:03.360 --> 46:05.680
for Linux on the ARM platform and for Windows

46:05.680 --> 46:08.200
and for server vendors and for developers.

46:08.200 --> 46:10.680
I'm just tired of downloading the wrong ARM build

46:10.680 --> 46:11.720
or something.

46:11.720 --> 46:13.360
Yeah, I think that's really kind of,

46:13.360 --> 46:16.560
really kind of has gotten all of us a little bitter about it

46:16.560 --> 46:19.120
is like, let's just solve this now.

46:19.120 --> 46:22.800
And, you know, like I would love to be able to just,

46:22.800 --> 46:25.360
when the Raspberry Pi 5 comes out,

46:25.360 --> 46:27.680
I'd love to be able to just assume

46:27.680 --> 46:30.240
I can put the current build of CentOS on it.

46:30.240 --> 46:32.680
Like I don't have to wait for somebody in the community

46:32.680 --> 46:35.680
to create some special fancy boot system.

46:35.680 --> 46:36.760
It'll just work.

46:36.760 --> 46:38.600
Same with Ubuntu and Fedora.

46:38.600 --> 46:41.480
And I mentioned CentOS because that's really

46:41.480 --> 46:43.200
what I tried last go around.

46:43.200 --> 46:44.400
And we're just not there,

46:44.400 --> 46:47.040
but maybe in a future we could.

46:47.040 --> 46:49.000
I'll play the last clip from that presentation

46:49.000 --> 46:50.480
that touches on this,

46:50.480 --> 46:52.840
and then we'll link for the rest in the show notes.

46:52.840 --> 46:55.000
Far as OS support for those, you know,

46:55.000 --> 46:57.000
for example, in Linux, it's non-existent.

46:57.000 --> 46:58.280
Nobody has done that work.

46:59.760 --> 47:02.840
Within NetBSD and OpenBSD today are probably

47:02.840 --> 47:06.280
the best operating systems in terms of support

47:06.280 --> 47:09.000
for the platform using ACPI bindings.

47:11.360 --> 47:13.520
So some of the biggest challenges

47:15.640 --> 47:18.480
is in the way how USB is wired up.

47:18.480 --> 47:19.880
Due to the Silicon bug,

47:21.200 --> 47:25.320
the PCI Express root complex can only address three gigabytes.

47:26.200 --> 47:30.120
Well, the Raspberry Pi comes in a four gigabyte flavor.

47:30.120 --> 47:33.240
Because of that, there needs to be a way

47:33.240 --> 47:35.120
by which the firmware can communicate

47:35.120 --> 47:38.960
to the operating system that it shouldn't use

47:38.960 --> 47:41.240
the full four gigabytes for DMA.

47:41.240 --> 47:43.000
In other words, it's still a ways off

47:43.000 --> 47:44.120
before it's gonna be there

47:44.120 --> 47:46.320
is really what's the reality of it.

47:46.320 --> 47:48.040
It's a fascinating talk to watch though.

47:48.040 --> 47:49.320
I mean, just some of the technology

47:49.320 --> 47:50.760
and the clever things going on

47:50.760 --> 47:52.560
to make this work as much as it is so far.

47:52.560 --> 47:54.640
And I think maybe ultimately,

47:54.640 --> 47:55.920
the other thing that's really nice about it

47:55.920 --> 47:59.440
is just to see people addressing this

47:59.440 --> 48:01.040
and starting this conversation.

48:02.000 --> 48:03.000
It really will kind of,

48:03.000 --> 48:05.560
we'll kind of see the results will be driven by

48:05.560 --> 48:09.040
what the predominant uses for Linux on ARM end up being,

48:09.040 --> 48:11.440
which is probably gonna be data center and IoT.

48:11.440 --> 48:14.960
Something tells me if I were just to guess.

48:14.960 --> 48:15.960
Thank you, guys.

48:15.960 --> 48:18.880
It doesn't seem like the silver bolt we were hoping,

48:18.880 --> 48:22.840
but you could see a Raspberry Pi four or five one day

48:22.840 --> 48:23.680
getting support for it

48:23.680 --> 48:24.840
because it's just small things,

48:24.840 --> 48:26.240
just small things now at this point,

48:26.240 --> 48:28.360
but small things that persist.

48:28.360 --> 48:29.240
Hey, Wes Payne.

48:30.480 --> 48:31.840
What do you say we do an app picker too

48:31.840 --> 48:32.680
before we get out of here?

48:32.680 --> 48:34.240
Oh, an app picker you say?

48:34.240 --> 48:35.320
I do say, Wes.

48:35.320 --> 48:36.240
I do say.

48:36.240 --> 48:37.880
I do say it, Wes.

48:37.880 --> 48:38.720
I do.

48:38.720 --> 48:42.840
I want to talk about TU uptime,

48:42.840 --> 48:44.360
T uptime, top time.

48:44.360 --> 48:45.440
I like top time.

48:45.440 --> 48:47.320
No, it's gotta be T uptime, right?

48:47.320 --> 48:48.160
It's gotta be.

48:49.680 --> 48:51.000
I think cheese decides he found.

48:51.000 --> 48:52.240
It doesn't matter, Wes.

48:52.240 --> 48:53.200
Who cares?

48:53.200 --> 48:54.600
It's a cool utility.

48:54.600 --> 48:55.800
I'm going with top time.

48:55.800 --> 48:56.880
Top time?

48:56.880 --> 48:58.120
You guys are crazy.

48:58.120 --> 48:58.960
Just sounds good.

48:58.960 --> 48:59.800
Top time.

48:59.800 --> 49:00.640
It just don't matter.

49:00.640 --> 49:01.800
It don't matter.

49:01.800 --> 49:03.680
It's a tool to report the historical

49:03.680 --> 49:06.480
and statistical real time of your system

49:06.480 --> 49:08.080
between restarts.

49:08.080 --> 49:09.720
Yeah, you know, we're all familiar with uptime.

49:09.720 --> 49:11.360
You just find out how long the system's been online,

49:11.360 --> 49:13.920
but what if you're interested in a longer term behavior?

49:13.920 --> 49:14.920
How long was it online?

49:14.920 --> 49:15.920
When was it last restarted?

49:15.920 --> 49:17.560
And history about previous runs.

49:17.560 --> 49:18.880
And what was the load during that time?

49:18.880 --> 49:21.240
It looks like as well, which is great.

49:21.240 --> 49:22.600
Want that.

49:22.600 --> 49:24.320
Reminds me of a classic command

49:24.320 --> 49:25.880
that doesn't give you nearly as much information,

49:25.880 --> 49:29.080
but this is great because you get all the load info too.

49:29.080 --> 49:31.040
And it's a super easy command

49:31.040 --> 49:32.080
because once you get it installed,

49:32.080 --> 49:35.680
it's just T uptime, which has got to be,

49:35.680 --> 49:37.280
I can't believe I'm the one advocating for that.

49:37.280 --> 49:39.120
You guys are trolling me right now, aren't you?

49:39.120 --> 49:39.960
That's what's happening.

49:39.960 --> 49:41.000
You all know how to say it.

49:41.000 --> 49:42.080
Well, don't worry, Chris.

49:42.080 --> 49:44.000
Top time is available in the AUR.

49:44.000 --> 49:44.840
Top time.

49:46.840 --> 49:48.640
Even with you right now.

49:48.640 --> 49:51.360
And then we have one more bonus pick,

49:51.360 --> 49:52.800
which I think we've mentioned before,

49:52.800 --> 49:54.960
but recently came handy.

49:54.960 --> 49:57.560
So I want to mention it again is SETUI.

49:57.560 --> 50:02.440
S-T-U-I, which is a terminal based CPU stress

50:02.440 --> 50:04.240
and monitoring utility,

50:04.240 --> 50:06.440
or as Wes Payne calls it, SETUI.

50:07.560 --> 50:09.120
Well, now you're just putting words in my mouth.

50:09.120 --> 50:11.560
I'm pretty sure I've heard you call it that though.

50:11.560 --> 50:13.360
I thought that one was SETUI.

50:13.360 --> 50:14.600
Yeah, that's how I would do it, I think.

50:14.600 --> 50:16.840
No, I'm pretty sure you said SETUI, so.

50:16.840 --> 50:17.680
Stewie?

50:17.680 --> 50:19.360
Stop time and SETUI.

50:21.720 --> 50:22.600
All right, well that brings us

50:22.600 --> 50:25.040
to the end of this week's broadcast.

50:25.040 --> 50:26.120
Thank you so much for tuning in.

50:26.120 --> 50:27.680
Don't forget, we'd love your feedback

50:27.680 --> 50:30.560
at linuxunplugged.com slash contact.

50:30.560 --> 50:33.760
You can also join the conversation in our telegram group.

50:33.760 --> 50:37.320
That's at jupitabroadcasting.com slash telegram.

50:37.320 --> 50:40.200
Links and more information like that talk

50:40.200 --> 50:44.160
are all available at linuxunplugged.com slash 364.

50:44.160 --> 50:47.160
He's at Wes Payne, I'm at Chris Ellis.

50:47.160 --> 50:49.640
The show is at Linux Unplugged.

50:49.640 --> 50:51.560
And that's probably all I have to relay to you.

50:51.560 --> 50:52.640
When are we going to be back here?

50:52.640 --> 50:54.720
Oh, you want me to say when we're going to be back?

50:54.720 --> 50:55.560
You want me to say it?

50:55.560 --> 50:58.400
All right, we'll see you right back here next Tuesday!

50:58.400 --> 51:28.200
We love you quads!

51:28.200 --> 51:39.920
Dalton, we didn't get a chance to talk about it in the main show, but I'm just curious

51:39.920 --> 51:43.120
if you have any project updates while you're here.

51:43.120 --> 51:47.160
Oh, well, everything's going pretty decently on the PinePhone.

51:47.160 --> 51:52.160
We got all the, fingers crossed, all of the PinePhone UbiPorts Edition devices have shipped

51:52.160 --> 51:54.720
out and are arriving in people's houses now.

51:54.720 --> 51:56.340
Hey, hey, congratulations.

51:56.340 --> 51:57.640
That's a big moment.

51:57.640 --> 51:59.600
That's a bit of a wait off.

51:59.600 --> 52:01.760
Big thanks to Pine64 for that.

52:01.760 --> 52:07.920
On the device, there's still some of the basics to get going and it's been pretty exciting

52:07.920 --> 52:16.240
and it's made me learn a lot about what most integrators do on the ARM platform and really

52:16.240 --> 52:20.320
let me bring the perspective that I had today.

52:20.320 --> 52:25.080
Because before this, I only knew the Android perspective of the world, which simplifies

52:25.080 --> 52:27.620
a lot of that out for you.

52:27.620 --> 52:30.840
That's an interesting insight and I can totally see that.

52:30.840 --> 52:34.400
That's a pretty solved problem at this point on the Android side.

52:34.400 --> 52:35.400
To a point, yeah.

52:35.400 --> 52:36.400
Oh yeah?

52:36.400 --> 52:37.400
Only to a point, huh?

52:37.400 --> 52:38.400
Yeah, okay.

52:38.400 --> 52:57.920
Why am I not surprised?

