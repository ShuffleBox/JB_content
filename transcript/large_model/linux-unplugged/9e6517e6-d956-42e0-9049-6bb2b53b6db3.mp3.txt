It is our last episode for a bit from the studio,
for a long bit, actually.
I wonder how that's going to be.
And it's kind of perfect because Brent's here.
Hello, Brent.
Well, hi.
And he made us brunch.
He sure did.
Oops.
It was great.
We had, what is it, like an egg?
Is it a frittata?
Is that what it's called?
You know, I typically like to make a frittata here,
but I was on the hurries.
So it's a modified frittata.
And now maybe it's like a Nelly frittata.
Well, see, you keep that nice cast iron pan and the cover
that goes with it here for me.
So I just kind of created a micro oven in the cast iron,
and it did all right.
Nice.
And then he also utilized the new air fryer
to make some fried potato sides for us.
Already a convert.
That's the first time I use that thing,
and I must say I'm impressed.
I realize this is why there's kind of like in JB,
inside JB, there's kind of like resource contention over Brent.
Like when Brent's coming to the studio, Alex telegrams me,
like, oh, you got Brent time?
That's no fair.
I want Brent time.
This is why.
Because he's in there cooking breakfast and stuff
for everybody.
He brings snacks.
He does.
He brings snacks.
Guys, guys, you can check.
You can check.
Hello, friends, and welcome back to your weekly Linux talk show.
My name is Chris.
My name is Wes.
Hello, Wes.
Hello.
Are you full and satisfied?
Not quite, but I've got the beer at the ready.
He did also bring beer, too, which we did not mention.
I know how to win hearts.
You do.
This episode is brought to you by a Cloud Guru, the leader
in learning for Cloud, Linux, and other modern tech skills.
Hundreds of courses, thousands of hands-on labs,
get certified, get hired, get learning at acloudguru.com.
Well, today on the show, we're going
to tell you how to run every single Linux distribution,
well, nearly, at once.
And I'm not talking about VMs.
I'm not talking about containers.
I'm talking native on one box simultaneously.
You pick the host distro, and then you hijack it.
And we'll chat with the developer of this mind-boggling
tool.
Plus, we got the community news.
We got some feedback.
But first, we have to say time-appropriate greetings
to our virtual lug.
Hello, Mumble Room.
Hello.
Greetings.
Hello, Wes.
Hello, Wes.
Namaskaram.
Hello, Brent.
We are at full power today.
We have 27 of them in there.
We have some in the on-air and some in the quiet listening,
and it's awesome.
And the Mumble Room is going to be the trickiest piece
while we're on the road.
So I'm glad everybody made it for this one, at least.
Oh, but yeah.
So Brent got in last night.
Sure did.
After a day of travel for you, and what
felt like a day of commuting for me to get down to the airport.
And so Brent is joining us here in Seattle.
And then he's going to board Lady Joops tonight,
probably think, or tomorrow morning, but probably tonight.
And then we head out tomorrow morning.
Me, Brent, Hadia, my three kids, and the dog,
all in Lady Joops.
It's like a little land cruise you've got going here.
Yeah, it's a land yacht, but it's going to.
Are you crazy, Brent?
Are you just crazy?
I think I am, but I'm strangely OK with it.
OK.
Yeah, we are going to have a chase vehicle, as they call it.
So Brent will often probably be in the chase vehicle.
And then I imagine what will end up happening
is Brent and I will essentially become co-drivers.
So there'll be times where he'll have eyes on something
I don't have eyes on, and we're going to have two-way radios.
Oh, that's just adorable.
Hey there, Brent, you know?
Good, Chris.
I think you're going to need some cute radio nicknames too,
right?
Call signs?
Yeah, OK.
Maybe he could be Brunch.
Seems appropriate.
Yeah.
And so something that Hadia and I do
is sometimes if I need to get over,
she can move over earlier and kind of create
a hole in traffic for me.
Name and presence.
Yeah, exactly.
Or sometimes scoot ahead and check out
a gas station or a rest stop and that kind of thing.
And it also gives you a chance to have your own space,
listen to something or make phone calls or whatever.
Do business while you're going down the road, as one does.
You've got your own podcast playlist, I'm sure.
But on top of that, Brent's going
to be working with me to record content during the trip,
including chats with team members and information
and just anecdotes from the trip and all that stuff.
So we could see some fresh brunches for everybody.
Oh, now that is exciting.
So pretty excited about that.
And totally feel unprepared.
I don't have any of the production gear packed yet.
Because I didn't want to break anything down
until we're done with the show.
We need it here, yeah.
I've taken a couple of things out of the studio early,
like my mute pedal and a couple of cables and stuff.
But it's funny, too.
I mean, it's not like you haven't been preparing.
You've been thinking about this.
You've been churning through it for, I mean,
months now at this point.
Yeah.
And you remember last week, we had a server lockup.
And it locked up twice in one morning.
It was looking real bad.
It was just after a Pacific Northwest heat wave.
And I was literally going into panic mode.
Because this server is a critical component
of production.
Because I need to get in and administer the mixer.
And I do that via a WireGuard tunnel that
comes in through that server.
So if I didn't get access to the next cloud instance on there,
if I couldn't get access to the media that's stored on there,
if I couldn't get access to the archive, if one thing,
I need WireGuard, I need to get access to the mixer
so I can control the studio.
And that's a critical role that server fulfills.
And it's designed around that, right?
It's our big ZFS-powered redundant server.
No, it turns out.
It was locking up.
It was locking up.
And so Wes and I were racking our brains.
Like, nothing has changed.
So we were thinking maybe it's hardware failure.
Because in the absence of software change,
you start to suspect something changed in hardware.
And it's an older used machine as we put it through its paces.
It's literally sitting in an oven.
I mean, sometimes it gets so hot out there
you could slow cook pork ribs.
It's bad.
So we thought that must be what it is.
Then it dawned on us, like, I don't know,
maybe after the show.
I can't remember when we thought about it.
But we thought, you know, there is one change.
And I don't know if this is what it is.
But the one change we made is I reinstalled NetData,
a really handy tool that we recommended before.
And I installed the LM Sensors package.
And those are the only two changes I made.
But maybe something is there.
So I did a systemctl disable NetData, turned it off,
and stopped it.
And ever since I did that, it's been solid.
The system hasn't locked up once.
And it's still gotten hot a few times.
The other thing I've done, I've started setting up fans
to vent the garage into the house.
It heats up the rest of the house.
But then I have a series of fans that kind of push it out
the back door.
And so it means the downstairs gets warmer.
But the garage area drops like 10, 15 degrees.
It's a significant improvement.
I like this sort of readjusting the entire climate
control of the studio for that poor little server.
And then what we've done is we've
sealed off the actual studio, the production
part of the studio where we record.
And we've installed an air conditioner there
to climate control the specific studio.
Now, if you're interested, we are selling very sketchy colo.
So don't worry.
Discount rates.
Great prices.
Average uptime.
Great prices, OK uptime.
Jupiter garage hosting.
I love it.
So hopefully, everything's going to be OK.
And it'll last through the road trip.
I haven't touched it since because I
don't want to introduce any state change at all.
I mean, we'd like to eventually be
able to try re-enabling net data, for instance.
We want to validate this.
Not right now.
So my thought is when we get back,
I'll probably flip net data back on and see if we get lockups.
I'm hopeful that everything will be fine.
And that's just one less thing to worry about right now.
And if it doesn't, I should be able to tuck and roll fairly
easily into spinning everything up that's essential,
with the exception of the mixer.
It's still tricky because it's on the physical land here
at the studio.
And I need a way to remotely connect
while I'm on the road.
And the solution I have now is so perfect.
And so I don't know.
Maybe in a pinch, we could set up another system in here
and act as a wire guard system or something.
Yeah, we'll get some back doors going.
The one thing we have going for us is Wes flies out later.
So you'll be here a little bit after I'm gone.
There will be a critical window still.
But if it fails before then, we've got some time.
Yeah, so that's hopefully it.
The meetups are coming soon.
The first meetup will be in Salt Lake City on August 7th.
And the second meetup will be in Denver on August 20th.
The Denver one, we'll have our friends from Lidnode there.
Linux gamer Garnet will be there.
We'll be giving away some raspberry pies.
They're going to be giving away some big, like,
big dollar amount Linode credits.
They're going to have all kinds of stuff they're doing there.
And we're also going to have drinks and snacks.
And so it's going to be a big meetup.
And we're also going to bring on board for the Salt Lake City
meetup.
We're going to have swag on board
to give out to folks that make it to the Salt Lake City
meetup as well.
So hopefully that all goes smoothly.
But what do you say?
Maybe we should do a little community news.
Yeah, we better get through it.
We've covered some of the possible downsides
to the Linux ecosystem with the Steam Deck,
specifically around focusing more on Proton development
to less on Linux native games.
But there's clear positives as well.
And I thought maybe we'd focus on those today.
So along with some of the optimizations
that you're going to see just throughout the Linux stack
with the Steam Deck, the one we wanted to talk about
is AMD's work.
They've been working with Valve on CPU frequency and power
scaling improvements to enhance the Steam Play gaming
experience on the modern AMD platforms that
are in our laptops, desktops, and also the Steam Deck.
Yeah.
Now, historically, AMD hasn't really
worked on the Linux CPU frequency scaling stuff,
especially in the kernel as much as Intel has.
And actually, that kind of goes for other areas of power
management as well.
But going by a recent job posting and now some patches,
it seems AMD is ramping up efforts
in those areas, including some specific stuff
around the scheduler.
And we know how important that is.
Yeah.
I was looking.
I couldn't find the job postings anymore.
But Michael Larble over at Feronix
kind of implied that it might be like multiple job postings
that AMD had to work on this stuff.
Now, AMD and Valve are working together
to improve the performance and power efficiency
for modern AMD platforms running on Proton.
They've also spearheaded the ACPI CPU frequency driver.
The focus on Proton still remains.
That's interesting, but I kind of, I mean, we'll see.
We're going to hear more about this at XDC.
It seems AMD will be presenting some information.
And it's quite possible that some of this
is based around some effort that we've already
seen for a previously proposed driver.
We'll see, something that AMD actually suggested back in 2019.
Michael Larble is on it like a bonnet over at Feronix,
though, so keep checking over there for more information.
And also related to just like Steam Deck, perhaps the hype
bubble, it seems like it's driving a few more people
into Linux gaming than we've seen recently.
Liam over at Gaming on Linux reports
that Linux has seen a bit of a surge right now.
And it's flirting with that 1% user share on Steam.
Say it ain't so.
Yeah.
If we do the math here, take the number of monthly active users
Steam says, 120 million, that would give us
like 1,204,000 monthly active Linux users on Steam.
1.2 mil monthly?
That's a real demographic.
It is.
I mean, 1% seems really small.
But then you consider like everyone
uses Steam who plays games at all, so wow.
And why is it surging right now?
What's changed?
It's the Deck, right?
It's got to be the news of the Deck.
And maybe people are like, well, Valve's
taking it this seriously.
Maybe I should look at it again.
I mean, I admit it got me to reopen up Steam again
and poke around a little bit.
I will say just casually, it does
seem that there's some general acceptance among the Linux
curious folks that maybe just they're not
running Linux on the desktop, but they use it for work
or whatever.
I've noticed more of them hearing about Proton
and hearing good experience reports.
So I wonder, too, if there's just a sort of slow build of,
Proton's just been good for a while now.
And getting better.
And it's getting better.
One question I have is, do you think
this is any different than when they first
sort of jumped all in on Linux?
It sounds familiar to me.
Maybe a few years ago, they kind of did the same thing.
With the Deck, you mean how is it different?
Yeah.
I think this time, the Deck is an accumulation
of all of their mistakes that they wish they would have done
a little bit differently and kind of all in on this one.
In fact, the Steam Controller itself,
the original Steam Controller, initially
started with a screen in it.
And then Valve transitioned everything
to touchpads over time.
Don't call it a Dreamcast.
Yeah.
And they've kind of been working through this.
Like the sound system in the Deck
is basically an upgraded version of what's
in the Index that they've already been making.
And so that kind of stuff, I think,
at each kind of phase, since they announced Steam Machines,
they've learned lessons there.
And for better or for worse, I think
that's also what's driving them to push Proton so much,
part of that whole thing.
And I just saw a Hacker News conversation thread today
that was, I think it's great.
And this guy had all of these reasons
for why he thinks it's great that Valve is pushing Proton,
and that should be the go-forward strategy forever
and all this kind of stuff.
And I don't know about that.
But I sit here, and I look at this, and I see it as,
it's a real multispectral issue.
And part of it, to your question, Brent,
is even if this sort of is not much different
than their original announcement and kind of peters out,
the interim enhancements that we're getting, like with AMD
contributing to the CPU scaling code
and the intermediate stacks for the video drivers
and the audio stuff is getting so much work and improvement
to prepare for this that we've kind of already benefited.
Yeah.
It seems like they've learned a lot since the whole Steam
Machine thing.
Not only is it more focused in the hardware sense,
we are seeing some specific improvements coming in, right?
But also, they've just had this experience
of working with various contractors
on wine and Proton improvements and getting more stuff targeted
towards the kernel.
So it seems like they're just leaving
a lot of good stuff in their wake, whatever they're doing.
Mm-hmm.
And for me, Linux has never been a really big gaming platform,
because I've kind of decided that Linux is,
when I want to play on my computer,
I play with Linux or a desktop environment,
but something in that stack.
And when I want to play a video game, I play on my Switch.
And I hope that the Deck might replace the Switch for that,
where then I'm still on Linux, and I'm still
playing the games I've already bought,
and I could move to the PC.
And the other thing that's so exciting about that is,
I could be on the Deck, and the kids could be on a PC,
or they could be on the Deck, and I can be on a PC,
and we can all play together.
I think that's going to be something
that the other consoles don't offer right now,
and that is going to be a huge selling point to me.
We'll see where it goes.
As a dad, I like it a lot.
As a gamer myself, I think, I don't know.
Because for me, the Switch offers the Nintendo franchise
games, like Mario, like Zelda, like Metroid.
And that's always going to be a draw to me.
Does that just show your age, Chris?
Yeah, maybe.
Maybe.
Let's talk about ingenuity.
What an amazing accomplishment.
You guys remember the Linux Copter on Mars?
How could we forget?
Oh, man, has it been something to watch this thing go.
And in a brand new video, which we'll
have linked in the show notes, you
can see ingenuity make its highest and most complex flight
to date.
And they're now taken into an area that sounds treacherous.
It's called Raised Ridges.
Watch out, little copter.
Now, during this trip, which is its 10th flight on Mars,
ingenuity covered a distance of 310 feet, or 95 meters,
for you metric folk.
So we're doing a record altitude for it of 40 feet, or 12 meters
high.
Remember, that's in the crazy thin atmosphere over there.
Combined with the distance it's traveled throughout all
of its prior flights, ingenuity has now
flown for more than a mile, arbitrary milestone maybe.
But I mean, that's some serious performance.
It's amazing.
It was originally designed to only perform four flights.
So we're talking 10 flights now?
This has been since April, too.
Not only is that just an incredible accomplishment
on its own, but it has essentially
submitted this type of Linux-powered device
as a go-to, must-have secondary piece of equipment
when exploring another planet.
What?
Can we just soak that in for a second?
From, like, we've never done this before.
We're not sure if it's going to work
or if it's up to the task to, no, we need these.
We need to bring these along.
Right.
And it's when we're exploring other planets.
It's the stability of Linux that really makes it appropriate.
It's crazy, man.
It is so, so crazy.
I am so excited to watch the development of this thing.
And it's going to continue on, too.
Yeah, right?
I mean, it's not done yet.
As we've seen, I think JPL and NASA
have a pretty good record of getting
all they can out of our little adventure buddies
over on the Red Planet.
Ha, ha, ha.
Linode.com slash unplugged.
Go there to get $100 in credit for 60 days on your new account
and you support the show.
Linode is our hosting provider for everything
we've built in the last couple of years.
Since we went independent, we've built everything on Linode.
The infrastructure is solid, it's flexible,
and of course, it performs.
And you can focus on your project,
not on your infrastructure issues.
And you get 11 data centers to choose from all
around the world, and every service level
is backed by the best customer support in the business.
And they've been around since 2003,
which means they've been doing this now for 18 years.
And every step of the way, they've
had to kind of innovate and stay competitive
and watch out for different players to come in the market
and offer different packages and different dashboards.
Linode's got all of that.
And they've really honed in something special.
You know, a few months ago, I set up a $5 Linode.
And I just use it for simple passing data
between home and the studio.
It's like an intermediary that adds just additional bandwidth.
And then once I had it going, I was like, well, gosh,
you know, I could set up an SSH jump post on that.
Oh, you know, I could put some quick documentation up there
that I could SSH into and read real quick.
Oh, hey, you know what would be nice
is if I put a status page up there that
could check on the connections remotely that I could go,
oh, you know what else I could do?
And from on and on and on.
And it's all just on a $5 Linode.
It's so impressive.
You really can just kind of push it beyond what you'd expect.
And the value is there because they're always
investing in the hardware.
And they're 30% to 50% cheaper than some of the big hyperscalers
out there.
And I could sit here and tell you about this all day long.
But you really got to go see it for yourself.
And this $100, it's really going to let you test it.
So head over to linode.com slash unplugged.
Get $100 for your new account.
Try this stuff out.
Build something.
Learn something.
And support the show.
You know, we are just almost to one year
since we've gone independent.
Just a few of us sitting here working our hearts out
to make content.
And the reason we can do this and the reason why
we can take this as seriously as we do
and invest the energy and effort we do
is because people out there take advantage of our sponsor offers
and let them know that it's worth their money.
It's worth our sponsors' time.
They get value out of our shows.
And it's such a nice system because they're
offering you something great.
I mean, I enthusiastically endorse Linode.
I have zero reservations about that.
And $100 is real value.
Like, they're meeting you there with $100.
So go try it out and support the show.
Linode.com slash unplugged.
So we teased this earlier, but it is true.
You can actually run every Linux distro at once.
Now, this is something that we've been taking a pass at.
No kidding.
I mean, it's a little bit of a dream, right?
You love Arch.
You want all the stuff in the AUR,
but sometimes it just doesn't make sense for that system.
Yeah, and honestly, we thought maybe we
could solve this with Toolbox, that great, handy Fedora tool.
And it got me part of the way there.
I will admit, it got me part of the way there.
But it wasn't all that I wanted.
I wanted something that was truly like multiple distro
package managers.
I didn't really want something that
was in a VM that wasn't on my local system.
That's just it, right?
Sometimes you really do want that.
It's just you're using this application
for a specific use case or only at certain times or something.
Or it's just you don't want it as part of your system.
You want to play with it and try it out.
Toolbox really does work with containers of all kinds.
But you're right.
If you're setting up a battle station,
you're going to be using this, maybe a video editor,
or you need something in the background, a tool
that your distro doesn't have.
You're going to be always fighting that you've
containerized it when you want it to be integrated.
And then once you've figured all of this out,
you don't want to create some shit storm problem
that you have to manage all the time that is just spewing
crap all over your box and making things break left
and right.
You don't want that either.
Oh, right.
I had to compile it this way with a custom patch
to get it to work.
And how did I do that again?
Yeah, it's just you could see how you could really
crap up a box quick, right?
And it really is the case that there is a type of solution
here that is quintessentially free software.
And we, seven years ago, chatted with Paradigm, the developer
of Bedrock Linux, which is a meta Linux distribution which
allows users to mix and match components
from other distributions, typically incompatible
distributions.
Bedrock integrates all of these components
into one largely cohesive system.
So you could have a Debian stable host distribution
with an Arch kernel or other packages from the Arch repo.
In my case, I set up a Fedora 34 workstation,
and then I hijacked that into a Bedrock install.
Nice.
So because I thought that'd make for a pretty decent base.
But this is why I say it's quintessentially free software
is Paradigm has been working on this now for about just
over 10 years.
Seven years we talked to Paradigm.
And I thought, is Bedrock gone?
Is it dead?
Is it still alive?
It's just such an unfortunate but common story, right?
Someone has a great idea, but it just never takes off,
or they move on with their life.
It was a passion project, and things change.
But that decade is a long time.
Yeah, especially for something that is ambitious as this,
when the Linux ecosystem moves as fast as it does,
when there's the number of distributions out there
that there are.
Right.
I mean, not to diminish any projects,
but this isn't just a respin of a distro
with some customizations or a different DE, right?
This is a meta distribution.
Yeah, you pick the distro you start with,
and then you convert it into this.
And it's incredible.
So what we wanted to do was call up Paradigm
and check in on how he's doing and how the project is going.
Paradigm, welcome back to the show.
It's been seven years since we chatted last.
I'm happy to be back.
So long, in fact, that I didn't recall our conversation
until you embarrassingly reminded me,
and then it all came flooding back.
So thank you for making it.
And I think this marks like nine years or so
that you've officially been making, creating,
running Bedrock.
The first public release was nine years ago,
but there was definitely some preliminary work,
maybe two or three years before that.
So yeah, it's been a while.
Yeah, and along with all of that,
I see you in the IRC room answering questions often.
We talked a lot back in the day about this concept
and about taking up disk space and how
there was multiple libraries sometimes and all of that.
And I look back at this conversation now,
and I go, it's so funny because it
feels like Flatpak and Snap sort of just settled
that conversation.
And I wonder, where do you see Bedrock fitting in now,
all these years later, when there are things like Flatpak
and Snaps out there?
Do you feel like there's a shift for Bedrock,
or does Bedrock's core mission continue?
I'd say Bedrock's core mission still continues.
Things like Flatpak and Snap do solve a problem
that Bedrock could have helped with before they came around.
But they don't completely overlap with Bedrock,
since they're kind of a lot of independent things
that you still need Bedrock for if you're interested in them.
So they end up being largely orthogonal.
Right, I had a fun experience hijacking a Fedora 34
install and creating a Bedrock install out of it.
And then on top of that, I layered
on Alpine and Void Linux.
And pretty soon, it just became its own hybrid monster
in the greatest way possible.
I could pick and choose which packages from which distro
I want, and I had all of the package managers
all of a sudden.
So I'm curious now, like nine years or so,
at least since we chatted seven years,
what problems are you solving now
that you weren't solving back when we first chatted?
I think when we first chatted, one
of the limitations you brought up,
which was very correct at the time,
was Bedrock was pretty rough to install.
It was comparable to something like OneX from Scratch.
Did even Bedrock get features from other distros?
Not just packages, but anything in the abstract.
This includes things like the installation process.
And so at the time, the installer
was kind of a placeholder until I
figured out how to get an installer from another distro.
And as you mentioned, it's pretty easy now.
You got Fedoras without thinking about it too much.
So that's definitely one thing that I did not
have solved seven years ago that I do today.
I also recall during our chat that we were really
consternating over what you were going to do about systemd
and just init systems in general.
Oh, yes.
At the time, for the same reason,
Bedrock had a placeholder in it until I
figured out how to get inits from other distros.
And today, you can get almost every major init.
I think, in fact, we're probably going to get S6, maybe
the latest one I'm working on getting to work.
And it'll probably work here in the next point update.
But yeah, systemd, OpenRC, runits, even upstart,
I'd still test against old ISOs.
And that works as well.
Wow, that's impressive.
I mean, what's the process like of onboarding a new init
system?
I kind of solved most of the work
in a very generalized fashion.
Bedrock has a menu when you put the system kind
of like after the bootloader menu where you pick your OS
and kernel.
Bedrock adds an init selection menu to select your init
and does some generalized bootstrap work there.
And then for each specific init, there's
often quirks I have to go work on.
So for example, for systemd, I had
to make some unit files to go change things after it started.
But that's generally how it goes.
Well, obviously, the goal here with Bedrock
is getting a lot of nice abilities, features,
superpowers, you might say, from all the various Linux
distributions that you have support for.
But when you do that, are there some downsides
of hijacking your system?
The predominant one is complexity.
A Bedrock system is fundamentally more complex
than a traditional distro, largely because it
has all the complexity of traditional distros
with Bedrock on top and possibly multiple distros,
or normally multiple.
And so as long as things are working, it's fine.
But as soon as something goes wrong,
it's a lot more effort to debug.
You thought just having to figure out
the problems with one package manager was a problem.
Well, add a few more.
Yes.
Well, I do remember when we were chatting last time,
you had a goal of a meta package manager that would, in theory,
run updates and whatnot across all of the various package
managers you might have installed on a Bedrock system.
How does that work on?
Happily, that's available.
It works great today.
We call it the Package Manager Manager.
I think that was just like a shorthand for it, just
a placeholder name when I first came up with it,
and that ended up sticking.
You can use it for the obvious use
case of upgrading the whole system.
But there's also, I found, some workflows on Bedrock
that need to take multiple package managers into consideration
that you might not think about if you're not on Bedrock.
For example, if I want a specific package,
I might want to check if one distro has it.
If it doesn't, then check if another does.
If that doesn't, check if a third does.
And just install whatever the first one has.
And so PMM can do that pretty trivially.
So for a concrete example, actually, I
use S-Cron as my preferred cron program.
And Void Linux is the only distro
I knew of that actually provides it.
And I figured that out by typing PMM install S-Cron,
and I did that.
Void was mostly low on my priority list.
I had to skim quite a few.
Wow, interesting.
Is it recommended to use PMM, or is it still
fine to just use the individual ones
and you won't really miss out on much?
You're welcome to use individual commands if you want.
But after using Bedrock for a while
and you find enough kind of cross-package manager
operations that you want to do, it
starts becoming more pleasant.
An additional feature of PMM I should mention while we're on
that I'm somewhat proud of.
Since the idea behind Bedrock is to get features
from other distros, I wanted to see
if I can get the package manager user interface
from other distros as well.
Because I know people have a lot of muscle memory
for how to use one package manager.
I found some people who need a Bedrock will type things
like pacman install or apt-s just from confusing their muscle
memory there.
And so you can configure PMM to mimic the user interface
of different distros.
Whatever muscle memory you have, it can continue with.
And you can use that across all the distros on your system.
Well, it's that kind of polish that
makes me think we should also make
sure we hit more on that interactive tutorial.
I know Chris and I both tried it, and just, wow.
I mean, it was really useful.
It was fun.
It was easy.
And it just felt like it was quite polished.
And I'm curious, what's the story there?
How did that come about, and how does it all work?
The story there, it starts with difficulty expressing
what Bedrock is to other people.
People don't like to read dry documentation.
And it's difficult to summarize within people's own attention
span everything needed for Bedrock.
So someone else came up with the idea,
so I can't take it full credit, of an interactive tutorial,
hoping that the interactive nature will
help keep it more engaging and help things sink in more.
First try was just, essentially, documentation
in a terminal, which didn't work too well.
I started adding some scripting to it,
so it'll detect your environment and see
what you're doing interactively to kind of actually force
you to run the commands.
And I found that made a big difference.
Yeah, that really stood out to me.
It felt like it wasn't just a static thing,
but the tutorial actually asks you to cat some files,
to use T to pipe stuff around.
And not only does it actually show you the output in a way
that you get to feel like, oh, I see that.
That's actually on my system.
I don't just have to trust the man page,
but it also just meant that it felt a little bit
like a video game.
Yeah, it requires you to complete the task
before you can move forward in some cases.
Yeah.
So I have a couple of questions about the future.
On the top of mind of listeners last time
was, what about graphical apps?
And I'm curious how the transition to Wayland
affects Bedrock and the state of graphical applications
using, say, Bedrock.
Like, in my case, I have a Fedora 34 hijack system.
And perhaps I wanted to load Arch on there or something
and pull something in from one of those repositories.
Could I successfully get a Wayland application
working that way?
In fact, I did zero effort for Wayland.
It just worked with the kind of infrastructure we had.
Wow.
That's why that became a thing.
So yeah, that should be fine.
That's great.
And then I had another looking forward kind of question
is, with everything we see with container technology,
cgroups and namespaces and just stuff that's
just built into Linux now, do you ever look at that
and think, maybe there's a future there for Bedrock
to take advantage of some of that tech?
People ask that a lot.
But I strongly disagree.
The issue there is all of those are
designed around segregating things and keeping them
separate, whereas the whole point of Bedrock
is the opposite, is to make everything work together.
So I've tried to do my due diligence
to understand those technologies and to experiment with it
and to see something.
But I really couldn't actually find anything
with anything on those lines that
would be useful for Bedrock.
I like that answer.
I think I completely agree.
It's like, this is what Bedrock's mission is,
is to really kind of create one meta Linux distribution.
And by separating it off into containers,
it sort of would defeat the purpose of what
you're trying to accomplish with.
But I did see the question come in quite a bit,
so I did want to get it out there.
And then the last question, I know
it's one that you get a lot, Paradigm,
is where do you get off calling this thing a meta distribution?
So if you define a Linux distribution
as a project that distributes a Linux-based operating system,
called a distro for short, there are
a number of things that kind of fit in the broader distro space
that aren't really distros.
They don't fit that definition.
What they tend to do is distribute some means
that you can use to get a Linux-based operating system,
even if they don't distribute the operating system itself.
Gentoo is a good example here, where
it distributes kind of like a framework
to build your own distro.
In fact, I didn't coin the term meta distribution.
I found that on Gentoo's website.
Another good example is Linux from Scratch,
where they just distribute documentation.
They don't even distribute any tooling
to help you build your own Linux-based operating system.
And so Bedrock kind of fits that pattern, where we're not
actually distributing the operating system.
We're distributing tooling to kind of build one yourself.
Just unlike those other projects,
we're letting you use the packages and parts
of other distros to do that.
Very good.
We'll keep up the good work.
You have remained dedicated to this project for years.
And even today, before we got on the horn here,
you were in your IRC room answering questions.
And people aren't even all that polite always,
which they should be.
But sometimes, they're a little frustrated,
and you're still in there.
That's really impressive.
So keep up the great work.
And I think now, with how simple it is to get going and hijack
an existing install, this is probably
going to be one of my go-to tools.
So thanks for all the great work, Paradigm.
You're very welcome, and I'm happy to hear it.
And what might be the most impressive thing about Bedrock
is it doesn't feel like a hacky solution.
No, it really doesn't.
I mean, I do all kinds of weird stuff
I shouldn't with containers, and VMs, and mounting stuff
places.
It did not feel like that.
I mean, a lot of it's wrapped up in the burl on our Bedrock
Linux.
I don't know what you would call it.
BRL is like the little command line tool
to actually manage everything.
And that's where you can see the delicate balance Bedrock has
to strike between keeping things kind of isolated off
on their own so that you can have an Arch system over here
in the corner, but also making sure
that Arch's package manager doesn't step
on Debian's package manager.
But if you're using a Debian tool,
well, you might want to know about the themes, or the fonts,
or be able to access the newest version of JQ
that you installed over in Arch world.
And that takes a lot to get right
and to make it feel actually useful.
Do you think we'll see this propagated a little bit more
generally into some other distributions in the future?
I know maybe it seems early now, but.
I mean, it's been around for a while, though.
And it hasn't really, you've seen solutions
that kind of solve the problem Bedrock solves
in their own sort of focused way.
And I don't think it's really appealing to some distro makers.
I don't think they want to own the whole thing, I think.
It really does feel like there's definitely
some shared spirit with things like Nix, I think.
But Bedrock strikes me as something
that has a somewhat limited audience, not in a bad way,
but it's like a power user feature, right?
It's made for us folks who love having a Linux system, who
want to play with it, or who just, you know,
I'm not someone who installs Ubuntu,
doesn't configure it, and just runs.
That's great that we can do that.
If you want something custom and really
to be able to make your Linux desktop super useful,
Bedrock seems like a tool for you.
And it does seem like it's attempting
to solve a fundamental compromise you often
have to make.
Maybe you prefer distro X, but it
doesn't have everything in its package repository
that another distribution has.
And you're kind of being offered a way to mix and match that.
And I think the trickiest thing about adopting Bedrock
is it has its own vernacular.
You know, you have these stratas,
which are kind of really like a collection of files
and processes.
And you have like these different languages,
different terms for things that you have to learn.
And so that is probably the biggest learning curve,
is not managing it, not even setting it up,
because it has a really fantastic tutorial.
So the biggest learning curve is just
learning what the different terms mean.
And there's four or five key terms
you really have to figure out.
And you know, I think that's fair,
because Bedrock's doing stuff that no one else is doing,
right?
I mean, it's one of the first meta distributions
out there in this sense, at least.
And so you've got to come up with some new names.
Yep, yep, absolutely.
And Paradigm, right now, I just checked during the chat.
He's in his chat room over there right now,
answering questions and chatting with people.
So he's on Librarian Chat.
And it's just pound bedrock or hashtag.
I will say, I think Bedrock's going to stick around
on at least some of my systems.
The hijacking went pretty smoothly.
I didn't feel a big, I wasn't worried about that.
And at least maybe start with a couple of workstations
that aren't in the critical path.
But if I can just get all the AUR stuff,
but still have it easy to install,
you know, random devs I might need for work.
Yeah, this could be the final piece
that makes something like Fedora 34 stick for me,
or CentOS Stream 9 in the future.
Think about just, even if we just did CentOS Stream 9
in the studio, and just a handful, a couple of packages
that weren't available to us in CentOS's repo,
or in Flatpak, or something, we could use Bedrock.
And we could close that gap and use it in audio production.
I mean, it has serious potential.
And if you don't go crazy with it,
I don't see why it wouldn't be sustainable.
So yeah, it's a tool that we're definitely
going to be using for a long time.
Sorry, Paradigm.
You might just see us in your IRC room more often pretty soon.
I wanted to mention we have stickers
for all of the active shows now.
And how cool is this?
Based on popular demand.
I get to say that, because it's true.
People love the stickers.
You know, it was me being a dummy, really.
I drug my feet at first, because it
felt like it was a low effort thing
to do to take the vector art for the MP3 albums
and turn that into a sticker.
I'm like, I can do better than that.
It's not a custom new design or anything.
Right.
I didn't commission somebody to create.
It's like, I can't do that.
And then when Self-Hosted 50 landed, I realized, wait a minute.
That's 50 releases of this album art.
It's actually kind of awesome to have that as a sticker.
And then because I have it as a vector,
we can do cool high resolution, different sizes.
So I busted out sticker artwork for all the active shows now.
I realized that was the way to go.
And they're awesome.
I think it's actually perfect.
And so they're all up at jupytergarage.com,
as well as some new exclusive merch
to celebrate Self-Hosted 50.
And as always, our core contributors get a discount.
So check the limited ad feed or live show
feed for a note from me on your promo code.
Or you can just go to the members download area
and get the note.
So you can use the promo code and take some money off
when you go over to jupytergarage.com
and get them stickers.
I think they turned out great.
And one of the stickers, there's a special plea
from Wes Payne in there.
But I won't say which one.
You'll just have to go check the stickers and find out.
I have been kidnapped.
All right.
All right, and with that, let's do a little bit of feedback.
You want to take this one?
Roxodus from Linux server IO writes in,
just listen to LUP 4.16.
And I'd like to clarify some things regarding web top.
First, I just want to say that you brought up
an interesting use case.
And that's awesome.
So hey, look at us continuing to abuse software.
That's right.
That's our thing.
Regarding flavors, we also have fedora variants, nice,
with mostly the same VMs.
Arch may also be in the works.
Oh.
That would be killer.
That would.
Either one would be great.
You remember web top is that project from Linux server
that lets you run a Linux desktop in a container.
You connect to it remotely with your web browser.
Yeah, exactly.
And we had a lot of fun playing with it.
But did definitely have some questions
because it's a lot of components that are all integrated
together.
And one thing we were wondering was, well, Chris,
you noticed that default user was named ABC.
And I don't think you love that.
You just want it to be called Chris, I assume.
Yeah.
Well, as for ABC, unfortunately, at the moment,
it's fairly relied on as it's kind of the only constant they
have when trying to manage permissions in there.
And I will say, they're doing good work here,
as Linux server always does, to try to make things secure,
not just leave it a big old security hole.
So I get that you probably want to set some user permissions.
What they're doing is really tricky.
And that is the compromise you have to make.
And so that's why I think my thought was put it
behind WireGuard or put it behind a VPN.
Don't just put it right out on the net.
Yeah, definitely a consideration you
want to make when running software like this.
And just a moment to say thank you to our friends
at a Cloud Guru.
They have a SystemD management course for Linux.
This course is designed to give you a deep dive
into the topic of SystemD, the most widely used service
management scheme in Linux out there.
The course is really just going to help you demystify SystemD
and go beyond just kind of muddling through it
and getting things done to actually understanding
how all the different components work together,
how to configure, manage, and monitor and troubleshoot
SystemD.
We'll have a link in the show notes for this course,
or you can go to cloudguru.com.
Well, let's do a little bit of housekeeping around here.
It has gotten awfully filthy, probably Brent's fault.
Hey, now.
I want to mention you can join the conversation
and check in with the team over on our Telegram channel.
That's at jupyterbroadcasting.com slash
telegram, and we are always looking for your feedback,
your ideas, suggestions, anything you
want to send us for the show linuxunplugged.com slash
contact.
Our meetups, which include the Denver and Salt Lake City
meetups, are at jupyterbroadcasting.com slash
meetup.
And we do have the LoveLog I want to mention.
And Minimac, it sounds like there's
a lot going on these days.
Yeah, thank you, Chris.
So all I can tell you that the LoveLog community is doing fine
every Sunday on Mumble, and it's really great to see
a lot of people from all over the world.
I can tell you, we have new listeners or new participants
joining us from the Philippines and Australia.
And you have to imagine, for them, it's early in the morning.
So it's also nice, by the way, to see Wes, Poppy, or you
from time to time.
So thank you all.
The cool thing is in LoveLog, everything can happen.
Like last Sunday, we had an online tutorial
for user kernel on his PinePhone.
And that ended up in a git commit for the J package
on Manjaro.
But as Colonel is here, he can talk about this story, Colonel.
Yeah, so I've been playing with the PinePhone
with the Manjaro base image with Plasma Mobile on top.
And I wanted to install something
that wasn't in the Manjaro ARM repos, which then, of course,
means AUR.
Yay is the default arch helper installed for Manjaro ARM.
However, when you install it, it didn't
install the development packages,
which is required for AUR.
Well, one of the maintainers for the Manjaro ARM repo
was there in LoveLog, and he made that a dependency.
And now, when you install Yay, it automatically
installs that.
Well, that sounds fascinating.
Sounds like if you tune in at LoveLog on Sundays,
there always could be some geeky stuff going down.
We have the time at jupitabroadcasting.com
slash calendar, and the mumble info at linuxunplug.com
slash mumble.
So as I hit the road, I will be tracking my trip
at colonytracker.live, and I invite you to follow me there.
And if you are on the road in my area,
if you're in that neck of the woods,
we're going to have a link that you can click on
at colonytracker.live to start a meetup with me,
a little micro meetup, even if it's just you.
You want to hang out?
Maybe we'll talk about Linux.
I don't know.
Micro meetup?
Do you have any preferred micro meetup location types?
Easy to accommodate a large vehicle.
So I created this form for people
to fill out so I can kind of like try
to suss that information out.
So that way we have like a landing spot for dupes.
Chris also doesn't mind proximity to chicken wings.
No, that's true.
And then what I'll do is I'll send Brent in to suss him out,
you know, like he'll head in first.
I'm really looking for lakeside or even rivers will do.
Sure, yeah.
Anywhere that's got drinks would be nice too.
Why not?
Mr. Payne, we have a last minute pic coming into the show.
I'm being told by the control room
that this could be really useful for people that
maybe have duplicate images.
Yes, indeed.
I thought we might have something visual inspired
since we've got photographer Brent in the house over here.
OK, so it's pretty easy.
There's lots of great Linux command line tools out there,
or not command line even, to go filter duplicates
if it's just the same hash of the file.
That makes sense.
It's pretty easy to go find an actual duplicate.
But what if you are someone doing a lot of visual things?
Maybe, honestly, this comes up for me
because I'm using Photopea and downloading a bunch of copies
where I've made modifications.
Or just recently, I was making a GIF to embarrass a friend.
And so I had a whole bunch of similar files.
I didn't need all of them, right?
But they weren't exactly the same.
They were saved different times, exported
different JPEG resolutions or something.
That is where image dupes come in,
because it can find near duplicate images
based on a perceptual hash.
So it uses Python and some machine learning type
algorithms to try to give a score perceptually
based on what the image looks like,
not just the bits in the file.
Boy, it gives a whole new meaning to perceptual hash,
doesn't it?
Wow, that's awesome.
We'll have a link to that in the show notes.
I could see that.
Could be really useful just to run over my library.
I wonder if we would find slight crop variations and stuff.
That's a good question.
We'll just have to try.
We'll have to try and find out.
Yeah, it was a late last minute addition to the show.
And we thought that'd be a good one
to mention, because like Wes said,
that photographer guy is here.
Hey, you know what, though?
Even though we're on the road, the show
is still going to be live.
Somehow, I suspect, you can always
follow at Linux Unplugged or at Jupyter Signal
to get live information, or go to the calendar page
at jupyterbroadcasting.com slash calendar.
In fact, the entire slate of shows is going to continue on.
We're going to attempt to produce all of them
from the road, I say, with some trepidation.
And you, dear audience, get to find out how
that goes right along with us.
Yeah.
Oh, oh, oh, oh.
Linux Action News episode 200 just landed this week.
It sure did, didn't it?
And this was a fun one, because through a series of rabbit
holes that Wes and I found ourselves
going into researching news items,
we came into this story about how big hyperscaler companies
are building and loading and buying out
international cable links.
And the scale of it is unbelievable.
Just hundreds of terabits of information
flowing per second.
Yeah.
And so we report on what we found in Linux Action News 200.
So if you haven't heard that one yet,
it's a great time to jump in on LAN or send it to a friend.
That's linuxactionnews.com slash 200.
Brent, thank you for joining us for a special episode.
Are you ready to get crammed into Lady Joops?
Well, I like small spaces, so I think we'll be OK.
But who knows?
We're going to have to see how it goes.
You're already helping me organize, though.
Brent has me like every piece of production equipment
that's got to go.
It goes right now on the coffee table in the studio.
Everything that's got to go goes on the table.
At least once an hour since I've landed here,
we've noticed like, oh, we've got to remember to bring this.
Oh, we've got to remember to bring this.
Let's put this on the table.
If it's not plugged in right now and making this show happen,
then it's on the table.
That's pretty much it.
Then we will be live on Tuesday at noon Pacific, 3 PM Eastern,
over at jblive.tv.
See you next week.
Same bad time, same bad station.
And links to everything we talked about today,
that's over at linuxunplugged.com slash 417.
Dah!
That's my.com.
That's how I say.com now.
It's kind of pirate-like.
It's very efficient.
Yeah, I think as I get older, I want
to go more towards the pirate direction, just in general.
Less prospector, more pirate now?
Yeah, yeah.
I've done the prospector thing.
I think pirate's where it's at.
Next step, peg leg.
Yarr!
Thanks so much for tuning into this week's episode
of the Unplugged program.
We'd love to hear from you, linuxunplugged.com slash
contact.
But either that or not, even if you don't go there,
if you just listen, you know what?
We appreciate it.
We appreciate it.
We'll see you next Tuesday!
Thanks so much for tuning in.
Yes, it is hammer time.
Feels actually like dance time.
I see all of us grooving in the studio here.
We are.
Doesn't matter how many times we hear it,
we still groove to it.
So how have I have how the mighty have fallen?
I have gone from the guy that could record four or five
beers tasties in a row, to I have one Canadian six
and a half ABV, and I can barely get through the outro.
It's that Canadian water they brew with it.
Is that what it is?
Jeez.
Fresh from the Canadian Rockies.
Tell you what, it is actually.
Oh, man, we're going to be going over the Rockies.
I know.
It seemed appropriate.
And the damn Cascades.
No, Chris, you know what?
It's because you're not used to hanging out with people
anymore, and it tired you out.
And it's hot.
During the interview, we had the air conditioner
going, but it's like you get like five minutes of reprieve,
and then it's hot again.
Hot studio, cold beer.
And it's only going to get worse because I'm
driving into the heat.
So it's only going to get worse.
