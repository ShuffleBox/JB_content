Going back to Popey's argument about filing a bug,
this is not one I think,
and I don't know, maybe it's my bias.
I've been around for a while.
This is not one I think is worth my time.
Because it's-
Yeah, that's what I heard for six months
from the people complaining about wireless on 1604.
I disagree with that.
I didn't actually have that problem, but that would've been-
Oh my God.
That would've been one that would've been.
But that's exactly the problem.
Like not everyone had this problem.
There were people like very close to you
ranting about how wireless on 1604 was completely busted
and everyone should avoid it on 2604.
It turns out, no, it's not busted for everyone.
It's not busted for anyone in Canonical.
It's only busted for certain select people
with certain chipsets in certain environments.
That's crazy.
Those fuckers wouldn't tell us
what the details of that system was.
If you don't tell us, we can't fucking fix it.
I think this is a real problem.
I think the core problem that that issue,
the thing is, is I'm not gonna spend my time.
I'm not gonna spend, I'm not gonna, like I said,
if I'm working 65 hours this week,
I'm not gonna work 67 hours
so that way I can report a bug
and then watch them tell me it's an Nvidia problem.
I'm not gonna do it.
Doesn't Canonical maintain a list of certified hardware?
We do, yeah.
So if you're buying outside of that list,
but you don't wanna spend time there to report the issues,
like that's kind of seems like.
Also, it's a bit cheeky to say
that you're not willing to put in the extra hours
when all these people who are working their day job
and then in their spare time, in their evenings,
are working on open source projects.
I agree.
I'm just telling you, I think that's what's happening.
I think that's it.
And I think that's just human nature.
People are, they're at their wits end with so many things,
especially in the US, that I think that's the issue,
is people are out of bandwidth.
That you gotta buy the certified hardware.
Right, I mean, there's a little, and there's other,
I mean, there's a lot of different answers,
but I think the core problem
of people not reporting what's going on,
like they're not gonna get a bug report from me on this.
I'm just gonna either move on or, you know,
I don't know what.
So this is one of the reasons,
and it's a slight change of topic,
but this is one of the reasons
why we want that crash reporting information from people.
Cause it's not just like, you know,
weirdness that happens on your display,
but when shit crashes, we want to know about that
so we can fix it.
And we know there are plenty of people.
I can sit here and berate you
and encourage you to file a bug,
but I know there are, for every one of you,
there's a hundred or a thousand,
or maybe a hundred thousand people who will not file a bug,
don't know how, didn't know it's even possible, right?
But if under the covers, when something crashes,
if we can, in a tasteful way, take that crash report
and aggregate it with all the other crash reports
that are similar, and we can analyze that and say,
okay, we've got a problem.
We need to fix this thing.
We don't even ever have to interact
with human beings out in the field.
Which is how it should work.
Fix that code, right.
But not everything is a crash, right?
And what you're experiencing is not necessarily a crash.
And that's the problem, is not everything can be captured
and fixed via crash reports.
Well, this is my long way of saying
I'm switching to elementary OS.
Sweet. Boom.
Awesome.
You know how many-
You're still gonna have Nvidia problems.
So don't fuck it up, Dan.
May you have a nice time and the Nvidia RNG gods bless you.
I'm just worried you're gonna screw this whole thing up.
You got a good thing going, that's all.
So just keep it going, Dan.
Don't mess things up.
Or thinking about putting an Amazon search in.
Oh yeah. Oh, that would be so handy.
Yeah. Yeah, good.
That's great timing.
Generates revenue, mate.
Whatever you might think, it generates revenue.
This is Linux Unplugged, episode 244.
Welcome to Linux Unplugged, your weekly Linux talk show
that's sitting in front of so many Linux rigs,
I'm starting to lose track.
My name is Chris.
My name is Wes.
Hello, Wes.
That's a little bit of a behind the scenes joke,
I suppose. It sure is.
But I'll tell you what, Wes,
everything we have to talk about
is gonna be in front of the scenes this week?
Out in the open.
Wes and I are gonna be out in the open
coming up really soon.
We'll tell you about where you can come hang out with us
and perhaps watch a live taping of this very show.
ZFS on Linux has a bit of a butterFS bug.
We'll tell you what's going on,
and no, it's not actually that bad.
And Steam Machines are perhaps not so dead?
We kind of got down on Steam Machines last week,
so we gotta follow up on that.
NVIDIA is taking away your cookies,
and there's a new tool out
that let's just say it's gonna make your stuff look better.
It's gonna make your stuff look better.
The stuff you back up,
the stuff you back up off the web
is gonna look better with this.
I'm not gonna say any more than that
because the copyright lawyers may be listening right now,
but we'll move on.
Then later on in the show,
we have a new segment called Plasma Corner,
which changed a little bit before the show started,
but we'll talk about Plasma Vault,
which is a really sweet Plasma applet
that gives you a front end to creating encrypted vaults
and some new features that are coming to Plasma Vault
really soon that I think you're gonna love,
and then we'll discuss, I think,
the only dock you should be using
if you should so choose to do so on the Plasma desktop.
Now, I'm not saying you should.
I'm not saying you should, but I found a dock,
replaced my Plasma panel with it, and I'm loving it.
I'll tell you about that,
and then we'll talk a little bit about Falcon,
a cross-platform QT web browser
that, not bad, it's not bad.
So how about that, Wes?
That is a full show.
That's some things, that's some things.
Let's get into it.
So let's not go any further
without bringing in our virtual lug time.
Appropriate greetings, Mumble Room.
Hello. Hello.
Hello.
Hello.
Hello.
Jeez, hi, guys.
It's good to be connected with all of you.
Thanks for being here.
I wanna just start the show out with a plug skis
for Linux Fest Northwest 2018,
which will be April 28th through the 29th this year,
and Wes and I will be there,
as well as many others from the Jupiter Broadcasting crew,
including Noah and Alan Jude and Angela and others.
We'll be doing some live shows from there.
We'll have a booth.
We'll have some swag.
We'll be chatting with people.
We'll be drinking beers and hanging out
and doing all the things you do when you're in Bellingham.
So join us there, Linux Fest Northwest.
You can find out more at linuxfestnorthwest.org.
Just a little bit left.
I think, just a little bit of time left,
but I think not so many rooms left.
So that's why I camp in the parking lot in my RV.
Linux Fest Northwest 2018.
Go check it out, linuxfestnorthwest.org.
It looks like it's already the biggest Linux Fest this year.
I mean, this year's already the biggest.
You know what I mean?
It's the biggest one yet,
because they've sold out of all the things,
and we'd love to see you there and hang out with us.
I think that'd be a lot of fun.
I'm looking forward to it.
We may just try, I don't know.
We may just try to do like a weekend edition of this show,
and do it live there at the Fest.
That'd be a lot of fun.
So stay tuned for that, linuxfest.org, if you wanna go.
And I may try to make it down
to Southeast Linux Fest this year too.
So may see you down there as well.
There's other events coming up,
but I think Linux Fest Northwest is one of the best,
and Bellingham is a ton of fun.
Just before the show, Wes and I were talking
about how much we're looking forward
to just going back to Bellingham.
It's just a great place to hang out.
It's such a wonderful place.
It's a college town.
There's a lot of different breweries there.
There's just a lot going on.
It's a cute quintessential Pacific Northwest place.
All right, so now let's talk about destroying your data.
Now that that's out of the way, you know me.
I'm a pretty big fan of the ZFS,
but you knew this day was coming.
You knew a reckoning was in the works,
and let's be honest, you still rolled the dice.
I've never installed GNU slash Linux.
Okay, well now not all of us have rolled the dice,
but there is a disappearing files issue
on ZFS on Linux right now.
On certain distributions, and I want to do a breakdown
just so you can be aware of what's going on.
The ZFS team is already well aware of it,
but if you are on ZFS version 0.77 on say like CentOS,
you should absolutely seriously consider downgrading to 7.6,
or if by the time you're listening to this,
7.8 is available upgrade.
Gen2 is also affected.
Ubuntu and Debian users are not affected
because they are on older versions of ZFS.
Ubuntu specifically is on version 0.75,
but it's a regression that's been introduced in ZFS 0.77
on some Linux systems.
It's sort of complicated,
but it's kind of a combination issue
as a lot of times these problems are.
It's a combination of a change
that was made in GNU core utils
in the way that CP works, yeah,
and a patch that was made to ZFS,
and the two things collided.
So I talked to Alan Jude last night,
and he says that, he went through this whole thing,
and he's been kind of been following this from day one.
The team's been working on this.
They're already working on the patch.
He says they found part of the problem
is based on a change to core utils,
but it doesn't go to,
and that's why some people can reproduce the problem,
some people couldn't.
So you had to have a certain version of ZFS,
and you had to have a certain version of core utils,
but in the version of core utils that CentOS is using,
there is a hard limit that was accidentally introduced
with a recent patch to ZFS.
They limited the attempts to expand the ZAP,
which is the, when I asked Alan,
what the hell, Alan, is a ZAP?
It's the ZFS Attributes Processor.
It's basically, yeah.
Well, of course, Chris.
Yeah, so the ZAP is a ZFS Attributes Processor
that's basically a key store value, yeah, okay?
And it's how directories are stored in ZFS,
and this bug that was introduced
limited the attempts to expand the ZAP to two,
which is not enough.
And so that means two attempts.
And so when you're copying thousands of files,
after a couple of attempts, it would just say,
oh, can't do it anymore,
and it would just start dropping the files, essentially.
And so the ZFS team, Richard Yao, is a part of this,
is working on the fixes.
We've dropped everything.
We have a dozen people around the world
who are working on this.
We have a fix.
We're kind of narrowing in on the exact circumstance,
because you had to have a certain version of core utils,
you had to have a certain version of ZFS on Linux,
and you had to be doing a certain kind of copy of new files.
This didn't impact existing files.
And some people had to test, like, does it matter
if I'm in a mirror?
Does it matter if I'm in a RAID, you know, whatever?
Like, all this different testing had to happen,
but you can watch, we'll have a link in the show notes,
you can watch them work through this
over the process of days as they narrow it down.
I asked Alan, like, what triggered this upstream change
in ZFS that accidentally triggered this zap limit?
And he says, well, they were actually just trying
to make some changes to how it all worked
on a case-insensitive file system.
Yeah, optimizing for a totally different case.
Yeah, and then that's what caused all of this.
And it really shows you what a house of cards all of this is.
So the moral of the story is, if you're on Gentoo or CentOS
or Scientific Linux or Red Hat Enterprise Linux,
you need to either be on ZFS 7.6 or ZFS 7.8,
and you won't have this issue.
So that's my breakdown of it.
Unfortunately, there's really no other coverage of this,
so I can't link you to, like, a Ferronix post
or anything like that.
This is it.
We had to do the original reporting on this for you,
but all of the information, including a better description
and quotes from Alan Jude, are in the show notes.
If this impacts you, if you're using this in production,
just go to linuxunplug.com slash 244 for that information.
I mean, it says a lot that this is the first thing
of this scale we've seen for a long time
with our handy-dandy friends in ZFS.
The other thing that was really fascinating
is because all of this is on GitHub,
so all of the GitHub utilities are immediately put into play.
Like, they're finding the exact commits,
like, they have the code highlighted,
they're linking everybody to it.
It is fascinating to watch.
Yeah, everybody's on the same page.
So you can say a lot of things about GitHub
and about open source projects being on a commercial platform.
Boy, was that useful, tracking this thing down.
You could really see how the team was just busting
through this at a breakneck pace, figuring it out.
And then to really see Richard Yao,
just to mention to Richard Yao,
who is really just tackling this thing.
He's just being a real leader in this situation,
and he's going to the Hacker News and Reddit comment threads
and he's answering sysadmin's questions
that are in there saying, so this is my scenario.
Do I need to worry about this?
And he's specifically addressing their exact questions
while he's working around the clock
to help the team get the patch together, so.
It's impressive.
It's unfortunate, and it shows you that even things like ZFS
are not, you know, infallible.
And of course, Alan had to get a dig in there
that it only affects Linux.
Of course.
You're welcome, Alan.
I made that into the show.
Anyway, so if you're running ZFS on Linux,
you need to know about that.
We wanted to let you know.
Just a little bit of heads up here on the Unplugged program.
And we got links to everything in the show notes
if you want to see the whole thing or where the exact,
I'm showing it on the screen right now, that exact,
right there, right there, that's it.
Oh, don't do it, no.
I know, that's it.
Now everybody's been infected, Wes.
Oh no!
Oh wait, it doesn't work like that at all.
But you know what does work like that?
An idea, an idea like Ting.
That's right, linux.ting.com.
Go there and get $25 off a Ting device
or $25 in service credit.
That'll probably pay for more than your first month.
I brought over one of those old EVO 4Gs,
you know, the ones that had, what was it?
WiMAX.
WiMAX, yeah.
And I was like, I had no use for this thing.
So I brought that over to Ting and I'm like,
all right, well, you know what?
We'll give you $25 in service credit.
I'm like, wait, what, really?
Like, yeah, just put it on that device
and see what you think for a month.
And you know, I'm like, a month?
All right.
At the end of the month, I hadn't even used all $25.
And I was like, oh, oh, I get it.
I get it now.
And you can too, linux.ting.com.
It's smarter than unlimited.
If you use less, you pay less.
$6 a month for your line.
Then your minutes, your messages, and your megabytes.
Whatever you use, that's what you pay.
And they have a nationwide networks, GSM and CDMA,
no contracts, no other termination fees.
That's what I love about Ting.
And you're in control all of the time
from the control panel to the great customer service
or if you wanna use CDMA or GSM.
And because they support both networks,
you probably wanna check their BYOD page.
They probably support a device you already have
and then you can really save some money.
But if you don't wanna use an old device,
you wanna get something new,
they got a sale going right now on those motos,
those moto devices, like three or four different
moto devices that are really nice.
So go check those out,
cause those are great value and it's no contract
and you're just paying for what you use.
linux.ting.com.
You go there to support the show,
get the $25 in either service credit
or off a hardware device, which that's a great deal.
And then you're good to go.
You start going and you see, you know what?
This is a totally different way to do mobile.
You'll see it.
And it's like the veil has been lifted,
you're woke all of a sudden.
You're staying woke over at Ting.
They gotta take that.
They stay woke at Ting.
linux.ting.com.
A big thank you to Ting for sponsoring the Unplugged program
and go check it out because it's really,
it's a totally different way to do mobile.
It's a better way to do mobile
if they had to hit the reset button today.
That's how they do it.
linux.ting.com.
My millennials, stay woke.
So go check it out.
All right, so Mr. Daniel Foray, as he is one to do,
joins us here on the show, which we always love having him.
And this week he talks about something
that's near and dear to my heart,
because you've often, if you've listened to this show
or Linux Action News, you may have heard Joe say,
Chris, you ought to just use XFCE.
Oh, you having some plasma problems?
I feel bad for you, son.
Oh, gnome's getting a little weird on you?
I feel bad for you, son.
You ought to just use XFCE.
And I'll sit here and go, Joe, I don't want to use the damn XFCE.
I'd rather go back to the 90s.
So this is a conversation that happens all the time.
And part of my reluctance to go to i3,
which is great, or XFCE, which is fantastic,
but my personal reluctance, it's just
this dumb thing of somebody I think
that's unique to somebody that's probably my age
or around my age, and that when I started using computers,
you could only run one application at a time.
My first computer got hooked up to a television.
I put cartridges in my first computer,
and it could do one thing at a time.
It was delightful when I could make the damn thing beep.
So I've just been through a lot of iterations of the shit pile
that we call modern technology.
And I've been through a lot of promises
about the next great thing that's
just around the corner that's going to finally make
the computer better and finally make it user friendly.
And I've been listening to that promise since I could read,
since I could take in information.
I am just at a point in my life where
I'm done with computers being below a certain standard.
And it doesn't mean I'm a Mac user
or I'm some Windows 10 power user
writing PowerShell scripts.
It just simply means I've been through iterations
of this entire industry now.
And I've gotten to a point where I just
expect a certain standard of living on my desktop
environment.
And it's not that I couldn't make do and go camping in XFCE
and be totally fine with a weekend in I3.
It's simply if I'm going to build a home
and I'm going to live there, I got a certain standard.
Because it's where I live.
And it's just XFCE, I3, these other desktop environments
are simply unappealing to me in that regard.
It's nothing about the excellence of the projects,
the functionality that they serve for other individuals.
It has no statement on your use of them.
It's simply my esoteric preferences
as somebody who has gone through the life experiences
that I have.
So I am really at a point where if it's not
of a certain standard that's my own personal standard,
I'm not interested.
And that's why I'm on Plasma right now.
That's why I stayed on GNOME 3 for a really long time.
And it's why I follow the elementary project
with keen interest.
And they really kind of hit my note this week
when they started talking about improving
the look of the applications and start
talking about building the next generation of applications
for their Linux desktop.
And this is something that they've been working on
for over seven years.
And they've introduced multiple generations.
And it's really something to see.
So I'm going to put a link in the show notes
to encourage you to go look at the screenshots.
Because visually, it's, again, one of these posts
where you could just really see the progress visually.
But there's so much more than just the visual aspects of it.
So Dan is joining us.
And I loved this post, Dan, because you start out
with Generation 1, which is really
the first version of an elementary OS,
like the best shot for a new team.
And they were pretty good.
I think maybe that's where some of the early criticism
about design copying came from.
But GTK2 was limited.
And you could only get so far.
But now in 2018, we're in a totally different place.
One of the things that I think is kind of central to the story
that I wanted to present in this post
is that when we first started out,
we didn't really know how to be a good code shop.
And we actually went to the Ubuntu Developer Summit.
And we wanted to pitch some of our apps
for being included in Ubuntu.
And one of the Unity developers kind of sat us down
and gave us a talk.
And he was like, hey, listen, you guys are bad at coding.
And he told us all the things we were doing wrong
and how to step up our game.
And we came back from that.
And we picked a standard language.
We created code style guides.
We started doing code reviews.
We started getting really serious
about the quality of the code that goes into our applications
and not just what goes on top as far as design.
Yeah, and boy, do I appreciate that as an end user.
That's why I did this whole setup is I think this is the solution
to the problem where I've seen these promises over and over
again.
And then we do these hard resets,
or we have these big focus changes.
And what is clear now, especially
as we're getting close to the next release
of elementary OSes, you guys have really
been on a trajectory where I'd say it's refining focus over
and over again.
And you could definitely see it in Gen 2 of your applications.
They're solid looking.
They're GTK3 by Freya.
Is that true?
Yep.
So you give us some hints where things are going.
So where do we go in Gen 2 to Gen 3?
What kind of is the next thing that we
might see in future versions of elementary OS
that may not yet be released?
Where is this going?
So one of the big things that happened
is we came out with App Center.
And when we did that, a focus for us
was making sure we had a lot of automated tests in place
so that when developers submit their applications,
we could run them through these tests
and get their apps published very quickly.
And when we did that, we kind of set a set of standards
for them as far as naming.
We forced developers to use the reverse domain name notation
so that, for example, their binaries and the names of files
like.desktop files or AppStream data files
all follow this RDNN notation, where it's like com.github.username.
So what's the benefit there?
That sounds good, but what's the benefit?
So the point of this is to ensure
that we don't have any sort of naming conflicts,
not only when developers are publishing their applications
on elementary OS, but also when we're talking
about upstreams, repackaging.
Yeah, I bet.
And this is something that the GNOME team has embraced as well,
and it's pretty common on Android and other platforms
like that.
So we're going to a point where not only are we
enforcing this for all of our third-party applications,
but we want to practice what we tell other people to do.
And so all of our first-party applications
are going to be using RDNN from now on as well.
Can you expand on that a bit?
So you're working with GNOME, or it's kind of the same thing,
or what's that about?
I think it's more of just kind of a de facto standard
that everybody's moving towards as we realize
that we want to have this world eventually where we're shipping
not just like a few thousand applications,
but where we have millions of applications, right?
And in order to get to that world with the constraints
of file-based package managing, we
have to make sure that these files do not
conflict with each other.
Well, I'm glad you're thinking about it, that's for sure.
The hype train, it's successful, this one.
I mean, just think of it.
I got a machine that's destined for this.
I think that's the case.
Well, Dan, is there anything else we should mention?
Well, real quick, I do want to plug
that there's a bunch of other stuff
that we talk about that people can check out
in the article, which you said will be in the show notes.
But I want to make a point that our continuous integration
suite that we've developed for App Center,
we're now making it available as something
that you can run through Travis CI on your own projects.
So anybody can use this full testing suite
that elementary is working on, even if you're not planning
to publish in App Center.
Thank you for mentioning that.
That's great.
Yeah, no kidding.
That's totally worth it.
We were just talking about Travis CI.
That's so cool.
Yeah, all right, so that's good.
That's definitely great, so check that out.
The link, like you said, is in the show notes.
And now I want to just kind of, just
from a big picture perspective, how do you, as a project,
how do you feel like, yep, this stuff is ready to go.
You must have a lot of people besides yourself testing this,
maybe a small group, 10 people, 1,000 people.
How does the beta process work for elementary OS?
Yeah, so right now, we're kind of in a pre-release state
where we just have some builds that we're running internally.
And we just publish those on our Slack
channel, which has a little over 100 people in it,
I think, right now.
And so we've got a small group of just developers testing.
We have projects up on GitHub, which you can actually see.
It's a public project where we're tracking regressions
and things like that.
And so once we get through those tasks
and we feel like we've handled all the regressions we
know about, then we'll go to public beta.
And that'll be an open public beta anybody can download.
And then we'll figure out from there
how much we have left to do before we
can do final release.
I'm excited to hear that.
Well, neat.
Well, thank you for coming on and explaining this.
I like the fact that you guys.
So it's called FlightCheck.
Is that what it's called?
So that's the name of the component.
The full application is called Houston.
Houston.
Yeah.
Love it.
And so this part, we're calling it Houston CI.
OK.
That's great.
And you're making it available for anybody
if they want to integrate into their projects.
That's so cool.
And this is all regular open source standard stuff.
Like this checks, validates metadata for.desktop files
and app data files.
And it does a lot of good open source citizen stuff.
And we're looking to integrate tests
that other platforms use.
Like the Debian maintainers have a good set of tests
that they use for packages.
So we really want to make sure this is all
open source standard stuff.
That's fantastic.
Yeah.
And it's using computers for what they're good at,
which I'm always a fan of.
It's like, might as well if you can.
If you can have some of this stuff tested for you
statically, even if it doesn't replace actual testing,
it's just another data point.
And it's pretty valuable.
It's good to hear.
That's good to hear.
All right.
Well, last week, we may have reported too soon.
Steam machines were dead.
Although I'm actually not sure it's not the case,
in my personal opinion.
But Valve took to the web after last week's episode
and said, we've noticed that what started out
as a routine cleanup of our Steam store, where we removed
all links to Steam Machines, all references to Steam Machines
and SteamOS, and buried them, we noticed that some of you
interpreted that incorrectly.
I may have editorialized it a little bit.
Wrote a little bit, yeah.
I may have a little bit of editorializing.
But while it's true Steam Machines aren't exactly
flying off the shelves, Reed, we haven't sold any
for the last couple of months, our reasons
for striving towards a competitive and open gaming
platform haven't significantly changed, Reed.
We're working on fundamentals.
We've taken a lot of feedback and have been heads down
on addressing the shortcomings we've observed.
Reed, Linux was a bit of a dumpster fire.
Nap.
Taking a nap, for sure.
And we think an important part of that effort
is our ongoing investment in making Vulkan a competitive
and well-supported graphics API, as well as making sure
it has first class support on those platforms.
I think that's great.
I completely think that's great.
I think that is true.
And they say now, here's the part that got my attention.
Tell me what you think about this, Wes.
You ready for this one?
They go on about how we're continuing
to invest significant resources in Vulkan ecosystem and stuff.
But then they just throw this in as one sentence.
It's not even a complete sentence.
They say, we also have other Linux initiatives in the pipe
that we're not quite ready to talk about yet.
Fascinating.
What does that mean?
What now?
We have other Linux initiatives in the pipe.
Not the pipeline, the pipe.
The pipe, yep.
That we're not quite ready to talk about yet.
Maybe they're stuck in the pipe.
That's why they can't talk about them.
They need to get them out of the pipe.
I think it's VR on Linux.
That's what it seems like, right?
I mean, what else could it be?
Does anybody else in the Mamba room
have speculation on what might be in Valve's pipe?
What could be in Valve's pipe that's regarding Linux?
It's not SteamOS, it's not Vulkan,
it's not the Steam client, it's not the Steam controller.
Steam TV.
Maybe.
Steam Kodi?
I would so be down for that.
If SteamOS could be Kodi, basically,
with SteamOS, Steam integration, that
would be such a product for me.
Halfpipe 3.
All right, so nobody's got any ideas.
You guys are no good.
What a mystery.
It is a bit of a mystery.
What would Valve have in their pipe?
So let us know, linuxunplug.com slash contact,
and send us in your ideas for what might be in Valve's pipe.
I don't know.
I'm thinking it's VR or AR.
And sort of as a related note, screw you 32-bit users.
NVIDIA is giving you the middle finger this time
and is ending support for 32-bit OSes.
It's not just Linux users, it's everybody.
So it's equal screwing.
The times, they aren't a-changin'.
Yeah, they're going to halt GeForce GPU driver
support at the end of April, meaning
users will lose access to new GeForce experience
features and game updates.
But more importantly, and you got a little more runway
on this one, NVIDIA will end security updates January 2019.
So you can continue to use your 32-bit OS with a GeForce card
at least until 2019 and get security updates.
And then really, in theory, you could keep running it
probably for a lot longer.
It's just there's going to be security things
that they won't fix, like, I don't know,
new versions of Spectre.
I'm not sure what that would be, I guess.
I mean, what kind of security?
Actually, I take that back.
Now that I think about TechSnap, there's
been a few stories where NVIDIA drivers have been involved,
including even running cryptoware on the NVIDIA GPU.
Oh, no.
Yeah, but Wes and I were just talking
about all kinds of speculative execution attacks
on the TechSnap program.
That'll be coming out later this week,
TechSnap.systems slash 363, I think it was, if you want to.
I think you're right.
Yeah.
And speculative execution, turns out,
is going to be a fun bag for lots of people.
And we talk about some of the new exploits in that episode.
So let's now talk about DigitalOcean,
our sponsor for this week's episode
of the Unplugged program.
DigitalOcean is what I use for a lot of our back
end infrastructure.
We're recording portions of the show using DigitalOcean.
We're streaming portions of the show using DigitalOcean.
In fact, the bot that manages our titles
is using DigitalOcean, Wes.
It sure is.
Talk about jog foodin'.
Yeah, we really do.
And it's because it's great infrastructure.
You can deploy in seconds, and it's super fast.
You can develop locally and deploy globally.
DigitalOcean, go to do.co slash unplug to get a limited 60
days.
But yet, it's kind of great.
$100 credit.
I can't believe I even get to say that.
You have to go to that URL, do.co slash unplugged.
That arms your web browser with the knowledge
of the $100 deal.
Once you create a new account, you get the $100 deal.
I think you might have to have a legit credit card on file,
although I don't know if that's actually true.
But you do get the $100 credit if you
go to the do.co slash unplugged, and it's a new account.
You create the account, and then you can really play around.
Because really, my favorite system is $0.03 an hour.
And so when you think about $100,
I mean, you could really try out their new high CPU droplet.
You could be like Westpain and be spinning up VPN systems.
All the time.
What's the last?
Do you remember the last droplet you created?
It's got to be sometime earlier this week.
I know.
I know.
We'll be sitting here discussing an idea for the Tech Snapshow,
and we'll be like, well, let's go spin up a droplet
and try that real quick.
It's like, OK.
That's a great idea.
And that's what I love about it, because it's so fast.
They have a really easy to use web interface,
a super straightforward, well-documented API,
and then just tons of well-constructed documentation
on top of that to make it easy for beginners or experts
to go all the way with DigitalOcean.
You can deploy a single bare Linux rig
or an entire application stack.
They have tutorials.
They have a lot of community meetups, surprisingly.
That's a big thing I never actually
have mentioned about DigitalOcean,
is there is a large meetup community.
Seattle has some.
Wow, I had no idea.
Yeah, it's a big thing.
Fantastic.
Yeah, it's pretty cool.
There's all kinds of neat things about DigitalOcean.
We only get to touch on parts of them,
like the fact that they provide back-end infrastructure
for tons of the open source projects
that we talk about here on this very show.
And of course, the fact that they're
supporting, for a long time now, this crazy Linux
podcast that's barely structured that just talks
about frickin' Linux things.
I mean, that's just kind of great in itself.
Go to do.co slash unplugged to get the $100 credit,
and then play around.
Try out their flexible droplets where you can mix and match
resources.
It's pretty cool.
Do.co slash unplugged.
And a big thank you to DigitalOcean
for sponsoring this here humble Linux program.
So prominent Ubuntu community developer, Mr. Simon Quigley,
has joined us in the Mumble Room to talk about his proposal
to dramatically change the release cycle of Ubuntu's
early builds, like the alphas and the betas.
So Mr. Simon, Mr. Prominent Ubuntu developer community,
thank you for joining us on the show today, sir.
Actually, very much thank you for making the time.
I do appreciate it.
But what is the Quigley proposal?
Because Feronix tells me it's going to fundamentally change
the way beta releases work for Ubuntu, and I'm intrigued.
So right now, the way that milestones
work in Ubuntu, we have two alpha releases,
and we have two beta releases.
So the alpha 1 and the alpha 2, the first alpha 1
comes a couple months after the release cycle opens up.
Then a month after that, typically, is alpha 2,
and then there's a beta 1, and then a final beta.
And then from there, we get release candidates
and that sort of thing, and actually go into the release.
So with this proposal, as of right now,
Ubuntu Desktop and Ubuntu Server,
they do not participate in the first two alphas
and the first betas.
So basically, they've been, for the past couple release cycles,
not longer, they've been opt-in milestones.
So the goal here is to just evaluate
to see if these are still necessary,
to see if these are still something that we need.
So looking at the past release cycle,
we didn't have alpha 1 and alpha 2
because of the Spectre meltdown stuff.
Beta 1, well, Ubuntu had some issues.
Other flavors had a release, but otherwise, I looked at this.
I looked at what happened during this release cycle,
and I sort of analyzed to see what
the benefit would be to taking these optional milestones away
because, like I said, it's been optional,
and flavors really drive these.
So Ubuntu, Ubuntu Chillin, Ubuntu Monte usually
comes in around beta 1, that sort of thing.
So the goal here would be to just get rid of these milestones
completely, and instead of having a release cycle where
we have set release times, we would
have a coordinated testing.
Now, the advantages of this are with the milestone releases,
it's basically you could pick any day in a month,
and you could pick a daily out of that month's span
of dailies, the ISO, and you could label that beta 1,
and people would install that, but that's
an image that's frozen in time, and that's a blessed image.
But with the nature of Ubuntu release cycle,
things go fast enough that the next day, you
could have fixes.
So if you install beta 1 on a system,
you just update your system, and there's really
no advantage to having it frozen in time ISO.
So the main goal of this would be
to also make things a little bit faster
and make our automation a little bit better, because
at the moment, after I made this proposal,
someone followed up on the mailing list
and said that Ubuntu Desktop and Server,
while they don't participate in these initial milestones,
they do have some automated testing.
So they have some testing where it just
does some smoke tests that the flavors would usually
do manually.
So it's just overall just looking
at the different milestones that we do
and making sure that what we do and what we spend our time on
is useful.
So the goal of the testing weeks would also
be to coordinate everything together.
And while you're not releasing something,
it would also be an opportunity for flavors to announce changes
that they are making in the dailies
without actually having to release something.
Yeah, I like this idea of the test week or test weeks,
I suppose.
That's pretty clever, and I think
it's reminiscent of a hack fest in a way,
but it's protracted a little bit.
It's not quite as intense, and it sort of
elicits community participation and gives people
a time to focus.
And it's also, in its very nature, kind of a reminder,
hey, the next release is pretty close.
This is kind of your last chance to make sure
this thing's working right.
I like that idea, Simon.
And Michael Irobel liked it too, apparently,
because he wrote it up and tossed it up on Ferronics.
Seems like there's some decent reception so far.
Yeah.
Well, Simon, thank you for coming on and explaining it
in your own words, because I really like it.
When I hear your idea, and the other thing
I like what you're doing about it
is you're just kind of rethinking this process.
I think it's one of those things that is just sort of easy.
It's a decision that's been made,
and let's just move on and just get the job done.
And you're kind of revisiting something
that's been assumed for a long time and going, well,
why are we doing it this way?
What if we did it this way?
Right, and that was sort of the point of it,
just to sort of see if we can improve anything.
One other thing that I do want to mention is that,
I don't think I mentioned before,
is that it's the goal, because these are optional milestones,
the goal would be for, in my proposal,
the goal would be for desktop and server
and everybody to participate in these testing weeks.
So you would see, we would improve our automated testing,
but we would also have a wide variety of flavors
participating, rather than just a few people who feel like they
have something to release, like two or three people
release one blessed image, and then that's just put out there.
No, the goal would be for everybody to participate,
so we could all collaborate and we could all
work together on that.
I like that idea too, especially when
you've got these different flavors now that are beginning
more and more prominent, and more and more larger user
bases, so their feedback on some of this would be.
Get some critical mass and get some bugs fixed.
Exactly.
I have a question for you, Wes.
What is your process?
I mean, theoretically, I'm not saying
that Wes Payne, the actual individual, does this,
but Wes Payne, the presenter, theorizing,
in his personal opinion, what is your process for backing up
movies to, say, a storage medium?
Do you do this, and do you have a process?
You know, I haven't done it for a long time.
Back in the day, I'd certainly ripped some DVDs,
archived them, if you would say.
Do you now more rely on the public backup?
Yeah, or streaming services.
Yeah, that's what I primarily do too.
But I have picked up a few.
I'll tell you, there's a thing about the kids,
is they don't have a high preference.
Like right now, they're young enough
where they just don't care.
They just need something.
Yeah.
Kind of colorful and fun.
Family members are passing down a lot of DVDs to us,
and we're picking up some Blu-rays at Garage Sale.
Ange is always good at picking up, like,
she's part of these, have you heard
of these Buy Nothing groups?
No.
Oh, yeah, it's a big thing on Facebook,
especially with the people that are really kind of thrifty.
It's a real, it's a big thing in the rural towns
that are short.
They're saving some money.
Yeah.
People use some resources.
Yeah, so instead of throwing something out
that's still perfectly good, you put it up
on a Facebook group and say, hey, I got this thing.
And people, hey, I got this thing, all the time, right?
All the time.
So like a distributed Goodwill.
Yeah, I wanna get rid of all my young kids stuff
that we've had in the garage for the last 10 years.
Would somebody like to just come grab this?
It's distributed Goodwill.
It's P2P Goodwill.
And so you get DVDs, Blu-rays, you get all VHS,
all kinds of crap.
Sure, right?
Like a bunch of, here's a bunch of kids movies.
Have at it.
And my kids love all of it.
And you know, we just went on a spring break trip recently.
I took the kids down to Seaside, Oregon, and Lady Joops.
Loaded up Lady Joops.
And I am ridiculously proud of this.
And it's not even all of that elegant,
but I am super proud of the fact
that I can disconnect Lady Joops from shore power,
is what they call it, which would be like utility
from like the city, right?
You power.
And Lady Joops can go into battery mode.
And this transition does not interrupt the TVs or the land.
Ooh, that's lovely.
The land, the TVs, and the Black Server.
He just hot swappin' and boom.
They all stay up.
Not a blink.
I can fire up our on-board generator, and it can kick in.
And so technically, the entire, this is kind of a big deal.
The whole house will switch from DC to AC.
Wow.
And the TVs, the Black Server, the land,
the internet connection, all stay up.
So I'm pretty proud of this.
And it's just so awesome because we have these
built-in screens in Lady Joops, these flat screens.
And so when you're going down the road,
the kids can like chill on the bed,
like in the master bedroom, and they can like just,
quote-unquote master bedroom, it's a queen-size bed.
They can chill on the bed and watch TV
and do whatever while we're going down the road.
They're not distracting you while you're driving.
Yeah, it's great, it's great.
And so I wanted to get some of the stuff
that we collected recently into my Plex server.
Right, you already have a system.
You don't need to be hauling DVDs all around.
Side note, funny enough, Plex took a total shit on me
for an unrelated reason, because of an Android update,
and so I ended up just using Kodi, but that's a side note.
But I needed to encode a lot of this stuff.
I use MakeMKV and other tools to sort of encode this stuff.
But I needed a way to, or to get it onto my system,
but I needed a way to encode it.
And I'm a long-time Handbrake user, really like Handbrake,
because really underneath the scenes it's using FFmpeg
with just a bunch of same presets and stuff like that.
And they're using like good codecs, like x264 and stuff.
And so this week they've released Handbrake 1.1.0,
which has a total UI overhaul, a redesigned main window
with consistency that's just, I don't know,
I just think it looks a lot better, I'll say.
And I like the way they preview the video image.
They've redone the way you select presets,
no more old like kludgy drawer system.
It's an updated user interface, updated icons,
high DPI support.
They've added newer presets for Vimeo and YouTube
and in some TV playback boxes.
But there's been some nice,
actual specific Linux improvements too.
They've added an option to configure
a low disk space warning level, which this is nice
because I've actually, with this version,
we've moved over encoding the BSD Now program to Handbrake,
and Angela's doing this on Handbrake.
And so it's nice to have this,
because she has like that.
That's fantastic.
Yeah, she has like a bin that she sends these to.
And when that fills up, she needs to know.
And so this gives her a warning now.
That's just like the timing, it's a small thing,
but the timing was just aces.
They also added Intel QuickSync video encoding support.
It's experimental.
It requires a very specific version of the Intel driver.
So I haven't tried this yet,
but that could be great. That would be really nice, yeah.
That could be really great.
If it's meeting your quality, you know, nice and fast.
Yeah, and also check about,
check just that, just like being like,
just talk about being, that's what I'm trying to say.
Talk about being ahead of the curve here.
Official support for 1804.
Beautiful. Yeah.
Oh, it looks like they just, as we're covering it,
they just uploaded 110 to the PPA.
I wasn't there right earlier in the show.
Sweet.
Go get your hands on it right now.
Check it out. Sweet.
You know what, Wes?
That's officially like some Linux unplugged
breaking news right there.
Like we just broke a little handbrake news
on the unplugged program.
This is CNN breaking news.
Unplugged.
Breaking news.
Yeah, come on. Unplugged breaking news.
Yeah, and then there's been some updates
for something called Windows.
Not familiar with it, but we'll find out later.
No, that's why I look outside.
And Mac, which is something that McDonald's makes,
but they have some improvements too,
but they look like bullshit stuff
that I wouldn't want to use anyways.
Anyway, so handbrake, new release,
link in the show notes, super great.
And I use that, so once I got the,
so this is Chris's quick,
if I could just summarize my long story I gave you earlier.
My quick tip is use the right tool for the job.
So if it's a Blu-ray and a DVD, I recommend Make MKV.
Bring those onto your hard drive.
And then people have asked me a lot,
should I just keep that MKV
or should I re-encode it as an MP4 file
or something like an MKV file with an H.265 for video?
You know, having tested a lot of it,
X.264 at a high quality bit rate,
if you do two pass encoding,
I would challenge you to really see the difference
between that and what you rip directly off the Blu-ray
using Make MKV.
And there is a substantial, substantial,
substantial file size difference, substantial.
I would tell you to focus more
on what you're doing with the audio.
Are you doing pass through audio?
Are you re-encoding that audio?
Are you accidentally mixing down multi-channel to stereo?
Pay attention to that, my friends.
Because the number one question you guys are sending me is,
should I encode it or not encode it?
And you're not even asking me about the audio stuff.
Having tested this back, you know, from doing like,
I'm just taking the Blu-ray,
which is like an AVC H.264 encoded file.
Keep in mind.
Having taken that Blu-ray
and looked at just raw Blu-ray versions
versus re-encoded using Handbrake,
I really, I cannot tell the difference.
And I am particularly picky about that kind of stuff.
And I'm looking in like water scenes
where there's a lot of motion and fire.
I mean, I'm talking like, you know,
really paying attention to specific scenes
where the encoding should break down.
And it looks good to me.
So I really, I give a really, really hearty recommendation
to Handbrake and the presets that they have been including
because they've really tuned those presets
with this new release and the stuff just looks so great.
If you do the 1080p high quality, it will be double pass.
It will be good audio.
It's like, it's really what I think
a professional video encoder would recommend.
Yeah, my MB setup, it's not the beefiest.
So if I can get it to a format
that's like widely recognized already
and then just direct play, that's all the better too.
Exactly, that's another nice thing about this
is it'll let you target certain types of devices.
So if you knew you're gonna be playing it back
on a Roku, for example, you could target that device,
you could play it on MB, it'll do direct pass through,
nothing's getting double encoded.
It's the best quality possible.
That stuff really does make a difference.
So anyways, that's hopefully just answers
a bunch of questions that come into the show
and it's a really handy tool.
And it's something that we're now using on a weekly basis
for one of our Jupiter broadcasting programs too,
the BSD Now show.
Yeah, congrats on the new release.
Yeah, great software.
Yeah, and apparently a new new release, breaking news.
All right, well, let's take a moment
and talk about something new coming from Linux Academy.
They have a huge batch of updates in the month of April.
Linuxacademy.com slash unplugged.
Go there to sign up for a free seven day trial
and support the show.
It's an advanced training tool
that gives you all of the knowledge you need
for Linux and the things built on top of Linux.
A full featured training library.
They have hands-on scenario based labs
that they spin up on demand that you log in
over SSH to a Linux box and you start working
on the real applications and technologies.
You write the real config files.
You see the real results.
They have self-paced in-depth video courses
on every Linux cloud and DevOps topic.
And now in the month of April,
they are launching more than 70 new courses.
They got to do challenges and learning activities.
Wow. Wow.
I mean, that's a lot of new stuff.
Yeah, they're refreshing old content as well.
They're looking at all kinds of,
you think about Linux Academy,
they're always looking at all kinds of ways
to update the old stuff too.
So I often talk about the new content they're adding,
but I think just as valuable
is they're going back and retouching.
You always know you can go there.
You'll find stuff that's up to date.
That's nice.
Some refreshes across the course
where 50 new cloud assessment courses,
hands-on learning activities, and new challenges,
as well as they have a new real-time grading platform.
So you can get feedback as you're working on the lab.
You don't have to wait till the end.
That's great.
That's amazing, really.
That's so cool.
Fast feedback when you're learning easy resources.
It's just...
Yeah, and a seven-day free trial
when you go to linuxacademy.com slash unplugged.
They have study tools as well that you can download
and listen to and use offline
if you need to go offline for a little bit,
and a community stack full of Jupiter Broadcasting members.
linuxacademy.com slash unplugged.
That's linuxacademy.com slash unplugged
for that free seven-day trial,
and to support this here podcast.
So I want to talk about Plasma Vault.
This is our official KDE corner, if you will.
And Plasma Vault is an applet
and a set of services and backend services
that create encrypted vaults that are easily accessible
from the Plasma desktop.
Now, I do have a disclaimer that I have to make.
Before this episode started, about 10 minutes,
I updated to resolve another issue I was having on Plasma,
and after I did that update, I lost access to my desktop,
and I lost access to being able to add Plasma widgets.
Alls I have is a black screen,
and you can see my mouse cursor.
Oh, that's all you need for a nice desktop.
I can't right-click, I can't add widgets, so...
So minimal.
I was gonna tell you about this.
This is a really cool application,
but at this point, I actually would not be able
to access the vaults I'm about to get to.
So just so you guys are aware,
there may be some issues that could...
Why are you laughing?
The hackers are dropping malware into your system.
No, I don't think I was, I was not hacked.
It was an update, it was an update,
and it was my bad.
And I've been told it's related to my Nvidia binary driver.
No, say it ain't so.
It appears to be so.
The Plasma applet, though, called Plasma Vault
is pretty cool.
It doesn't really use anything that you couldn't bust out
on the command line and solve yourself.
It can do an overlay encryption file system
or it can do a whole volume.
And it's this UI that you add.
It can be a little icon down in your dock,
or it could be, or actually, I'm using a dock right now,
but it could be your regular Plasma desktop.
Or it could be a new widget on your desktop.
So you click on the widget.
You can say create new vault.
When you do that, you give the vault the name.
So like in this case, it might be, you know,
like LUP secrets or something like that.
Oh, so secret.
And you can choose your encryption.
I'm gonna do inc fs.
You could actually, I'll do cry fs.
Cry fs, which is kinda neat when you hit next
in their wizard, it comes up with a security notice.
It says cry fs, C-R-Y-F-S, encrypts your files
so you can safely store them anywhere.
It works well together with cloud services
like Dropbox or iCloud or OneDrive and others.
Unlike some other file system overlay solutions,
it does not expose a directory structure
or the number of files nor the size
through the encrypted data format.
But one important thing to note is that
while cry fs is considered safe,
there has been no independent security audit
which confirms this.
So they give you that disclaim.
Well, yeah, that's nice.
I think they know what you're getting yourself into.
You know, you put your super secret secure password
in there, so farts, and then you confirm that, farts.
Then next, and oh, I guess next is not a farts.
Type it in again because that's what I do, farts.
Hit next, and then you tell it where you actually want it
to store the volume.
Nice.
In this case, the encrypted data location
will be slash home slash chris f slash dot local,
so it's a hidden directory,
slash share slash plasma dash vault slash secrets dot enc.
So that'll be the actual path of my encrypted volume.
It'll be at a hidden directory in the dot local folder,
which is, and then it's pretty nested down.
You know, it's all the way,
it's down to a plasma vault folder.
And it mounts now to slash home slash chris f slash vaults.
So it's gonna make a vaults folder in my home directory,
and then in there, it will make a folder
called lup secrets.
And anything I put in that folder called lup secrets
will actually go in this encrypted volume.
Sweet.
Yep, so I do next, and I say go ahead and create,
oh, this is something else that's kinda cool.
But it'll allow you to limit the activities,
which is a plasma desktop function
that this vault is even available to.
I don't wanna do that, so I'm not gonna choose that option,
so I just choose create.
When I say open in my file manager,
it asks for the password, I put it in,
and it opens the vault.
It's now mounted as a regular folder.
I can use it, I could leave it mounted my entire session.
I'm impressed with this, you know, a few extra steps,
and it feels a lot more integrated
than some hacky encrypted folder
that I have a bash script somewhere for.
Yeah, and I also like and appreciate the fact
that they're not inventing their own encryption.
Yeah, right, it's not all hand-rolled,
it's using just reliable primitives,
sticking it together in a reasonable way
with a lot of disclaimers.
Yes, I do appreciate that.
That seems perfect, yeah.
So plasma vaults is nice.
You know, you could use incfs, you can use cryfs,
but here's the other great thing about it.
This is coming from Ivan's blog here.
He's talking about adding a new functionality
to plasma vaults that I think is great,
and it's really in light of Meltdown Inspector.
He says, we've recently seen that even CPUs
can sometimes be used as attack vectors.
It's common for the web browser to be,
and obviously through social engineering,
for a user to also be used
to gain remote access to the system.
For this reason, starting with the next plasma release,
if you have extremely sensitive data,
you can mark a vault as offline only.
This means that networking will be shut down
as soon as you open the offline only vault.
Any potential remote access is inhibited.
Nice, I mean, you know, not complete,
but hey, one more step, that's real handy.
I like that a lot.
I mean, if you're using Network Manager
to manage your network connections anyways,
and this can interface with that
and shut down your network connection,
so you're essentially air-gapped for a limited time,
you're right, it doesn't prevent things
that have been loaded on your system
while you've been connected to the network.
It's more of an immediate solution,
but it's a one more peace of mind solution.
And I like that integration,
and that's where the Plasma Desktop often comes in,
is that total suite integration,
where your vault mounting mechanism can actually stop
the networking, and it's not through some sort of hack,
but through some sort of elegant communication system.
It feels like a cohesive designed desktop.
Yeah, so anyways, that's what's coming down
the pipe for vaults.
I wanted to also mention this week, LatteDoc,
which I have started using on one of my plasma systems.
I had this other bug recently with the Plasma Desktop
where my panel stopped updating.
Is that, do you think a fair description, Wes?
Yeah, definitely. You've seen it.
And it's just, it like freezes in time.
The individual like applets, like Dropbox,
and TeamViewer, and whatnot still work.
And I think even the Bitcoin price thing still worked.
But the clock would stop,
like the seconds wouldn't tick anymore.
And more importantly, the task bar would just be frozen
at whatever I was at when it locked up.
So if I had say, console, and Kate, and Firefox open,
they would always show as open regardless.
And say that I opened Chrome,
and that was the only app I had open,
it would never be in the task manager.
It was kind of a little challenging when I was live on air
and trying to switch between applications.
And so I heard that an update would come down the road
and let me fix it.
But I thought in the meantime, until that update arrives,
maybe I'll try LatteDoc.
I gotta say, I'm not Mr. Doc.
I don't really appreciate docs.
I think they're usually just trying to be a Mac ripoff.
And I tend to askew from them.
This, however, did it right.
Because one of the default layouts is called Plasma.
And it's essentially a Plasma bar,
but implemented as a doc, and it's done well.
And it has a lot of functionality
that I do appreciate from docs,
like intelligent hiding, being able to change it,
being connected to the left side of my screen,
or the right side of my screen, or the bottom of my screen.
You know, just the one icon for applications
that are running, or for the launcher.
I don't need to have an icon for the launcher
and the running task, you know, those kinds of things.
It does what I like in a doc,
while not feeling like it's ripping off the Mac.
And it's native Plasma stuff here.
Yeah, it looks clean, well integrated.
It's using Plasma technology.
Yeah, it's very well integrated.
Smooth.
It is.
And I think I'm gonna put it
on all of my Plasma desktops slowly.
It's pretty much available, and in all of the repos too.
This is not a new application.
Producer Michael's come on the show
and told us about this before.
But it's all based on Plasma framework,
so it provides an elegant and intuitive experience,
and I completely agree with their description there.
And you can add regular Plasmoids to it.
It animates or doesn't animate, depending on what you want.
It's got a really easy to understand configuration,
and you can, I don't know, it's just nice.
And after having some troubles with the standard Plasma panel,
I thought it may be worth mentioning.
This has been my favorite part of your Plasma journey.
You're finding all the apps I didn't even know I needed
and hadn't found in the KDE world, and now I know.
So, thank you.
And then one more before we just get out of here.
I see though that Mr. Noah Chalaya has joined us.
I may ask him about his Plasma experience here in a moment,
but one more little plug skis before we get out of here.
You might remember, I think it was like Quapzilla.
Was that the name of it, Quapzilla?
Oh, that sounds familiar.
An old, cute web browser.
Well, it was renamed back in 2017 to Falcon.
Falcon.
There you go, Falcon.
And it's flying like an eagle now.
It's a cross-platform, cute web browser,
and it's now called Falcon.
And it's my experimental, I want something that's not Firefox.
Like, I want to be logged into a different Google account.
I just want it on a different process or whatever.
I want to be able to just Alt-Tab really easy
to a different set of sessions.
That's where I'm trying it out right now.
And I've been looking for things that are
Qt-based for the Plasma desktop.
So if you have any Falcon tips, linuxunplug.com slash
contact, let me know.
But Mr. Noah Chalaya, are you there?
Are you live, sir?
And are you still on the Plasma desktop?
I am, I am, and I am.
Have you tried it out on any NVIDIA systems recently?
I have, actually.
Our brand new XPS Edit Bay.
No.
Yeah, it's running Plasma.
Really?
Do you want to tell people about that?
Do you want to have you talk about that?
Spill the beans.
Yeah, we can spill it.
Honestly, the only reason I didn't spill it earlier
was I didn't know, you know, it's your popsicle stand.
I didn't know how you wanted to tell the popsicles.
That's a little LinuxFest Northwest tease,
because behind this, this actually maybe gives people
a better idea of what we go through behind the scenes
to prepare for LinuxFest Northwest.
You should tell people about this new machine.
Well, yeah, so I think there's probably
a public perception that all I do
is complain about wireless on 16.04.
That's not the truth.
The truth is I actually do a lot of things.
I actually fight for the Linux desktop a lot.
And so one of the things that had came up
was we were talking about what we're
going to do for LinuxFest.
And I was like, listen, we can do a lot of different things
for LinuxFest, as long as we're all doing them on Linux.
I said, well, here's the thing.
We've had some issues, some production issues in the past.
So how can we make sure that we have an absolute rock
solid machine that's going to work perfectly
the entire time, as if it was a broadcast grade device
that you would buy from a company?
So that's not a problem.
What we have to do is we have to buy a brand new,
top of the line Dell XPS performance
system with the eight core i7 in it and dedicated graphics
and a dedicated capture device.
That's PCI.
So it's on the bus.
We have four individual 1080p, 60 frame per second capture
device that's inside of this box.
We built it.
And I actually really like that system
because a week before, I had started editing the AS NOAH
show and actually purchased another one of these systems
to do all of the editing on it.
And so it's the Dell XPS desktop, not the laptop.
It's a desktop version, but it's just
a powerhouse of a machine.
And that currently is loaded with KDE neon
and of course has the dedicated Nvidia graphics card in it.
So I am fascinated by the amount of hardware
that is going into this year's Linux Fest Northwest.
But I think it's also interesting that we're
doing a full plasma deployment.
It's one of these things, NOAH, where
by the time Linux Fest lands, 1804 will have been released.
You know what I mean?
We have to do all of this pre 1804.
The other thing is, and maybe this
is a bad way to go about this, but my plan up until this point
and continues to be really, I'm just hanging out on KDE neon
until it burns me.
And then once I get burned or when something happens,
then maybe I'll re-evaluate that.
But I was thinking about this.
When 1804 comes out, as a responsible person in the media,
I feel like it's our job to evaluate the stuff.
Try it.
All the flavors, really.
I want to try as many as I can.
But at the same time, I still have
to be able to get work done.
And neon has been so rock solid good to me.
I've had zero, not a couple of things that I could work,
zero problems whatsoever with it,
that it's just going to be very difficult for me
to wipe it off my computer.
Maybe I can partition it out and live in the LTS
for a little bit just to play with it and stuff.
But at this point, my plan was to just blow it completely away
and go back to 1804.
No, I'm having a really hard time,
if I'm being honest with myself and you,
I'm having a hard time convincing myself to do that.
We've never really had an experiment go like this before.
I mean, not like this deep, right?
I mean, we're like, hey, let's try this.
And then it just changes the way we work now.
I was just saying on the pre-show,
I've had two out of six systems start
to develop issues, which isn't a bad batting average.
But it's enough where I'm at yellow alert right now,
and I'm like, oh, what am I going to do?
But other than that, it's not too bad.
And those both are my two Nvidia rigs.
So it's kind of interesting, those are the new systems
having problems.
That's why I was asking you if you tried it on Nvidia.
Yeah, and to be fair, both of those systems, one,
so one of those doesn't have, the Linux first rig
actually just got here yesterday, the day before.
And so it's sitting apart because we're
putting hardware in it.
The editing machine, it's been running two,
whatever it has been, two, three weeks with Nvidia.
However, I've only used that machine an hour or two a week.
If I reboot or even just log out and log back in,
the problem tends to go away, the locked panel problem.
This time, I've lost my desktop and all of my widgets
and the ability to add new widgets.
But that tends to actually get resolved too.
So let's change gears.
Do you want to mention what you're doing in LA
and why you're going to LA soon, or do you
want to just keep that a behind the scenes thing?
No, sure.
No, I think it's cool.
So one of the things that we had talked
about for Linux Fest Northwest is when you guys come out
to the conference, we want to change the dynamic that exists.
Because a lot of times, we'll be in, quote unquote, show mode.
And then people are either afraid to approach the booth
or they approach the booth at the wrong time.
We're trying to set something up.
And it creates an unfriendly dynamic.
And so we want to change that.
And so what we're looking at doing
is we're trying to create a cool exhibit.
So it's not just the place that we're
setting up and broadcasting.
There's going to be cool things for you to look at,
cool things for you to see, cool things for you to play with.
And basically, we're going through,
and we're like, how can we get the best of everything
and make it something kind of cool to see?
And one of the things that we wanted to do from the audio side
is have all digital audio so that there is no buzz,
there is no hum, there's nothing like that.
It's all digital.
So I started looking for a board that we could use
that was all digital.
Which is not cheap.
Once you say those words, you're in a certain price category
right there.
Yeah, boy.
Yeah, usually you're in a couple grand each.
And if anybody is in the broadcast industry
or in the voiceover industry, you guys
may know the name Joe Cipriano.
And Joe grew up on the air.
He grew up, and he wrote a book about how
from the time he was 12 years old,
he was in a radio station doing on-air stuff
and eventually turned it into a voiceover career.
And he's one of the most, next to Don LaFontaine,
probably one of the most successful voiceover actors
out there.
If you've listened to Fox News, or I'm sorry, Fox, The Simpsons
or anything like that, he does all of the promos for CBS
and Fox and stuff like that.
And heard about what we were doing,
heard about the budget constraint
that I'm working under and stuff like that.
And I just reached out to him.
I said, I know you have this board.
I know that you're looking to transition out of it.
He's upgrading a system.
And I said, could we work out a decent price?
And I don't know if I want to go into the pricing,
but he gave me an insane deal, so insane
that I am flying out to LA at the end of this week
to go pick the board up from his studio.
And then I'm going to go straight from his studio,
next flight the very next day, to Seattle.
I'm going to bring it there.
And then we have a week to set it up and try it and play
with it and make sure everything's going to work.
But we're going to be using Joe Cipriano's board.
My thing was simple.
If it's good enough for CBS, it's
probably good enough for us.
I hope so.
Yeah, otherwise we're doing something wrong.
If the Tiffany Network says it's good,
then we should be able to do a live stream.
I didn't really work on open source.
Yeah.
The whole thing, so it's a real process to do this.
But it is, if you have a small budget
or you have a large budget, I think
this is what my takeaway is.
And it's not really this show's legacy,
but a big legacy of last was us struggling with,
can we do our passion on Linux?
And our passion was live production of shows.
And now the question more is, what range
do we want to do this at?
What grade?
If we wanted to spend $700, we could do this.
And if we want to go full Noah, we
could spend money that we probably
shouldn't mention on this and do this.
There's a range available to us now, Noah.
You know what I mean?
Really, the best two examples of that,
or go-to examples of that I can think of
are going to be this year at Linux Fest Northwest.
I think is safe to say probably the most elaborate setup
that we've ever done.
In fact, I would go as far as to say this.
I'll put my name on it and say that I challenge you
to find another conference.
Not just a Linux conference, but any conference
that isn't exhibiting media stuff specifically.
So NAB would be out, stuff like that.
But anything that's a conference that's
outside of the media industry that
is going to have as elaborate of a setup
as we're going to have.
So we've got that this year.
But then you compare that to what we did at System76
a couple of years ago, where we literally didn't show up
with a single piece of equipment.
I mean, we showed up, and we just hodgepodged it together.
People were bringing in parts from their house and stuff
like that, and we made a production system out of it.
And that just shows the flexibility,
the scalability of Linux.
The fact that I can just take a box,
get all the software and necessary stuff up,
open the Google Docs, put all the stream keys in,
boom, we're on the air.
Yeah, I think it's going to be pretty cool.
I can't wait to start playing with this stuff.
And if you follow the timeline there,
no one's going to be out here damn near way
before Linux Fest Northwest, because we're
going to be testing this stuff.
We're going to be working with this stuff.
It's our passion, and it's so cool
to be able to do this under Linux now.
And to be able to go to a Linux event now for years.
This isn't our first year.
This is not our first rodeo anymore.
We've been doing these events, covering them
from beginning to end, full spectrum, using Linux.
And now this is the most professional implementation.
We're not going to be throwing together systems
until the last minute.
Finally getting good at it.
Yeah, it's kind of fun.
It's fun to be at this position, so I'm really excited.
Yeah, it's pretty cool.
It's pretty cool and crazy, Noah,
flying all over the place to do it.
I don't even know what that guy's up to.
That's just nuts.
I actually think our setup at the Linux Fest Northwest booth
might make me just want to do shows from there from now on.
We'll just do it there all the time.
That's it.
I'm done.
I don't need any of that.
I'm sick of it.
We'll just do all our shows from there from now on.
Anyways, links to everything we talked about today,
linuxunplugged.com slash, what is this, 2.44?
Yep, 2.44.
And if you come over on Tuesdays to the jblive.tv stream,
you can catch this show.
We start at 2 PM Pacific.
Actually, really, the live show usually kicks off around 1.30
Pacific.
All of that is converted to your local time
at jupiterbroadcasting.com slash calendar.
You come for the Unplugged program.
You hang out with us.
We have some pre-show.
We have the main show.
We have the post show.
And then just a little bit after that,
it's that crazy Ask Noah program.
And he's taking your live calls.
He's answering your questions.
And he's talking about all that kind of stuff.
Hang out with Noah.
It's a Linux sandwich.
I really think you'd probably like it.
And plus, you've got the chat room going.
There's the mumble room you can participate in.
You can join our virtual lug.
You see, any simple model of human nature
is going to be wrong.
And you can debate things like human nature, I guess,
if you like.
Anyways, all of that is happening at jblive.tv
every single Tuesday.
And we'd love to have you there.
You can get links to everything we talked about
at linuxunplugged.com slash 244.
Email us at linuxunplugged.com slash contact.
And that's all of the meat and potatoes.
So much meat and potatoes.
Meat and potatoes are everything we need to cover.
But I think that'll pretty much bring us
to an end for at least our portion
the Ask Noah program will take over soon.
But in the meantime, go check out the TechSnap program.
TechSnap.systems, where Wes and I are breaking down stories
that are really kind of focused on the whole IT
and sysadmin market.
So it's like, if you've got to live in that world,
you need to know what's coming up.
If you have systems you have to manage,
or if you have systems you have to manage
and that's not your primary day job,
TechSnap program can be very valuable.
TechSnap.systems, go get a little more.
Me and Wes.
Go join us.
Or at Wes Payne for his Twitter.
Do it.
I'm at Chris Elias.
The network is at Jupiter signal.
We also have the subreddit, linuxunplugged.reddit.com
and linuxunplugged.com.
Thanks so much for being here.
See you right back here.
Next Tuesday!
Missing Artists.
The Unplugged program, wrapping up 2.44.
Feel it.
Feeling good.
That was a long one.
That went a little bit longer than I expected.
Out of control.
It's really your fault, Wes.
You just don't ever shut up.
I know.
I was egging you on all day.
And Dan.
Dan comes in here, you know, running his mouth.
And hey, Citizen, I don't think he ever shut his mouth either.
You guys.
Unbelievable.
Gotta get hyped.
Linux hype.
2018.
Linux hype.
So let's see here.
Let's get some titles.
We got titles thing.
Noah, what's coming up on the Ask Noah program, bro-ham?
Let's go.
Holy cow.
We are asking so many crazy flame click baity questions like, is Apple destroying the computer?
We got a really cool guest that is starting a business, and so we're going to talk with
him about what's coming up in his business and the challenges that you face when you
start a small business and how you can do that on Linux.
That's lovely.
Hey, did you officially change the intro tagline?
I did.
Yeah.
Well, yeah.
Do you mind giving me a read again?
Because I know it's new, but I forgot what it was.
I mean, I know the music's not going.
I know.
It's a big ask, but.
Hold on a second.
You know what?
It was like way simpler and less confusing.
You know what's great about this new system here?
What?
I have this touch screen.
As long as I turn it on, there we go.
Yeah.
Sure.
Look at that.
I just pushed the button and it happened.
It's going to back forward right to the music.
Oh my gosh.
The show you've been asking for.
It won't get a thing to start again.
It will not start again.
This is a false start.
It's going to get me flagged.
It's going to get me flagged.
You're going to get me flagged, dude.
It can't get flagged because it's custom written.
Good.
All right.
Good.
Okay.
All right.
Yeah.
Because I don't know.
A lot of multi-speed technologies.
The Ask Noah show starts right now.
This is the show where we do all the things on Linux they said that couldn't be done and
take your calls on how to do the same.
Damn, that's good, dude.
That is good.
Much better, right?
I like that.
I like that.
I like that music better.
I like that slogan better.
Because, you know, your tech and tech business tech questions didn't make any sense to me.
I know.
And you know what?
Here's the problem, though.
You didn't tell me that until New York.
Do you remember?
We were having dinner.
Oh, really?
Yeah.
We were down eating.
We were eating Indian food in the basement of the train station.
I do remember.
And you're like, what does that mean?
I'm like, what does what mean?
You said taking your tech questions and business in tech question.
What does that mean?
And then I explain it.
And you're like, okay, well, once you explain it, it makes sense.
But when you say it, it doesn't make any sense.
And I'm like, well, we're 54 episodes in.
Why am I just hearing about this now?
I know.
I'm too nice.
I just didn't make it from episode one.
I know.
I am too nice.
You got to be stern from the start.
J-Bot is...
By the way, nice new...
By the way, nice new rock music.
Yeah.
Thanks to him.
It only took four and a half months and a lot of money.
But now you have it.
It's perfect.
Turn it up.
Yeah.
And 52 YouTube flags.
Actually, no, it's double because there's a live stream.
So JB Titles is not working because J-Bot is written in Ruby and not Rust.
Oh, yeah.
Should I...
I guess I can...
We ought to talk about maybe soliciting a community project to rewriting J-Bot because
J-Bot doesn't handle people going to JBtitles.com super well, I'm noticing.
It's just...
It has a hard time.
And I think it's just maybe because it's Ruby, but that's just maybe me being a Rust lover.
I don't know.
I'm all Rust.
I'm all Rust.
I go to bed at night watching Rust YouTube videos.
Yeah.
Anyways, what are we going to...
What are we going to title this thing?
Because I've got to get out of here so Noah can do a show.
So we've got to come up with a title, guys.
God, this is always harder than it should be.
Too bad we don't have Popeye in here cursing and yelling at people to give us a title because
that would be...
Ha ha ha ha.
Ha ha ha.
