Did you hear? Flight Simulator is back.
Oh, the classic.
Yeah, the Microsoft game.
Hey, what's old is new again?
Well, yeah, because it's powered by AI in the cloud, I guess.
And uses Bing.
What?
How do you-
Like the Bing data.
What?
Oh, for like the mapping and stuff.
Yeah.
Huh, okay, is there any way I can run this on Linux?
I don't know.
Okay, we'll probably come out on the PC and Xbox.
We don't know when yet.
Interestingly though, I mean,
we saw them doing stuff with Age of Empires.
It seems like Microsoft's jumping back into games.
They're saying exactly that, you know,
they want to be a game engine.
Yeah, I doubt they're going to bring it to Linux,
but if there's one gift Proton could give me,
Flight Sim would be it.
That, I'd actually play that.
You might not get your work done.
Hello, friends, and welcome into a very special edition
of Linux Unplugged.
My name is Chris.
My name is Wes.
Hello, Wes.
This is Chris.
Welcome to a very special edition of Linux Unplugged.
Welcome to a very special edition of Linux Unplugged.
Welcome to a very special edition of Linux Unplugged.
Welcome to a very special edition of Linux Unplugged.
Welcome to a very special edition of Linux Unplugged.
It is delightful to be with you today.
Oh, my.
We have a big show today.
What do you do after you got a fresh install?
We're going to chat with our virtual lug and each other
and figure out our perfect post install process.
That was pretty good.
Can you say it again?
No, I have no idea what I just said.
Perfect post install process.
Yeah.
I mean, really, this is actually something that we all have to consider.
It's like, what do you do to make your box perfect
and get back to work after you reload?
I asked this question today both to the live stream and to Twitter,
and I got a surprising amount of people saying
they just had reloaded their boxes today.
So it says, maybe there's something about October.
Even if you don't change distros all the time,
it turns out we enthusiasts, we kind of install things a lot.
Yeah.
And we got the perfect panel to go through all of this.
In fact, if I'm going to keep the alliteration going,
we have the perfect panel to plow through this process.
Hello, cheese and Mr. Alex.
Hello.
Hello.
I don't know how much plowing we'll actually be doing though.
Well, we'll plow through the field of knowledge.
So that's what matters.
I'm on a roll.
Just go with it.
Pedantically, perfectly pedestrian.
I can hold a straight face, but when Wes cracks,
it makes me laugh every single time.
And of course, we have our virtual lug time appropriate greetings, Bumble Room.
Good morning.
Hello.
Howdy, hello.
Happy Linux Tuesday.
Listen to that group.
This look at this.
You got Brent, Byte, Carl's in there, Jill's in there, Jimmy, Minimac, Sean, Tat Tech,
and back after a long travel period, Mr. Martin Wimpers.
Hello, Wimpy.
Hello.
I'm really glad you made it today because Bunta Mate is in the news.
So how about that?
Perfect timing.
We'll get to that.
But let's start with OpenSUSE, which may be called something else soon.
During discussions about the OpenSUSE project logo and name change that started in June,
which we talked about, the election committee received a request from the board to conduct
a vote whereby the OpenSUSE members can indicate whether they are for or against the project
name change.
Voting starts October 10th and runs to the end of the month, so three weeks to vote.
Hmm.
What would you call it, Wes?
If you could name it, what would you name it?
Linux.
Linux S Edition.
What about you, Wimpy?
If you could name OpenSUSE today, what would you name it?
Linux like it used to be.
Yeah.
Yeah.
That's good too.
Yeah.
Or why not call it yet another distro?
We have fun.
Oh, that's good.
Yeah.
We have fun.
I've been using OpenSUSE for so long.
I used OpenSUSE before they called it OpenSUSE.
They called it SUSE back in my day.
It is always interesting just watching the project function, right?
This is a big decision and you need a way to be able to constructively discuss that
as a community.
So, power to them.
This is actually a great opportunity.
And I wonder if we won't see something that's chameleon inspired or something like that.
Yeah.
That makes sense.
And much like I make fun, but I also have love for OpenSUSE.
You know, it's a project that I have a long heritage with and it has been around for a
long time and we will follow the story with interest because it does matter.
Absolutely.
Now, I am supremely elated, I can't think of an alliteration on that, to talk about
Ubuntu Mate 1910's new release notes.
Now this is a beta at this point, but I wouldn't necessarily say that's a bad thing.
I mean, we're all, I think if you're listening to this podcast, you're probably comfortable
trying out a beta at this stage.
And if not, well, stay away.
And maybe you have that particular piece of hardware that they need a bug report on and
this is the perfect time to do it.
A great way to give back.
So I normally would say, you know what, let's skip a beta.
But I'm actually, I'm changing a little.
I think Wimpy, you've convinced me, I listened to the Ubuntu podcast, you convinced me at
this stage, and especially for this particular crowd, I'm not saying for everybody, but for
this crowd, actually give a beta a go because there's a lot in here and maybe you can catch
something.
Yeah.
So I did express this sentiment on the last episode of the Ubuntu podcast.
It's quite frustrating.
And this is not an Ubuntu Mate specific thing.
This applies to insert name of your favorite Linux distribution.
You quite often see the leads of the various distributions post about their, you know,
their betas and their release candidates.
And you will see a series of replies that say, oh, well, it's a beta.
It's a release candidate.
I'll come back and install it when it's stable, when everybody else has done the hard work
to make sure it's okay.
And then you see those very same people whinging when stuff that's important to them doesn't
work.
Like maybe random wifi issues that plague one particular user who perhaps could have
caught it earlier in the cycle.
Right.
Exactly so.
So, you know, what you need to do is actually think about, you know, what your social responsibility
is for your favorite distribution.
If you're a distro hopper, I know this doesn't apply because you don't care because you just
hop distros as soon as it gets hard on the distro that you've chosen.
But if you're invested in a particular distro, do test the betas, do test the release candidates
and see if you can find something that's not working for you that can help improve the
final product because it won't magically get better if people don't do that.
First of all, I want to say a fantastic write up.
We'll have linked in the show notes on this new release.
I don't know what you're going to do now for the actual release because you can't top this.
So it's these notes.
In fact, this is a living document.
So as we're fixing things, you'll see that there are this is what we fix since the beta
it already started to appear in this document.
Oh, great.
And then just just tangently, I'm just curious, did you write it with emoticons inline or
did you write it and then go back and enhance it with the emoticons?
Obviously, you put the emoticons in as you type it, because that's what, you know, sensible
human beings do in 2019.
I mean, solid execution, I got to say.
So you call this a paper cut release in this post, but yeah, I'm looking at this and I'm
thinking maybe I mean, this is it's more it's more changes than you'd see in a Mac OS release.
It feels like it's a yes, it's paper cuts, but it's also it's really kind of when you
add it all up.
It's a substantial amount of change.
It is.
There are significant changes, but addressing paper cuts is the undertone to everything
that we addressed in this release, even when it's big stuff like changing the default email
client.
You know, there is a bigger story there about the paper cut that addresses.
All right.
So let's get to that.
But first, I want to talk about a couple of things that I'm impressed with.
It really feels like the pain points that users actually see on a day to day basis is
what was addressed here, like the changes with Marco.
Oh, yeah.
The Marco, like the Marco is where is the Monte window manager and no more tearing high
DPI improvements, things like that that users see.
But there's other smaller things like changing out VLC for celluloid and evolution, replacing
Thunderbird.
Right.
So what is that about?
So there was two things going on with both of those.
The three driving things were this improving the desktop integration.
If you read the post, evolution offers superior desktop integration than Thunderbird does.
You know, evolution will integrate with the desktop environment in a better way.
Like the calendar applet.
And that's a follow on, right?
So once you've once you've made that jump to, well, let's do evolution, then then it's
right, well, let's improve the indicators to actually make that indicator do something
useful.
So rather than just being a static calendar that does nothing.
Now it reflects all of the events that you've got in your calendars.
Is it the evolution data server that is its own separate component that that the other
things can query that makes this possible?
Is that why it's why Thunderbird can't do this necessarily or isn't currently doing
this?
That's exactly why it is.
Evolution has the evolution data server.
So once that's hooked up and you've connected it to, you know, wherever your calendars and
tasks and things exist, then that's automatically reflected in the indicator.
And this has been something that I've wanted to get in the desktop forever because that's
super useful, you know, and then you get notifications from that thing as well.
Yes.
Having it in the actual calendar is game changer for me with all the meetings we have.
And you kind of expected in 2019.
And I think the other thing to note here because you and I have talked off air about this,
but I don't know if we really said much on air is that evolution hasn't necessarily been
standing still.
The project has been developed.
It's been bug fixed.
It's it's in a it's in a pretty good spot now.
Yeah, it is.
You know, I've I've tried evolution on and off over the years, you know, I've I've revisited
it several times just within Ubuntu Marte's lifetime to think, you know, to test.
Is this the right time?
And it never quite has.
But right now, it's a really robust option.
It's a native, you know, mail calendar task memo client, and it's got tight desktop integration
and it's very compelling.
So I you know, I spoke to the rest of the core team and some of the upstream Marte developers
and I was surprised to learn that a number of them were already choosing to install evolution
and it was their default mail client already.
And they, you know, rattled off a number of reasons as to why that was.
So it's now the default.
I know that some people will not want that.
They will continue to want Thunderbird and hey, that's fine.
You know, Thunderbirds in the software boutique or you've got the option to do a minimal install
and then install the apps that you prefer over the top.
But what you know, as a distro maintainer, what you're trying to deliver is the best
outcome that you can deliver to most of the people most of the time.
And I feel that evolution is the tool that does that.
Well, I interestingly enough, this is where I've landed myself.
Having gone back to Thunderbird for some things.
But after trying out mail spring, which I can't remember the name of it before that,
but you know, a so I'm looking for something that treats Google Apps as a first class citizen,
because that's what our company have all your data in there.
And I need to get access to it to do my job.
I don't have a choice.
I don't get to pick what mail service they use.
And mail spring is a real, like, top tier Google Mail support, like really integrated
the Nylas stuff, right?
That's what it was.
That's right.
Yes.
But it's an electron app.
And I'm not.
No, no, it's fine.
It's fine.
It's just when you have 1000s of emails, I don't it's just what it is.
It really does get slow.
And I tried to work with it in different iterations.
And I ended up going back to evolution.
In part because I was I was noticing that a couple of developers that I was chatting
with because I like to I spy at the headers were using it.
And I thought, Oh, that's interesting, because I know these these particular gentlemen get
a lot of email.
And I thought, well, if these guys who likely get more email than I do are using evolution,
maybe it's worth a go for me.
And then I started I telegrammed wimpy.
And I said, this is a few months ago, I said, wimpy what email client are you using?
And wimpy had switched evolution, because we were kind of on the same page with what
what our requirements are.
And so I gave it a go.
And I found that works pretty well with Google Apps after you change a few defaults, like
where your sent items are stored and things like that.
But my takeaway was from having used it eight years ago, when I was desperate for exchange
integration, what I considered a heavy duty application back then is a tight, native,
low resources application today.
Evolution back then seemed so clunky with its client side and data side that was always
running in the background, and just seemed ridiculous.
Eight years ago, today, it uses a tiny percent of the RAM that mail spring used.
And it provides a data interface for things like wimpy is talking about, like the calendar,
it just has been a much better switch.
And even just setting it up, and having it connect to my calendars means that my applets
are always up to date.
Even if I just use the web version of Google Apps Mail, my calendar on my desktop is still
current.
That is nice.
So that's in there.
And then I think we have to talk about something that's not just going to benefit Ubuntu Mate,
but Ubuntu Xfce, Zubuntu, the Cinnamon versions, the GNOME versions, the KDE versions, all
of them are possibly, if they choose to use it, going to benefit from this Mate Optimus
support that you've added.
Now, it's going to be turned on, I believe, by default on Ubuntu Mate, if you have an
NVIDIA driver, but this is some really nice, easily accessible functionality that before
was pretty complicated for end users to get access to.
So what's happening here with Mate Optimus?
Okay, so this is a mechanism by which you can switch between, you know, the Intel IGP
and the NVIDIA GPU on hybrid graphics systems.
So this has been in Ubuntu Mate for some years, and it just enabled you to switch between
the Intel GPU and the NVIDIA GPU, and it required you to log out in between times.
But with the NVIDIA 435 drivers, they've added a new mode, which is on demand, or, you know,
technically it's called the NVIDIA Prime Renderer.
And if you enable that, the Intel IGP and the NVIDIA GPU are both enabled at the same
time, and the NVIDIA GPU goes into this, you know, power saving state.
So your desktop is rendered using the Intel IGP, but then you can choose to run specific
applications or games on the NVIDIA GPU on demand as you require it.
So we've got a little indicator that enables you to flip between that, and that indicator
will only show up if your system meets all of the necessary hardware and, you know, configuration
requirements.
But once you're in on demand mode, we've got a couple of little utilities called Offload
GLX and Offload Vulkan, which are command line applications, which you can just use
to prepend in front of the command you want to run in order to, you know, run that particular
game or application on the NVIDIA GPU for, you know, GLX acceleration or Vulkan acceleration.
You can work with that.
Without having to log out and log in.
Exactly so.
Yeah, just all dynamic.
So, you know, you can do the same stuff that you can do, you know, with other, you know,
Intel and AMD where you can run one workload on the Intel IGP and another workload on the
NVIDIA GPU, and that can all happen simultaneously now.
So what happens if I do Offload-Vulkan-Steam?
Well, every sub-process that Steam executes, like the game and all of that, will that...
Yeah.
So at the moment, it works, you know, there's some clever machinery behind those two commands
in order to make that happen.
And that was where I got to with the limited time I had available.
But what I'm thinking of doing is embedding into that indicator, maybe just the games
category from the menus, so that you can launch, you know, right click a game and say, launch
this game, you know, on the NVIDIA GPU.
So it's all, you know, integrated rather than you having to know what the terminal incantations
are.
Right.
That'd be really fun.
That'd be a great way for regular old folk to be able to get that running without having
to mess with it.
Martin, may I say, thank you very much.
That sounds absolutely fantastic.
I do have a question.
Sure.
So I have a Lenovo P50, which I got given through work, and I've tried to use that with
GPU pass through.
And the NVIDIA GPU that's in there, the outputs are hardwired to the HDMI ports and whatever.
In that situation, is this going to work for me or not?
Yes, it can do.
So it requires a little bit of setups.
Really?
Yeah, yeah, yeah.
So if you've even if you've got one of those, like NVIDIA mining GPUs that have no outputs
at all, you can make this work for you.
Dude.
So in the in the project's GitHub page, there's a link to an NVIDIA document.
It's part of their installation instructions on how to set up what's called a GPU screen.
And what you basically say is this Intel IGP is providing a screen for this NVIDIA GPU.
And when you're in on demand mode and you tell it to offload to the NVIDIA GPU, it displays
to that that whatever, whatever that Intel IGP is rendering.
So it will work.
So if you've got one of those and you can get these super cheap on eBay now, you know,
if you've got one of these mining cards from NVIDIA that's got no outputs at all, you can
now use it as an accelerated, you know, gaming graphics card.
So this only works with NVIDIA, though, correct?
Doesn't work with AMD GPUs?
Correct.
This is this is currently an NVIDIA Intel only solution.
But, you know, I've I've been experimenting and I've thankfully had a review unit from
Dell for far too long, which has got Intel and AMD.
And I've manually, you know, looked at what's required to do this with Intel and AMD as
well.
So maybe at some point, if I get enough time, I will fold that in as well.
So it will be a more encompassing tool, irrespective of, you know, what your GPU choices are.
But this would work with an eGPU?
Yes.
Yes, it will.
I say yes, it will, providing providing it can present as, you know, an optimus system.
Right.
Yes.
In general, yes.
Right.
Which I think actually my eGPU does.
Yeah.
Most of the Thunderbolt based systems do present as though they're a hybrid system.
So yeah, they tend to work.
How much of an enabler is it to have the NVIDIA driver in the upstream Ubuntu ISO now?
So how much does that now you just can assume that if the user has an NVIDIA card that
they have access to the driver, so now you can build tools like this on top of it?
Right.
Yeah.
So that's definitely part of it.
So the NVIDIA drivers are now present on the ISO image.
And that's really so that if you're installing and you don't have internet access, the drivers
are there on the on the ISO in a local app repository.
So if you tick the box that says give me third party drivers, there's a source to install
those drivers, even if you're not connected to the internet.
So that's where that comes from.
But it does mean to say that if you are an NVIDIA user, you are likely going to come
out the other side of the install with the NVIDIA drivers automatically installed and
enabled.
And what's most important is the way we're delivering the Intel drivers now, they're
in the Ubuntu archive, they're in the main archive, and they are going to continue to
get updates through the same SRU process that we use for things like the Firefox browser.
So as new versions of the drivers become available, no need for PPAs.
They will just appear in the main archive.
And because they're in the main archive, they're also signed.
So that means you can leave secure boot enabled for your NVIDIA drivers now.
Fancy.
That really is a big deal.
That is a big deal.
I think 19.10 Ubuntu Mate is shipping up to be quite a beauty.
So if you'd like to give it a go and send them your feedback, link in the show notes.
I mean, yeah, right?
Look at all the hard work that they've been doing.
They can use a little help testing it out.
I'm loving this GPU work.
How about you, Alex?
But can it run Crysis?
Well, now it can.
Seriously, Martin, that is some amazing stuff.
I am so happy to hear that.
Thank you.
Yeah, that's good.
So let's chat briefly about Fedora Workstation 31 beta, which is now out and Fedora 31 is
around the corner.
They're doing a lot of work on ExWayland on demand.
They say the goal is ExWayland on demand applications.
When you need to run an ExWayland application, it would actually then start all the stack
at that time instead of running it all the time using up resources.
Sounds nice, but it's also a lot of work and this work has been contributed from a lot
of people and companies.
All started off with some work from Ian Lane at Canonical for the system to user session
patches which really needed to happen to make this possible.
Those have been lingering, so Benjamin Berg took those patches on and actually got them
over the finish line, merged upstream.
Now this isn't a hard requirement for Wayland on demand necessarily, but since it makes
a lot of things work nicely between Ex and Wayland, it makes the rest of the process
a lot smoother.
Yeah.
Future work should be simpler to implement, which means future versions of GNOME Shell
will have this work in them.
It also means that you could potentially get a little bit more battery saving and this
work could expand to include other things in your computer like maybe the Bluetooth
stack and other things that don't necessarily need to be on until the desktop session requires
them.
That's some of the work they're doing here.
Well, another piece that you might like, Chris, is Firefox running natively and nicely on
Wayland.
Very much, yeah.
In Fedora 31.
Smooth as butter.
That's what you want.
I really have been appreciating that.
There is some bugs, so they're still working on it right now.
You have both versions that will be available in Fedora 31 and still, if you are using the
NVIDIA binary driver, Fedora Workstation 31 will disable Wayland by default right now.
That's because, well, there's a lack of acceleration under X Wayland, so any application depending
on GLX, like a lot of games, will just get software rendering with the binary NVIDIA
driver for now.
Yeah.
I mean, there's not much anybody can do.
It's really up to NVIDIA.
They have to do that work, which it does seem like some of that is in progress.
I guess they told some folks at Red Hat and on the Fedora project that there is work in
progress on that.
But as they write in this post, which we'll link in the show notes, we don't have a timeline
yet, but it's being actively looked at and hopefully a proper date will be provided soon.
A timeline for a timeline.
I don't know, Les.
Also just of note, if you are a daily Fedora user, you may have noticed some Sketch H.264
support.
Well, that's going to get a lot better in the next version of Fedora as well.
Isn't that nice?
I mean, boy, time's a change.
Yeah, really.
That is a big time changer.
And then also, pipe wires, there are not a lot of changes in Fedora 31, but there will
be what they're planning is major changes in 32.
So take a look at it.
Keep an eye out for that.
Oh, boy.
I guess an ear out.
Keep an ear out.
Yeah.
Yeah.
Promises to revolutionize things, maybe.
Not yet.
Yeah, that's what they say.
Pulse audio, like we've never known it before.
The end goal, like the ultimate goal, though, Les.
You ready for this?
Get ready, ladies and gentlemen.
PipeWire will ship as the default audio handler with a way to switch back to pulse audio in
Fedora 33.
Okay.
So I'm just going to plan to skip 33, go right to 34 on the Fedora side.
Just stick with CentOS Stream if you're a Fedora user during that time, because it's
going to be a bumpy ride.
But a lot of work in general has gone into the performance of Gnome.3.34.
It really stands out right now if you try out Ubuntu 19.10 proper.
Some of that same work, because it's by some of the same folks, will land in Fedora 31.
So I'm very, very, very happy as somebody who is softly trying out Gnome Shell again.
That's another sign of times that have changed, right?
It's a pretty nice desktop environment these days.
I love this moment here towards the end of the post, again, linked in the notes.
They talk about how, read that part about the great performance work there, because
I just love the sentence.
And I'll read the sentence after it.
It's towards the bottom there.
This release features a lot of great performance work by our friend Daniel von Vogt from Canonical
and Georges Stravakis from Endless.
Part of that was really, I just didn't want to say those names.
Okay, so I like this because it's awkward for them.
Because here they are, the shepherds of Gnome Shell after all this time.
But the awkward situation is Canonical's come along and busted out some serious performance
work.
They try to often give a lot of credit to Endless, too, which they're doing some good
work.
But let's be honest here.
A lot of it's coming from Canonical.
And I love their take on it.
God bless them.
They write, quote, the Red Hat team has focused on providing patch review and feedback and
working on bigger long term challenges and enablers.
Oh, boy.
Wow.
I mean, that's important, too.
Yeah, it is.
It also sounds like they are not leading a lot of the most important and aggressive development
in performance.
And instead, they're just sort of sitting back and enabling.
And I think you could argue, I think the definition of enabling could be argued.
But it's good to see all of the collaborative work on it.
And the results of that, which feels like it's been the story now for a Gnome release
or a few in a row, the results of which will materialize in Gnome 3.34.
Oh, boy.
Get ready for that.
And then last but not least, in the community news today, we have something that we need
to keep on the DL, because everybody knows security through obscurity is always the best
practice.
That's the only way to do it.
So you know what we've got to do, Wes?
We've got to bust out the cone.
The cone of silence.
OK, just between you and me.
Oh, yeah, super secret.
We're going to have a big change to WireGuard.
So the long and short of it is WireGuard's incredible.
We're using it all the time.
But it hasn't been mainlined yet.
No.
And it's because not enough zinc is in the Linux kernel.
No.
In fact, there's no zinc.
No zinc at all.
There's no zinc.
Zinc-free kernel since.
Yeah.
And that is essentially the crypto that WireGuard uses.
And the problem is that the upstream Linux kernel maintainers are not super keen on implementing
a new kernel level crypto.
They're just, I mean, especially adding it a whole bunch at once, right?
And this, even though it has been audited by a third party, this has been a pain point
that has prevented WireGuard from getting mainlined for multiple releases now.
It's almost become a meme on this show.
Well, all of this shifted on September 25, 2019, when Jason A. Dunfield, sorry, Jason.
Jason, the WireGuard creator.
And Jason writes, hi, folks, I'm at the Kernel Recipes conference now and got a chance to
talk with Dave M., a bit about WireGuard upstreaming.
His viewpoint has recently solidified.
In order to go upstream, WireGuard must port to the existing crypto API and handle zinc
separately.
He goes on to say, I've long resisted the idea of porting to the existing crypto API
because I think there are serious problems with it in terms of primitives, API performance,
and overall safety.
I didn't want to ship WireGuard in a form that I thought was suboptimal from a security
perspective since WireGuard is a security focused project.
But it seems that with us or without us, WireGuard will get ported to the existing crypto API.
So it's probably better we just fully embrace it and afterwards work evolutionarily to get
zinc into Linux piecemeal.
He goes on to say, I've ported WireGuard already several times as a proof of concept to the
API and I have a decent idea of the ways it can go wrong and generally how to do it the
least bad way.
All right.
So let's pause here.
We'll continue on for a moment because with all things Linux kernel development, there's
drama with this.
But before we get to the drama, let's talk about this.
Holy crap.
This is a huge change.
Zinc is sort of part of the secret sauce of WireGuard that makes it so damn fast.
And it seems to be a pretty purpose built, pretty good crypto that has been audited by
a third party.
So it kind of feels like we are settling for a substandard tech here just so that way we
don't upset the norm.
I grant that when you're dealing with security and crypto, it's a little bit different.
But I'm curious to know what you think, Wes, because you and I follow this pretty closely
for a little while now.
Yeah, I mean, I guess one way could be to merge Zinc and then adopt change kernel features.
But I think maybe a silver lining here is moving and adopting WireGuard.
I imagine that there'll be a number of comments about the problems in these patch sets as
they shift over and start using the existing APIs and presumably WireGuard contributors
complain about the problems with those APIs.
So that might see some improvements or at least help us decide how to properly bridge
between what exists and Zinc because Zinc did, while it seems to be great, did have
some overlap, right?
It is kind of confusing to have two crypto subsystems just existence in the kernel.
So I can understand some of the kernel developers reticence to just take this giant blob of
code, which isn't normally really how it goes, right?
They like to evolve the kernel over time.
Yeah, it makes sense when you're trying to keep stability and security.
I do appreciate the challenge there.
Where the drama comes in is David Miller or Dave M., which in the previous post, he's
the upstream maintainer of WireGuard for the Linux kernel.
And he writes, whoa, quote, I didn't say, quote, must anything.
I suggested this as more of a efficient way forward.
I'm a bit disappointed that you felt the need to so quickly make such an explosive posting
to the mailing list when we've just spoken about this amongst ourselves only 20 minutes
ago.
So, I mean, maybe this will or won't happen.
But if that's the maintainer's view, it does sound like it might be the easiest way forward.
And yeah, security is important, but at this point, I'm just tired of having to compile
the module every time I update my kernel, Chris.
I'm ready for a mainline WireGuard.
Even with DKMS, it's not enough.
Before you press send on any email and you're feeling emotional, just take five, you know?
Yeah, in fact, Jason, the WireGuard developer writes back and says, explosive?
That's certainly not the intent here.
The project is changing direction in a big way.
Collaborating with others on the crypto API will be an important part of that.
Announcing that change in direction, those intentions and rationale and why will be okay.
And then inviting collaboration is a responsible thing to do in the earliest opportunity.
Better to announce intent early rather than surprise people or deter potential collaborators
by keeping plans secret.
I kind of agree in this case.
I wonder, is this just a, you know, communication breakdown?
People normally speak over email and there is a kind of a, you know, it's difficult to
get the kernel to accept your, accept your work.
Seems like maybe Dave was having a conversation and Jason took that as a little more final
than Dave really meant it to be.
Well, and if you're going to rip out one of the, if you're going to just yank out zinc,
which is a key differentiator of that product, you probably want to give people a heads up
as fast as possible.
There's that too.
That's the community news.
So let's do a little housekeeping because we have some big things coming up.
AugCamp 19, just around the corner.
Mr. Wimpress will be there, won't you Wimpy?
I certainly will.
I'm looking forward to hearing everything that happens.
I am very jelly.
I'm not going, but Mr. Joe Resington will be there and there will be a panel, a podcast
panel.
That sounds like something we might like.
We got a theme going this episode with the alliteration.
It includes several of your internet favorites out there and they need your questions.
So we'll have a link about that in the show notes if you're in the area and you want to
hear several of your favorites.
Yeah.
You got questions for them.
Things you've always been dying to know.
Whatever they are.
Now's the time.
Let's get started.
Hosted by the internet's own Joe Resington.
Yeah.
See, that's the problem is he's not going to be answering the questions and that's,
that's what I want to ask.
That's true.
He is good at asking the questions though.
Oh, very good.
Hey, guess what?
New month, new free courses.
Elle just released a whole new batch of community courses.
The October free courses are here.
The big post is up over on the Linux Academy blog.
We have Alinkskies as always, but you can find it there as well.
There is a bunch of good stuff to get in there, including database administration and SQL
language basics.
If that's something you've struggled with before, Ansible playbook, deep dive.
If you need to learn Ansible and if you're wrapping your head around databases for the
first time, database essentials would be perfect for you.
There's also some stuff in there for Azure, Azure command line essentials and other free
courses.
And of course the community account is free as well.
Elle goes through and curates those every single month.
There's some that are persistent and some that are brand new every month.
I love that.
You know, it's kind of, we kind of get to sneak in there and take this content normally
costs money and boom, boom, free.
Wes and I are traveling next week.
We're going down to Texas cyber summit where we'll meet up with Al and Cheezy.
Oh yeah.
Oh yeah.
It's going to be a good show.
Texas cyber summit 2019.
You can win tickets.
We have a new winner, don't we?
Enrique is our latest winner.
We have two tickets left.
I think Al plans on giving out one of those tickets tomorrow.
Not sure exactly what time, but to enter, all you have to do is join the telegram.
Group, which is TCS2019.ellopunk.com link in the notes, join us and, uh, you'll be entered
to win.
And if you don't, if you can't come, you know, but, uh, we pick your name and we're going
to send out a little swag pack to you.
Um, so looking forward to seeing everybody there and it's, it seems to be stacking up.
I mean, I've, I've seen, uh, five or six people now from just the Texas, uh, Linux fest crew
that are showing up.
So it ought to be a really, uh, really interesting turnout and could be a good way to get a swag
back.
Absolutely.
And then of course, uh, there'll be the hacker family dinner and L and Allie's un-birthday
party at two brothers barbecue.
So join us for that.
We'll all sit down and have some barbecue and hang out, you know, do what we do in Texas,
right?
West and I land like the bosses that we are kind of late.
So if you want to come and see West and I angle towards the end of the dinner, we're
going to roll straight from the airport to the dinner.
We are.
Indeed.
We're going to be hungry.
You know?
Yeah.
We're going to want to eat the crap out of that barbecues.
We'll be on the plane all day long.
Okay.
Or you go early, we'll meet you there and then just make sure there's a lot of barbecue
already there.
Yeah.
Well, and then Carl, I think has vetted the barbecue.
He ate there like twice in one week.
It's Carl approved.
So wow.
That's a selfless act.
Isn't it?
It can't be that bad.
Just doing what I got to do, man.
So the unofficial hacker family dinner and un-birthday party, Wednesday, October 9th in
San Antonio details at meetup.com slash Jupiter broadcasting.
Even if you're listening to this show after the fact, meetup.com slash Jupiter broadcasting
is worth keeping your eye on because that is where we announce that kind of stuff and
we will do future meetups as well.
Let's check that out.
Texas in October.
There's worse places to go.
We'll see you there.
All right.
I have a question for everybody as we get into this part of the show, we're going to
get into our first steps after an install to make it just right.
But I'm curious to know how old y'all's install is right now.
Mr. Payne, we have a couple of commands that we'll link to in the show notes, but you ran
the old command skis there on your machine.
How old is your install right now?
I am one week away from a year with Neon.
All right.
Yeah.
Isn't that fun?
So actually while we're at the cyber summit, it'll be my Neon anniversary.
That's not bad.
I'm thinking that makes it a perfect time to mix things up too.
Now I've done my year.
I can say that I've tried it.
I've given it an honest try.
Right.
Time to change.
Yeah.
Maybe it'll happen.
I bet somebody in the chat room will have a longer install date.
So chat room, feel free now to reveal your install dates in the chat room.
You can check my Twitter feed if you need a command on how to check your date.
Wimpy, have you ran this command?
Have you checked the, it's the current install you're on.
I mean, everybody has older installs, but the machine you're on right now.
Yeah.
So I'm in an interesting position in that I built this computer earlier in the year.
So my install date is March the 3rd, 2019, but that's days after I actually finished
building this brand new computer.
A nice fresh machine.
It's been upgraded through three versions of Ubuntu in that time.
So it was installed with 1810, it was upgraded to 1904 and it's now running 1910.
Naturally.
Of course, of course.
The system I'm sitting at here in the studio was installed on January 29th, 2018, which
is pretty good for us.
That's pretty good.
That is actually pretty good.
Mm-hmm.
My machine upstairs is February, 2018, 2018, 1804 was a game changer for me.
That was the OS that I just, I rebased every workstation I have on.
And the ones I installed, all these machines in the studio have the same install date because
they were all done on that day.
You know, there's something kind of enjoyable, I don't know if it's just because we've done
it for so long or the sort of spirit of installing Linux, but we don't even need to reinstall
that often, right?
I mean, like employees upgrades have gotten to be pretty darn good now.
And there are many times there's no problems with my machine, it's just fun to wipe it
and set it all up again.
And also installing Linux now is just so darned easy.
And quick.
That's true.
Alex, did you check the install date there on your machine?
Well, so I have two SSDs in the system.
So this Arch install is about three or four weeks old because I bought a new boot SSD,
but the Arch install before it, which technically is still bootable, which I'm going to count
is about 18 months old.
Okay.
Okay.
I think, I think we're going to find is the majority have pretty new installs.
I don't know what that says about us.
What about you Cheesy?
Did you have a chance to check the date of your install?
Yeah.
So my old MacBook that's running Pop OS was refreshed May 11th of 2019.
And then I've actually got the beta for Matei pulled down and I plan on putting on a test
machine later too.
So for me, it's one of those things that I always jump around, you know, just to see
what's out there.
And I don't know.
I mean, I guess I could check some raspberry pies around the house.
I'm sure they would have an older install date.
This is why WestK execs everywhere.
ByteBin, did you have a chance to check the date on your install?
Yeah, I seem to have a two year old and two months old install.
That's not bad.
That's actually pretty, pretty dang good.
What distro is that?
Solus.
I did not expect that.
Very nice.
But a nice one also.
I guess what was discussed on Jupiter broadcasting about two years and two months ago.
I'm going to say Solus.
I love that.
That's so great.
What about you, Brent?
Did you get a chance to check your workhorse?
Well, that lovely command you gave me didn't work because I'm on Arch, I guess, but I did
find a Cinchy file date and it corroborates with my memory, which is 2017 0314.
So that's kind of old.
Whoa.
Whoa.
And you're living proof that you can drive Arch daily.
Anybody else?
Can anybody else beat 2017?
I bet you that's the oldest install.
I can beat it.
I'm still on 1604, so it's 30th of June.
It's my desktop and my Windows environment is enlightenment, so I compiled it myself
on GitHub.
The software I need, I get some snaps and some PPAs, so why not?
We're only talking desktops here, right?
For the purposes of this, I'm thinking we're talking whatever machine you're sitting in
front of right now, because we've all got like maybe old boxes in a closet somewhere.
What I was wondering if you still had a droplet running Arch, West, can you get into that
box?
Yeah.
That would be fascinating.
West will attempt to get into that box.
That's a great, great question.
I have an idea from one time I looked.
We'll see.
We'll see.
Anybody else in the mumble room have a chance to check the date on their install?
Yeah.
Mine was Thursday, June 6th of this year on Ferran OS because I've been testing different
distros and it's on a new computer I built.
And you stuck with Ferran for a little bit now?
Yeah.
Well, I actually have three.
I have Ferran OS, Pop OS, and Ubuntu 18.04 on this machine.
So you're just distro hopping every day.
Yeah.
Some of us distro hop every few months.
Jill, she distro hops every day.
Yeah.
Okay.
Here we go.
All right.
The results are in.
Hold on.
Hold on.
You want to build a little suspense for this?
Here we go.
The box in the cloud running JBOT.
Which crashed during the show.
I will note.
Yes.
The file system was created Monday, April 1st, 2013.
Yes.
Yeah.
Wow.
Cool.
Whoa.
You can't run a rolling distro on a server though.
You cannot do it.
It just won't work.
It just won't work, especially not one that has a network and that is running server services.
You cannot do it.
I don't know about that, but you do certainly have to keep up with the update.
You do.
We haven't always been super great about that because one of the challenges is the Digital
Ocean pinned the kernel.
So that was a little bit tricky to work around and keeping it up to date meant that we eventually
broke the networking stack so it doesn't auto start when the system loads.
So it hasn't been perfect, but it has worked.
I think we're going to migrate off of that and just containerize that whole thing and
then throw it on something else.
But it almost seems like a fun challenge to take someone who thinks they're really good
or wants to learn Arch and then we'll let them upgrade it and see if they can get it
working from here.
It really is.
So that install date is impressive, but I hate to do this.
Uh-oh.
Hold on.
Can I do this?
Hold on.
I'll do this.
All right.
Go ahead, Wimpy, with the reveal.
The UbuntuPodcast.org server was installed in February 2006 and has been dist-upgraded
from 6.06 to 18.04 to 12.04 and is currently running 14.04 on ESM.
Wow.
That's a case study right there.
Right there.
You write that up as a case study.
That's a scientific experiment.
All right.
Well, that was a lot of fun.
So let's talk about what we do once we reload these machines because you can see we have
a mix here.
This is really fascinating.
We have the old boxes, and we also have some very, very fresh systems.
And I'm thinking my workstation upstairs is due for a reload.
It's been around since 2018, which isn't super long.
But I have desktop hopped instead of distro hop.
I love having all my stuff set up, my SSH keys, my GPG keys, all my configs.
And I've worked on exporting that out and making it synced or whatever.
But it took a while to get there.
And so in the meantime, I switched from Plasma to Gnome Shell to XFCE, and they got a lot
of baggage.
So I thought in the next round of releases come out, it's probably time to do a clean
install.
And I've thought about maybe using this as an opportunity to automate aspects of this.
That's something that I've talked to Alex about and something I've talked to Wes about,
trying to really go to the next level of making it a more efficient process.
So right now, I'll tell you guys what I do right now.
My current workflow is I get a new box, I get it installed.
First thing I got to do is I got to install Nextcloud and Syncthing.
Nextcloud for my work stuff, Syncthing for my personal stuff and my notes.
Then I got to get Firefox and Chrome, which I also then set up their respective syncing
services.
A lot of this stuff is pulling down configuration that's been stored off site.
So already you've got a whole bunch of files and all your browser stuff ready to go.
So that wasn't too bad.
Then I try to do things like I tweak my terminal size to make sure it's not really annoyingly
narrow.
I get gnome-tweak installed if I'm on Gnome Shell.
I install Fish Shell.
I add the minimize and maximize buttons to Gnome Shell if I got to.
I configure Dash to Dock.
If I'm on XFCE, I'll probably install ULauncher.
Got to set up a dark theme, obviously, get to that.
Then I got to get my comms up, so I get Telegram, Slack, Mattermost, and email set up and configured.
Then if I'm on a desktop system, I've generally got what I call slash big, which I just take
a huge disk or like a J-Bot of disks and I just assign it to slash big, and that's where
like my project scratch is.
So if I want to do some drone footage or need to backup 15 distros off of Usenet and extract
them, that's where I have that space to just do something like that.
And if it's a laptop, I'm generally always now deploying WireGuard.
I'm always getting WireGuard set up and configured to link back to the studio.
And this is probably the things I do in like the first couple of hours of a new machine.
And I feel like some of these things could probably be automated, like the packages for
tasks, things like that could be done ahead of time.
We were just talking about the potential of like the systemd new portable home directory
idea, and that would fix some of this, not all.
So there's a kind of interesting split, right, you have some that's just like your user stuff,
it lives in your home, it's configuration for small applications, and you've got the
other part where you need to actually configure the system and make sure all the tools you
need are available.
All right, so let's see what folks in the virtual log are doing to see if they've solved
this problem.
MiniMech, do you have certain fundamentals you've got to go with and have you automated
their setup?
If you do, what are they and have you automated them?
I have not automated them, but on the desktop, it would be the mouse configuration, it will
be two programs, which is EMWheel and Easy Stroke, which is the mouse configuration for
scrolling wheels, tilt, left, right, and everything, because they are so crucial in my workflow.
Afterwards, installing software is easy, but to use the desktop, I'm so used to these two
programs that I can't leave, I can't miss them.
I know what you mean, I totally know what you mean.
I'm like that with you, Launcher, on Xfce, I got to have it.
Technav, if I recall, you have scripted some of this stuff for your got-to-haves.
The programs I find that I use often, basically, I just wrote a simple batch script that just
adds the necessary repositories, installs items, install Node and so forth, and once
it gets through, pretty much I have most of what I need installed, and then from there,
as I find new things, I just add on.
You have a living batch script, essentially, that you add applications or version changes
to, and then you just back that up and restore that, and that seems like a pretty good approach.
And that might be the hardest part for you, I think, right?
Because if you're going to do this, you either need a time to audit your past system and
note what you need to actually add into your automation, or remember to update your automation
each time you need to go make a change to your system.
Or what's even more tricky, like desktops, Ubuntu, laptops, Fedora right now.
And that gets a little messy.
Alex, is this where you tell me I should use Ansible?
Absolutely, it is.
Yeah.
Something Wes just said there struck a chord with me as well.
So one of the principles I try to follow is something called infrastructure as code.
And what this means is every single change you make, no matter how inconsequential, you
make through automation.
So everything lives in Git, every change is applied via Ansible, or any other config management
tool, it doesn't have to be Ansible.
So let's say you're updating your Samba config file and you want to change a single character,
you change that file, commit it to Git, run the automation, or in a perfect world, there
is some continuous integration server like Jenkins or something else doing it.
And that works really well for servers, but for the desktop, it's possibly a little overkill.
What if you are from a Windows background from yesteryear, like a roaming profile.
So I restore that to my freshly installed machine, and I instantaneously have all of
my configuration applied, all of my SSH keys, my VPN configuration, just everything is enabled.
And I'm immediately in my familiar environment, you know, using the fish shell rather than
bash and all of that stuff.
So Martin, that sort of stuff sounds really appealing until I think to myself, well, what
was the reason I reloaded this box?
Was it to fix a screw up I made, or was it just to feel like I'm wearing a new pair of
shoes?
You know, that wonderful new shoe feeling.
Sometimes I don't want to bring all that crud with me.
How do you handle that?
So Yadim is basically an interface that sits on top of Git.
So it doesn't just check everything in that you do.
You can selectively choose what you're checking into your portfolio of config and what have
you.
Just like Git, if you do check something in and you don't like it, you can revert it.
So you know, you've got exactly the same semantics that Git has with Yadim in order to control
what's in your profile.
So it's very flexible.
And then the other thing I use is a thing called direnv, which is direnv.net.
And that's from the Nix project.
And that's a mechanism by which I have projects in different directory structures and it automatically
switches my environment context based on the directory I'm in.
So when I'm in my development Debian directory, all of my GPG signing keys and email addresses
and things that are used, you know, when you're packaging for Debian are all automatically
switched to that context.
And likewise, when I move to development Ubuntu, it all switches to development or development
multi-desktop and so on.
And that's a way to sort of not have to go through that craft each time.
You just as you switch between projects, your world just reflects, you know, what and where
you're working.
It's beautiful.
That is so beautiful.
That's what I love about our Mumble Room.
You know, this is, it's really like the wisdom of the community here.
That's really great.
I feel like I have so much to learn when it comes to this.
I just, part of me loves trying it differently every time, too.
So that's a bit of my resistance, but I think I'm getting past that.
I think that era is coming to an end, but Carl, you use Ansible on the desktop, don't
you?
Yes, sir.
Ansible has a deconf module that comes in real handy when you're trying to automate
gnome settings and it even works for gnome extensions and also for mate mate too.
All right.
I'm sold.
All right.
All right.
That's incredible.
I didn't realize that.
Okay.
That kind of makes a lot of sense.
This is something I'm going to invest some time in because I'm getting deeper and deeper
into setting up services on the LAN and it's getting to a point now where it's not a lot
of machines, but it is a lot of containers to manage and I could really, really, really
use a simple way to just get everything stood right back up if something were to fail on
it.
It's kind of fun when you're doing it bespoke each time on your laptop, but when it's things
you actually need just as a functional device, well, it gets old fast.
So Chris, imagine this as a panacea.
You know that lovely Pi 4 that you have running WireGuard on there connecting to each network
that you have at the studio in the RV.
Maybe if you are in Texas, you have a couple of machines down there, right?
And you can push a change to all of your machines with a single command using Ansible over WireGuard.
Wouldn't that be amazing?
Yes.
Oh, I want to do that.
Can I do that?
Is there anything I can do, Alex?
We can do that.
Yeah, that sounds like the territory of the self-hosted show in the near future.
I've been building some really amazing services and infrastructure on freaking Raspberry Pi
4s, to be clear.
I would never have believed it.
I wouldn't have either, Wes.
I really, truly wouldn't have.
And we're going to talk a little about my setup on the self-hosted show, but that stuff
has really gotten me thinking about just biting this automation bullet, just solving this
problem once and for all.
It's something I've been putting off for a ridiculously long time.
I just got to solve it.
We'll drag you into this century yet.
Come on in.
The water's lovely and warm.
I refuse, and that's why Cheese has the perfect app pick for me this week.
It's Telegram, but in Python and on the console.
Yeah.
So before I had consolidated everything into the cloud, I was running a lot of the stuff
on single-board computers, and so I would just SSH into the box and Curses all the
things.
So TTY clock, and Curses Telegram client.
So if you want to get your Telegram on, you can do that.
It even appears to have some awesome ASCII art instead of photos.
So the photos will be displayed in ASCII art.
Yeah.
Inline images, kind of.
Yeah.
Which is great, man.
You've got to love that.
So if you're looking for just a simple way to tie into your Telegram and get your Telegram
fix on the command line, check it out.
Something tells me Levi looks cute even in ASCII.
I bet you that's true.
I guarantee it.
All right.
And then for a bonus pick round, Mr. Martin Wimpress is coming in with a bonus app pick
this week.
What is it, Wimpy?
So my app pick is CPUX.
So are any of you familiar with CPUZ on Windows?
Is that like the tool that gives you all of the cool information about your CPU?
Yes.
So CPUX is basically CPUZ for Linux, and I'll paste links in the IRC in just a moment.
It's been around for a while.
Some of the distributions have it in the archives, but I've been working on helping introduce
this package into the Debian and Ubuntu archives.
And I've got a PPA for Ubuntu Disco and Eon, that's 1904 and 1910 for people that want
to have a play.
But it is as excruciatingly detailed about your CPU, cache, motherboard, memory, system
and graphic configuration as CPUZ is on Windows.
It's still a bit of kit.
I have used this before, but it is sometimes a bit of a pain in the butt to get it working
on a more recent distro.
So if you're working on the packaging side of this, I'm all in, that's great.
I just installed it on Arch in the space of time it took me to Wimpy to tell us about
it.
And it works just fine, Chris.
Get on with it.
By the way, did you guys know that Alex is using Arch?
You know, I might've heard that.
Yeah, I think he may have told us.
That's a great, that is one of those app picks that I have this category of tools that are
my favorite tools that I have forgotten to mention enough.
And that is one of them.
They're just so reliable sitting there at the bottom.
It's when I'm reviewing a laptop or a desktop and I'm not intimately familiar, it's such
a great tool for me to just understand some of the most important bits about a machine
and tell me where to start.
When I was overclocking the CPU and motherboard on this thing, it's got a prime 95 generator
built in.
So you can use that to sort of test the stability of your overclock and make sure everything's
performing well.
So it's a real useful bit of kit.
I've found a few interesting bits of software, which you could describe as software for risers
that I'm working on bringing to Debian and Ubuntu over the coming weeks and months.
I support this.
I will buy you a beer.
I support this.
CPUX has a wonderful app image that works really well.
I've been using that on all my different distros.
You've got to be kidding me.
Yes.
Thank you.
Oh my God.
I never even checked.
Unfortunately, app image does not come, I think Snap and Flatpak, but I don't often
think app image.
All you do is download it, man.
Yeah.
I should check it.
All right.
Good to know.
Good to know.
Well, it's getting easier and easier for us to run software these days.
That's truly, it has been one of my favorite things about, it's been in the works for years,
but I feel like I really appreciate and realize that in 2019, it is easier than ever for me
to pick whatever distro, whatever desktop and still get all the software I want.
But app image and Snaps and Flatpaks are a big part of that.
So it's pretty awesome to be a Linux user these days.
If you want to get more Martin Wimpress, go check out Ubuntu Podcast.
A brand new fresh version just came out just a few days ago, and it's worth a good listen
where Wimpy had a good take on a few things like we talked about earlier in the show.
So extended coverage on some of these topics in that episode of Ubuntu Podcast.
Thanks for making it, Wimpy.
It was good to see you and hear you.
Thank you for having me.
It's been delightful.
Now, obviously, Mumble Room, we appreciate all of you for being here.
You all are very great, and our Mumble Room is open to anyone in the community.
We will have a brief mic check to make sure that you've got a microphone, and we also
would like you to have headphones.
But don't worry, we're friendly about it.
And push to talk, so that way it's amenable for on-air production.
That's really all it takes, and then you can jump in the conversation about the topics
that we cover and sometimes influence the cover of the show.
Help us make the show better.
Yeah, we really do appreciate it.
So you can get information about that in our IRC room.
Go to irc.geekshed.net, pound Jupiter Broadcasting, hashtag, hashtag, I should say, not pound,
hashtag, hashtag.
Octothorp.
Thank you.
Thank you.
You knew what I wanted.
I got you.
Thank you.
I do like the Octothorp.
You can also just Google Jupiter Colony Mumble, as well as participate in our chat room during
the show.
We do it all on Tuesdays over at jblive.tv.
Tuesdays at 2 p.m. Pacific, although the stream usually gets started about a half hour, 45
minutes.
It's making early.
There's a lot more show.
Then there's some post-show.
Some of it makes it into the edit.
Most of it don't.
jblive.tv for that, JupiterBroadcasting.com slash calendar for your time zone, and LinuxUnplugged.com
slash, get ready for this, three, two, one, for all of our links.
See you next Tuesday.
Well, we had that whole alliteration theme this episode for at least 70% of the show.
I feel like our title should have some of that in it.
It definitely should.
You know?
Well, before the show, we were debating doing some Raspberry Pi 4 coverage, which there's
going to be plenty of coming up on the network in the next week or so.
So we thought, you know, maybe not, but we've been trying various different distributions
and Wimpy, I don't know if you've seen this, but there is some bloke out there has an unofficial
current build of Ubuntu 18.04 LTS for the Raspberry Pi with a bunch of the Raspbian
kernel patches and drivers and whatnot applied to his, whatever you want to call it, image
of 18.04.
I am aware.
And there's a group of people for CentOS that are essentially doing the same thing.
The CentOS community came along and said, all right, well, let's see what you did here.
And they've rolled some of that into CentOS 7.7.
But the results are so far a little hit and miss, eh Cheesy?
Yeah, so I've put 7.7 on a Pi 3.
It's 32-bit only.
It does work.
I have had some segment faults and I had it just basically die on me whenever I was trying
to install today's app pick.
So I think there's still some work to be done there.
There currently isn't a 64-bit image, at least not on the site for CentOS.
So I'll try it again later on whenever I feel like it's maybe matured a little bit more.
Yeah, yeah, I agree.
It's going to take some time.
I didn't quite fully appreciate how married the Raspberry Pi 4 would be to Raspbian initially.
But if you want to do firmware updates on the Raspberry Pi, you need Raspbian.
If you want full video decoding and all full driver support, you need Raspbian.
My Pi 4, which sat on my desk all week, I've actually been playing with it all show.
It's booting now off a USB SSD, I mean, slash boot's still on the SD card, but everything
else is on the USB SSD.
And it's slower to boot from the SSD by six seconds.
Would you believe that?
What?
Wes and I were just this morning talking about setting up essentially Raspbian on the SSD
with grub configured to boot another distro, I mean, not an SSD, but with grub on the SD
or the micro SD card pointing to an OS on a USB 3 SSD, like CentOS or Ubuntu or something
else.
Exactly what I'm doing here.
And I'm getting on DD, I'm just trying to do some basic benchmarking.
I was getting about 10 to 15 megs a second to the SD card.
I am seeing 144 to the SSD, which so there is some improvement, but installing packages
wasn't as lightning as I hoped.
What SD card do you have on that thing?
It's the one that came with my Mavic Pro, so it's like a SanDisk Gold 16 gig thing or
something.
You'd think it'd be somewhat decent.
I just put a Samsung Super Speed one in there and I'm getting around 80 megabytes to the
SD card.
It's still slower.
You see that's up there with a mechanical hard drive.
Yeah, exactly.
Which I also tested and you get about 80 or 90 meg on a mechanical drive.
It's not quite fast enough, though.
It's not quite.
And Raspbian is fine.
It's actually-
I like watching you say this.
You struggle, but it's weird to have that limitation.
I mean, not even a strict limitation, right?
But it's so much more of a platform and we're used to the generic x86 world.
Yes.
You're buying a platform.
You're buying a product on a platform and that's fine.
It's good.
Raspbian is fine.
It's all good.
It's just not the OS I have in production anywhere else in the world and never would
for any reason.
So it's like would be great if I could also run-
You're saying we're switching the studio to Raspbian?
No.
Never going to happen, right?
It's never going to happen.
So now I always have to have some one-off boxes and I guess it's okay.
It's fine.
You know, it's fine.
Your lament is duly noted.
Yes.
Thank you.
Thank you.
Maybe I'm just complaining because you know what?
Thankfully they do make a Raspbian Lite version available, which makes it a perfect little
headless system that gets great updates and runs containers just as well as any other
distro runs containers.
So at the end of the day, I can't really complain that much because it's working for me.
But I don't know, I guess I had this idea in my head that I was buying a 64-bit sort
of general ARM computer.
Not that it's not a product, but that it's so well known that I could just slam almost
anything on it and that hasn't been the case.
It is the case with like the Pi 3.
I can pretty much put any distro on there I want and be happy, but I didn't anticipate
this lag with the Pi 4.
Yeah.
Well, it's a similar amount of lag we saw when the Pi was first introduced.
You know, it took some time for the other distributions to ramp up and you know, get
their game on.
So, you know, it's a new beast.
It's not an evolution of what's come before.
It's an entirely different bit of kit.
So and as you've pointed out, there is a whole load of bring up that needs to be done in
a very different way.
Yeah.
That's what's hard to appreciate from afar.
And now I understand that.
And that said, I just got another two Raspberry Pis, which I have projects already planned
for and I'm ready to go.
I'm good with it.
I understand that now.
I just think that if I hadn't bought it yet, I would have appreciated to have a better
understanding of that, which isn't made very clear really anywhere in any reviews.
There's kind of a split, right?
Like a lot of this stuff is focused on people just getting into computers or Linux, not
power users who hosted Linux podcasts.
They'll want to set up like eight different servers, services on their homeland on a Raspberry
Pi 4, which I would, you know, really before the Raspberry Pi 4, I would have kind of just
considered these to be toys.
And now things kind of just shifted when I got four gigs of RAM and I got four CPU cores
and I got dedicated gigabit ethernet and Wi-Fi on its own bus.
It's like you were excited about it as a maybe potential desktop, but really it's become
your new server platform.
Yeah, it's not.
It's not a great desktop platform yet.
It's definitely usable and serviceable, but it's not there for me.
And as a server, it's there.
