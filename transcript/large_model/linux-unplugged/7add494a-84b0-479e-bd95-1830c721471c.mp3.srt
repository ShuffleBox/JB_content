1
00:00:00,000 --> 00:00:03,000
No pre-show this week. No pre-show. Radical.

2
00:00:03,000 --> 00:00:06,000
I refuse to stick to a formula. We're just going to start the show.

3
00:00:06,000 --> 00:00:08,000
This is an unplugged experience?

4
00:00:08,000 --> 00:00:10,000
Mm-hmm. I'm unplugging right now, Wes.

5
00:00:10,000 --> 00:00:12,000
Watch out.

6
00:00:12,000 --> 00:00:18,000
This is Linux Unplugged episode 160 for August 30th, 2016.

7
00:00:18,000 --> 00:00:35,000
Welcome to Linux Unplugged, your weekly Linux talk show that's getting ready to go back to school.

8
00:00:35,000 --> 00:00:36,000
My name is Chris.

9
00:00:36,000 --> 00:00:37,000
My name is Wes.

10
00:00:37,000 --> 00:00:38,000
It is that time of year, Wes.

11
00:00:38,000 --> 00:00:39,000
It really is.

12
00:00:39,000 --> 00:00:44,000
And the show is actually, so far, not gotten too cooked out during the summer.

13
00:00:44,000 --> 00:00:45,000
We've made it. We'll see.

14
00:00:45,000 --> 00:00:48,000
There's still a few weeks left to get hot, but we did good.

15
00:00:48,000 --> 00:00:51,000
Coming up on this week's episode of the Unplugged program,

16
00:00:51,000 --> 00:00:55,000
a couple of big open source projects that are close to my heart just got a big update.

17
00:00:55,000 --> 00:00:57,000
We'll tell you about those.

18
00:00:57,000 --> 00:00:59,000
Then there's been a topic going on.

19
00:00:59,000 --> 00:01:01,000
Binary versus text.

20
00:01:01,000 --> 00:01:02,000
What?

21
00:01:02,000 --> 00:01:03,000
Yeah, we'll get into that.

22
00:01:03,000 --> 00:01:08,000
Also, there is an open source project that is beating Canonical to the convergence punch,

23
00:01:08,000 --> 00:01:11,000
something we've talked about before, and they've got a big announcement.

24
00:01:11,000 --> 00:01:12,000
We'll cover them.

25
00:01:12,000 --> 00:01:16,000
Purism's in the news again with some interesting restructuring.

26
00:01:16,000 --> 00:01:19,000
And, oh, those of you with Skylake systems, I've got some good news for you.

27
00:01:19,000 --> 00:01:20,000
Oh, about time, too.

28
00:01:20,000 --> 00:01:24,000
Also, we'll look at some problems potentially with Steam OS.

29
00:01:24,000 --> 00:01:26,000
Talk about that a little bit in the show.

30
00:01:26,000 --> 00:01:33,000
And Mr. Wimpy has himself a brand new device, a new mobile rig.

31
00:01:33,000 --> 00:01:35,000
He's gotten – you won't believe it.

32
00:01:35,000 --> 00:01:37,000
You're not going to believe what he's gotten Ubuntu Touch on next.

33
00:01:37,000 --> 00:01:38,000
Stay tuned.

34
00:01:38,000 --> 00:01:40,000
The fifth thing will blow your mind.

35
00:01:40,000 --> 00:01:43,000
All right, Wes.

36
00:01:43,000 --> 00:01:44,000
Get ready for it.

37
00:01:44,000 --> 00:01:46,000
It's time to bring in our virtual lug.

38
00:01:46,000 --> 00:01:49,000
Time for appropriate greetings, Mamba Room.

39
00:01:49,000 --> 00:01:50,000
Hey.

40
00:01:50,000 --> 00:01:51,000
Hey.

41
00:01:51,000 --> 00:01:52,000
Hey.

42
00:01:52,000 --> 00:01:53,000
It's greetings.

43
00:01:53,000 --> 00:01:54,000
Greetings.

44
00:01:54,000 --> 00:01:55,000
Hello.

45
00:01:55,000 --> 00:01:56,000
What a beautiful cacophony.

46
00:01:56,000 --> 00:01:57,000
Something.

47
00:01:57,000 --> 00:01:59,000
It's not quite that, but it is something.

48
00:01:59,000 --> 00:02:00,000
Hello.

49
00:02:00,000 --> 00:02:01,000
Hello, virtual lug.

50
00:02:01,000 --> 00:02:03,000
It's actually great to have you here today.

51
00:02:03,000 --> 00:02:07,000
So let's start with some great news from Jonathan over at OpenShot.

52
00:02:07,000 --> 00:02:10,000
OpenShot 2.1 is released.

53
00:02:10,000 --> 00:02:15,000
A new release also comes with a pretty new intense video.

54
00:02:15,000 --> 00:02:16,000
Did you see this thing?

55
00:02:16,000 --> 00:02:17,000
Yeah, it is intense.

56
00:02:17,000 --> 00:02:19,000
It's super like boom, boom, boom, feature, feature, feature.

57
00:02:19,000 --> 00:02:20,000
That's kind of good for him.

58
00:02:20,000 --> 00:02:21,000
It shows off some of the features.

59
00:02:21,000 --> 00:02:24,000
So actually, I like it.

60
00:02:24,000 --> 00:02:27,000
It now has new waveform support, which –

61
00:02:27,000 --> 00:02:28,000
Look at that waveform.

62
00:02:28,000 --> 00:02:33,000
Yeah, he really – you've got to get an idea of it right there.

63
00:02:33,000 --> 00:02:34,000
So there you go.

64
00:02:34,000 --> 00:02:35,000
Yeah, it's actually pretty neat.

65
00:02:35,000 --> 00:02:39,000
New animation features, transparent image sequences, powerful key frame support, multiple

66
00:02:39,000 --> 00:02:40,000
layers.

67
00:02:40,000 --> 00:02:43,000
You can really actually do some pretty cool animation, and they have a video that demonstrates

68
00:02:43,000 --> 00:02:44,000
that.

69
00:02:44,000 --> 00:02:47,000
Stability and performance improvements are also in throughout.

70
00:02:47,000 --> 00:02:50,000
OpenShot now officially has waveform on audio clips.

71
00:02:50,000 --> 00:02:55,000
So like if you have a video down there, you'll see the actual formation of the audio in there,

72
00:02:55,000 --> 00:02:57,000
so you know almost quite right where to cut.

73
00:02:57,000 --> 00:03:02,000
It's a very useful editing tool, and it's something that a lot of other editors have

74
00:03:02,000 --> 00:03:03,000
done.

75
00:03:03,000 --> 00:03:06,000
So it's kind of nice to see this feature come back into OpenShot.

76
00:03:06,000 --> 00:03:10,000
There's also new snapping support for the timeline, which is something that Apple kind

77
00:03:10,000 --> 00:03:14,000
of pioneered, I think, in Final Cut X, or at least popularized it, and it's interesting

78
00:03:14,000 --> 00:03:16,000
to see that OpenShot's integrating that.

79
00:03:16,000 --> 00:03:18,000
It actually is a pretty good feature.

80
00:03:18,000 --> 00:03:23,000
Also, now users can customize all of the keyboards, shortcuts and stuff.

81
00:03:23,000 --> 00:03:24,000
That's nice.

82
00:03:24,000 --> 00:03:25,000
Our users will appreciate that.

83
00:03:25,000 --> 00:03:26,000
And the new tutorial system's in there.

84
00:03:26,000 --> 00:03:30,000
So it just pops up little pop-ups along the little things with friendly messages telling

85
00:03:30,000 --> 00:03:31,000
you what to do.

86
00:03:31,000 --> 00:03:32,000
Not like Clippy at all, guys.

87
00:03:32,000 --> 00:03:35,000
It's not like Clippy at all.

88
00:03:35,000 --> 00:03:38,000
And I like this kind of humble note here.

89
00:03:38,000 --> 00:03:42,000
We still have a few bottlenecks on performance, and we plan on addressing those soon.

90
00:03:42,000 --> 00:03:46,000
We targeted the very slowest parts of Lib OpenShot and made some dramatic improvements

91
00:03:46,000 --> 00:03:50,000
in speed, especially on some filters like brightness and saturation.

92
00:03:50,000 --> 00:03:51,000
Lots of other nice improvements.

93
00:03:51,000 --> 00:03:57,000
So that's a new version of OpenShot, and just sort of side note, comes with an app image.

94
00:03:57,000 --> 00:03:58,000
Hey.

95
00:03:58,000 --> 00:03:59,000
Yeah.

96
00:03:59,000 --> 00:04:03,000
So if you're a favorite editor on Linux, if you don't need to do major stuff, or say

97
00:04:03,000 --> 00:04:08,000
you want to move something from one container to another container, or you just want to

98
00:04:08,000 --> 00:04:11,000
take a clip of something, I always pronounce it avidmux.

99
00:04:11,000 --> 00:04:13,000
I'm not quite sure if that's the pronunciation.

100
00:04:13,000 --> 00:04:14,000
Yeah.

101
00:04:14,000 --> 00:04:15,000
You know, avidmux, avidmux.

102
00:04:15,000 --> 00:04:16,000
Version 2.6.13.

103
00:04:16,000 --> 00:04:17,000
I say it's called avidmux.

104
00:04:17,000 --> 00:04:18,000
Sure.

105
00:04:18,000 --> 00:04:19,000
Yeah.

106
00:04:19,000 --> 00:04:20,000
That works too.

107
00:04:20,000 --> 00:04:21,000
Sure.

108
00:04:21,000 --> 00:04:22,000
Why not?

109
00:04:22,000 --> 00:04:23,000
Is it avidmux?

110
00:04:23,000 --> 00:04:24,000
Yeah.

111
00:04:24,000 --> 00:04:25,000
Is it not avidmux because it demuxes the streams?

112
00:04:25,000 --> 00:04:26,000
Yeah.

113
00:04:26,000 --> 00:04:27,000
That's what I thought it was.

114
00:04:27,000 --> 00:04:28,000
avidmux.

115
00:04:28,000 --> 00:04:29,000
avidmux.

116
00:04:29,000 --> 00:04:30,000
avidmux.

117
00:04:30,000 --> 00:04:31,000
That could be avidmux.

118
00:04:31,000 --> 00:04:32,000
I actually like that a lot.

119
00:04:32,000 --> 00:04:33,000
Yeah.

120
00:04:33,000 --> 00:04:34,000
I think that's actually exactly what it is because you can demux.

121
00:04:34,000 --> 00:04:35,000
It's been decided.

122
00:04:35,000 --> 00:04:39,640
And so this is really nice, especially if you have, say, a hardware device that can't

123
00:04:39,640 --> 00:04:43,120
play MKV files, and you just want to take the video out and the audio out and put it

124
00:04:43,120 --> 00:04:46,520
into an mp4 container, and you don't want to re-encode the video or anything.

125
00:04:46,520 --> 00:04:47,520
This is great for that.

126
00:04:47,520 --> 00:04:50,840
If you want to just clip like a moment of your favorite movie, you can throw it in here

127
00:04:50,840 --> 00:04:51,840
and do it in and out.

128
00:04:51,840 --> 00:04:54,560
It seems like there's a – like especially with these new features, there's a lot of

129
00:04:54,560 --> 00:04:56,280
low-hanging fruit that you can get done with this.

130
00:04:56,280 --> 00:04:57,280
Yeah, man.

131
00:04:57,280 --> 00:05:01,120
This is really sweet because they've added a bunch of great features for Linux, and guess

132
00:05:01,120 --> 00:05:03,200
what else?

133
00:05:03,200 --> 00:05:05,320
Also being distributed via an AppImage.

134
00:05:05,320 --> 00:05:06,320
Wow.

135
00:05:06,320 --> 00:05:10,320
AppImage is taking off?

136
00:05:10,320 --> 00:05:11,320
I guess.

137
00:05:11,320 --> 00:05:12,320
I guess.

138
00:05:12,320 --> 00:05:14,200
I've actually heard there's a flat pack for OpenShot that isn't installing under

139
00:05:14,200 --> 00:05:15,200
Fedora right now, too.

140
00:05:15,200 --> 00:05:16,200
Awkward.

141
00:05:16,200 --> 00:05:18,200
Both of those already had AppImages before this release.

142
00:05:18,200 --> 00:05:19,200
Yes.

143
00:05:19,200 --> 00:05:20,200
Yes.

144
00:05:20,200 --> 00:05:21,200
Yeah.

145
00:05:21,200 --> 00:05:22,200
Yeah.

146
00:05:22,200 --> 00:05:24,640
I just think that's kind of interesting that they both chose to go with AppImage.

147
00:05:24,640 --> 00:05:27,160
It is a three-horse race officially.

148
00:05:27,160 --> 00:05:32,200
Some posts about developer experience in deciding that and where the different challenges lie

149
00:05:32,200 --> 00:05:33,200
for each format.

150
00:05:33,200 --> 00:05:34,200
Yeah, I would like to see that.

151
00:05:34,200 --> 00:05:40,360
OpenShot already had an AppImage before either Snap or FlatPacks were released at all.

152
00:05:40,360 --> 00:05:44,360
There's actually an interesting thing because AppImages are something I've been looking

153
00:05:44,360 --> 00:05:48,780
for more commonly because there's a few problems.

154
00:05:48,780 --> 00:05:54,800
If you install the latest version of FlowBlade, you'll get a problem with the dependencies

155
00:05:54,800 --> 00:05:58,120
and libraries that Kade and Live have.

156
00:05:58,120 --> 00:06:04,520
They even have a note on their tutorial about the FlowBlade issues.

157
00:06:04,520 --> 00:06:07,320
If there was an AppImage for it, it would work.

158
00:06:07,320 --> 00:06:08,320
Oh, I see.

159
00:06:08,320 --> 00:06:13,960
It's actually kind of interesting that these video editors are having releases so close

160
00:06:13,960 --> 00:06:14,960
to each other.

161
00:06:14,960 --> 00:06:15,960
Yeah.

162
00:06:15,960 --> 00:06:19,640
I was also reading about FlowBlade today, too.

163
00:06:19,640 --> 00:06:22,000
One big awesome day for the community.

164
00:06:22,000 --> 00:06:23,000
Yeah.

165
00:06:23,000 --> 00:06:24,000
Okay.

166
00:06:24,000 --> 00:06:27,200
I'm going to take all of that and douse a little pee on it.

167
00:06:27,200 --> 00:06:32,400
A little bit of pee here in our punch.

168
00:06:32,400 --> 00:06:34,520
This is over from Liam at Gaming on Linux.

169
00:06:34,520 --> 00:06:40,600
I wanted to feature this just because I've heard this from a few now and I don't really

170
00:06:40,600 --> 00:06:41,600
know what to make of it.

171
00:06:41,600 --> 00:06:42,840
Maybe you guys can help me sort this out.

172
00:06:42,840 --> 00:06:46,640
I ditched SteamOS in favor of a normal Linux distribution for my gaming.

173
00:06:46,640 --> 00:06:50,160
Recently I sat with my son and wanted to play a point and click adventure game called Putt

174
00:06:50,160 --> 00:06:51,160
Putt with him.

175
00:06:51,160 --> 00:06:53,400
SteamOS needed to restart to update.

176
00:06:53,400 --> 00:06:56,120
So I did it, just flashed to a black screen after that.

177
00:06:56,120 --> 00:07:00,640
We waited quite a long time to see if anything happened, but nothing did.

178
00:07:00,640 --> 00:07:04,160
After rebooting, the system was completely broken with another black screen.

179
00:07:04,160 --> 00:07:06,780
I tried everything I could find to fix it.

180
00:07:06,780 --> 00:07:09,600
That was the final nail in the coffin for my time with SteamOS.

181
00:07:09,600 --> 00:07:12,760
I don't have time to deal with such a breakage, especially not when you're dealing with like

182
00:07:12,760 --> 00:07:16,800
a console experience, because my PS4s had problems before, so SteamOS certainly isn't

183
00:07:16,800 --> 00:07:20,520
alone in having issues, but the difference here is massive.

184
00:07:20,520 --> 00:07:25,840
On the PS4, I'm able to reboot into some sort of safe mode and essentially redo the PS4 operating

185
00:07:25,840 --> 00:07:30,960
system, all achieved with the controller without any terminals, no resorting to keyboard commands

186
00:07:30,960 --> 00:07:32,600
or anything of the sort.

187
00:07:32,600 --> 00:07:37,840
My other issue is, honestly, I feel like Valve themselves are doing very little for SteamOS

188
00:07:37,840 --> 00:07:40,800
to progress it into anything or something.

189
00:07:40,800 --> 00:07:43,920
Other than driver updates and security fixes, they don't seem to be doing anything with

190
00:07:43,920 --> 00:07:44,920
it.

191
00:07:44,920 --> 00:07:48,040
They're not even really talking about it anymore.

192
00:07:48,040 --> 00:07:52,320
I later set up Ubuntu Mate and within about an hour, I was running solidly with Steam

193
00:07:52,320 --> 00:07:54,280
and everything was dandy.

194
00:07:54,280 --> 00:07:58,160
For someone like me, with whom Linux is the norm, SteamOS is no better than a normal desktop

195
00:07:58,160 --> 00:08:00,360
distribution with Steam installed.

196
00:08:00,360 --> 00:08:03,240
I still believe SteamOS has its place, though.

197
00:08:03,240 --> 00:08:07,600
On pre-built machines, of course, it's much easier, and of course, it does help promote

198
00:08:07,600 --> 00:08:11,040
Linux gaming and it helps people to say there's too many distributions, there's an answer

199
00:08:11,040 --> 00:08:14,880
for that, but it just doesn't seem to be a good fit for regular Linux users.

200
00:08:14,880 --> 00:08:18,880
I'm not too surprised by that particular take, but I'm a little – I kind of also

201
00:08:18,880 --> 00:08:22,920
echo his sentiment like what the hell is going on with SteamOS?

202
00:08:22,920 --> 00:08:23,920
Yeah, exactly.

203
00:08:23,920 --> 00:08:28,160
There's not – I mean when they launched, I feel like you could get away with it being

204
00:08:28,160 --> 00:08:32,040
kind of minimal, but now that in theory, it should be maturing or getting better, there's

205
00:08:32,040 --> 00:08:33,520
not that much of a value add, right?

206
00:08:33,520 --> 00:08:38,040
Like if they were doing stuff like atomic updates to the core operating system or like

207
00:08:38,040 --> 00:08:42,200
some sort of like more console-like safe experience, then I could really see selling it, but if

208
00:08:42,200 --> 00:08:46,640
it's just going to have their runtime and start Steam on load, then that's pretty

209
00:08:46,640 --> 00:08:48,240
easy to replicate if you're a Linux user.

210
00:08:48,240 --> 00:08:50,120
And pretty boring, too.

211
00:08:50,120 --> 00:08:52,240
Like where's the innovation there?

212
00:08:52,240 --> 00:08:53,240
Exactly.

213
00:08:53,240 --> 00:08:54,240
Yeah.

214
00:08:54,240 --> 00:08:56,280
I wonder if anybody in the Mumble Room is a SteamOS user.

215
00:08:56,280 --> 00:09:01,360
Do they have any take on this?

216
00:09:01,360 --> 00:09:04,000
I'm going to have to try to set up a SteamOS machine and give it a good solid take.

217
00:09:04,000 --> 00:09:06,240
Yeah, I know they haven't tried it since it first came out.

218
00:09:06,240 --> 00:09:10,020
Yeah, I haven't really found it to be super necessary, and I find it to be more interesting

219
00:09:10,020 --> 00:09:13,440
what some of the distributions are doing to make Steam work better.

220
00:09:13,440 --> 00:09:14,440
Yeah.

221
00:09:14,440 --> 00:09:17,080
Like one Steam box, one Solus box?

222
00:09:17,080 --> 00:09:20,640
Gamingonlinux.com, but I will have a link in the show notes, too, if you want to check

223
00:09:20,640 --> 00:09:21,640
that out.

224
00:09:21,640 --> 00:09:22,640
So I'll follow that story.

225
00:09:22,640 --> 00:09:23,640
I don't know what's going on.

226
00:09:23,640 --> 00:09:28,640
There's also been some review coverage, whatever you want to call it, recently over at PC World

227
00:09:28,640 --> 00:09:31,680
by Chris Hoffman, and he calls it out.

228
00:09:31,680 --> 00:09:35,600
He says, broken promises, games that never made it to SteamOS and Linux, announcements

229
00:09:35,600 --> 00:09:38,880
that were promised but there was never really any delivery.

230
00:09:38,880 --> 00:09:45,000
He goes down a list of things like Batman Arkham Asylum, Street Fighter, Total War,

231
00:09:45,000 --> 00:09:47,440
Gauntlet, other ones like that.

232
00:09:47,440 --> 00:09:52,960
Yeah, Project Cars is another one.

233
00:09:52,960 --> 00:09:57,800
I don't want to say this is not working out, but at the same time, it feels like Valve's

234
00:09:57,800 --> 00:10:03,920
approach where they don't really get super involved in this part of it is not working

235
00:10:03,920 --> 00:10:05,480
out.

236
00:10:05,480 --> 00:10:09,160
Maybe things will change with Vulkan as Vulkan gets wider adoption.

237
00:10:09,160 --> 00:10:13,320
Maybe there's some pushes going on in the background that we don't get to see, but it

238
00:10:13,320 --> 00:10:14,320
doesn't feel like it.

239
00:10:14,320 --> 00:10:15,320
Yeah.

240
00:10:15,320 --> 00:10:16,320
So there you go.

241
00:10:16,320 --> 00:10:17,320
That's our Valve update.

242
00:10:17,320 --> 00:10:22,840
If you guys out there have an experience with it, SteamOS or otherwise, let us know.

243
00:10:22,840 --> 00:10:25,960
Leave a comment wherever you watch this or go over to the contact form.

244
00:10:25,960 --> 00:10:29,800
So you tried out Maroo OS, what was it, like a month ago or so?

245
00:10:29,800 --> 00:10:30,800
I think so, something like that.

246
00:10:30,800 --> 00:10:33,680
And that was, it's a Debian, you put it on your Nexus device, and then when you hook

247
00:10:33,680 --> 00:10:38,520
your Nexus device up to an HDMI display or whatnots, you get a full Linux desktop, right?

248
00:10:38,520 --> 00:10:39,520
Yep.

249
00:10:39,520 --> 00:10:43,480
Did you see the news that they are going fully open source and they're going to expand to

250
00:10:43,480 --> 00:10:44,480
additional devices?

251
00:10:44,480 --> 00:10:46,160
Yeah, that is pretty exciting.

252
00:10:46,160 --> 00:10:47,920
They are really kicking it up.

253
00:10:47,920 --> 00:10:51,480
I'm glad to see that they have open source things and they've got that development rolling

254
00:10:51,480 --> 00:10:55,600
because before it felt a little closed off and I was a lot less interested in it if it

255
00:10:55,600 --> 00:10:57,080
wasn't going to really be open source.

256
00:10:57,080 --> 00:10:58,080
Yeah.

257
00:10:58,080 --> 00:11:01,480
Interesting too that they're still focusing on the Nexus 5, which just got ditched by

258
00:11:01,480 --> 00:11:02,480
Google.

259
00:11:02,480 --> 00:11:03,480
Yes, it did.

260
00:11:03,480 --> 00:11:06,600
It's never been a better time to find a new use for that.

261
00:11:06,600 --> 00:11:08,200
And here's the GitHub page.

262
00:11:08,200 --> 00:11:09,200
Look at that right there.

263
00:11:09,200 --> 00:11:11,600
They got it all out in the open.

264
00:11:11,600 --> 00:11:16,840
They're using Debian, LXE, and of course, AOSP.

265
00:11:16,840 --> 00:11:20,720
But the devices that they have, some of the devices they're going for are like the Moto

266
00:11:20,720 --> 00:11:24,360
G, they're going to try it on the Moto G. There's some LG devices they want to try getting

267
00:11:24,360 --> 00:11:25,360
this working on.

268
00:11:25,360 --> 00:11:29,120
Of course, people are throwing in for the 6P.

269
00:11:29,120 --> 00:11:32,040
There's some devices they're having a hard time with right now, like I think there's

270
00:11:32,040 --> 00:11:35,840
something blocking the Nexus 5X.

271
00:11:35,840 --> 00:11:38,680
But the Moto G, second gen, that is already planned.

272
00:11:38,680 --> 00:11:42,600
The LG G3, already planned, G2, already planned.

273
00:11:42,600 --> 00:11:48,520
And the Nexus 6P is planned, and the 6 are planned, and the 7, the tablet.

274
00:11:48,520 --> 00:11:53,480
Now, with the tablet, you're really getting my interest.

275
00:11:53,480 --> 00:11:54,880
This could be extremely interesting.

276
00:11:54,880 --> 00:11:59,560
Now, when you used it, you spent some time with it.

277
00:11:59,560 --> 00:12:04,200
If they expanded to some other devices, or say you replace that Nexus 5X, did you crack

278
00:12:04,200 --> 00:12:05,200
it?

279
00:12:05,200 --> 00:12:06,200
Did you crack it?

280
00:12:06,200 --> 00:12:07,200
Yes, it is cracked.

281
00:12:07,200 --> 00:12:08,200
It's a darn shame.

282
00:12:08,200 --> 00:12:09,200
That is a bummer.

283
00:12:09,200 --> 00:12:10,200
Wow, you made it a long time, though.

284
00:12:10,200 --> 00:12:11,200
I know.

285
00:12:11,200 --> 00:12:12,200
It's gone a long time.

286
00:12:12,200 --> 00:12:13,200
I'm kind of waiting.

287
00:12:13,200 --> 00:12:16,160
I want to see what these new HTC Nexuses look like in the fall here, but we'll see if I

288
00:12:16,160 --> 00:12:17,160
can wait that long.

289
00:12:17,160 --> 00:12:18,160
Yeah, good.

290
00:12:18,160 --> 00:12:22,080
So I definitely am about ready to try out some more things on here now that it's kind

291
00:12:22,080 --> 00:12:23,880
of not so pretty anymore.

292
00:12:23,880 --> 00:12:24,880
Yeah.

293
00:12:24,880 --> 00:12:26,680
The 5, though, is not the fastest device.

294
00:12:26,680 --> 00:12:28,180
It is not, no.

295
00:12:28,180 --> 00:12:30,280
And how was performance when you tried it?

296
00:12:30,280 --> 00:12:31,440
It was fine.

297
00:12:31,440 --> 00:12:35,520
I had some problems, and they were, at the time in the FAQ, it was talking about how

298
00:12:35,520 --> 00:12:37,600
some people have problems with the Bluetooth mouse.

299
00:12:37,600 --> 00:12:42,440
I encountered some of those, but otherwise, like the window performance, using the terminal,

300
00:12:42,440 --> 00:12:45,720
pulling up a web browser, all of that worked just dandy, which was nice.

301
00:12:45,720 --> 00:12:47,520
And so I'm excited that the code is out there.

302
00:12:47,520 --> 00:12:48,580
It'd be cool to play with this.

303
00:12:48,580 --> 00:12:49,580
Maybe you don't want Debian.

304
00:12:49,580 --> 00:12:53,840
Maybe you want to have it behave slightly differently, especially for people who are

305
00:12:53,840 --> 00:12:57,840
more familiar with the Linux desktop, having a code base that kind of touches that as well

306
00:12:57,840 --> 00:13:00,760
as the Android system, I think will be nice.

307
00:13:00,760 --> 00:13:06,000
Look at them just continuing to chug along, and I'd love to know more about their plans.

308
00:13:06,000 --> 00:13:11,320
So if they hear this and want to chat on the show, reach out at Chris Elias on Twitter.

309
00:13:11,320 --> 00:13:12,320
Let's talk some more.

310
00:13:12,320 --> 00:13:15,360
While we're talking about mobile, let's talk about our friends over at Ting.

311
00:13:15,360 --> 00:13:20,600
Go to linux.ting.com to take advantage of the unplugged discount and support the show.

312
00:13:20,600 --> 00:13:25,280
You're going to get $25 off your first device, or service credit if you bring a device.

313
00:13:25,280 --> 00:13:29,440
This is great, too, because they have a GSM and CDMA network, and your average Ting bill

314
00:13:29,440 --> 00:13:34,040
is going to be $23 per device, and you're going to get a $25 service credit.

315
00:13:34,040 --> 00:13:35,280
So that's cool.

316
00:13:35,280 --> 00:13:37,520
They also have an early termination relief program.

317
00:13:37,520 --> 00:13:41,440
If you're in one of those crappy monopoly contracts, you can get a little help from

318
00:13:41,440 --> 00:13:42,440
Ting to get out of that.

319
00:13:42,440 --> 00:13:46,320
Start by going to last.ting.com, and then check out how much you would save.

320
00:13:46,320 --> 00:13:50,320
Ting is really mobile that makes sense, because it's just you pay for your minutes, your messages,

321
00:13:50,320 --> 00:13:51,320
and your megabytes.

322
00:13:51,320 --> 00:13:53,280
It's $6 for a line.

323
00:13:53,280 --> 00:13:54,280
That's it.

324
00:13:54,280 --> 00:13:58,040
The program takes its cut, and it's going to vary depending on where you live.

325
00:13:58,040 --> 00:13:59,040
Like he do, Wes.

326
00:13:59,040 --> 00:14:00,040
He sure does.

327
00:14:00,040 --> 00:14:01,040
Like he do!

328
00:14:01,040 --> 00:14:02,040
He do!

329
00:14:02,040 --> 00:14:03,040
But you know, that's going to vary.

330
00:14:03,040 --> 00:14:04,040
Ting can't stop that.

331
00:14:04,040 --> 00:14:06,040
They would love to, but they can't.

332
00:14:06,040 --> 00:14:07,120
No, they can't.

333
00:14:07,120 --> 00:14:09,920
So you've got to factor that in, too, but they have a savings calculator that runs all

334
00:14:09,920 --> 00:14:10,920
that for you.

335
00:14:10,920 --> 00:14:12,320
The savings is nuts, though.

336
00:14:12,320 --> 00:14:15,960
My bill usually is under $40 for three different smartphones.

337
00:14:15,960 --> 00:14:16,960
Wow.

338
00:14:16,960 --> 00:14:17,960
I love it.

339
00:14:17,960 --> 00:14:18,960
And they're all unlocked.

340
00:14:18,960 --> 00:14:19,960
I own them out, right?

341
00:14:19,960 --> 00:14:20,960
They're my devices.

342
00:14:20,960 --> 00:14:21,960
I bought some of them from the Play Store.

343
00:14:21,960 --> 00:14:22,960
I bought some of them directly from Ting.

344
00:14:22,960 --> 00:14:24,880
But you know what's honey badger?

345
00:14:24,880 --> 00:14:26,560
I'm totally honey badger when it comes to this kind of thing.

346
00:14:26,560 --> 00:14:33,200
I'm totally honey badger about this whole tier of devices that are just super, super

347
00:14:33,200 --> 00:14:35,320
easy to get into devices.

348
00:14:35,320 --> 00:14:37,360
They've never appealed to me, Wes.

349
00:14:37,360 --> 00:14:41,360
Never like the feature phones at $60, $70.

350
00:14:41,360 --> 00:14:42,480
Never appealed to me.

351
00:14:42,480 --> 00:14:47,080
And then recently, I was talking to somebody about, boy, man, I just get all these notifications

352
00:14:47,080 --> 00:14:48,080
about everything.

353
00:14:48,080 --> 00:14:49,080
Okay.

354
00:14:49,080 --> 00:14:51,880
So full disclosure, I was complaining about Android N and talking about how I'm just getting

355
00:14:51,880 --> 00:14:55,040
bombarded with notifications because all my notification stuffs are all messed up now

356
00:14:55,040 --> 00:14:56,040
with Android N.

357
00:14:56,040 --> 00:14:58,720
And so somebody said to me, he's like, why don't you just get like a flip phone?

358
00:14:58,720 --> 00:15:01,840
And I was like, oh.

359
00:15:01,840 --> 00:15:06,720
I could just get, because Ting's got some great deals on just like the simple, easy

360
00:15:06,720 --> 00:15:07,840
flip phones.

361
00:15:07,840 --> 00:15:10,720
Also a nice simple way to try out Ting for a little bit.

362
00:15:10,720 --> 00:15:14,700
Like check out the, I love, like if I was going to do this too, the Kyocera Dura, which

363
00:15:14,700 --> 00:15:18,200
is a nice heavy duty phone, $63, no contract.

364
00:15:18,200 --> 00:15:21,200
Just keep that in your back pocket all day, not worrying about it.

365
00:15:21,200 --> 00:15:26,120
And when someone needs to call you, they have you right there.

366
00:15:26,120 --> 00:15:27,720
And for $6 a month, I mean.

367
00:15:27,720 --> 00:15:28,720
But you know what?

368
00:15:28,720 --> 00:15:29,720
Look at this.

369
00:15:29,720 --> 00:15:33,440
They got the Moto E second gen for $57 right now.

370
00:15:33,440 --> 00:15:35,160
It's cheaper than a feature phone right now.

371
00:15:35,160 --> 00:15:36,640
They got it on sale.

372
00:15:36,640 --> 00:15:37,640
Wow.

373
00:15:37,640 --> 00:15:41,360
That's the phone to get if you want to get a decent Android device at an unbelievable

374
00:15:41,360 --> 00:15:44,520
price with no contract and only pay for what you use.

375
00:15:44,520 --> 00:15:50,080
Linux.ting.com, $57 for an off or for an unlocked, no contract.

376
00:15:50,080 --> 00:15:53,640
It also seems great if you have like a business or something and you just want like, hey,

377
00:15:53,640 --> 00:15:54,800
I want to give some phones to my employees.

378
00:15:54,800 --> 00:15:55,960
You need to run this one app.

379
00:15:55,960 --> 00:16:01,040
Do some basic messaging, like a Slack type app or a telegrams or a kid or a parent.

380
00:16:01,040 --> 00:16:04,000
Oh, that's, yeah, that's a good Pokemon device right there probably.

381
00:16:04,000 --> 00:16:05,000
Oh, exactly.

382
00:16:05,000 --> 00:16:06,000
Oh my goodness.

383
00:16:06,000 --> 00:16:07,000
Good point.

384
00:16:07,000 --> 00:16:08,000
Holy smokes.

385
00:16:08,000 --> 00:16:09,000
Check it out.

386
00:16:09,000 --> 00:16:10,000
Go see what Ting can do for you.

387
00:16:10,000 --> 00:16:11,000
They got a little savings calculator.

388
00:16:11,000 --> 00:16:12,000
You can try it out.

389
00:16:12,000 --> 00:16:13,000
See what that's like.

390
00:16:13,000 --> 00:16:14,000
Yeah.

391
00:16:14,000 --> 00:16:15,000
Look at that.

392
00:16:15,000 --> 00:16:16,000
LTE.

393
00:16:16,000 --> 00:16:17,000
Two different networks.

394
00:16:17,000 --> 00:16:24,160
This is, wow, $57 for the Moto E, second gen, no contract, no determination fee, pay for

395
00:16:24,160 --> 00:16:25,160
what you use.

396
00:16:25,160 --> 00:16:26,160
Wow.

397
00:16:26,160 --> 00:16:27,160
That's great.

398
00:16:27,160 --> 00:16:28,160
Linux.ting.com.

399
00:16:28,160 --> 00:16:29,160
Go check them out.

400
00:16:29,160 --> 00:16:30,160
Sign up and see how much you just might save.

401
00:16:30,160 --> 00:16:35,680
I don't have a lot to add to this next story and we do have a ton more to get into today,

402
00:16:35,680 --> 00:16:40,320
but I guess I wanted to take a moment and say, what the hell's going on with Fedora?

403
00:16:40,320 --> 00:16:45,040
I love those guys and gals, but what the hell is going on with Fedora?

404
00:16:45,040 --> 00:16:51,440
And Scott over at Ars Technica just posted this review, Fedora 24, the year's best Linux

405
00:16:51,440 --> 00:16:55,400
distro is puzzlingly hard to recommend.

406
00:16:55,400 --> 00:17:01,400
Even for a great update, rollout trouble reminds us release cycles can mar a distro.

407
00:17:01,400 --> 00:17:06,160
And he just touches on great points about issues that users have had post Fedora 24

408
00:17:06,160 --> 00:17:11,740
release, Skylake issues that Fedora 24 has had, update problems, and honestly, because

409
00:17:11,740 --> 00:17:15,360
of all of these bumps that seem to affect every Fedora release, the eight month release

410
00:17:15,360 --> 00:17:18,120
cycle becomes way too short.

411
00:17:18,120 --> 00:17:22,840
And then he ends up kind of talking about for the targeted audience of Fedora, they

412
00:17:22,840 --> 00:17:25,920
really need to understand they're competing with distributions like Arch.

413
00:17:25,920 --> 00:17:26,920
That's a good point too.

414
00:17:26,920 --> 00:17:30,640
This is not a fair comparison all the time because Arch is a rolling release, but I would

415
00:17:30,640 --> 00:17:33,940
be more inclined to embrace Fedora if it had either a long term support type of release

416
00:17:33,940 --> 00:17:39,120
that would last several years or a rolling release that dealt out updates as they were

417
00:17:39,120 --> 00:17:40,120
ready.

418
00:17:40,120 --> 00:17:44,640
And hence Fedora sits somewhere in the middle and ends up with an often awkward update process

419
00:17:44,640 --> 00:17:46,280
happening all too frequently.

420
00:17:46,280 --> 00:17:49,800
It's possible that the new tools in DNF and GNOME software will make things easier on

421
00:17:49,800 --> 00:17:54,080
the update front, but for now, that's far from certain.

422
00:17:54,080 --> 00:17:57,360
Perfectly put into words how I felt about Fedora when I used it.

423
00:17:57,360 --> 00:17:59,100
It's in an awkward spot there.

424
00:17:59,100 --> 00:18:02,480
And they either need to like, I don't know, rebase off CentOS so that way they can support

425
00:18:02,480 --> 00:18:06,680
it for a while or they need to just kind of come up with some sort of happy middle ground

426
00:18:06,680 --> 00:18:07,680
between rolling.

427
00:18:07,680 --> 00:18:08,680
Do you have a sense of that?

428
00:18:08,680 --> 00:18:09,680
No, I agree.

429
00:18:09,680 --> 00:18:13,400
There's like a lot of things that are pioneered in Fedora and there's a lot of neat development

430
00:18:13,400 --> 00:18:16,000
that happens there and you get to try out cool stuff.

431
00:18:16,000 --> 00:18:17,000
But you're right.

432
00:18:17,000 --> 00:18:20,880
It often does feel like you're just stuck kind of halfway in between and if you just

433
00:18:20,880 --> 00:18:25,320
done it a little earlier or waited a little bit longer, you could have had a solid product

434
00:18:25,320 --> 00:18:28,880
that like would have just stood on its own in a way that a good Ubuntu release does,

435
00:18:28,880 --> 00:18:31,800
but it often feels like you're just somewhere in the middle.

436
00:18:31,800 --> 00:18:32,800
Yeah.

437
00:18:32,800 --> 00:18:37,160
And I really, I felt with Fedora 24, it was a step back in the direction.

438
00:18:37,160 --> 00:18:40,240
It made so many good progressive step forward.

439
00:18:40,240 --> 00:18:43,800
And it's just such a shame when like there's a lot in Fedora 24 that I'm excited about,

440
00:18:43,800 --> 00:18:47,840
I like, but overall it's not, you know, that doesn't mesh well enough.

441
00:18:47,840 --> 00:18:51,100
It's not polished enough in the right places, so that's just not usable.

442
00:18:51,100 --> 00:18:56,760
Is it unreasonable to say that also maybe the market expectations have shifted too?

443
00:18:56,760 --> 00:19:03,360
Like it seems like Mint kind of made a good bet when they decided to base off of an LTS

444
00:19:03,360 --> 00:19:07,520
for a while and then just iterate on that and it seems like distributions like Ubuntu

445
00:19:07,520 --> 00:19:11,760
Mate are much more appealing in spots where Fedora might have been in the past.

446
00:19:11,760 --> 00:19:14,960
And I wonder if maybe the market has just shifted a little bit underneath them and they're

447
00:19:14,960 --> 00:19:19,280
still catering to something that is kind of outdated now?

448
00:19:19,280 --> 00:19:20,280
That's an interesting –

449
00:19:20,280 --> 00:19:21,280
Or is that –

450
00:19:21,280 --> 00:19:23,040
I think there's at least a little bit of truth there.

451
00:19:23,040 --> 00:19:27,840
I think it certainly – the market has changed in what users want.

452
00:19:27,840 --> 00:19:31,000
I think just with the prominence of rolling release distros in general, it's made people

453
00:19:31,000 --> 00:19:35,360
kind of think about the release cycle system differently and they may have different expectations

454
00:19:35,360 --> 00:19:40,800
and I think it throws more contrast into that like are you a super stable LTS distro or

455
00:19:40,800 --> 00:19:44,400
are you going to give me the new stuff I want and I understand that maybe stability isn't

456
00:19:44,400 --> 00:19:45,400
there.

457
00:19:45,400 --> 00:19:49,920
And I wonder if they will – if they can – if there is a way they can address this

458
00:19:49,920 --> 00:19:54,920
through things like flat packs like it's sort of inferred there and whatnot so that

459
00:19:54,920 --> 00:19:59,080
way the major OS underneath getting updated as much doesn't really affect the user land

460
00:19:59,080 --> 00:20:00,080
applications?

461
00:20:00,080 --> 00:20:02,040
Because that would go – that probably would actually go a long way.

462
00:20:02,040 --> 00:20:03,040
Yeah.

463
00:20:03,040 --> 00:20:06,400
Because at the end of the day I think like we both agree that you just need to be able

464
00:20:06,400 --> 00:20:09,600
to – when you're in a pinch and you need your computer to do the thing, you want it

465
00:20:09,600 --> 00:20:10,600
to work.

466
00:20:10,600 --> 00:20:11,600
All right.

467
00:20:11,600 --> 00:20:14,040
So does anybody disagree in the mumble room because I want to give them a chance to go

468
00:20:14,040 --> 00:20:15,040
first.

469
00:20:15,040 --> 00:20:16,040
Arm, go ahead.

470
00:20:16,040 --> 00:20:17,040
You start.

471
00:20:17,040 --> 00:20:22,800
Well, it just – it seems whenever their release comes out, it's always followed almost

472
00:20:22,800 --> 00:20:30,160
immediately by – or very soon before by a new release of Gnome which they're not – it's

473
00:20:30,160 --> 00:20:31,160
too late to put in.

474
00:20:31,160 --> 00:20:34,000
And then everyone's comparing – well, you know, they just waited.

475
00:20:34,000 --> 00:20:35,000
They could have put it in.

476
00:20:35,000 --> 00:20:40,300
But that would mean they'd have to wait for a good sort of three months after a release

477
00:20:40,300 --> 00:20:44,040
which means the previous release has an extra long life cycle and then they just get hammered

478
00:20:44,040 --> 00:20:46,160
for the fact that they haven't released one for ages.

479
00:20:46,160 --> 00:20:48,280
I think it's kind of a catch 22 really.

480
00:20:48,280 --> 00:20:49,760
They can't really win.

481
00:20:49,760 --> 00:20:50,760
Yeah.

482
00:20:50,760 --> 00:20:56,760
I know people listening right now probably disagree with the assessment and so I guess

483
00:20:56,760 --> 00:20:59,160
again, leave a comment or show up in the mumble room next week.

484
00:20:59,160 --> 00:21:00,160
Yeah, please join us.

485
00:21:00,160 --> 00:21:05,000
Because I really want to rephrase the way I'm thinking about Fedora because it doesn't

486
00:21:05,000 --> 00:21:06,000
– it feels like it's –

487
00:21:06,000 --> 00:21:09,600
I think we'd also want to hear from people like if you think Fedora 24 perfectly fits

488
00:21:09,600 --> 00:21:12,320
your needs, you're having a great time with it, you're excited about things and you think

489
00:21:12,320 --> 00:21:13,320
it's –

490
00:21:13,320 --> 00:21:14,320
There's always that though.

491
00:21:14,320 --> 00:21:15,320
I mean there's always those people.

492
00:21:15,320 --> 00:21:16,320
True.

493
00:21:16,320 --> 00:21:27,320
I have to say that I agree with Wes in there that if it's going to be like that for Fedora,

494
00:21:27,320 --> 00:21:35,920
it might as well just be rolling and the thing is that Fedora does have a rolling sort of

495
00:21:35,920 --> 00:21:37,920
version called Rawhide.

496
00:21:37,920 --> 00:21:38,920
Yes.

497
00:21:38,920 --> 00:21:39,920
Right.

498
00:21:39,920 --> 00:21:40,920
Good point.

499
00:21:40,920 --> 00:21:48,360
Of course, I also seem to remember a certain somebody saying quite a while back all Linux

500
00:21:48,360 --> 00:21:52,480
distributions should go with the rolling release cycle, right Chris?

501
00:21:52,480 --> 00:21:54,040
No, don't characterize me like that.

502
00:21:54,040 --> 00:21:55,040
Don't get me in trouble.

503
00:21:55,040 --> 00:21:56,040
All right.

504
00:21:56,040 --> 00:21:59,000
Well, I don't want to make it sound like I'm attacking Fedora so I don't really

505
00:21:59,000 --> 00:22:00,000
want to –

506
00:22:00,000 --> 00:22:02,640
No, I just want to agree with that.

507
00:22:02,640 --> 00:22:05,320
I think we both respect Fedora a lot.

508
00:22:05,320 --> 00:22:08,200
We just want to see their releases be even better because I'm excited for the future.

509
00:22:08,200 --> 00:22:09,200
Here we go.

510
00:22:09,200 --> 00:22:13,520
You're using Fedora 24 on a machine that looks like it's a pretty low-spec machine.

511
00:22:13,520 --> 00:22:14,520
Tell me about it.

512
00:22:14,520 --> 00:22:15,520
Yeah.

513
00:22:15,520 --> 00:22:17,160
I'm just using a Chromebook.

514
00:22:17,160 --> 00:22:20,640
It's ASUS 720 and I have two of them.

515
00:22:20,640 --> 00:22:28,480
One is using Arch and the other one Fedora 24 and I updated from Fedora 20 I think, 21,

516
00:22:28,480 --> 00:22:32,720
22, 23, 24 and I never had problems.

517
00:22:32,720 --> 00:22:35,800
So this machine is working really stable and really good.

518
00:22:35,800 --> 00:22:36,800
Gnome?

519
00:22:36,800 --> 00:22:41,360
Yeah, this is normal Gnome, stock Gnome.

520
00:22:41,360 --> 00:22:44,520
The only thing I have – the repository is rather small.

521
00:22:44,520 --> 00:22:51,000
When I have some console music application like CMOS and I have to compile it, I'm amazed

522
00:22:51,000 --> 00:22:57,280
that this is not in official repositories or Mumble is not in the official repositories.

523
00:22:57,280 --> 00:23:00,160
But otherwise, this machine is really a no-brainer.

524
00:23:00,160 --> 00:23:03,920
It's running stable and I never have problems with it.

525
00:23:03,920 --> 00:23:04,920
Very nice.

526
00:23:04,920 --> 00:23:05,920
Thank you.

527
00:23:05,920 --> 00:23:06,920
Thank you.

528
00:23:06,920 --> 00:23:07,920
Because I know it's not all bad.

529
00:23:07,920 --> 00:23:08,920
Yeah, not at all.

530
00:23:08,920 --> 00:23:10,760
It's still a great distribution and there's really smart people working on it.

531
00:23:10,760 --> 00:23:16,320
It just seems like it's not necessarily staying competitive and they redid this – they rebooted

532
00:23:16,320 --> 00:23:20,080
and then they – they almost maybe rebooted too early.

533
00:23:20,080 --> 00:23:21,080
I don't know.

534
00:23:21,080 --> 00:23:22,140
Anyways, let's move on.

535
00:23:22,140 --> 00:23:26,600
Maybe we'll pontificate on it at a further point after we reflect on the wisdom of the

536
00:23:26,600 --> 00:23:27,600
audience.

537
00:23:27,600 --> 00:23:31,160
I just want to give a mention out to the folks over at Purism kind of continuing their journey.

538
00:23:31,160 --> 00:23:35,400
They've been working on sort of making a few changes I think and reaching out to the

539
00:23:35,400 --> 00:23:39,680
community differently and it appears to be one of those is the creation of an advisory

540
00:23:39,680 --> 00:23:41,200
board at Purism.

541
00:23:41,200 --> 00:23:44,720
Now you remember that I had the Libre 15 reviewed a while back on the show.

542
00:23:44,720 --> 00:23:46,680
We've also reviewed the Librem 13.

543
00:23:46,680 --> 00:23:50,200
Purism is pleased to announce the creation of its advisory board comprised of top tier

544
00:23:50,200 --> 00:23:54,980
experts from the free software community and they list all of the personalities they have

545
00:23:54,980 --> 00:23:55,980
on there.

546
00:23:55,980 --> 00:23:59,280
Together they bring their vision with decades of experience in cyber security, privacy protection

547
00:23:59,280 --> 00:24:02,840
and digital freedom to Purism's product development as the company continues to create

548
00:24:02,840 --> 00:24:06,520
products that finally address privacy and digital rights by default.

549
00:24:06,520 --> 00:24:07,520
I like that.

550
00:24:07,520 --> 00:24:08,720
I think it's probably a good thing.

551
00:24:08,720 --> 00:24:09,720
I think so too.

552
00:24:09,720 --> 00:24:15,700
I think it adds some legitimacy and some transparency to it like in particular I see Matthew Garrett

553
00:24:15,700 --> 00:24:16,700
on there.

554
00:24:16,700 --> 00:24:17,700
A lot of people disagree with him.

555
00:24:17,700 --> 00:24:21,880
I certainly disagree with some of his opinions but technically he's done a lot of good contributions

556
00:24:21,880 --> 00:24:23,440
especially in the firmware kind of area.

557
00:24:23,440 --> 00:24:27,720
So I'm excited to see what kind of input they can give and maybe the next time we review

558
00:24:27,720 --> 00:24:30,240
one of these guys it'll be really exciting.

559
00:24:30,240 --> 00:24:31,240
Even better.

560
00:24:31,240 --> 00:24:32,240
Even better.

561
00:24:32,240 --> 00:24:35,200
So that's just sort of an interesting change.

562
00:24:35,200 --> 00:24:40,320
I think we're seeing a shift in the winds at Purism and so your Linux Home Plug show

563
00:24:40,320 --> 00:24:43,360
is tracking the weather forecast for you.

564
00:24:43,360 --> 00:24:48,000
One little update before we really jump into some of the big stuff, Mr. Wimpy has joined

565
00:24:48,000 --> 00:24:52,120
us to tell me about – to get me really – what this next segment is called is Get Chris Super

566
00:24:52,120 --> 00:24:53,120
Jealous.

567
00:24:53,120 --> 00:24:54,920
That's what this next segment is going to be called.

568
00:24:54,920 --> 00:24:58,160
But really quickly for those of us with Skylake rigs you're going to be happy to hear that

569
00:24:58,160 --> 00:25:04,240
Linux Kernel 4.8 is going to have Skylake power management fixes included.

570
00:25:04,240 --> 00:25:08,360
That's the big new feature is Intel Skylake power management bug fix.

571
00:25:08,360 --> 00:25:12,880
There are also other nice updated drivers and architecture improvements and some changes

572
00:25:12,880 --> 00:25:13,880
to KVM.

573
00:25:13,880 --> 00:25:19,040
It just hit the release candidates for stage and Linus himself says it looks like everything's

574
00:25:19,040 --> 00:25:23,860
normal and it's been a bit quieter than RC3 so hopefully we're well into the calming

575
00:25:23,860 --> 00:25:25,620
down phase now.

576
00:25:25,620 --> 00:25:30,200
And so we will probably see 4.8 ship fairly soon and those of you that are on Skylake

577
00:25:30,200 --> 00:25:32,000
systems might be compelled to update.

578
00:25:32,000 --> 00:25:33,680
Hopefully it's another chink in the armor.

579
00:25:33,680 --> 00:25:37,360
I know I sometimes see new Skylake systems like just not going to do it yet.

580
00:25:37,360 --> 00:25:40,480
The Skylake thing has gone bomba.

581
00:25:40,480 --> 00:25:46,560
And then Intel just today announced a new 7th generation with built-in 4K support.

582
00:25:46,560 --> 00:25:47,960
All the headlines say that.

583
00:25:47,960 --> 00:25:49,260
Give me a break, right?

584
00:25:49,260 --> 00:25:50,260
Give me a break.

585
00:25:50,260 --> 00:25:51,260
So I'll tell you what –

586
00:25:51,260 --> 00:25:52,260
Got to be sure about that.

587
00:25:52,260 --> 00:25:54,320
Do you have a KVLake comment?

588
00:25:54,320 --> 00:25:55,320
Go ahead.

589
00:25:55,320 --> 00:25:59,840
I said they're going to show it at IFA in a couple of days.

590
00:25:59,840 --> 00:26:00,840
Oh yeah.

591
00:26:00,840 --> 00:26:01,840
Yeah, that's true.

592
00:26:01,840 --> 00:26:02,840
Yeah.

593
00:26:02,840 --> 00:26:03,840
All right, Wes.

594
00:26:03,840 --> 00:26:07,640
Let's thank DigitalOcean for sponsoring this episode of the Unplugged program.

595
00:26:07,640 --> 00:26:08,640
I tell you what.

596
00:26:08,640 --> 00:26:11,520
DigitalOcean's got a new fancy website which I think I mentioned a little bit ago but it

597
00:26:11,520 --> 00:26:15,840
is – I keep finding little spots, little nooks and crannies that they've updated.

598
00:26:15,840 --> 00:26:17,400
It's pretty impressive.

599
00:26:17,400 --> 00:26:20,240
DigitalOcean is our go-to infrastructure on demand.

600
00:26:20,240 --> 00:26:24,800
When I need a Linux system to do something for me, really I start with DigitalOcean.

601
00:26:24,800 --> 00:26:29,080
And if you go there, you can take advantage of a promo code to get a $10 credit, dounplugged,

602
00:26:29,080 --> 00:26:31,040
all one word, lowercase.

603
00:26:31,040 --> 00:26:33,840
This is your Linux infrastructure as you need it.

604
00:26:33,840 --> 00:26:35,200
You could be one of the big dogs now.

605
00:26:35,200 --> 00:26:38,760
And what's great about DigitalOcean is the pricing is really low enough that you could

606
00:26:38,760 --> 00:26:43,600
just use it for basic testing or educational purposes but the infrastructure is powerful

607
00:26:43,600 --> 00:26:46,560
enough and fast enough that you could just put it in production as well.

608
00:26:46,560 --> 00:26:50,300
I like that because when you combine that with their snapshots, their availability of

609
00:26:50,300 --> 00:26:55,640
application stacks and documentation, you can actually implement something that's really

610
00:26:55,640 --> 00:26:57,400
solid to use for a long time.

611
00:26:57,400 --> 00:27:01,520
Like a lot of their guides will tell you how to use Let's Encrypt to get HTTPS going.

612
00:27:01,520 --> 00:27:06,400
DigitalOcean is one of those things now where it's – for me, it's faster to spin up

613
00:27:06,400 --> 00:27:13,520
a server up in the cloud, quote, unquote, that is faster than some of the computers

614
00:27:13,520 --> 00:27:17,520
I've had in my house that are like $5,000 computers or something like just some massive

615
00:27:17,520 --> 00:27:21,760
system we've had for production purposes years ago.

616
00:27:21,760 --> 00:27:24,320
We built a couple of years ago, we built a couple of Hackintoshes that were just these

617
00:27:24,320 --> 00:27:29,040
monsters that rendered all our video and of course now they've just been relegated

618
00:27:29,040 --> 00:27:31,760
to like media PCs because it's very – and it's not – I don't know how much money

619
00:27:31,760 --> 00:27:34,960
we spent on them but it was a lot of money for like all these processor cores and all

620
00:27:34,960 --> 00:27:39,400
this RAM and all this CPU and now I can just turn it up like a dial on DigitalOcean.

621
00:27:39,400 --> 00:27:43,560
Just as a dial, Wes, just turn it up and I could never match their internet connections.

622
00:27:43,560 --> 00:27:49,960
No, I mean, I think it's kind of a – every nerd needs their outside, separate little

623
00:27:49,960 --> 00:27:53,480
place that they can run their scripts, you can have cron jobs and now you can get it

624
00:27:53,480 --> 00:27:57,040
for like $5 a month or you can have – you can model whole architectures, you can use

625
00:27:57,040 --> 00:28:00,760
their private networking, you can have their failover IPs.

626
00:28:00,760 --> 00:28:01,760
There's so much you can do.

627
00:28:01,760 --> 00:28:05,300
Yeah, and then you combine it with the API that is super straightforward, easy to use

628
00:28:05,300 --> 00:28:08,880
but also makes – there's already – because it's so nice, there's really just so much

629
00:28:08,880 --> 00:28:11,460
code already written that makes it really easy just to grab some of that and just start

630
00:28:11,460 --> 00:28:12,600
taking advantage of it.

631
00:28:12,600 --> 00:28:17,280
Promo code daunplugged and a big thank you to DigitalOcean for sponsoring the Unplugged

632
00:28:17,280 --> 00:28:18,400
program.

633
00:28:18,400 --> 00:28:24,760
So somebody – I'm a big fan of Wes, the developer of SyslogNG made some bold blog

634
00:28:24,760 --> 00:28:30,160
posts recently and it's controversial, in fact, so controversial that he had to make

635
00:28:30,160 --> 00:28:34,520
a second blog post saying, look, I'm not trying to say the systemd and journald are

636
00:28:34,520 --> 00:28:40,280
the end all solution but I do want to talk about binary versus text formats.

637
00:28:40,280 --> 00:28:41,280
What?

638
00:28:41,280 --> 00:28:42,280
What?

639
00:28:42,280 --> 00:28:43,280
Binary versus text formats.

640
00:28:43,280 --> 00:28:46,640
He writes, to this day I'm surprised the number of people who complain about the journal's

641
00:28:46,640 --> 00:28:48,120
binary storage format.

642
00:28:48,120 --> 00:28:54,760
Now, systemd transitioned from text log files to a binary file format.

643
00:28:54,760 --> 00:28:59,920
Having spent years working as a system administrator and after years of working with and on SyslogNG

644
00:28:59,920 --> 00:29:03,240
in the capacity of the maintainer of the open source edition for more than a year, I'm

645
00:29:03,240 --> 00:29:07,840
increasingly puzzled – okay, the maintainer – about all of the hostility towards non-text

646
00:29:07,840 --> 00:29:09,320
storage formats.

647
00:29:09,320 --> 00:29:11,920
Wes, a binary log?

648
00:29:11,920 --> 00:29:12,920
What is that?

649
00:29:12,920 --> 00:29:13,920
What's a binary log?

650
00:29:13,920 --> 00:29:15,640
It sounds bad.

651
00:29:15,640 --> 00:29:17,840
I can't cat or grab that.

652
00:29:17,840 --> 00:29:20,880
Well, Chris, have you ever done anything in C?

653
00:29:20,880 --> 00:29:24,480
Have you ever saved the memory representation of something to a file?

654
00:29:24,480 --> 00:29:26,480
Because that's what we're – that's really what we're talking about.

655
00:29:26,480 --> 00:29:31,520
We're talking about like structured data rather than something represented as text.

656
00:29:31,520 --> 00:29:36,120
So back when I was still in school doing numerical simulations, that was something that we had

657
00:29:36,120 --> 00:29:38,000
to do simply for performance reasons, right?

658
00:29:38,000 --> 00:29:41,440
You couldn't – like reading all the text and if you imagine it like instead of writing

659
00:29:41,440 --> 00:29:45,720
the number 5 here, you're writing the – or if you're writing several numbers, instead

660
00:29:45,720 --> 00:29:49,560
of encoding it directly in binary, you're encoding it as text.

661
00:29:49,560 --> 00:29:53,720
So storing it in a binary format gets away from that and you can actually – you can

662
00:29:53,720 --> 00:29:55,320
have more complicated data.

663
00:29:55,320 --> 00:29:57,120
You then do need the ability to parse it.

664
00:29:57,120 --> 00:29:58,680
You can't use text-oriented tools.

665
00:29:58,680 --> 00:30:02,560
Yeah, you're dependent on having tools that can read that binary format and that's I

666
00:30:02,560 --> 00:30:04,200
think the big complaint against it.

667
00:30:04,200 --> 00:30:05,200
Right.

668
00:30:05,200 --> 00:30:06,460
That does come up a lot.

669
00:30:06,460 --> 00:30:09,960
But in today's age, I'm not sure if that's relevant.

670
00:30:09,960 --> 00:30:13,600
I mean for individual situations, yes, there are absolutely situations maybe in embedded

671
00:30:13,600 --> 00:30:17,360
systems, maybe in systems where you need to administer but you don't have as much control

672
00:30:17,360 --> 00:30:18,440
as you want.

673
00:30:18,440 --> 00:30:22,160
But in today's world where like 90% of the things you run aren't containers or virtualized

674
00:30:22,160 --> 00:30:27,320
or if you're doing it professionally, you have IPMI or some other out-of-band access,

675
00:30:27,320 --> 00:30:30,760
it's pretty rare that you don't have some way to get the tool you need or if you have

676
00:30:30,760 --> 00:30:34,480
control, just make sure that your systems have the full set of tools.

677
00:30:34,480 --> 00:30:37,800
If you are working with a binary format, you can usually then benefit from things like

678
00:30:37,800 --> 00:30:43,160
well, instead of having to use grep or regex or something else, you can write queries on

679
00:30:43,160 --> 00:30:48,600
it that can understand like only select entries whose date field is between these two things.

680
00:30:48,600 --> 00:30:56,040
Something like you might do with SQL or even something like JSON objects.

681
00:30:56,040 --> 00:31:03,640
So today, one of the things that made me think about this was I was reading a tweet by IBM

682
00:31:03,640 --> 00:31:09,600
about a course they were doing where in the course, you spin up 8,000 Linux systems at

683
00:31:09,600 --> 00:31:10,600
once.

684
00:31:10,600 --> 00:31:12,800
And that's where I think these kinds of tools really matter.

685
00:31:12,800 --> 00:31:16,840
When you have gigabytes of log files that you have to manage and things like this.

686
00:31:16,840 --> 00:31:20,120
And so he goes to make the – he goes on to make the point that ad hoc queries on text

687
00:31:20,120 --> 00:31:21,120
are hard.

688
00:31:21,120 --> 00:31:23,600
The text is insufficient for structured type storage.

689
00:31:23,600 --> 00:31:27,560
That grepping gigabytes does not scale.

690
00:31:27,560 --> 00:31:31,400
On the binary logs, that their tools is kind of like saying, well, yeah, but you also need

691
00:31:31,400 --> 00:31:35,440
grep and less and cat and all those to read text.

692
00:31:35,440 --> 00:31:39,160
I'm of two minds of this because there's also some that would say it's not the Unix

693
00:31:39,160 --> 00:31:40,160
way.

694
00:31:40,160 --> 00:31:41,760
And that has – the Unix philosophy has served us well.

695
00:31:41,760 --> 00:31:46,360
Of course, he argues things like Wtemp and Utemp are essentially this already.

696
00:31:46,360 --> 00:31:49,240
Matthew Feeney That there are non-text things used already

697
00:31:49,240 --> 00:31:50,240
in Unix.

698
00:31:50,240 --> 00:31:51,240
Yeah.

699
00:31:51,240 --> 00:31:54,640
Aaron Ross Powell So it's a debate that rages on in the subtext

700
00:31:54,640 --> 00:31:58,880
of systemd and it's – watching this is kind of fascinating because I see some people

701
00:31:58,880 --> 00:32:03,160
now having getting – systemd having gotten out there, they're loving it.

702
00:32:03,160 --> 00:32:04,520
They think it's the greatest thing ever.

703
00:32:04,520 --> 00:32:05,520
They're talking about it.

704
00:32:05,520 --> 00:32:07,920
They're – I don't know what that is out there.

705
00:32:07,920 --> 00:32:08,920
Matthew Feeney I don't know either.

706
00:32:08,920 --> 00:32:09,920
It's like –

707
00:32:09,920 --> 00:32:10,920
Aaron Ross Powell I think we are getting strafed by an airplane.

708
00:32:10,920 --> 00:32:11,920
That's crazy.

709
00:32:11,920 --> 00:32:15,120
It's a little distracting too.

710
00:32:15,120 --> 00:32:20,440
And I wanted to take this moment to talk about your recent home project, systemd is playing

711
00:32:20,440 --> 00:32:22,480
kind of an important role in your home network now.

712
00:32:22,480 --> 00:32:26,520
And I'm not trying to make this an all pro systemd show, but I think it is interesting

713
00:32:26,520 --> 00:32:27,520
–

714
00:32:27,520 --> 00:32:28,520
Matthew Feeney No, I mean, systemd has problems.

715
00:32:28,520 --> 00:32:32,000
I don't want to throw notes to an issue right now that Debian is dealing with.

716
00:32:32,000 --> 00:32:34,480
But I think it is interesting how it is changing things a lot.

717
00:32:34,480 --> 00:32:38,840
And so you set up an arch box as your router and you're using what to do the routing?

718
00:32:38,840 --> 00:32:42,160
Aaron Ross Powell Yeah, I'm – well, I'm using IP tables

719
00:32:42,160 --> 00:32:43,160
as a setting.

720
00:32:43,160 --> 00:32:45,040
You know, the Linux networking stack and IP tables is doing it.

721
00:32:45,040 --> 00:32:47,880
But to better isolate things, I wanted to try sticking it in a container.

722
00:32:47,880 --> 00:32:48,880
Matthew Feeney Well, that's what it was.

723
00:32:48,880 --> 00:32:53,280
So you set up your firewall in a container in a systemd container, so not using like

724
00:32:53,280 --> 00:32:57,560
Docker necessarily or something like that, but using built-in tools and then in there

725
00:32:57,560 --> 00:32:59,080
is where IP tables is running and –

726
00:32:59,080 --> 00:33:00,080
Aaron Ross Powell Yes.

727
00:33:00,080 --> 00:33:03,360
And then I'm running Firehole to configure the IP tables rules for me.

728
00:33:03,360 --> 00:33:04,600
Matthew Feeney Nice setup, Wes.

729
00:33:04,600 --> 00:33:05,920
Aaron Ross Powell And I just thought it'd be interesting to

730
00:33:05,920 --> 00:33:08,760
– you know, there are plenty of problems with systemd.

731
00:33:08,760 --> 00:33:11,000
I'm not saying it's the right solution for a lot of things.

732
00:33:11,000 --> 00:33:14,640
But on systemd distros, you do get like a lot more standardization now.

733
00:33:14,640 --> 00:33:17,800
So if you have systemd, you can use unspon to do like chroot on steroids.

734
00:33:17,800 --> 00:33:19,520
You have better isolation.

735
00:33:19,520 --> 00:33:22,400
So I wanted to play with – I played with LXD and LXC before.

736
00:33:22,400 --> 00:33:24,960
I wanted to play with the systemd version basically.

737
00:33:24,960 --> 00:33:29,960
And you pretty much just stick a file system under var lib machines, and then you enable

738
00:33:29,960 --> 00:33:34,740
the systemd unspon at the name of that folder, and then you have a permanent container that

739
00:33:34,740 --> 00:33:35,740
just runs.

740
00:33:35,740 --> 00:33:39,980
And then you can – you know, you can do the systemd edit and have a conf override

741
00:33:39,980 --> 00:33:44,280
file for that unit if you want to add extra options or you want to change it so that like,

742
00:33:44,280 --> 00:33:49,240
oh, we'll add 10 extra veeth nicks to it or pass through the nick from the – so I'm

743
00:33:49,240 --> 00:33:51,720
passing the nicks through from my host machine into it.

744
00:33:51,720 --> 00:33:54,000
Matthew Feeney And it's all just essentially built-in.

745
00:33:54,000 --> 00:33:55,500
Yeah, and they have a lot of nice stuff.

746
00:33:55,500 --> 00:33:59,440
So if you use systemd networkd, like you can have it automatically connect the host or

747
00:33:59,440 --> 00:34:04,500
have like, you know, you can have it make a bridge for you, and then it also masquerades

748
00:34:04,500 --> 00:34:09,440
on that so that you can have all your things on one broadcast domain and have NATED access

749
00:34:09,440 --> 00:34:10,440
to the internet.

750
00:34:10,440 --> 00:34:13,400
And it just does it all automatically, which I'm not using that.

751
00:34:13,400 --> 00:34:14,800
I'm kind of doing it my own way.

752
00:34:14,800 --> 00:34:18,320
But it does make it really easy if you just want like, hey, especially for, you know,

753
00:34:18,320 --> 00:34:21,440
development environments or something like that where maybe you have something that isn't

754
00:34:21,440 --> 00:34:24,040
quite fit with Docker, or you just want to do it yourself.

755
00:34:24,040 --> 00:34:28,280
Now, does this systemd – is it like, is it called an nspawned container?

756
00:34:28,280 --> 00:34:29,280
What's it called?

757
00:34:29,280 --> 00:34:30,880
I mean, it's a Linux container.

758
00:34:30,880 --> 00:34:31,880
It's a set of namespaces.

759
00:34:31,880 --> 00:34:33,920
You know, the container world is kind of murky.

760
00:34:33,920 --> 00:34:34,920
I need a brand name.

761
00:34:34,920 --> 00:34:36,600
It doesn't have the kind of flashy branding that Docker has.

762
00:34:36,600 --> 00:34:41,200
So this systemd namespace container, is it running as root?

763
00:34:41,200 --> 00:34:46,500
You can't – so they do run as root, or root in the container as the root in the host.

764
00:34:46,500 --> 00:34:49,600
They are namespaced, but they do support user namespaces.

765
00:34:49,600 --> 00:34:51,480
You have to compile that in if you're using Arch.

766
00:34:51,480 --> 00:34:54,800
It's not included in the Arch kernel, but like Ubuntu kernel, it's there.

767
00:34:54,800 --> 00:34:56,960
A lot of other distributions have it enabled.

768
00:34:56,960 --> 00:35:00,280
And then in that way, you will gain more security protections, as long as you're not subject

769
00:35:00,280 --> 00:35:03,600
to one of the various CVEs that have affected user namespace support.

770
00:35:03,600 --> 00:35:04,600
But right now, there aren't any.

771
00:35:04,600 --> 00:35:05,600
So go ahead.

772
00:35:05,600 --> 00:35:06,600
Hmm.

773
00:35:06,600 --> 00:35:07,600
Yeah.

774
00:35:07,600 --> 00:35:10,840
And architect in the – architect in the chat room is pointing out Void.

775
00:35:10,840 --> 00:35:13,200
It's Arch, but with less bloat.

776
00:35:13,200 --> 00:35:14,200
We are getting strafed.

777
00:35:14,200 --> 00:35:15,200
Yeah.

778
00:35:15,200 --> 00:35:16,200
Do you hear those?

779
00:35:16,200 --> 00:35:17,200
Wow.

780
00:35:17,200 --> 00:35:18,200
That's crazy.

781
00:35:18,200 --> 00:35:19,200
It is an attack here.

782
00:35:19,200 --> 00:35:22,440
And I'm not saying this is going to make me insanely jealous, but he had a mumbled disconnect,

783
00:35:22,440 --> 00:35:25,760
so we punted to that SystemD discussion there.

784
00:35:25,760 --> 00:35:28,920
There's also a link in the show notes about, I guess, a bug that Debian is dealing with

785
00:35:28,920 --> 00:35:33,360
right now where SystemD requires getting kicked in the face a few times to actually get your

786
00:35:33,360 --> 00:35:34,360
network fully up.

787
00:35:34,360 --> 00:35:36,720
It needs multiple restarts until the network fully starts.

788
00:35:36,720 --> 00:35:37,720
Oh, yikes.

789
00:35:37,720 --> 00:35:38,720
Yeah.

790
00:35:38,720 --> 00:35:40,120
And it starts with, hi, this is a monster.

791
00:35:40,120 --> 00:35:42,040
But relax, because its severity is minor.

792
00:35:42,040 --> 00:35:44,900
At least there's a workaround.

793
00:35:44,900 --> 00:35:54,060
So it's interesting to sort of be this far into 2016 now and look back at what a shit

794
00:35:54,060 --> 00:35:59,020
sandwich the system detransition was and to see there's some interesting things, like

795
00:35:59,020 --> 00:36:02,980
I guess the last person I thought to come down on the binary log debate would be one

796
00:36:02,980 --> 00:36:03,980
of the SyslogNG maintainers.

797
00:36:03,980 --> 00:36:06,620
For some reason, I just didn't expect that.

798
00:36:06,620 --> 00:36:09,740
As somebody who's used SyslogNG, I find it interesting.

799
00:36:09,740 --> 00:36:10,980
Yes, I know Wimpy's back.

800
00:36:10,980 --> 00:36:15,140
So we'll get now into the segment where he gets me super jelly.

801
00:36:15,140 --> 00:36:18,220
I want to mention, if there was anything we just talked about or any of these concepts

802
00:36:18,220 --> 00:36:22,260
that you feel like you're a little rusty on, Linux Academy might be the platform for you.

803
00:36:22,260 --> 00:36:25,820
It could be the place you need to go to try out, maybe expand your knowledge set a little

804
00:36:25,820 --> 00:36:26,820
bit.

805
00:36:26,820 --> 00:36:28,420
LinuxAcademy.com slash unplugged.

806
00:36:28,420 --> 00:36:31,940
That's the URL you go to to support this show and learn more about them.

807
00:36:31,940 --> 00:36:36,940
They've got labs that will really give you hands-on scenarios, video courses, lab servers

808
00:36:36,940 --> 00:36:40,380
that will spin up as you need them and you SSH into them, which I think is pretty great.

809
00:36:40,380 --> 00:36:43,020
They have learning paths that put you right down a specific path of learning.

810
00:36:43,020 --> 00:36:45,380
So say you want to get into this network management course.

811
00:36:45,380 --> 00:36:46,380
It's definitely the way to go.

812
00:36:46,380 --> 00:36:50,940
If you want to get into OpenStack or Azure or AWS, they also have courseware on that.

813
00:36:50,940 --> 00:36:53,540
Of course, all of the essentials around Linux.

814
00:36:53,540 --> 00:36:59,100
Check them out at LinuxAcademy.com slash unplugged, a platform built by Linux users, mentors,

815
00:36:59,100 --> 00:37:02,460
instructors, and of course, developers who came together to try to really promote the

816
00:37:02,460 --> 00:37:03,460
Linux platform.

817
00:37:03,460 --> 00:37:07,260
That's one of the things I don't think I mentioned enough is when they first became a sponsor,

818
00:37:07,260 --> 00:37:11,980
I had a conversation with Anthony who runs Linux Academy and he's like, yeah, we've watched

819
00:37:11,980 --> 00:37:16,260
Jupiter broadcasting and we love that you are promoting Linux through the podcast.

820
00:37:16,260 --> 00:37:19,340
This is a platform that we think can help promote Linux by training people, getting

821
00:37:19,340 --> 00:37:20,980
people to become experts on it.

822
00:37:20,980 --> 00:37:25,580
And they've built a real amazing platform to do it, LinuxAcademy.com slash unplugged

823
00:37:25,580 --> 00:37:30,100
and a big thank you to Linux Academy for sponsoring the unplugged program.

824
00:37:30,100 --> 00:37:36,780
So on and off, we've discussed ButterFS, ZFS, XFS, which XFS happens to be Wimpy and myself's

825
00:37:36,780 --> 00:37:41,420
kind of go to like laptop, desktop, trustworthy file system.

826
00:37:41,420 --> 00:37:45,540
And William is somebody who often chimes in on this conversation, he follows this stuff

827
00:37:45,540 --> 00:37:48,060
pretty closely, he's got a good head on the shoulders about it.

828
00:37:48,060 --> 00:37:54,900
And he teased me before the show about BcashFS and this was how he got me, he says, I think

829
00:37:54,900 --> 00:37:56,900
it might already be better than ButterFS.

830
00:37:56,900 --> 00:38:02,300
So William, what is BcashFS and why is it already looking so hot?

831
00:38:02,300 --> 00:38:08,660
So BcashFS is a second take on the ButterFS concept of using copy and write B-trees for

832
00:38:08,660 --> 00:38:10,660
storing your files in your file system.

833
00:38:10,660 --> 00:38:16,040
So Bcash as the block device caching mechanism was already built using B-trees as a way to

834
00:38:16,040 --> 00:38:21,600
store the cache blocks on the cache SSD before it would write them out to the hard disk or

835
00:38:21,600 --> 00:38:26,360
as a temporary place sort of like the L2 arc on ZFS where you use the SSD as a hot read

836
00:38:26,360 --> 00:38:30,340
cache so it could access hot data quickly.

837
00:38:30,340 --> 00:38:36,540
And he turned that concept of just being this B-tree block caching thing into a full POSIX

838
00:38:36,540 --> 00:38:37,540
file system.

839
00:38:37,540 --> 00:38:42,500
So he added extra operations that could be performed on the cache device.

840
00:38:42,500 --> 00:38:46,900
And what's great about this is he already had this stable B-tree technology in the stable

841
00:38:46,900 --> 00:38:51,780
transaction system and then when he rolled it into a file system, the basic POSIX features

842
00:38:51,780 --> 00:38:55,440
are already pretty stable, that's very performant out of the box.

843
00:38:55,440 --> 00:39:00,140
It doesn't have all the features that ButterFS has yet, but they're on the roadmap and there's

844
00:39:00,140 --> 00:39:04,400
already stuff that's coming up like encryption is basically done.

845
00:39:04,400 --> 00:39:08,700
So if you wanted to roll files with encryption built in, that would work.

846
00:39:08,700 --> 00:39:11,060
Compression also works, but there's no accounting yet.

847
00:39:11,060 --> 00:39:14,620
So while the data will be compressed on disk and you'll have faster reads and writes, you

848
00:39:14,620 --> 00:39:17,900
won't necessarily gain anything in terms of extra space on disk.

849
00:39:17,900 --> 00:39:21,580
So if the data actually takes less space to store, it'll still count that as though it's

850
00:39:21,580 --> 00:39:22,580
the uncompressed size.

851
00:39:22,580 --> 00:39:26,860
So you won't gain any space savings necessarily, but you'll gain the performance savings.

852
00:39:26,860 --> 00:39:30,940
Huh, and you're using it on systems right now and in production?

853
00:39:30,940 --> 00:39:32,940
Yeah, so on my laptop right now I'm using it.

854
00:39:32,940 --> 00:39:34,660
It's been stable for over a month.

855
00:39:34,660 --> 00:39:37,860
I'll say overall the latency seems a lot better.

856
00:39:37,860 --> 00:39:42,260
The small random writes performed much better than what I was using ButterFS.

857
00:39:42,260 --> 00:39:43,260
Random writes, yeah.

858
00:39:43,260 --> 00:39:44,260
Cool.

859
00:39:44,260 --> 00:39:45,260
Very nice.

860
00:39:45,260 --> 00:39:48,860
William, will you be like our BcashFS correspondent?

861
00:39:48,860 --> 00:39:51,540
Let us know how it goes.

862
00:39:51,540 --> 00:39:58,620
This might be shallow, but ButterFS almost feels a little tainted now, and so it's nice

863
00:39:58,620 --> 00:40:02,380
that there's something, even if it's just a fresh name, it's like, ah, maybe this one

864
00:40:02,380 --> 00:40:03,380
will be better.

865
00:40:03,380 --> 00:40:06,940
For someone who runs ButterFS on 4.7, I'm still hitting bugs every day.

866
00:40:06,940 --> 00:40:07,940
Yikes.

867
00:40:07,940 --> 00:40:12,580
I'm able to trigger panics on some of my machines, and so going to BcashFS where I have yet to

868
00:40:12,580 --> 00:40:17,620
hit any panics under similar workloads is amazing, and the fact that it's very fast

869
00:40:17,620 --> 00:40:19,500
even compared to ButterFS is amazing.

870
00:40:19,500 --> 00:40:24,140
It's claiming X4 speeds, and I would say from what I've seen, that's probably about correct.

871
00:40:24,140 --> 00:40:25,140
Impressive.

872
00:40:25,140 --> 00:40:26,140
Wow.

873
00:40:26,140 --> 00:40:27,140
Wow.

874
00:40:27,140 --> 00:40:30,860
The only downside is that there's no stable disk, so prepare to reformat every couple

875
00:40:30,860 --> 00:40:31,860
of months.

876
00:40:31,860 --> 00:40:32,860
Oh, yeah.

877
00:40:32,860 --> 00:40:33,860
So that's all.

878
00:40:33,860 --> 00:40:35,940
You are definitely in the early adopter phase then right now.

879
00:40:35,940 --> 00:40:37,940
So he's trying not to stabilize the format too early.

880
00:40:37,940 --> 00:40:42,100
I think one of the mistakes ButterFS made is they tried to stabilize their format before

881
00:40:42,100 --> 00:40:46,540
they had their features done, so they were stuck with a really weird wonky format they

882
00:40:46,540 --> 00:40:47,540
had to work around.

883
00:40:47,540 --> 00:40:48,540
Yeah, okay.

884
00:40:48,540 --> 00:40:52,300
One of the things about BcashFS is he's taking the time to do it right, so he's not going

885
00:40:52,300 --> 00:40:55,180
to stabilize the format until all the features are complete.

886
00:40:55,180 --> 00:40:56,180
Nice.

887
00:40:56,180 --> 00:40:58,420
Yeah, and it's nice to see that as another take out there.

888
00:40:58,420 --> 00:40:59,420
Well, cool, William.

889
00:40:59,420 --> 00:41:03,500
Thank you for updating us on that because I know we've mentioned the project in the

890
00:41:03,500 --> 00:41:06,500
past, and I think I've mentioned too that he has a Patreon where –

891
00:41:06,500 --> 00:41:07,500
He does have a Patreon.

892
00:41:07,500 --> 00:41:09,180
Yeah, I'll link that in the show notes.

893
00:41:09,180 --> 00:41:13,080
So I think speaking of impressive feats, I think Wimpy has pulled off some impressive

894
00:41:13,080 --> 00:41:14,780
feats to actually have a connection.

895
00:41:14,780 --> 00:41:15,780
Wimpy, you're there, right?

896
00:41:15,780 --> 00:41:16,780
You're connected.

897
00:41:16,780 --> 00:41:17,780
Hello.

898
00:41:17,780 --> 00:41:18,780
Hello.

899
00:41:18,780 --> 00:41:19,780
This is England calling.

900
00:41:19,780 --> 00:41:20,780
Can you hear me?

901
00:41:20,780 --> 00:41:21,780
Hello from GD1.

902
00:41:21,780 --> 00:41:22,780
We can hear you, Wimpy.

903
00:41:22,780 --> 00:41:23,780
You've done it, sir.

904
00:41:23,780 --> 00:41:25,940
You've done it very well.

905
00:41:25,940 --> 00:41:31,740
So you have got my interest piqued because, of course, if I ever am able to jump off of

906
00:41:31,740 --> 00:41:36,620
Android and get onto a platform like Ubuntu Touch, I'd really like to do it on a piece

907
00:41:36,620 --> 00:41:40,620
of hardware that I would covet, that I would love to hold in my hand.

908
00:41:40,620 --> 00:41:45,880
And the Meizu Pro 5 definitely caught my eye, but I've never really been able to grab the

909
00:41:45,880 --> 00:41:47,320
Ubuntu Touch version.

910
00:41:47,320 --> 00:41:49,460
I can find it with Android in various places.

911
00:41:49,460 --> 00:41:53,140
It's got a fingerprint sensor with a hardware home button.

912
00:41:53,140 --> 00:42:01,220
It's got a 21 megapixel camera, curved edge glass, a real Samsung processor, not a MediaTek

913
00:42:01,220 --> 00:42:02,220
processor.

914
00:42:02,220 --> 00:42:03,220
Nice.

915
00:42:03,220 --> 00:42:07,660
It just looks like a great piece of hardware, but always running Android.

916
00:42:07,660 --> 00:42:11,140
And my understanding was, Wimpy, that if you got one of these devices with Android, you

917
00:42:11,140 --> 00:42:15,220
might not be able to install over-the-air updates for Ubuntu Touch.

918
00:42:15,220 --> 00:42:19,940
And so I'm wondering if, perhaps, you may have an update for the group to share with

919
00:42:19,940 --> 00:42:21,940
the class.

920
00:42:21,940 --> 00:42:22,940
I do.

921
00:42:22,940 --> 00:42:31,340
So I bought a Meizu Pro 5 that came pre-installed with Flyme OS, which is Meizu's own Android

922
00:42:31,340 --> 00:42:32,340
spin.

923
00:42:32,340 --> 00:42:33,340
Flyme?

924
00:42:33,340 --> 00:42:34,340
F-L-Y-M-E?

925
00:42:34,340 --> 00:42:35,340
Yeah.

926
00:42:35,340 --> 00:42:38,020
I'm reliably informed that it's pronounced Flyme.

927
00:42:38,020 --> 00:42:39,020
Yeah.

928
00:42:39,020 --> 00:42:40,020
Flyme.

929
00:42:40,020 --> 00:42:41,020
I don't know.

930
00:42:41,020 --> 00:42:42,020
It could be Flim or...

931
00:42:42,020 --> 00:42:43,020
Based on Android 5.

932
00:42:43,020 --> 00:42:44,020
5.1.

933
00:42:44,020 --> 00:42:45,020
Okay.

934
00:42:45,020 --> 00:42:54,820
And long story short, it is now running Ubuntu and everything's working, including over-the-air

935
00:42:54,820 --> 00:42:55,820
updates.

936
00:42:55,820 --> 00:42:56,820
Nice.

937
00:42:56,820 --> 00:43:01,880
So it is possible to take that Android platform and run Ubuntu on it.

938
00:43:01,880 --> 00:43:02,880
What was the key?

939
00:43:02,880 --> 00:43:05,260
Was it because you were able to get it with an unlocked bootloader?

940
00:43:05,260 --> 00:43:09,060
What was the secret sauce that made it happen?

941
00:43:09,060 --> 00:43:13,580
None of them ship with unlocked bootloaders, unless you get one that's actually running

942
00:43:13,580 --> 00:43:17,780
Ubuntu, in which case you can unlock the bootloader on the ones that come shipped with Ubuntu.

943
00:43:17,780 --> 00:43:21,080
The ones that come with Flyme have locked bootloaders.

944
00:43:21,080 --> 00:43:29,060
The key is somebody who was on the beta program for Meizu had a daily build, and that did

945
00:43:29,060 --> 00:43:32,960
have bootloader unlock capability.

946
00:43:32,960 --> 00:43:38,100
So the trick here is you can only flash that build on what are known as either the global

947
00:43:38,100 --> 00:43:41,760
or international versions of the firmware.

948
00:43:41,760 --> 00:43:46,700
So either you know for sure you're buying a device which has the global or international

949
00:43:46,700 --> 00:43:55,060
firmware, or it is possible, I have learned, because I've done it, to actually modify the

950
00:43:55,060 --> 00:44:00,220
Chinese firmware to appear to be international.

951
00:44:00,220 --> 00:44:07,240
And this is just so you can flash the global firmware at the top of the Chinese firmware.

952
00:44:07,240 --> 00:44:10,400
This particular beta build that allows you to unlock.

953
00:44:10,400 --> 00:44:13,780
So you make it an international firmware.

954
00:44:13,780 --> 00:44:16,220
You then flash this beta firmware.

955
00:44:16,220 --> 00:44:19,940
Then you can use Fastboot just to unlock the bootloader.

956
00:44:19,940 --> 00:44:27,660
From there you flash TWRP onto it, and you can then install Ubuntu in one of two ways.

957
00:44:27,660 --> 00:44:32,220
But the easiest way I've found is some nice person has actually made a TWRP backup of

958
00:44:32,220 --> 00:44:35,180
OTA 11 for the Meizu Pro 5.

959
00:44:35,180 --> 00:44:40,500
So you just download that, stick it on an SD card, restore that.

960
00:44:40,500 --> 00:44:45,380
That then boots into Ubuntu, but you've still got the TWRP recovery.

961
00:44:45,380 --> 00:44:50,340
And the problem with that is if you then say do OTA updates, it doesn't apply the OTA update.

962
00:44:50,340 --> 00:44:58,900
So you then go back to Fastboot, flash the Ubuntu recovery, which you get from GitHub.

963
00:44:58,900 --> 00:45:02,780
And at that point, you then have a fully Ubuntu Pro 5.

964
00:45:02,780 --> 00:45:06,420
You can then get the OTA updates, and everything works as you'd expect.

965
00:45:06,420 --> 00:45:13,220
So you've got a beautiful camera, fingerprint sensor, and USB-C all work, right?

966
00:45:13,220 --> 00:45:14,340
Yep.

967
00:45:14,340 --> 00:45:17,820
And the fingerprint reader, and yeah, all the bells and whistles.

968
00:45:17,820 --> 00:45:21,340
Do you notice a big performance difference between your previous Ubuntu Touch hardware?

969
00:45:21,340 --> 00:45:22,340
I do, yeah.

970
00:45:22,340 --> 00:45:28,340
And so considering I was using the Meizu MX4, which was previously the best you could get,

971
00:45:28,340 --> 00:45:30,520
there is a significant difference.

972
00:45:30,520 --> 00:45:37,260
So the models that shipped with Ubuntu were, so there's two versions of the Pro 5.

973
00:45:37,260 --> 00:45:41,660
One that comes with three gigs of RAM and 32 gigs of internal storage, and one that

974
00:45:41,660 --> 00:45:45,340
comes with four gigs of RAM or 64 gigs of storage.

975
00:45:45,340 --> 00:45:55,580
The Ubuntu versions only came in the three gig 32 gig flavor, but I'm 99% certain you

976
00:45:55,580 --> 00:46:05,000
could get this to work on the 64 gig version, and I'm half tempted to try it.

977
00:46:05,000 --> 00:46:10,780
So yeah, it all works perfectly well, and I spent yesterday evening unlocking it and

978
00:46:10,780 --> 00:46:13,500
flashing it, and I've had a little bit of a play today.

979
00:46:13,500 --> 00:46:17,580
But the connectivity problems I had, as you will remember, I'm connected via shortwave

980
00:46:17,580 --> 00:46:18,860
radio.

981
00:46:18,860 --> 00:46:21,300
There is a problem there somewhere.

982
00:46:21,300 --> 00:46:25,740
In fact, there's still a problem now, I'm looking at about 4% packet loss somewhere

983
00:46:25,740 --> 00:46:27,860
between you and me.

984
00:46:27,860 --> 00:46:33,220
But the way I'm connected at the moment is my Pro 5 running Ubuntu is connected over

985
00:46:33,220 --> 00:46:38,820
4G, and I've turned on the hotspot on the Pro 5, and the computer's now using the Pro

986
00:46:38,820 --> 00:46:39,820
5 as its hotspot.

987
00:46:39,820 --> 00:46:40,820
It lives, it lives.

988
00:46:40,820 --> 00:46:41,820
And there we go.

989
00:46:41,820 --> 00:46:42,820
That's fantastic.

990
00:46:42,820 --> 00:46:44,420
So I'm now talking to you through the Pro 5.

991
00:46:44,420 --> 00:46:49,640
Wow, so this seems like a pretty great Ubuntu Touch hardware.

992
00:46:49,640 --> 00:46:53,580
The only problem is, maybe I'll be honest, that sounds like it was a lot of work to pull

993
00:46:53,580 --> 00:46:55,180
all that off.

994
00:46:55,180 --> 00:46:58,940
It was, once you know how to do it, it's really straightforward.

995
00:46:58,940 --> 00:46:59,940
Okay.

996
00:46:59,940 --> 00:47:06,340
But the thing is, is that all the information in order to do it sort of spread over lots

997
00:47:06,340 --> 00:47:12,420
of different places, and pulling that together took a couple of hours of reading.

998
00:47:12,420 --> 00:47:17,460
Once I'd read it and understood the theory of what I was going to do, actually doing

999
00:47:17,460 --> 00:47:20,220
it didn't take that long.

1000
00:47:20,220 --> 00:47:27,860
So I'll post a link in the chat room, because there's one Ask Ubuntu page which does link

1001
00:47:27,860 --> 00:47:31,900
to all of the right places, but you do have to sort of read further in all of those links

1002
00:47:31,900 --> 00:47:33,460
to actually piece it all together.

1003
00:47:33,460 --> 00:47:35,020
Is there anything not working, hardware-wise?

1004
00:47:35,020 --> 00:47:37,020
No, it all works.

1005
00:47:37,020 --> 00:47:38,020
Everything's working.

1006
00:47:38,020 --> 00:47:42,420
I know a good guide makes a huge difference, especially when you're like, well, I'm going

1007
00:47:42,420 --> 00:47:46,120
to take this image I downloaded off the internet and flash it to my phone, and here's hoping

1008
00:47:46,120 --> 00:47:47,120
for the best.

1009
00:47:47,120 --> 00:47:48,120
Yeah.

1010
00:47:48,120 --> 00:47:50,620
What about battery life?

1011
00:47:50,620 --> 00:47:59,660
Well, this I finished, I last charged yesterday about this time, so about full 24 hours ago.

1012
00:47:59,660 --> 00:48:04,140
It was off charge all last night.

1013
00:48:04,140 --> 00:48:08,180
I've done some development on it today, so I've been updating my apps, and I've been

1014
00:48:08,180 --> 00:48:10,860
installing them on this and testing them on this.

1015
00:48:10,860 --> 00:48:14,020
Let me just look at the battery profile and let you know where it is.

1016
00:48:14,020 --> 00:48:21,860
So there is, after 24 hours, there's 21% charge remaining, and I'd say for 50% of that time

1017
00:48:21,860 --> 00:48:23,300
it's been in active use.

1018
00:48:23,300 --> 00:48:24,300
Hmm.

1019
00:48:24,300 --> 00:48:25,300
Yeah.

1020
00:48:25,300 --> 00:48:29,900
And the charge is pretty, it looks like it has a pretty decently high-powered charger

1021
00:48:29,900 --> 00:48:30,900
too, so it charges pretty quick.

1022
00:48:30,900 --> 00:48:31,900
That's nice.

1023
00:48:31,900 --> 00:48:32,900
Yeah.

1024
00:48:32,900 --> 00:48:36,020
Yeah, it's got quick charge and all of that good stuff, and like you say, it's USB-C as

1025
00:48:36,020 --> 00:48:37,020
well.

1026
00:48:37,020 --> 00:48:40,340
Sounds like almost an uncompromising experience.

1027
00:48:40,340 --> 00:48:41,340
Nice.

1028
00:48:41,340 --> 00:48:48,820
Yeah, and so I've been sort of changing some of my habits in order to use Ubuntu Touch,

1029
00:48:48,820 --> 00:48:55,060
and one is, you know, there are Spotify clients, but they're not quite like Spotify.

1030
00:48:55,060 --> 00:48:58,620
You know, they do use Spotify, but the interfaces are a bit limited.

1031
00:48:58,620 --> 00:49:02,860
There's another thing called Cloud Player, which is very good, but I have no idea where

1032
00:49:02,860 --> 00:49:03,860
it's getting its music from.

1033
00:49:03,860 --> 00:49:05,780
I've not looked at the source yet.

1034
00:49:05,780 --> 00:49:15,500
So I've put a 200 gig micro SD card, Pro 5, and I'm going to put my entire MP3 library

1035
00:49:15,500 --> 00:49:24,500
on it and sort of revert back to listening to music that I have locally, you know, whilst

1036
00:49:24,500 --> 00:49:28,620
I figure out how I'm going to sort out, you know, music and podcasts and all of that sort

1037
00:49:28,620 --> 00:49:29,620
of stuff.

1038
00:49:29,620 --> 00:49:30,620
Yeah.

1039
00:49:30,620 --> 00:49:31,620
So I'm looking at it now.

1040
00:49:31,620 --> 00:49:33,220
Jesus, it looks like it just supports all of the bands.

1041
00:49:33,220 --> 00:49:39,340
I will have the full technical specs in the show notes, but pretty much all of the LTE

1042
00:49:39,340 --> 00:49:42,500
frequencies and GSM ones as well.

1043
00:49:42,500 --> 00:49:46,940
Yeah, and it's dual SIM as well, so you've got the option of either having two SIMs in

1044
00:49:46,940 --> 00:49:51,140
it or a SIM and an SD card.

1045
00:49:51,140 --> 00:49:52,140
That's pretty nice.

1046
00:49:52,140 --> 00:49:53,960
Yeah, it's got a 3,050 milliamp battery.

1047
00:49:53,960 --> 00:49:59,020
That's pretty respectable, and it has a 4K video camera on the damn thing too.

1048
00:49:59,020 --> 00:50:03,660
Yeah, which I think is something ridiculous, like 120 frames per second or something.

1049
00:50:03,660 --> 00:50:07,100
Jeez, yeah, this is really great.

1050
00:50:07,100 --> 00:50:16,140
Yeah, so in terms of hardware, this is a genuine replacement for my Moto Style X that I was

1051
00:50:16,140 --> 00:50:23,540
using with Android in terms of the screen size and its capability.

1052
00:50:23,540 --> 00:50:28,980
Now just some of the gaps in the apps need filling, and I've been working on my own apps.

1053
00:50:28,980 --> 00:50:38,340
This weekend to improve them and bring them up to a better level, so I've got two published

1054
00:50:38,340 --> 00:50:43,500
and another one that I'm working on, which is a new version of Pocket Casts.

1055
00:50:43,500 --> 00:50:47,060
It looks like it's a 2K camera is what it is, which is actually pretty great.

1056
00:50:47,060 --> 00:50:53,860
It could do 2K at 30 frames a second or 1080p at 30 frames per second, and it also has pretty

1057
00:50:53,860 --> 00:50:56,260
nice optics on it for a camera phone.

1058
00:50:56,260 --> 00:50:57,260
Dang, Wimpy.

1059
00:50:57,260 --> 00:50:58,260
Yep, you've officially made me jealous.

1060
00:50:58,260 --> 00:50:59,260
Yep.

1061
00:50:59,260 --> 00:51:04,700
So, see, the issue is I would need a good...

1062
00:51:04,700 --> 00:51:08,100
Do you have any of those links handy that I could maybe look at to see if it'd be possible

1063
00:51:08,100 --> 00:51:09,500
for me to pull this off?

1064
00:51:09,500 --> 00:51:11,000
Because I'm not like...

1065
00:51:11,000 --> 00:51:12,340
This isn't like a super...

1066
00:51:12,340 --> 00:51:13,820
Chris no good with the phones.

1067
00:51:13,820 --> 00:51:19,300
Well, I've done a little bit of it, but yeah, I just don't feel super comfortable with it.

1068
00:51:19,300 --> 00:51:20,300
Intro discender, I mean...

1069
00:51:20,300 --> 00:51:23,220
I guess if it's not my main phone, it's not as risky.

1070
00:51:23,220 --> 00:51:24,220
If I still had my Nexus...

1071
00:51:24,220 --> 00:51:25,220
And you know who to call for help.

1072
00:51:25,220 --> 00:51:27,740
Who are you going to call?

1073
00:51:27,740 --> 00:51:28,740
Oh, Wimpy.

1074
00:51:28,740 --> 00:51:29,740
Yeah.

1075
00:51:29,740 --> 00:51:30,740
Well, very nice.

1076
00:51:30,740 --> 00:51:31,740
Yeah, I'm just...

1077
00:51:31,740 --> 00:51:32,740
Here we go.

1078
00:51:32,740 --> 00:51:33,740
Here's the article.

1079
00:51:33,740 --> 00:51:34,740
Hang on a second.

1080
00:51:34,740 --> 00:51:35,740
Perfect.

1081
00:51:35,740 --> 00:51:37,340
Yeah, I would love to throw that in the show notes too.

1082
00:51:37,340 --> 00:51:39,700
So that's the Ask Ubuntu topic.

1083
00:51:39,700 --> 00:51:40,700
And read through that thoroughly.

1084
00:51:40,700 --> 00:51:41,700
In the show notes.

1085
00:51:41,700 --> 00:51:42,700
Yeah.

1086
00:51:42,700 --> 00:51:47,460
So the first bit changing the region, that's only required if you don't have a device that

1087
00:51:47,460 --> 00:51:51,260
is international stroke global.

1088
00:51:51,260 --> 00:51:56,940
The unlocking the bootloader piece is simply once you've unlocked the bootloader, you flash

1089
00:51:56,940 --> 00:52:01,780
twerp, which you can just do from fast boot, that's straightforward.

1090
00:52:01,780 --> 00:52:10,940
You then use that, then you flash that, you put the update for this beta version in the

1091
00:52:10,940 --> 00:52:15,140
root of the internal memory, and Meizu will automatically pick that up and flash it for

1092
00:52:15,140 --> 00:52:16,140
you.

1093
00:52:16,140 --> 00:52:24,340
You can do that with the Android, and it's just a case of then restoring the twerp, I

1094
00:52:24,340 --> 00:52:31,180
use the twerp backup of Ubuntu OTA 11, because that was the least thing about.

1095
00:52:31,180 --> 00:52:32,860
And then you flash the Ubuntu recovery.

1096
00:52:32,860 --> 00:52:36,700
So once you know what the steps are, it's quite repeatable.

1097
00:52:36,700 --> 00:52:40,900
And even the first bit, which is if you've got an international model, and you need to

1098
00:52:40,900 --> 00:52:45,540
patch it to be a global version, I did go through those steps, even though I didn't

1099
00:52:45,540 --> 00:52:49,540
need to do it, because I was interested to see what they would be.

1100
00:52:49,540 --> 00:52:57,220
Because you can only get the 4GB and 64GB variant from China, so that's almost certainly

1101
00:52:57,220 --> 00:52:59,980
not going to be an international version.

1102
00:52:59,980 --> 00:53:03,180
And that's actually quite trivial once you know what to do.

1103
00:53:03,180 --> 00:53:10,900
So yeah, it is doable if you've got the time to actually read it and feel comfortable.

1104
00:53:10,900 --> 00:53:15,780
And as I said to you last week, I wasn't prepared to spend the money unless I was sort of assured

1105
00:53:15,780 --> 00:53:18,460
of some success, and it has been successful.

1106
00:53:18,460 --> 00:53:19,460
I love it.

1107
00:53:19,460 --> 00:53:22,940
I love it because now I've lived vicariously through you, and those new iPhones are just

1108
00:53:22,940 --> 00:53:23,940
around the corner.

1109
00:53:23,940 --> 00:53:24,940
It's like, look at those.

1110
00:53:24,940 --> 00:53:25,940
Look at this thing.

1111
00:53:25,940 --> 00:53:26,940
This is what I want, right there.

1112
00:53:26,940 --> 00:53:28,180
That's really nice, Wimpy.

1113
00:53:28,180 --> 00:53:35,820
So the phone is, I think you are probably going to be one of the more interesting people

1114
00:53:35,820 --> 00:53:39,900
in the Mumble Room to follow when it comes to trying out this particular technology,

1115
00:53:39,900 --> 00:53:45,300
because this is something that I want to switch to as soon as I can, but I'm just, I watch

1116
00:53:45,300 --> 00:53:46,300
this, I don't know.

1117
00:53:46,300 --> 00:53:47,300
This seems like a lot of steps.

1118
00:53:47,300 --> 00:53:48,780
But you're making it seem like it's really close.

1119
00:53:48,780 --> 00:53:53,580
So I'm glad you were able to get connected and share that with us, because I think it's

1120
00:53:53,580 --> 00:53:54,580
going somewhere.

1121
00:53:54,580 --> 00:53:55,580
I think it's actually going somewhere.

1122
00:53:55,580 --> 00:53:58,780
This is exactly the kind of momentum and usability and real world experience.

1123
00:53:58,780 --> 00:54:01,860
I'm really excited to follow where you go with it, Wimpy, so I hope you keep us posted

1124
00:54:01,860 --> 00:54:02,860
down the road.

1125
00:54:02,860 --> 00:54:03,860
Will do.

1126
00:54:03,860 --> 00:54:04,860
Will do.

1127
00:54:04,860 --> 00:54:05,860
Thank you, sir.

1128
00:54:05,860 --> 00:54:09,820
Also, congrats real quickly while you're still here on the announcement that ByteMark is

1129
00:54:09,820 --> 00:54:12,780
sponsoring infrastructure for the Ubuntu Mate project.

1130
00:54:12,780 --> 00:54:16,340
That seems like a big milestone, so congrats to you on the project.

1131
00:54:16,340 --> 00:54:17,340
Thanks for that.

1132
00:54:17,340 --> 00:54:18,340
Yeah, thank you for covering that.

1133
00:54:18,340 --> 00:54:23,140
It might seem a bit dull to people on the outside, but that's a huge deal for us.

1134
00:54:23,140 --> 00:54:28,860
It will make a massive difference in how we can channel the crowdfunding money to development

1135
00:54:28,860 --> 00:54:34,460
projects and ByteMark are, well, not just Ubuntu Mate, they've been sponsoring Debian

1136
00:54:34,460 --> 00:54:39,580
and Kodi and LibreOffice and many other projects for years and years and years.

1137
00:54:39,580 --> 00:54:46,540
And their beliefs and attitude towards open source is very much aligned with probably

1138
00:54:46,540 --> 00:54:50,660
everyone listening to this now.

1139
00:54:50,660 --> 00:54:56,660
They find a way to give back in the way that they can based on what they have available

1140
00:54:56,660 --> 00:55:00,740
and relieve pressure points on projects with regards to hosting.

1141
00:55:00,740 --> 00:55:07,380
I've got effectively free access to their entire infrastructure platform at no cost.

1142
00:55:07,380 --> 00:55:12,920
I've been encouraged to do whatever I want to experiment with it and the original specs

1143
00:55:12,920 --> 00:55:17,620
of some of the servers that they pinged at me were just like massively over what we needed

1144
00:55:17,620 --> 00:55:23,220
and it was like, okay, that's amazing, but we don't need something with, you know, 160

1145
00:55:23,220 --> 00:55:24,220
gigs of RAM.

1146
00:55:24,220 --> 00:55:30,180
It was quite amazing, but yeah, they're a cool fit and I'm really pleased.

1147
00:55:30,180 --> 00:55:37,200
It's nice, just like Entroware, it's nice to be associated with, you know, other organizations

1148
00:55:37,200 --> 00:55:43,500
that share your outlook and your beliefs and bite marks certainly are in that camp, absolutely.

1149
00:55:43,500 --> 00:55:44,500
I love hearing that.

1150
00:55:44,500 --> 00:55:45,500
Yeah, absolutely.

1151
00:55:45,500 --> 00:55:46,500
That's great news.

1152
00:55:46,500 --> 00:55:47,500
That's really cool.

1153
00:55:47,500 --> 00:55:51,760
So, that's kind of probably the perfect spot to wrap it all up.

1154
00:55:51,760 --> 00:55:53,560
Thank you Wimpy for sharing that with us.

1155
00:55:53,560 --> 00:55:55,980
Thank you everybody in the moment room for joining us this week.

1156
00:55:55,980 --> 00:56:01,900
I really am glad, it is not always easy to find the time and so we really appreciate

1157
00:56:01,900 --> 00:56:03,640
it when you set that aside to join us.

1158
00:56:03,640 --> 00:56:04,640
It does make all the difference.

1159
00:56:04,640 --> 00:56:05,640
You can join us too.

1160
00:56:05,640 --> 00:56:10,680
Go to our jblive.tv chat room, do a bang mumble in there, get the server address, pass an

1161
00:56:10,680 --> 00:56:12,780
audio check, you're pretty much good to go.

1162
00:56:12,780 --> 00:56:13,780
It's easy peasy.

1163
00:56:13,780 --> 00:56:14,780
It's pretty easy.

1164
00:56:14,780 --> 00:56:18,660
Live times over at jubilabroadcasting.com slash calendar and don't forget the RSS feeds.

1165
00:56:18,660 --> 00:56:21,420
You don't have to worry about any of this crazy live shenanigans.

1166
00:56:21,420 --> 00:56:25,860
You can just listen on demand like a good podcast is meant to be whenever you like with

1167
00:56:25,860 --> 00:56:26,860
that feed.

1168
00:56:26,860 --> 00:56:27,860
Thanks for listening.

1169
00:56:27,860 --> 00:56:54,860
Take care, next week.

1170
00:56:57,860 --> 00:57:13,300
I was picturing Wimpy during that episode like in mission control scrambling to like

1171
00:57:13,300 --> 00:57:16,780
get the connectivity back online with the satellite which could be crashing into orbit.

1172
00:57:16,780 --> 00:57:19,220
He's like holding two wires together.

1173
00:57:19,220 --> 00:57:21,580
Yeah like gz gz gz.

1174
00:57:21,580 --> 00:57:23,780
It was like intense moments there.

1175
00:57:23,780 --> 00:57:28,700
There's me yelling downstairs, Louise, are you on Netflix?

1176
00:57:28,700 --> 00:57:29,860
Stop streaming.

1177
00:57:29,860 --> 00:57:35,940
There was just a thread in our Linux started 19 hours ago is bleeding edge unstable considering

1178
00:57:35,940 --> 00:57:36,940
Arch.

1179
00:57:36,940 --> 00:57:40,460
And I actually I think it's that's not the right question.

1180
00:57:40,460 --> 00:57:42,580
It's not that it's unstable.

1181
00:57:42,580 --> 00:57:45,580
It's that there could be a high velocity of changes.

1182
00:57:45,580 --> 00:57:47,380
And I think those are two separate things.

1183
00:57:47,380 --> 00:57:49,580
Yeah, it's more is it unstable?

1184
00:57:49,580 --> 00:57:54,040
Is it ready for something like a production environment and probably not with all the

1185
00:57:54,040 --> 00:57:55,320
changes that happen.

1186
00:57:55,320 --> 00:57:58,700
And sometimes there's a regression, but I mean, it's not that obvious.

1187
00:57:58,700 --> 00:58:06,220
But the thing for me that Manjaro wins hands down over anything that Antegra or Arch has

1188
00:58:06,220 --> 00:58:11,540
done is the Manjaro settings part, their own settings tools.

1189
00:58:11,540 --> 00:58:12,700
They are brilliant.

1190
00:58:12,700 --> 00:58:16,700
There's a kernel one and it just comes with every kernel, one click deployment, one click

1191
00:58:16,700 --> 00:58:17,700
on install.

1192
00:58:17,700 --> 00:58:20,580
And then when you reboot, if it doesn't work, you can boot back into the old one.

1193
00:58:20,580 --> 00:58:24,260
It's just all in a nice little GUI and it tells you which ones are the stable ones,

1194
00:58:24,260 --> 00:58:25,420
which ones are the recommended ones.

1195
00:58:25,420 --> 00:58:29,340
And then all of the proprietary drivers are just a one click GUI.

1196
00:58:29,340 --> 00:58:33,820
That's the easiest thing I've ever seen works flawlessly for me on every machine I've tried

1197
00:58:33,820 --> 00:58:34,820
it on.

1198
00:58:34,820 --> 00:58:35,820
Hmm.

1199
00:58:35,820 --> 00:58:39,220
So, yeah, I'm reading through the chat room right now.

1200
00:58:39,220 --> 00:58:44,380
Rika says he'd attribute the stability to Arch since Antegra only modifies a small subset.

1201
00:58:44,380 --> 00:58:47,740
There's also some other good feedback in here that's kind of worth mentioning.

1202
00:58:47,740 --> 00:58:52,700
JM says that I live on the edge but I like that Rahim123 says that I would say that Manjaro

1203
00:58:52,700 --> 00:58:56,780
doesn't actually test or fix Arch problems but rather acts as a very effective buffer

1204
00:58:56,780 --> 00:59:01,620
when Arch jumps the gun and lets major new buggy releases in.

1205
00:59:01,620 --> 00:59:02,620
That's interesting.

1206
00:59:02,620 --> 00:59:06,100
That's a very interesting point and that is I think a better way to sort of frame the

1207
00:59:06,100 --> 00:59:09,840
way to look at Manjaro right there is that Manjaro buffers you from when Arch jumps

1208
00:59:09,840 --> 00:59:10,840
the gun.

1209
00:59:10,840 --> 00:59:11,840
OK.

1210
00:59:11,840 --> 00:59:16,540
I think that's a super valid point and almost could be a game changer right there.

1211
00:59:16,540 --> 00:59:21,660
I was thinking about something you just said though and that was I think it was something

1212
00:59:21,660 --> 00:59:28,500
to the effect of since there's a lot of changes coming in, it doesn't suit it to be in production.

1213
00:59:28,500 --> 00:59:32,220
Well I mean I don't mean production, I mean if it's somewhere, you know, if you're somewhere

1214
00:59:32,220 --> 00:59:35,020
that's running Red Hat and you're going to run Red Hat for the next five years with no

1215
00:59:35,020 --> 00:59:39,420
changes or you're running Debian stable, no, this probably is not for you.

1216
00:59:39,420 --> 00:59:43,860
Here's where I think it's kind of an interesting use case because I think if you have a dedicated

1217
00:59:43,860 --> 00:59:54,100
IT shop and you have systems guys that are there that learn the system and they build

1218
00:59:54,100 --> 01:00:01,600
tools around the system and they work around the drawbacks of the system, then I agree.

1219
01:00:01,600 --> 01:00:05,620
Something like Red Hat Enterprise, Linux, Ubuntu, LTS, it's great for that.

1220
01:00:05,620 --> 01:00:10,460
But when you're somebody – just to make this super kind of relatable, let's just

1221
01:00:10,460 --> 01:00:15,460
say it's like you're a startup and you're moving really fast and there's a lot of

1222
01:00:15,460 --> 01:00:20,140
people wearing a lot of – there's a few people wearing a lot of hats and say maybe

1223
01:00:20,140 --> 01:00:25,700
like the CEO is also the IT person.

1224
01:00:25,700 --> 01:00:32,140
Those people don't have time to learn the mythology of that particular Linux that's

1225
01:00:32,140 --> 01:00:34,260
been frozen in time.

1226
01:00:34,260 --> 01:00:38,940
And what you actually – what it feels like for those people is you're getting straddled

1227
01:00:38,940 --> 01:00:44,620
with the mistakes, the technical debt or the things that don't work with these static

1228
01:00:44,620 --> 01:00:45,620
releases.

1229
01:00:45,620 --> 01:00:46,620
Oh god, that's right.

1230
01:00:46,620 --> 01:00:47,620
This thing still has that problem.

1231
01:00:47,620 --> 01:00:49,620
We have to – what was that fix to work around this?

1232
01:00:49,620 --> 01:00:51,940
What do we have to do for this old version?

1233
01:00:51,940 --> 01:00:54,340
And then that's how we see it.

1234
01:00:54,340 --> 01:00:59,260
Whereas something that is rolling or updated more frequently, while yes, there's a high

1235
01:00:59,260 --> 01:01:04,940
velocity of changes, a good portion of those changes especially these days are fixes or

1236
01:01:04,940 --> 01:01:11,380
improvements and it's funny because I never would have had this position three years ago.

1237
01:01:11,380 --> 01:01:13,420
I was the LTS person.

1238
01:01:13,420 --> 01:01:17,940
I was the CentOS person, the Debian person for my clients all the time.

1239
01:01:17,940 --> 01:01:23,780
Never – only in a rare instance did I roll Gentube for very specific use cases.

1240
01:01:23,780 --> 01:01:33,620
And I'll have to tell you, having used OBS or OBS, it's really at a point where some

1241
01:01:33,620 --> 01:01:37,140
open source projects get there and they're just – they're at this perfect point where

1242
01:01:37,140 --> 01:01:42,700
they keep iterating and adding features that are just super major features like the ability

1243
01:01:42,700 --> 01:01:48,220
to offload H.264 encoding to the GPU if you have an NVIDIA graphics card.

1244
01:01:48,220 --> 01:01:49,220
Well guess what?

1245
01:01:49,220 --> 01:01:55,740
We built that thing with an NVIDIA 960 in it just with the explicit intention of hoping

1246
01:01:55,740 --> 01:01:59,580
to eventually have that feature to offload that to the GPU.

1247
01:01:59,580 --> 01:02:03,460
Well boom, OBS lands it and because we're on a system where we're right up to date,

1248
01:02:03,460 --> 01:02:07,900
we got the latest FFmpeg, we get the latest CUDA stuff, we get the latest NVIDIA driver

1249
01:02:07,900 --> 01:02:13,860
and we also get the latest OBS, that limitation that – in the past when I have a Mac with

1250
01:02:13,860 --> 01:02:19,700
Wirecast, I build this mythology around it of how to make this thing work and the system

1251
01:02:19,700 --> 01:02:24,240
doesn't get updates, it doesn't get touched because it's on a production appliance which

1252
01:02:24,240 --> 01:02:28,020
never felt good as somebody who is into technology and somebody who wants to keep their systems

1253
01:02:28,020 --> 01:02:31,060
up to date and somebody that wants to take advantage of new production features.

1254
01:02:31,060 --> 01:02:36,260
That never felt good and now with OBS on a rolling system, yeah, I'm rolling the dice

1255
01:02:36,260 --> 01:02:39,820
that the machine that broadcasts these shows out to the internet could get an update that

1256
01:02:39,820 --> 01:02:44,300
could change something that could totally bork it like the ZFS bug that they have right

1257
01:02:44,300 --> 01:02:50,140
now when your root file system is ZFS but at the same time, I'm getting features into

1258
01:02:50,140 --> 01:02:58,260
OBS like one they just added recently which is so, is so, so necessary for live productions

1259
01:02:58,260 --> 01:03:03,260
is a studio preview mode where I can preview the shot that I'm about to show on the live

1260
01:03:03,260 --> 01:03:06,540
stream before I switch to it.

1261
01:03:06,540 --> 01:03:12,540
This is so fundamental that if you think about it, otherwise when we're using OBS and that's

1262
01:03:12,540 --> 01:03:14,660
how we've been doing it, you're flying blind.

1263
01:03:14,660 --> 01:03:19,380
You have no idea what you're actually about to show on the live stream.

1264
01:03:19,380 --> 01:03:23,940
Sometimes it's something that's completely the wrong shot or the desktop window hasn't

1265
01:03:23,940 --> 01:03:27,300
been framed properly because there was no way to know.

1266
01:03:27,300 --> 01:03:29,700
Good luck having that and hope you set it up right and checked it real quick before

1267
01:03:29,700 --> 01:03:30,700
you went on air.

1268
01:03:30,700 --> 01:03:35,500
But now, one of the just huge things they just changed in one of their minor releases

1269
01:03:35,500 --> 01:03:36,740
is studio mode.

1270
01:03:36,740 --> 01:03:42,520
So now we can switch to a shot before or after we know it's ready to go which is, which makes

1271
01:03:42,520 --> 01:03:47,100
us look way more professional and it's like, it's a fundamental production feature really

1272
01:03:47,100 --> 01:03:54,500
that all the proprietary solutions have too and I love that we have it basically the day

1273
01:03:54,500 --> 01:03:55,900
that comes out.

1274
01:03:55,900 --> 01:04:01,580
Yeah, no, that is, I know that I've followed some of the stuff that you've said before

1275
01:04:01,580 --> 01:04:06,660
and how where Noah said that that's really saved his butt sometimes when just getting

1276
01:04:06,660 --> 01:04:07,660
the latest update.

1277
01:04:07,660 --> 01:04:13,780
And Noah hasn't mentioned it before, I don't think, but is he not an LTS user anymore?

1278
01:04:13,780 --> 01:04:16,900
I don't think he is, yeah, I should ask him about that.

1279
01:04:16,900 --> 01:04:19,260
No, no, I don't think I've ever heard him say why.

1280
01:04:19,260 --> 01:04:23,180
I don't think he's on 16.04, well, because he's just had so many different, I should

1281
01:04:23,180 --> 01:04:30,780
get him to recap it, Rahim123 points out that OpenSUSE at Tumbleweed has great OpenQA which

1282
01:04:30,780 --> 01:04:34,460
could be that sweet spot, yeah, and I really think there could be room for that.

1283
01:04:34,460 --> 01:04:37,780
The problem I've had with Tumbleweed, because I really, really wanted to go with Tumbleweed,

1284
01:04:37,780 --> 01:04:42,140
but every time there's a kernel change, you have to recompile all the graphics drivers

1285
01:04:42,140 --> 01:04:46,180
and there's not a one-click deployment for that, you have to do it all the hard way.

1286
01:04:46,180 --> 01:04:49,780
Yeah, I'll tell you too, part of it really is the software availability that makes it

1287
01:04:49,780 --> 01:04:51,420
really possible too.

1288
01:04:51,420 --> 01:04:52,540
That's a huge thing.

1289
01:04:52,540 --> 01:04:55,220
I wouldn't use Manjaro if I didn't have the AUR.

1290
01:04:55,220 --> 01:05:01,180
If it didn't link in with the AUR, that would be it, it'd be gone.

