Hi, everyone. Welcome to Brunch with Brent. It's my pleasure to be joined today by Brennan
Bruce. Brennan, how you doing?
I'm doing all right. Today's going pretty well.
Yeah, well, that's good to hear. We got connected by a few friends of ours in the Jupiter broadcasting
network, because you're the director of customer support at Linux Academy.
Correct.
And I would imagine that holds quite a bit of responsibilities. At least the title sounds like
it does.
Yeah. Right now the team is seven people. I have two in Australia, one in Tennessee,
and then the rest are all in Texas with me. And we manage all the day-to-day operations
for the support team for Linux Academy.
Nice. I would imagine every single day is a little bit different for your team. That's
kind of the nature of support, isn't it?
Oh, it's a very reactive, so grab bag is probably the best description of the problems we see.
I would imagine there's some repetition, but yeah, you just like all sorts of stuff. And
so are you dealing with customers directly or is it internal support? Is it a little
bit of both?
So up until roughly two weeks ago, we handled both internal and external support. The internal
support just got moved over to an IT operations team. So we are getting used to having nothing
but external now.
Right. So a little bit of relief there, but at least it allows you to concentrate your
time a little bit because you've got a little bit of two worlds. You've got a crew of people
face-to-face with you where you're located, it sounds like, and also some remote staff.
Is it kind of a completely different dynamic working with those or is it working out pretty
well? How does that work?
So everyone technically works remote. We have an office here in San Antonio that we go into
twice a week, just to kind of see each other and have some face time. But for the most
part, we all work remote. So I've gotten used to nothing but Slack calls and Zoom calls
in order to talk to people.
And how is that for you? Is that a nice rhythm or would you prefer a little bit more time?
Because I know many of us in the industry, we're doing a lot of remote time now, but
there are some challenges that come with that too.
It's weird. I've had this discussion with other people and I've found that remote work
for people in a transactional business like support, where I get a ticket, I work the
ticket, I go to the next one. Remote is perfect for them, assuming everybody has a work ethic.
That's got to be announced up front. But for people in that transactional setting, they
tend to manage themselves very closely because they're afraid, subconsciously, consciously,
that they're going to lose that privilege of working from home if they slack off. So
they're always hustling. Whereas when you have people who are project based and you
say, all right, you've got three months to finish this. Well, they may slack off for
two months because, hey, as long as I get it done by the third month, we're all good.
So these like micro projects seem to lend well to that remote stuff. And it sounds
to me like being part of a team is likely a really big part of that because you want to
make sure that you're doing well for your team as well, that you're not letting anybody
down or forcing some work on someone else. If you've got the right team around you, that
sounds like a pretty powerful environment. Yeah, I kind of describe it as an oligarchy.
You know, I make all the final calls, but realistically, it's very democratic because
if they don't like it, they're not going to do it. So I've got to make sure that it's
balanced and that they understand any of the choices I make for the team. They understand
the benefit, the cost and the benefit for it. So you may not like it, but hey, this
is the payoff if you stick with it. Has anyone joined your team who has never done remote
before? Like, is there some mentorship that happens there or some kind of adjustments
for someone like that? Three of my employees came from another large hosting provider here
in San Antonio. And for the most part, they worked in a major office. So for them, they
were ready to be at home. They were ready to have some of that freedom back because
they already knew they could do the work. They just hated having to deal with some of
the people that they dealt with on a day to day. And it's not to say they were asocial
or didn't want to be around people. They're actually great people people. But you have
those that that office feeling where you wonder, is somebody standing right next to me? Are
they gonna come bother me? Do they want to talk to me? Because I've got work to do.
You know, I can totally relate to that because I'm a photographer primarily. And so I'm
working from home all the time. Well, I say from home, but I'm always traveling. And so
the home ends up being wherever I am. But but a home base, right? That's away from a
standard sort of large office. And the reason I I'm asking those questions is it's such a
curious thing to me, like, I've lived in that world quite a lot and have had to learn how
to do it myself. And, you know, I've tripped along the way. And, and yet, I've heard repeatedly
from, you know, employees who are used to the sort of corporate environment like that,
how, once you figure out how to be, you know, consistently productive, on your own, that
freedom can just increase productivity and happiness and that sense of flexibility to
is sounds really essential. Yeah, I mean, my background was actually as a cook and chef
for almost two decades before I ever got into tech. Nice. And management, aside from managing
kitchens, which is another animal all unto itself, I'd never been in a full on corporate
style management role. So I had to teach myself analytics. I'd never done it. I've done like
cost benefit stuff for like inventory control, but never gone, okay, I need to find metrics
that show that my employees are doing a good job. What metrics are important? How do we
know what is good? What is bad? What's good data, bad data? Those were questions I never
had to ask before. And if I were in a corporate setting, and all the floundering I went through
trying to figure it out, I would have looked like an idiot. But being able to hide in my,
you know, living room, and figure this out in the middle of the night, because that's
when I decided I was going to work on it. It was it was easy. It was more of a comfortable
experience. Do you feel like sometimes working when you're your most optimal, or at least
when, you know, an idea really grabs you, and you can just dive into it? Do you feel
like that's an advantage as well? Oh, absolutely. It actually helps a lot with having a worldwide
team. You know, like I said, I have two guys in Australia who work for me. And that's because
for them, what is a daytime shift is overnight for us. So I end up getting close to like
a 24 seven coverage without having to have, you know, somebody up in the middle of the
night. Oh, that's nice. But having to get used to the fact that I was going to have
to meet with them at a time that was comparable for both of both parties took some getting
used to. But I was like, hey, this is great, though, because I can say, all right, today's
gonna be the day where I can go out and go shopping at noon, because I'm going to be
working until midnight. So I'll just shift my hours around. And having that flexibility
is tremendous when you need to be able to think on your feet, and the world doesn't
revolve around the nine to five schedule. Yeah, I could see how from the business perspective,
that sort of flexibility in support is like, totally essential that that 24 hour cycle
I hadn't even thought of because we sort of think in these, you know, eight hour or more
max 12 hour cycles. But yeah, I could see how having someone sort of on hand at any
time, especially with a, you know, how Linux Academy is is such a sort of web based business
wherever anybody can join from anywhere at any time, I could see how that would really
be quite essential. It's fascinating. I just, you know, we're talking about analytics, I
just got into using like Google Analytics to track our it's basically our FAQ page.
It's, we use Zendesk. So it's called a knowledge base. But I wanted to track which ones were
most popular to see, you know, where, where we could do better and where we are doing
the best. And got into messing with Google Analytics, having never messed with it before.
And I was shocked at how much information was in there. And found that while our student
base is primarily North American, so, excluding Mexico, so Canada and the United States are
combined, I think 67 68% of our student base. And the rest tends to be centered around
around India, Pakistan, Afghanistan, Saudi Arabia. So the Middle Eastern countries have
another good like 27%. I thought, okay, so that's what I should see when I look at the
analytics. But looking at our FAQ pages, I found that it was almost inverted. The people
in North America aren't going to the FAQ pages at all. But those in the Middle East are pouring
over pages. Like I was able to track one guy who went through and read almost 60 articles
that we'd written. Nothing that had anything to do with each other, just reading articles.
That's fascinating.
Yeah, I was like, wow, I would have thought it would be, you know, where we have the most
people. That's where the most people are going to our FAQ. No, it's the inverse. The other
group really wants to know a lot. And they'll just sit there and read.
Wow. Do you feel like that speaks a little bit to like, learning culture in different
places in the world? Because I, you know, what you've just described is also the opposite of
what I would have thought. Like, it almost tells a story that you could have never imagined unless
you had that data, which I suppose, shows the strength of data. But you think it's a cultural,
like a learning culture difference? Or maybe, I don't know. What do you think? Any theories?
So I haven't got enough data to prove my hypothesis. But the best one I've come up with
is that if you know English as a second language or a third or fourth language,
it is easier for you to go and read it and be able to look up the words that you don't know
in English. Then it is for you to try and play with it and figure it out in a system that's
written in English. If you go on and try and mess with a new program and all the buttons are in
English, or in this case for us, let's say they're in Flemish and you don't speak Flemish. So you're
looking at going, okay, I don't know what that is. I might be able to figure that that means stop
because it's red. But this company has written articles about their program. And if you go sit
there and learn Flemish and try and translate as you go, you can learn it. That's the only thing
I've come up with so far, that and possibly that it's just a different culture that they are
accustomed to going and reading in order to understand. Whereas in the more Western cultures,
we have a quicker need to get the information. If I don't get it in a couple of clicks, I'm not
messing with it. I think you're onto something though with that theory because when you put it
in the perspective of flipping the coin and playing with a tool that's in a completely
different language, it sounds to me almost like learning what I'll call offline. So not in a live
environment so that you can sort of spend the time slowly understanding all of the concepts before
you dive into the actual, you know, nitty gritty of doing it. That would make a lot of sense to me
from the perspective of confidence, especially if it's a different language, right? You can wrap
your head around a whole lot of concepts and the whole thing before you sort of dive in and poke
around. So I think you're onto something there. One of the other big things we found out with
this was we started mapping what pages people are going to the most. And we found that on a monthly
basis, the most popular was one on how to connect to our hands-on labs. And I thought, well, why is
that? I mean, there are directions at every lab that tell you how to do it. Why do they need to
come read this? And I mean, and we're talking like a magnitude of difference. Like in December,
9,000 unique people and unique IP addresses went and read the article that we had written
in support on how to connect to hands-on labs. And the next closest thing was, it was like a
description, a comparison between what a cloud playground is and what cloud servers are. And
it went from 9,000 for connecting to like 3,000. So three times less.
Wow.
And I was like, that's huge. Why is that? And I go and look at how the interface was written.
So if you go to a lab, how the directions are written there are, if you are unfamiliar with
how to use things like say SSH or PuTTY, they're confusing. But you go to our article in the support
FAQ, and we've got like diagrams and pictures and a step-by-step walkthrough. And I was like,
well, that explains it. If you're brand new and you don't understand, and somebody is already
making a leap of logic for you saying, oh, you should know this before you start. Yeah, you're
going to go read another article on it. It's almost like the data is telling you a whole
bunch of stories. How could that not be helpful for you and your team to create better experiences
for the end user? It sounds like it allows you almost to empathize with the person on the other
end. Does that feel accurate?
I am a very numbers-driven, data-driven person, even though I didn't understand it until I had
the tools. And I started seeing parts of my personality really come out as I dug deeper
into stuff. And I was like, this is what I need to know. I have always wanted to understand,
but I didn't have the knowledge on how to collect data. And now I can sit here and go, okay,
I feel that it should be this way. Let me see if the logic backs it up. It makes a world of
difference, especially when you're talking about solving people's day-to-day problems,
if you can understand where they're coming from first and why they have the problem in the first
place. Because it is a flaw of working in support that eventually you get to, I wouldn't say a jaded
place, but more of a callous place. You've built up a reaction to seeing a similar question over
and over. So you just get to a point where like, okay, these people just don't know what they're
doing. Is it that they don't know what they're doing or did you not teach them? Where is the
real failing? Yeah. Interesting. I feel like the data that you're diving into is telling you a
story that's actually sort of leading you to some hints at human nature almost. So it's curious to
me those two worlds because the data-driven world, you know, usually is super technical and stuff
like that. But that's actually allowing you to see sort of the human element of it all,
which is fascinating. And like the example you just gave in those sort of calloused perspectives,
if you've spent that much time and support, I could see how seeing it from the other side and
just asking different questions with that data behind you would allow for quite a powerful
transformation in the approach that you take there. So that's really fascinating to me.
Okay. So you said you do photography. I would compare it to trying to explain shutter speed.
For you, I'm sure the idea of like, hey, if you leave the aperture open longer, yeah,
you're going to overexpose the film. That just seems logical to you. But to somebody who's never
messed with a camera and only knows if I click this button, it should do something, the idea
of aperture is a huge thing. I had no idea that the film stayed exposed and the lens stayed open
longer. And if you grew up with only digital cameras, that idea is completely lost.
It's a good example because, you know, often as professionals or people who've spent, you know,
countless hours on a certain technology or in this example on learning cameras and stuff, like
for me, I don't even consciously think about using my camera anymore. It just sort of happens
subconsciously. And the same is true of technology, right? Like for those of us who have spent years
doing deep dives and learning this and are curious about it, some of those simpler concepts can often
get lost because, you know, we're not beginners anymore. So in your position and your team's
position, having that, trying to maintain some sort of empathy for that beginner or someone
who's new to a platform, that sounds pretty essential almost. It's funny, the more we talk
about this, I think back to how I got started really diving into customer issues and the way
that they see problems. And I actually wrote a talk on it to try and put in words what I was
thinking. It was a bit tongue-in-cheek. It was called How to Train Your Customer. This is the
talk you gave at B-Sides in San Antonio, right? Yes. Were you there? I didn't, but I did get to
see it. So I got to appreciate that sort of tongue-in-cheek approach that you take. Oh,
yeah. No, I'm glad because now I don't have to like fully explain everything. You get some of
the reference points, but you do. You see, regardless of what problem they're bringing to you,
you'll see these marked approaches on how the problem is presented. You have people who will
just go, your site is slow. How do you know it's slow? What are you comparing it to? What does slow
mean? Yeah. All these questions that come up as a support person, they don't occur to the person
on the other side. They're just frustrated and they go, site is slow. I am mad. So you have to
train them in the way in which you respond. Now, if you do what every single support person has
done for years now and gone, you need to clear your cache and cookies, try resetting your router.
It's got to be your Wi-Fi. Those cookie cutter responses, people become numb to them. So they'll
start responding back. And that's what I noticed is that people will pay attention to troubleshooting
methods you use so that they can have validation that the problem is you. Well, what if you could
turn that around? What if, hey, by the way, I was troubleshooting your problem and here are the
tests I ran. I ran an S-trace on my own machine to see how fast things are. Here are my ping tests,
you know, whatever it was. And you show them those steps, would they start giving you that
data back? And we did a small test within our support team and found that on about 20% of the
time, they did. These repeat people that we found would start using these tests as if they were
trying to show us off, you know, show us up and go, ah, it's still you. Look, I did it this time.
I did these tests. I'm like, cool. So this does work. We can start training people to give us
better data. What I gather from that story is almost that support, or at least good support,
is sort of a team effort between you and the person, you know, with the complaint or the
support issue. And though they may not see it that way, you have to try to convince them somehow,
maybe with a few different types of approaches that that's actually the case because everyone
wants a positive outcome, right? But it sounds like there's, depending on the person and the
issue, there's a whole bunch of different ways to achieve that. Yeah. I mean, you're always going to
have people who just want something for free. Those people exist. That's a real thing. Okay.
But the way people view support as being cookie cutter in their responses,
support has become cookie cutter in the way they view the people coming in. They assume
everybody's out for something free. Well, they're not. But they don't know how else to get your
attention if they don't go for the grandiose because we've become numb. We've become this
self-insulating group who are like, we've got to protect ourselves because you don't know how hard
it is to do this day in and day out. You're right. But you kind of did it to yourself too.
And the only way to fix it is to change your behavior so they learn how to behave differently.
And then we can all start getting along. A weird hippy thought.
I like it. I like it. How do you think that support fits into sort of the greater
tech realm? Because you've got engineers, you've got coders, you've got all that,
so many different types of professions in there. But for you, how do you feel like support fits in?
I see support in a unique way. I tell everyone on my team, if I see you on my team
after three years, you better be taking my job because this should totally be just the stepping
stone. This should not be where you end. And that I think is what has really hurt support in the
long run. There are some people who are genuinely good at it and they love doing it. But for the
most part, it should be the stepping stone into something larger in tech. It should be that entry
level job. Nobody wants to be the front desk guy forever. And if they do, you know it by the way
that they come to work and they just glow and they're happy because they found the job for them.
But how many support people do you see that look like they're dead on the inside?
And it's because there is a lifespan, a shelf life for support, and it's about two to five years.
So I tell them after three years, if you're not gunning for my job, you need to go. You don't
belong here anymore. You should have grown and I failed you somewhere. I want everyone on my
support team to feel like they have a path somewhere. If it's in development or, hey,
you know what? I just really liked the company, but I didn't have the skills to work in marketing yet.
So I took what I could get. Cool. Let's get you working on how marketing works. I don't know
anything about it, but let's go find out together. I really like that approach. I would imagine as
well for anyone who's sort of aiming a little higher into marketing, for instance, to continue
that example, I would imagine being in support gives you a connection to the end user and an
understanding of the end user and of the product that maybe you don't necessarily get elsewhere.
And I could see how that might be valuable in the long, long run. Yeah, I see support should always
be the megaphone for the company so that they speak for the customer or the student or, you know,
the client. Their job is really to go, hey, we have a problem here. What team do I have to reach
out to? Okay, I need engineering. Engineering, please understand this part of the site is broken,
and we have this many people who are upset about it. Or, hey, marketing, you sent out this email
and there were five misspellings in it, and we've got a bunch of tickets where people are upset
because you can't spell the company name right or whatever it is.
I really like all of those perspectives. So it sounds like you're the right person for being
where you are right now. That sounds pretty good. One thing that I wanted to mention quickly on that
topic is, I read recently how Toby Lutke, who is the Shopify CEO, I think a few times a week,
just like sits down and takes a few support tickets, which I found fascinating. And I think
it's, which I found fascinating because it gives you, you know, of course, he built that business
from the ground up. So he's gotten that connection with users previously, but he's continued that
throughout. It sounds like having an understanding of sort of the entire scope of an organization,
at least just a little bit, sounds like it's really informative for everybody.
We have a small lapse in time from my overnight guys to my morning guys. It's about four hours. So
when I get in in the morning, the first thing I do is I go through the tickets that have not been
sorted yet. And it gives me kind of an idea of what were they seeing last night and what can I
expect to see this morning and keep a pulse of what is going on with the day-to-day business.
Inevitably gives you some perspective on how everything's going, I would imagine.
There have been a lot of, not issues, but like events that we were able to see ahead of time
because I was like, all right, you know, I'm sorting this and I've seen the same issue six
times. And since I'm not working the issues, I'm not getting the lapse between, I'm just going,
okay, this belongs here, that belongs there. You know, I get more of a digest effect. I can go,
okay, hey, we've got, you know, in a four hour block of time, eight tickets about this one thing,
what's going on there. And I can start diverting my energy there to start the day.
You mentioned a kitchen experience for almost 20 years. I wanted to ask you a little bit about that.
I have often been fascinated about sort of the internal workings of kitchens and have read about
it a bunch, but haven't actually had that experience. But I'm curious how for you,
are there some skills from that kitchen experience that translated to this new fast paced environment
you're in now? Yes. There are a couple of things. One, I don't get the nervousness, the fear
that people have in dealing with other people. Oh my, these people might be upset with me. No,
I'm sorry. Once somebody's like held knives to you and there's fire around you and hot oil and I
could die, the dude from accounting is not going to bother me. But the other thing, the biggest part
of it was I got, when I got to Linux Academy, pretty much got to build the support team from
the ground up and we got to put it together the way we wanted to see it. And I decided I was going
to go with the kitchen brigade style. And in that, everybody who comes in starts at the bottom.
No matter what, you start as a dishwasher or a fry cook and you work your way through the kitchen
until you get to a higher level. Nobody gets hired and you know, I'm not going to go pick up
a saute cook. I'm going to move my grill guy over and I'm going to move my fry guy to grill
and I'm going to move my dishwasher over to fry and I'm going to hire a new dishwasher.
That way, at any point in time, if one member of that chain falls out from below, like say the
dishwasher calls in sick, every single person on that team has washed dishes and they know what it
takes and they can pitch in and do it. There won't be that ego of, oh, that's beneath me. I got hired
to do saute. No, you didn't. You got hired to do dish. You just got lucky enough to work your way
up to saute. Wow. I can certainly see the advantage to that. Now it's an investment, right? That takes
time to move people through all those stations. It does take time. And when you very, at the very
beginning, it is the hardest because what happens is most cooks, most chefs will bring an already
built team. So they've been going through this time and time again. So they'll bring a team with
them from the last place they worked and go, okay, I know you went through the same thing I did. You
understand this. I don't have to reteach you. But everybody new has to go through that.
It sounds as well like a part of it is accepting that the team is in constant flux. Like everyone
is constantly growing and everything is constantly changing and the people in the positions are
constantly sort of rotating. So I could see how that would be helpful as well because we tend to
want to think in sort of binaries or black and whites and simplify things like, okay, this person
in HR is always going to be the person in HR, but that's just not the reality of life. And I would
imagine that kitchen experience or at least that system to work on that really pays back in many,
many ways. Yeah, it makes everything very dynamic, but it also, I firmly believe that if you really
understand something, you can teach it. So it ensures that, hey, you want to move up, you're
going to have to train the guy beneath you so he can take your spot. So you have to be able to teach
them what it is you do daily. And the guy above you, the place you want to go, he's going to teach
you that. And everybody's wanting to do that because that's how they get out of the spot
they're in. That's so awesome. I had never really gained that insight into how kitchens work. Like
I kind of gathered that there's a progression, but it seemed to me almost like your standard
corporate progression where it's just like, oh, I'm going to get the next thing. But it sounds
like the whole team supporting each other in this kind of pass it on approach. That sounds
super powerful. It's funny. Kitchens can be the most vulgar, most offensive, ugly thing on the
face of it. But deep down, everybody in there, the reason why they get like that is everybody in
there knows it's going to be high stress. There isn't going to be a point in time where, all right,
dude, we're all going to just hang out and watch YouTube together. No, we are all going to be
working. We're going to be sweating. The conditions are crap. They just suck. It's hot. There's not a
day that goes by where it's going to be cool in the kitchen. It's going to be 110. And the guy
next to you on either side of you has weaponry that he brings with him daily that he sharpens.
And you need to make sure everybody agrees, everybody gets along. We may not like each other
outside of work. But when we're at work, we're here to work and we all love each other. It's a
weird dichotomy that exists.
And you're all pointed in the same direction, right? You have no choice. So this well oiled
machine that is a kitchen needs to be that way. I would imagine that the stress is almost required
to have it be at its most efficient. And everybody sort of plays an essential role from the bottom
right to the top.
Yeah, the hardest part for me, really, when I got into a corporate environment was I've become so
accustomed to conflict resolution, starting and ending in about 30 seconds. I just turn to the
guy next to me and tell him, you suck, and you either need to go home or pick up the pace. His
feelings aren't hurt. He just knows he has two options right now. He can work and get paid or he
can go home. But I can't turn to the guy next to me or in the cubicle next to me and go, dude, you
suck. Can you do your job or not? Because then he starts crying or he runs off to HR and I'm in
trouble. But that conflict resolution in the kitchen is necessary because if we have to stop
and talk about our feelings, everything in the kitchen comes to a standstill. And now what was
a well-oiled machine that was cranking out 200 plates a night is now pushing nothing out of the
kitchen. It's all stopped.
It's from 100 to zero. There's not really much in between, is there?
No. It's why it appears like a very coarse and pirate brigade is what I hear a lot. It looks
like a bunch of pirates on a ship. But it's because they don't have a choice. They don't have
time to consider feelings. Now, that was the kitchen experience I grew up with. I've heard
that lately it's changed and there has been a surge of a more calm and almost zen-like approach
to kitchen running. I don't know how that would look because I can't imagine it. It just never
was a thing for me. I would be more comfortable with Gordon Ramsay yelling and throwing my plates
on the floor than I would be if some guy looked at me and goes, this one just isn't right. I would
like you to try again. I'd be frightened by that guy. That guy would scare me because I'm waiting
for him to explode.
Or because maybe you can't trust what he's saying. Like, is that really what he's feeling? And where's
the sense of urgency or severity at the mistake? Mistakes in that sort of high-stress environment
are almost completely unacceptable because it changes the entire dynamic, doesn't it?
But yeah, it definitely led me to, when I got here, when I got into tech, everybody's like,
wow, how do you handle all the stress and all this? I'm like, nobody's yelling at me today.
This is a cakewalk.
This is a cakewalk. I don't know what to tell you. This is calm. I actually started developing an
issue where I got so accustomed to background noise, I would have to turn things on so that
there'd just be random noise. Not in that sense like people have a show going. I want construction
equipment somewhere, banging pots and stuff.
Is there such a thing as a white noise from a kitchen that you can turn on and tune out the
world? Maybe it's a market opportunity.
I would say just as a slight aside for anybody who's interested in reading up on that
kind of kitchen experience, I have two recommendations. And maybe you can add to
these if you've done that kind of reading. But I just came across randomly a book called Heat
by Bill Buford. And he, so you know it, he describes his experience sort of learning
the kitchen from the likes of Mario Batali and going to Italy and doing a bunch of crazy stuff.
So that book is very entertaining. I would imagine for someone in the kitchen, as well as someone
outside of a professional kitchen, you know, I've never really had tiny experiences, but that book
was fascinating to me, and totally agrees with everything you just said. And I guess anything,
you know, Anthony Bourdain is pretty well known for his kitchen confidentials and stuff. So
those are two fascinating reads.
Everybody I know when that came out was like, all right, who is this guy? Because this is spot on,
you know, it was almost like he was explaining our lives to us. And if you haven't read it,
Medium Raw is also really good by him.
Oh, what's that like?
It's more of what happens when you become a hack, when you become me now, you know, hey, you used
to work in a kitchen, and all you do is talk about it. You're not really a cook anymore. You're not
one of us. Very odd feeling. You know, I'll go out with my girlfriend, we'll go to restaurants,
and I try and identify with the waitstaff and the bartenders and the cooks, and they can tell I know
what I'm talking about, but they also know I'm not one of them anymore. And it's, do you do,
it's like, you start to feel like a fraud in what used to be your own home.
I suppose it's a change of identity in some ways.
Oh, my fingers used to be like black with soot underneath them and burnt and calluses. And now
I'm like, I don't know when I last got a manicure.
The things we put ourselves through.
I have been beaten. I've been bloodied. I've been burnt. And now I'm like, oh, I really should
change clothes or something. You know, the weird things that crossed my mind now when at the time
it was like, okay, I need to put cornstarch underneath my arm so I can stop the sweating.
Do you feel like, you know, you're still getting beat and burnt and all of that, but just in more
of a sort of a mental capacity instead of that physical stuff? Like, has it just transformed,
or is it gone completely?
It has transformed, but it's taken me a while to get used to it. The thing about being in the
restaurant is a lot of the beatings were upfront in your face. You knew what was coming. There was
no power play. There was no backstabbing, because if somebody was a backstabber, everybody called
them out. Everybody knew. While there are politics in the kitchen, it's more like watching, I can't
remember what they're called, in the UK, basically their version of senators and congressmen, where
they're all out there just making fun of each other open. Whereas I get into a corporate setting
here, and it reminds me of US politics, where everybody says nice things about each other,
even though they hate each other. I'm like, uh-uh, you don't like me, you don't like me,
you can tell me that. You're not going to hurt my feelings.
Interesting. It's like clear direct communication versus sort of hiding the stuff between the
lines.
Yeah. It's like everybody's afraid to have an emotion because that makes them weak. I'm like,
no, no, no, no, no. You've got to get beyond letting the emotion control you, and you just
control your emotions. You go, hey, look, I'm angry at you because you did this, this, and this.
Then when you've gotten that off your chest, you get to stop being angry. It's like people
don't know how to shut that off, I guess.
Maybe it results problems a little faster, too.
How did you ever switch from the kitchen into what you're doing now? Those seem, on the
surface, like very different things, despite the similarities and how one is really a gift
to the other, but how did that transition ever happen for you?
Taking a step back. I got to a point where my knees hurt, my back hurt. I was doing 18-hour
days, and I was exhausted. I started looking around. I was like, I'm not going to be Anthony
Bourdain. I'm not going to be Jamie Oliver. I'm not going on Food Network, and it doesn't
look like I'm going to get my own restaurant anytime soon. So, am I ready to do this for
another 20, 30 years, working on the line, possibly running a kitchen, but never running
the restaurant? And I decided I didn't want to do it. It just became that simple of like,
I don't want to do this. I didn't have a college degree. I have a high school diploma, and
that's it. So, I was talking with a friend, and he said, well, you ought to take a shot
at Linux. Why? I don't know. I know how to use a computer. He's like, yeah, you know
more than most people. You can turn it on. It's a really low bar to set. He's like, and
you can read. So, here, and he gave me this like tome of a book. It was a thousand-page
book called the Linux Bible.
It sounds appropriate as a first one.
Yeah, that's what he gave me. He's like, here, take this. Go and learn it. Where do I start?
He's like, start on page one and read through the book. Okay. So, I start out with that,
and then there was a group here in San Antonio called the Open Cloud Academy who were doing,
it was like a 10-week bootcamp where you go through, you learn the basic LAMP stack, Linux,
Apache, MySQL, or MySQL, depending on your preference, and PHP. At the end of it, really,
when I look back, I'm like, wow, of all the things I've learned, that should have taken
me like three days, not 10 weeks. But knowing very little, it was great because I got to
meet people and interact. And at the end of it, we were told everybody who goes through
the program and you had to pay for it. That's the other big thing. It did cost money. So, it wasn't
free. So, you really wanted to apply yourself. But at the end of it, everybody would be offered the
opportunity to interview with a major hosting company.
That's worth the money alone sometimes.
Yeah. And this is when my competitive brain kicks in because I'm like, okay, there's a class of 20.
The class who did this before us, there were 20 there. Five got hired. All right. So, I have a
one in four shot. I've got to figure out who are the 15 people I can beat. And it just became that.
I was like, all right, I'm going to push through. How do you outrun a lion? All you got to do is
be faster than the slowest guy. That was all I was going for. I don't want to be number 15.
I will take number 16. I'll be that high. That's fine. I'll be the dumbest one of the smart group,
but I'm getting hired. We get our RHCSA certification. So, the system admin.
And I go through the interview process and I find out it's probably two years later. So,
two years after getting hired, I run into some of the people who had interviewed me and they're like,
yeah, you weren't hired for your skill. You were hired because you were just weird enough
that we thought you'd be interesting to keep around. All right. I'll take it.
That's sort of a backhanded compliment, right?
And so from that, I was like, all right, you know, I did sysad work, sysadmin work for
two years. And then I went on to work in OpenStack deployments. So, converting
major companies data centers, their existing hardware into cloud servers. And I did that
for two years. And then just on a lark, I was like, you know, why not shoot for the big leagues?
Linux Academy is hiring. Let's see if they'd give me a job running their newly designed support
team. Oddly enough, I got picked up for about the same reason. We thought you were crazy enough to
build this. You can never really predict that kind of stuff. Like you had a friend who had enough
clarity and was generous enough to sort of hand you some pretty critical pieces of information
and some support at a time when, you know, it sounds like that really turned your life around
in a or at least switched directions. That took you to where you are here. How could you have ever
predicted that? But it's those people that come into our lives for small moments and give us,
you know, the Linux hint. And then we just get hooked from there.
And I wanted to ask you if you have an ask of our community, if you want them to go see something,
find something, learn about something and go try something. Is there anything you'd like to throw
out there? In general, if you have an issue, if you have a concern, if you have a problem,
don't sit on it. Talk, get it out there. The only way for people to help you solve the problem
is if they know you have one. That sounds pretty important. You got to raise your voice
before anybody even knows that you need some help. I would assume that fits both in the support realm
and the bug tracking realm, but also just in life in general.
Yeah. I mean, if you hear that somebody has a problem and they've raised a concern,
don't shut them out. You know, at least give it the time and energy to look at it and establish
where the actual problem exists. Because sometimes you might hear, oh, you know, the lights aren't
working. Was it the lights aren't working or there's no power or is there no power because
you didn't pay the bill? You know, run it down a bit, figure out where the real problem is. Don't
just start treating symptoms. So doing some investigation is, sounds like it's pretty
essential. Yes. Well, if you wanted to send people where they can say hi or that kind of thing,
where would you send people? You can find me on Twitter. I am at netchromancer, N E T,
chromancer, as in I revive dead connections. That sounds like a perfect place to send people.
Well, thank you so much for your time. It's been a real pleasure and I've loved all these topics. So
thanks for chatting and hopefully we get to meet in person. I know you've been at Linux Fest in
the past, so hope maybe you might be there this year. I don't know. Or otherwise we'll see each
other somewhere. Yeah, I'm all over the place. I'll in fact be, if anybody's out there, going to
B-Sides Bryan College Station coming up in a couple of weeks and I'll be out at Scale in March
as well. Nice. So people can find you there. That's great. Well, thank you so much again and
thanks for your time.
