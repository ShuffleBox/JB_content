You ready? You ready? Here we go. I'm going to spin the wheel of topics for the live stream.
Hello, if you're watching. We are just hanging out here on a Tuesday, because we're not doing
LEP today, and so we're just hanging out with everybody. We have a Jitsi room open and our
mumble room is open if you'd like to hang out in the On Air channel with us. And Takalak
liked the orange one. He's just joined the mumble room. Hello, the orange one. How are you?
Hello. Hello. It's orange today, it's lovely. Yes, so we're going to spin the wheel of topics
and it is open to discussion for everyone. Here we go. And the winner is... The Ubuntu
Wag Remix. What is this? Well, we got a piece of feedback, I think it was two weeks ago,
someone saying, hey, have you guys heard about this? Have you played with it? Do you know what's
going on with it? As far as I understand, there's a bunch of sort of web sites. Web
Remix. Yes, there's a typo in there. Web Remix. Yes, I am familiar with this a little bit.
And I just know it slightly and have dabbled in reading sort of the headlines on it. But
I think it would be interesting to dive in and see what it's all about. It sounds like
there's a small niche of people that are that are really getting around it. I know there's
some websites that are trying to tie into this, too, but that's the end basically of
my knowledge in it. Hmm. Hmm. Yeah. So it's got a fancy, it's got kind of a fancy look
to it. It's trying to find the name of the person who created it. But it's kind of you
could think of it as like an alternative to Chrome OS, I suppose. I think I have a screen
cap so I can put it up on the... Yeah, there we go. This is a nine to five Linux article
here. And you can kind of see it's got some some serious kind of it's like I guess it's
going on. It looks like GNOME Shell to me. From what I understand, the underpinning is
a bunch of web apps, right? Seems so. Yeah. Seems that's their deal. But they're sort
of as far as I understand, optimized to be used in this way. I could definitely see it
being appealing on a Chrome OS style machine. You know what I mean? I can see that. I was
just looking at their they got a they got a pretty simple website. Check this out. It's
at Ubuntu dash web dot org. And this is it. That's it. And this is like certified canonical
stuff, right? I don't know about that. No, I don't think so. Well, would they let them
use the name? Well, let's see. Would you want to be the company that goes around playing
whack-a-mole with haven't they done that in the past? I thought I think they're hoping.
So basically, I think the way it kind of I don't know for sure. But I think unofficially
the way it kind of works is if you're working towards becoming an official flavor. I don't
think they're going to raise this thing. I see. OK. But if you are out there popping
off and, you know, calling shuttle worth a bully or something like that, then they might
have a problem with it. So here's a little video of their it's like micros. Look, they
got a little button there to install the office three city five. You know, it's funny they
show that first. Well, it's it does make a point, doesn't it? It does make a point. And
then I guess they must add it to the launcher. Yeah. So now there it is in the launcher,
which is slightly cut off on the stream version. And I kind of I actually think that's a pretty
good demo, really. I don't really, for me personally, want this. Well, what's the use
case here? Well, low, low operating devices like low spec devices. Yeah. Or even older
laptops. I mean, if you think in terms of like it is, it is my wife's workload. Web
apps are probably 90 percent of what she does use. Right. So for people that maybe do that.
Like I hate Web apps, so I minimize I minimize my usage as much as possible. Yeah. I don't
know, but I think it's a great project for that kind of use case since probably more
users like that than like you. Right. But I thought at least it would be interesting
to know it exists, wrap our head around a little bit and maybe have a look every six
months. Sure. Yeah, we should definitely check in. So Sab's asking in the chat room if we
have any thoughts on a product manager and hiring a gaming product manager. I think it's
a really interesting sign from Canonical. Yeah, we did talk about it briefly, I think
in the pre-show. Was it the pre-show of last year's Unplugged on Sunday? Yeah. Yeah. Yeah.
And we've been talking about it since a little bit. And I don't know, I wonder if it's like
the description itself seems a little bit like it's written by two different departments.
Yeah. And so I wonder if it's a small pilot project that they're doing to try to maybe.
My first reaction was like an OEM partner probably wants to ship a gaming laptop or
something. That makes sense. But how long would they be willing to wait for Canonical
to put their stuff together? They will wait sometimes. Hello, MiniMac. No, we're not recording.
We were just sort of since we're live, we're just riffing. We went in the on air channel,
but yeah. Can we join? Yeah. The other ones are in the lobby. Sure. Okay. Sure. So we
will. All right. Oh, do they usually sit in the lobby then? Yeah. Yeah. For the for the
upload. Yeah. Okay. Hey. Hello. Hello. Hi guys. Hi. So Brent made us a wheel of topics.
We were just kind of going through and talking about like a wheel of fortune style, prices
right style wheel that you spin. And you can send in your suggestions for other things
to do. Oh yeah. Does anybody want to add a that's a great idea. Anybody have a suggestion
for the topic, the wheel of topics? We should have put the gaming one on there. Oh, I heard
a bling. What was that? That's somebody in the thing with the that's always got it. Whenever
there's a sound, it's always gypsy that you can count on for sure. All right. So anybody
in the chat room or even the number of them have a topic. Let's add it to the wheel. Yeah.
I had my first experience with pipe over now. I just added by bio to my Ubuntu installations
and all in all, I'm really happy. And I, as others suggested when it comes to Bluetooth
connections with headsets, a paper is a huge, huge improvement. You can't imagine it's really
good. Some quality is better and connection problems are gone. So really good. Really
good. I think that right there is the reason it did so well in the taxis is a lot of people
are doing virtual meetings now. And, uh, my co-host Mike from Koda radio had, uh, had
a sales call where he had it got, he, you know, and he's using pulse audio and it disconnected
his Bluetooth headset in the middle of the sales call. And he's like, that's it. I'm
not using this ever again. I will only use the Mac for my sales calls. That's very embarrassing,
isn't it? Yeah. Um, but there is one thing. So if I go to Cody, I have somehow wonky sound.
So, uh, well, not that it is, um, stable, but it is like, Whoa, it's really wonky for
some reason. I don't know if it is the PVR plugin I use or didn't have extensive testing
now with movies I have on Cody because it was at the second residence. I will do some
tests here, but that's the only major flaw I see because Cody is a software that I use
daily here. And if I have that problem also here in my, I will stay in post audio in fact.
So here's what I've done is, uh, I've added things that Linux does great and things that
Linux sucks at that to the topic. Oh, I like this. Yes. So we'll have to talk about this
is like the daily conversation around here. Yeah. You got any other, uh, any other suggestions?
Any other suggest I, you know, I haven't, I haven't tried, uh, I haven't tried pipe
wire yet. And I wonder for those listening and myself included, what would be the easiest
way to kind of jump in and play with it without necessarily committing, um, fedora. Ah, of
course. What I can tell you, if you have open to LTS or even recent open to stare is some
three step procedure where you can in fact, install Piper along with pulse audio. And
then it's like two, three command where you can switch back to post audio. It's basically
you install the components and then you turn off post audio with system CTL and mask the
post audio driver. And then you enable and load the pipe driver and that's all. So you
can switch with three commands and then you're back.
It sounds like you can even just script that into an on off button. Oh, sure.
Uh, yeah, basically yes. But I, the thing is that you have system components that are
loaded during boot and then you have to use the sessions. So it could be that you have
to log in, log out to make the pipe hour session or the policy was a post audio session booking.
I don't know if, if just a post audio dash K does work or if there is something similar
for pipeline, you know, pulse dash K is one of the best ways for me to get a Barry White
going on.
Uh, so I managed to get the video feed piped into the gypsy room. So that's cool.
I'm fascinated by how it's backwards for us.
Yeah. You know why is because people are so used to looking in mirrors. It throws them
off. It's the selfie look. So they flip it around. So that way our little human brains
can deal with it. But when you're displaying texts, it sure is strange for us. But yeah,
so if you go in the gypsy room, you can hang out there too. If we're having problems with
mumble again and I'll have the video feed. So we've got, I put, I was just putting the
wheel of topics up. Should I give it a spin?
Yeah, I think she should go for it.
All right, here we go. Let's see what we're going to talk about. The wheel of topics.
Feel free to submit one, giving it a spin now. All right. And we have landed on things.
Linux does great. And I'll now remove that from the list of possibilities and we'll spin
it again here in a moment. But things. Linux does great. You want to start? I got a few.
I have a trolly answer for you. All right. What is it combined? Use lots of power around
the world. Oh, all the cloud servers. Oh gosh. Yeah, we better ban that Linux. Right. It's
using too much power. You know, I really, I still to this day just love that you can
pick a Linux where you can have something that's just super quick to install or you
can have something that lets you define if a firewall launches and if you have SSH and
you have all these kind of little configuration options you can do. And I find that nice because
I do want to set all those things. And I like that there's distributions that give me that
choice. So I think we do really well at that. And then the other thing I think we're particularly
good at, in fact, I think we're way better than any of the commercial operating systems
at is we are willing to revisit plumbing and rewrite it like like system D, like firewall
D, like pipewire, like Wayland, like all the new back end compositor stuff that the different
projects are having to write to support Wayland. Like we're willing to plumb that stuff again
and retrench where Windows just builds on top of legacy code in that anti code base
and layers and layers and layers and layers over it and builds simultaneous subsystems
and all kinds of just crazy wonky ass legacy spaghetti code. And while we're not immune
from it, I think we're way better about addressing that than Windows and also the Mac OS.
I think that might be a subtle weakness only in that it's up to us to stay current all
the time. Sure. I wonder if there's a lifelong if you're an AWS customer or you're consuming
rail and deploying it every five, six, seven years. It's not that bad, right? It's more
like if you're sitting in the position where we're at. Yeah, I suppose we have a unique
kind of look on this to strap in. Anybody in the mumble room have something that Linux
is better at than all the other platforms? Well, yeah, no kidding, right? Yeah, I would
throw in as a user updates, upgrades and migration procedures. Right. I mean, we are really strong
with that. I mean, I just migrated a system and I can have a package lists and my repository
keys, copy them over and then do an installation procedure. And in like five minutes, I find
myself with the same system I have on the other side, just read a few commands and procedures
normally, normally the same. So keep on also keeping your system clean. I mean, yeah, DNF
and apps are really cool now with auto removing packages that are not needed anymore and everything.
So to maintain the system when it comes to packages and software, I mean, we are far
better than than at least Windows. I have no clue for my for my for Max. I feel like
it's better. I feel like, you know, I have this neon install that's like from twenty
eighteen and it's still it runs just as good as it did the day I installed it. And same
with my arch box upstairs. It's from like twenty eighteen, twenty seventeen. And I don't
feel like it has like registry creep or anything like that. It still runs really good. Also
a mini Mac, just kind of doubling down on what you said from like a desktop standpoint.
I know I mentioned this just recently, but. When you boot up Windows or Mac, if you haven't
used it for like a week plus, man, you just get slammed with all these background processes
that are like checking for X and updating Y and indexing this, and it's just like a
shit show on your machine, especially the Mac, like the Mac has gotten really bad about
this because there's cloud photo stuff they got to do. And, you know, it's just gotten
really bad on Linux. Like, worst case, you boot up a desktop that you haven't used in
a week plus and it for forty five seconds is going to update the package cache. I disagree.
Yeah, I have recently run into a bunch of times when. So I have a. I have pretty bad
Internet from modern standards at my place, so I notice these things. It's sort of like
when you're in the RV. Are you implying that I don't? Well, I'm implying that sometimes
when I'm in the RV with you, we don't. Yeah, I mean, there are times, but yeah. OK, go
ahead. And so I've noticed a trend towards the same thing that Mac and Windows are doing.
So if you look at unattended package upgrades, those are enabled by default. Oh, you're using
snaps. Yeah, no, not only on snaps, apt as well has unattended stuff going on, at least
on. Yeah, but not on any of my systems. That is that is combined with the software manager
package. And you can disable that. I know you can disable this, but I'm suggesting that
it's what I would say beyond that. But I would say beyond that, though, I guess I still consider
that not even really comparable because the difference there is it's it's like a unified
update mechanism versus every app you've ever installed has its own built in updater. Fair
enough. And that's just madness because there's no coordination. Like they're all competing
for resources at the same time. Right. So you're right. You do have more automatic updates,
especially with snaps and snaps is a separate process. But like say you're on the flat pack
GNOME software train. Right. That's all just getting updated by GNOME software or or the
command line. That seems better to me. You could update flat back separately and stuff.
But you're right. We do have more, especially with snaps and flat packs, more automatic
updates. But I don't mean any of my systems auto update just because of bandwidth. I have
to turn all that on. What I can tell you, I have a dual boot system on my laptop where
from like every month or so I boot up Windows 10 and there I have my hard drive spinning
for without acceleration for like 20 or 30 minutes and I'm doing nothing. I'm just watching
the blinking led of my hard drive spinning and I have no clue. I have no clue what that
thing is doing because I have no information at all. I have nothing. It's just spinning
and just blinking. And even though if you have to automatic the unattended upgrade running
on Ubuntu, that takes like five minutes and then you get that pop up windows. We have
these updates and then it does the updates and then after let's say 10 minutes you're
done and then your system runs cool again and your van is not vanning like hell. And
so we are much better when it comes to that.
One of my most frustrating experiences that happens regularly unless you know you turn
it off is, you know, you're in the middle. Okay, you're setting up for a show, Chris.
You're doing all this research. You know, it's like two hours before you're putting
all the things together. You're just in a flow and you're setting everything up. Sure.
And all of a sudden Firefox says, oh, we can't load the pages anymore. You have to just reboot
to apply all of the updates we did in the background. That's a thing. It's a thing.
Oh, my God. I've run into that in a few on a few systems now and it drives me insane
because I'm the kind of person who just hyper focuses. So if it takes me a bit to get into
something, but once I'm in there, I could spend hours and I free. And you got it. You
also have to off ramp. Yeah. And but then it's like this. Bam. No more. That's sort
of that's what happened to me this morning. Oh, it's the worst. I didn't get an off ramp.
So you know what I'm talking about. What? No, I'm in the flow. I'm in the flow. No.
Yeah. No, I totally. Wow. I got to say, I have not hit that with Firefox, but I could
understand why because it's doing like some sort of update thing. And but why can't they
just let the with the worst case you get with Chrome is it just gives you a little badge
that says you need to restart the browser to get the update, but you don't have to restart.
That is better. I would want it to suggest that and not make it so that my browser that
I tend to have like a hundred. Is it not getting updated through app? Is it updating? Well,
I wonder if it's updating the and someone might know this more than I do, but I wonder
if it's updating all of the extensions. And because those have updated, they're kind of
in in this funny state now that, you know, when you load a new page, they're reaching
out the extensions. Like, isn't that something else, too? You can have applications that
are doing self updates in their components. That's what I mean. Yeah, it's getting a little
out of hand. It is. It is. And so you can turn that off. You know, you go about config
and turn it off. But the default is can we just mention this is another great reason
why it's nice not to have all of your damn applications in a web browser. Yeah, I'll
agree with that. Not to mention the overhead and CPU usage and memory usage and stuff.
OK, so last call. Does anybody have a like something Linux is great at compared to the
other OSes before we spin the wheel again? I think modularity. That's like, yeah, how
did that not come up? I feel like you just made it such a success, like in the marketplace
as you can use the computer. That's like a huge, huge aspect. It seems maybe in hardware
for sure. What was that one? Lower, lower and lower in hardware. Oh, yeah, sure. Yeah,
right. It is great for breathing life. Just look at the pie. Has anyone tried to run windows
on a pie? Well, nobody does it, right? Because it's so awful. That's what I mean. Yeah. If
I can say something, it's great for music. All right. I think it's great for podcast
production, so I'll I'll get behind that. You mean for music production? Yeah, for music
production, because because I've got like I'm using Ubuntu and running Bitwig and a
host of other applications and through the jack through this jack subsystem for audio,
we all work nicely together. Yeah. Yeah. What we can do with Jack and our mixer is unbelievable.
It's nice. It's like this mixer is just an extension of our Linux box. It's incredible.
And if this mixer ever died, I just buy another one, even though it's years old now. I just
buy an exact replacement because it's just it's wild that I can I can I can route the
audio in and outs in the mixer using Jack. I can wire my mixer using Jack. And it's just
and then the fact that Reaper also natively speaks, Jack. So any of the inputs and outputs
we create in Jack show up as audio inputs and outputs in Reaper. It's just you couldn't
even do it on other. It's what you were wishing about. Yeah. You just couldn't even do it
on a Mac or on Windows. Did you have this mixer before talking about mixers? I find
the mixer of our door. Oh, yeah. OK. Yes, I bet. I bet. I've heard it's really great
for music. Yeah. I've never really given a proper spin, but I should. All right. You
know what time it is, then we have the Behringer X 32, but Behringer makes a whole line. So
if you don't need something as big as the X 32, you could like they have a 12 and eight,
I think, which this is the amount of inputs. All right. Let's spin the wheel. Oh, almost
went to Brent Stocker, right? But we have to. So this originated from another piece
of feedback that we got saying, hey, I think it might be really interesting to dive into
cubes. And I many years ago read about cubes and the calories and stuff when I was getting
interested in that. And I sort of forget what it does. So can anybody like refresh me on
that? I'll give you a super high level because I've used it like a grand total of twice.
So that's more than me. I'm no expert, but it is designed for the very super security
paranoid to isolate different applications and aspects of your desktop into their own
dedicated VMs. And then cubes tries to make that all usable. So like Firefox would have
its own VM and just total machine isolation. So you don't have to worry about, you know,
people stealing your data's. We should go look at their what their description is on
their website. I don't know. Is anybody in the mumble room giving cubes a proper or Jitsi
given cubes a proper? You should show that to to the Jitsi room there. What's that? This?
Yeah, the cube site. Sure. Edwards Nodin says, if you're serious about security, cubes OS
is the best OS available today. It's what I use. Does he really? I want to go ask him.
So, yeah, they're using Zen underneath Fedora, Debian or Windows. I didn't know about Windows.
Oh, yeah. Windows VM. Sure. Sure. Didn't you say that about Tails? Yeah, he may have changed
his opinion. Maybe he uses both. All right. So what is cubes OS? Well, there's the diagram
for your brand. Oh, it's nice and simple. So you got an admin VM, you got your GUI VM
and then you got your template VM to launch different like built in distro options or
applications. Cubes OS is a free open source security oriented operating system for a single
user desktop. It leverages the Zen based virtualization to allow for the creation and management of
isolated compartments called cubes. So that's where the name comes from. Got it. Yeah. Cubes,
which are implemented as virtual machines, have specific purposes like a predefined
set of one of many isolated applications for like personal use or project use. Maybe you
need a specific network stack, something like that. It has what it calls natures. I don't
know about that. A full fledged stripped down virtual machine. Levels of trust from complete
to non-existent in terms of trust. All the windows from the applications or from the
VMs are displayed in the unified desktop environment with an unforgeable color coded window border.
So the different security levels are easily identified. Oh, that's kind of nice though.
That is nice. Yeah. You know, this is a dangerous one and then they have down here at the bottom
of the diagram, they have the different colors of trust. And so I wonder if there are default
levels of trust that cubes defines on these apps. For some reason, trust it more or less.
You can modify that default. I mean, imagine if you're like a Bitcoin billionaire, right?
You're probably going to be pretty careful every time you open up that wallet. Have you
heard of split GPG? Utilizes split GPG to keep your private keys safe. Yeah. Is it like
a split GPG? I wonder if it's a GPG wallet of sorts. I don't know. Let's go look. Split
GPG implements a concept similar to having a smart card with your private GPG keys. Oh,
that's cool. So it's like something you know, something you have kind of thing. It reminds
me of those little devices. You have one upstairs in the closet kind of buried in there. I think
the YubiKey kind of thing. Yeah, the YubiKey. This is software based, I take it. Yeah, I
guess so. Yeah, that's interesting. So it says here that the idea is that one not so
trusted domain, like, for example, one where Thunderbird is running, can delegate all of
its crypto operations, such as decryption or encryption and signing to another more
trusted network isolated domain. Are you following this? Trying. So Thunderbird, which is probably
a risky app, right? Because it connects to a bunch of different places. And you're downloading
emails that contain malicious URLs or whatever like that, right? So Thunderword's in your
work email VM. Then when you go to use it to do a GPG operation, like say sign an email,
which I wish we all did as a matter of practice to tell you the truth. Yeah. It will use this
split GPG system to actually conduct the signing and cryptographic operations in a separate
VM that is more isolated and more trusted, which from the color. Yeah, I could tell it's
trusted. They've even color coded the little diagram there. That is nice. That is nice.
Cool. I mean, that is really slick. You got to admit that's a pretty clever solution.
It sounds well thought out. Yeah. And I wonder, I can't, I'm getting interested in wondering
how this might be to run. I mean, this seems like your speed to be honest with you. Okay.
When I'm traveling, I just kind of like, right. I have a USB key and I run this, huh? Yeah.
Especially if you get a fast one, fast USB. Has anyone tried this? So I think it's too
much work. I think people worry it's too much work, but what they're attempting to do is,
is to make it built in and kind of work out of the box, right? That's the whole idea.
You could build this yourself. I'm imagine, but that would be an undertaking. I mean,
it's an amazing piece of engineering, but I think you have to be as smart as Edwardson
to really run it correctly. So I'll be just fine is what you're saying. Yeah. I wonder
if silver blue is a better in the, in, you know, middle ground maybe. I don't know. Mini
Mac asks a good question and that is how do the app updates work? Like do you update a
whole VM to get Thunderbird up to date? Like how does that? Yeah, that, that was my thing
because, uh, you talked about, uh, Brent talked about Firefox updating itself, which is a
security problem. Sure is. So are these VMs read only? So if you put that up, do you know
that the applications that no one can change in fact that VM and you only have a part of
your home directory where you have all your data or how does that work? I guess if you
got really nitty gritty, you could have almost like firewalls in each VM that only let through
trusted, uh, domains. This seems like an opportunity for you to like, you know, try this and let
us know, you know? Oh, I see. I see. I'm just saying I'd like to know. I remember when,
when it comes to security, the early Linux days, we sat, burn yourself a not big CD rom
and put that one over, you know, that there is no access to the applications. Nothing
can be changed on the operating system. Yeah. Good point. Yeah. The, uh, the good old days
in optics, you're gonna, you're gonna use quick MU right now to, to launch a cubes VM
and just try it out. Right. How deep down can we go? Right? Um, anyways, that's a topic
that I think is worth maybe it could be playing with. It's maybe more on the technical fun
side of things and less on the useful everyday. So things, but I think worth keeping Brent
visits cube OS land and we find out, should I go to Quebec to visit cubes from, from quick?
No, you didn't have to do that, right? No, it's, but I'm in Quebec city. All right. You
know what? Oh, you know what that music means? Wait, before spinning, do we have any other
suggestions? Oh yeah. Anything else we should add to the wheel? We can't let the wheel get
empty. Well, we could in the streams done, you know, like when they went, we'll run out.
There's incentive. The more you suggest the longer we're on. Yeah. If you've got an idea
for the wheel for a topic for us to discuss, it could be about anything I suppose. Yeah.
Um, and we're done. Yeah, there it is. Although hopefully there will be one day. All right.
We're going to spin it, but you can drop a, you can drop a suggestion in the chat room
or remember to see. Here we go. Here we go. Oh, oh, oh no. Okay. Bitcoin node set up.
So let's see, Jesus, the background deleting this one off this, right? So you can run your
own Bitcoin node. What, when, what that is, is basically it's like a transaction processor
and you can have, it's a great way to kind of bypass having to pay heavy fees, but it
also helps decentralize the Bitcoin network. But what I was coming across recently is a
really neat open source project called umbral, uh, and umbral, which is get umbral, get a,
which is spelled G E T U M B R E L dot com. Am I saying that right? Probably. It is both
a personal server deployment platform and a self hosted Bitcoin wallet and Bitcoin node.
So one of the things you can do is you install it. Uh, they distribute it as either a raspberry
pie image or a setup script that is pretty much really only usable on Ubuntu or Debian.
But when you get it set up, which is pretty easy and pretty quick, it creates a Docker
environment that is using nginx to do a proxy. And then inside that Docker environment, there's
the master image of umbral. And then it has an app store of open source free software
where you can install things like next cloud or photo prism or a bunch of really nice Bitcoin
uh, data exploit exploration tools because as a node, it actually maintains a copy of
the Bitcoin blockchain. And so you get to use some of the open source software to generate
interesting analytics and charts and your own data on that. It also allows you to install
things like, um, a wallet, a web wallet. So you could create family wallets on here. You
can generate reports from the blockchain. Uh, you can install pie hole home assistant.
It gives you access to all of that. And what it's doing in the background when you install
these quote unquote apps is it is deploying a container and it's managing that container
for you. So that's why you have to use their setup script and either use the raspberry
pie image or use it on like an Ubuntu or Debian box. I tried it on tumbleweed system and their
script just makes too many assumptions about a Debian system and doesn't work. But once
it's up and running, it's all basically engine X and Docker. What was impressive to me was
how it was linking all of those apps, right? Yeah. And it knew that you're running a node
and it was pulling the information from there. So it seemed really well integrated from what
we saw so far. Yeah. Everything is set up to use your own node as the source of truth
for information about the Bitcoin network. And that is really nice and fast too. And
they're all aware of like where its status is and stuff like that. But the other thing
that's neat is there's a series of cryptocurrency wallets out there that allow you to define
your own Bitcoin node too. So they'll use that for their transactions and whatnot. So
it lets you deploy like a handful of really common self-hosted applications like next
cloud with a handful of probably some of the best Bitcoin web based management tools. I
saw Home Assistant on there. Yep. Home Assistant is on there. Matrix is on there. Element is
on there. I don't think I saw a Bitwarden. Bitwarden I think is actually on there. I
think it might be. Yeah. It seems like it should be. So why do you think they decided
to build sort of a VM deployment platform on top and then... Container deployment platform.
Yeah. Okay. Fair enough. And also to focus on these applications instead of using something
that was already out there. Well, I think job one is to be a Bitcoin node, right? And
so that's where it started. And then they realized because their environment was basically
a series of containers that it'd be pretty easy to just pull in these other containers.
And they're just pulling in like the Home Assistant's projects. It's not like their
own... Fair enough. It's not that much work. Yeah. I mean, it's probably some for the integration,
but it's not a ton. And then the other thing it does is if you want, it connects to the
Tor network and gives you your Tor URL. So essentially you could leave it behind a NAT,
leave it behind a firewall, but still connect to it to see what's going on over Tor or over
your LAN. And then they monetize the project by selling this really nice looking little
all aluminum Umbral server with a little display on the front of it. And if I had stupid money,
I'd probably want one of these. Because I tell you, I decided to take a look at this
just this last couple of days and I'm very, very impressed by it. It's really a nice little
package they have. So I'm sure their little server would be pretty great too. Oh, look
at that too. You can get it in different colors. Nice. That's kind of neat. How about an orange
one? I'm having a hard time. Are those... Those are just kind of graphics, right? They're
not actually devices. Like it's not a photo. It's a graphic that they made. I can't quite...
Probably. It's hard to tell. But now that I walk up to it, I've got some, let's call
it photo investigational work for you. You ready? Sure. All right. So this was taken
on not a great camera. I am zoomed in quite a bit. I know. That's fine with me. But it
also has some artifacts that give it away. So I will point them out for you. Okay. Here
we go. So to the left. I gotta yell a bit because I don't have a microphone here. But
to the left, you see where my mouse is right here? This is a piece of dust on the sensor.
So they're using a DSLR. And there's another one just over here. See, it's like a smudge.
They didn't even bother to take that out. Total amateurs. Another one there. Another
one there. So... It's also like a little dirty spot on the... On the actual... Unit right
there under the umbrella. Yeah. Yeah, yeah, yeah. So it's a dirty camera. Dirty photo.
Very dirty photo. But it's a real device, I think. So that's kind of cool. I wouldn't
mind one of these if I was really into the whole, you know, like having a family wallet
and all that kind of stuff. I'd love a banana to figure out how big that thing is. It does
need a banana scale. I don't know. Sorry about the stream. I, you know... Things broke. I
guess I just... What happened? You seem all deflated now. I am because you can put so
much work into this kind of stuff and then just something else breaks later. So you get
one thing fixed and then something else completely... Isn't that the theme of the day? And I just
find a little deflating. Do you want to spin the wheel then? Yeah. I think that'd make
me feel better. I think a different topic. Okay. Things Linux sucks at. Hmm. Okay. Things
Linux sucks at. What do you think? What do you think Brent? I'm tempted to say cohesion.
Sure. Sure. Sure. Yeah. Yep. Consensus. Sucks at consensus. That's a difficult one though.
Yeah. Because it's also partly its strength. If there isn't consensus, a bunch of people
go out and try to solve the same problem in different ways. And in the end, I think we
end up with a better solution typically. Maybe not always. Yeah. It's a messier process.
Yeah. Right. But yeah, definitely. I don't know. Mumble room or jitzy room. Anybody have
a suggestion for things Linux sucks at? What does Linux suck at? Transitions. I've got
the Wayland session. It's just... True. It's getting there. But everything, if you compare
it to say Apple and all the file system, they make a decision and it just seems to just
go through basically your comments that you've had on the whole Apple stuff. Like when you
stop and you look at how long will it take before Mint is on Wayland and Pipewire? What's
that timeline going to look like? It's going to be a while. Do you have any predictions?
I think a couple of years minimum. Sucks at supporting fingerprint readers. That is often
a problem. On my ThinkPad, I'm happy to report on my ThinkPad X1, it has been very good now.
So it is getting better there. Also, you can suggest a topic for the wheel. We're getting
down to the final three topics. So if you want to put something on there to keep the
stream going, suggest in the chat room or in the jitzy mumble room. Things that Linux
sucks at. Things that Linux sucks at. Oh, oh, oh, oh, oh, this drives me crazy. Multiple
external monitors at different resolutions and refresh rates. Have we not figured this
out yet? It just stinks. Just stinks. Are there any distributions that are better at
this than others? No, there are window managers that are better at this. I just have to mention
enlightenment as always. I didn't see that coming. I didn't think you'd say that. Oh
man. Yeah. I just tested that one. I was at my second residence and they have a USB 2 monitor.
And then I have to connect that one. I need a little script to make it run. But with GNOME
three, it doesn't run at all with enlightenment. It just pop ups. It pops up a second screen
and you can configure it easily and it remembers your configuration. It just works. That does
sound nice. That does sound nice. I will have to eventually break down and give it a go.
Things that Linux sucks at things that Linux sucks at. Video editing. Okay, yeah, sure.
Go ahead. Deep learning on NVIDIA cards. Oh, interesting. I thought that was actually kind
of a big area. You just saying it's bad at it. Well, once you get the NVIDIA card working,
but then every update, you know, it just breaks. Right. Yeah. I feel like it's NVIDIA that's
the problem there. Yeah, right. Right. I mean, GPUs in general. Anything GPU with NVIDIA.
Yeah. I mean, that's a big point. Like, why? Why is it so terrible at GPUs? It's kind of
not our fault, maybe. Well, here's where we so here's where we get stuck a lot. I could
be wrong about this, but I think a lot of times it's there's a bigger ecosystem that's
pushing people to use these tooling and we're just not particularly good at it. Like CUDA
is an ecosystem. It is a whole frickin thing. It's one of NVIDIA's most, I think, savage
moves in the industry is really building out dependency on CUDA because CUDA only works
on NVIDIA cards. And so I think that's got to play a role. Right. If you don't if you
don't have first class CUDA support, then you're kind of SOL if your CUDA support is
fragile like the Mac has no CUDA support. And so you have entire industries that just
avoid buying Macs because of that. It's that kind of kind of an ecosystem. Well, I can
say something to that. I mean, I'm a software developer and I've done implemented CUDA numerous
times. The CUDA libraries per se on Linux work first class in any with any programming
language I've used. It's just the it's just the driver support and NVIDIA's policy on
pushing up, pushing updates which just break everything. That is frustrating, isn't it?
I just set up my son's laptop on Fedora over the weekend and then did an update and it
broke his NVIDIA driver and he had to leave and I just didn't get it working before he
got before he had to go. And so he has it. It's as a you know, a nice Ryzen integrated
GPU, so he's fine. But it's frustrating because it was working and then it broke there at
the end and I ran out of time to fix it. And I don't know, you know, and it's particularly
rough on Fedora because historically their NVIDIA GPU supports been bad. And so as a
result, there's 50 different ways and a thousand different guides on how you should install
the NVIDIA driver. And they are all very version specific. So and it's different with the later
versions and it is the older versions. But there's so much momentum on that stuff. So
that's maybe an area that Linux sucks at there is and that's something the Linus Tech Tips
videos touched on, too, is like. There's thousands of guides out there and most of them are no
longer applicable, but yet they're still relevant in Google search. And then there's also just
like tons of blogs and like distro rundowns and shootouts that are just nonsensical and
totally not based on reality. And that's a problem, too.
I have another one. Monetization.
Yep. That's definitely an issue which leads to developer burnout. It leads to people having
to get other work and it leads to our best talent getting basically sucked into large
corporations that can pay people. And then it's corporate controlled and centralized.
Not to mention how precarious it is to have these projects be on the brink of failure,
financial failure, and they're propping everything else up.
And think about how stressful that is on a person over five, 10, 15 years to live that
long in a financially precarious position, feeling like you have this community to support
and people using your software and a responsibility to that plus your name, but also at the same
time not getting enough to actually financially thrive and just to have to kind of barely
get by. It can be rough on a person and we don't have a solution for that and it keeps
biting us in the ass in sometimes really large ways like log4j and sometimes in really small
ways that we don't even really realize. It just sort of gets priced into the desktop.
Feels like every six months we see the same story come up just with a different project.
And mini Mac, of course, there's a classic area where Linux is weaker at.
Yeah, that's my general approach. So if people switch to Linux, the first thing they see
is that there are missing apps they have to adapt their workflow because they can't do
things like they're used to do it. But after time it becomes a strong part of Linux because
you can adapt your workflow exactly the way you want to do it because on the Windows normally
you just have some apps and you combine these apps for your workflow and then really working
over your workflow and adapting it to Linux becomes a strong part in the end and then
often you're faster and you're getting used to it and you don't want to go back. But it
takes some time. It takes some time. You really have to dig into it for the first month and
then you start smiling and you never stop smiling, right?
I wouldn't say that's necessarily a downside to the Linux ecosystem itself because let's
say you reverse things and you were on Linux and you got a new job and you had to move
to Windows, which has happened to me. It's just as painful. I would argue it's more painful
to try to find the things you need in that ecosystem.
Yeah, I was going to say that because I started using Windows for work after 10 years.
I'm sorry. I started using Windows for work after 10
years and it's really hard on me. I mean, you really need to work yourself again.
We need a Windows support group. You know, the dangerous thing about Windows
is I have to really reinforce this with Dylan whenever it goes into the Windows side of
his install. It's like you really need to be careful what you're downloading because
he goes to like download stuff from Minecraft and three out of the four links are scams.
It's a landmine everywhere. I forgot about that.
That's bad. So anyways, moving on. Now that we've come
complete circle and gotten back to what Linux is good at, let's spin the wheel again. I
added a last minute topic. Did you really?
Yeah. I hope this is the last one, but we'll see. It's why Linux will win at all at the
end, like 20 years down the road. Well, okay. When that comes up, I'll get right into it.
All right. So are we ready to spin it again? I feel ready.
Okay, here we go. I want to mention one thing. One overarching
theme is that Linux just sucks at running proprietary software in general. You're complaining
about people not being able to use certain applications or the Nvidia proprietary drivers
terrible that kind of seem to be the overarching theme is Linux isn't great at running proprietary
software. It's true, but that's not always true. Like
reapers running just fine. Yeah, some user land stuff. It's better in the user land.
The deeper into the stack it goes, the more trouble it causes. All right, here we go.
Oh, I'm going to spin it again. I want to save that one for the end. I want to end on
the day. Here we go. Here we go. Come on. Keep it going. Oh, you're looking at me like
why did we have this? No, no. I mean, I'm sure people have written in and asked, right?
Well, yes. And also it inspired me last time when we were talking flat packs and just to
hear I was William was his name. I forget now, but he was running. He's the software,
the head software guy at Endless. Do you remember we had an interview with him and he was saying,
oh, I'm running 174. Yep. Yep. I read a lot about Endless, but maybe like four years ago.
And it sounds like they've done some interesting technological choices to help them achieve
their goals. And it just got me interested. Like I didn't expect them to be so front of
the technology stack maybe is the way to put it. But it sounds like it's really working
for them. So I just got really curious into how far they've come in some of what they're
trying to do. And I've known some people who've known some people who've worked there and
I've said some really nice things. So I thought, hey, let's dig in. I know I've noticed in
like the GNOME and GTK commits that there's almost always several Endless staff, one or
two Endless members. That's good to know. Yeah. They're pretty active contributors.
Nice. They seem to get they seem to be getting fairly along fairly well with GNOME developers.
That's an achievement. Yep. And I've never really gone more than 15, maybe 20 minutes
with it. When they first came along, they were first very hardware focused. OK. And
now they've kind of pivoted to the software. And I think that's a good idea. When I first
interviewed them, they were actually really kind of pitching at schools and prisons. I
remember that. Yeah. But I kind of feel like now that they've now that they've had this
new focus for about a year, it's probably time for a revisit. But what I can't what
I can't suss out is if there's interest in the audience or not. I can't tell. I'm not
sure it's focused on us as an audience. And though I wondered, could it be focused on
some of our children, for instance? So I recommended to my co-host on Coder Radio, Mike, that he
was looking for a Linux OS for his kid. And I said, well, if you're not going to go with
the desktop OS that you use, you know, which is pop, then I think maybe you should consider
Endless. I'd say my first choice would be go deploy whatever OS you're comfortable using
and use the most often. And then my second would be something like Endless or another
OS that's that's really kind of curated like this. So I think it's it's another one like
along with cubes, we should really give it a go.
You know, I remember, I'm remembering now when I was looking up brunch guests, that
they now I don't want to get this too wrong, but I'm just gonna throw it out there. Maybe
we could someone can have a look. I remember that there was a project that was focused
on sharing coding experiences with kids, sometimes even toddlers. And it was connected to Endless.
Sure. Yeah, there's a bunch of tools that ships with like that. Yeah, I would imagine
there's a nice partnership there. And it makes a lot of sense because like one of the first
images they have on their website is a bunch of kids looking at a laptop. So that sort
of makes sense to me. Look at their download images here. Desktop computer, virtual machine,
Raspberry Pi, Pinebook Pro. That's what I mean. It seems like they're really tied into
what's going on. There's a Pinebook Pro behind you. We could put it on. Oh, hello. We should
try it. We should try it on the Pinebook Pro. All right. You know, it needs a good job.
Pinebook Pro is almost in that sweet spot for me, but not quite, you know. Any other
thoughts on Endless from anybody in the virtual lugs before we go? Virtual lugs? The thing
that might not make it great for children is that computing is really social for them.
That's true. I mean, you could put it on the Internet, right? You could get it. You're
thinking like applications or games? Applications and games. Like I moved in with my significant
other who has two kids. I'm like, oh, I'll switch the kids to Linux. And then I realized
all they do is play games that run terribly on Linux.
Yeah, yeah, yeah. And of course, like Microsoft's a big part of that. I mean, like Bedrock is
so you can you there. There was a way to get it running on Linux, but the maintainer of
the Flatpak for Bedrock Edition just bailed, just noped out. So that's gone now. They pulled
it from Flat Hub. What is it?
Well, I'm just browsing their website here while you're talking and I found some cool
stuff.
What is it?
You closed the website.
Oh, I did. I was going to move on.
They also have this experiment that is exactly what I was talking about called the Hack Computer.
And it's both building the hardware and the software. So they have it sounds like what
they call an endless key. Hack is included within the new endless key USB project. Offline
kids can plug in the key and they're ready to play hack. So hack, I think, is like a
gamified version of learning.
Is this what you're talking about?
I think it might be.
So hack is included in the endless key product. The complete hack experience now comes on
the new endless key USB. So offline kids can plug in and they're ready to play hack.
There's hack-computer or try-hack-computer.
That's where I'm at is I'm right now at hack-computer.com. What is hack?
Go to try.hack-computer.com.
Try, okay, what now?
Try dot and then just the URL you're at.
Try dot. So instead of www, try.hack-computer what? Then what?
Then just nothing.
Oh, okay. Of course. And survey says load. Oh, there it goes. What are these, NFTs?
How did you know?
What am I looking at?
I don't know. It says like pick a dimension to explore. And so just, I don't know, look
like you got processing, sidetrack, web tech, engineering, endless OS, terminal T.
I'm going to pick endless OS. Who we got there? Who is that? Who's coming in right now?
Is that Nancy?
It might have been hack-computer. This is too much, man. I'm already bored.
All right. Well, it's not targeted at you clearly. Oh, I see.
Hack laptop. The laptop that allows kids ages 10 plus to learn to code by hacking their
own device. A high-performance award-winning laptop. The hack utilizes a 14-inch ASUS
E4060MA laptop to deliver the world's only completely hackable computer. Note that this
computer must be purchased through the hack to access the hack experience.
Okay. This is more disappointing than I thought. It's just a bunch of links to a bunch of projects.
They make it look good though, right?
Well, they had me. They definitely had me.
I mean, they got a good look going. I think they're worth taking more seriously or spending
more time with.
Yeah, I agree.
I just haven't got a good strong sense of the audience's interest, but maybe they'll
let us know.
Any other EndlessOS thoughts before we spin the wheel?
Well, the EndlessKey, that is just a USB drive that you can plug in any computer.
That's what it looked like.
Yeah.
Yeah.
Yeah.
Yeah.
And play hack.
All right. Okay.
EndlessOS.org slash key.
I mean, it's a 128 gig USB drive and there's something there.
Hey, maybe it's high quality and it's branded.
It says high quality in the description. How'd you know?
Hell, I had a sense, man. I had a sense. All right. Just a few more topics on the Wheel
of Topics today and then our stream is going to be over.
So what are the options before you turn it?
Brent's Docker Jellyfin Beginnings.
Oh, here we go.
Cloud Virtual Desktops and why Linux will win it all in 20 years.
You ready?
This is going to be fun.
Spinning.
I wanted to save that one, but we'll just do it now because there's just no avoiding
it. There's no avoiding it. Why Linux will win it all. This just proves you can't control
the wheel.
I think the wheel is rigged.
You can't control the wheel. All right. So why Linux will win it all in 20 years. What
do you think? What is it about Linux that means it's going to make it so it'll win it
all in 20 years? What is it?
OK, well, I see it is also still remote change. It will always exist.
Is that right? There's no commercial interest. It's going to be like, well, we didn't make
enough in the Linux division this year. That's never going to happen.
So when all the economies crash, it'll still be around. That's what you're saying.
I've always felt like over time, companies will focus on something else. Their attention
will be diverted and like things like Windows and Mac OS will be around for a while, but
not forever. They'll be these companies will eventually do something else like Nintendo
used to be a trading card company 100 years ago. Right. And Linux will be here when those
companies decide they're leaving the market and it'll just be better than ever. Whenever
that happens, I think it's sort of like how in the very early days, in the late 70s, in
the early 80s, they already had TCP IP figured out. It was already known, but you still had
IPX. You had net buoy. You had Apple talk. You had all these other standards and protocols
that came out that were not TCP IP. They were corporate owned and they survived for a while.
Like there were a mini IPX networks and a lot of Apple talk networks and some net buoy
networks unfortunately. And the reality is TCP IP ate it all. Eventually those vendors
had other strategies. They wanted to participate in the Internet. Their corporate strategies
changed and all of a sudden they needed networking protocols that could route that could go out
to the public Internet. And so they transitioned from having their interest in these proprietary
protocols to using the open standard that is TCP IP. And I think that same kind of just
it just makes business sense kind of thinking will eventually cause Linux to consume everything.
It is the Borg. Resistance is futile. You can you can delay it, but it will come for
you. I love that. That's my thoughts. It feels like we're on a trajectory and you can kind
of see it trending quite heavily in some areas. So I'm curious if you're going to predict
what's going to happen in the next 20 years, you kind of got to look at what's happened
in the last 20 years. Sure. So I know on the server side of things, it's gone fairly well,
but like 20 years in the desktop space, a heck of a lot has changed. Yeah, I mean, I
think it's sort of as markets change, Linux gets used in a spot where it wasn't used previously.
So if you look at the world before Android, it was all kinds of different OS's and real
time OS's and attempts at that. And there was all kinds of different solutions for that.
Some made by the chip makers themselves, some that were made by community, some that were
made by that hardware manufacturer and just use specifically on their own devices. And
then there's the post Android world and Tivo world where you just start with your device
using Linux. That's the base operating system, because when you use Linux, the kernel, you're
also going to get networking, you're going to get device driver support, you're going
to get hardware platform support, SOC support, you're going to get all these all these things
now that it takes to run a tech stack that you would have to implement yourself, that
it just becomes a literal impossibility. So you just use Linux now and you build on top
of that. And that's sort of that wasn't true 11 years ago. And now it's a universal truth.
And I think that is what will happen in other markets and other areas just as that same
exact thing is what happened on the server. You know, when I started in the industry,
Linux was looked at as a risk. It was considered an IP risk. The people that built Linux were
freeloaders, hippies that likely weren't going to stick around with anything. These distros
were fly by nights that could disappear on you at any moment. You would be silly to deploy
anything but something like Windows or Solaris. And and it was considered an amateur thing
that you would never use on a server. Now it's the de facto server operating system
around the world, so much so that even companies like Microsoft and Apple deploy it themselves
in their own servers. So it just shows you how things can change over time. And I imagine
the desktop, the reason why it hasn't, the reason why it hasn't conquered the desktop
is because the market doesn't need it to right now. The business interests don't need it
to. Like it's not until businesses acting in their own self-interest align with using
Linux. Like look what happened with Microsoft and their adoption of open source. It was
Linux is a cancer until all of a sudden they realized, well hold on, we want to be big
in the cloud and we want to be big with developers. Now we love Linux. Now look at all this stuff
we're open sourcing. Now our terminal is open source. Now we're doing this in open source.
Look at our subsystem, right? It's like it's not, it's not, it wasn't an ideological shift.
It was a business shift that caused the adoption.
Yeah, we've talked some in the past and even I think in predictions a few years ago about
Windows running Linux under the hood. And that feels to me like it is a real possibility
and could make business sense for them in some ways.
Especially if it was basically a thin client platform that connected you to a cloud desktop
that they run on Azure. And they charge your business $5 a month for you to get access
to it or $10 a month.
That'd be an interesting place for them to actually test that without needing to drop
Windows right away actually.
All right. Does anybody else have a reason why Linux will win it all in 20 years?
The switch to services revenue. So you can't make money selling an operating system anymore.
So why would you spend all the man hours to maintain it? So if Windows could make that
compatibility layer, why wouldn't they just maintain or help maintain Linux rather than
have to maintain the 30 years of technical debt that is Microsoft Windows?
Flip that around for a moment. Imagine that Apple or Microsoft hasn't invested 35 years
in a desktop platform and they were launching as a business today and they wanted to get
into Azure or iCloud or services, Apple wanted to be a TV company and a phone company. Would
they even fucking bother?
No, that would be crazy, right?
Yeah. The only reason you would actually, you might roll your own kind of distro because
you need some things that it doesn't provide.
But you would end up with a lot more things like Amazon Linux.
Yeah, for sure, for sure.
Minimac, you think maybe it won't actually make it to the 20 year milestone it sounds
like?
Well, the question is, will there be Linux in 20 years? Will there be a successor like
a running hood kernel? So I think Linux already won in regard that the new system and open
source and projects around that have Linux opened the way to these and these will survive.
But maybe we will have another kernel, a different kernel, just a different base and we will,
I mean open source and Linux using open source has changed the world. Now, I can live with
another kernel base, but the open source environment, the new system, everything like that, that's
the most important thing. And that's what I depend on and that will survive, I think.
And so I say Linux has already won in some regard.
Nice.
It's true. It's now we just got to sit back and watch it all happen. All right. Two more
topics on the wheel. You ready, Brent? Should we spin it?
I think I'm ready. Go for it. That sounds different. Okay, you touched on this just
briefly here with Microsoft.
I did. This is kind of perfect, isn't it? So cloud virtual desktops. Are they actually
useful?
That's the real question. So I got kind of curious about this maybe a month ago. If you
remember, there was a slight period of time there where my internet was just total crap.
It's gotten slightly better and I don't know why. And I'm fine with that.
The moon.
Right.
That's what I blame it on.
It's tides or something.
Yeah. How did that work? How do they work?
And so I know this on the surface may sound like a non solution for me because like if
you have bad internet, a cloud hosted desktop doesn't make any sense. But I have some competing
priorities here because for me, I don't really have any super performant computers that I'm
willing to use on a daily basis. I have a few laptops that I've bought and probably
the newest one is an x250. But it's kind of loud. I don't like that. And so
That's not necessarily the best time to pick up new hardware either.
No, definitely. And so there's I got really curious about offloading hardware expenses
on to this is basically a subscription hardware service really if you look at it that way.
But I wondered I saw a few other resources talking about oh yeah, this is great. Like
you can totally do this. It's good for people who don't have that much money to put on hardware
etc etc. But I just wondered is this more of a toy and not something people can actually
use someone like me like maybe corporate stuff. It makes a lot of sense because they can orchestrate
this in a really seamless way. But for someone like me who just sort of wants to get some
things done. Does it make any sense? Right. Yeah. And because there are some clear advantages.
One of them is price I think. Well and the other thing that's always lovely about them
is they're generally in a data center. So they have just like a screaming internet connection.
Well OK fair enough. That's that's why it got interesting to me in the first place was
like maybe I could just download or upload you know my flax from there and just have
them. Yeah. Then you would never complain to me about my drop connections and such.
But see that's where they're also very weak is I think the number one issue is latency
in the remote screen updates. They've they've gotten it really good but you know it's still
not the same. And then and especially when you're looking like a waveform that's scrolling
across the screen that's an area where it's going to be particularly bad. Or your mouse.
I know you're sensitive with your mouse. Sure. But the other thing is is like very few of
them are going to come back and like take a local USB device and bring it forward to
a cloud connection. Some of them will but those are the nicer more expensive ones. Generally
they're using Windows. But that seems essential to me. Like if you couldn't plug in a keyboard
or like OK maybe keyboards bad example but something like an audio device like. Yeah.
Maybe it's just our audience. I think we plug in. We try a lot of things that most users
don't. But well that's also the only demographic I could see who's been willing to try this.
I feel like it's getting worked out now. I think in a way like these cloud gaming services
are doing us a solid in that they're sorting out how do I bring a USB input device forward
in a low latency way and how do I get this really high performance application down to
them as fast as possible with the lowest latency. And if I could use the NVIDIA GeForce streaming
service just to get a desktop I probably would. So you know they're legitimately on the GeForce
now streaming service. They're spinning up Windows VMs loading steam or they have like
a Windows VM image with steam pre-installed. But sometimes there's updates that need to
be applied. Then you log into your steam account like it brings you in you log into steam and
then it downloads the frickin game in their data center nice installs it on that VM they've
just created and then launches the game. So you can see how there are clearly some advantages
and it's very tempting. But then there are these subtle roadblocks that I think we need
to get over before that's even useful. I wish they would just I wish they would sell you
a desktop service. They've built it for gaming but they clearly could deliver a desktop experience
because you're often in a desktop experience until the game launches. And I'd love like
we wanted to figure out a way to run OBS in the cloud. Yeah right. So we all just connect
into that. I thought that'd be really great. All right I see we have a few takes in there
Mini Mac I wanted to let you jump in first and then we'll get to Rob and then Gerald
so go ahead Mini Mac. Yeah I think I don't have anything to add you just nailed it. I
mean I mentioned cloud gaming I mentioned cloud gaming I think this is to stop if you
have cloud gaming you can have a virtual desktop and everything just have a an application
on your system that loads in that cloud instance and then you can use your computer in a cloud.
Yeah that would be great. Gerald did you want to jump in on oh development in the cloud.
That's a good idea. Yeah thanks. So I lead a software development team at the company
and we so so for onboarding new developers it always takes like ages to till they have
their IDE stuff set up and so on. Sure. So I was I was really like thinking like if we
could have we could just say okay we do our business in in our own cloud right. So here's
our standardized desktop. Here's you work on a thin client thing and what and your IDE
is in the desktop and it's already auto configured anything the build system is auto configured
right. That would be like great. Like I looked into something like I don't know you mentioned
it once on last guacamole. Oh yeah sure. Yeah that's all. That's exactly pretty much all
I we where I work that was possibly sort of like DevOps team to build it. We have because
of a bunch of requirements and networking issues that we can't install stuff on our
own laptops. We have base images in AWS that basically spin up a full death and violence
bit of guacamole magic. So you think client in and we can get a developer from running
within an hour generally. And yeah everything's set up for them. The yes code of all the plugins
that we require. Browsers with all the accessibility plugins that we need to do accessibility testing.
There's quite a lot otherwise it would have taken day by each developer days to set up
the various Docker configuration stuff that's needed. Sure because it's all right with services
in fact we can just do it in base images use guacamole as a thin client. It has its issues
it's not the most performance I would love to get more forms but it's better than nothing
or some crazy three hot process of RDP connections which is just insane when it sounds like this
is solving an actual problem. I was just trying to dream up problems that this could solve
but this is one problem. Thanks for your input. All right we've got one left on the wheel
should we do it. I mean we you got to spin it though. Right. Yeah I'll spend. I mean
it's only one topic so we know where it's going to land. It's not going to make any
sound I don't think because there's no divider. Let's find out. Oh it doesn't. You're right.
It's they actually they actually wrote that in. Beep. Beep. Nicely done. All right. Our
last topic on the wheel is Brent's Docker jellyfin beginnings. Jellyfin beginnings huh
Brent. Well here we go. And now the wheel is empty so this is our last topic. So you're
jumping into jellyfin. Well I would more say I've jumped. Oh. And so a few weeks ago if
you all remember we did a jellyfin kind of dive. We all walked away fairly impressed.
I know even Alex was like oh he tried to convince Kat to. It didn't go so well. And so I got
inspired by that you you let me kind of tap into the jellyfin server you had here in the
studio which was fun. But then I thought hmm. So I've never set up Plex. I've played with
Cody a little bit over the years but I've never been organized enough to bring all my
media into one place and to have it hosted even locally in that way. But I thought. What
are you running it on? Yeah. That's where it gets interesting. I thought you'd like
this adventure. All right. So what has also happened was that over the last few years
I've been lucky enough to find a great many ThinkPads at the local landfill. Sure. Where
I was living. So you've adopted some ThinkPads. You have a few stray ThinkPads. I want to
have some that I've used for years that I are really beloved to me and that I just have
upgraded and now I'm like what the heck do I do with this thing. So what I have my trajectory
is so I've got my parents who live in a different city. I've got my brother who lives on the
same property as me but in a different building. Right. And I've got my place which has pretty
bad Internet. So what I'm doing is I'm building three systems that are pretty similar. OK.
Building three systems using old laptops. So one of them is a T61 which is very ancient.
The other one is an X440 where the screen is broken. And the one I'm using is an X220
with a dock. So lots of USB inputs. And do they all need storage? Do they all have the
same storage? The idea is that for instance. Airplanes. I know. That's a loud one. Yeah.
Don't they know what we're doing. Come on. Gosh. We're down here podcasting. We didn't
tell them the schedule changed and they're just. So the idea is most of these people
have USB drives you know that they've collected over the years. A whole bunch of different
sizes different ones and most of them are USB compatible. Hardly any internal drives.
I've got probably the most out of all these people. And but I wanted to implement a solution
that I could test on my own and distribute to my parents and my brother for instance
or anybody else who wants to in a fairly straightforward way that you know whatever is running at my
place is so similar over there that I don't need to relearn like the topography and all
of that topology. So the question is is this crazy to plug in a whole bunch of USB drives
into like a quasi laptop franken server and to have it do some cool things. I guess it
depends on your tolerance for outages. I think it's high. OK. Because. Well no I say it's
not crazy. If I could if I could wave a magic wand and do it one way only it would be to
probably like lay down ethernet or something between you and your brother's place and then
have all of it and at least in the case of those two have all of it pooled in one spot
so you have one large set of this and only one system to manage instead of two. Yeah
I hear you. Currently the connection between us is he's got a just a home router at his
place that controls also the Internet coming in and I think it's a ubiquity like very directional
Wi-Fi that just pointed at my cabin and it's pretty slow and unreliable I'll say. So yeah
ethernet somehow would be nice but that requires a hundred foot ditch. I mean really you both
are gonna want. Yeah I mean if it's that kind of connection you're probably gonna want them
on your ends so that way you don't have buffering and stuff like that. Yeah I mean now that
it's not crazy it would be nice to have a way to manage all of it centrally that's where
things like. It would be nice to have it have a good skill set in Ansible but it's which
I'm willing to learn so this is also. It's a lot that's like that's like saying that's
like saying you got to learn like a whole other category before you can start even doing
something in another category you know it's a big dependency not necessarily a bad one
but. So that's the background that's the hardware. Okay. And so the idea over Christmas I thought
was well I'm just gonna jump in a jellyfish and I know my brother and his wife they watch
a ton of TV they got a like a giant pile of DVDs that they love and never watch right
you know how that is and because of the bad internet to that place sometimes streaming
services just. Are not really great. No that's it you know like 80% of the time it's fine.
Yeah. But there's sometimes it's not. So I also took it as an opportunity to jump into
Docker which I had never done and I heard you know a few people in our chat room over
the last several episodes have said that they haven't dove in either. And so I thought well
jellyfins actually a nice low stakes way to try stuff right. That's a good way to start.
And I didn't quite figure out Docker compose yet so maybe you'll have to give me a once
over. Sure. But it was fun. I had so much fun and I have to say it worked really well
and so now jellyfins up and running. Nice. Which is very cool. Oh good. Mostly at my
brother's place because I don't know we watch most of the content over there. I say you
know the nice thing about doing it in Docker compose is that when you revisit it in three
to three months to a year you have this readable file that tells you oh this is where I store
the config at this is where the application data is at and these are the networking ports
it use. It's just it's a really readable yaml. It's really a readable format. It's just also
very anal about how you format it. Yeah. Well I'm using I guess it's called the Docker command
line and so you're just running a script and it looks almost as readable to me as all the
same options just slightly different formatting from what I can tell. I mean it's a simple
application and I'm not doing anything fancy with it. Yeah sure. Yeah. Yeah that could
be really nice too. So I think we're when you're talking just one application I don't
think it really matters. Okay. You know like if you have a like a stack of applications
like maybe jellyfin and a Usenet or torrent downloader or a audiobook manager or something
like something I like a lot is I haven't used it. What is it called? I haven't used the
fork of it but the project was called subsonic but there's several forks of it now and it's
essentially like a self-hosted music library media library where you can have your music
and your playlists and podcasts and internet radio streams and stuff like that and everybody
can have their own on there and so it's kind of nice when you've got you know just a small
land and people want to have centralized jukebox stuff like that. When you start having multiple
applications it's nice to it's nice to manage all that in a compose file because it acts
as both documentation but also it's a method to update them and stop them and start doing
it got it all that kind of stuff. So it's nice in that way. So like for in my case all
of my all of my server-side applications that are related to multimedia in some way are
all in their own Docker compose file and so I go into that directory and if I do a Docker
compose pull it actually ends up date updating like eight applications for me nice with one
command nice and they all yeah they all stay up to date and that way it's and I can separate
it out like that so I think it's handy in that regard. It's also a really nice way to
share your setup with people or communicate to someone else what your setup is so you
know if you were to show me your Docker compose file I'd pretty much understand exactly how
you have it set up even if I never saw the command you launch it so that kind of thing.
So one of the questions I have I guess I have two questions. One of them is what should
I run next? And the other question is is Docker the thing to be learning right now or do we
have other technologies that maybe? Yeah I think so. No I think that is probably the
most the most prominent I mean there's Podman but you know you look at like this Bitcoin
node thing I was doing the entire thing is written assuming you're using Docker. That
seems like the case isn't it? Yeah. Minimac has a jellyfin solution. Tell us about it.
Well I'm working with that solution and as some of you know I have a second residence
and I have an Android TV there and I was looking for solutions to have access to all my library
via jellyfin on that Android TV but all of a sudden I thought to myself and maybe I don't
want all the other people visiting that second residence having access to all my library
so my solution would be Chromecast. So having a jellyfin instance on my phone and just Chromecast
my library to the TV so I can take my phone whenever I go. I can go to a friend if he
has an Android capable Chromecast capable device I can just stream my library to their
TV and they're very good so I have everything I want and I can decide if people have access
to the library or not. You know that would be great for hotel rooms. I had to stay in
a hotel room on my way here and I quickly got reminded how awful cable TV is. Oh boy
it's so bad. Yeah that's actually why I own an Amazon Fire Stick because the Amazon Fire
Stick is one of the few portable set top TV boxes that A you can install a Plex or jellyfin
app on and B supports Wi-Fi hotel captures. Very nice. You got to have a device bring
up like an embedded Firefox. Yeah of course. And most of the TV set top box things do not.
Yeah Pi Crash you had a note on Libre Speed that could be a great app for Brent to try
out you're right. Yes so if you got Libre Speed you could actually set okay test your
connection between your house and your brother's house and now you know okay my connection
is failing between myself and my brother's house or the connection is failing with the
internet with fast.com or something like that. Yeah that's a good idea. That does sound like
a great idea. I've always wanted a little bit of a history to see what the bottleneck
is or who I can yell at next. And there is a I believe a Linux server image so it's really
easy to get up and going no flash required just a lightweight speed test in JavaScript.
This is the first time I hear about this. Oh yeah we've mentioned it on self-hosted.
I should pay more attention. It has come up but it's probably just been a quick mention.
It's a simple app I think but I do think that's a great one for you to try. Nice I'm writing
that down. Libre Speed and it's another one of those nice standalone applications you
know that's it's good too. So when you go look at when you go say like a Linux server
IO and you look at their Docker hub pages they'll have the Docker compose file there
that they recommend. If you read through it you'll see like oh I just changed this to
my time zone. I changed this to my paths and then it's just a it's just a matter of you
make a file called docker-compose.yml and it needs to be formatted exactly like they'll
have it on the Linux server page and then you can just do docker compose up and it'll
start up the container for you. Well that's what I so I did explore this and I tried to
get that up and running and making sure everything was cool but I actually had a hard time getting
the docker-compose command to even work. There were some dependencies or something. Yeah
okay so it may not have been installed. Yeah it doesn't install with the standard docker
package. Yeah which I realized. It's just so dumb it will in the future that is a thing
that's changed. How is that not a thing yet? They decided to they hadn't decided to make
it part of the official docker command line tools but they have now. So now it's gonna
be docker-space-compose instead of docker-compose. So you may also be hit by that transition
depending on when it lands in your distro. Perhaps perhaps. I'll look more into it but
I don't know it seems like it should have been a little bit easier considering how useful
it is. I'm so glad you got it going. Well yeah it's a whole adventure. Yeah it is we
can work on it some more while we're here. I'm deploying apps right now on our new server
that's Podman. And how's that going? Slow but good. Slow not great but good. All right
well mumble room it's time for me to go eat. It is that time. Thank you for joining us
though both virtual lugs. Appreciate you guys. Yeah it was cool hearing that conversation
go between both of them. Yeah it was really fun. Thanks for joining us for Linux Sunday
on a Tuesday. We will see you on Sunday and we'll see you again next Tuesday too. How
we do it. Thank you. Come back right here either mumble room or gitsy. We had them both
running today. Worked out pretty good. Yeah great hearing some familiar voices. Yep. Goodbye
everybody enjoy the rest of your day. Thank you. Bye bye Chris. Bye now. Cheerio. Goodbye
goodbye goodbye goodbye. Also thank you for all of you watching live. Those in the chat
room. Have a great rest of your day. See you next Sunday.
