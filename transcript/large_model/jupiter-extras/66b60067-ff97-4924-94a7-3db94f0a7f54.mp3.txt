Hello, everyone. This is Brunch with Brent. I'm so pleased to be joined today by Elizabeth
Kate Joseph. Liz, how are you doing today? Thank you so much for joining me.
Yeah, I'm doing good.
So for those who don't know you, you're currently a developer advocate at IBM. And I think you've
been there a little while now. Is that right?
That's right. I started at the end of April last year, which means for me, I've been there
a little while. But whenever I talk to other IBMers, they're all like, Oh, you're new.
Okay.
It's all about, you know, how you like I know some people move around quite a bit. It sounds
like you've done that. And I will bring us into a little bit of your history. You've
touched a lot of different things, which we'll dive into. But for others, yes, sit and sit
and sit tight. I guess IBM has a reputation for that. You know, having been in the same
place for a decade is not unheard of right at the IBM crew.
Yeah. And I wouldn't say I've moved around a lot, like every two to four years, really.
So I get myself like settled in. And maybe I'll stay with IBM for longer. But yeah.
That sounds pretty reasonable. Like there's something about seeing different cultures
and different ways that projects and corporations and companies run things that I think is really
a wonderful way to inform the work that you're doing. So I'm, I'm not against jumping around
at all. Well, says the freelancer.
Yeah. And since I work on a lot of open source software, it's been interesting to be able
to work on different projects. And some of it I do for fun. And some of it I do for paid
work. So it's been interesting to be able to mix that up a bit as I go through my different
roles.
Right. Could you walk us through then some of the things that you've done for fun?
Yeah. So I have like this sort of stereotypical like nerd in high school, I had my own computer,
I started like saving up my like my little work jobs I had as a kid, like, I'd save up
my money, and I'd buy a new computer and I'd play around with it. And I wasn't really doing
programming at the time. But that's kind of what got me into the space of playing around
with computers and eventually into my career. So I'd say like, the first interesting thing
I did was like, I built an IRC server. And then I was this was like the geo city days.
So I was like building my own websites. And one of the things that building my own website
in the late 90s showed me is that HTML is all open source, like on websites. And so
I was able to look at source code on websites and then build my own website. And those of
us who were building websites at the time, this was very common. We were totally just
like stealing each other's codes all the time, as soon as we found some new cool one. And
of course, I was like, in high school. So it wasn't cool. It was like, I don't know,
blinking and Java and like really weird things. But that sort of like was a segue into me
starting to get involved with open source. So I did my first open source project commit
in like, probably around 2004 or so. And it was to an instant messaging gateway called
Biddlebee. And I instant messengers, you know, from back in the day, like ICQ and AOL instant
messenger. They were huge back then, right? They were like how we spoke to each other.
Oh, yeah, I remember that it was massive. Yeah. And Biddlebee put all of those protocols
into your IRC client, because I was using IRC a lot. And I still do. So it's kind of
aggregating all of those technologies in one place. Yeah. So all my messages came to my
IRC client. And it was so great. That's so lovely. Do you remember what that first commit
was like was actually just documentation. So what I had done is I joined the IRC channel
for that project. And I sat there for like a month, like, because I was very shy. And
I was scared of contributing. And the project leader was like, we need to update the Quick
Start. And I was like, oh, how hard can that be? Okay. Turns out it was written in doc
book. And it was really hard. And I like doubled the length of the Quick Start. And he's like,
Liz, this isn't so quick anymore. And I'm like, I know, I'm sorry. But I put it in.
And like, that was my first insight. I didn't actually do like, there wasn't like GitHub
or anything at the time. So I really just like emailed my patch to the project lead.
And then he put it in. And then he put my name in the readme for the next release. And
that was like, the most proud moment of my life up until then. I was like, that's me.
Yeah, that must feel so cool. I strangely admit that I haven't had that feeling yet.
Because I haven't had that experience. And now you're making me want to go chase it.
It meant a lot. And I mean, going on from there, I ended up meeting the project leader.
He worked for Google, actually. And my husband, who was my boyfriend at the time, was working
for Google. So he was meeting him in the office. And I was like, oh, I need to go and meet
him. And now we're friends. It's just been since forever. And that's really a key part
of my open source journey, too, is the relationships that I've built along the way.
Well said. I feel like open source is relationships. There's no way any of it could happen without
relationships. And you've seen that repeatedly since 2004. So it sounds like, yeah, that's
a huge part. And so in terms of relationships, how do you feel like those sort of get established?
Like for someone who is just starting out maybe with their first commits or those kind
of things, what's the best way to kind of develop those?
Yeah, it ends up just happening organically. So I eventually started working in the Debian
project and the Ubuntu project as well. And these were still things I was doing for fun.
Debian sort of became part of my job at some point. I was developing packages and putting
together packages to be included in Debian as part of my paid work when I got my first
sysadmin job. So in those roles, I would work with mentors in the community to do my technical
work. And eventually, they sort of became friends because you talk about your packages
and you talk about your work. And in these days, it was a lot of IRC. Today, you may
be using some other chat protocol. But as you're working through technical things, you
also talk about your cats and you talk about your dogs. And then you just start getting
to know, oh, and sorry, my kid had to be in this video call. And then they're like, oh,
you meet their kids. And so over time, one of the things that I started doing is going
to events. So in the Ubuntu community, we used to have an Ubuntu developer summit, which
was twice a year. And at these events, we would all get together in one city, community
members and people who worked for Canonical. And that's really how we got to know each
other. So we'd work on things all day long, and then we'd go out and have dinner together
and just enjoy each other's company. And through that, I made a lot of friends who I still
hang out with today and still communicate with, even though we've all gone our separate
ways, essentially, we still are socially friendly. So for one, yeah, just like being social in
chat, and two, going to the in person events, of which there are actually more of them now
than when I started.
Yeah, there are so many of them now. And, you know, I think maybe this is on everyone's
minds. But I was I was just took a peek earlier at at your website, which is PrincessLeia.com,
I think, which is great. And we'll talk about that maybe a little bit. But on there, you
have a list of the events you're you're attending this year. And I noticed that you now have
a bunch of them crossed off for this whole virus thing that's going around. And I would
imagine that feels kind of sad to you.
Yeah, it's it's been hard. I mean, partially, it's because my job is mostly going and speaking.
And now I have like two months where I get to stay home, which is very unusual for me.
And in some ways, it's sad because I'm going to miss those events. I'm going to miss connecting
with people in that way. In other ways, I have my huge backlog of stuff that I'm really
excited just to sit home and work on now like blog posts, and like video tutorials and some
code patterns. And I'm like, Oh my gosh, I can finally get to my backlog because I'm
not out speaking all the time. So it's kind of a mixed bag, honestly.
Yeah, both can be true.
Yeah, but it's I mean, it's all for the best. And I hopefully this passes quickly.
Yeah, we'll see what happens. But I agree with you completely. Like, and I've mentioned
that before how meeting people, you know, through some of these technologies, you know,
that we have to sort of meet online through video, audio, you know, all the text forms,
but there's nothing like meeting in person. And so if anyone hasn't had the opportunity
to do that with anybody, even like a group of three people who meet in your town who
are interested in Linux, like, I think that's probably what's been really great for you,
right? Is that those those developers and people in the community that you met just
by being involved, necessarily all have something in common. And so then, it's my experience
at least that it's easy then to connect with some of these people, because you've already
got some similar philosophies and, and things in common. So it's really lovely that that
way.
And I got my start at Linux users groups, which are much less popular these days, because
there's so many meetups of all kinds of things. But that's Linux users group is where I gave
my first talks. And because the audience is like, it's not a conference, it's not a big
like fancy thing where you submit a call for papers, like, in a log or most meetups, honestly,
you just like, email some person and say, Hey, I want to give a talk on this. And if
you're upfront about like, I've never given a talk before, like, it's fine. I'm like,
for most meetups, they'll be like, that's okay, like, we'll be kind to you. But like,
starting with that, like, like, just a user group where there's like, maybe 20 people,
it's still super stressful. And my first few talks, I know, were terrible. And I was super
nervous. And like, my voice was all jittery. And I said, I'm too much. But that's true
of everyone, isn't it? Right? We all start there. Yeah, yeah. But it was nice to be able
to do that around like people I sort of knew in the community, rather than like at a conference
where I don't know anyone, and I'm already scared. Yeah, some of those conference rooms
can be pretty big, filled with strangers, or future friends, maybe. Right. Do you remember
what that first talk was? I am pretty sure my talk was about communication via the command
line. So I think I was talking about like text based chat things. So I was actually
I talked about Biddlebee in that because that was the IM gateway. And I talked about a bunch
of different like chat clients, like, or see and whatever else was available at the time.
Yeah. And I don't think I had slides. Because when I looked back at it a few years ago,
like all I did was like link to some resources, like I linked to some like, things on my website.
And I was I think I talked about screen and SSH and like ways you can keep your chat client
running forever and stuff. Yeah. I will say that you're fairly prolific in your talks.
Like you list them, you actually do a beautiful job of listing. I was gonna say all of them,
but I don't know if they're all there. But quite a few of them that you've given on your
website. So if people want to check those out, there's quite a lot of them. I did lend
my ear to one of them. I think it was at Linux Conf Australia, entitled Why Linux System
Mims Should Care About Mainframes, which is some of what you're doing now. And maybe that's
a nice segue. That talk, I would definitely say people should check out to get a sense
of definitely your personality and the kind of stuff you're working on. But you know,
in about 25 minutes, I learned a heck of a lot of stuff. But there's the word mainframe
in there. And I know that's a lot of what you're talking and working about these days.
I think you were mentioning that the story of where how you went from a small container,
sort of startup to going into mainframes was an interesting story. So maybe you can guide
us through that. Yeah, so I mentioned that I worked on Ubuntu and Debian for a while
and that was like a hobby. From there, actually, one of my contacts through the Ubuntu community
hooked me up with opportunity at HP to work on OpenStack. So that led into me working
on distributed systems. So I worked on the OpenStack infrastructure team for about four
years. And in that role, I started playing around with containers because the infrastructure
team for OpenStack, one of the things we were testing out is running jobs in containers
for our CI-CD pipeline. And so I was playing with containers a lot. And then when I left
HP, I joined a container startup in San Francisco. And so that was a lot of fun for a couple
of years. But at the end of that, I was like, all right, what am I going to do next? And
I started reaching out to people in my community and figure out what I want to do for my next
job. And that's when someone from IBM came over and said, hey, you want to work on mainframes?
And immediately, I'm like, I think you have the wrong person. Because in my head, mainframes
were this obsolete technology. And it felt like my job for the past six years had been
trying to replace them. Because working on distributed systems and building up reliability
and redundancy and resiliency and all the R words on cheap x86 hardware was the goal
of the future. And that mainframes were just not really applicable. So I ended up having
a few calls with them anyway. And I talked to some of the engineers. And one of the things
that they they impressed upon me was that not only are mainframes actually modern hardware,
but there's a lot of really interesting open source stuff happening on them, including
work with containers. So the reason that they reached out to me was because I was already
like an industry person giving talks on containers and in the Linux space. And I was reaching
Linux sys administrators like myself, who they wanted to reach and change their mind
like they changed mine. So it it's still a little weird being on the mainframe team with
my background, just because my I don't know anything. I mean, I do now. But when I started,
I was really just a Linux sys admin. And it's been this like learning journey over these
past several months since I joined of discovering things. And I think the most fun I've had
is talking to people who are in the mainframe space, and show it sharing with them my discoveries.
And they're like, why don't people know about these things? Like mainframes, they don't
go down, they can survive earthquakes, like, how did you not know these things? I'm like,
I don't know, but I'm pretty representative of a standard Linux sys admin. So if I didn't
know, this is the message I need to be delivering to people. Plus, it's really cool hardware.
So that's been fascinating.
I would agree with you completely how there's this gap, right? Like many of us, most of
us, I would say I've heard the word mainframe, but usually associated with either a 90s animated
series that I really love. So with thought and matrix and all this, but joking aside,
like it is usually something from the past, something, you know, pretty popular in the
90s, maybe, but these days, nobody really thinks of that. And so the talk that I mentioned
earlier that you gave really reinforced to me that like, there's a real gap here. And
it sounds like you're taking it upon yourself to really try to fill that gap and to inform
pretty much everybody on the value of mainframes in today's sort of environment. Because as
you described there, there are quite a few. Could you maybe give a few here so that people
can get nicely curious?
I think if you Google for like ode to the mainframe or something, there's like this
montage of like all these mainframe mentions in pop culture, and it's hilarious. It's funny
because you're like, oh, mainframe, but also like most of them don't make any sense, like
hacking the mainframe. And like, there's all kinds of like hilarious things in pop culture.
And I was reading like a comic book there. I think it was like Wonder Woman or something.
And they're like, there was like some strange quote about like, I am the cybernetic brain
of the mainframe or something. I'm like, what is this even? It's hilarious of what people
think.
And so why are mainframes special today, then? Like, why is it worth reviving the concept?
Yeah. So one of the statistics I learned recently that was actually surprising to me was that
IBM sells more mainframes today than they did in 1990.
Okay. Wow.
So in spite of the public perception, like there are actually more of them out there.
And if you think about like going about your day-to-day business, every time you swipe
a credit card, chances are your transaction is hitting a mainframe somewhere. All of the
airlines pretty much use mainframes still, except for like one of them. And again, like
most of the banks, most insurance companies, most healthcare, it still all runs on mainframes.
So one of the things that we like to talk about is that like, if Facebook went down,
or even if Google went down and you didn't have access to your email, like, or search,
like that would be a bad day. But if the mainframes in the world all went away, it would be catastrophic
because flights would stop, banking would stop. And what happens when all of that happens?
Like things get very bad.
Those are the essentials.
They're really like fundamental to our life. And they're all backed by mainframes at the
end of the day. Like maybe you've got these microservices in front of them and all this
stuff running on cloud, but they're still going back to a backend at some point that
is backed by the mainframe. And so it's really essential that they are still working and
that we have the talent to continue keeping them running. So part of that has been bringing
in new people on the Linux side, because Linux runs on mainframes, it has for like 21 years,
but also ramping up the college students who are learning the ZOS and the other proprietary
operating systems that run on the mainframe, because that's where a bulk of this content
is like people are still writing COBOL. And they're still writing assembler for mainframes.
And we need new developers working on that. So there's like this DevOps on Z, because
that's what the mainframes are called IBM Z. So I'm on the IBM Z team. So they call
it like Z DevOps, where we're bringing like Jenkins and Git and a lot of the tooling around
DevOps to the mainframe world. And that's been a lot of fun, actually.
Yeah, it sounds like a real niche opportunity, really. Because it sounds like what you're
saying is, we need developers here. And it's really cool technology. And it's essential
for it to run everywhere. So it's not it's not going away anytime soon. So it seems to
me like there's a real opportunity there for, you know, some people who might want to skill
up or try something new, something different. And I suppose that's exactly what you did.
Yeah. So and it's really been interesting being like the Linux person on the team, because
there's definitely that happening in organizations where there's a mainframe team. And they bring
on the Linux people to run Linux on the mainframe, too. And there's a lot of cross training happening.
So I'm teaching my mainframe peers how to do everything. And I'm teaching them about
like SSH and moving files and Linux. And the Linux talent is actually really valuable in
this space. And it doesn't hurt that it pays pretty well. So yeah, that's that's helpful.
Nobody minds that. So my team, we like do university outreach. We also have this program
called Master the Mainframe that we run every year from September to December, which is
specifically for students, college students. We do a contest, we give out prizes. And what
they have to do is go through a series of challenges. So we give them an account on
the mainframe, not Linux, but ZOS. And then they work through these challenges to learn
the basics of how to navigate the UI and write some basic programs. And it's really amazing.
We had 25,000 students sign up for the program last year.
Oh, that is a lot. And, well, I guess if you want to bring in some new, fresh, young talent,
then that's kind of the way that you need to do it. But that's a that's a lot of that's
a big cohort for sure. Wow.
Yeah, for sure. And one of the really interesting things is that the students don't like, I'd
say like people my age, like late 30s, we have this idea of a mainframe in our head.
But the younger students, they don't, they don't know what a mainframe they've never
even heard of one.
Right. And they don't know that 90s sort of cliche word, right?
Exactly. So, so to them, it's like this big, super powerful computer. We did a hackathon
or actually a data-a-thon with some data scientist students at UC Berkeley a few months ago.
And they didn't even know what IBM stood for. The company was just not on their radar at
all. Like my first computer was an IBM 8086. But IBM doesn't make computers for normal
people anymore. So if anyone's listening and doesn't know what IBM is, it's international
business machines.
Thank you for filling that in. That's funny. Gotta include everybody. Yeah, there's a lot
of history there, right? And many of us, you know, I'm sort of young 30s. So I remember
the IBM ThinkPads, and those have quite a reputation, right? But as far as you know,
you just don't see IBM in the sort of end-user space anymore. And for good reason, they focused
on some really cool stuff. You mentioned some educational stuff. I know you've done some
cool things with the Linux Foundation around the Open Mainframe project. Can you tell us
a little bit about that? Because that seems like two worlds colliding as well in a really
beautiful way.
So the Open Mainframe project is a Linux Foundation project that's built around a bunch of open
source software products focused on the mainframe. So a lot of them are focused on interactions
between like the older proprietary operating systems, which when I say older, it just means
they have a really long history. They're actually really modern in like they're still being
developed and features are added all the time. So just saying that. But the older operating
systems providing modern interactions with them that are open source. So there's a project
called Zoe, which allows you to have a graphical interface that's run in a web browser. So
you don't really need to install any software on your computer, like on your laptop, but
you can interact with the workloads and all kinds of things that are running on the mainframe.
There's also connections to your modern IDEs. So if you're using Visual Studio code, there's
a plugin for Z that allows you to edit code and run different things directly through
an IDE that you're familiar with. So you don't need to work in all the guts of the mainframe
and be like logged into a terminal. And all of that's been enabled through Zoe as well.
It uses an API to connect through it. And so the Open Mainframe project, it's actually
one of the things that convinced me to join IBM and take this role was because I believe
in Linux and the Linux Foundation and the Open Mainframe project. I was like, listen,
IBM is putting some real money and real resources towards open source software on the mainframe
these days. And so that was fascinating to me. So there's a bunch of companies, Broadcom,
Rocket, who are all like invested in the Open Mainframe project. So we're having our first
Open Mainframe summit, I think in September. Call for Papers is open now.
That's great.
And it's really just about gathering more projects.
Where's this summit happening?
Actually, I don't know.
Oh, well, we got to go find out. That sounds cool. And, and I could see why that would
be a bit of a tipping point for you. Like, you know, just hearing the Linux Foundation's
name is like, oh, yeah, that's familiar. I know they do good work, that kind of thing.
But connected to some of the mainframe stuff, seems like, okay, well, these are, you know,
that with IBM is someone I trust. So let's, let's dive in and dive in you have, right.
But it also sounds like there's kind of some cool, you know, you're sort of like trailblazing
in many ways, that that area, which sounds kind of cool, too.
Yeah. Since I know that the Linux Foundation has such a high bar for like approving projects,
I knew that it was a serious investment when I knew they were involved.
Which is always a good thing. Can I ask you about what you're running at home? Because
that piqued my interest, too. What are you running on your computer over there?
On my desktop, which I just rebuilt with this like brand new i7 processor and like, lots
of RAM, it's, I use the same case because it's beautiful. Anyway, I moved, I moved my
hardware hard drives over, so I didn't reinstall, but I'm running Zooboon 2. And I still contribute
to that project. That's one of the ones that I do for fun. I don't do that much. Technically,
I'm the marketing lead. But that's because I know how to use Twitter. Like a high bar
on our team.
But someone has to do it, right?
Yeah. So yeah, so I use Zooboon 2 on my desktop. And then I still run a bunch of servers. So
like, even though I'm a developer advocate now, I still play around with servers a lot.
So I've got a couple servers sitting behind me in my office here. They're both running
Debian, like my media and my backup server. And then where my website runs, that's actually
a Linode virtual server. And that's running Debian as well. And then I run a bunch of
community servers for the Ubuntu community is still and I put Ubuntu on those because
I thought it would be bad to run Debian on them.
Maybe
amusingly for work. IBM treats Red Hat Enterprise Linux as a first class citizen, as far as
as desktops go. So when you join IBM, you can request Windows, Mac, or Linux. And so
everyone on my team picked Mac, except for me. I wanted the Linux one. So it was great.
They like shipped me this ThinkPad, like a really awesome ThinkPad. It's like a T480
and it's got like 32 gigs of RAM and i7 processor. It's a really dope machine. And it had Red
Hat Linux already installed on it. And it works with the VPN and all Slack and everything's
already all set up on it, which is awesome because when it's my work laptop, I don't
want to have to be fiddling around with the VPN and stuff. So everyone's like, Oh, don't
you want to install Ubuntu on it? And I'm like, not really. I mean, kind of, but then
I'd have to set up all that stuff myself and I wouldn't be able to call tech support if
like the VPN breaks because they'll just like, Oh, you're using something that's not on our
approved list. So it's been fine.
Well, and it sounds as well to me like you have a real interest in dipping your toe in
a whole bunch of different distributions. You know, you just mentioned some of the computers
and software and servers that you're using just for fun, and they kind of span a big
collection there. So why not gain a little bit more experience with Red Hat in there
as well, right? It's there's, there's similarities and just enough differences that you can skill
up in that area too.
Yeah. The only, the only sort of family of Linux distros I don't really have represented
here is a SUSE, which is a shame because I have a lot of friends over there.
You mentioned being involved in Zubuntu. Uh, I think you mentioned to me that you, your,
your current machine is sort of an upgrade path from 804. Uh, so you've been running
that one for a while and it sounds like it's working pretty well. Um, I started, uh, my
journey on Zubuntu. So that, um, hit really close to home for me and was kind of a nostalgic
to hear you were running it too. Um, but to hear your involvement there, uh, continued
involvement as well as your sort of deep involvement in, in, in Debian and Ubuntu as well, uh,
really puts a smile on my face because it sounds like you've been doing it for a long
time and that you're not stopping anytime soon. Uh, I guess you probably don't have
any reason to stop considering you're so, uh, kind of, I guess in love with it. Right.
But I heard as well that you were, uh, involved in the Ubuntu community council for something
like six years. Is that right?
Yeah. So that's, um, the Ubuntu community council. There's like two governing boards
of the Ubuntu project. There's the technical board and then there's the community council.
Um, and so the tech board, they're mostly people who work at Canonical cause they're
the ones who have enough time to do all the technical work, um, and make like smart technical
decisions. Um, the community council is more about like community logistics and making
sure that people had all the resources that they needed in the community. Um, so I sort
of did it like during like the golden age of Ubuntu community.
And what do you call the golden age then?
One of the things that happened with Ubuntu is it like everyone was super excited when
it came out. So we're talking like 2008 to like 2014, it was going to revolutionize the
desktop. We were going to have it on our phones and our TVs and everything. And then something
really interesting happened was that it actually took off really significantly in the server
space because for once you had a, an operating system that was backed by a company and was
free. Um, because you know, you always had Debian, which was really stable and great
and it's what Ubuntu is based off of, but Debian was not really equipped because it,
there was no company behind it. Um, I did work for a company that would, that would
support Debian, but it just wasn't in the big way that Canonical was supporting Ubuntu.
So just the server side took off and that's really the direction that Canonical has taken
it in. So the community is much smaller these days, but when I was working on it, yeah,
it was like all about the phone and all these exciting things that they were going to work
on. And a lot of that has really dropped off, which was sad to see. Um, but there's still
community efforts doing all that. Like there's the Ubu ports project, which is still supporting
the Ubuntu on phone dream and doing good things around it too. Yeah. And I still have one
of the Ubuntu touch devices. They actually released one from a Spanish company. So when
I, when I finished the, the most recent edition of the official Ubuntu book, that was like
my present to myself as I bought myself an Ubuntu tablet. It was so sad. We added a chapter
about tablets and things in that, in the ninth edition of the official Ubuntu book. And that
was like a new chapter. We, we wrote that from scratch. And then a couple of years later,
they discontinued, Canonical discontinued their effort. And I'm like, Oh, I just wrote
a chapter about all of this. It's so sad.
Yeah, but it was, it was really exciting being on the community council. Um, cause we worked
with Mark Shuttleworth very closely. He was a member of the council as well. And it was
an interesting time. I mean, definitely some trying times as we, you know, we, we were
also the arbitrators of the code of conduct. And one of the things I was really proud of
is Ubuntu is one of the first projects that had a code of conduct. I think it may have
even coined the term code of conduct in the software space. And it was one of the reasons
I was drawn to the project because I had been working in Debian, which can sometimes be
a bit abrasive. And, uh, the Ubuntu community was just so friendly and helpful and amazing.
Do you think that explains much of why it's gotten to where it is? Cause it sounds to
me like that's repeated almost everywhere is that community is great. Community is great.
Very welcoming. That was one of my first contributions like that I hear all over and over and over
again.
Yeah, absolutely. I mean, I see a lot of in, in the more successful open source projects
that have contributors from elsewhere, I see a lot of things repeated. So I mentioned that
we had these Ubuntu developer summits where we got together in person that was repeated
in the open stack community and the open stack community. I wasn't the only one from Ubuntu
there. Like there were a lot of people who put a lot of effort into recreating that developer
summit and turning it into the open stack design summit. So every six months we all
got together. Um, and now if you look at Kubernetes, they have contributor summits. And again,
it's like some of the same people coming along and taking lessons from going into the past.
So I'm really proud of how influential, um, that all ended up being, um, for projects
even today, even though Ubuntu doesn't do them anymore, you know, like the lessons have,
have modernized and come to the latest projects.
That's a really nice way to put it that, that pride that you have in sort of helping develop
those. Um, and now you're seeing sort of those six months sprints almost everywhere, like
internally for some companies that have a lot of remote people. Um, you know, we just
did one with Jupiter broadcasting a little while ago. Are they ever powerful to just
get ideas happening and get people connected for the next six months. And there's just
magic that kind of gets rejuvenated when that happens. So good on you for helping make that
happen.
Yeah. And so my, when I was working on OpenStack, my whole team was remote. Um, and we actually
worked for different companies. So a bunch of us were at HP, but we also had some Red
Hat and Rackspace and all kinds of other companies around working on the project infrastructure.
And so the sprints were really essential because there was, we couldn't get into an office
together. I mean, we ended up sometimes doing that, but it was someone's office that we
went to, right? Because we were distributed not only remotely, but across different companies.
What a challenge.
Yeah. And there's, there's no way we could have done it fully, fully remote a hundred
percent of the time. We had to get together for those every six months first for like,
like social cohesion. Um, but it was also important to get into a meeting room together
and hash out some of the big issues because sometimes things would just get out of hand
and we couldn't deal with them over chat, right? Like we needed to get into a room with
a whiteboard and all sit down together. So when I talk to people about remote work, that's
one of the things I stress as well. I'm like, listen, like you can only do so much when
you're in different places. Like I love remote work. I've been doing it for like over a decade
now, but I need to get in a room with my teammates, like on some sort of cadence, you know, socially.
Of course, remote work does not mean a hundred percent remote, right? I think that's a fallacy.
Most people, when they first hear about remote work and they haven't experienced it themselves,
that's often what they think, but that's not quite true, nor does it work.
Yeah. And plus it's a great way to, okay, sometimes there's arguments between people.
And if you get them together, oftentimes those are going to be worked out like in person
because like people hold resentments and tone doesn't get communicated effectively. Even
if you're talking over a video chat, like sometimes it's just not there. But if you
get them together, get some tea, get some biscuits and hang out and just have fun together,
like you can work through most problems. And there have definitely been personalities I've
worked with who like people just like butt heads, but as soon as they get together, they're
like, okay, you're actually a reasonable person. You're kind of cool. And I understand where
you're coming from. I still disagree with you, but we can work together and it's okay.
Like that wouldn't happen if we didn't get them in a room together.
Of course. And, and yet, you know, once you get that resolved, there's some beautiful
things that can happen when you bring together people who have different perspectives and
have different backgrounds and that kind of stuff. So really, really fascinating. That's
what kind of worries me about this, this coming year. And so we'll just sort of have to see
how all of this sort of social isolation stuff shakes out, but I hope we can find a way,
you know, to keep those connections strong because they're sort of the lifeblood of all
of this.
Elizabeth, if you wanted to put a question out to the community, what would you want
to send out there? It could be, it could be something you want them to go see, something
you want them to try, maybe something to think about. What would you like to put out there?
So I want to encourage anyone, if they haven't contributed to an open source project and
they want to give it a try, just like pick a project or actually you can even reach out
to me and I might be able to help you find one.
We'll spin the wheel and pick a project for them.
Yeah. Or maybe even like have a quick call and talk through what you're interested in
and maybe we'll find a place for you, but just give it a try. It's terrifying, but only
at the beginning. I love telling this story. I was at the OpenStacks, one of the OpenStacks
summits and I was on a panel and I was talking about code reviews. And in code reviews, people
comment on the coding patch that you proposed. And that's really scary because everyone is
self-conscious about their coding skills. And so whenever anyone critiques their coding
skills, it can be scary, especially when it's some stranger on the internet. So I mentioned
that I had a patch that I put up and it had like 47 back and forth with me uploading new
versions and people leaving comments. And it ended up being like 47 changes, right?
It was huge. And so I mentioned this during the panel and for the rest of the conference,
everyone was telling me their bigger numbers. So they're like, I had a patch that had like
150 revisions. It was the funniest thing. And people I totally respect and think are
brilliant. They're like, I'm like, you had that many? So I want to say it's terrifying
to contribute to open source, but we've all made mistakes and been there. And I'm hoping
people are friendlier with reviews, but if you don't get a friendly review, it's okay.
It's not you. And it happens to everyone. Totally unrelated.
But I give away VMs on mainframes running Linux. So if you Google search for Linux one
community cloud, for 120 days, you can get a free Linux VM on a mainframe and you can
like show the CPU stats to your friends. It's a different architecture from x86. So that
can be fun to play around with, like toss your software on there, see if it works. The
first thing I did when I logged into one is I like logged onto IRC and like shared the
CPU stats with my friends. Like I am so cool. Do you want to try that out? Yeah, it's out
there. We do it to encourage development on the platform.
That's lovely. And did you say 120 days?
Yep.
That's a reasonable amount of time.
Yeah, just for playing around. And if you're an open source project, who's serious about
building on the architecture, I can hook you up with like a VM that you can add to your
CI system forever.
Nice. Wow, local hookups. That's good. What is another sort of thing that you might suggest
that people can try if they if they want to give that a shot? I know you mentioned I was
plugging into IRC. But what's something kind of real world that might be fun for people
to give a shot?
So the biggest thing I since I work with open source projects, I just try to compile something
on it. So whether it's your project or the your favorite application, but see if it works
and then see the weird compiling errors that come out if it doesn't work. Because the big
difference between the mainframe architecture and x86 is that x86 is little endian. And
the mainframe architecture is one of the last big endian architectures out there. So I've
learned so much in the past year. I mean, I've only ever really I mean, I've played
around with like spark and arm and other things. But those are all little endian. And like
mainframe is a whole different world. So if you want to compile some software, that's
it's fun.
Wow, that sounds like such a gift. So thank you for offering that. That's huge. If people
wanted to get connected with you and get in contact, say hi, maybe reach out to you for
a VM, where can they reach you?
You can just head over to princessleia.com. I've got my email address on there and everything
l y z at princessleia.com. If you're want to connect with me on the professional side,
it doesn't matter. I check my email everywhere. But I'm also l y z at IBM.com. And I'm on
Twitter at PLA to pretty much on everything is PLA to so easy to find.
I think I would people would probably get after me if I didn't ask you about your domain
name. I read that you've had it for quite a while. Princess Leia, I would imagine you're
a bit of a Star Wars fan. Is that? Am I off there?
When I first got online, my first chat room was a sci fi chat room.
That makes sense.
Yeah. And I wanted to be Princess Leia on there. But that one was taken. So I was Princess
Leia 2. And that's the PLA to my Twitter handle and on my license plate and like everywhere.
That's lovely. And I think many of us can relate to that, like finding the name that
you want, whether it was on, you know, ICQ or whatever kind of follows you, right?
Yeah. And it's it's so funny because it's so unprofessional.
And yet here we are.
Yeah. But my husband, my husband's like, Oh, you should definitely like separate your work
stuff away from the Princess Leia stuff because it's not very professional. And I'm just like,
I don't want to work for a company that doesn't appreciate it.
There you go. Yeah. And I find the reality actually, is that so many of us are interested
in that kind of thing, no matter where you're working or how high up the ranks you are,
right? Like, how many Star Trek fans have you met that are anywhere within those those,
those ranks? So I think that's a good filter. If someone doesn't want to work with me because
I'm having fun, then that's maybe not a place where I want to be. Right. So. So kudos to
that. Well, Liz, thank you so much for chatting. I really appreciate it. And thank you so much
for your time.
Yeah. Thank you so much for having me. This is fun.
Yeah, you're welcome.
