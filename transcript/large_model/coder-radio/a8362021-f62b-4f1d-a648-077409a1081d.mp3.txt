This is KOTOR Radio, episode 436 for October 18th, 2021.
Hey, good luck and welcome into Jupiter Broadcasting's weekly talk show, taking a pragmatic look
at the art and the business of software development and the world of technology.
This here episode is brought to you by a cloud guru.
You know, they have that cloud playground, Azure, AWS and Google Cloud sandboxes on ACG's credit card, not yours.
Get certified, get hired, get learning at a cloud guru dot com.
My name is Chris and joining us with credit card in hand, ready to pounce, it is our host, Mr. Dominic.
Hello, Mike.
Hello, Mr. Fisher.
Hello, sir.
Full disclosure, you and I are recording this on a Monday just after Apple's new Mac event.
So we'll talk about it a little bit today.
It's called Mac Day, right?
Yeah, but by the time people are listening to this, they're probably feeling like it's been Mac week and they're kind of done with it.
So we understand that we do grok that.
But we got to find out is Mike getting a new Mac.
So what do you think?
Holy ****.
If I'm getting a new Mac, you think holy ****.
I think you have to like and I'm not even exaggerating when I say this.
I truly think this is probably the most significant Mac upgrade I've ever seen in 30 years.
Yeah, it is.
Yeah, I'm not really.
I could tell you why.
OK, the current problem I have with my Apple computers is a deep feeling of betrayal and disappointment in my iMac Pro.
Oh, because for my workloads, which have nothing to do with video editing, right?
It is consistently either matched or lapped by my MacBook Air M1.
OK, you're losing me.
Well, so just hear me out, right?
The gating factor is not how quickly I can like bootstrap a Python workload anymore.
Sure, sure.
It's just fast enough.
So was the iMac, to be fair.
I track what you're saying.
You're saying really all this additional performance and cores and RAM doesn't really change your day to day job.
This is unusually reasonable and logical.
I don't really know how to process this.
I don't know.
I mean, right now, the gating factor to my development progress, right?
Like making forward progress is like getting developable specs and speccing out features.
And I could see that.
My gate factor was the RAM, because if I was going to make a transition to something where the Mac OS would be the primary OS, I'd need a lot of overhead for virtualization.
And 16 gigs of RAM sort of was a killer for me, but also just the display limitations of the M1 were also a bit of a killer for me.
There's ways around it with like Thunderbolt display port adapters and whatnot.
But I thought that was a you know, I'm not a big fan of having to do that.
I should just the hardware should be able to support multiple screens.
You don't want to dongle up your way to glory.
And, you know, the rumors got it right.
16 inch and 14 inch, just as expected.
Increased resolutions and pixel density as expected.
Touch bar is gone.
And I said before the event started to Alex, my co-host on Self Hosted, I said, if Apple adds the ports back, that's a pretty big reversal.
And if they get rid of the touch bar, that's pretty much Apple addressing the criticism from most of the diehard Mac users.
And they did both those things.
Plus, they added 120 Hertz ProMotion to the display.
And they've added MagSafe back.
And it's faster now you get 50 percent charge in 30 minutes and you can get up to like 32 gigs of RAM.
No, I'm sorry. Sixty four gigs of RAM on the on the on the top one.
For me, the numbers that really impress me these days and they nail nail the timing on this is the performance to power ratio.
Because in the back of my mind, I'm always kind of thinking, well, what if I want to go work out of the woods for a week and I'm running off solar and it's the winter and there's very little solar.
Having something that just even if the numbers were like 10 to 20 percent less than what they claimed on stage, which I don't think they will be at 30 watts.
Is truly a revolutionary breakthrough in the PC industry.
In some workloads, the M1 Max chip is using 100 watts less than an AMD or Intel part of similar speed, 100 watts for me.
And that's a continuous thing, right?
So that that means a continuous draw and they're maxing out in the high 30 range.
They haven't they didn't say specifically what it was, but on their chart it was 30 watts.
That means my whole family has more power for longer.
Like I can stretch the solar. I guess that's a big deal.
And they're really nailing that right now in a way that nobody else in the industry is.
You make a good point. Maybe I'm being a little too cold, cold water on this.
But if you've like been rocking a 2015, 20, whatever, even like a 2019 might be pushing it.
But any of the Intel Macs and you don't have like the need to virtualize Windows on Intel, which is a thing I still do on my Mac Pro for all the I give it because I have to do it for client projects.
It's kind of a no brainer, which scares me for like the Linux vendors.
Yeah, yeah. Because the prices are steep.
I mean, the model I would buy, I did get into the configurator.
And it's like thirty eight hundred dollars and it's almost thirty nine hundred dollars.
Yeah. And then it's over four grand after shipping.
Right. And then you get taxed into. Yeah. Yeah.
The shipping I think was free, but the taxes for my spec'd out one that I was just checking out before the show, before the configurator page went down was forty three hundred dollars after tax.
Yeah, it's a lot, but it's definitely a multi-year computer.
You know, for us, Mac so rarely comes through the studio that every Mac JB's ever bought is still around in some capacity.
They just get relegated to lesser and lesser important tasks like none of them are really involved at all in production anymore.
But they do other things, ancillary things like, you know, maybe run a sound board or, you know, my kid can play Minecraft on it.
And they they are some of them are, you know, 10 years old, like they really last, especially when you just want to play a Java app or something.
It's pretty impressive. So I'm not so worried about long term the the price.
But up front, it's just high enough that I have to go, all right, well, let's be sensible about this.
First thing I have to do is I have to replace the JB core server here.
But then once I get that up and going like and I'm actually I'm extremely, extremely thankful.
We had a listener, the real zombie, send us an amazing Dell.
It's a it's used to him. Right. But it's it's brand new to me.
And it's loaded to the gills with like three hundred and eighty four gigs of RAM and like 24 cores of CPU.
Like, it's just incredible. I mean, it's going to be a powerhouse system.
But I still have to get like nearly 30, 40 terabytes worth of storage for it.
So I want to get all that stuff figured out. Then I think I'm going to look at this real hard.
You know how I like to operate like I'm going to get something.
I'm generally going to get it before the tax when the tax season is over.
So that way it goes under these this year's taxes. And so it'll be and I think it's going to happen.
I just I feel like I need to do a little more research on virtualization and what it's like to run Linux on this.
And then the other story that's going to be really interesting is if the Asahi Linux guys get Linux running on the M1 Max and Pro, that is going to we don't know yet.
That could be a whole different ballgame or everything could just work and it could just work faster.
We just don't know yet. And when we start to get signs of that, even just early signs, that'll probably also.
Well, or I'll buy it before then. It's coming soon, I think it's this is the one I've been waiting for.
I see. I feel like if you really want it, this is the money you're waiting for. And you you probably want to cover it, too.
Right. Even in the other shows that are more Linux focused, I wouldn't wait too long because those ship times are going to get rough.
Yeah. Yeah. With the part shortage. I think you might be right. I've been thinking about that.
Yeah. And I think, too, like I think a lot of people in the Linux community for the thinking of the other shows, I think they kind of have blinders on this one.
They'll they'll they'll have they'll joke about the notch or they'll they'll mock the price.
And they're failing to see like what is truly a value here is to certain types of professionals.
This has an incredible set of appealing features from from battery life and performance, but also.
The speaker system on the MacBook Pro 16. Is better than any other PC out there, and I've even had vendors send me their laptops
where they've boasted about this impressive Dolby system with a subwoofer built in that they've they've worked with this so-and-so musician to make this amazing sound system in the laptop.
And it's a joke compared to the MacBook Pro 16. They also have a multi-mic array set up in the laptop that actually gives you a usable microphone for video conferences.
And you don't sound like that's the one thing that is that does ever so slightly tempt me because I spend my life in the nightmare that is in meetings.
And when you bring it all together, the new keyboard is good.
These new screens with promotion. Is it new? You know, since the since 2019, it's not the magic.
It's not the or it's not the butterfly anymore. It's the magic keyboard. They fix the damn keyboard.
Right. You take the good, solid industrial design, the super high resolution screen, the very good audio system, the improved camera.
And the M1 Max and Pro performance with the battery life and you add that all together.
I don't really think there is an X86 based laptop that actually competes on all of those points.
Now, like yourself, not everyone needs that stuff.
So it's not like I'm not sitting here saying it's a laptop for everyone, but I just think they nailed it.
I think I was expecting what we got with the M1 Pro. And when we saw 32 core on the M1 Max, that's when they broke my brain.
Yeah, I mean, I'm kind of surprised that the SD card made a return.
Oh, yeah. And the ports. I forgot about the ports. Right. That's a big deal to MagSafe.
I'm actually it's not clear to me if that's like can you charge via USB-C as well?
Because I have just a ton of USB-C stuff.
I know. I sure hope so. But what happens if both of them are providing power?
Does it default to the MagSafe? I hope. But who knows?
I assume it does. But my fear is that you can't charge via USB-C.
So that like for all your peripherals, you got to carry USB-C cables and you have to carry this MagSafe cable.
Yeah, that would suck. Yeah, but no, it's good stuff.
Yeah, we don't really know how the GPU stacks up to the mid tier and high tier Nvidia or AMD GPUs yet.
We can look at the numbers and get an idea that's competitive, but we don't really know.
And, you know, there's a lot of workloads out there that are just simply designed for DirectX or Vulkan.
And so these machines will never be applicable. But it does look really good. They didn't screw it up.
Right. And that's what we can say. They didn't screw it up. They made very compelling laptops again.
And it's been a while since I've had that. I've had that feeling about Apple. It's been years, really.
Yeah, it's good stuff. All right. A long timer is stuck at a fork in the road, Mike.
And he writes it. You remember K.P. Vauk or K.Pauk? Yeah, you remember him.
He's been a listener since 2014. Says Koder is one of his can't miss podcasts.
And he's got two questions for us. He says, I work as a senior software engineer for a large corporation.
It's a major Department of Defense contractor recently due to the White House mandate.
Oh, I know where this is going. My employer has implemented a policy stating all employees must receive their final vaccination by November 24th.
Now, without getting into the whole hot button issue of the covid vaccine, its effectiveness and mandates,
I've yet to decide if I want to follow through with the shot or if I want to find employment elsewhere.
Do you all know of any resources for finding software engineering jobs that employers who are not mandating all workers be vaccinated?
He goes on to say, My second question is, do you have any advice for getting through the H.R.
Tech buzzword filters? An example of this is on my end.
I got turned down over the past year by GitLab for just not having, quote, significant professional experience with Ruby on rails.
And over the last five years, I've worked on many different framework backends,
including Java, Tomcat, Node.js, Express, Python, Flask, ASP.net, C sharp go.
He's even played around with Django, which we'll get into in a bit.
He says that I feel like I have a lot of qualifications, but I don't have specific buzzword qualifications,
even though I could learn those skills very quickly. Any advice would be appreciated.
And you all never again find an exit strategy from the show.
Well, so to his first question about trying to, you know, leave over the mandate or whatever, that's everybody's that's your decision.
I would I would say you're probably at the right time and place to do it just because the job market's so hot right now that it is a job seekers market at the moment in terms of hiring.
Now, in terms of getting around buzzword filters, what are your thoughts on that?
Do you do you come up with a way or do you just find a way to incorporate the buzzwords into your now?
You just lean. You just embrace the demon blood that is the buzzwords.
I mean, it sucks. Right. But what are you going to do? Right.
But if the company is big enough to have a char, I mean, everybody who kind of knows what they're doing will know that your resumes have B.S.
anyway. I mean, you could you could try sending them a PowerPoint before I interview with you.
I'd like to present a case as to why buzzwords are a bad way to review candidates. And no, it's not going to work.
You just got to get past the HR folks. I mean, it's it's annoying. It's yeah, you just do right there.
They're there for a reason. And that reason is to actually don't understand why HR gets in front of hiring.
Oh, you know why? Oh, I know what they're really for. Oh, I know what they're really for.
Yeah, it's totally 100 percent about cover your bottom for the company.
Right. Like there's so many laws and rules and it varies state by state to about hiring.
And I know this because and you've you must have witnessed this as well.
It was so loosey goosey when I first started doing it like and I was a kid back then.
And they just have me come in and sit in on any old interview and ask any old question.
And then, you know, we'd sit around afterwards and talk about the candidate. And there was no no like rep from HR that stopped by and said, Mr. Fisher, before you go into that interview, be sure you don't ask these questions like none of that.
And then as time went on, oh, man, you you became a partner with HR.
You no longer went out and did the interviewing and the hiring yourself.
You worked in a partnership with HR to find the candidate.
And they are the front line to help keep you from being inundated with applications, which is the reason they tell you, which is in part true.
That's part of it. But it's also about covering the bottom of the company.
My first interview was with somebody who ran a tech company, but was from a very different, more loose industry.
And her first question to me was like, hey, so you got a girlfriend.
Maybe you don't like girls. Well, like right into like, how old are you? Like, oh, yeah. You know, which training did you take?
Oh, yeah. That area sucks. Like, whoa. And I didn't know. I mean, in a weird way, it was it was very disarming because I was like, oh, OK, I'm like, you know, I was super young.
I was like 19. I was interviewing for some contracting thing, but it disarmed me.
But now I'm like, I would never ask those questions ever.
And I mean, I know KP knows this because he's listened to the show since 2014, but there there is a game you can play here.
You can look at as a game or a genuine opportunity, but social engineering. That's what it is.
I mean, yeah, you you you you engineer it.
And like we said last week, you could even engineer the resume a little bit for the for the specific place you're applying.
But also and this is another thing we see on the show all the time, participate in an open source project that is using these languages and get involved and get on their GitHub
and get out there a little bit. And you can point to that as experience.
So you can say I have all these on job experience with everything from Java to go.
But I also have community free time experience, which demonstrates that you have a passion for this stuff.
And I've worked with Ruby with XYZ open source project. Here's a link to their GitHub.
Man, that works. We hear from people all the time. That works. And it's something that we didn't mention last week.
But it's something we try to mention from time to time. All right.
Nate is plagued by his and his just his general dev environment setup. He says, Hi, Mike and Chris.
I'm a longtime listener and PHP web developer turned into a Salesforce developer.
I recently started a side project for mostly education purposes on using Python with fast API per Mike suggestion and Angular that integrates within Salesforce.
This project, like others, I've started to learn a new framework or language or an API,
but it's been plagued by a seemingly tedious process of setting up my development environment.
There seems to be 50 different popular tutorials for setting up an Angular environment or a Python development environment for various purposes.
Added on to that, there's often the magic scripts that just do a plethora of things that really I don't even think are often needed.
And oftentimes I find I get into actually building and get working on something and then encounter an issue with my environment
that blocks me from proceeding until I determine how to correct it or I just start over with a whole new environment.
Consequently, well, very little progress is made on actually building what I want to build.
So how do you go about setting up your environment for something that might be newer to you?
Are there go to resources that you trust? Is it something wrong with my process?
I understand that setting up an environment is part of the learning, but it seems just disproportional to my end goals.
I would love any help I can get so that way I can actually learn new skills and build my projects.
Nate, so he's getting stuck on the environment setup.
And I wonder if this is something maybe you used to run into that maybe you've normalized now.
That would be a nice stream. So now this is I mean, I know this feels like a terrible answer, man.
It's always bad. Anytime you have to have a new tool chain.
For me, any time macOS updates, I have like a 50% chance of it just breaking all my homebrew packages
and having to go through that arduous process of reinstalling everything.
I mean, you asked about Python specifically.
I think the fast API tutorials, but more importantly, the example apps on GitHub are good.
Like anything else, it's always going to be annoying to set up tool chain.
It's going to be some dumb thing that didn't link right together.
For Python specifically, VS Code and PyLance do make it somewhat less painful,
but you're still going to have to set up Postgres or whatever database.
And that's still going to be a manual process.
Yeah, I mean, not to tie two emails together, but for anybody doing Rails like the last writer,
Go Rails actually has a great step-by-step getting set up with Ruby and Rails on all the platforms, including WSL.
But that's super rare.
I guess maybe I could attempt to write one for getting set up with fast API,
but the problem is some package is going to update somewhere on some distro or macOS,
and it's going to be out of date.
It's always bad.
For instance, macOS Monterey is coming out on the 25th. Guess who's not upgrading?
Right, because you know it's going to be a bad time.
It's going to break my setup.
I will mention, just as a reminder, our friends over at Cloud Guru
do have a certified entry-level Python programming course that is a good starting place.
It also helps you prep for a certification if you want it,
and it covers the environment you'll be working in.
It also covers some Python fundamentals like the data types, control flow structures,
functions and generators, all that kind of stuff,
but you'll feel pretty comfortable by the time you finish that course.
So go look for the certified entry-level Python programmer course,
or I'll have a link in the show notes for that, and that's from a Cloud Guru at cloudguru.com.
But additionally, on top of that, I feel like this project is being solved at a software level
by several different places at the moment.
One of our friends over at Fedora are trying to solve this essentially with Silverblue,
where you'll have an immutable system that you can update and you can roll back
if something doesn't work right, and the applications and their data
are completely separate from the operating system,
and they use an environment called Toolbox.
And Toolbox creates pet containers where you actually install everything
inside these pet containers that are isolated from the core operating system.
You just launch a terminal emulator, just looks like a regular old Linux terminal with Bash,
but it's actually inside a container environment that can access your file system
as if it was a regular terminal.
And anything you install and create in there is in that contained environment
and doesn't go on the host operating system.
So you can upgrade, say, your version of Fedora or whatever it is,
and that environment remains consistent and persistent.
Containers are another way this is being solved,
and I think one of the reasons you're seeing container use explode
is because it gives developers a predictable environment.
And that's what's been the secret success of containers,
is that is such a needed thing for creating your applications
or delivering your applications.
So what you're stumbling onto, Nate, is kind of a core problem that the industry
has been throwing a lot of engineering resources at solving recently.
So you're not alone on this one, my friend,
but perhaps you could be using a more modern workflow.
And if you're just starting out,
why not look into running your Python development environment out of a container?
It's not that crazy.
People do it already.
And then you can move it, you can upgrade your OS,
and as long as your container still starts, you're going to be good to go.
It's not like the perfect solution, and it would be really, really nice
if desktop operating systems were better at this kind of thing.
But the very flexibility that lets you install a development environment
and access those libraries and components from all the different applications
is the very thing that makes this so tricky.
So Josh writes in, and he has our last email for the week,
and he knows that you and I are not big on virtual events,
but he wonders what we thought about virtual developer events,
specifically developer conferences like the upcoming.NET 2021 conference
on November 9th.
The Google I.O. has been a thing that's going to be virtual for a while.
He's curious what we think, and do we actually end up trying out
any of the new stuff, like the new APIs that get announced
at these virtual events?
He says, thanks for our time, curious to know our thoughts, Josh.
So specifically, virtual events for developers.
What are your thoughts on that?
I do not like them.
I feel like they lose a lot.
I feel like, in a way, they're kind of inauthentic.
I mean, the presenters do a great job.
I'm not trying to be whatever.
But part of it is seeing something cool in a presentation,
and then having a chat with the presenter after,
or even just huddling with maybe the people you know,
the folks you know at the convention, and being like,
is that how I would do it?
I don't know.
Or if you're an iOS developer, back in the day when I did that full time,
they have to do that on Android?
That sounds terrible.
Yikes.
Too much?
I mean, it's the same way I feel about the general tech conferences
that we've talked about at length for the last month or two.
I think you lose something over Zoom, or Google, or whatever,
you know, voice chat you're using.
A hundred percent.
And enthusiasm is one of them.
You know, getting excited about stuff.
Unless you have a Hollywood production budget for your virtual event.
I like that Sage Alicia in the chat room says that, you know,
I worked Python professionally on Macs,
and almost every developer team had their own environment
set up slightly differently.
He says, some systems are using Python from Mac OS,
installing it from Homebrew.
Others are installing it from PyEnvironment.
Others were installing it via Anaconda.
Like, it's just all over the place.
It's gross, really.
You know, Josh, back to the virtual events.
I go into in our coderly, which is going to be out this week,
our coderly report.
I go into why I think virtual conferences have a massive reckoning coming,
which I got a little insider info on that.
But that aside, which I'll leave that for the coderly,
there can be a positive.
So I'll focus on the positive of virtual events.
The positive is, they do become available to people who could never make it.
You know, people who couldn't travel, or it was too far, or whatever.
They just couldn't make it.
Now they can attend.
So there's that.
Additionally, because it's new, like, it's still kind of,
still kind of possible to sometimes, at the right virtual event,
actually have a conversation with the presenter, like in a side chat room.
Because there's not hundreds or thousands of people hitting them at once,
all the time, or her.
It can happen, though.
And so sometimes that can be a positive.
People are a little more accessible because the event itself is just a little less.
There's less going on, right?
Like, after they're done with their Zoom presentation,
they turn off their camera, the next person goes,
and they're just sitting there at their computer answering chats.
And so sometimes you can reach people that you couldn't reach in person
because they'd have a whole crowd around them.
To be honest, I'm reaching for that one.
That is me trying to find something that I feel like is a positive,
outside of just the accessibility.
What I would really like to see happen is a pretty significant reduction
in virtual events, which I think is going to happen.
I think it's already, the reckoning's already begun.
And I'd like to see in-person events try harder at streaming
and doing virtual aspects and making the presentations available online,
quickly posting the videos.
And that's really all that needs to be done.
If they could just get the videos turned around quicker.
And it's possible, you know.
You could, this show is live streamed right now.
And with a push of a button on several different streaming platforms,
I could make that live stream available.
Now, we prefer to edit and refine the show.
But for a presentation at an event, totally usable.
So there's just a workflow issue there, I think, Josh.
And I hope that people figure that stuff out.
And I hope the in-person events tick back up again.
What do you say we move on to some hoopla?
You feel like...
I don't believe you.
Feel like talking about some hoopla?
Hang on.
My Singleton service just destroyed all my databases
for my AAA game that made billions of dollars.
Oh, man.
Yeah.
So I love Diablo.
Always raised in the dark lord.
Stay wild and listen.
That's right.
And I've Diablo 1, Diablo 2, all the Diablos.
Is there a Diablo 3?
I don't know.
What about the bad one, Diablo 3?
Yeah, I don't remember that one.
That's right.
I love Mac OS,
except for that whole three-year period of keyboards that didn't work.
Yes.
Right, sure, sure.
So this is funny, right?
Multiple outages, data loss, as you said,
caused by, again, essentially an internal wound.
Oh, technical debts of mother.
It's funny because the only other MMO that I'm familiar with
on the internal structure,
what eventually got them was the same kind of like login,
spin up a new instance process,
was just bogged down with technical debt,
which sounds like exactly what happened to the Diablo 2 servers.
And then, of course, they had to do all kinds of really user hostile things,
like they had to throw up a rate limit and queue up users,
so that way people go to launch their video game
and they'd have to be told to wait.
And back in my day, like when Diablo 1 came out,
you just installed it on your damn computer and played it.
But now...
It was shareware too.
There was a shareware version.
Yeah, yeah.
Like you could do like the first...
First dungeon.
You could get to, right?
Yeah, yeah.
Yeah, that's what it was, the first dungeon.
Yeah, that was fun too because those local games,
when you got bored with them,
you could start modding them.
And same with Minecraft.
Like this is...
My son still prefers to play the Java edition of Minecraft
because after you've played it for a lifetime,
you get bored and you want to start experimenting with it
and you want to add and change things in the game.
And these remote games,
the anti-cheat stuff prevents that.
And sometimes they prevent you from playing.
The one true version of Minecraft is the Java version.
So yeah, Diablo 2.
All the money in the world, right?
And they still go down.
Well, but first of all, I love the...
And there's a link to this in the show notes,
the technical rep who wrote this.
Because he says,
to maintain the integrity of the original Diablo 2 experience,
we kept the legacy code.
Translation, stop yelling at us.
It's those bastards from the 90s that did this.
Like, it's a tried and true in the consulting world.
You blame the other developers every time.
You just say,
those guys, they don't know what they're doing.
But my favorite thing,
I mean, let's not get too much in the weeds here,
but they have Diablo 2.
It's not some indie game that like you're...
It's not Celeste, which Celeste is awesome.
You should play Celeste.
But you have to log in because, you know,
got to get that sweet, sweet licensing money.
You have regions, right?
North America, Asia, Europe.
And I think there might be a Pacific region,
like the islands.
In World of Warcraft,
which apparently this is not running on the same infrastructure
because World of Warcraft does not have this problem.
Fine.
You would think you're logging into your region,
but it turns out there's like a master,
like a login and game creation service that is a singleton,
which means there can only ever be one.
In the known universe that just got hammered
because it was written in the nineties and not ready for one.
Diablo 2 is probably more popular now than it was then, right?
Because nostalgia plus new people.
Also, people's gameplay habits have changed, right?
I also had Diablo 2.
It was on CD-ROMs.
I played it offline.
Yeah. Okay.
Right.
So yes, children,
the computers used to have this tray in the beige box that they came in
where you would hit a button, it would open,
and you put a round frisbee in it.
Or a cup, depending on...
You could have a...
Well, I hope not.
I mean, the game, Diablo 2,
its initial release date was in the year 2000.
So it's, you know...
Yeah, it was developed in the nineties, though, right?
Yeah, absolutely it was.
Yeah.
I mean, there's a series of books,
stay a while and listen,
and I apologize, I forget the author's name, I highly recommend them.
There's two of them.
And they talk about the development of Diablo 1 and Diablo 2.
And if you read those books,
you will know the old adage, never get into networking.
Because making that stuff work on early aughts slash 1990s modems,
not fun.
So the whole thing crashed.
And because of the way they architected the system,
they not only had to implement these, let's just say, obnoxious,
like logging queues and rate limiting,
they actually lost like a day and a half of data.
Yeah, that's a shame.
Because the database kept trying to back itself up,
which meant it couldn't resolve right transactions.
And I know we're getting deep into like why databases are scary.
But this is just like a classic,
like this is a multi-building system.
Like this is a multi-billion dollar company.
This is amazing.
And I'll do another book recommendation,
Exercising Legacy Code, I believe is the title.
This is like the best case.
I encourage you all to read it.
This is the best case study for why working with legacy code that was written,
maybe not, I'm not saying the code is bad, right?
But it was written with different expectations
about what the environment would be like.
And different use scale.
Different use scale, definitely different scale, right?
Different, just like the whole concept of networking was different.
It's one of the worst and most complicated problems.
So someone in the email has mentioned that I had done some military contracting.
This is the challenge in that field because everything is basically old.
Sure.
You would be horrified to see how much work Windows XP is doing
or was doing a few years ago.
I feel their pain.
I also love the amount of sass in this post that I'm amazed they were allowed to write.
What I don't love is they put in apostrophes in the URL,
which make it basically impossible to copy correctly.
Well, this is brutal.
So the issue starts happening on a Saturday during peak user time.
And the problems continue on into Monday and Tuesday, like just issue after issue.
Like you get one thing back up and working,
then the players slam the service and the next thing breaks.
And unbelievably, by Wednesday, a week after constant login issues and crashes,
the game had its highest ever concurrent players.
Hundreds of thousands of players in one region alone, Blizzard said.
Ready your ion cannons, kids.
That is, I mean, and that was just like in the Australian region, I guess, too.
But in the U.S. you had the highest concurrent users at the same time.
It's, what's going on?
Why are these old games as they're getting such?
Yeah, I know.
But, you know, like except for the Warcraft three remake,
it's just when you and I were growing up, like everything our parents liked was stuff from like their high school years.
And when, you know, their glory days and they just never really like my folks just, you know,
sometimes that's where their tastes are rooted.
But it seems like the stuff that came out during our formative years remains very popular.
Like you see them keep remaking the movies that were from the 80s and the 90s and you see them keep these video games.
I mean, Nintendo has built an entire empire on refreshing nostalgia, you know,
and it's remarkable that these old games clearly were good games and it wasn't just rose tinted glasses because this is an astounding stat to see.
This is their highest concurrent users ever for a 20 year old piece of software.
OK, but I mean, a Pink Floyd album is like multigenerationally popular.
I have a there's a 14 year old who lives in my house that she loves the nostalgia trip.
Right. Stuff older than from when you and I were growing up.
I think it's just the classics are the classics.
Yeah, I suppose. And maybe it's a confluence of the arts refined to a certain point,
the technology was a certain point and the budget for the build and the storytelling, it was all at the right spot.
Or can I fry some bacon?
Oh, you know what? I love bacon, as long as it's not that stuff with the nitrates.
You know, you got to cut that out. This is from Tristan, which there's your reference.
Maybe it's because new games, Diablo three are incorporating microtransactions and like loot crates and stuff like that too much.
And the old games were like, you buy the game, you have the game.
I love the idea that consumers on mass don't like that stuff.
That seems I like that. Let's go with that. That's a good theory.
I can tell you, my son is an avid Nintendo fan. Yeah.
A little too much. We got to limit that.
But he now prefers the regular Mario games like iPad games.
He won't touch them because like this is crap. Straight up Mario.
You've got the game. You've got the game. If there's a secret, you find the secret.
You've got the secret. It's 60 bucks, but you're not getting nickel and dime.
You buy it once unless unless you're Reese and you decide to spill your apple juice on the cartridge.
But generally, you've got it once. Yeah, I mean, sure.
I actually would be willing to bet you Nintendo will find clever ways to resell that game to your son over and over again his entire life.
I just I'm signing up for the fifty dollar upgrade to the Nintendo online service because right because I need those sweet, sweet Genesis games.
And you know what? They're their Nintendo game.
They're guess what? Surprise, surprise. Their emulation is spot on. They do a great job.
It's so good. It is. It is a lot of fun.
And those old games like like we're just saying, the Super Super Mario that came out with the SNES.
Oh, yeah. I'll sit down and I'll play that and I'll enjoy the hell out of it.
I play it to go to bed. Yeah. Really? Super Mario World.
Yeah. The SNES one. Yeah. The first one. Yeah. The first one on the SNES.
Yeah, that's I like to sit down and see how fast I can bust through the first world.
Oh, yeah. And I got it. Then you always you get you got to get the secret above the first ghost house.
You know what I'm talking about? Yeah. You got to get the thing where you can jump ahead.
Yeah, that's that's so nice. And then get Star Road going. Oh, yeah.
Yeah, I'm a yeah, I'm a big fan of that stuff.
And it just really does hold up. And you're right. It's so nice to have the whole game.
Just one more nostalgia trip. Sonic two or Sonic three.
You drink a bunch of Red Bull and you see how fast you can go through it.
Linode dot com slash coder. That's where Blizzard should be hosting their Diablo two servers. That's where we host everything because the performance is incredible and the stability is top notch.
There are hosting provider now for over two years.
I started there because I was I was honestly just a little curious to see how Linode does things because they've been around since 2003.
Way before all the big like crazy VC funded fly by night VPS came in and before the big hyperscalers.
So how does somebody who's been doing this? How does a company that's been doing this for 18 years?
How do they evolve and how do they keep competitive?
I was curious because I'd seen them at the advance. I'd seen them supporting the community and I tried it out.
Well, when it was time to go independent, I was so happy and I was by this point I was I was well into using Linode.
I contacted them and said, I'd love to have you on the network as a sponsor. We're going independent again.
Let's let's work together. And man, has that been awesome because now all of you are seeing what's so great about Linode.
And it's so refreshing in this age to have something just as straightforward as Linode.
You go there. The pricing is very clear. It's very simple. Every system you get is going to outperform.
It's going to it's going to exceed your expectations.
They have fantastic customer support, clear, clean documentation.
It's all there and it's just a breath of fresh air. It's so nice.
Plus, they've been around forever and they're independently owned, independently financed.
They, you know, they have paid their way.
They're not taking like VC funding where they have to have total world domination or bust.
And you can do things like a five dollar a month server and just load it up with like for me personally,
I recommend SyncThing and a photo gallery that sits on top of that and just start there.
Or go deploy your own GitLab server. They have one click deployments for developer environments.
So that's another thing to consider is if you'd like to get started with a development environment in the cloud,
they make that really, really straightforward and you can support the show while checking it out.
So you go to linode.com slash coder, get one hundred dollars in 60 day credit on your new account and you support the show.
Linode.com slash coder. Go there, sign up, see what I've been saying, experience it for yourself.
That hundred dollars is going to actually let you test it and push it.
That is a statement of confidence on Linode's part. And I think you're going to love it. Linode.com slash coder.
Moving right along in the hoopla, let's talk a little Django.
Might be time for a few hard things for Django lovers to hear.
But I think we have to face it. Not a lot of excitement around Django these days.
Well, so this is a complicated story, right?
Because this piece of hoopla, I think is correct, as is the next piece of hoopla.
Oh, great article. The decline of Django or Django or Django? I don't know.
Xamarin, Xamarin, right? I think it's a good post. I think you should read it,
especially if you're getting into Python and wondering what framework you should pick.
The answer is fast API. Yeah. Or flask.
I could still see Django being appealing, though, just because it has such a body of work.
It is so extensively documented and there are so many success stories out there.
Yes. I mean, if you're a Python developer and you're going to inherit a legacy app,
it's probably going to be Django or fast API. I'm sorry. Or flask.
The thing is Django, as this article puts very well, it hasn't exactly.
You know, a lot of work is being put into the async stuff for Python and Django just isn't there.
It's been worked on for six years, hasn't happened.
But I'm going to just make this argument.
What's wrong with Django just kind of being done?
It's a website framework, right? It's like Rails.
In fact, it was like the Rails for Python.
And it's kind of fine. I mean, there's nothing wrong with it.
You can totally ship decent applications.
Or hell, if you're just doing a site for some small business or even medium business,
Django is a great choice, much like Rails is, right?
Maybe it's not the newest, sexiest thing.
It is slowly losing market share.
I personally don't use it for reasons that make a lot of sense for my use case analysis.
And, you know, clients are in between fast API and flask
leaning more in the future towards fast API.
Fast API was newer, it's matured now.
But there's nothing wrong with Django.
I like this article, but I don't think technologies ever die, right?
I live in Florida.
And when I'm riding on my gator, going for happy hour...
Do you have a saddle?
No, no, you've got to ride the gator bear.
Governor DeSantis actually stops you if he sees you riding on a gator.
I've heard that, yeah.
He says, I heard you're a software developer.
Our unemployment system went down again.
Do you happen to know COBOL?
Hey, you there on the gator.
The gator part aside is a thing that really happened.
The state of Florida was sending out notices to every company
registered as a software developer and actually calling me like,
yo, dogs, do you guys know COBOL?
Hey, you know what?
Not a bad approach.
If the unemployment system or whatever is down,
get that back up as fast as possible.
That's what I say.
Well, one, I love you, Florida.
Do you think they got it back up fast?
No, of course not.
No, they probably got scammed at least twice.
And so the next time somebody writes in asking, you know,
they're like 19, 20, they want to know what language they should learn,
I'm going to say COBOL because the amount of money
the state paid to get that site back up.
No kidding, right?
Holy crap.
So my point being, one, yay, Florida.
Two, none of this stuff ever really dies, right?
Objective C is still around.
I still get the quarterly call that there's some legacy crazy Mac thing
or iOS thing in Objective C that someone needs a hand on.
And it's great because you get to charge them a lot.
That's true.
That can be a specialty and it can be a good source of income.
This is exactly the point I was going to make right down to the COBOL.
It is so true.
And Django may, while it's definitely out of the hype cycle,
a lot of times in technology, right as they're about to be replaced
by the next thing, they get pretty good.
Like that iteration, generally the iteration that comes out
just after the hype cycle has passed, after people are using it,
people have moved on, they're adopting something else.
I swear in technology, a lot of times that's when the original thing
gets really good, well refined, and also a lot of the money interest
kind of relax a little bit because there's a new thing they're focused on
and that's no longer their baby, which eventually fades and is bad.
But initially, actually I think is a good thing for technology.
And so I would not be surprised if that applied to Django completely.
That's totally how the cycle works.
I also think this is another old man theme, right?
That once you're around long enough, you realize that the thing you started doing
may not necessarily be the thing you end doing.
It seems like most of the world has moved on to Python 3.
It just took a few years.
Only 3% of Python developers are still using Python 2
in a survey that was conducted by JetBrains.
49% are using it for web development, that doesn't surprise me.
The next most common use case, surprise, surprise,
data analysis and then machine learning, shocker.
Yeah, I'm not surprised at all.
Mobile development, 3% of use cases.
What are you people doing?
I don't know.
It's more common to use Python in games than it is mobile development.
Embedded development at 6%, which I guess is technically different than mobile.
And then networking programming 16%.
The bottom of the list is actually more interesting to me than the top of the list
because the top of the list is everything.
Can I just jump back real quick?
So embedded is super different than mobile, right?
It's like your IoT devices.
Yeah, that makes sense.
I just didn't expect to see them broken out.
But yeah, I get it, right?
Oh no, because there's accelerated versions of Python that worked really, really well
in like those single board, blah, blah, blah.
I guess it's sort of surprising it's so low with that considered, you know?
Well, C++ will never die.
Yeah, I suppose that's true.
Web Frameworks, NumPy, Pandas are the top two.
And Web Frameworks, you ready?
Number one is Flask.
Number two is Django.
Number three, FastAPI with only 14%.
But you know, what do you expect?
It's early days.
So good.
This all rings pretty true, yeah.
What are your takeaways from this?
The snake has a long tail and the future looks bright.
Yeah, and I think the other takeaway is, is that 45% of respondents who are developing
Web Frameworks are working in Django still.
That's huge.
Yeah, of those working in Python, yes.
Yes, yes, yes, yes.
Well, my biggest was actually over half of the dev survey, granted this is a JEP range
survey, whatever that means, if that skews it, encountered Python in their educational
experience first.
Oh, yeah.
It's your site time, so someone can call me on this prediction next year.
If that's true, then the cohorts that are like the junior-junior developers now are
like going to be coming out of school this year, even like, you know, not really in the
field yet.
If all of these people have like good experiences with Python when they're young, I wouldn't
be shocked if Python continues to be popular.
Oh, absolutely.
I mean, my point is as they go up the ladder and they get decision-making authority, right?
Ah, hmm.
I think the only other thing that was notable from this JEP range survey was that Visual
Studio Code showed up as the number two editor.
I don't know if that's with their extensions or not.
Well, did you see the asterisk JEP range put on that?
Please note we asked our own users.
Thank you.
That's why I find it so surprising is this is amongst their, it's probably, it's even
larger in the general population, no doubt about it.
I would argue that that's one and two the other way where VS Code is probably bigger
than PyCharm Pro.
Even amongst JetBrains' own customers, Visual Studio Code has a very healthy second place
nipping at the heels of PyCharm Professional Edition.
They got to be looking at that.
Dude, I live in VS Code.
If I were them though, I'd be like, okay, all right.
Well, we welcome our new VS Code Overlord and all things are extensions in VS Code now.
No, I kid, I kid.
Actually, you're joking, but they have a very healthy business called ReSharper where they
sell a Visual Studio proper extension.
Why not sell a VS Code extension?
Yeah.
Sure, there's a way to do it.
Could it happen?
Why not?
You just have to log into your JetBrains account to get it to run.
To activate it or whatever.
I mean, I doubt Microsoft with all their you can do whatever you want developers, I doubt
they're going to block that.
No, I would think that they'd actually like the idea.
They would love it if VS Code became a dev platform for like actually targeting, not
for just working.
They'd probably happily integrate an app store.
Hell, I would probably buy that extension.
Yeah, sure.
Oh, well, let's not, let's not give him any ideas.
Microsoft Visual Studio Code app store with its own currency.
And I'm over here back in Vim.
Exactly.
Oh, God.
Datadog.com slash Coder Radio.
You know this here episode?
Yeah, it's sponsored by Datadog.
Lots and lots of Coder Radio listeners have been checking out Datadog.
The monitoring and security platform for developers, security professionals,
operation teams and anybody working in the cloud age.
With Datadog, you can unify your metrics, your traces and your logs all in one place
and you can troubleshoot your issues faster.
That's going to save you time.
That's going to save you money.
And you can break down silos between teams and more easily communicate with visuals.
That's nearly invaluable.
And you can create real time dashboards with Datadogs and they have over 450
different technology integrations for your business.
You can get started in minutes.
The nice thing is you can easily pivot from a high level overview of your entire
environment right down to a granular visualization of your metrics and your events.
Datadog gives you infrastructure monitoring, application performance monitoring,
security monitoring, even user monitoring all in one place with just these
beautiful dashboards that allow you to get at different levels and make it easier
for other people to follow visuals like performance information, metrics,
any kind of stuff, any kind of output.
It's extremely useful and you can try it for free with a trial by going to
datadog.com slash CoderRadio.
See why thousands of companies are using Datadog and hundreds of CoderRadio
listeners, they've chosen it as their monitoring solution.
And when you start a free trial and you create one dashboard, Datadog will
send you a free t-shirt.
Yep, free t-shirt time.
So get started by going to datadog.com slash CoderRadio.
Go find out why everybody's trying it and how it can make a difference for you.
datadog.com slash CoderRadio.
All right, I don't know why I want to do this.
I guess I'm a glutton for punishment.
But I want to talk a little Facebook.
Why?
I know, I know, I know.
The Internet brought the capability for people like yourself and people like me,
even though we don't often choose to do it, to have the tools and marketing power
that traditionally only the mainstream media outlets gave you access to.
They were the gatekeepers to the public.
Magazines, papers, television, radio.
There was no Internet at.
Then the Internet came along and companies like Facebook and Google came up
with very clever ways to build ad platforms.
And then they made it accessible to small developers, to small business
developers and other small businesses around the world, mom and pop shops,
et cetera, et cetera.
Are they perfect?
Are they a good company?
Do I use Facebook?
No.
But they provide a critical role for medium to small businesses to get access
to consumers who might want to buy their goods via advertising.
It's a good old clean system in that regard.
How they get that data, I don't necessarily agree with.
But what I feel like is happening right now, for better or for worse,
is Facebook is getting attacked.
And they're getting attacked by media companies that have a massive,
multiple conflicts of interest.
Number one, media companies, what they really are, are platforms for advertising.
They get eyeballs.
They sell ads to advertisers.
The advertisers then get their product in front of those eyeballs.
Facebook is also that exact system.
They are competing for the same eyeballs and the same exact advertisers.
You got to appreciate that the media companies that are going after Facebook,
they're competing with Facebook for the same paycheck.
It is life and death for these companies.
On top of that, social media is a time sink that takes people away
from their platform.
So not only is Facebook sucking up advertisers,
but they're sucking up eyeballs and people's time.
That's also an existential threat to everything from the Wall Street Journal
to CNN and some dude's blog.
And while I'm not here to defend Facebook, as you and I are recording
on a Monday at noon Pacific time, there are 30 plus journalists
finishing up a coordinated series of articles based on new leaked documents
out of Facebook, and it just keeps coming.
Over the last six weeks, there has been round and rounds of whistleblowers
and leaks, and a lot of it has been mischaracterized as boogeyman technology.
And I don't like the tracking, but it's been hyperbolic coverage
that is in a coordinated attempt to shut Facebook down, to knock it down,
to get it regulated, to reduce its reach, to do whatever they can
to just take a chunk out of Facebook.
And it's everything from whistleblowing about how Facebook affected the elections
to how their AI platforms are inadequate at moderating
and that they need to have more moderators and more fact checking.
And it's like this omnidirectional attack on Facebook from all sides.
And I think no one wants to see Facebook succeed.
No one loves Facebook.
So we're all just sitting back and watching the show eating our popcorn.
But really what you have is a giant traditional media organizations,
just a traditional legacy media, attacking new media.
And the new media, like say Facebook goes away, right?
They're gone.
The world may be better overall, but small businesses and medium businesses
will lose access to customers.
And I know this is essentially Facebook's argument, but it is real.
If Facebook went away and Twitter is censoring you,
you can't go to NBC and run an ad about Alice in the nightly news.
You can't go to the New York Times and advertise Alice
because they'd want $300,000 from you.
Where Facebook and Google, and you notice how Google manages
to avoid all the scrutiny, that's another thing.
A lot of these issues they bring up, Google is also just as guilty of,
if not more guilty, especially with YouTube.
But that's not their target right now.
Right now their target is Facebook because they have billions of active users.
But they will pivot, mark my words, they will pivot to Google eventually
after they take care of Facebook.
I know I'm defending advertising and all of that,
but I just wish people would see what's happening.
Like maybe we're all okay with it.
Maybe we're fine with this happening.
But at least I just wish we'd all acknowledge that we're watching
one group of competitors all gang up and murder another competitor.
Yeah, I mean everybody's got their own incentives, right?
I don't know, to me it's possible that everybody's kind of evil.
True.
You know, I just tried some Facebook ads for Alice
and that was a rough experience.
Yeah, that's why I wanted to bring this up actually,
because I know you know how invasive the ad tech is.
Yeah, and really what I got was a bunch of people posting images
saying like, F Facebook, you know, whatever, like anti-advertising stuff.
Which I then had to pay for, so I killed that.
So it was basically fake views.
You're getting people who saw your ad, but they would respond pissy.
They would respond pissy at Facebook,
but then like that's posted on the Mad Botter page for Facebook.
Like obscenities and stuff like that.
That sucks. That sucks.
I don't know, right?
I don't feel that they do a great job of serving anybody really.
Except for themselves.
I mean, it's such a tough problem.
I do think they're making tons of money.
I do think they're like a very practical advertising platform
for small businesses.
But right now there's so much vitriol aimed at them.
And also they've lost a lot of their targeting ability, thanks to Apple.
I just think about your situation where you're not going to events.
You're literally, you had a problem where Twitter was blocking you.
And so you couldn't really promote on Twitter.
Like your avenues for promoting the launch of Alice are narrowed by this stuff.
And how are you ever going to get eyeballs if things keep trending this way?
Because between just moderation issues
and then media companies ganging up to murder Facebook,
like it's taking away your options.
And I hate to defend Facebook.
Like I said, I'm a glutton for punishment apparently,
but it does seem ultimately like a loss for people like yourself.
Well, and I'll be honest, like the MadBotter.com is still blocked by Twitter.
Wow, really?
And I can't get anyone from Twitter to respond.
Man, I mean, it just hurts more than ever during the pandemic with nothing going on.
Right. And with no explanation.
I mean, there was a false positive for malware,
but that was resolved weeks ago and you fill out their form
and there's no one to respond to.
Ironically, they emailed me asking if I want to buy ads.
So I respond with my complaint to the email and they don't respond.
When you were Facebook advertising,
do you think you kind of targeted geeks
and that's why they reacted badly to the advertising?
Because they didn't want to see ads because they're, you know, tech geeks?
Yeah, I guess I did target kind of like geeks and engineering.
Yeah, because it seems like something that our kind care about.
But I don't think, you know, my family who uses Facebook just as a way to like keep tabs on people,
I don't think they care.
I think they like sometimes the advertising, they buy crap off of it.
You know, I just feel like there's so much bad blood right now
that unless I want to take on another job of moderating the comments and stuff on the Facebook page,
I'm not sure that I want to do it.
Yeah, they all are dumpster fires
and part of me does like watching them getting taken down a peg
until this mob comes for your favorite tech company and eventually will
because the reality is that anything, even to a degree, JB is a threat.
Now, we're not a threat at the scale Facebook or Google is,
so I don't think it'll ever be an issue for smaller content creators and platforms.
But truly, the problem here is that Facebook undermines their business model
and we are witnessing quite the hit job and it's a dirty one too.
You know, these insider leaks and stuff, it's dirty play.
And I don't know, I guess too, if you're maybe not in the media business as much as I remotely am,
maybe you don't see it because you don't quite understand the whole advertiser
and eyeballs dynamic and how that's life and death, perhaps.
But they'd know what they're doing.
And, you know, they slam Facebook for causing political division
and spreading misinformation when they're the kings of it.
You know, that's the ironic part.
Yeah, and, you know, just to undercut my own point,
I'm complaining that Facebook is too permissive.
Like Twitter, like somehow we got flagged at one point
and they won't do anything and there's no one to talk to, right?
Because Twitter's thing is we'd rather ban than have, you know, get negative blowback.
And my thing is, if you're going to start playing editor
and you're going to ban certain content,
you got to have a system in place for when you get it wrong.
Like in the old days of the internet,
what would happen is maybe your domain would show up on an email blacklist
and then, you know, a bunch of lazy email administrators who were one person
managing a server of a thousand users.
You're like, it was a long shot you were ever going to get off their list.
But this is 2021 and they built this thing in recent last years too.
They could have built this tooling such to solve this problem,
but it wasn't a priority.
It just didn't matter to them.
And that to me is arrogance because you create this communications platform
and then you begin to censor the communications platform.
Sometimes it's justified, sometimes it's not.
And you don't create any mechanism to solve for when it's not,
even though it's the nature of these kinds of tools.
It's arrogance.
And, you know, it shows you where their priorities are.
So whatever.
I just, I guess I wanted to bring it up because of our recent conversation
about kind of limited avenues for you to get the word out about a product launch
and clear and obvious public murdering we are watching happen right now.
You've kind of turned me around a little bit because for the little guy,
like, you know, when Facebook says hurting us is hurting small business,
they're obviously being disingenuous.
Yeah.
But it is kind of like, I gotta tell you,
I'm super unhappy that I had to split off the Alice stuff into a different domain
so I could post it on Twitter.
Right. That's crazy.
That was like, that was like a weekend of hell that I didn't need.
And I'm pretty sure that what happened with the Mad Botter site was two issues.
I think they didn't like the Thaleo giveaways.
Because if you go right now to the Mad Botter Twitter account
and click on the URL in the Twitter account, you can go to it.
You just can't post it.
But they come up with a warning that it might be spammy.
So I think because I don't use the corporate account very much
and I don't tend to promote things on that URL much.
And when I do, it's usually the, you know, whatever,
we were doing one for election day.
I think that's actually what they did.
Well, too bad there's no way for them to simply expose what filter.
Right. They could just say, we saw this post, it looks fake.
Tell us it's not fake. Right.
Do some sort of human challenge or something.
Make me fill out one of those stupid captions.
Right. Like make me fill out the form or help make me email someone
and have them like ask me.
Right.
Or could it be happening millions of times a minute?
And so they just can't simply deal with the scale.
Then that would suggest that the system isn't working properly.
So either they can't do it because of scale,
which means it's broken or they're arrogant pricks.
Well, the problem is if the if the action they take is you simply can't post
a small businesses domain, then.
The answer that we can't handle the complaints telling us it's a false
positive because it takes too long and we don't have the manpower.
That's that's not a good system. Right.
I mean, I had a thing I was talking on Twitter that this needs to be less like
a private company, more like a utility where the punishment needs to be that
you're you're not perma blocked.
You're like they are happy to solicit me for ad money.
That's the funny part.
Yeah. So it's it's like they didn't even properly flag it in their system that
like, you know, like the irony or maybe that you're a bad user even like it's
it's very it is seems very specific to like that link.
It's the domain. It's a it's there's a false positive on the URL.
But there's no way to actually talk to a human.
I mean, we used to joke years ago about the Google support Python script.
Right. There's just no way to talk to someone to say this is just a mistake.
Calm down. You know, let's let's work together on this.
Even if there is something you don't like, fine, we can change it.
But it's just like you can fill out this form and they explicitly tell you when
you fill out the form that they're not going to reply.
It's like dealing with the IRS.
It's like, how will you know?
Hey, your next paycheck will be garnished.
You'll figure it out.
Wow. I don't know.
You know, what we clearly need is decentralized social media and a
decentralized Web ad system.
I'm looking at Matrix.
I'm not joking.
I am. Well, that could be.
Yeah, that actually is true.
That Matrix is pretty great.
I do like it, but I don't think it's.
I don't know. I don't think it's the full solution.
I don't know. That's all that's all my defense I have for Facebook.
I just wanted to point it out that's what's happening.
And while maybe a net good for Facebook to go away, it will also have
ramifications that are extremely beneficial to the very companies that
are taking them out right now.
And that will be bad for small business.
But it is what it is.
Perhaps another solution will be born out of the ashes and be better than
ever like a phoenix rising my space, my space on the block chain.
By the time you're hearing this episode, the new quarterly report for
our members should be out with lots of good stuff in there.
If you're not a member yet and you want to support the show and get access
to our quarterly report, go to Coder QA dot co.
You support the show.
You get a limited ad feed and you get those quarterly reports that come
out every quarter.
And we appreciate that.
Coder QA dot co with a new quarterly coming out soon.
Go find Mike while he still is on Twitter at Dumanuco and his companies at
the Madwater Inc.
For how much longer?
Who knows?
Get it while it's still there.
Great.
I know, right?
We should be careful because we used to joke about this kind of stuff with
Apple and then they took it.
It wasn't it wasn't that funny.
Yeah.
And so also go to Alice Dot Dev while you still can.
Yeah.
Well, there you go.
There you go.
All right.
I'm over on the Twitters at Chris Elias.
The network is that Jupiter signal in the show is at Coder Radio Show
links to what we talked about today.
Yeah, that's their Coder dot show slash four three six.
That's where you find that.
And of course, you can also find our contact page over there.
We'd love to get your feedback.
It's a big part of the show.
Our RSS feed is linked there, too.
If you want to get the show every single week in the podcast app of your
choice.
And we'd love to have you join us live on a Monday.
We do it at noon Pacific, 3 p.m.
Eastern.
Get that fresh Coder live.
And then, of course, we always appreciate you downloading later on,
leaving reviews, anything like that in your podcast directory of choice.
Thanks so much for joining us on this week's episode of the Coder Radio
program.
We'll see you right back here next week.
