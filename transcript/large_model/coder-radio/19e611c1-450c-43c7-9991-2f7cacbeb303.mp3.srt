1
00:00:00,000 --> 00:00:07,000
This is Koda Radio, episode 353, for April 15th, 2019.

2
00:00:31,000 --> 00:00:43,000
Hello, and welcome to Koda Radio, Jupiter Broadcasting's weekly talk show that takes a pragmatic look at the art and business of software development and related technologies.

3
00:00:44,000 --> 00:00:55,000
My name is Wes, and I'm joined once again by our returning hero, the patron saint of Papa Wes, the one, the only, Mr. Michael Dominic.

4
00:00:55,000 --> 00:01:00,000
Happy Monday, Wes, and special thanks to Chris for filling in for me last week.

5
00:01:00,000 --> 00:01:07,000
You've had some other things to distract you. Most notably, you've been playing with an eGPU setup, and I've been following along on Twitter.

6
00:01:07,000 --> 00:01:10,000
We'll have some links to the threads of you showing off some of the pictures.

7
00:01:10,000 --> 00:01:24,000
Maybe you could tell us about what you've been doing, but before we do, maybe we need a little motivation, because not everyone's lucky enough to be in a position where having an eGPU enclosure or setup or anything like that makes sense, and people might not be familiar with just what the point is.

8
00:01:24,000 --> 00:01:30,000
Yes, so there's a few things here, right? This is more of a testing it out for a customer situation.

9
00:01:30,000 --> 00:01:41,000
So this is an eGPU that I have that I probably won't have for very long, but I did take advantage of the situation by testing it on actually all three operating systems, so Windows, Mac, and Linux.

10
00:01:41,000 --> 00:01:43,000
Oh, running the full gamut. I like it.

11
00:01:43,000 --> 00:01:51,000
Running the full gamut. Now, the question as to why you would want an eGPU, I think is pretty interesting, Wes. When you think eGPU, what pops into your head?

12
00:01:51,000 --> 00:01:56,000
Mostly I think about gaming or maybe some sort of machine learning application.

13
00:01:56,000 --> 00:02:07,000
So this use case is compiling some core ML stuff on the Mac. That is really interesting.

14
00:02:07,000 --> 00:02:19,000
My experience with the eGPU has been radically different on all three operating systems, and I guess we should start with the one that I actually intend to use on Mac OS.

15
00:02:19,000 --> 00:02:25,000
And maybe you could review a little bit, too, about just what tools are you using? What's your actual setup look like here?

16
00:02:25,000 --> 00:02:37,000
Yeah, so it's the OWC enclosure. It's one of their standard ones, and we'll have a link in the show notes to it, but I think they only make two, so it's the Thunderbolt one, right?

17
00:02:37,000 --> 00:02:46,000
The card is a AMD Sapphire RX 560. Yes, that's correct. I'm just looking at it right now. 560.

18
00:02:46,000 --> 00:02:58,000
That card has the advantage of being relatively affordable and not being NVIDIA, meaning it's compatible on Mac OS without any Voodoo.

19
00:02:58,000 --> 00:03:09,000
This configuration is also one of the configurations recommended by Apple. So this is a pretty vanilla configuration without going all Apple Store black magic.

20
00:03:09,000 --> 00:03:16,000
Right, you're not doing crazy stuff, and you're not modifying Kexex or going on strange forums and downloading random firmware.

21
00:03:16,000 --> 00:03:21,000
You do have to build the eGPU case, which my wife very kindly did for me.

22
00:03:21,000 --> 00:03:23,000
Aww, so supportive. That's amazing.

23
00:03:23,000 --> 00:03:27,000
Yes, but once we got the parts and put everything together, it's a pretty simple setup.

24
00:03:27,000 --> 00:03:31,000
So you did just assembling the actual structure that holds the graphics?

25
00:03:31,000 --> 00:03:37,000
Yeah, and then from there, once you have it assembled, it's basically a PCI slot. So it's pretty straightforward.

26
00:03:37,000 --> 00:03:46,000
I have to say, I have very mixed feelings on eGPUs for this kind of use.

27
00:03:46,000 --> 00:03:54,000
Because you get into this insane situation of your biggest concern becomes cables.

28
00:03:54,000 --> 00:04:00,000
I don't know if you know this, Wes, and I imagine many of our listeners don't because I didn't.

29
00:04:00,000 --> 00:04:06,000
So Thunderbolt is not Thunderbolt, and Thunderbolt 3 cables are not all made alike.

30
00:04:06,000 --> 00:04:16,000
Oh, no. I mean, it could be pretty confusing between Thunderbolt and USB-C and all the different sorts of stuff that can actually be bundled on those different sorts of connections and connectors.

31
00:04:16,000 --> 00:04:25,000
Yeah, so first off, USB-C cables are completely useless for this, but they are indistinguishable for Thunderbolt cables visually,

32
00:04:25,000 --> 00:04:30,000
other than a little lightning bolt that most manufacturers put on the ends of the cables.

33
00:04:30,000 --> 00:04:35,000
Right, we've got the same form factor from the outside, but negotiating and talking totally different protocols.

34
00:04:35,000 --> 00:04:38,000
Right, then there's Thunderbolt 2 and Thunderbolt 3.

35
00:04:38,000 --> 00:04:44,000
You want Thunderbolt 3, but even if you get Thunderbolt 3, there's such a thing as active and passive cables,

36
00:04:44,000 --> 00:04:48,000
and you lose 50% of your bandwidth if you don't get an active cable.

37
00:04:48,000 --> 00:04:51,000
I imagine the active cables are considerably more expensive?

38
00:04:51,000 --> 00:04:57,000
Considerably, yeah. And the truth is most long cables you will buy are passive,

39
00:04:57,000 --> 00:05:09,000
because there's this weird case where the passive cables can hit the 40 gigs per second if they're below, I think it's like half a meter.

40
00:05:09,000 --> 00:05:17,000
So not only are you limited in capacity, but you also have to start thinking really about how constrained your setup is going to be.

41
00:05:17,000 --> 00:05:19,000
Do you have enough room to still carry that bandwidth?

42
00:05:19,000 --> 00:05:29,000
Right, so for me, my setup is two constraints. If you want a longer cable, you're automatically buying a Thunderbolt 3 active cable,

43
00:05:29,000 --> 00:05:34,000
which is more expensive, and you have to be really, really careful that it's an active cable.

44
00:05:34,000 --> 00:05:37,000
So that just is a bad feeling all around.

45
00:05:37,000 --> 00:05:42,000
You can't just go casually in an evening, select some parts, get them there and all going. You need to put some thought into it.

46
00:05:42,000 --> 00:05:46,000
Yeah, this isn't like an arbitrary Amazon.com trip and you're done.

47
00:05:46,000 --> 00:05:49,000
Having said that, Amazon does of course sell all these parts.

48
00:05:49,000 --> 00:05:53,000
So next you get into like, okay, what cable is right for me?

49
00:05:53,000 --> 00:05:57,000
Well, if you're doing machine learning, I'm sorry, what card is right for me?

50
00:05:57,000 --> 00:06:01,000
The answer is always NVIDIA, unless you're on Mac OS.

51
00:06:01,000 --> 00:06:07,000
Is that just because there isn't good driver support for modern NVIDIA cards after Apple stopped really chipping them?

52
00:06:07,000 --> 00:06:11,000
Yeah, I mean, there is some accidental driver support.

53
00:06:11,000 --> 00:06:18,000
So like Mac, this is definitely going to be foreign to non-Mac people. Mac bakes in its graphics drivers.

54
00:06:18,000 --> 00:06:23,000
So if the driver isn't there, it's just not going to work.

55
00:06:23,000 --> 00:06:27,000
And there's a lot of, I mean, I would recommend you listen to, I think, ATP from a few months ago.

56
00:06:27,000 --> 00:06:33,000
There was like wild speculation and lots of rumors as to why Apple no longer ships NVIDIA parts.

57
00:06:33,000 --> 00:06:38,000
They used to, right? There used to be a choice between NVIDIA and AMD.

58
00:06:38,000 --> 00:06:46,000
I don't know if it's worth getting into that, but the rumor is that there was a certain MacBook Pro that shipped an NVIDIA chip.

59
00:06:46,000 --> 00:06:49,000
It was horribly deficient in terms of reliability.

60
00:06:49,000 --> 00:06:53,000
And after that, there was no more NVIDIA chips.

61
00:06:53,000 --> 00:06:58,000
But the CUDA platform is effectively the standard for machine learning right now.

62
00:06:58,000 --> 00:07:05,000
So if you're doing this on Mac OS, you're automatically taking, I won't say taking a hit,

63
00:07:05,000 --> 00:07:10,000
but you're trying to think, Wes, you're sub-optimal, right?

64
00:07:10,000 --> 00:07:15,000
Right. I know AMD has been putting lots of work to get more compliance and be able to do more of that.

65
00:07:15,000 --> 00:07:19,000
But you're already, as you're saying, you're already in a position where you're not using what you would ideally,

66
00:07:19,000 --> 00:07:22,000
given an infinite choice, configure your setup to be.

67
00:07:22,000 --> 00:07:27,000
Or if you were just like simply on Windows, right? It's not even an infinite choice.

68
00:07:27,000 --> 00:07:28,000
It's two choices.

69
00:07:28,000 --> 00:07:31,000
Yeah.

70
00:07:31,000 --> 00:07:35,000
So, OK, you're on Mac, you're basically constrained to AMD and please don't write in people that yes,

71
00:07:35,000 --> 00:07:41,000
you can get NVIDIA working if it is related in drivers to the old Mac Pros from 2011.

72
00:07:41,000 --> 00:07:50,000
I know, but that itself is limiting you to like a subset of that line.

73
00:07:50,000 --> 00:07:54,000
On Mac OS, it's actually a pretty simple process. You plug in the Thunderbolt cable.

74
00:07:54,000 --> 00:07:58,000
Great. The drivers are built in. Things just automatically work.

75
00:07:58,000 --> 00:08:00,000
That's awesome.

76
00:08:00,000 --> 00:08:04,000
On Windows, Wes, are you familiar with this operating system, Windows 10?

77
00:08:04,000 --> 00:08:05,000
Yes, I am, actually.

78
00:08:05,000 --> 00:08:06,000
You've heard of it?

79
00:08:06,000 --> 00:08:11,000
I don't currently have one installed or running, but I've certainly used it in other work capacities

80
00:08:11,000 --> 00:08:13,000
and helped other people configure it.

81
00:08:13,000 --> 00:08:18,000
Well, because it's Windows, you first, and it took me about an hour to figure this out,

82
00:08:18,000 --> 00:08:24,000
need a driver for the Thunderbolt controller to get the Thunderbolt controller to...

83
00:08:24,000 --> 00:08:25,000
Wait, what?

84
00:08:25,000 --> 00:08:26,000
Yeah.

85
00:08:26,000 --> 00:08:28,000
Like you have to go out and find this and install it yourself?

86
00:08:28,000 --> 00:08:31,000
I had to download a special Intel driver.

87
00:08:31,000 --> 00:08:34,000
Oh, man. It's 2019, right?

88
00:08:34,000 --> 00:08:37,000
Yeah, Windows Update couldn't find it.

89
00:08:37,000 --> 00:08:38,000
I mean, they've gotten a lot better, right?

90
00:08:38,000 --> 00:08:39,000
I mean, we should be clear.

91
00:08:39,000 --> 00:08:45,000
That's maybe why it's a little surprising is it's no longer the old Windows days of really crappy driver installations.

92
00:08:45,000 --> 00:08:50,000
Most stuff, or a lot of stuff anyway, kind of just works, but clearly not everything.

93
00:08:50,000 --> 00:08:55,000
You know what? They will never hit the glory that was Windows 3.

94
00:08:55,000 --> 00:08:58,000
So you had to do that.

95
00:08:58,000 --> 00:09:01,000
You had to go get the AMD driver.

96
00:09:01,000 --> 00:09:05,000
If you're a Windows user, all of this sounds pretty kind of banal to you.

97
00:09:05,000 --> 00:09:11,000
If you're not a Windows user and you're used to apps getting your way to glory, this is pretty annoying.

98
00:09:11,000 --> 00:09:18,000
But it does basically work flawlessly with a few weird exceptions.

99
00:09:18,000 --> 00:09:22,000
So after you've got the driver for the Thunderbolt installed, then it recognized that...

100
00:09:22,000 --> 00:09:24,000
Yeah, and restart about 400 times.

101
00:09:24,000 --> 00:09:25,000
And do you have to fiddle with this?

102
00:09:25,000 --> 00:09:28,000
I mean, do you have to have it plugged in at the right time?

103
00:09:28,000 --> 00:09:31,000
Do you plug it in before you boot or after you boot?

104
00:09:31,000 --> 00:09:37,000
So all three operating systems do not like it if you unplug the eGPU.

105
00:09:37,000 --> 00:09:40,000
Linux just crashes.

106
00:09:40,000 --> 00:09:42,000
Come on, man. Where's my hotswap PCI?

107
00:09:42,000 --> 00:09:44,000
No, no chance.

108
00:09:44,000 --> 00:09:48,000
Windows basically, I won't say blue screen, but locked up.

109
00:09:48,000 --> 00:09:51,000
Mac handled it about 50% of the times.

110
00:09:51,000 --> 00:09:55,000
But you could definitely see there was some distress on the screen.

111
00:09:55,000 --> 00:09:58,000
It would freeze up for a few minutes.

112
00:09:58,000 --> 00:10:00,000
It was clearly trying to cope here.

113
00:10:00,000 --> 00:10:03,000
Trying to cope and switch back to Intel, right?

114
00:10:03,000 --> 00:10:06,000
And we should say the hardware on the Mac side is a Mac Mini.

115
00:10:06,000 --> 00:10:11,000
And the hardware on the Windows and Linux side is a current System76 Starter Pro.

116
00:10:11,000 --> 00:10:14,000
So this isn't low-end hardware we're using.

117
00:10:14,000 --> 00:10:17,000
Right. You've got some decent machines here, perfectly capable of handling this.

118
00:10:17,000 --> 00:10:22,000
See, the test was a little different because I did what I had to do on Mac OS and it worked and I was happy.

119
00:10:22,000 --> 00:10:28,000
Windows, I naturally downloaded Steam because if you have Windows, isn't that the whole point of Windows?

120
00:10:28,000 --> 00:10:34,000
I thought so, yeah. It's the gaming operating system, at least when the game that you want doesn't run on Linux.

121
00:10:34,000 --> 00:10:38,000
That is where you could tell I tried one crappy cable and one good cable.

122
00:10:38,000 --> 00:10:42,000
And that's kind of where you can start seeing the difference.

123
00:10:42,000 --> 00:10:47,000
But Linux, I want to talk to you about a package that's very special to me.

124
00:10:47,000 --> 00:10:49,000
MisaUtils.

125
00:10:49,000 --> 00:10:50,000
All right, break that down.

126
00:10:50,000 --> 00:10:55,000
For people who aren't Linux adventurers, what is this package and why do I need it?

127
00:10:55,000 --> 00:11:03,000
Well, when Satan invented graphics drivers, he did not build them into Linux like he did into Mac OS.

128
00:11:03,000 --> 00:11:09,000
So MisaUtils is basically, I mean, it's a fair to say it's like the catch-all AMD graphics driver.

129
00:11:09,000 --> 00:11:15,000
I mean, I think it's wider than that. It's kind of just a lot of the open source graphics utilities, right?

130
00:11:15,000 --> 00:11:19,000
I mean, it's got all kinds of stuff integrated there and it's ways that multiple different graphics drivers

131
00:11:19,000 --> 00:11:23,000
or a layer that you can use to talk to different graphics chipsets.

132
00:11:23,000 --> 00:11:29,000
So there is a proprietary driver you could use from AMD or I should say a special.

133
00:11:29,000 --> 00:11:31,000
I think it actually may be partially open source.

134
00:11:31,000 --> 00:11:36,000
You could do that, Wes. You could also host your system by running their batch script and then have it not boot.

135
00:11:36,000 --> 00:11:38,000
Proprietary software is not...

136
00:11:38,000 --> 00:11:42,000
In this case, it was morally bankrupt. I had to wipe and pave. So, yeah.

137
00:11:42,000 --> 00:11:46,000
Wait, really? So you ran the batch script that they provided to try to get things set up and going?

138
00:11:46,000 --> 00:11:49,000
It asked for permission to reboot and then never booted again.

139
00:11:49,000 --> 00:11:53,000
Wow. Did you look at the script? I mean, like, what is it doing?

140
00:11:53,000 --> 00:11:58,000
No, it's huge. I mean, it's a batch script with like 50 files.

141
00:11:58,000 --> 00:12:03,000
Some of them were just like.debs, like running executables.

142
00:12:03,000 --> 00:12:11,000
I don't think I would be off base in saying this batch script is the equivalent of running like an XE installer in Windows, right?

143
00:12:11,000 --> 00:12:13,000
Like you run it, you give it admin permissions.

144
00:12:13,000 --> 00:12:16,000
Right. And then it's going to do whatever it needs to in theory to set up.

145
00:12:16,000 --> 00:12:18,000
And you hope you didn't just install a rootkit, right?

146
00:12:18,000 --> 00:12:19,000
Yes.

147
00:12:19,000 --> 00:12:21,000
So that destroyed my system.

148
00:12:21,000 --> 00:12:27,000
So I decided, why don't I just try the open source drivers?

149
00:12:27,000 --> 00:12:32,000
And they work excellently with the following exceptions.

150
00:12:32,000 --> 00:12:39,000
There is a big, big performance difference between Linux and Mac OS here, which, if you think about it, kind of makes sense, right?

151
00:12:39,000 --> 00:12:46,000
Because you're using generic open source drivers versus, you know, this is one of the Apple recommended cards.

152
00:12:46,000 --> 00:12:48,000
Yeah, right, right.

153
00:12:48,000 --> 00:12:52,000
They, in theory, have worked with their provider and got graphics drivers in there that are tuned,

154
00:12:52,000 --> 00:12:56,000
and they don't have the same sorts of qualms or problems with shipping proprietary stuff.

155
00:12:56,000 --> 00:13:04,000
I am going to use the colloquial term kernel panic here for just defining a system crash of any type,

156
00:13:04,000 --> 00:13:07,000
just to make this quicker because we've been on this for too long, I think.

157
00:13:07,000 --> 00:13:12,000
If any of the following happens under Linux, you are screwed.

158
00:13:12,000 --> 00:13:14,000
Your system falls asleep.

159
00:13:14,000 --> 00:13:16,000
Your external monitor dims.

160
00:13:16,000 --> 00:13:19,000
By dims, I mean turns off for the power settings.

161
00:13:19,000 --> 00:13:23,000
You accidentally or intentionally unplug the graphics driver.

162
00:13:23,000 --> 00:13:26,000
You lose power to the eGPU enclosure.

163
00:13:26,000 --> 00:13:30,000
All of these will cause what I'm going to colloquially call a kernel panic,

164
00:13:30,000 --> 00:13:35,000
meaning you have to forcibly turn off the computer and you'll lose whatever data wasn't saved.

165
00:13:35,000 --> 00:13:40,000
It does not handle, like, losing power, okay, right?

166
00:13:40,000 --> 00:13:43,000
It seems reasonable enough, like, okay, I get that, yeah.

167
00:13:43,000 --> 00:13:46,000
But going into suspension, causing...

168
00:13:46,000 --> 00:13:48,000
That's just normal, you know? That just happens.

169
00:13:48,000 --> 00:13:53,000
And then I found that out by accident because I had to, like, go downstairs from my home office

170
00:13:53,000 --> 00:13:56,000
and get a glass of water and use the bathroom.

171
00:13:56,000 --> 00:13:59,000
And I guess five minutes went by, right?

172
00:13:59,000 --> 00:14:01,000
So...

173
00:14:01,000 --> 00:14:03,000
And then probably, too, right?

174
00:14:03,000 --> 00:14:08,000
Like, if you knew that, you could have put your system in a state that could recover,

175
00:14:08,000 --> 00:14:11,000
but most likely you probably had some stuff open maybe not totally saved

176
00:14:11,000 --> 00:14:13,000
or that you were in the middle of progress.

177
00:14:13,000 --> 00:14:15,000
Do you just have to reboot the whole machine then?

178
00:14:15,000 --> 00:14:16,000
You reboot the whole machine.

179
00:14:16,000 --> 00:14:17,000
I mean, the workaround is pretty obvious.

180
00:14:17,000 --> 00:14:20,000
You don't allow it to turn off external monitors or to hibernate.

181
00:14:20,000 --> 00:14:25,000
That's not an ideal solution by any stretch.

182
00:14:25,000 --> 00:14:29,000
What I would say is, you know, I'm going to do a whole write-up

183
00:14:29,000 --> 00:14:37,000
and I think we're going to cover eGPUs in more detail with, like, specs and benchmarks in a few weeks.

184
00:14:37,000 --> 00:14:38,000
Oh, yeah.

185
00:14:38,000 --> 00:14:44,000
I am going to continue for the next couple weeks while I still have this hardware trying it out on Linux.

186
00:14:44,000 --> 00:14:49,000
I'm not sure that I can really recommend this if you're, like, a desktop Linux user

187
00:14:49,000 --> 00:14:55,000
because just there's so many ways where your system just locks up and you lose your unsaved work.

188
00:14:55,000 --> 00:14:58,000
I just don't think the experience is good enough right now.

189
00:14:58,000 --> 00:15:04,000
And I'm sad because this is the answer for you buy a laptop,

190
00:15:04,000 --> 00:15:08,000
but you want to use it as a, like, workstation-class machine every once in a while

191
00:15:08,000 --> 00:15:11,000
to do, like, TensorFlow or whatever.

192
00:15:11,000 --> 00:15:14,000
Especially because under Linux, you don't have that weird NVIDIA bar, right?

193
00:15:14,000 --> 00:15:17,000
You could use NVIDIA and CUDA.

194
00:15:17,000 --> 00:15:19,000
Yeah, absolutely.

195
00:15:19,000 --> 00:15:25,000
I mean, I'm hoping that, like, Ubuntu 19.04 and that generation of desktop OS fix this problem.

196
00:15:25,000 --> 00:15:26,000
I'm running 18.10.

197
00:15:26,000 --> 00:15:29,000
Yeah, it's an interesting question of, like, what's the right—

198
00:15:29,000 --> 00:15:35,000
I imagine at some point with enough effort, there's, like, a tuning or a configuration you can get that'll work well,

199
00:15:35,000 --> 00:15:37,000
as is usually the case for Linux.

200
00:15:37,000 --> 00:15:40,000
The question is, how arcane is that and is it worth the cost?

201
00:15:40,000 --> 00:15:43,000
Well, even under Mac and Windows, like, the eGPU support,

202
00:15:43,000 --> 00:15:48,000
you are in the cutting edge of, like, guys in their basements writing on forums.

203
00:15:48,000 --> 00:15:51,000
It still seems kind of crazy to me that we can do that.

204
00:15:51,000 --> 00:15:55,000
You know, we can have a graphics card just totally separate, isolated outside the system,

205
00:15:55,000 --> 00:15:58,000
and then plug it in and it shows up like it's on PCI.

206
00:15:58,000 --> 00:15:59,000
That's crazy.

207
00:15:59,000 --> 00:16:03,000
Well, I mean, just for the setup I have now, having a relatively affordable Mac Mini

208
00:16:03,000 --> 00:16:08,000
and an affordable Linux laptop and just being able to share the graphics card between them at will is—

209
00:16:08,000 --> 00:16:11,000
Boom. Yeah, that is huge.

210
00:16:11,000 --> 00:16:12,000
That's huge, right?

211
00:16:12,000 --> 00:16:16,000
And if I had, like, a Windows, you know, partition, it could also be shared there.

212
00:16:16,000 --> 00:16:18,000
I mean, that's not nothing, right?

213
00:16:18,000 --> 00:16:23,000
Because the graphics card is the thing that goes out of date on your computer the quickest.

214
00:16:23,000 --> 00:16:28,000
You know, and realistically, if you are just willing to make on the Linux side—

215
00:16:28,000 --> 00:16:32,000
Oh, I should add that that problem exists under Windows too.

216
00:16:32,000 --> 00:16:33,000
Wait, really?

217
00:16:33,000 --> 00:16:35,000
Yeah, if it goes into suspension, it may lock up.

218
00:16:35,000 --> 00:16:38,000
It didn't do it every time where it does under Ubuntu.

219
00:16:38,000 --> 00:16:42,000
And I should be fair, for the purposes of this, it's pop OS, not Ubuntu,

220
00:16:42,000 --> 00:16:45,000
but I would highly doubt that Ubuntu doesn't behave the same way

221
00:16:45,000 --> 00:16:49,000
because, you know, pop is basically Ubuntu right now.

222
00:16:49,000 --> 00:16:57,000
Mac somehow handles it, and I have a sick feeling it's because Apple has some weird drivers they wrote.

223
00:16:57,000 --> 00:17:02,000
Right, this is like their advantage on, like, they write their own drivers.

224
00:17:02,000 --> 00:17:06,000
Yeah, yeah, I mean, there's a lot of advantages when you can control the whole thing

225
00:17:06,000 --> 00:17:08,000
and you can think of the product as a whole, right?

226
00:17:08,000 --> 00:17:13,000
Right, but having said all that, I mean, if you are willing to just never let your computer go to sleep

227
00:17:13,000 --> 00:17:18,000
or, like, turn off a monitor, which there is such a thing as screen burn, so I don't know,

228
00:17:18,000 --> 00:17:22,000
or, like, turn it off correctly, like, shut it down, it works.

229
00:17:22,000 --> 00:17:27,000
Like, if you're not, like, one of these, I have to have, you know, X months of uptime guys,

230
00:17:27,000 --> 00:17:35,000
this totally works, and I think in, like, six months this is going to be the way most people should do things.

231
00:17:35,000 --> 00:17:41,000
I am not a huge gamer, so I imagine there is some big tax on gaming performance,

232
00:17:41,000 --> 00:17:47,000
but if you just, like, occasionally need to, like, compile a core ML library or a TensorFlow library,

233
00:17:47,000 --> 00:17:51,000
wow, this is a very cost-effective and convenient way to do that.

234
00:17:51,000 --> 00:17:53,000
So take it for what it's worth.

235
00:17:53,000 --> 00:17:58,000
I love it. That is a good summary, and I appreciate, you know, we've talked to some other people on the network

236
00:17:58,000 --> 00:18:02,000
about playing with eGPUs. I know Chris has had his adventures as well, but as you said,

237
00:18:02,000 --> 00:18:05,000
it really is sort of the forefront, so it's fun to have an experience report

238
00:18:05,000 --> 00:18:08,000
from someone with totally different motivations.

239
00:18:08,000 --> 00:18:13,000
Speaking of illicit motivations, can you tell me about stepping away from the Rails project, Wes?

240
00:18:13,000 --> 00:18:15,000
I thought you were a core member at this point.

241
00:18:15,000 --> 00:18:20,000
Oh, no, you know me and Ruby. Actually, who you're thinking of is Sean Griffin, Mike.

242
00:18:20,000 --> 00:18:22,000
I always get you guys confused. I'm sorry.

243
00:18:22,000 --> 00:18:24,000
I know. That'll happen. Yeah.

244
00:18:24,000 --> 00:18:28,000
So it's been more than six years since his first commit to Ruby on Rails,

245
00:18:28,000 --> 00:18:32,000
and I think this article came by way of the Coder Radio subreddit,

246
00:18:32,000 --> 00:18:35,000
where we find many interesting topics and feedback items.

247
00:18:35,000 --> 00:18:43,000
So you can go to coderradio.reddit.com, or even easier, just go to coder.show.com if you want to get in touch with us.

248
00:18:43,000 --> 00:18:48,000
Back to Sean. Really, this stood out to me, one, just because, I mean, it's interesting to follow the stories of developers,

249
00:18:48,000 --> 00:18:54,000
particularly who end up working on open source projects and have been paid by companies to do so.

250
00:18:54,000 --> 00:19:00,000
What also, so we start with that, and then also sort of just the Rails topic that's perennial on this show.

251
00:19:00,000 --> 00:19:04,000
But where he's going is interesting, too, and I think really speaks to you, Mike,

252
00:19:04,000 --> 00:19:10,000
because you've been playing with both Ruby and, I mean, we all know this is coming, Rust.

253
00:19:10,000 --> 00:19:14,000
So if you weren't familiar, he's actually been, he's been playing around in Rust for a while.

254
00:19:14,000 --> 00:19:18,000
He created Diesel, which is a really interesting ORM for Rust.

255
00:19:18,000 --> 00:19:24,000
Yes, that is exactly what Rust needs. Let us bring the inefficiencies of ORMs to Rust.

256
00:19:24,000 --> 00:19:26,000
We will pollute them, oh, with my life.

257
00:19:26,000 --> 00:19:32,000
Oh, Mike, yeah, there's no taking that off the record. I think that's indelibly printed on the airwaves.

258
00:19:32,000 --> 00:19:37,000
I'm very curious if anyone's listening. First of all, I think this makes a ton of sense.

259
00:19:37,000 --> 00:19:40,000
Rails, one of the reasons I recommend it is it's super mature.

260
00:19:40,000 --> 00:19:45,000
But if you are a hardcore open source contributor, one of the reasons it might be, you know,

261
00:19:45,000 --> 00:19:51,000
just a touch boring for you is it's super mature, right? Like, what angle?

262
00:19:51,000 --> 00:19:53,000
I mean, everything you said was true, Wes.

263
00:19:53,000 --> 00:19:57,000
Can't you, like, make a mistake every once in a while to make my life easier?

264
00:19:57,000 --> 00:19:59,000
I'll try. I mean, don't worry, there'll be plenty of opportunities for that.

265
00:19:59,000 --> 00:20:04,000
So let me put my tinfoil hat on. Like, Sean Griffin, great developer.

266
00:20:04,000 --> 00:20:09,000
I don't know him at all personally, but I literally use this code, so yay.

267
00:20:09,000 --> 00:20:16,000
I've noticed kind of a lot over the last year or two of, like, core Rails contributors going to things like Elixir.

268
00:20:16,000 --> 00:20:20,000
And I don't want to get you excited, but, like, Haskell Enclosure.

269
00:20:20,000 --> 00:20:31,000
And now Rust. Is there, like, some sort of, like, are you, like, John the Baptist for, you know, all these functional languages?

270
00:20:31,000 --> 00:20:34,000
Or am I just seeing something that doesn't exist?

271
00:20:34,000 --> 00:20:40,000
I think the biggest one is actually Elixir, right? Or I guess I should say Phoenix because that's the framework.

272
00:20:40,000 --> 00:20:42,000
Well, I mean, maybe some of this could be explained, too.

273
00:20:42,000 --> 00:20:47,000
I mean, you had a tweet out earlier this week talking about some of the fun you've been having with Rust.

274
00:20:47,000 --> 00:20:50,000
And you're using it in combination with Ruby.

275
00:20:50,000 --> 00:20:56,000
I think it just shows that there's areas that Ruby just doesn't always make sense for.

276
00:20:56,000 --> 00:20:57,000
Yeah.

277
00:20:57,000 --> 00:21:01,000
But it does have a particular style, a community style.

278
00:21:01,000 --> 00:21:05,000
So I think when people leave it, there's going to be certain languages that appeal to them more.

279
00:21:05,000 --> 00:21:08,000
And it's probably not going to be Java.

280
00:21:08,000 --> 00:21:10,000
Java. What year is it?

281
00:21:10,000 --> 00:21:14,000
Yeah, I know. But, I mean, it's just, you know, it's still the favorite out there.

282
00:21:14,000 --> 00:21:21,000
I will say, like, I almost feel like, and I know we're going to get hate mail because this is definitely a technically incorrect statement.

283
00:21:21,000 --> 00:21:27,000
I almost feel like Ruby is a complete language and Rails is a complete framework at this point.

284
00:21:27,000 --> 00:21:29,000
Yes. Yeah. I mean, I think you're right about that.

285
00:21:29,000 --> 00:21:31,000
There's not a lot missing.

286
00:21:31,000 --> 00:21:37,000
There might be reasons that it's not a good fit for your particular project, but it's certainly possible to do just about anything.

287
00:21:37,000 --> 00:21:41,000
Right. I mean, there are some interesting stuff regarding performance going around.

288
00:21:41,000 --> 00:21:45,000
And if you're, like, a real language nerd, you could be more interested in that than I am.

289
00:21:45,000 --> 00:21:47,000
But, like, the truth is Ruby is slow.

290
00:21:47,000 --> 00:21:52,000
It's going to be slow compared to, I don't know, Rust.

291
00:21:52,000 --> 00:21:55,000
But FFI, baby. FFI.

292
00:21:55,000 --> 00:22:00,000
Just FFI your way to glory and you're good.

293
00:22:00,000 --> 00:22:07,000
As a Clojure guy, do you think maybe Mr. Sean should be looking at Clojure?

294
00:22:07,000 --> 00:22:09,000
It really depends on the problem space.

295
00:22:09,000 --> 00:22:15,000
I feel like part of the attraction, and maybe I'm wrong about this, but part of the attraction for people exploring Rust,

296
00:22:15,000 --> 00:22:20,000
particularly coming from something like Python or Ruby, is, you know, it's just at such a different language level, right?

297
00:22:20,000 --> 00:22:22,000
Suddenly the garbage collector is gone.

298
00:22:22,000 --> 00:22:29,000
You've got more explicit ways to manage memory and you have much tighter runtime performance, or at least you can.

299
00:22:29,000 --> 00:22:31,000
You have a lot more control over that stuff.

300
00:22:31,000 --> 00:22:37,000
But I think the difference, and obviously Sean's helping as he's now involved with a lot of crates.io stuff,

301
00:22:37,000 --> 00:22:40,000
is that Rust has a really supportive community, right?

302
00:22:40,000 --> 00:22:45,000
I don't know that if you started doing this in C or C++ would you have nearly the same amount of stuff.

303
00:22:45,000 --> 00:22:49,000
And Rust feels like, and we've talked about this on the show in some recent episodes,

304
00:22:49,000 --> 00:22:53,000
it's kind of at a weird little level, maybe slightly higher level than that,

305
00:22:53,000 --> 00:22:58,000
where of course you can target a lot of that stuff that really needs tight, totally compiled embedded code,

306
00:22:58,000 --> 00:23:01,000
but it also has a lot of modern features and flexibility.

307
00:23:01,000 --> 00:23:07,000
So you can write stuff that handles data in a rich, abstracted way that you might be more familiar from Ruby.

308
00:23:07,000 --> 00:23:11,000
I mean, it's going to be totally different, but it's not going to be the same as doing that in C.

309
00:23:11,000 --> 00:23:16,000
There's so many things you just said that on the Rust subreddit would be bad.

310
00:23:16,000 --> 00:23:21,000
So I definitely agree with you that the Rust community is hyper welcoming.

311
00:23:21,000 --> 00:23:24,000
Like, you know, our friend L, right?

312
00:23:24,000 --> 00:23:28,000
L from Linux Academy is kind of big on it's okay to be new.

313
00:23:28,000 --> 00:23:33,000
I would almost encourage you developers to gently reach out to the Rust community

314
00:23:33,000 --> 00:23:36,000
because one, they know their language is kind of weird.

315
00:23:36,000 --> 00:23:43,000
And I can't speak for the entire Objective-C community because I haven't talked to Rick and Susan yet.

316
00:23:43,000 --> 00:23:49,000
But as 33% of the current Objective-C community, I can tell you, we will yell at you.

317
00:23:49,000 --> 00:23:50,000
Right?

318
00:23:50,000 --> 00:23:56,000
You know, we're just going to yell at you if you start talking to us about like, you know, I might cry.

319
00:23:56,000 --> 00:23:58,000
I don't want to get into that.

320
00:23:58,000 --> 00:24:01,000
But Rust is like, yeah, we know this is weird. Don't worry.

321
00:24:01,000 --> 00:24:05,000
Now, I'm a little confused as to why you would want an object relational mapper in Rust,

322
00:24:05,000 --> 00:24:10,000
but I guess you could do web development.

323
00:24:10,000 --> 00:24:15,000
Like, it's totally not the way I see Rust in my kind of tool chest.

324
00:24:15,000 --> 00:24:21,000
But certainly, like, I think the audience of the show, I think people who would pay for Linux Academy,

325
00:24:21,000 --> 00:24:29,000
if you are looking to get involved in like an open source community, but you don't want to get yelled at,

326
00:24:29,000 --> 00:24:31,000
Rust is a nice place to go.

327
00:24:31,000 --> 00:24:34,000
I mean, there are many commuters, so I don't mean to like paint.

328
00:24:34,000 --> 00:24:37,000
Like, you know what, the Ruby community, I will give them this in the Rails community,

329
00:24:37,000 --> 00:24:43,000
have always been hyper inclusive and hyper nice, most of the time.

330
00:24:43,000 --> 00:24:48,000
But, you know, there are some communities that aren't like that, right?

331
00:24:48,000 --> 00:24:56,000
And I think you and I have both seen just being around and on the Internet that like the Rust people are very,

332
00:24:56,000 --> 00:24:59,000
what's the right word?

333
00:24:59,000 --> 00:25:06,000
Not forgiving, but very, like if you mess something up and like if you send a pull request that's wrong,

334
00:25:06,000 --> 00:25:11,000
instead of just saying, rejected, you suck, they will actually like help you fix it.

335
00:25:11,000 --> 00:25:16,000
Yeah, it does seem like they're, because as you said, they know they're coming, you know, they've built something new here.

336
00:25:16,000 --> 00:25:22,000
There's not, you know, Rust is combining lots of different stuff into something that feels like its own thing.

337
00:25:22,000 --> 00:25:26,000
It feels like the whole community gets that you need to have some support here.

338
00:25:26,000 --> 00:25:30,000
It's not like, OK, well, you know, I've already done Java, now I'm learning Kotlin.

339
00:25:30,000 --> 00:25:32,000
You should be able to figure that out. They've got great documentation.

340
00:25:32,000 --> 00:25:37,000
Rust, it's a little bit different of a model, which is probably why it's so interesting, too, right?

341
00:25:37,000 --> 00:25:42,000
Because the more languages you learn, there's differences.

342
00:25:42,000 --> 00:25:46,000
Sure, they're all turning complete. Sure, you can do all the same tasks, at least almost all the time.

343
00:25:46,000 --> 00:25:51,000
But I really think, and this is a perfect segue to an article I really wanted to talk about today,

344
00:25:51,000 --> 00:25:58,000
over on Thorsten Ball's blog, and the title is Learn More Programming Languages, Even If You Won't Use Them.

345
00:25:58,000 --> 00:26:03,000
And I just really, this sentiment really resonates with me because, like, Rust is a good example.

346
00:26:03,000 --> 00:26:07,000
You just learn, you just start thinking about stuff in different ways.

347
00:26:07,000 --> 00:26:09,000
And we already know this from human language, right?

348
00:26:09,000 --> 00:26:15,000
There's all kinds of research showing the languages we speak and learn shape the way not only that we communicate,

349
00:26:15,000 --> 00:26:17,000
but the way that we think about things.

350
00:26:17,000 --> 00:26:21,000
Yeah, that's very true. I mean, I can swear at people who don't like Objective C in three languages.

351
00:26:21,000 --> 00:26:25,000
Yeah, right. And I feel like you start thinking about things differently.

352
00:26:25,000 --> 00:26:32,000
One thing I notice a lot about people coming over maybe learning Clojure or other functional programming languages

353
00:26:32,000 --> 00:26:36,000
is there's a big mental shift that you have to go through.

354
00:26:36,000 --> 00:26:42,000
You don't have imperative techniques or iteration or for-loops or any of the tools that you may have grown up on

355
00:26:42,000 --> 00:26:43,000
and are already familiar with.

356
00:26:43,000 --> 00:26:45,000
That's right. There's no for-loop.

357
00:26:45,000 --> 00:26:46,000
No for-loop. It's gone.

358
00:26:46,000 --> 00:26:47,000
Suck it up.

359
00:26:47,000 --> 00:26:50,000
Sure, there might be a for-macro, but that's different, all right?

360
00:26:50,000 --> 00:26:52,000
At first, it might be painful.

361
00:26:52,000 --> 00:26:55,000
You know, you're thinking, how do I wrap my head around this?

362
00:26:55,000 --> 00:26:58,000
It's uncomfortable. Each thing is more work than it feels like it needs to be.

363
00:26:58,000 --> 00:27:03,000
Why am I doing these arcane invocations of maps and filters and reduce?

364
00:27:03,000 --> 00:27:08,000
But afterwards, even if that's not the right language, even if you learn Haskell and it just doesn't make sense

365
00:27:08,000 --> 00:27:14,000
or your ops team really doesn't want to deploy it or whatever the reason that you don't think you'll actually ever really use it,

366
00:27:14,000 --> 00:27:16,000
you've learned a new way to model problems.

367
00:27:16,000 --> 00:27:20,000
And like, just look at Java, right, with all the stream stuff that got added.

368
00:27:20,000 --> 00:27:24,000
Those tools, even if it's in slightly different ways, are still totally relevant

369
00:27:24,000 --> 00:27:28,000
and might show you techniques that could be useful, even if it's not in that home language.

370
00:27:28,000 --> 00:27:31,000
Yeah, I know that. I mean, there's like so much here, right?

371
00:27:31,000 --> 00:27:33,000
I think it's also kind of what you're hitting on.

372
00:27:33,000 --> 00:27:35,000
It's important to learn different types of languages, right?

373
00:27:35,000 --> 00:27:40,000
Like if you're a C-Sharp dev, going and learning Java, while not a bad thing by any stretch,

374
00:27:40,000 --> 00:27:44,000
is not the same as like, maybe you should like look at F-Sharp, right,

375
00:27:44,000 --> 00:27:47,000
or one of the more functional type languages.

376
00:27:47,000 --> 00:27:49,000
Or if you hate yourself closure.

377
00:27:49,000 --> 00:27:50,000
I mean, oh, sorry.

378
00:27:50,000 --> 00:27:51,000
You're absolutely right.

379
00:27:51,000 --> 00:27:55,000
I mean, probably you should learn, I don't know, it depends on how broad you want to go.

380
00:27:55,000 --> 00:27:58,000
But try to sample from everything, right?

381
00:27:58,000 --> 00:27:59,000
Try a stack-based language.

382
00:27:59,000 --> 00:28:01,000
Play with something like Forth.

383
00:28:01,000 --> 00:28:05,000
Maybe go try something like Prologue.

384
00:28:05,000 --> 00:28:09,000
Definitely take an ML language for a spin like Haskell or OCaml.

385
00:28:09,000 --> 00:28:11,000
And try something like Elixir, right?

386
00:28:11,000 --> 00:28:13,000
There's all sorts of different little paradigms.

387
00:28:13,000 --> 00:28:17,000
And regardless of how popular they might be, if you're interested in how computers work,

388
00:28:17,000 --> 00:28:21,000
if you want to be a better programmer, this is no guarantee, certainly not sufficient,

389
00:28:21,000 --> 00:28:23,000
but I would say it might be necessary.

390
00:28:23,000 --> 00:28:24,000
I would say it's absolutely necessary.

391
00:28:24,000 --> 00:28:26,000
I don't think you need to, I wouldn't hedge that one, right?

392
00:28:26,000 --> 00:28:29,000
Like, so there's also like differences in hardness, right?

393
00:28:29,000 --> 00:28:32,000
Like for instance, Go and Rust are often compared.

394
00:28:32,000 --> 00:28:33,000
I have played with both.

395
00:28:33,000 --> 00:28:37,000
I think Rust is definitely a lot harder than Go.

396
00:28:37,000 --> 00:28:43,000
But it's because it's so much more different than what you expect coming from the C family.

397
00:28:43,000 --> 00:28:50,000
Of course, C, C++, C, I guess C sharp, but I have a lot of issues with that.

398
00:28:50,000 --> 00:28:52,000
It's the differences teach you, right?

399
00:28:52,000 --> 00:28:54,000
Like just like when Wes talks about Clojure,

400
00:28:54,000 --> 00:28:58,000
I start levitating because I'm being elevated onto a higher plane.

401
00:28:58,000 --> 00:29:01,000
When I mentioned Objective-C, I mean, you smell the sulfur, right?

402
00:29:01,000 --> 00:29:02,000
It's like ancient conjuring.

403
00:29:02,000 --> 00:29:05,000
Ooh, it's strong today.

404
00:29:05,000 --> 00:29:08,000
Now, what about like if you're a Ruby developer learning Python?

405
00:29:08,000 --> 00:29:11,000
See to me that, I don't know, I'll let you go first on that.

406
00:29:11,000 --> 00:29:13,000
Yeah, no, I mean, I do think you're right.

407
00:29:13,000 --> 00:29:15,000
There's less to be gained there, not nothing.

408
00:29:15,000 --> 00:29:18,000
And you might discover that you prefer that tool, but you're right.

409
00:29:18,000 --> 00:29:20,000
It is important to not just learn different languages,

410
00:29:20,000 --> 00:29:22,000
but learn different programming languages,

411
00:29:22,000 --> 00:29:24,000
different heritages of programming languages,

412
00:29:24,000 --> 00:29:29,000
so that you get those different styles of thinking and modeling about problems.

413
00:29:29,000 --> 00:29:32,000
And you might just discover that you're totally charmed with it.

414
00:29:32,000 --> 00:29:34,000
Like when I discovered that I really liked Clojure,

415
00:29:34,000 --> 00:29:38,000
sure, I'd done some like scheme in college and played with it every now and again

416
00:29:38,000 --> 00:29:41,000
and would do Python and occasionally think back to like,

417
00:29:41,000 --> 00:29:44,000
oh, this kind of feels a little bit kind of functional from school that I remember.

418
00:29:44,000 --> 00:29:46,000
And then I just started playing with it one day

419
00:29:46,000 --> 00:29:50,000
and it's changed the way I think about all kinds of different programming.

420
00:29:50,000 --> 00:29:53,000
And same thing when you discover, you know, when maybe you're learning C

421
00:29:53,000 --> 00:29:56,000
and you have never done anything at that level of the stack

422
00:29:56,000 --> 00:29:57,000
and suddenly you're thinking about assembly

423
00:29:57,000 --> 00:29:59,000
and you're really getting to know memory

424
00:29:59,000 --> 00:30:01,000
and the model of the machine that C imposes on you.

425
00:30:01,000 --> 00:30:04,000
All of that stuff is worth doing.

426
00:30:04,000 --> 00:30:07,000
And I guess I just get a little worried sometimes,

427
00:30:07,000 --> 00:30:11,000
especially for like the world seems to think of software development

428
00:30:11,000 --> 00:30:14,000
as like enterprise feature-based software development.

429
00:30:14,000 --> 00:30:16,000
And that's fine. That's really important.

430
00:30:16,000 --> 00:30:17,000
That's a huge motivator.

431
00:30:17,000 --> 00:30:21,000
It pays all kinds of people's salaries and makes lots of products that we all use.

432
00:30:21,000 --> 00:30:24,000
But I think you can't wholly separate that from computer science

433
00:30:24,000 --> 00:30:27,000
and computation and thinking about that.

434
00:30:27,000 --> 00:30:31,000
And if you just blindly learn one language and apply it in the same way,

435
00:30:31,000 --> 00:30:33,000
you're just a practitioner.

436
00:30:33,000 --> 00:30:38,000
And I think really the value our field can bring is that we're actively,

437
00:30:38,000 --> 00:30:39,000
it's a creative process.

438
00:30:39,000 --> 00:30:43,000
It's not the same as just like blindly applying the standard configuration to a switch.

439
00:30:43,000 --> 00:30:45,000
Nothing against network engineers, they're incredible

440
00:30:45,000 --> 00:30:48,000
and they have lots of stuff that isn't like that too.

441
00:30:48,000 --> 00:30:51,000
But you need, we need the human side of creativity.

442
00:30:51,000 --> 00:30:54,000
And for that, you need a well-rounded and educated background.

443
00:30:54,000 --> 00:30:58,000
Yeah. Also, you know, your language of choice might, I don't know,

444
00:30:58,000 --> 00:31:00,000
get replaced by something terrible.

445
00:31:00,000 --> 00:31:03,000
Just, you know, I don't know what I could do for you here.

446
00:31:03,000 --> 00:31:06,000
No, no, no one knows Swift.

447
00:31:06,000 --> 00:31:11,000
Yeah. Everybody should learn Haskell because then you truly attain a godlike status.

448
00:31:11,000 --> 00:31:13,000
Right. And you get to claim that you learned Haskell, right?

449
00:31:13,000 --> 00:31:14,000
You can just lower that over.

450
00:31:14,000 --> 00:31:17,000
And then you can change your profile pic to the old Hercules 90s TV show.

451
00:31:17,000 --> 00:31:21,000
And if you get that reference, congratulations.

452
00:31:21,000 --> 00:31:23,000
You should have learned Objective-C. You're old enough.

453
00:31:23,000 --> 00:31:26,000
Everyone's old enough for Objective-C, Mike.

454
00:31:26,000 --> 00:31:28,000
Come on. I thought that was the new hotness.

455
00:31:28,000 --> 00:31:32,000
You know, one day I'm going to write a framework in Objective-C just to spite you guys.

456
00:31:32,000 --> 00:31:34,000
I'm going to call it brackets.

457
00:31:34,000 --> 00:31:36,000
All the brackets.

458
00:31:36,000 --> 00:31:39,000
Speaking of things that are going to annoy the audience.

459
00:31:39,000 --> 00:31:40,000
How do you feel?

460
00:31:40,000 --> 00:31:42,000
But, you know, what is Linux?

461
00:31:42,000 --> 00:31:46,000
I loved your episode last week of Linux Unplugged,

462
00:31:46,000 --> 00:31:52,000
where you guys were meditating on what exactly is Linux?

463
00:31:52,000 --> 00:31:54,000
What's the future of desktop Linux?

464
00:31:54,000 --> 00:31:57,000
I wish I had called in because I have the answer, Wes.

465
00:31:57,000 --> 00:32:01,000
It's called Windows LDAs.

466
00:32:01,000 --> 00:32:03,000
You can run Bash.

467
00:32:03,000 --> 00:32:06,000
You can run Ruby.

468
00:32:06,000 --> 00:32:08,000
You can run Haskell.

469
00:32:08,000 --> 00:32:14,000
I think Windows 10 is one of the more interesting Linux distributions I've seen in a long time.

470
00:32:14,000 --> 00:32:16,000
Are you just trying to troll me, Mr. Dominic?

471
00:32:16,000 --> 00:32:17,000
No.

472
00:32:17,000 --> 00:32:19,000
So I have been using the Penguin.

473
00:32:19,000 --> 00:32:23,000
It's spelled – I actually meant to ask them why they spell it P-E-N

474
00:32:23,000 --> 00:32:27,000
instead of, you know, the way I think it should be spelled.

475
00:32:27,000 --> 00:32:28,000
So it is a commercial.

476
00:32:28,000 --> 00:32:31,000
It's 10 bucks on the Microsoft Store.

477
00:32:31,000 --> 00:32:37,000
Basically, version of the Windows Linux subsystem, right?

478
00:32:37,000 --> 00:32:38,000
That's what it is.

479
00:32:38,000 --> 00:32:39,000
Right.

480
00:32:39,000 --> 00:32:44,000
So the mode of the NT kernel that can emulate a whole bunch of Linux system calls,

481
00:32:44,000 --> 00:32:50,000
and then you can run all kinds of software that targets Linux natively on Windows.

482
00:32:50,000 --> 00:32:51,000
That's right.

483
00:32:51,000 --> 00:32:55,000
And I have to say, it works.

484
00:32:55,000 --> 00:32:58,000
Now, for those who don't know, maybe we should take just like a little skip back.

485
00:32:58,000 --> 00:33:01,000
So there are – the Windows Linux – Windows subsystem for Linux,

486
00:33:01,000 --> 00:33:05,000
which the name is hard for me to say for some reason.

487
00:33:05,000 --> 00:33:06,000
WSL.

488
00:33:06,000 --> 00:33:07,000
Just go with that.

489
00:33:07,000 --> 00:33:10,000
So WSL has multiple flavors, right?

490
00:33:10,000 --> 00:33:16,000
There is the Ubuntu SUSE I think is there, and isn't Fedora in there now too?

491
00:33:16,000 --> 00:33:17,000
Yeah, I believe so.

492
00:33:17,000 --> 00:33:18,000
Yeah.

493
00:33:18,000 --> 00:33:22,000
So basically, they've got this support in the NT kernel now,

494
00:33:22,000 --> 00:33:25,000
and then with some open source tools that Microsoft has provided,

495
00:33:25,000 --> 00:33:27,000
you can package up a whole bunch of userland tools

496
00:33:27,000 --> 00:33:32,000
and then build it into an executable that can run in that mode.

497
00:33:32,000 --> 00:33:36,000
And then you basically get like a bash prompt just running in your Windows command line.

498
00:33:36,000 --> 00:33:37,000
Yeah.

499
00:33:37,000 --> 00:33:42,000
So you can basically run almost any non-Gui Linux application, right?

500
00:33:42,000 --> 00:33:49,000
So for instance, you could do all your scripting, your Rails development in WSL.

501
00:33:49,000 --> 00:33:53,000
Penguin is a Debian-flavored, I guess, derivative,

502
00:33:53,000 --> 00:33:55,000
although I don't like the way that sounds,

503
00:33:55,000 --> 00:34:00,000
but it really is like a version of Debian that these folks offer for $9.99.

504
00:34:00,000 --> 00:34:03,000
It is awesome.

505
00:34:03,000 --> 00:34:07,000
I have had no problems with it.

506
00:34:07,000 --> 00:34:10,000
And I'm going to challenge you, and then I'm going to hand it over to you, Wes.

507
00:34:10,000 --> 00:34:12,000
What is a Linux desktop?

508
00:34:12,000 --> 00:34:15,000
If I have the command line, if I can run Linux binaries,

509
00:34:15,000 --> 00:34:20,000
assuming the right architecture, right, so x86,

510
00:34:20,000 --> 00:34:23,000
why is that not like a viable thing for...

511
00:34:23,000 --> 00:34:25,000
I'm particularly thinking of our younger listeners,

512
00:34:25,000 --> 00:34:27,000
and in fact, I owe someone an apology.

513
00:34:27,000 --> 00:34:31,000
About a year ago, we had a listener email into the show

514
00:34:31,000 --> 00:34:36,000
who is a local university student here, I think at University of Tampa or USF,

515
00:34:36,000 --> 00:34:38,000
it doesn't really matter,

516
00:34:38,000 --> 00:34:44,000
telling Chris and I that we should consider the WSL,

517
00:34:44,000 --> 00:34:46,000
because that's what they all use in school now.

518
00:34:46,000 --> 00:34:49,000
Why? Because they have proprietary Windows applications

519
00:34:49,000 --> 00:34:51,000
they have to use for some of their classes,

520
00:34:51,000 --> 00:34:56,000
but their CompSci classes are taught on Bash, effectively, right, the command line.

521
00:34:56,000 --> 00:34:58,000
I think that's the future.

522
00:34:58,000 --> 00:35:05,000
I think when you and I are in the old folks' home with Chris playing name that hair,

523
00:35:05,000 --> 00:35:11,000
all the kids are going to be running some weird NT Linux kernel mishmash.

524
00:35:11,000 --> 00:35:14,000
Okay, that's interesting. I do like it.

525
00:35:14,000 --> 00:35:16,000
I mean, it's great that you suddenly have this whole, you know,

526
00:35:16,000 --> 00:35:19,000
open source ecosystem of tooling that everyone's familiar with,

527
00:35:19,000 --> 00:35:21,000
and having set up some development environments,

528
00:35:21,000 --> 00:35:24,000
looking at you Python on Windows,

529
00:35:24,000 --> 00:35:26,000
it's not an experience I would want to repeat,

530
00:35:26,000 --> 00:35:30,000
especially compared to just, you know, apt install Python

531
00:35:30,000 --> 00:35:34,000
or whatever operating system you're using.

532
00:35:34,000 --> 00:35:38,000
I don't know if I see it as like totally the future.

533
00:35:38,000 --> 00:35:41,000
I can see it as long as Windows remains dominant.

534
00:35:41,000 --> 00:35:43,000
I think what's going to happen long term in the desktop,

535
00:35:43,000 --> 00:35:45,000
not that Windows is going anywhere,

536
00:35:45,000 --> 00:35:47,000
are we moving away from the desktop?

537
00:35:47,000 --> 00:35:49,000
I guess I can see more of a workstation use,

538
00:35:49,000 --> 00:35:54,000
but for the hybrid world of I have Windows for X reason,

539
00:35:54,000 --> 00:35:57,000
having WSL that exists seems awesome

540
00:35:57,000 --> 00:35:59,000
because you might need it for hardware support,

541
00:35:59,000 --> 00:36:01,000
you might need it because some proprietary application

542
00:36:01,000 --> 00:36:04,000
that can only run on Windows and doesn't emulate well,

543
00:36:04,000 --> 00:36:06,000
it gives you access to lots of stuff.

544
00:36:06,000 --> 00:36:09,000
And I guess you're right, if it's not Chromebooks,

545
00:36:09,000 --> 00:36:13,000
if it's not OS X or Mac OS, excuse me,

546
00:36:13,000 --> 00:36:15,000
maybe WSL is the best we can hope for.

547
00:36:15,000 --> 00:36:18,000
Is that the world that we want? Maybe not.

548
00:36:18,000 --> 00:36:21,000
But is it better than just being stuck on Windows

549
00:36:21,000 --> 00:36:23,000
with no subsystem at all?

550
00:36:23,000 --> 00:36:25,000
Well, I think we can all agree to that.

551
00:36:25,000 --> 00:36:27,000
I mean, don't you think there's value particularly

552
00:36:27,000 --> 00:36:29,000
for the audience of this show to say,

553
00:36:29,000 --> 00:36:32,000
every once in a while you do have to run the operating system

554
00:36:32,000 --> 00:36:34,000
that your end users are running,

555
00:36:34,000 --> 00:36:36,000
and maybe you don't want to partition your drives

556
00:36:36,000 --> 00:36:40,000
because NVME drives are stupidly small most of the time

557
00:36:40,000 --> 00:36:42,000
when you get them.

558
00:36:42,000 --> 00:36:45,000
If you're running Linux anyway, honestly,

559
00:36:45,000 --> 00:36:48,000
maybe I'm just too ignorant of the current Linux community,

560
00:36:48,000 --> 00:36:50,000
even though I run it every day.

561
00:36:50,000 --> 00:36:54,000
The GUI apps I use on Linux are all like electron apps

562
00:36:54,000 --> 00:36:56,000
for the most part, right?

563
00:36:56,000 --> 00:36:58,000
I mean, obviously Firefox isn't and blah, blah, blah.

564
00:36:58,000 --> 00:37:00,000
Right, but that's just a browser.

565
00:37:00,000 --> 00:37:03,000
It's either a browser or an electron app or a terminal.

566
00:37:03,000 --> 00:37:05,000
That's basically true for myself as well.

567
00:37:05,000 --> 00:37:07,000
Right, when I'm working in Linux,

568
00:37:07,000 --> 00:37:09,000
I'm effectively working in Bash

569
00:37:09,000 --> 00:37:12,000
or some other terminal-esque environment.

570
00:37:12,000 --> 00:37:15,000
Maybe we would be wise to consider,

571
00:37:15,000 --> 00:37:18,000
let's get all the app compatibility of Windows

572
00:37:18,000 --> 00:37:20,000
and still be able to do our work in the environment.

573
00:37:20,000 --> 00:37:22,000
Oh, and by the way,

574
00:37:22,000 --> 00:37:24,000
maybe I'm over-identifying just a little bit

575
00:37:24,000 --> 00:37:26,000
because I do have a Windows application

576
00:37:26,000 --> 00:37:28,000
that I sell and support,

577
00:37:28,000 --> 00:37:30,000
so it is a huge pain in the ass

578
00:37:30,000 --> 00:37:32,000
when I have to go dig out a Windows laptop.

579
00:37:32,000 --> 00:37:34,000
Yes, no, that's fair.

580
00:37:34,000 --> 00:37:37,000
But I don't know, with the rise of Electron,

581
00:37:37,000 --> 00:37:40,000
I believe, and I know this is hot take alert,

582
00:37:40,000 --> 00:37:42,000
that on the command line,

583
00:37:42,000 --> 00:37:45,000
Linux is a superior environment.

584
00:37:45,000 --> 00:37:48,000
I wish Mac would get their shit together,

585
00:37:48,000 --> 00:37:50,000
but they just won't.

586
00:37:50,000 --> 00:37:53,000
I'm going to take a little platform diversion here,

587
00:37:53,000 --> 00:37:55,000
but look at like Lutris,

588
00:37:55,000 --> 00:37:57,000
and I know you know what it is,

589
00:37:57,000 --> 00:37:59,000
but for the audience,

590
00:37:59,000 --> 00:38:01,000
the cross-platform play Windows game on Linux app

591
00:38:01,000 --> 00:38:03,000
that's now in the Pop OS store.

592
00:38:03,000 --> 00:38:05,000
We're jumping through all kinds of hurdles

593
00:38:05,000 --> 00:38:07,000
to make that stuff work.

594
00:38:07,000 --> 00:38:09,000
Are you just proposing we should just switch it up

595
00:38:09,000 --> 00:38:11,000
and go the opposite route?

596
00:38:11,000 --> 00:38:13,000
I'm proposing it's a two-horse race,

597
00:38:13,000 --> 00:38:15,000
that none of that stuff even exists on Mac OS.

598
00:38:15,000 --> 00:38:17,000
Yeah, you're right.

599
00:38:17,000 --> 00:38:19,000
You don't even have that option,

600
00:38:19,000 --> 00:38:21,000
where on Linux, yes, you have to jump through the hoops,

601
00:38:21,000 --> 00:38:23,000
and I don't know,

602
00:38:23,000 --> 00:38:25,000
why not have the Windows action show

603
00:38:25,000 --> 00:38:27,000
and just talk about different versions of the WSL all day?

604
00:38:27,000 --> 00:38:29,000
Why not, you know,

605
00:38:29,000 --> 00:38:31,000
why don't we all get the Windows logo tattooed on our butts?

606
00:38:31,000 --> 00:38:33,000
I mean, I'm just saying.

607
00:38:33,000 --> 00:38:35,000
I think Mr. Martin Winpress made an interesting point

608
00:38:35,000 --> 00:38:37,000
in that episode of Linux Unplugged,

609
00:38:37,000 --> 00:38:39,000
and he talked ostensibly

610
00:38:39,000 --> 00:38:41,000
as identifying

611
00:38:41,000 --> 00:38:43,000
essential modifiability

612
00:38:43,000 --> 00:38:45,000
with the Linux desktop.

613
00:38:45,000 --> 00:38:47,000
Okay.

614
00:38:47,000 --> 00:38:49,000
That you could recompile everything that you want,

615
00:38:49,000 --> 00:38:51,000
that you have full control,

616
00:38:51,000 --> 00:38:53,000
that you have large, free software

617
00:38:53,000 --> 00:38:55,000
that you can play with, that you can do with,

618
00:38:55,000 --> 00:38:57,000
and especially in the Windows 10 world,

619
00:38:57,000 --> 00:38:59,000
right?

620
00:38:59,000 --> 00:39:01,000
Like, for all the good things that Microsoft has done,

621
00:39:01,000 --> 00:39:03,000
for all the improvements that exist in Windows 10,

622
00:39:03,000 --> 00:39:05,000
including the subsystem,

623
00:39:05,000 --> 00:39:07,000
it's also very much become like an online,

624
00:39:07,000 --> 00:39:09,000
you know, intensely data-fied,

625
00:39:09,000 --> 00:39:11,000
sending all sorts of metrics,

626
00:39:11,000 --> 00:39:13,000
and it's licensed, right?

627
00:39:13,000 --> 00:39:15,000
So it's not your software.

628
00:39:15,000 --> 00:39:17,000
You may be able to run all sorts of neat, free software on it,

629
00:39:17,000 --> 00:39:19,000
but it philosophically

630
00:39:19,000 --> 00:39:21,000
feels like a different way of doing computing.

631
00:39:21,000 --> 00:39:23,000
Now, that might not matter when all you want to do

632
00:39:23,000 --> 00:39:25,000
is just run Bash,

633
00:39:25,000 --> 00:39:27,000
but knowing, you know, the philosophy of the people

634
00:39:27,000 --> 00:39:29,000
behind Bash,

635
00:39:29,000 --> 00:39:31,000
it does feel like a little bit of a mental

636
00:39:31,000 --> 00:39:33,000
conflict at times.

637
00:39:33,000 --> 00:39:35,000
And I actually don't believe what I've been arguing.

638
00:39:35,000 --> 00:39:37,000
I'm just trying to set up the argument, right?

639
00:39:37,000 --> 00:39:39,000
There's also, like, a lot of reasons you would want to use Windows.

640
00:39:39,000 --> 00:39:41,000
One, it's very old, the NT kernel.

641
00:39:41,000 --> 00:39:43,000
It's probably due for

642
00:39:43,000 --> 00:39:45,000
some significant rework.

643
00:39:45,000 --> 00:39:47,000
Two,

644
00:39:47,000 --> 00:39:49,000
I don't like any operating system

645
00:39:49,000 --> 00:39:51,000
that preinstalls Candy Crush.

646
00:39:51,000 --> 00:39:53,000
Like,

647
00:39:53,000 --> 00:39:55,000
I know it's trivial, but it's kind of like,

648
00:39:55,000 --> 00:39:57,000
it feels

649
00:39:57,000 --> 00:39:59,000
cheap in a way,

650
00:39:59,000 --> 00:40:01,000
which I know I'm starting to sound like Marco

651
00:40:01,000 --> 00:40:03,000
Warman, so I'll stop, but

652
00:40:03,000 --> 00:40:05,000
yeah, no, I mean,

653
00:40:05,000 --> 00:40:07,000
having said that, though, Wes,

654
00:40:07,000 --> 00:40:09,000
there are a lot of college kids, and in fact,

655
00:40:09,000 --> 00:40:11,000
I'd love for our younger listeners to reach out.

656
00:40:11,000 --> 00:40:13,000
Like, is this just a weird thing

657
00:40:13,000 --> 00:40:15,000
that University of Tampa, the kid

658
00:40:15,000 --> 00:40:17,000
who pinged me, is doing?

659
00:40:17,000 --> 00:40:19,000
Or is this, like, something that other

660
00:40:19,000 --> 00:40:21,000
schools are actually actively

661
00:40:21,000 --> 00:40:23,000
putting forward?

662
00:40:23,000 --> 00:40:25,000
I mean, it does seem like it would make sense.

663
00:40:25,000 --> 00:40:27,000
Schools are already, you know, many of them

664
00:40:27,000 --> 00:40:29,000
have deals with Microsoft or

665
00:40:29,000 --> 00:40:31,000
other vendors that ship Windows,

666
00:40:31,000 --> 00:40:33,000
and in particular,

667
00:40:33,000 --> 00:40:35,000
you know, university machines often

668
00:40:35,000 --> 00:40:37,000
have to be multipurpose, right? They support all

669
00:40:37,000 --> 00:40:39,000
kinds of different curriculums and classes and

670
00:40:39,000 --> 00:40:41,000
applications that might be needed, whether that's

671
00:40:41,000 --> 00:40:43,000
some fancy, you know, Mathematica

672
00:40:43,000 --> 00:40:45,000
program for the math students or

673
00:40:45,000 --> 00:40:47,000
Adobe Suite for the design

674
00:40:47,000 --> 00:40:49,000
students. So in that sense, I think it is, I mean,

675
00:40:49,000 --> 00:40:51,000
it is very pragmatic, and one

676
00:40:51,000 --> 00:40:53,000
of the strengths of the free and

677
00:40:53,000 --> 00:40:55,000
open source software world is that we can do

678
00:40:55,000 --> 00:40:57,000
that, right? You can take all that stuff now,

679
00:40:57,000 --> 00:40:59,000
you can run it on Linux, or even before

680
00:40:59,000 --> 00:41:01,000
we had this subsystem, you know, if you

681
00:41:01,000 --> 00:41:03,000
learn how to use GIMP on Linux, you can

682
00:41:03,000 --> 00:41:05,000
use it almost just the same

683
00:41:05,000 --> 00:41:07,000
on Windows.

684
00:41:07,000 --> 00:41:09,000
Where I'm curious is, I'm curious to see where Chromebooks

685
00:41:09,000 --> 00:41:11,000
play as they've added more and more

686
00:41:11,000 --> 00:41:13,000
Linux support. Now, I think it'll be slightly different

687
00:41:13,000 --> 00:41:15,000
in that it's not quite the same,

688
00:41:15,000 --> 00:41:17,000
at least currently, level of, like,

689
00:41:17,000 --> 00:41:19,000
workstation, right? You can have, like, a really beast

690
00:41:19,000 --> 00:41:21,000
mode Windows machine that you could also

691
00:41:21,000 --> 00:41:23,000
run the subsystem on, and Chromebooks don't really target that,

692
00:41:23,000 --> 00:41:25,000
but they are heavily targeting

693
00:41:25,000 --> 00:41:27,000
that same education sector.

694
00:41:27,000 --> 00:41:29,000
And in both of those cases,

695
00:41:29,000 --> 00:41:31,000
regardless of the, you know, the

696
00:41:31,000 --> 00:41:33,000
heritage, it's kind of the same

697
00:41:33,000 --> 00:41:35,000
thing. You have a proprietary-ish

698
00:41:35,000 --> 00:41:37,000
operating system that you run

699
00:41:37,000 --> 00:41:39,000
as a black box that you can't really change,

700
00:41:39,000 --> 00:41:41,000
and then you're given this little

701
00:41:41,000 --> 00:41:43,000
window into the world of

702
00:41:43,000 --> 00:41:45,000
free open source and

703
00:41:45,000 --> 00:41:47,000
quote-unquote, Linux.

704
00:41:47,000 --> 00:41:49,000
Into the world of freedom.

705
00:41:49,000 --> 00:41:51,000
It sounds like you're having a pretty

706
00:41:51,000 --> 00:41:53,000
good time using it, though. I'm

707
00:41:53,000 --> 00:41:55,000
curious if you think, have you

708
00:41:55,000 --> 00:41:57,000
spent any time playing with alternatives

709
00:41:57,000 --> 00:41:59,000
to Penguin, which used to be called

710
00:41:59,000 --> 00:42:01,000
wLinux. Penguin,

711
00:42:01,000 --> 00:42:03,000
I guess, is a combination

712
00:42:03,000 --> 00:42:05,000
of penguin, which is the Japanese

713
00:42:05,000 --> 00:42:07,000
word for penguin, and then they

714
00:42:07,000 --> 00:42:09,000
added w back in there because, yay,

715
00:42:09,000 --> 00:42:11,000
Windows.

716
00:42:11,000 --> 00:42:13,000
So it's just pronounced Penguin.

717
00:42:13,000 --> 00:42:15,000
Yeah, I mean, I checked out the Ubuntu one.

718
00:42:15,000 --> 00:42:17,000
It's fine.

719
00:42:17,000 --> 00:42:19,000
The Penguin one, I mean,

720
00:42:19,000 --> 00:42:21,000
basically, it's a Debian base,

721
00:42:21,000 --> 00:42:23,000
and they do a lot of the setup for you.

722
00:42:23,000 --> 00:42:25,000
They make it much easier to deal with, like, your Windows

723
00:42:25,000 --> 00:42:27,000
drives. By drives, I mean

724
00:42:27,000 --> 00:42:29,000
directories and directory structure.

725
00:42:29,000 --> 00:42:31,000
And, you know, for 10 bucks,

726
00:42:31,000 --> 00:42:33,000
the conveniences make a lot of sense

727
00:42:33,000 --> 00:42:35,000
if you are

728
00:42:35,000 --> 00:42:37,000
stuck on Windows, right?

729
00:42:37,000 --> 00:42:39,000
Yeah, and really, I think when it was

730
00:42:39,000 --> 00:42:41,000
first announced, there was a lot of skepticism, at least from

731
00:42:41,000 --> 00:42:43,000
the Linux side of things, because

732
00:42:43,000 --> 00:42:45,000
this is all, you know, it's all free stuff. It's

733
00:42:45,000 --> 00:42:47,000
based on free stuff, like, where is this value

734
00:42:47,000 --> 00:42:49,000
ad coming from? But to your point,

735
00:42:49,000 --> 00:42:51,000
I think that's true, and especially if you're

736
00:42:51,000 --> 00:42:53,000
already in this super pragmatic zone

737
00:42:53,000 --> 00:42:55,000
of using the subsystem because you're just trying to get

738
00:42:55,000 --> 00:42:57,000
work done, then, yeah, maybe

739
00:42:57,000 --> 00:42:59,000
$10 isn't so much to know that

740
00:42:59,000 --> 00:43:01,000
you're supporting, you know,

741
00:43:01,000 --> 00:43:03,000
a business and community around this stuff so that it

742
00:43:03,000 --> 00:43:05,000
can continue to grow, get better,

743
00:43:05,000 --> 00:43:07,000
and you can continue to take

744
00:43:07,000 --> 00:43:09,000
advantage of it. That's right, and one day

745
00:43:09,000 --> 00:43:11,000
we will have a pure Linux distro

746
00:43:11,000 --> 00:43:13,000
from Microsoft. Well, okay,

747
00:43:13,000 --> 00:43:15,000
since you've been having so much fun with this, I got a

748
00:43:15,000 --> 00:43:17,000
pick for you, Mike, that

749
00:43:17,000 --> 00:43:19,000
I'd be curious to see what you think about.

750
00:43:19,000 --> 00:43:21,000
It's called HTTP

751
00:43:21,000 --> 00:43:23,000
Prompt, an interactive

752
00:43:23,000 --> 00:43:25,000
command line HTTP client.

753
00:43:25,000 --> 00:43:27,000
It's in the Python repository,

754
00:43:27,000 --> 00:43:29,000
so it's just a pip install away.

755
00:43:29,000 --> 00:43:31,000
Maybe you've used

756
00:43:31,000 --> 00:43:33,000
stuff like HTTP.

757
00:43:33,000 --> 00:43:35,000
Have you heard of that one? I have not.

758
00:43:35,000 --> 00:43:37,000
What does that do? Well, it's like

759
00:43:37,000 --> 00:43:39,000
a glorified curl that has

760
00:43:39,000 --> 00:43:41,000
fancy colored output and has an easier

761
00:43:41,000 --> 00:43:43,000
syntax to get used to.

762
00:43:43,000 --> 00:43:45,000
This is like that, but even

763
00:43:45,000 --> 00:43:47,000
better. It's an interactive command line,

764
00:43:47,000 --> 00:43:49,000
so it's like a REPL for doing

765
00:43:49,000 --> 00:43:51,000
HTTP requests, which I find

766
00:43:51,000 --> 00:43:53,000
super interesting and useful,

767
00:43:53,000 --> 00:43:55,000
and man, they've done a really

768
00:43:55,000 --> 00:43:57,000
good job of like tab completing

769
00:43:57,000 --> 00:43:59,000
and fancy curses menus that pop

770
00:43:59,000 --> 00:44:01,000
up. So not only you got lots of color and

771
00:44:01,000 --> 00:44:03,000
stuff, but it's super easy to modify stuff.

772
00:44:03,000 --> 00:44:05,000
It also has HTTP2 support.

773
00:44:05,000 --> 00:44:07,000
You can look at all the headers. You can change them

774
00:44:07,000 --> 00:44:09,000
and modify a request and then resend it and

775
00:44:09,000 --> 00:44:11,000
then look at what the response details

776
00:44:11,000 --> 00:44:13,000
are. Now, of course, you can do lots of this stuff

777
00:44:13,000 --> 00:44:15,000
like web inspectors

778
00:44:15,000 --> 00:44:17,000
or just on the command line with curl or

779
00:44:17,000 --> 00:44:19,000
any other tool or in your favorite

780
00:44:19,000 --> 00:44:21,000
programming language, but it's not

781
00:44:21,000 --> 00:44:23,000
always that ergonomic, and it seems

782
00:44:23,000 --> 00:44:25,000
like HTTP Prompt has

783
00:44:25,000 --> 00:44:27,000
put in a lot of work to just make it

784
00:44:27,000 --> 00:44:29,000
easy. Like it has tons of cookies

785
00:44:29,000 --> 00:44:31,000
support. There's open API and swagger

786
00:44:31,000 --> 00:44:33,000
integration, pipelines

787
00:44:33,000 --> 00:44:35,000
like Unix style and output redirection.

788
00:44:35,000 --> 00:44:37,000
Like it's just it seems like an incredible tool

789
00:44:37,000 --> 00:44:39,000
if you do all kinds of HTTP stuff.

790
00:44:39,000 --> 00:44:41,000
Maybe you're debugging a problem with a service

791
00:44:41,000 --> 00:44:43,000
or you're just designing something new.

792
00:44:43,000 --> 00:44:45,000
I only just found out about it this

793
00:44:45,000 --> 00:44:47,000
morning, so I played with it a bit.

794
00:44:47,000 --> 00:44:49,000
I'm excited. I think it's going to remain in my tool belt.

795
00:44:49,000 --> 00:44:51,000
That actually sounds really, really

796
00:44:51,000 --> 00:44:53,000
cool. I like that a lot. Well, good,

797
00:44:53,000 --> 00:44:55,000
because now you've got some

798
00:44:55,000 --> 00:44:57,000
homework. Oh, no.

799
00:44:57,000 --> 00:44:59,000
Yeah, I know, right? But that's good.

800
00:44:59,000 --> 00:45:01,000
I'll be curious to see what you think of it. See if it falls

801
00:45:01,000 --> 00:45:03,000
into use and curious to see how you

802
00:45:03,000 --> 00:45:05,000
continue to enjoy Penguin.

803
00:45:05,000 --> 00:45:07,000
Oh, no, I wiped out windows after three days. Are you kidding me?

804
00:45:07,000 --> 00:45:09,000
Oh, is that right? Oh, I didn't make

805
00:45:09,000 --> 00:45:11,000
I didn't make that clear. Sorry. Yeah, no.

806
00:45:11,000 --> 00:45:13,000
So maybe we should just jump backwards for

807
00:45:13,000 --> 00:45:15,000
a second.

808
00:45:15,000 --> 00:45:17,000
It makes it less painful to run windows,

809
00:45:17,000 --> 00:45:19,000
but like I think Chris

810
00:45:19,000 --> 00:45:21,000
even liked the tweet. I think he's in the chat room.

811
00:45:21,000 --> 00:45:23,000
He can, if he's still listening, jump in and be like, yeah,

812
00:45:23,000 --> 00:45:25,000
I forgot

813
00:45:25,000 --> 00:45:27,000
and it's going to make me sound so stupid. So I

814
00:45:27,000 --> 00:45:29,000
can't wait for the feedback. I forgot

815
00:45:29,000 --> 00:45:31,000
that like, so, OK, on

816
00:45:31,000 --> 00:45:33,000
a new Linux install, I can like just

817
00:45:33,000 --> 00:45:35,000
get my stuff running and

818
00:45:35,000 --> 00:45:37,000
like do what it is I need to do.

819
00:45:37,000 --> 00:45:39,000
Right. Yes. Just get up

820
00:45:39,000 --> 00:45:41,000
from nothing. Easy, fast, not

821
00:45:41,000 --> 00:45:43,000
an insane number of reboots. Right.

822
00:45:43,000 --> 00:45:45,000
Basically the same on Mac, right? I mean,

823
00:45:45,000 --> 00:45:47,000
let's be fair.

824
00:45:47,000 --> 00:45:49,000
Windows, like there are so much

825
00:45:49,000 --> 00:45:51,000
resource contention when you first install

826
00:45:51,000 --> 00:45:53,000
Windows that I could not figure

827
00:45:53,000 --> 00:45:55,000
out why the damn machine kept crashing on me.

828
00:45:55,000 --> 00:45:57,000
Wait, like actually crashing? Yeah, like

829
00:45:57,000 --> 00:45:59,000
freezing up, locking up.

830
00:45:59,000 --> 00:46:01,000
And then I tweeted it and one of our

831
00:46:01,000 --> 00:46:03,000
listeners, Sean, wrote back.

832
00:46:03,000 --> 00:46:05,000
He's like, is that a new

833
00:46:05,000 --> 00:46:07,000
install of Windows? I said, yeah, I just

834
00:46:07,000 --> 00:46:09,000
installed it. Yeah, you know,

835
00:46:09,000 --> 00:46:11,000
you need to like let it update several times

836
00:46:11,000 --> 00:46:13,000
and like go away for

837
00:46:13,000 --> 00:46:15,000
a while. Sure enough, I gave it an hour

838
00:46:15,000 --> 00:46:17,000
and yeah, that's

839
00:46:17,000 --> 00:46:19,000
yeah. It's amazing

840
00:46:19,000 --> 00:46:21,000
how bad that is. Like there's

841
00:46:21,000 --> 00:46:23,000
lots of stuff, especially like the enterprise where it's great

842
00:46:23,000 --> 00:46:25,000
to administer Windows and you can tell they've

843
00:46:25,000 --> 00:46:27,000
thought about administering it. But

844
00:46:27,000 --> 00:46:29,000
setting it up is just such a pain. Now,

845
00:46:29,000 --> 00:46:31,000
of course, you can go and use all their tools to automate

846
00:46:31,000 --> 00:46:33,000
and that. But even

847
00:46:33,000 --> 00:46:35,000
then, the update process is just

848
00:46:35,000 --> 00:46:37,000
incredibly painful almost

849
00:46:37,000 --> 00:46:39,000
every single time I have to engage with it.

850
00:46:39,000 --> 00:46:41,000
Yeah, it's like

851
00:46:41,000 --> 00:46:43,000
I don't understand and I would love to hear like

852
00:46:43,000 --> 00:46:45,000
to people who do what I do

853
00:46:45,000 --> 00:46:47,000
like independent developers

854
00:46:47,000 --> 00:46:49,000
who are Windows people.

855
00:46:49,000 --> 00:46:51,000
What happens when you're me and you like destroy

856
00:46:51,000 --> 00:46:53,000
a laptop and you need to immediately get up and running?

857
00:46:53,000 --> 00:46:55,000
Are you just hosed for

858
00:46:55,000 --> 00:46:57,000
a while? Like is that

859
00:46:57,000 --> 00:46:59,000
because like just to set it like everything

860
00:46:59,000 --> 00:47:01,000
takes forever to install. Visual Studio

861
00:47:01,000 --> 00:47:03,000
is like this is 30

862
00:47:03,000 --> 00:47:05,000
gigs and you know.

863
00:47:05,000 --> 00:47:07,000
Yeah, and it's hard to automate and there's

864
00:47:07,000 --> 00:47:09,000
different procedures and because it's all like an

865
00:47:09,000 --> 00:47:11,000
yeah, it's all gooey. It's an EXI.

866
00:47:11,000 --> 00:47:13,000
Maybe this one's an MSI and you have to go fetch

867
00:47:13,000 --> 00:47:15,000
it for from another source. And sure, there's

868
00:47:15,000 --> 00:47:17,000
like some tools that can help automate some of those stuff

869
00:47:17,000 --> 00:47:19,000
right? Bundle installers or chocolatey

870
00:47:19,000 --> 00:47:21,000
or whatever you're using, but

871
00:47:21,000 --> 00:47:23,000
it's never going to cover all the tools

872
00:47:23,000 --> 00:47:25,000
you need. Yeah, I don't even know what to say.

873
00:47:25,000 --> 00:47:27,000
I mean, maybe we're just missing something because we're not

874
00:47:27,000 --> 00:47:29,000
Windows people, but

875
00:47:29,000 --> 00:47:31,000
I'd be curious to hear of

876
00:47:31,000 --> 00:47:33,000
our Windows listeners out there.

877
00:47:33,000 --> 00:47:35,000
Coder.show slash contact. Let us know

878
00:47:35,000 --> 00:47:37,000
what you love about it, why it works for

879
00:47:37,000 --> 00:47:39,000
you, or maybe you've just got some pro tips from

880
00:47:39,000 --> 00:47:41,000
Mike on how to have a better experience

881
00:47:41,000 --> 00:47:43,000
using Windows. Well, the way I did that

882
00:47:43,000 --> 00:47:45,000
was I plugged in a pop OS

883
00:47:45,000 --> 00:47:47,000
and I hit reform hatch drive. Hey,

884
00:47:47,000 --> 00:47:49,000
it was a lot better.

885
00:47:49,000 --> 00:47:51,000
I love it. That's probably

886
00:47:51,000 --> 00:47:53,000
the way to go. Problem solved.

887
00:47:53,000 --> 00:47:55,000
And if maybe

888
00:47:55,000 --> 00:47:57,000
you're trying to learn like a little bit more about

889
00:47:57,000 --> 00:47:59,000
Linux because you've been convinced by our discussion

890
00:47:59,000 --> 00:48:01,000
today or you know, Linux is just great.

891
00:48:01,000 --> 00:48:03,000
Possibly you're trying to learn some developer

892
00:48:03,000 --> 00:48:05,000
stuff like catching up on your Python

893
00:48:05,000 --> 00:48:07,000
for instance. Oh boy.

894
00:48:07,000 --> 00:48:09,000
Good news for you. Linux Academy's

895
00:48:09,000 --> 00:48:11,000
yearly deal is back.

896
00:48:11,000 --> 00:48:13,000
Limited time only. linuxacademy.com

897
00:48:13,000 --> 00:48:15,000
$2.99

898
00:48:15,000 --> 00:48:17,000
for the whole year. That's a

899
00:48:17,000 --> 00:48:19,000
whopping 33% off

900
00:48:19,000 --> 00:48:21,000
when you break it down. Like the monthly

901
00:48:21,000 --> 00:48:23,000
price. That makes a lot of sense. If you want

902
00:48:23,000 --> 00:48:25,000
to learn, you want to well, you know, a catalog

903
00:48:25,000 --> 00:48:27,000
of stuff that you can go check out and use.

904
00:48:27,000 --> 00:48:29,000
Now's the time to do it. It's just going to cost you more

905
00:48:29,000 --> 00:48:31,000
in the future. So why not save a few

906
00:48:31,000 --> 00:48:33,000
and get started learning some stuff.

907
00:48:33,000 --> 00:48:35,000
Well, that's going to do it for

908
00:48:35,000 --> 00:48:37,000
today's show. But if you want more, well

909
00:48:37,000 --> 00:48:39,000
Coder.show and

910
00:48:39,000 --> 00:48:41,000
if you want more from Jupiter Broadcasting, well

911
00:48:41,000 --> 00:48:43,000
Jupiterbroadcasting.com. We've got a

912
00:48:43,000 --> 00:48:45,000
shiny new, let's say new-ish

913
00:48:45,000 --> 00:48:47,000
website that you could go check out.

914
00:48:47,000 --> 00:48:49,000
Lots of good stuff. In particular

915
00:48:49,000 --> 00:48:51,000
maybe go check out the latest Linux

916
00:48:51,000 --> 00:48:53,000
Action News where Chris and

917
00:48:53,000 --> 00:48:55,000
Joe break down all the stuff that's happening.

918
00:48:55,000 --> 00:48:57,000
I had not had time to really dig into all

919
00:48:57,000 --> 00:48:59,000
of Google's announcements about

920
00:48:59,000 --> 00:49:01,000
their cloud stuff. And I didn't really have to

921
00:49:01,000 --> 00:49:03,000
because they just explained it for me. So that's super

922
00:49:03,000 --> 00:49:05,000
handy if you're interested in what's happening with Linux

923
00:49:05,000 --> 00:49:07,000
and open source. linuxactionnews.com

924
00:49:07,000 --> 00:49:09,000
slash 101

925
00:49:09,000 --> 00:49:11,000
is the latest episode.

926
00:49:11,000 --> 00:49:13,000
If you just don't have time for that

927
00:49:13,000 --> 00:49:15,000
or maybe you want to interact more directly,

928
00:49:15,000 --> 00:49:17,000
we're also both on Twitter. I'm

929
00:49:17,000 --> 00:49:19,000
at Wes Payne and Mike you're at

930
00:49:19,000 --> 00:49:21,000
Dumanuco and check out themadbotter.com

931
00:49:21,000 --> 00:49:23,000
if you need anyone converted from

932
00:49:23,000 --> 00:49:25,000
Windows to Linux. Beautiful.

933
00:49:25,000 --> 00:49:27,000
Thank you all for joining us.

934
00:49:27,000 --> 00:49:45,000
We'll see you right back here next week.

935
00:49:57,000 --> 00:49:59,000
Bye.

