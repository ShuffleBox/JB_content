This is KOTORadio, episode 466 for May 16, 2022.
Hey, good looking and welcome into Jupiter Broadcasting's weekly talk show, taking a
pragmatic look at the art and business of software development and the world of technology.
My name is Chris, and joining us every single week from his command bunker, it's our host,
Mr. Dominic.
Hello, Mike.
On screen.
Full magnification.
Enhance.
Enhance.
I love that.
And I always love when somebody like rings the doorbell.
Enter.
Enter.
There are four lights.
That was for the days.
That was for the days.
Ah, man.
Oh, man.
So I might sound a little off, I might sound a little different.
I am in Southern Oregon, getting my RV ready for another summer road trip.
And we still had a few last suspension fixes from the last trip that had to get done.
So it's about 400 miles from the studio, some about 400 miles south.
And it's a totally different climate down here.
It's so nice.
Mid 70s, low 70s today.
Sunshine.
Oh, I forgot that stuff exists, man.
You live up in the Pacific Northwest, and it's just like gray clouds all the time.
Not to complain about the weather on the show, but I legitimately feel like I'm in a better
mood down here.
It's nice.
I know you wouldn't understand, Mr. Florida.
I know.
I mean, you don't just hang out with snakes and alligators all day, like, chilling?
Right.
Meanwhile, you're blowing up my Twitter this week, working on Alice and prepping her for
OpenCore and geeking out on Python.
Like I had a busy Twitter week.
You even had a busier one.
I know.
It's been a hell of a week.
I'm trying to figure out this whole OpenCore, you know, GPL thing, and God, it's very complicated.
I heard a new term this last week.
It was something like Core Open or something.
They just flipped the term.
Is that a new term or is that like string reverse, but fancier?
Yeah.
I was like, can they do that?
Does that work?
I don't know about that.
Oh, man, we got so many messages about Microsoft Access last week.
You know, I won't out them, but we got an email from a listener who works at Microsoft
and they had to look up what Access was after listening to the show.
How does that make you feel?
Well, you got to remember too, at Access, not all accesses are the same.
It's just like a name.
It's it's it's I'm going to you know what?
No, we've spent too much time discussing Microsoft Access on this show.
One of the choice ones was 97 and Five writes in, he says, look, man, I needed to eat.
But he writes, my role at a company in the past was converting Access 97 database apps
to VB.net.
Oh, for sure.
Some of these applications had all of the data within an access file, which, as you
might know, does not do a one to one transfer to Microsoft SQL.
Sometimes I would get lucky and some of the data would already live in Microsoft SQL.
But most of the code didn't translate well either.
So I typically had to recreate the application from scratch.
The team continued building access applications while I was in the process of converting them
and access 97 didn't use proper locking methods.
And that was actually one of the reasons why the team didn't want to move to a new version
of access.
It just kept kicking users out.
They didn't want locking anyways.
Sometimes you just have to make your way through life and sometimes you have to do shameful
things to be able to eat.
I now code like a gentleman with Python.
Is Python the sort of like blue blooded open doors for ladies and always tuck your shirt
in language?
I thought that was closure.
It's the language.
It's the language you take home to your parents.
Yeah, that enclosure.
Yeah.
I see.
So you have like a bender, a romantic bender for a couple of years at Objective-C. Although
Objective-C would be the cougar of languages.
Oh, I was going to say Objective-C was the one that your grandparents brought home for
dinner.
Oh.
You know, this could get worse.
The Objective-C is like, I knew your dad very well, in fact.
Oh.
Yeah.
And then you realize your dad has a history that you never knew about.
Yeah.
We don't want to go there.
My poor son.
Let's just keep going.
Oh, my God.
All right.
So Dan writes in and he says he's kind of tired of hearing about the podcasting 2.0
stuff.
He means it with all due respect and he does get value from the show.
So he became a member to support the network a few months ago and he's happy with that.
But he's really, really disliking the boost because he feels like they're ads.
He says, I respect Chris and I understand that you choose to evangelize this as an alternative
to memberships.
And that's fair enough.
He says, I don't think it should be placed in the members feed.
I like paying for Netflix and I get that adding value for value is important.
Sorry for the rant.
It's meant with respect.
Oh, no, Dan, don't feel bad at all.
I wanted to cover this.
So Dan writes and he's like, I'm tired of hearing about this.
And I think I messed up.
When I initially started talking about podcasting 2.0 and stuff like that, I just was so excited
that I just ran my mouth, you know, just jumped in the term that the community has over there
is running with scissors.
And it is just that it is running with scissors for sure.
But I probably messed up the pitch, right, because and I've decided what I'm going to
do is I'm just going to kind of stop talking about it too much in the other shows.
I'll still push it forward and talk about it from here there.
But office hours is really where that's going to be my outlet to a degree.
But I want to mention why I'm very excited about this and then I'm going to just drop
it on the show.
I mean, I will bring it up from time to time, but I won't bring it up every week.
Podcasting 2.0 is more than just value for value and boosts.
It's an important part of it, but it is a spec.
Here's a couple of the things that I really like about it that I think would be great
for podcasting.
Number one transcripts that's good for SEO and accessibility.
Number two chapters, we need a standard way of doing this number three soundbites, shareability
of podcasts is very poor right now.
YouTube crushes this seasons.
Right now we have like a proprietary way where Apple has created a tag, they've modified
the RSS spec.
Well, they've just added this tag and other people have just sort of clumsily implemented
it.
And that's how we get seasons of podcasts right now.
The spec has a standardized way to do this.
Alternate enclosures.
This is another really good one.
One feed entry, multiple file types, low bit rate, high bit rate, video, opus, all in one
feed entry images.
The ability to show the occasional image at the particular time in the show when we're
talking about something could be nice, wouldn't want to overuse it, but it's nice to have
live.
They have and are working on the ability for podcasting 2.0 apps to support live streams
in your podcast app.
So you open up your podcast app and in your list of shows, Coder Radio will be listed
with a on air or live badge next to it.
And you could just tap that and tune into Coder Radio live from your existing podcast
app.
I don't know why we've never had that.
We clearly need that.
Social interact.
This is a part of the spec that is a cross app, cross platform, activity, pub driven
comment system.
So you could have universal comments across apps and services for podcasts and then the
channel disclosure tag.
This allows a podcaster to signal when perhaps there's going to be no more episodes released
in a feed or other kinds of information about a feed that a podcast app could consume.
And then lastly, amongst many other things that I haven't even gotten to are the value
and the boosts.
Podcasting 2.0 brings a range of features that podcasting has needed for a decade.
And it does it in an open source community driven way instead of Apple or Spotify coming
up with proprietary RSS tag improvements that is there's no spec for the developers just
kind of clumsily implement.
That's it.
I'll talk more about this in office hours because that's where I'm going to talk about
a lot of our long term strategy stuff and answer questions and stuff like this.
I plan for JB to go all in on podcasting 2.0 and so as people pick up new podcast apps,
they're going to start to see new features show up and boosts are one of them.
And that was the one that I got the most excited about the quickest because it solves the monetization
problem for both podcasts and free software.
And it does it at a time when advertising is retracting, the economy is slowing and
this system is growing, right?
So that's what I led with.
But I think you'll see that stuff like the podcasting 2.0 spec is necessary for podcasting
to stay healthy and to compete with Apple, Spotify, YouTube and others.
But the good news is for everybody who's sick of me talking about it in coder, I'm going
to try to keep most of this contained to office hours as time goes on.
So there's that.
And I understand Dan and mostly the whole boost thing and all of the podcasting 2.0
stuff is not meant to replace anything that exists now.
So if you're listening to a podcast and you're listening to it in your favorite app and you
don't plan to adopt any of this stuff, your experience won't change.
That's the idea.
All of this stuff is additional.
It benefits, it supports, it boosts, it doesn't replace.
That's the idea.
It's hard to talk about, you know, because it's something I'm really excited about as
a as a project.
But I understand the audience.
It's like a it's like me talking about how we make the sausage basically.
We make it with hickory smoked pork.
We weren't gonna actually talk about sausage.
No, well, I mean, we could talk about sausage.
I don't know.
Would you get what I have?
You ever had this where you're like, I mean, I think this is what a lot of the show probably
has been when it comes to the app store stuff.
So it's like, yeah, you recognize something that your industry needs to get their head
out of their ass about.
And you kind of need your audience or, you know, your customer base on board, too, because
you need them to adopt these new features to create the demand.
So that way, other apps like antenna pod and overcast, they start adding these features,
which they never will unless their users ask for them.
So it's a real chicken and the egg problem.
And so I have to be the jerk sticking his neck out there, pushing it forward, because
otherwise we just sort of have a stalemate.
Yeah.
And more than that, it's I think about the app store stuff from, you know, when I was
bitching about it in 2012, 2013 ish.
That case is what happens if it doesn't work, right?
If the community does not kind of, you know, step up and say, hey, this is kind of messed
up, you get monopolies.
And I could see something very similar happening in podcasting in terms of monetization of
podcasts, right?
Yeah.
And the right now, any new thing that podcasts have gotten like seasons, or chapters, it's
all just sort of been a ragtag implementation, maybe like Apple created a tag, or some Germans
created a way you can cram something in like the ID three information.
And it's just sort of out of spec, but we all just do it that way.
The susa developers created a new XML tag.
Yeah, that's essentially what it is.
And then we all we basically just get enough people using it that it becomes the new standard,
but there's no community input.
There's nobody driving them iterating them.
The actual core podcasting spec for the RSS feed, as far as I know, I could have this
wrong.
But as far as I know, it hasn't been updated since 2009, in any official sort of standard
way.
What we've gotten since 2009, has mostly been whatever whatever Apple crams in there and
then other people just kind of implement.
I do get it.
It is a tricky thing.
And when you're a consumer of something, you have a different relationship with a problem
than when you are in the industry working with it.
So and I blew the initial communication on it, because I saw a much bigger problem when
it comes to monetizing free software that I thought maybe we could address by building
a network out around lightning, but it is what it is.
I'm only human and I learn and I iterate.
lino.com slash coder go there to get $100 in 60 day credit on a new account and you
go there to support the show.
Linode is fast, reliable cloud hosting for developers, you got to try it for your next
project.
It's what we've used for everything we've built in the last couple of years.
And Linode has been rolling out upgrades, they're always rolling out upgrades for as
long as they've been a customer, it seems like they're always updating the infrastructure,
keeping it super competitive, 11 data centers around the world, MVME storage, AMD epic processors,
40 gigabit connections coming into the machines.
It's really high performance and the UI is smooth, clean, easy to get going.
If you're a newbie or a pro, I'm talking like one click deployments or like super custom
rigs, however you like to roll.
And then they have the best support to back it up so you can feel safe and comfortable
putting your important stuff on there.
And go say hi to Linode at KubeCon EU if you're going to be there, they'll be there in Spain
May 16 through the 20th.
If you want to go say holler to the folks over at Linode, go find them over there and
tell them that the Coder radio program sent you.
So if you're a performance hound, or if you like stability, or if you like great support,
or a nice clean API that integrates with tools and libraries that you're already familiar
with, Linode is a great option.
You see, they've been doing this for over 19 years, or at least almost 19 years now,
they're somewhere in that range.
I used to say 18 years, but I realized that was a year ago.
Because Linode's been great.
They've been supporting the Coder radio show for a while.
Because they get it.
And they know that you guys out there are the perfect audience for something like this.
So go try it for yourself.
Go see it's real.
Go build something, go test something, go learn something, and use it for your next
project.
You go to linode.com slash coder.
That's where you go to get the $100 in 60 day credit.
And it's how you support the show, linode.com slash coder.
So apparently, we have a Heroku takedown.
And I can't disagree with pretty much any of this.
The piece is titled Why Did Heroku Fail?
If you don't remember Heroku started what, 15 years ago?
Something like that.
Yeah.
Yeah.
They did a whole rebuild in 2009.
And then in 2010, they were sold to Salesforce for 212 million.
And Heroku always had a pricing problem, in my opinion, and every time we've talked about
it, that's always been one of the issues kind of underlying it is because they're running
on top of EC2, their run costs are high.
And they were higher back then, of course.
Right.
Yeah, they've addressed some of that now.
But you look at Heroku and you think to yourself, I mean, I could do this kind of on a linode
now.
And I wonder if that isn't part of the problem is they're just not as needed as they once
were.
Because now you've got a lot of options for deploying software anywhere you want and really
abstracting it away.
Yeah.
I think there's a few things.
But you know, for me, my introduction to Heroku was when I was first getting into Rails.
And at the time, Heroku was very Rails centric.
Totally.
And that, you know, it sounds silly.
And I know the hardcore, you have to put yourself back then, right?
There wasn't like, Docker Hub, where you could just pull random stuff that you need.
The whole DevOps, even on a small scale infrastructure, just it was still pretty obnoxious.
Heroku had that beautiful marketplace.
You want to add paper trail for logging for your app?
Go ahead.
And here's a two thing, two line thing you have to do to the Rails config to make it
work.
Oh, and we're Heroku.
So we do all the DNS and all that for you.
So we gotcha.
Don't worry.
I kind of feel like the pain point was when they, correctly, because Rails is popularity,
you know, it wasn't going to take them everywhere they needed to go, in terms of just market
penetration.
Well, once they went more generic, and they tried to add other stacks, it really, it just
made it worse, I think, in a lot of ways.
And of course, the pricing where the dinos were expensive.
And I think we'd be remiss if we don't mention just some of the massive security breaches
they just had.
Yeah, that definitely doesn't help with the whole publicity and adoption.
I don't know, I feel like also, a lot of what made it so slick was what they took care of
and get up actions came along and a lot of ci pipelines that just sort of come out of
the box came along and one click deployments of entire applications became a lot more common
and there just started to be one less reason after one less reason.
I mean, they're still around, right?
They're still going.
I mean, they've made it 15 years in so in some ways, maybe it's not a failure.
But when you look at the adoption trend, when you look at where they're going, you look
at their revenue, it kind of looks like days are limited, especially now that they're owned
by Salesforce.
Like, are they really committed to just dumping more and more money in this thing to compete
with AWS, Azure, Linode and, and those guys?
Oh, I don't, I don't think they have to I think Heroku is like, it's fine being owned
by Salesforce, I would argue is almost part of the problem, right?
They didn't take bets they ought to have taken because, you know, you know how it is when
a startup gets bought by a big company, you get a brain drain of the people who, oh, you
want me to fill out some like, compliance form, because your HR has this policy.
Oh, there's mandatory training.
I mean, you've come on, you've you've definitely seen this before,
the inclination to take risks, kind of just vaporizes, right, because when you work in
an organization like that, there's no one really who owns a particular initiative.
So no one's, no one's really on the line if something doesn't go through.
And so we that just sort of as a culture that prevents risk taking, in my opinion,
go for sure.
I mean, I definitely would argue that the your incentives flip from we need to stay
ahead of the curve and be competitive to we need to be stable and avoid lawsuits.
Right?
Yeah, we've got people that are paying for this, don't you know?
Well, and like, we're big enough now that Oh, maybe it is worth somebody actually suing
us.
So, you know, maybe it's the spring air here in southern Oregon that I'm smelling the flowers
bloom, or maybe it's that new fresh release candidate of TypeScript.
Oh, look at that, the boys got a new TypeScript.
That's right.
It's a beta release.
Well, I guess it's released candidate now.
But it's close.
It's not the final version.
But it's really, it's nigh.
I think probably the thing that they're at least the most excited about outwardly.
This release also includes a new preview editor for the command go to source definition.
I guess this can be helpful in cases where an ordinary go to definition command would
take you to a declaration file, instead of the actual JavaScript or TypeScript source,
which is annoying.
And it also seems like they're starting to target node 16, even though they call it node
12.
In this release that part I don't get but there's there's a weird node versioning thing
that's been going on for a while.
But I mean, overall, I don't want to complain.
I don't I'm not complaining.
It's not my problem.
I don't have to figure it out.
So
Yeah, you know, I write a fair amount of TypeScript.
I mean, I find myself because I'm, you know, crotchety, falling back on because TypeScript
is a pure superset of JavaScript, so you can only you know, all JavaScript is valid TypeScript.
Finding myself wanting to ignore some of the TypeScript stuff.
Because I'm lazy and trust me compiler, I do know what I'm doing, except I don't but
I just want to like hit F5 and have this work.
Still the language, you know, the language is younger than the show.
I'm pretty sure.
Yeah, I think so.
Wow.
It started off as syntactic sugar to JavaScript to do like soft type annotations or not solve
a pretty, you know, it did to do typing, right?
It reminds me a lot of, frankly, the Python three stuff where, you know, they have the
type hinting, but it's super weak, and there's all kinds of weird cases in it.
Well, TypeScript has just gone in and I out statically typed and all that goodness.
You know, I'm not a TypeScript is the future of web development.
Never ever do pure JavaScript again kind of guy, but it's starting to look like a more
robust language.
I mean, it looks a hell of a lot like C sharp these days.
A lot of positive sentiment towards TypeScript out there these days.
It's also the same guy who created C sharp.
They've earned a special spot TypeScript 4.7 is nigh.
We'll put a link in the show notes if you'd like to read more about it.
We both had an interesting and perhaps underwhelmed takeaway from Google IO.
I thought I noticed that your top thing was Flutter three was announced.
You know, Flutter is one of these projects that people keep telling me about and I keep
saying, oh, that looks really cool.
Oh, it's made by Google.
Waiting for it to die.
Yeah, I'm just like waiting for it to to to go.
I mean, shall we say the names reader wave?
We could do that.
Yeah, I think what gives Flutter a fighting chance is that it is, I think, tied in with
their overall fuchsia initiatives, too.
And they've been sticking with us.
They like they've never really officially made a big stink about fuchsia other than
a few blog posts and, you know, put it on a few of their devices.
It seems like fuchsia is like this long term skunkworks project, probably ultimately to
replace Linux.
And Flutter is maybe important for the client side of that or for the front end UI stuff.
So I think I think I might be wrong, but I think fuchsia and Dart have to die for Flutter
to die.
Maybe they could kill Flutter without killing those things.
I might be wrong.
I don't think fuchsia is going anywhere.
Yeah.
Well, I mean, you never know.
There's the most proto Microsoft company out there these days.
They are Microsoft of a different era with more money.
And I actually felt like Google I.O. 2022 really put that on display.
It really brought that home to me.
It was a very cohesive Google I.O.
It felt like it was put together by one team.
Google I.O. usually feels very disparate, very disorganized, disjointed, like different
fiefdoms create different parts of their keynote and then they go up there and present it to
each other, whereas this year it felt cohesive.
It felt like a singular, boring corporate message.
And I'm kind of sad to see it.
They needed to get there.
But this must have been the most low key, low hype Google I.O. I've ever seen.
And by my account, we got seven product announcements and none of them are very interesting.
This is a week year.
And I agree with you that it was boring as hell, but should we just go through the seven
highlights?
Sure.
Yeah.
So off the bat, this is actually my favorite one.
Automatic summaries to Google Docs and chat, and I'm aware we don't call it Google Docs
anymore.
I don't think we do.
Who knows?
They change the name every week.
That's kind of cool.
Again, it's not super developer centric.
There's a new face lighting effect in Meet.
Awesome.
The more you can copy Apple, the better.
Wallet on Wear OS.
Wear OS.
OK, I can't believe I can't believe they didn't have that already.
Yeah.
Pixel watch.
Great.
I guess Pixel six and seven.
I'm sorry.
Pixel six, a Pixel seven and Pixel Pro.
This one was weird to me because, like, they made such a fuss about the six coming out
and they've kind of immediately shot their own product in the face.
Right.
And they're not going to sell any of the Pixel sixes now that the six and the seven and seven
Pro have been announced, like they've just killed all of their future sales.
Google Pixel tablet.
This is a little interesting because I could see it in enterprise environments being like
you want to run tablet software in your factory or, you know, produce production facility
and you don't want to deal with Apple side learning problems.
But again, there's no guarantee of what exactly that's going to be.
And I like how you put this Google AirPods.
Yeah, I just want to say Samsung has had them.
Bose has them.
Right.
Sony.
Sony has really good ones.
It's incredible that Google has just has no capability of recognizing that the market
already has this solved and that they have no shot.
And then they just go for it.
And then they get like, you know, 200000 sales.
That's it.
Yeah.
This is really wild.
Also, I don't know if you caught this, but the Pixel watch, it's going to be a round
play.
Yeah, that's.
Yeah, that's I mean, although the Android Wear watches, it's nice.
It's nice looking.
Yeah.
I don't know.
I've had both Android Wear circle, you know, circular watches and I've had Android Wear
square watches and the circular watches always are always cutting off parts of the UI.
It never has really worked very well.
So I'm pretty skeptical of the circular watch display.
Obviously, Google has the opportunity here to customize the UI.
The question is, will they or will it just be like a top layer and then you get down
into the Wear OS and it's UI elements are getting cut off.
Also, I don't know if you notice this, they promoted this like it's a benefit, but I think
it's actually going to be a pain in the butt.
They're integrating Fitbit with the watch, but you still have to maintain a separate
Fitbit account.
So you have your Google account, you have to get on the watch and you have to log into
your Fitbit account on the watch to use them, even though Google owns Fitbit.
Maybe it's a regulatory requirement.
I don't know, but it just sounds messy.
The tablet, the 7, the 7 Pro, and I believe the 6A, and I believe the AirPods, all just
got kind of, and the Pixel Watch, all just got like, you know, probably in the fall,
in the future, we're going to release these products.
Only one or two of these things they announced at Google IO are even going to ship probably
before the end of the year.
When have we seen this before?
And a number of these are going to get canceled.
And they're going to suck.
And then there was the other aspect of this IO, the entire IO that bugged me.
And I think all companies do this, but they're really trying to position themselves as like
this feel good, warm, we're doing this for the good of the people company, you know,
that all big corporations are trying to do now.
But it really felt over the top when at the very end of the keynote, it's not very classy,
but they basically do a one more thing moment, you know, they ape Steve Jobs there for a
second.
They do have one more thing.
And it was yet another, even further out in the future, absolutely no timeline product.
We have no idea where this is coming.
And they teased Google AR glasses.
And I grabbed like a minute of the presentation.
I just want to play it for you so you can get an idea of like the vibe they're trying
to go for and the feelings they're trying to get you to feel.
It all felt very manipulative.
My mother speaks Mandarin, and I speak English, which is a strange thing.
We'd love to be able to share with you a new prototype we've been working on.
You should be seeing what I'm saying, just transcribed for you in real time, kind of
like subtitles for the world.
What we're working on is technology that enables us to break down language barriers, taking
years of research in Google Translate and bringing that to glasses.
You see me?
Oh, si, si, te veo.
Oh, my God.
I'm actually looking straight into your eyes, and it seems like you're looking right at
me.
Oh, si, si, estoy viendo lo que estas diciendo para yo.
Making access to information just instant and intuitive, by doing that, technology fades
into the background, and we're more connected with the people and the things around us.
Google wants you to know that they can out AR anybody.
They are so into AR.
Google VR, forget all about that.
Google is so into AR.
I mean, listen, when it comes to cheap, low-rent emotional manipulation, you've seen Apple.
Wait till you meet Google.
I would love to think that that demo was real.
Yeah, they faked past demos.
I wonder if we'll ever get these developer conferences to feel like developer conferences
again, or if they're just always going to be consumer device pitches, always now.
So it's worse than that, right?
It's always consumer device pitches, and since COVID, they're really like glossy, you know,
this is who we are, like identity opportunities for the marketing department.
Yeah, yeah, and they really put it, they really gave it all in this one.
They put it all in there.
They packed it, and the only justification you could even claim that this is for developers
is that in a remote, roundabout way, it's giving developers a heads up about devices
they could be able to build apps for possibly, but with no details, you know, just vague
recollection and idea.
Maybe right?
Like it's all maybe.
Yeah.
So I mean, geez, I guess we've just maybe normalized it with Apple.
But where it does seem a little bit different is Apple does seem to remember is for developers,
and they do, even during the main keynote, which is for the press, they do drop more
developer focused stuff in there about the API and about when that kit is going to be
available.
And that is at least useful.
But the other thing is, and you put it really well, is what Google's doing there feels like
low rent emotional manipulation.
And when Apple does it, it feels like they paid a Hollywood movie crew $10 million to
make that five minute video segment, you know, and it's just a, it's a whole different scale
of manipulation.
It's luxury emotional manipulation.
tailscale.com slash coder.
Go there for a free personal account for up to 20 devices and you go there to support
the show.
tailscale is a zero config VPN, it installs on any device in minutes, it'll manage your
firewall rules, and it'll even work with those dreaded double net situations.
It really works from anywhere.
I literally have not found a place where it does not work yet.
Devices connect directly to each other using wire guards noise protocol encryption.
So you build a flat mesh network based around the best security in the business.
Wire guard has changed the game, and tailscale brings it to the people.
You can easily and quickly create a secure network between your servers, computers, cloud
instances, virtual machines, and so on.
Even when you have firewalls and subnets and all that stuff between you tailscale makes
it work.
I've got it run everything from arch servers on x86 boxes to Raspberry Pi is running open
Suse and my iPad, I'm remote right now.
And I have the ability to connect to all of my systems in the studio so I can continue
all of my show production stuff, manage my mixer, even remote live stream all through
tailscale.
I'm doing it right now.
As I record this.
It's so powerful.
It's changed the way I work.
I'll never go back.
And by the way, in the most recent episode of Linux unplugged, we featured a great in
depth conversation with one of the co founders of tailscale.
And it gave me new insights into how tailscale is sustainable, and how it's built and set
up differently than almost any tech company in the last decade, really insightful conversation
with Avery.
So go check out the most recent Linux unplugged, because that was tops.
We also talked about the new Nvidia stuff in there.
I love tailscale.
My connections are always on.
I just now have bookmarks for all my different web dashboards and stuff that are on the tailscale
IP.
So no matter where I'm at, I just use the same bookmarks in my web browser.
It's so flawless.
And you can try it for free for up to 20 machines.
And they've built the service so that way that plan can last.
Go check it out and support the show and give it a go.
You go to tailscale.com slash coder.
You'll thank me.
Trust me, once you get this up and running, you will thank me try it out tailscale.com
slash coder.
It's official remote work has zero, absolutely zero negative impacts on your productivity.
According to a research team from Texas A&M University School of Public Health, it's concluded
in this study that employees and company resiliency is actually enhanced through remote work.
And they published a statement last Friday.
The study went beyond just assessing the productivity to examine the causes of workplace injuries
and they actually found that it was important for employees to take regular breaks.
And if they work from home, workplace injuries drop dramatically.
Because they're not workplace injuries.
I know.
But what do you think of this?
Their study?
I mean, I got to imagine you just disagree up up and down, but their study says it zero
negative impact on productivity.
I feel like that statement has to be false.
One, anecdotal, right, my own experience and two, you know, it's such an absolute statement.
You know, zero, all right.
No, I don't agree.
I mean, I I've come to terms with the realities of remote work.
Now.
It's funny.
I was an early proponent.
I think as were you, right?
And then as everybody did it, I realized one of the things I liked about it was that it
was a nice perk to have in the hiring process.
Now that it's not, it's like, Oh, what a panda, but yeah, it does have its drawbacks.
They say, though, that in the study, almost all of the employees were right back up to
the same level of output as they were during or before Hurricane Harvey.
That's when they were checking this.
And they say the huge message for employers right now is employees should be able to work
remotely or they should be able to work in a hybrid schedule because the productivity
gains are definitely there.
And I was thinking about this and wondering, well, if they if Texas A&M actually studied
this, what were they finding?
And I think they were finding that there is indeed some work that is better from home.
I've done a little bit of a study myself.
I have a little bit of empirical data and it's it's as simple as this.
I have taken this RV that I'm sitting in right now and I have parked it right next to buildings
that I have worked out of.
And I did this a lot at Linux Academy.
And there were definitely times where I would step outside my RV and I would walk five minutes
into the building, key card in, go into an office and I would have meetings and I would
do work there in the office.
And then there were other times in the day where I'd walk outside the building and I'd
walk into the RV and I do a totally different kind of work in the RV, like like phone calls
and emails and show prep.
I did better in the RV, but in office I did better when I was working on the new art and
logo designs with people there.
I had a better I had better interactions at the meeting tables with people and then we
would go to lunch together and that kind of stuff.
And so for me, I really found benefits in both.
But I realized that large companies, they have a hard time with these nuances.
And Apple is one of them.
And they've really laid down the law and said, you're coming back to work.
And as a result, their director of machine learning has resigned.
And he says it's due to the return to office policy.
I just want to say, even I think this is a huge fork up on Apple's part, massive, massive,
like somebody of that caliber.
It's not just a random dev that's going to be like slinging C sharp or Python or whatever
this it was a big win for them when they got this dude, right?
They were crowing about it.
Yeah, Ian Goodfellow.
Yeah.
So he's supposedly the guy who created GAN, which is generative adversarial network, which
is a huge innovation in the field of deep learning and machine learning into the whole
adversarial network idea is sort of key.
He created it, Apple swooped him up.
It was a big deal.
I think he was born in the late 80s.
So you know, he's in his 30s.
And he's immensely hirable.
And he wrote in his resignation email, quote, I believe strongly that more flexibility would
have been the best policy for my team.
And he's out Microsoft and basically every other tech, I'm like, my homie.
Yeah.
Come over here.
You'll you can work remote for us, right?
Have you considered calling a Cortana?
Sorry.
Yeah.
There is a bit of an irony.
Fig jam on Twitter pointed this out to us.
He says these tech companies have created all of this hardware and software to connect
people and enable them to collaborate and create from all over the world, but yet they
can't use these tools themselves.
What happened to eating your own dog food?
And I think fig jam has a point.
If anybody should be able to make remote work work, shouldn't it be Apple?
Shouldn't it be these companies like Facebook and Microsoft that are telling all these employees
to come back?
I mean, Microsoft created teams, or at least, you know, adopted, and then we keep hitting
this pretty hard almost every couple weeks.
The reality is for small businesses, I think remote work is going to be a fact of life,
especially in the tech field, because it's too hard to be competitive without it now.
I can see why, especially a company like Apple would be pretty aggressively trying to bring
people back.
See, I'm wondering if the reason I used to think it worked better was because it wasn't
forced on me, right?
And it was like a perk I could give, people were enthusiastic about it, they'd really
go all in.
Now that it's like something that basically is expected.
The power dynamic has changed.
It goes from something that you can grant for periods of time, but still have control
over, to now something that they're expecting of you, and you're trying to claw back a little
bit of that control.
I wouldn't even know if it's really a power dynamic, it's more, you know, I found that
people were so excited to work from home, that they would really like put in the extra
mile and be super communicative.
And I'm just, you know, I'm interviewing people.
And it's like, of course, it's work from home, like everybody just expects it now.
It's not as much of a deal sealer, I guess.
Hmm.
Well, all right.
I think the reason why I wanted to bring it up is because of Goodwin quitting Apple over
it.
And you know how these companies are so about their machine learning, and all of their products
being improved with it, and now, Goodfellas out.
It seems like if Apple wasn't willing to bend for them, they're probably not going to bend
for anybody on this.
And I thought Fig-Chan made a good point.
All right.
So let's, you mentioned a book this week in our Slack chat called Python Distilled.
Yeah.
For the gentlemen and gentle ladies out there looking to do a little Python.
For any snake charmers or prospective snake charmers.
It's pretty good.
You know, it has that kind of few intro chapters that are, you know, you're probably gonna
skip if you've done any real development.
But if not, that's cool, too.
But I like the perspective, the guy's name is Beasley.
I hope I'm not butchering it, David Beasley.
He takes a very practical, very, this is a feature of Python you could use.
It's starting with, I think, 3.8, if I'm not mistaken.
So like modern Python.
And these are real world problems where this makes sense.
Great pick.
We'll put a link to that at coder.show slash, what is this, 466?
Yeah.
666.
Or 466.
Ah.
I know.
You know, but it does mean we've rounded the corner to 500.
You realize.
That's a lot.
I know.
What do you even do for 500?
What do you even do?
Invert the show into a next theme show.
And a video show, right?
All YouTube, all the time.
We can switch from Boost to Super Chats.
That'd be great.
Now we go on Twitch.
Yeah, ask everybody to become members or whatever it is over there.
Wait, can't we just like dance and go on TikTok?
Yeah.
Or, you know, I think if you just stand in a pool, you can wear a bathing suit and it's
legit.
I don't think that works for us.
Oh, maybe not.
And what if your hair gets wet?
Yeah, it doesn't look as good.
It bounces back quick.
But while it's wet, it doesn't look so good.
Well, naturally, of course.
I mean, you know what I've discovered traveling again, is it really is the greatest gift when
it comes to my email, because I get so much damn email.
And so I can just tell people, oh, sorry, I'm traveling.
I'm a little slow on my email right now, even though I'm always slow on my email, right?
I'm always slow on my email, but now I have a reason for it.
And it feels like a weight has been lifted off my shoulders, you know, on the lamb from
your email.
I mean, what the fuck?
I think you well, I think you forget what it's like to travel.
Like this is a nice aspect of traveling is like, oh, yeah, no, I'm sorry, I'm totally
behind on that.
And it's true.
I am.
I'm not lying.
But I at least feel like clearly the rest of the world is is better at two life skills
than I am.
And one of them is committing to anything beyond three days, because my friends and
family asked me to commit to stuff two, three weeks ahead of time.
I know I hate that.
Oh, it is honestly a struggle.
I really don't understand how the rest of humanity has any idea what they're doing in
two weeks.
It just it doesn't make any sense.
And I constantly am in that trap and I struggle and I say yes, and then I regret it.
And it's the worst.
And the other thing, the number two thing that I think humanity on a whole does better
than me is getting back to their email.
I turns out in the only person in the world who doesn't like just getting jobs dropped
in my inbox with totally just arbitrary expectations of how fast I'm going to read, how fast I'm
going to respond and how fast I'm going to take action on their question that they asked
me to do in the email.
And see, in my world, I see and this is where I'm so wrong because it's only me that thinks
this way.
In my world, I think I'm going to get to that on my terms when I have time to read my email.
And if they're asking me to do something, I'm going to do that when I have time to do
it, which might not be for a couple of days.
But you see, the rest of the world, that's not how they think.
They think I have sent this thing to Chris.
It requires action on his part.
I imagine he'll get it back to me in the next couple of hours.
And then if a day or so goes by and I haven't gotten back to them, I then and this happens
all the time.
I get another email asking, hey, hey, I'm just following up, didn't hear back from you.
And so by the time I often get to my email, I can have two or three like, hey, I really
need this done or hey, I was wondering.
And it's like, you know, been maybe three or four days since I saw their last email.
And I'm the only person that's a problem with because clearly, everybody else does fine
with that.
Otherwise, people would stop it.
And those two things, I feel like when I'm traveling, I'm off the hook on like I it's
okay that I can't tell you where I'm going to be or if I can do something in a week because
you know what I'm traveling.
And so I'll just have to get back to you when I get back.
And you know what?
Sorry, I didn't take action on that and get that back to you within, you know, three hours
I'm traveling and yesterday was a 10 hour drive day.
And so I just didn't check my email.
And like I have actual reasons and I feel like I'm not a failure.
Email is a source of constant stress and anxiety for me.
And I go through periods where it's better.
And I go through periods where it's worse.
And right now I'm going through one of the worst periods where it's just it's too much.
And if I could do it over again, I would ask for I would ask for a system where I can just
not accept emails for a while.
Like sorry, for the next three days, Chris is not accepting new emails.
Please try again when he arrives back.
Why haven't we built that?
And out of office is not enough.
I don't know.
I was crying.
I think we just can't have it right.
We can't have nice things.
Can we?
No.
That's why.
That's why I like boost.
All right, Freak boosted in right as we were starting the show, actually, with 10000 sats.
He says Star Trek Picard season two has its cringe.
But at the end, with Q is very much Anne Rind meets Breaking Bad.
But in a good way.
I don't know what that means.
But I was I was satisfied with the ending.
I don't think we got to spoil it.
Did you watch the end of Picard?
I did not.
So I lack the competence to answer this.
They tied up a lot of the loose ends better than they do in most new Trek shows.
So have you started the strange new worlds?
No, I think it's the best.
I'm watching the original series.
I'm on season.
I went back.
Oh, yeah.
Yeah, yeah.
That's what we did, too.
I think strange new worlds may have its issues, but I think it's the best of the new batch
so far.
It's worth it.
Yeah, I think it's probably worth it.
Boost.
Dave Jones boosted in with 1000 sats.
He says, Oh, I know of Microsoft Access.
We actually have a secretary who insists on keeping her own version of our entire customer
database in an access database.
So she just types it all in there and keeps it updated by hand.
Samuel Blair also boosted in with 500 sats.
I know about Microsoft Access.
I wasn't born yesterday.
And then the Golden Dragon came in with a row of ducks.
That's 2222 sats.
He said, Did I hear access?
I tried learning that eons ago.
My mother in law is an access ninja, where she works.
It's a huge part of what they do.
Even today.
Thanks for the shows.
That's the general theme is we were right.
Access is still in use.
I feel like there was a hard age line on the feedback we got on access, though.
I was gonna say that, too.
Yeah.
And did you notice the boosters seem to know what access is, but the emailers didn't, which
who knows what that's about.
But I just thought that was interesting.
Yeah.
I mean, boost is so new.
I don't know if that's Yeah, it's hard to say.
It's hard to say.
We got another one by Dave.
He says, You guys are dead on does look like the overall macro market is about to hurt
a lot of folks.
That's why I need a Bitcoin dad robe to properly ride this ship down.
You know, I mentioned the Bitcoin dad pod, but you know what, that like the Friday or
something before the recent downturn in the market, we totally called the Luna crash and
why it was going to go down, why why Tara would deep egg and why the rest of the market
would tumble.
Just saying.
Just saying.
Totally nailed it.
Is that a new J.B. show?
No, it is a show a friend of mine is doing.
And I am happily just taking on the co-host role for once.
Cool.
Yeah.
So I just get to sit back and, you know, pontificate.
It's actually it's really I can tell you, I like to pontificate even by myself.
And slurks a lot writes in, as always, with elite boost 1337 sats.
Nice.
I'm a Linux Foss enthusiast and an I.T. veteran, but I don't consider myself a coder.
I do listen to all the J.B. shows and I'm a supporter on Patron, but I love being able
to boost.
So here you go.
Pew, pew, pew, pew.
Now the user boosted in asking us if we have any thoughts on I think it's.
Sorry, sorry.
Somebody else emailed me and I'm pretty suspicious that you're the same dude.
Not yet.
I haven't gotten to get my hands around it.
It's basically a alternative to electron, but very similar high level idea.
And you're missing one important part.
Oh, I didn't miss it.
I ignored it.
But go ahead.
It's got rust.
Yeah.
So the idea is you kind of use whatever you want on the front end, but the core is built
with rust.
Oh, that's not what I thought you were going to say.
Oh, node?
Nope.
You missed it.
What?
He has a special request.
A shout out to Egon.
Egon gets the shout out.
That's so great.
We also got some thank you bows from Cospeland from Freak.
He was just streaming Dim Sats as he listened.
And we got a bonus thank you boost from Dave Jones.
And Dave, I'm glad you're back listening again.
I hope that means everybody is doing well at home now and you're getting caught up on
your podcast.
Shout out to Dave because he was our triple booster this week.
And we we appreciate that, Dave.
Glad you're glad to have you back.
Can I say something?
Yeah.
So coding challenges are coming back in a weird form.
I love it.
I bought a book, bought my own money.
There's no like weird corrupt crap going on here called the Python workout.
I'll find a link.
It's from Manning Press.
And it's 50 Python assignments starting from easy to pay me.
So if you want to follow along, I'm going to put up a GitHub thingamajig.
And I'm hoping to have the first one for next week.
You say Python workout?
I think I got a link to that.
I'll put it in the show notes.
OK.
Yeah.
It's got like a dude with like no shirt on, on the cover.
Right.
That's not you?
I wish.
It's got weird.
All right.
Yeah.
Link is now officially in the show notes.
And I'll also drop it in the chat room if you're watching live because, you know, we do
this here show on the Mondays at noon Pacific, 3 p.m.
Eastern.
And you can hang out in our chat room.
Yeah, that handsomely tattooed man is me.
Yes.
Nicely done, sir.
Oh, my goodness.
I like how he has tattoos that enhance his muscles.
I like the craftily placed robes, shall we say.
Yeah.
Boy, if that thing was off by even an inch, it'd be a totally different book.
Let's just say.
It would probably sell better, too, let's be honest.
All right.
Thank you to our members at CoderQA.co.
You're going to get a Coderly soon.
You join that.
You get access to the show with no ads and you get the Coderly report.
And it's a way to say, you know, thank you.
And it's a way for us to say thank you, too, by giving you a few perks.
It's a nice little setup and you can support the entire network and get access to all of
the shows and all of their perks by going to Jupiter.party.
So for this year's show, CoderQA.co and for the whole network, Jupiter.party.
And of course, if you want to do a one off, you can just send us a boost with a message,
which we always appreciate.
Mr. Dominic, is there anywhere you want to send the people before we wrap it up for more
organ?
If you go to tmb.inc, that's.inc slash careers, we are hiring.
Very good.
Very good.
We should put a link to that in the show notes, too, just to make it easy for the peoples.
Let's see if you want to get a hold of me.
You can do it on Matrix.
We do have a Coder Radio feedback channel over there and a general chat.
Shout out to the Matrix folks listening live right now.
And of course, I'm on Twitter at Chris Ellis and the whole podcast is at Coder Radio Show.
And the network to get network announcements is at Jupiter Signal.
And you know, I will give you a little hot tip before we wrap up.
Even if you don't want to use the Twitter, but you still want to see what people are
posting about and kind of use it as a news feed.
Check out knitter and n-i-t-t-e-r dot net.
It's a way you can just plug in a username like, you know, at Coder Radio Show and you
can get a nice clean feed of everything that account is going on about without having to
go to the dumpster fire that is actually Twitter.
Well, that's a stalker's paradise right there.
It is, but it's also just a nice way to, I see you go into it right now.
Yeah, I'm like, whoo-hoo!
That's so funny.
Knitter is just a nice way to consume content that people post there because you just can't
get away from it.
You know, people put stuff on Twitter and...
I don't know why Tay-Tay Taylor Swift blocked me.
That's all I'm saying.
No, who could guess?
Nobody could probably even take a guess as to why.
So I'll put a link to knitter in the show notes too.
Again, those are at coder.show slash 466.
They're always just the episode number and you know, you can grab a link to that.
That way you don't have to do the Twitter thing if you don't want to.
Huzzah.
Exactly.
Huzzah.
Last but not least, I will mention we are live again.
Come join us over at jblive.tv on a Monday.
It gets converted to your time zone at jupiterbroadcasting.com slash calendar.
Feedback, your opinions, your thoughts, your ideas, huge part of the show.
Go to coder.show slash contact to send that information in to give us your thoughts, your
ideas, your topics.
And of course, you can always send us a boost with the new podcast app at newpodcastapps.com.
Thanks so much for tuning this week's episode of the Coder Radio program and we'll see you
right back here next week.
