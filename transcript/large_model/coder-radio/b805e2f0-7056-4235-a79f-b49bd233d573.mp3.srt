1
00:00:00,000 --> 00:00:07,000
This is Kota Radio, episode 369, for August 5th, 2019.

2
00:00:31,000 --> 00:00:34,000
Hello, and welcome to Kota Radio.

3
00:00:34,000 --> 00:00:40,000
Jupiter Broadcasting's weekly talk show that takes a pragmatic look at the art and business,

4
00:00:40,000 --> 00:00:46,000
software development and related technologies, and probably a few other things this week,

5
00:00:46,000 --> 00:00:52,000
because while I'm normally joined by Mr. Michael Dominic, today he's out sick.

6
00:00:52,000 --> 00:00:55,000
You gotta heal. You gotta take your health seriously.

7
00:00:55,000 --> 00:01:00,000
As my perhaps reluctant co-host knows very, very well.

8
00:01:00,000 --> 00:01:01,000
Welcome to the show again, Chris.

9
00:01:01,000 --> 00:01:07,000
Hello, Mr. Payne. My plans of slowly poisoning Mr. Dominic while he travels

10
00:01:07,000 --> 00:01:12,000
so I can regain my place here on this show have come to fruition.

11
00:01:12,000 --> 00:01:15,000
I assumed he was just in danger living in Florida anyway, right?

12
00:01:15,000 --> 00:01:16,000
That's not safe down there.

13
00:01:16,000 --> 00:01:19,000
And whenever you got a kid, you're just gonna get sick.

14
00:01:19,000 --> 00:01:20,000
You're like a target, man.

15
00:01:20,000 --> 00:01:22,000
You're like a target. But I'm glad I could be here.

16
00:01:22,000 --> 00:01:25,000
And really, I kind of miss doing the show, so it's nice to have an opportunity to come on,

17
00:01:25,000 --> 00:01:27,000
although it's not the same without Mike.

18
00:01:27,000 --> 00:01:29,000
It certainly isn't.

19
00:01:29,000 --> 00:01:32,000
And actually, it's kind of good you're here today, because let's start with some feedback.

20
00:01:32,000 --> 00:01:35,000
There's some feedback you might be able to help me with.

21
00:01:35,000 --> 00:01:41,000
All right, so over on kotoradio.reddit.com, that's right, we do have a subreddit,

22
00:01:41,000 --> 00:01:46,000
user Borkdude, who I will note is a prolific member of the Clojure community.

23
00:01:46,000 --> 00:01:48,000
You'll see him making all kinds of neat utilities,

24
00:01:48,000 --> 00:01:53,000
writing excellent blog posts and helping users out on the Clojure subreddit all the gosh darn time.

25
00:01:53,000 --> 00:01:56,000
He writes, I'm looking for a good mic for voice recording,

26
00:01:56,000 --> 00:01:58,000
since I'll be a guest on a podcast soon.

27
00:01:58,000 --> 00:02:01,000
Since you sound good in your shows, thank you.

28
00:02:01,000 --> 00:02:03,000
Can you share what mics you're using?

29
00:02:03,000 --> 00:02:07,000
And, you know, I know a thing or two about this too.

30
00:02:07,000 --> 00:02:10,000
You've been doing this a long time, and it can be especially tricky.

31
00:02:10,000 --> 00:02:13,000
It's one thing to do it when you got, you know, production budget,

32
00:02:13,000 --> 00:02:16,000
and it's another when, you know, you just need to sound good enough.

33
00:02:16,000 --> 00:02:22,000
Yeah, and first of all, it's really kind of him to consider that on the behalf of the podcast.

34
00:02:22,000 --> 00:02:23,000
Oh my gosh, so much so.

35
00:02:23,000 --> 00:02:25,000
Right, thank you for just thinking of that.

36
00:02:25,000 --> 00:02:29,000
Plus, it's kind of nice, even if you're not like going to be a guest on a podcast

37
00:02:29,000 --> 00:02:31,000
or you're not planning to record an audio book anytime soon,

38
00:02:31,000 --> 00:02:38,000
it's kind of nice to have a decent microphone for meetings, jumping on a, you know, a call,

39
00:02:38,000 --> 00:02:41,000
maybe you want to do a call from your PC to your desktop.

40
00:02:41,000 --> 00:02:43,000
It's just nice to have a good microphone in general,

41
00:02:43,000 --> 00:02:44,000
but you don't need to spend hundreds of dollars.

42
00:02:44,000 --> 00:02:45,000
Right.

43
00:02:45,000 --> 00:02:48,000
So there are a couple that I do recommend.

44
00:02:48,000 --> 00:02:51,000
I was trying to remember before the show, and I figured it out.

45
00:02:51,000 --> 00:02:52,000
I'll put a link in the show notes.

46
00:02:52,000 --> 00:02:55,000
If you just want to get started with something that hooks up over USB,

47
00:02:55,000 --> 00:03:00,000
the one thing I'm going to ask of you is make sure you buy a microphone that has a headphone jack

48
00:03:00,000 --> 00:03:02,000
so you can do what's called local monitoring.

49
00:03:02,000 --> 00:03:03,000
That is so important.

50
00:03:03,000 --> 00:03:05,000
Right, and also if you're using Linux or something like that,

51
00:03:05,000 --> 00:03:09,000
it just makes things a little bit easier because it just shows up as an output device and whatnot.

52
00:03:09,000 --> 00:03:12,000
But I really like for the entry level that still sounds pretty great,

53
00:03:12,000 --> 00:03:21,000
like you could start a podcast with this, the Audio Technica ATR2500 USB Condenser Microphone.

54
00:03:21,000 --> 00:03:24,000
It's $70, primeable.

55
00:03:24,000 --> 00:03:25,000
That's hard to beat.

56
00:03:25,000 --> 00:03:28,000
Yeah, and it'll be your audio in and your audio out.

57
00:03:28,000 --> 00:03:33,000
It's all you need, so you don't have to buy an audio interface or anything like that.

58
00:03:33,000 --> 00:03:34,000
It's really nice and straightforward.

59
00:03:34,000 --> 00:03:39,000
Another solid microphone that I've used for years that's a little more expensive, similar thing,

60
00:03:39,000 --> 00:03:42,000
the Rode Podcaster, pretty good microphone.

61
00:03:42,000 --> 00:03:48,000
And then if you want to step things up from there, there's things like the Heil PR40 or the –

62
00:03:48,000 --> 00:03:52,000
what's the Rogan mic that people love that doesn't work for my voice?

63
00:03:52,000 --> 00:03:53,000
Oh, the SM7B?

64
00:03:53,000 --> 00:03:56,000
Yes, so there's tons of good mics when you want to start going up.

65
00:03:56,000 --> 00:03:58,000
And just one thing to keep in mind is like I just said there,

66
00:03:58,000 --> 00:04:00,000
like not every mic works for everybody.

67
00:04:00,000 --> 00:04:03,000
I bought this nice microphone thinking, oh, I'm going to sound great now,

68
00:04:03,000 --> 00:04:05,000
works great on the Joe Rogan podcast.

69
00:04:05,000 --> 00:04:07,000
I put it on and I hated the way it sounded.

70
00:04:07,000 --> 00:04:10,000
Yeah, you're like, no, this is not for me.

71
00:04:10,000 --> 00:04:11,000
So you will probably have to experiment,

72
00:04:11,000 --> 00:04:13,000
and there are probably a couple different price levels, right?

73
00:04:13,000 --> 00:04:16,000
You have nice USB ones, and if it's just sort of like I'm an occasional guest

74
00:04:16,000 --> 00:04:18,000
and for conference calls, that's the level.

75
00:04:18,000 --> 00:04:22,000
If you're doing something more serious, then maybe you want to look into XLR-based mics

76
00:04:22,000 --> 00:04:23,000
and getting a real interface.

77
00:04:23,000 --> 00:04:27,000
But then you're probably going to be out, what, 300, 400 bucks by the end of it?

78
00:04:27,000 --> 00:04:32,000
Yeah, as you well know, there's – well, there's a price for everybody, really.

79
00:04:32,000 --> 00:04:36,000
But yeah, 300-something bucks, you could probably get something pretty usable.

80
00:04:36,000 --> 00:04:38,000
If you're thinking about starting a podcast,

81
00:04:38,000 --> 00:04:41,000
maybe your business wants to do a podcast or you personally want to start one,

82
00:04:41,000 --> 00:04:46,000
I have to recommend Friend of the Show Dan Benjamin's podcast method.

83
00:04:46,000 --> 00:04:47,000
Just go Google that.

84
00:04:47,000 --> 00:04:52,000
It's on the 5x5 network, and rumor has it, rumor has it,

85
00:04:52,000 --> 00:04:54,000
a little birdie tells me that it's about to start back up.

86
00:04:54,000 --> 00:04:59,000
It's been on hiatus since 2017, but rumor has it it's about to start very soon.

87
00:04:59,000 --> 00:05:02,000
And the podcast method, 26 episodes deep,

88
00:05:02,000 --> 00:05:04,000
so it wouldn't take you that long to go through it.

89
00:05:04,000 --> 00:05:08,000
In 26 episodes, you'd basically know how to run a network.

90
00:05:08,000 --> 00:05:10,000
I mean, it's really – it's an in-depth thing.

91
00:05:10,000 --> 00:05:14,000
And he covers everything from gear to technique.

92
00:05:14,000 --> 00:05:15,000
So that's the podcast method.

93
00:05:15,000 --> 00:05:18,000
Yeah, we'll have some mics there in the show notes.

94
00:05:18,000 --> 00:05:22,000
Again, it was the Audio Technica ATR2500 USB.

95
00:05:22,000 --> 00:05:24,000
And I really recommend you get the USB edition

96
00:05:24,000 --> 00:05:28,000
because you're going to need to get yourself a USB audio interface

97
00:05:28,000 --> 00:05:31,000
if you go with anything that's XLR or analog,

98
00:05:31,000 --> 00:05:35,000
like a headset that comes in over like a microphone plug,

99
00:05:35,000 --> 00:05:39,000
like a little tiny one that needs to go into something besides your machine

100
00:05:39,000 --> 00:05:42,000
that has a built-in port if you want it to sound decent.

101
00:05:42,000 --> 00:05:44,000
Yeah, you need to know how you sound.

102
00:05:44,000 --> 00:05:45,000
Yeah, you've got to be able to hear it.

103
00:05:45,000 --> 00:05:46,000
Excellent.

104
00:05:46,000 --> 00:05:47,000
Well, that's a great question.

105
00:05:47,000 --> 00:05:48,000
Good luck.

106
00:05:48,000 --> 00:05:51,000
And I guess we look forward to listening to you on that podcast soon.

107
00:05:51,000 --> 00:05:54,000
And you say he's busy, he's active, I should say, in the Clojure community?

108
00:05:54,000 --> 00:05:55,000
Oh, yes, very much so.

109
00:05:55,000 --> 00:05:58,000
Put a link in the subreddit on the podcast.

110
00:05:58,000 --> 00:05:59,000
Submit to the subreddit.

111
00:05:59,000 --> 00:06:03,000
Yeah, once it's out, let us know and we'll recommend it here for sure.

112
00:06:03,000 --> 00:06:04,000
That's really neat.

113
00:06:04,000 --> 00:06:06,000
You've got people in the Clojure community listening to the show now, don't you?

114
00:06:06,000 --> 00:06:08,000
I love it.

115
00:06:08,000 --> 00:06:10,000
Well done, sir.

116
00:06:10,000 --> 00:06:16,000
So I wonder how the old Clojure community felt about Mike's take.

117
00:06:16,000 --> 00:06:17,000
That's a good question.

118
00:06:17,000 --> 00:06:21,000
We got some good feedback on Twitter about it, too.

119
00:06:21,000 --> 00:06:22,000
I'll wait for him to come back.

120
00:06:22,000 --> 00:06:25,000
Yeah, there's some other feedback, some people were being helpful.

121
00:06:25,000 --> 00:06:27,000
So we'll definitely talk more about that.

122
00:06:27,000 --> 00:06:28,000
Helpful?

123
00:06:28,000 --> 00:06:30,000
I mean, sometimes, sometimes it's helpful.

124
00:06:30,000 --> 00:06:31,000
Yeah, all right.

125
00:06:31,000 --> 00:06:32,000
You're so jaded.

126
00:06:32,000 --> 00:06:34,000
No, you know, you know, I guess.

127
00:06:34,000 --> 00:06:39,000
Well, Mr. Payne, since Mr. Dominic isn't here, is it okay if I bring a couple of stories to the class?

128
00:06:39,000 --> 00:06:40,000
Yeah, of course.

129
00:06:40,000 --> 00:06:44,000
There's one that you found, which is the exact opposite of a story I found.

130
00:06:44,000 --> 00:06:45,000
Oh, boy.

131
00:06:45,000 --> 00:06:47,000
So I thought that'd be kind of interesting to talk about this week.

132
00:06:47,000 --> 00:06:53,000
And it's about the plight of browser extension developers.

133
00:06:53,000 --> 00:06:55,000
So the first one is a link that you found.

134
00:06:55,000 --> 00:07:00,000
Google and Mozilla are failing to support browser extension developers.

135
00:07:00,000 --> 00:07:01,000
And it's a good case.

136
00:07:01,000 --> 00:07:04,000
It was just recently published, and you'll have a link in the show notes.

137
00:07:04,000 --> 00:07:06,000
But I grabbed a couple of things from it.

138
00:07:06,000 --> 00:07:11,000
And I thought this would be good, like, you know, fodder for conversation.

139
00:07:11,000 --> 00:07:18,000
So the author writes, it's a regular occurrence to hear open source developers are selling their browser extensions,

140
00:07:18,000 --> 00:07:22,000
only for their users to then be exploited later on by new owners.

141
00:07:22,000 --> 00:07:23,000
Yeah, right.

142
00:07:23,000 --> 00:07:24,000
We've seen a ton of these lately.

143
00:07:24,000 --> 00:07:29,000
You build up, you know, a handful of users, you monetize them, you sell them off.

144
00:07:29,000 --> 00:07:35,000
He writes, we are, or she writes, we are witnessing the failure of browser vendors to recognize the value of our labor

145
00:07:35,000 --> 00:07:39,000
and the important role it plays in a healthy browser ecosystem.

146
00:07:39,000 --> 00:07:43,000
They go on to say Mozilla has deprioritized the placement of donation buttons,

147
00:07:43,000 --> 00:07:50,000
and the Chrome Web Store and the Microsoft Store do not offer features for supporting extension developers at all.

148
00:07:50,000 --> 00:07:54,000
How important are extensions to why you use a web browser?

149
00:07:54,000 --> 00:07:57,000
They are, they play a small role.

150
00:07:57,000 --> 00:07:58,000
Really?

151
00:07:58,000 --> 00:08:06,000
I mean, I can think of a few that we use pretty regularly, and they're not, it's not essential, but it would be a factor, right?

152
00:08:06,000 --> 00:08:13,000
Like if you, once you have started using extensions, unless there is a direct equivalent or the extension is available in both places,

153
00:08:13,000 --> 00:08:16,000
it's at least a small disincentive to shift.

154
00:08:16,000 --> 00:08:22,000
I mean, for me, it's pretty strong because a big part of my day job is collecting information from the web

155
00:08:22,000 --> 00:08:26,000
that I'm going to use for, you know, consideration in a show later.

156
00:08:26,000 --> 00:08:33,000
So I want to do research or reading or I want to mark it up or I want to save a link, and a lot of that workflow uses extensions.

157
00:08:33,000 --> 00:08:39,000
And for me, it's sometimes been like the thing that keeps me on Chrome, for example, or what kept me on Firefox for so long.

158
00:08:39,000 --> 00:08:46,000
In fact, there's even forks of Firefox to support the old Netscape plugin API.

159
00:08:46,000 --> 00:08:47,000
Oh, boy.

160
00:08:47,000 --> 00:08:49,000
So it's obviously super important to some people.

161
00:08:49,000 --> 00:08:55,000
And this author is making the case that there's really no support from the browser manufacturers.

162
00:08:55,000 --> 00:08:58,000
Yeah, I think the analogs to, you know, some other things.

163
00:08:58,000 --> 00:09:04,000
We've seen more platforms that have extensibility, things like Alexa skills or, you know, good thinking.

164
00:09:04,000 --> 00:09:05,000
Just in case.

165
00:09:05,000 --> 00:09:11,000
But it does seem like some platforms expect there to be this sort of user provided content.

166
00:09:11,000 --> 00:09:16,000
Thinking about how that gets monetized, if you want it to exist, seems like it makes sense.

167
00:09:16,000 --> 00:09:23,000
Anything of certain complexity, port requirements, needs a form of monetization just to be sustainable, I suppose.

168
00:09:23,000 --> 00:09:26,000
And that's really where the issue kind of comes up.

169
00:09:26,000 --> 00:09:28,000
Now, so that's the story you found.

170
00:09:28,000 --> 00:09:40,000
The story I found, which is like an exact contrast and maybe explains the entire problem, is half of Google Chrome extensions have fewer than 16 installs.

171
00:09:40,000 --> 00:09:42,000
Wait, 16?

172
00:09:42,000 --> 00:09:43,000
Yeah.

173
00:09:43,000 --> 00:09:54,000
In all, about 50 percent of all Chrome extensions have fewer than 16 installs, meaning that half of the Chrome extension ecosystem is basically a ghost town.

174
00:09:54,000 --> 00:09:59,000
According to a recent scan of the entire Chrome Web Store conducted by extension monitor.

175
00:09:59,000 --> 00:10:00,000
Interesting.

176
00:10:00,000 --> 00:10:04,000
Now, I do wonder, I'd like to see some more detailed statistics because it's kind of hard to say.

177
00:10:04,000 --> 00:10:06,000
And it does, I mean, it does make sense, right?

178
00:10:06,000 --> 00:10:08,000
How many extensions do you use to install?

179
00:10:08,000 --> 00:10:09,000
A handful?

180
00:10:09,000 --> 00:10:10,000
More than I should.

181
00:10:10,000 --> 00:10:15,000
And probably most of them or the, you know, the most essential ones are the popular ones, right?

182
00:10:15,000 --> 00:10:21,000
Like there's a couple of nice ones that you get like, you know, HTTPS Everywhere maybe or there's a certain ad blocker that you use.

183
00:10:21,000 --> 00:10:23,000
But it's a rapid decline of like...

184
00:10:23,000 --> 00:10:25,000
I've got 15 that I can count.

185
00:10:25,000 --> 00:10:26,000
Oh, wow.

186
00:10:26,000 --> 00:10:29,000
Just in my toolbar.

187
00:10:29,000 --> 00:10:31,000
Okay, so you have a few more than I do.

188
00:10:31,000 --> 00:10:43,000
It's a markdown link generator, LastPass, the template extension, which is just a remarkable piece of engineering because you can make your own extensions out of it.

189
00:10:43,000 --> 00:10:53,000
And it's how I can copy entire sections of an article and then it will go get the URL and the title of the document and then I can just paste that whole thing.

190
00:10:53,000 --> 00:10:54,000
That is nice.

191
00:10:54,000 --> 00:10:57,000
It's a really nice extension and there's a good community around it.

192
00:10:57,000 --> 00:10:59,000
The other one I have is Imgur Reupload.

193
00:10:59,000 --> 00:11:01,000
This is one I use to share like an image with the team a lot.

194
00:11:01,000 --> 00:11:04,000
I'll capture something and I'll use this just to repost on Imgur.

195
00:11:04,000 --> 00:11:09,000
So you capture this and then it just gives you a little selection window and then just repost it up on Imgur.

196
00:11:09,000 --> 00:11:11,000
That's the URL in your clipboard.

197
00:11:11,000 --> 00:11:16,000
Right, skip all the part where you like take a screenshot and save it and then open an Imgur tab and then upload it.

198
00:11:16,000 --> 00:11:17,000
Right.

199
00:11:17,000 --> 00:11:21,000
I now have switched to using a pinboard extension.

200
00:11:21,000 --> 00:11:29,000
I used to use a JavaScript bookmark or whatever you call them, but now ad blockers and Chrome's built-in protection, they block all that.

201
00:11:29,000 --> 00:11:31,000
So I have an extension for that.

202
00:11:31,000 --> 00:11:36,000
I have the Reddit Enhancement Suite because I use Reddit enough to just make it a little bit better.

203
00:11:36,000 --> 00:11:39,000
I'm also using uBlock Origin because...

204
00:11:39,000 --> 00:11:41,000
I don't think you need to justify that one.

205
00:11:41,000 --> 00:11:42,000
It makes it more readable, right?

206
00:11:42,000 --> 00:11:43,000
Yeah.

207
00:11:43,000 --> 00:11:48,000
And then a tool that we use internally, Digo, D-I-I-G-O, which is a highlighting tool.

208
00:11:48,000 --> 00:11:56,000
And then I have WebCache Viewer Clear so I can either clear my web cache or I can view the web cache version of a document.

209
00:11:56,000 --> 00:12:00,000
Then I have some buttons to subscribe in Feedly.

210
00:12:00,000 --> 00:12:11,000
I have an Evernote extension, Dark Reader, and some YouTube plugins as well as Seven Geese, which is our OKR software, and Grammarly.

211
00:12:11,000 --> 00:12:12,000
Nice.

212
00:12:12,000 --> 00:12:13,000
Okay.

213
00:12:13,000 --> 00:12:14,000
Well, that's fairly reasonable.

214
00:12:14,000 --> 00:12:20,000
And a lot of those, right, there's a couple ones that are like open source and have communities.

215
00:12:20,000 --> 00:12:24,000
There's several probably that are proprietary or at least supported by a company.

216
00:12:24,000 --> 00:12:25,000
And you know how bad I hate Grammarly.

217
00:12:25,000 --> 00:12:26,000
You know that.

218
00:12:26,000 --> 00:12:27,000
Yes, I do.

219
00:12:27,000 --> 00:12:28,000
I need a band.

220
00:12:28,000 --> 00:12:29,000
Yeah.

221
00:12:29,000 --> 00:12:32,000
So I kind of I am an edge case.

222
00:12:32,000 --> 00:12:33,000
I'm gathering from this article.

223
00:12:33,000 --> 00:12:34,000
I think you are.

224
00:12:34,000 --> 00:12:36,000
I probably have like six or so on that order.

225
00:12:36,000 --> 00:12:37,000
Yeah.

226
00:12:37,000 --> 00:12:39,000
And when you do you sync them?

227
00:12:39,000 --> 00:12:40,000
Do you sync them to a Google account?

228
00:12:40,000 --> 00:12:44,000
So when you open up like or Firefox accounts, when you open up your browser, they resync?

229
00:12:44,000 --> 00:12:45,000
Yes.

230
00:12:45,000 --> 00:12:46,000
Okay.

231
00:12:46,000 --> 00:12:47,000
That's what I used to do.

232
00:12:47,000 --> 00:12:48,000
Good and bad, actually.

233
00:12:48,000 --> 00:12:49,000
It is good and bad.

234
00:12:49,000 --> 00:12:56,000
So the article goes on to say further 19,379 extensions, which is just over 10 percent,

235
00:12:56,000 --> 00:13:04,000
of literally zero installs and further 25,000 extensions, 13 percent have just one user.

236
00:13:04,000 --> 00:13:09,000
And the scan found that there are very few Chrome extensions that really have managed

237
00:13:09,000 --> 00:13:12,000
to establish any really large dedicated user base at all.

238
00:13:12,000 --> 00:13:17,000
And according to extension monitor, around 87 percent of all extensions have fewer than

239
00:13:17,000 --> 00:13:19,000
a thousand installs.

240
00:13:19,000 --> 00:13:24,000
Now, you contrast to the other story that says the browser manufacturers aren't properly

241
00:13:24,000 --> 00:13:25,000
supporting them.

242
00:13:25,000 --> 00:13:27,000
Why would they?

243
00:13:27,000 --> 00:13:30,000
There doesn't seem to be user demand, unfortunately.

244
00:13:30,000 --> 00:13:32,000
Well, it is a kind of a funny thing, right?

245
00:13:32,000 --> 00:13:35,000
Because most of the people that use browsers aren't super into technology.

246
00:13:35,000 --> 00:13:37,000
A browser is like a key component of a computer.

247
00:13:37,000 --> 00:13:40,000
So you do not need to be an expert or even interested in doing anything but going to

248
00:13:40,000 --> 00:13:42,000
Facebook to use a browser, right?

249
00:13:42,000 --> 00:13:44,000
So you may not know extensions are a thing.

250
00:13:44,000 --> 00:13:49,000
And I think perhaps rightfully so in the push to security, extensions have been downplayed

251
00:13:49,000 --> 00:13:50,000
a lot, right?

252
00:13:50,000 --> 00:13:54,000
I mean, unless you already know they exist, maybe they get suggested to you, maybe.

253
00:13:54,000 --> 00:13:56,000
Yeah, I think you just nailed it in two different ways there.

254
00:13:56,000 --> 00:13:59,000
So the number one thing that you said is the user base.

255
00:13:59,000 --> 00:14:03,000
There's so many users that the power users that would be using extensions would be a

256
00:14:03,000 --> 00:14:07,000
minority because they're just a small fraction.

257
00:14:07,000 --> 00:14:09,000
And then to your other point, you're right.

258
00:14:09,000 --> 00:14:11,000
They have been sort of reduced in functionality.

259
00:14:11,000 --> 00:14:16,000
They're not quite as powerful as extensions were in the first iteration of browser extensions.

260
00:14:16,000 --> 00:14:19,000
They don't fundamentally change the game necessarily.

261
00:14:19,000 --> 00:14:23,000
And a lot of these are really more about tying into web services.

262
00:14:23,000 --> 00:14:30,000
When I like LastPass, Grammarly, Deego, Evernote, these are really about tying into web services

263
00:14:30,000 --> 00:14:32,000
more than anything else, Imgur.

264
00:14:32,000 --> 00:14:33,000
Yeah, right.

265
00:14:33,000 --> 00:14:36,000
So unless you're already running a web service then and then that falls into the category

266
00:14:36,000 --> 00:14:37,000
that we already talked about.

267
00:14:37,000 --> 00:14:41,000
And if I wasn't a user of any one of these individual services, I wouldn't bother with

268
00:14:41,000 --> 00:14:42,000
this extension.

269
00:14:42,000 --> 00:14:45,000
So again, I'm going to be a minority slice of the overall browser market.

270
00:14:45,000 --> 00:14:46,000
Right.

271
00:14:46,000 --> 00:14:49,000
Because it's not really a generic browser functionality versus your, you know, your

272
00:14:49,000 --> 00:14:51,000
templates tool, for instance, which is right.

273
00:14:51,000 --> 00:14:54,000
That's just kind of extending and making your browser more useful.

274
00:14:54,000 --> 00:14:57,000
And you can also see where the incentive is for the browser manufacturers.

275
00:14:57,000 --> 00:15:02,000
It makes sense to incentivize your LastPasses and your Evernotes and your Grammarly's to

276
00:15:02,000 --> 00:15:04,000
create browser extensions.

277
00:15:04,000 --> 00:15:10,000
But, you know, Joe Adblock creator who gets a thousand users just not worth Google's time.

278
00:15:10,000 --> 00:15:12,000
From the developer perspective, too.

279
00:15:12,000 --> 00:15:16,000
I mean, it just seems like I might write an extension if one doesn't exist and I just

280
00:15:16,000 --> 00:15:20,000
like really need it, need to do this functionality and I can, you know, slam together some JavaScript

281
00:15:20,000 --> 00:15:21,000
or something.

282
00:15:21,000 --> 00:15:25,000
But I don't think you would do it, you know, when extensions kind of were first coming

283
00:15:25,000 --> 00:15:26,000
onto the scene.

284
00:15:26,000 --> 00:15:29,000
I'm thinking like early Firefox, you know, as they're getting developed.

285
00:15:29,000 --> 00:15:30,000
They were exciting.

286
00:15:30,000 --> 00:15:32,000
But now we live like in an open source world.

287
00:15:32,000 --> 00:15:33,000
They're old news.

288
00:15:33,000 --> 00:15:34,000
Yeah, they're old news, right?

289
00:15:34,000 --> 00:15:35,000
I mean, no one thinks about it.

290
00:15:35,000 --> 00:15:39,000
You're familiar with like popular open source projects, but you don't get the same kind

291
00:15:39,000 --> 00:15:40,000
of control, right?

292
00:15:40,000 --> 00:15:43,000
You're forever dodging around and playing ball with whatever the browsers want to do.

293
00:15:43,000 --> 00:15:46,000
And you're always going to be sort of, you know, second name.

294
00:15:46,000 --> 00:15:49,000
You're like, sure, you make this cool project that you spend a lot of time on, but it's

295
00:15:49,000 --> 00:15:52,000
just an extension that maybe works in one browser.

296
00:15:52,000 --> 00:15:55,000
I guess it's in a way the market works these things out.

297
00:15:55,000 --> 00:15:56,000
I think so.

298
00:15:56,000 --> 00:15:59,000
But you have people on either ends that are, some people are suffering and some people

299
00:15:59,000 --> 00:16:00,000
are prospering.

300
00:16:00,000 --> 00:16:05,000
And it's interesting to see both percolate in one week in the different links that we

301
00:16:05,000 --> 00:16:06,000
collect.

302
00:16:06,000 --> 00:16:09,000
And it does seem, yeah, it's like it makes sense it's not working.

303
00:16:09,000 --> 00:16:11,000
If people want it to work, then there are probably things we could do.

304
00:16:11,000 --> 00:16:14,000
And it doesn't seem like there are people that care that much.

305
00:16:14,000 --> 00:16:20,000
You also found a link in here about a medium post that was, I think the title was all of

306
00:16:20,000 --> 00:16:23,000
the best engineering advice that I stole from non-technical people.

307
00:16:23,000 --> 00:16:29,000
And it reminded me about one of my favorite bosses back in the day when I worked in IT.

308
00:16:29,000 --> 00:16:33,000
She was not necessarily inherently technical.

309
00:16:33,000 --> 00:16:35,000
She joined the company.

310
00:16:35,000 --> 00:16:36,000
It was a cooking company.

311
00:16:36,000 --> 00:16:40,000
They made food and well, they're out of business.

312
00:16:40,000 --> 00:16:45,000
So the company was called Dream Dinners and the idea was you'd go on their website.

313
00:16:45,000 --> 00:16:48,000
This was when web applications were very new.

314
00:16:48,000 --> 00:16:50,000
You'd go on their website and they'd have a monthly menu.

315
00:16:50,000 --> 00:16:52,000
You'd put together an order.

316
00:16:52,000 --> 00:16:54,000
You submit it to the system, you pay for it.

317
00:16:54,000 --> 00:16:58,000
And then you'd go to one of their franchise locations and actually assemble them.

318
00:16:58,000 --> 00:16:59,000
Whoa.

319
00:16:59,000 --> 00:17:02,000
And then you put it in a bag and take it home and you got like the month's dinners.

320
00:17:02,000 --> 00:17:04,000
The downside was you had to go do the work.

321
00:17:04,000 --> 00:17:07,000
They later started doing the work for you trying to be competitive.

322
00:17:07,000 --> 00:17:12,000
But the other side was like you just spent two hours and you had a month's worth of food.

323
00:17:12,000 --> 00:17:13,000
All the ingredients were there for you, right?

324
00:17:13,000 --> 00:17:14,000
You kind of just put them together.

325
00:17:14,000 --> 00:17:17,000
You added your own garlic if you liked – there was no limit.

326
00:17:17,000 --> 00:17:21,000
So if you wanted four scoops of garlic, you could make an extra garlic.

327
00:17:21,000 --> 00:17:23,000
Or if you don't like garlic, you leave it all out.

328
00:17:23,000 --> 00:17:25,000
So that was the benefit.

329
00:17:25,000 --> 00:17:31,000
And you could be kind of menu selective and get something that was sort of tailored to your needs.

330
00:17:31,000 --> 00:17:35,000
I'll tell you the one time that we really found it very useful because I got an employee discount

331
00:17:35,000 --> 00:17:39,000
was right after Angela gave birth to our first son.

332
00:17:39,000 --> 00:17:42,000
And it was like we just wanted to not have to worry about food for a month.

333
00:17:42,000 --> 00:17:47,000
And we just stacked – before the due date, we just stacked the freezer full of dinners.

334
00:17:47,000 --> 00:17:48,000
That's great.

335
00:17:48,000 --> 00:17:52,000
And so there was a pretty significant technology backend that I was responsible for

336
00:17:52,000 --> 00:17:55,000
that made it all possible because the franchise was doing well for a while.

337
00:17:55,000 --> 00:17:57,000
That's a different story.

338
00:17:57,000 --> 00:18:01,000
Anyways, one of the things is the gal that ended up being the IT director

339
00:18:01,000 --> 00:18:04,000
started more in the food side of the operation.

340
00:18:04,000 --> 00:18:05,000
Oh, yeah, sure.

341
00:18:05,000 --> 00:18:08,000
But she was a very clever, intelligent individual.

342
00:18:08,000 --> 00:18:11,000
And she worked her way up into the IT position because she was always –

343
00:18:11,000 --> 00:18:14,000
Elaine was the one that everybody went to to go fix their computers.

344
00:18:14,000 --> 00:18:15,000
That person?

345
00:18:15,000 --> 00:18:16,000
Yep, they're competent.

346
00:18:16,000 --> 00:18:17,000
They figured it out.

347
00:18:17,000 --> 00:18:20,000
And as that position evolved and as that company grew over time,

348
00:18:20,000 --> 00:18:25,000
she retained the IT management position and got a team under her.

349
00:18:25,000 --> 00:18:29,000
And as the server side grew out, I became the Linux server admin.

350
00:18:29,000 --> 00:18:37,000
And she was probably one of the best bosses I've ever had.

351
00:18:37,000 --> 00:18:39,000
She had a really good sense.

352
00:18:39,000 --> 00:18:43,000
She had a good intuition of knowing when to trust what the team was saying

353
00:18:43,000 --> 00:18:48,000
and when to ask further questions and derive – she just listened.

354
00:18:48,000 --> 00:18:52,000
She listened and was able to derive what our intention was

355
00:18:52,000 --> 00:18:57,000
and ask some details, get the right things kind of out of us.

356
00:18:57,000 --> 00:19:02,000
And it was a really good combination while it lasted.

357
00:19:02,000 --> 00:19:03,000
It didn't last forever.

358
00:19:03,000 --> 00:19:04,000
Again, that's another story.

359
00:19:04,000 --> 00:19:05,000
So this article you linked,

360
00:19:05,000 --> 00:19:09,000
all of the best engineering advice I stole from non-technical people.

361
00:19:09,000 --> 00:19:16,000
Number one, people like us make our money in the seams of things.

362
00:19:16,000 --> 00:19:20,000
And the whole thing goes on about how they brainstorm,

363
00:19:20,000 --> 00:19:24,000
how they do their work, and it reminded me a lot about listening,

364
00:19:24,000 --> 00:19:27,000
asking the right questions.

365
00:19:27,000 --> 00:19:29,000
Even if you're not a technical person,

366
00:19:29,000 --> 00:19:33,000
you can actually still be a really solid contributor in that environment.

367
00:19:33,000 --> 00:19:38,000
And I mean, there's so many things of business and just life are like process.

368
00:19:38,000 --> 00:19:40,000
And everyone has to do those things.

369
00:19:40,000 --> 00:19:42,000
Building a house or building a server.

370
00:19:42,000 --> 00:19:43,000
Yeah.

371
00:19:43,000 --> 00:19:45,000
And there are some people I think that are receptive or intuitive

372
00:19:45,000 --> 00:19:48,000
or open to learning, accepting when they don't know things,

373
00:19:48,000 --> 00:19:50,000
and listening like you say.

374
00:19:50,000 --> 00:19:52,000
And that means you can thrive in those environments

375
00:19:52,000 --> 00:19:54,000
and you can figure out who to trust and who the experts are

376
00:19:54,000 --> 00:19:56,000
and know who to listen to.

377
00:19:56,000 --> 00:19:59,000
You can perhaps effectively, you know, bridge information.

378
00:19:59,000 --> 00:20:00,000
Right.

379
00:20:00,000 --> 00:20:01,000
Yeah.

380
00:20:01,000 --> 00:20:03,000
Yeah, you get a sense of who is authoritative on what topics

381
00:20:03,000 --> 00:20:06,000
and a sense of their track record over time.

382
00:20:06,000 --> 00:20:10,000
I think something that we get kind of wrong in our industry,

383
00:20:10,000 --> 00:20:16,000
in our community is, oh, you weren't around in the days of small hard drives?

384
00:20:16,000 --> 00:20:20,000
You know, I used to only have 640 kilobytes of RAM,

385
00:20:20,000 --> 00:20:23,000
my onboard storage was only 2 megabytes.

386
00:20:23,000 --> 00:20:24,000
Yikes.

387
00:20:24,000 --> 00:20:28,000
And we get kind of caught up in, you didn't earn your way.

388
00:20:28,000 --> 00:20:30,000
How dare you come in here with your cloud?

389
00:20:30,000 --> 00:20:32,000
Right, right.

390
00:20:32,000 --> 00:20:36,000
We've suffered and somehow that means we require that from everyone else.

391
00:20:36,000 --> 00:20:37,000
Huh.

392
00:20:37,000 --> 00:20:40,000
That is what it is, isn't it?

393
00:20:40,000 --> 00:20:42,000
I mean, it happens all over the place, right?

394
00:20:42,000 --> 00:20:43,000
That's horrible.

395
00:20:43,000 --> 00:20:46,000
And there is a certain aspect of like you do need to put in your time

396
00:20:46,000 --> 00:20:48,000
to learn things and get experience.

397
00:20:48,000 --> 00:20:52,000
Wisdom or whatever that just take time to get.

398
00:20:52,000 --> 00:20:56,000
But at the same time, people, you know, there are different paths all the time.

399
00:20:56,000 --> 00:20:58,000
And I don't know about you, but I frequently am impressed.

400
00:20:58,000 --> 00:21:02,000
I mean, I'm thinking specifically in like software,

401
00:21:02,000 --> 00:21:04,000
but really in other fields too.

402
00:21:04,000 --> 00:21:06,000
Sometimes the people who are the best at it, you know,

403
00:21:06,000 --> 00:21:09,000
didn't have the traditional path, they didn't get the right degree or whatever,

404
00:21:09,000 --> 00:21:11,000
you know, but they've migrated later into the field

405
00:21:11,000 --> 00:21:15,000
and could be some of the best, most interesting perspective people.

406
00:21:15,000 --> 00:21:17,000
Does that still work now?

407
00:21:17,000 --> 00:21:19,000
That's one of the things I've been wondering.

408
00:21:19,000 --> 00:21:21,000
Like if I was to hit the reset button,

409
00:21:21,000 --> 00:21:25,000
would I have to go through a certain educational route to even make a break now?

410
00:21:25,000 --> 00:21:28,000
Because I just went right from high school into work.

411
00:21:28,000 --> 00:21:34,000
And then I did college sort of as part of additional training that work paid for.

412
00:21:34,000 --> 00:21:35,000
That's nice.

413
00:21:35,000 --> 00:21:37,000
It was like, you know, not something I didn't go high.

414
00:21:37,000 --> 00:21:39,000
I didn't go middle school, high school, college.

415
00:21:39,000 --> 00:21:41,000
I went middle school, high school work.

416
00:21:41,000 --> 00:21:47,000
And then over a period of six, seven, eight years attended different college courses.

417
00:21:47,000 --> 00:21:51,000
And that was the trajectory that worked perfectly for me.

418
00:21:51,000 --> 00:21:55,000
But I don't know if starting today, if you could even pull that off.

419
00:21:55,000 --> 00:21:57,000
You know, I think that's definitely been true.

420
00:21:57,000 --> 00:22:01,000
And like a bachelor's degree does sort of feel like a little stamp you have to get

421
00:22:01,000 --> 00:22:03,000
just to get your resume looked at sometimes.

422
00:22:03,000 --> 00:22:06,000
I think that has changed for the better somewhat.

423
00:22:06,000 --> 00:22:09,000
And audience, if you agree, disagree, let us know.

424
00:22:09,000 --> 00:22:12,000
Coder.show.com.

425
00:22:12,000 --> 00:22:16,000
I think the tech industry in particular, at least in some of the larger companies

426
00:22:16,000 --> 00:22:19,000
even has more of a, you know, a reflection of that.

427
00:22:19,000 --> 00:22:23,000
And if you can get away maybe from the more traditional companies

428
00:22:23,000 --> 00:22:27,000
and get to a more modern tech company, I think there's a more fresh perspective

429
00:22:27,000 --> 00:22:30,000
because it's almost like you can code or you can't, right?

430
00:22:30,000 --> 00:22:34,000
So especially with this culture of, you know, like intense interviews that do maybe

431
00:22:34,000 --> 00:22:36,000
not the right relevant challenge.

432
00:22:36,000 --> 00:22:38,000
And that's another topic for another show.

433
00:22:38,000 --> 00:22:39,000
Of course.

434
00:22:39,000 --> 00:22:41,000
But you can just prove yourself.

435
00:22:41,000 --> 00:22:43,000
Or in the world of open source too, right?

436
00:22:43,000 --> 00:22:46,000
You can be like, well, look, yeah, I don't have a CS degree.

437
00:22:46,000 --> 00:22:49,000
I maybe don't have a degree at all, but I've contributed to these six projects

438
00:22:49,000 --> 00:22:51,000
and everyone likes me and here's my PRs.

439
00:22:51,000 --> 00:22:52,000
So this is where I was going.

440
00:22:52,000 --> 00:22:54,000
Or is that the other route?

441
00:22:54,000 --> 00:22:58,000
Because I look at some of the things that are really making money

442
00:22:58,000 --> 00:23:00,000
at the infrastructure level.

443
00:23:00,000 --> 00:23:02,000
Disclaimer.

444
00:23:02,000 --> 00:23:04,000
And there is no five years.

445
00:23:04,000 --> 00:23:07,000
There is no five years to be had in some of these technologies.

446
00:23:07,000 --> 00:23:12,000
There is no like long experience because they're so new.

447
00:23:12,000 --> 00:23:18,000
And I hate to say this as somebody who's been doing this for a long time,

448
00:23:18,000 --> 00:23:26,000
but like in some ways too much experience is almost a deficit.

449
00:23:26,000 --> 00:23:28,000
You have to be willing to throw out, right?

450
00:23:28,000 --> 00:23:31,000
Like you can't stick to things the way you do in other fields.

451
00:23:31,000 --> 00:23:35,000
Because if somebody like a company were to hire me right now to like move

452
00:23:35,000 --> 00:23:39,000
their IT infrastructure to the cloud, I would just essentially recreate

453
00:23:39,000 --> 00:23:42,000
their on-premises setup in the cloud.

454
00:23:42,000 --> 00:23:46,000
Like I do some virtual machines and yeah, and that would be my approach.

455
00:23:46,000 --> 00:23:48,000
Okay, everything's in the cloud now.

456
00:23:48,000 --> 00:23:50,000
It's like I'm almost –

457
00:23:50,000 --> 00:23:52,000
You almost need somebody who doesn't have too much experience.

458
00:23:52,000 --> 00:23:53,000
Does that make sense?

459
00:23:53,000 --> 00:23:54,000
Right.

460
00:23:54,000 --> 00:23:55,000
Well, because they would be open.

461
00:23:55,000 --> 00:23:57,000
They would be like, well, what does the cloud say?

462
00:23:57,000 --> 00:24:00,000
I'll go look at the documentation for whatever provider and they're probably

463
00:24:00,000 --> 00:24:03,000
going to point to like, yeah, you could bring your database over

464
00:24:03,000 --> 00:24:05,000
or well, we'll sell you a database.

465
00:24:05,000 --> 00:24:06,000
No problem.

466
00:24:06,000 --> 00:24:07,000
We have it managed.

467
00:24:07,000 --> 00:24:08,000
It has backups.

468
00:24:08,000 --> 00:24:09,000
Here's how it works.

469
00:24:09,000 --> 00:24:10,000
Here's the availability of it.

470
00:24:10,000 --> 00:24:12,000
I don't think it's impossible for the old dog to learn new tricks.

471
00:24:12,000 --> 00:24:17,000
It's just a matter of time and energy that you have to spend on trying

472
00:24:17,000 --> 00:24:21,000
out new things when what you've been doing for so long works.

473
00:24:21,000 --> 00:24:27,000
So for an example, this is just a small one, but we had a system here

474
00:24:27,000 --> 00:24:30,000
that was a very traditional storage approach to –

475
00:24:30,000 --> 00:24:33,000
it's a box that runs free NAS.

476
00:24:33,000 --> 00:24:34,000
It's an appliance.

477
00:24:34,000 --> 00:24:36,000
We put storage on it and we don't touch it.

478
00:24:36,000 --> 00:24:39,000
And it was sort of an old school way of thinking that we had another box

479
00:24:39,000 --> 00:24:43,000
that connected to that over network storage that ran the virtualization.

480
00:24:43,000 --> 00:24:49,000
And it was two really loud hot boxes running here in the studio

481
00:24:49,000 --> 00:24:50,000
that we just didn't need.

482
00:24:50,000 --> 00:24:54,000
And then we decided, well, let's revamp this approach and let's take a look

483
00:24:54,000 --> 00:24:57,000
at how we can do all of this on one machine and utilize containers

484
00:24:57,000 --> 00:25:02,000
for the applications, which if we're not using VMs means we could stack

485
00:25:02,000 --> 00:25:05,000
all of this on one machine.

486
00:25:05,000 --> 00:25:08,000
And it sort of shifted the way I look at building out infrastructure

487
00:25:08,000 --> 00:25:12,000
and the way I look at application portability.

488
00:25:12,000 --> 00:25:15,000
And it wasn't so much that I wasn't willing to try it.

489
00:25:15,000 --> 00:25:19,000
It was more that I hadn't really had an opportunity to try something

490
00:25:19,000 --> 00:25:21,000
different from what had been working for so long.

491
00:25:21,000 --> 00:25:22,000
Right.

492
00:25:22,000 --> 00:25:27,000
And there is still some wisdom to the don't fix it if it isn't broken.

493
00:25:27,000 --> 00:25:28,000
But that only depends, right?

494
00:25:28,000 --> 00:25:30,000
Everything's a trade-off, a cost-benefit.

495
00:25:30,000 --> 00:25:31,000
So there is a cost, right?

496
00:25:31,000 --> 00:25:32,000
Like we had to redo a bunch of things.

497
00:25:32,000 --> 00:25:36,000
But the benefit has definitely outweighed it, I think.

498
00:25:36,000 --> 00:25:40,000
I mean, I don't think it's an exaggeration to say it's like we're getting

499
00:25:40,000 --> 00:25:42,000
10x the use out of the machine now.

500
00:25:42,000 --> 00:25:47,000
So if we're going to run that, so we've consolidated down to one machine,

501
00:25:47,000 --> 00:25:51,000
so we're using less power and we're getting 10 times the use.

502
00:25:51,000 --> 00:25:53,000
I also just feel better about it too.

503
00:25:53,000 --> 00:25:56,000
Like if we needed to go rebuild it again, it wouldn't be a big deal.

504
00:25:56,000 --> 00:25:58,000
I mean, we'd have to replace the hardware or whatever,

505
00:25:58,000 --> 00:26:00,000
but the software part would be easy.

506
00:26:00,000 --> 00:26:04,000
I think the part for me was I had like a, oh, I get it moment.

507
00:26:04,000 --> 00:26:09,000
And I think that might be what's important about taking somebody who's used

508
00:26:09,000 --> 00:26:13,000
to doing it one way, like you and I, we both know an individual who he'll

509
00:26:13,000 --> 00:26:17,000
only do something one way for the rest of his life until like some really

510
00:26:17,000 --> 00:26:19,000
earth-shattering reason came up.

511
00:26:19,000 --> 00:26:24,000
And if it's personal life stuff, if it's IT stuff, and that's not an

512
00:26:24,000 --> 00:26:27,000
uncommon way of looking at things.

513
00:26:27,000 --> 00:26:31,000
And for me, I just didn't quite see the utility.

514
00:26:31,000 --> 00:26:33,000
It wasn't like I wasn't going to do it.

515
00:26:33,000 --> 00:26:36,000
I just didn't quite see the utility until I had like the, oh, I get it moment.

516
00:26:36,000 --> 00:26:39,000
And for me, that was working with Docker Compose.

517
00:26:39,000 --> 00:26:46,000
And having that experience of ripping down a dozen applications running

518
00:26:46,000 --> 00:26:50,000
on a server that were in the middle of doing something even in one case.

519
00:26:50,000 --> 00:26:53,000
One time we did it, they were in the middle of processing something.

520
00:26:53,000 --> 00:26:57,000
We ripped them all down and then used Docker Compose to just pull down

521
00:26:57,000 --> 00:27:01,000
the latest versions of those images and stand everything back up again.

522
00:27:01,000 --> 00:27:03,000
And everything just picked right back up.

523
00:27:03,000 --> 00:27:08,000
Like in three minutes, we had new versions of all of the software.

524
00:27:08,000 --> 00:27:10,000
We had the latest versions of all of the software.

525
00:27:10,000 --> 00:27:15,000
We had proven to me that the data and the config were both separate

526
00:27:15,000 --> 00:27:19,000
and safe and that the application was ephemeral.

527
00:27:19,000 --> 00:27:24,000
And it was one line on the command line because everything's in this

528
00:27:24,000 --> 00:27:28,000
super easy to read YAML file that I literally can just…

529
00:27:28,000 --> 00:27:29,000
It's clear, right?

530
00:27:29,000 --> 00:27:31,000
It just kind of tells you if you know anything about Docker at all,

531
00:27:31,000 --> 00:27:32,000
it's all laid out.

532
00:27:32,000 --> 00:27:33,000
It's all there.

533
00:27:33,000 --> 00:27:35,000
You don't even need to know anything about Docker.

534
00:27:35,000 --> 00:27:37,000
You just need to know things about the fundamentals,

535
00:27:37,000 --> 00:27:39,000
like the basic fundamentals.

536
00:27:39,000 --> 00:27:40,000
And it's all clear to you.

537
00:27:40,000 --> 00:27:42,000
It's like, oh, this is how it works.

538
00:27:42,000 --> 00:27:44,000
Oh, God, that's so simple.

539
00:27:44,000 --> 00:27:48,000
And so when I was able to tear it all down, update it, and stand it all up

540
00:27:48,000 --> 00:27:51,000
and have it just pick right back up in the processing,

541
00:27:51,000 --> 00:27:56,000
it resumed – this particular job was resumable.

542
00:27:56,000 --> 00:27:57,000
It changed everything.

543
00:27:57,000 --> 00:28:01,000
It kind of makes me think too of like a little bit of like when I first

544
00:28:01,000 --> 00:28:05,000
discovered like the Unix command line and I had all these different tools

545
00:28:05,000 --> 00:28:08,000
and I could put them together.

546
00:28:08,000 --> 00:28:09,000
They would work together.

547
00:28:09,000 --> 00:28:12,000
And that's true with Docker too, but Docker Compose just takes it

548
00:28:12,000 --> 00:28:13,000
to the next level.

549
00:28:13,000 --> 00:28:15,000
I mean, it's right there in the name, of course.

550
00:28:15,000 --> 00:28:17,000
It lets you compose them together and you can feel like, oh, yeah,

551
00:28:17,000 --> 00:28:20,000
here's all my little pieces that I need for my distributed system,

552
00:28:20,000 --> 00:28:22,000
which is what we are all building these days,

553
00:28:22,000 --> 00:28:25,000
and then it helps you cleanly latch them together.

554
00:28:25,000 --> 00:28:29,000
My bad, really, for not coming up with a reason to try it sooner

555
00:28:29,000 --> 00:28:35,000
because I thought I had done a good enough job reading and conversing

556
00:28:35,000 --> 00:28:37,000
about it that I understood it.

557
00:28:37,000 --> 00:28:39,000
Yeah, I mean, you only have a few related shows.

558
00:28:39,000 --> 00:28:41,000
Yeah, and I got the concepts.

559
00:28:41,000 --> 00:28:43,000
Oh, you know, you tear down the software, stand it back up.

560
00:28:43,000 --> 00:28:44,000
Okay, I get it.

561
00:28:44,000 --> 00:28:46,000
I get it.

562
00:28:46,000 --> 00:28:51,000
But when it was software that in the past I would spend a week configuring,

563
00:28:51,000 --> 00:28:53,000
I would spend like five days in the evening.

564
00:28:53,000 --> 00:28:56,000
Tweaking, tuning, getting it just right.

565
00:28:56,000 --> 00:29:01,000
That I had personally spent my time over the years managing, right?

566
00:29:01,000 --> 00:29:04,000
And then to see this difference where it's like 30 seconds

567
00:29:04,000 --> 00:29:07,000
and everything was right back up and running,

568
00:29:07,000 --> 00:29:10,000
that's when it really became practical to me.

569
00:29:10,000 --> 00:29:11,000
That's when it shifted.

570
00:29:11,000 --> 00:29:15,000
I'm like, okay, so I'm never doing it the old way ever again.

571
00:29:15,000 --> 00:29:16,000
Never going back.

572
00:29:16,000 --> 00:29:19,000
And there's just, you know, we were talking about this on Linux Unplugged,

573
00:29:19,000 --> 00:29:22,000
but I think it took time for these things to work

574
00:29:22,000 --> 00:29:24,000
for the kind of tasks you're doing

575
00:29:24,000 --> 00:29:27,000
because they're techniques born out of scale

576
00:29:27,000 --> 00:29:29,000
where if you do it the traditional way at some point,

577
00:29:29,000 --> 00:29:30,000
it's just not going to work.

578
00:29:30,000 --> 00:29:31,000
There's too many moving factors.

579
00:29:31,000 --> 00:29:35,000
There's too much moving state everywhere.

580
00:29:35,000 --> 00:29:38,000
And I think it just took some time for the tooling to get to a place

581
00:29:38,000 --> 00:29:41,000
where even if you're doing this all in one box

582
00:29:41,000 --> 00:29:44,000
and you just want to go real quick and you don't need to spend hours

583
00:29:44,000 --> 00:29:47,000
customizing every little thing, you don't have to.

584
00:29:47,000 --> 00:29:50,000
And it's not just for web applications.

585
00:29:50,000 --> 00:29:55,000
We're kind of thinking about using Docker for even some recording uses.

586
00:29:55,000 --> 00:29:57,000
I don't think we talked about this.

587
00:29:57,000 --> 00:29:58,000
No, that's true.

588
00:29:58,000 --> 00:30:02,000
We are creating for the purposes of recording, I should say.

589
00:30:02,000 --> 00:30:03,000
It's really for production purposes.

590
00:30:03,000 --> 00:30:05,000
It may be consumable by others,

591
00:30:05,000 --> 00:30:07,000
but it's really for our own production purposes.

592
00:30:07,000 --> 00:30:10,000
And we're going to nickname it the Jack in the Box

593
00:30:10,000 --> 00:30:13,000
because it's a jack audio system,

594
00:30:13,000 --> 00:30:16,000
a rather sophisticated jack audio system,

595
00:30:16,000 --> 00:30:17,000
but not too sophisticated.

596
00:30:17,000 --> 00:30:22,000
It is in a Docker layer that our hosts can install on their system,

597
00:30:22,000 --> 00:30:24,000
connect their in and outs to,

598
00:30:24,000 --> 00:30:27,000
and essentially have a Jupyter broadcasting

599
00:30:27,000 --> 00:30:30,000
contained recording environment.

600
00:30:30,000 --> 00:30:33,000
I mean, really, it's kind of living up in the name of Docker, right?

601
00:30:33,000 --> 00:30:34,000
And that's the whole thing.

602
00:30:34,000 --> 00:30:36,000
It's like you just, all right, we have some hardware.

603
00:30:36,000 --> 00:30:37,000
We need that.

604
00:30:37,000 --> 00:30:38,000
You take the container.

605
00:30:38,000 --> 00:30:40,000
You've got to set up the right sort of actual docking interfaces, right?

606
00:30:40,000 --> 00:30:42,000
Get all the right supply lines,

607
00:30:42,000 --> 00:30:45,000
access to the sound devices in this case, for instance,

608
00:30:45,000 --> 00:30:47,000
but then the software part is unchanged.

609
00:30:47,000 --> 00:30:48,000
It's the same.

610
00:30:48,000 --> 00:30:52,000
Now, it probably won't be so easy because Linux audio never is,

611
00:30:52,000 --> 00:30:55,000
but it's super useful that we could just do that

612
00:30:55,000 --> 00:30:57,000
and have it reliable and not have to do,

613
00:30:57,000 --> 00:30:59,000
especially when you might be running some software that, you know,

614
00:30:59,000 --> 00:31:02,000
either it's proprietary or you have to custom compile it

615
00:31:02,000 --> 00:31:05,000
or you need a lot of install dependencies that may or may vary,

616
00:31:05,000 --> 00:31:08,000
you know, may or may not vary between distributions.

617
00:31:08,000 --> 00:31:10,000
It gives us a few tools, though.

618
00:31:10,000 --> 00:31:13,000
The first, using Jack, which is an audio subsystem for Linux,

619
00:31:13,000 --> 00:31:18,000
it allows us to do equalizing and compression.

620
00:31:18,000 --> 00:31:20,000
It allows us to sort of guarantee a certain sound

621
00:31:20,000 --> 00:31:22,000
that gets sent out to the live stream

622
00:31:22,000 --> 00:31:26,000
while also recording a certain dry audio for post-processing.

623
00:31:26,000 --> 00:31:27,000
So that's pretty fancy right there.

624
00:31:27,000 --> 00:31:29,000
There's certain things we can do with it down the road.

625
00:31:29,000 --> 00:31:34,000
But there's other things we can do that are kind of down the road

626
00:31:34,000 --> 00:31:37,000
that we're maybe going to use, maybe we never would.

627
00:31:37,000 --> 00:31:40,000
But if it's a Docker image that's actually up on the Docker Hub,

628
00:31:40,000 --> 00:31:45,000
in theory, West could tweak something,

629
00:31:45,000 --> 00:31:48,000
send it up, and then tell the host, okay, go update your Docker images.

630
00:31:48,000 --> 00:31:51,000
They go update their images, and now they've got the latest tweaks

631
00:31:51,000 --> 00:31:53,000
that West has applied to our recording layer

632
00:31:53,000 --> 00:31:55,000
that they can run on their OS.

633
00:31:55,000 --> 00:31:56,000
And that's pretty powerful, too,

634
00:31:56,000 --> 00:32:00,000
because it allows us to sort of neutralize the distribution

635
00:32:00,000 --> 00:32:02,000
because different hosts run different distributions.

636
00:32:02,000 --> 00:32:03,000
Yes, they do.

637
00:32:03,000 --> 00:32:04,000
Hey, Mr. Fedora.

638
00:32:04,000 --> 00:32:07,000
Hey.

639
00:32:07,000 --> 00:32:10,000
It lets us sort of normalize that out.

640
00:32:10,000 --> 00:32:14,000
And it's pretty far from any kind of normal use of Docker that I've seen.

641
00:32:14,000 --> 00:32:15,000
Oh, yeah.

642
00:32:15,000 --> 00:32:17,000
No, I mean, a lot of those mounts that I'm doing there,

643
00:32:17,000 --> 00:32:19,000
you wouldn't want to do that in production.

644
00:32:19,000 --> 00:32:20,000
Like I said, it's not a web application.

645
00:32:20,000 --> 00:32:22,000
It's not something you're going to host.

646
00:32:22,000 --> 00:32:26,000
But it's something that maybe you'd set up on a ThinkPad to do recording.

647
00:32:26,000 --> 00:32:28,000
Okay, so related.

648
00:32:28,000 --> 00:32:30,000
I've been playing a little bit with Podman,

649
00:32:30,000 --> 00:32:33,000
and I think technologies you should try that, you know,

650
00:32:33,000 --> 00:32:36,000
maybe are a little outside what you're comfortable with now.

651
00:32:36,000 --> 00:32:38,000
You should check out the Red Hat container stack.

652
00:32:38,000 --> 00:32:39,000
Really?

653
00:32:39,000 --> 00:32:40,000
I think you might like it.

654
00:32:40,000 --> 00:32:42,000
Okay.

655
00:32:42,000 --> 00:32:44,000
We should probably explain what Podman is

656
00:32:44,000 --> 00:32:46,000
for people that aren't familiar with it

657
00:32:46,000 --> 00:32:50,000
because it's not that different.

658
00:32:50,000 --> 00:32:51,000
It's still container-based.

659
00:32:51,000 --> 00:32:53,000
It's still the standard containers as you know it,

660
00:32:53,000 --> 00:32:57,000
but it sort of replaces the Docker compose tools in that layer, right?

661
00:32:57,000 --> 00:32:59,000
We can get to the compose part.

662
00:32:59,000 --> 00:33:01,000
But really it replaces Docker.

663
00:33:01,000 --> 00:33:02,000
So no Docker daemon?

664
00:33:02,000 --> 00:33:03,000
No.

665
00:33:03,000 --> 00:33:04,000
So that's one of the big things.

666
00:33:04,000 --> 00:33:08,000
Podman is a daemonless container engine

667
00:33:08,000 --> 00:33:11,000
for developing, managing, and running OCI containers.

668
00:33:11,000 --> 00:33:12,000
Don't say Docker containers.

669
00:33:12,000 --> 00:33:15,000
They're OCI containers on your Linux system.

670
00:33:15,000 --> 00:33:16,000
There's a couple of really neat things.

671
00:33:16,000 --> 00:33:20,000
So first of all, the daemonless stuff.

672
00:33:20,000 --> 00:33:22,000
That's nice just from security, from many aspects.

673
00:33:22,000 --> 00:33:24,000
Podman has been designed, it's newer, right?

674
00:33:24,000 --> 00:33:25,000
So it's a little more modern.

675
00:33:25,000 --> 00:33:28,000
It takes really nice advantage of all the user namespaces,

676
00:33:28,000 --> 00:33:30,000
all that stuff right out of the box.

677
00:33:30,000 --> 00:33:32,000
And they've done some neat stuff

678
00:33:32,000 --> 00:33:36,000
where you can run Podman without being root.

679
00:33:36,000 --> 00:33:38,000
Now you can run it as root and it still supports

680
00:33:38,000 --> 00:33:40,000
all the nice sandboxing and user namespaces,

681
00:33:40,000 --> 00:33:42,000
but you can also run it not as root.

682
00:33:42,000 --> 00:33:44,000
Now you probably wouldn't necessarily want to do this

683
00:33:44,000 --> 00:33:46,000
in all production scenarios,

684
00:33:46,000 --> 00:33:48,000
but they've put in a bunch of work

685
00:33:48,000 --> 00:33:50,000
to make that work behind the scenes.

686
00:33:50,000 --> 00:33:52,000
So one example is like network namespaces

687
00:33:52,000 --> 00:33:54,000
are used all the time in containers, right?

688
00:33:54,000 --> 00:33:57,000
Now you can create one as an unprivileged user.

689
00:33:57,000 --> 00:34:00,000
But you can't make the virtual Ethernet pairs

690
00:34:00,000 --> 00:34:03,000
that actually are used to bridge the network namespaces

691
00:34:03,000 --> 00:34:04,000
unless you're root.

692
00:34:04,000 --> 00:34:07,000
So they have implemented basically a user space

693
00:34:07,000 --> 00:34:10,000
TCP IP stack to provide the same connection.

694
00:34:10,000 --> 00:34:11,000
And so there's a couple things like that.

695
00:34:11,000 --> 00:34:12,000
There's like a fuse file system

696
00:34:12,000 --> 00:34:14,000
that gets used for another feature.

697
00:34:14,000 --> 00:34:16,000
What runs that?

698
00:34:16,000 --> 00:34:19,000
What runs that user level application if there's no daemon?

699
00:34:19,000 --> 00:34:22,000
I don't know quite how the process hierarchy works out,

700
00:34:22,000 --> 00:34:25,000
but that's all it is because that's all containers are.

701
00:34:25,000 --> 00:34:27,000
They're processes in the right namespace

702
00:34:27,000 --> 00:34:29,000
and under the right cgroups.

703
00:34:29,000 --> 00:34:30,000
I should look more into that.

704
00:34:30,000 --> 00:34:31,000
Curious how that sounds.

705
00:34:31,000 --> 00:34:33,000
That does sound very appealing.

706
00:34:33,000 --> 00:34:36,000
Well, what's nice then too is like so you can just run it

707
00:34:36,000 --> 00:34:39,000
and then just install Podman.

708
00:34:39,000 --> 00:34:41,000
You can then start pulling down its supports

709
00:34:41,000 --> 00:34:43,000
depending on which distribution you installed.

710
00:34:43,000 --> 00:34:45,000
And you might have to go configure like the Docker registry,

711
00:34:45,000 --> 00:34:46,000
but it's one of the default ones.

712
00:34:46,000 --> 00:34:48,000
You basically just go tell it which registries

713
00:34:48,000 --> 00:34:49,000
you want to talk to,

714
00:34:49,000 --> 00:34:51,000
and then you can use it exactly like Docker.

715
00:34:51,000 --> 00:34:52,000
It has the same commands.

716
00:34:52,000 --> 00:34:56,000
Even some of their docs tell you to alias Podman for Docker

717
00:34:56,000 --> 00:34:58,000
so that you just use it all the same.

718
00:34:58,000 --> 00:35:03,000
So that was my question was like one of the things

719
00:35:03,000 --> 00:35:07,000
that makes Docker great is the command syntax is simple.

720
00:35:07,000 --> 00:35:09,000
And it's just because it's so popular,

721
00:35:09,000 --> 00:35:11,000
it's kind of become the de facto.

722
00:35:11,000 --> 00:35:13,000
So they're just like halfsies.

723
00:35:13,000 --> 00:35:14,000
Yep, that's ours now.

724
00:35:14,000 --> 00:35:15,000
Well, that's kind of nice.

725
00:35:15,000 --> 00:35:17,000
So yeah, you can just install it, start playing with it,

726
00:35:17,000 --> 00:35:20,000
run it, and it's nice.

727
00:35:20,000 --> 00:35:21,000
Were you doing this on Ubuntu?

728
00:35:21,000 --> 00:35:24,000
Yeah, they have a PPA you can install, no problem.

729
00:35:24,000 --> 00:35:27,000
I noticed I think it's on Fedora 30.

730
00:35:27,000 --> 00:35:29,000
I think it's already on Fedora 30

731
00:35:29,000 --> 00:35:31,000
because when we were messing around with our new setup.

732
00:35:31,000 --> 00:35:33,000
Oh yeah, it definitely is.

733
00:35:33,000 --> 00:35:35,000
And they've got some other tools there too.

734
00:35:35,000 --> 00:35:38,000
So there's a building tool that's specific.

735
00:35:38,000 --> 00:35:41,000
Podman can build too, but they have Builda.

736
00:35:41,000 --> 00:35:44,000
Now it supports building from Docker files, which is great.

737
00:35:44,000 --> 00:35:47,000
But they also have their own support

738
00:35:47,000 --> 00:35:49,000
so you can do really easy stuff like starting from scratch

739
00:35:49,000 --> 00:35:52,000
or super minimal images.

740
00:35:52,000 --> 00:35:53,000
And they're using that for integration.

741
00:35:53,000 --> 00:35:55,000
So there's Ansible container,

742
00:35:55,000 --> 00:35:58,000
which is a way to use Ansible to build containers.

743
00:35:58,000 --> 00:36:01,000
That was kind of hacky the way you had to do it through Docker.

744
00:36:01,000 --> 00:36:03,000
And this, it's basically just sort of commands.

745
00:36:03,000 --> 00:36:05,000
So you say builda, run this command in this container

746
00:36:05,000 --> 00:36:06,000
that we're working on right now,

747
00:36:06,000 --> 00:36:08,000
and then you can commit those changes back to it.

748
00:36:08,000 --> 00:36:10,000
So then you can use some sort of interactive script

749
00:36:10,000 --> 00:36:12,000
if you have some more dynamic scenario.

750
00:36:12,000 --> 00:36:14,000
Oh, that's really nice.

751
00:36:14,000 --> 00:36:15,000
Or if you have existing Docker files,

752
00:36:15,000 --> 00:36:17,000
you can just build them that way too.

753
00:36:17,000 --> 00:36:20,000
Okay, so it seems like super obvious if I'm using Ansible,

754
00:36:20,000 --> 00:36:23,000
this is a lot cleaner.

755
00:36:23,000 --> 00:36:25,000
I'm not still 100% clear.

756
00:36:25,000 --> 00:36:32,000
Like if I'm me throwing up some images on a Droplet

757
00:36:32,000 --> 00:36:34,000
or a Linode VPS,

758
00:36:34,000 --> 00:36:37,000
I'm still not super clear why I would use Podman over Docker,

759
00:36:37,000 --> 00:36:40,000
especially because the Docker Hub is reactive.

760
00:36:40,000 --> 00:36:43,000
Well, so you can still interrupt with Docker Hub, no problem.

761
00:36:43,000 --> 00:36:44,000
Oh, really?

762
00:36:43,000 --> 00:36:44,000
Oh, yeah, totally.

763
00:36:44,000 --> 00:36:45,000
It just natively supports that.

764
00:36:45,000 --> 00:36:49,000
It even also makes it easy if you already have images over.

765
00:36:49,000 --> 00:36:52,000
So you should first know too,

766
00:36:52,000 --> 00:36:55,000
because it's more OCI-inspired and compliant,

767
00:36:55,000 --> 00:36:57,000
the containers are under a different path.

768
00:36:57,000 --> 00:36:58,000
So when you first install Podman,

769
00:36:58,000 --> 00:37:00,000
you'll try to see if you have anything

770
00:37:00,000 --> 00:37:02,000
if you've been using Docker and you won't.

771
00:37:02,000 --> 00:37:04,000
But you can tell it to look at the Docker stuff,

772
00:37:04,000 --> 00:37:05,000
and it makes it easy to transfer.

773
00:37:05,000 --> 00:37:07,000
So you can pull from Docker Hub,

774
00:37:07,000 --> 00:37:09,000
you can pull from the Docker daemon on your local system

775
00:37:09,000 --> 00:37:10,000
and move images back and forth between them.

776
00:37:10,000 --> 00:37:11,000
Oh, really?

777
00:37:11,000 --> 00:37:12,000
So it's easy to move over?

778
00:37:12,000 --> 00:37:13,000
Oh, yeah.

779
00:37:12,000 --> 00:37:13,000
Oh, that's nice.

780
00:37:13,000 --> 00:37:14,000
Okay.

781
00:37:14,000 --> 00:37:19,000
I mean, so I think it's just kind of a cleaner design really.

782
00:37:19,000 --> 00:37:21,000
So it's a little bit more minimal.

783
00:37:21,000 --> 00:37:24,000
You don't have this root daemon running all the time.

784
00:37:24,000 --> 00:37:26,000
But for you, it's probably not.

785
00:37:26,000 --> 00:37:29,000
So I think it's still in the play with and evaluate.

786
00:37:29,000 --> 00:37:30,000
It does have some stuff.

787
00:37:30,000 --> 00:37:32,000
So it's got Pods, right?

788
00:37:32,000 --> 00:37:35,000
Pods is right in the name because Podman is built in,

789
00:37:35,000 --> 00:37:37,000
you know, it comes from Red Hat

790
00:37:37,000 --> 00:37:39,000
and Red Hat's Kubernetes player, right?

791
00:37:39,000 --> 00:37:41,000
I mean, OpenShift.

792
00:37:41,000 --> 00:37:44,000
So it's very much, you know, built in the Kubernetes era.

793
00:37:44,000 --> 00:37:46,000
So it also supports Pods,

794
00:37:46,000 --> 00:37:48,000
which are much like the analog in Kubernetes

795
00:37:48,000 --> 00:37:51,000
where you have these containers sort of joined together.

796
00:37:51,000 --> 00:37:54,000
So it can be used somewhat similar to Docker and Compose,

797
00:37:54,000 --> 00:37:57,000
but I don't think the level of tooling for that specific use case

798
00:37:57,000 --> 00:37:59,000
is quite as nice as Docker Compose.

799
00:37:59,000 --> 00:38:02,000
So maybe not quite there, but there's a lot of neat tech.

800
00:38:02,000 --> 00:38:06,000
And if you, you know, need to do something a little more complicated

801
00:38:06,000 --> 00:38:07,000
and you maybe need to customize,

802
00:38:07,000 --> 00:38:09,000
you really care about how your containers are running

803
00:38:09,000 --> 00:38:11,000
or you're concerned about security,

804
00:38:11,000 --> 00:38:13,000
these tools are pretty neat.

805
00:38:13,000 --> 00:38:16,000
Yeah, the security aspect of it is very appealing.

806
00:38:16,000 --> 00:38:18,000
Also, I tend to agree with your assessment

807
00:38:18,000 --> 00:38:21,000
that a lot of the tools that I see come out of Red Hat,

808
00:38:21,000 --> 00:38:23,000
I have two feelings about them.

809
00:38:23,000 --> 00:38:25,000
One, God, I wish we had that a year ago.

810
00:38:25,000 --> 00:38:29,000
And two, that's a really nice, tight, clean design.

811
00:38:29,000 --> 00:38:32,000
Like it's really clean, easy to understand, sensible.

812
00:38:32,000 --> 00:38:34,000
Not for everything,

813
00:38:34,000 --> 00:38:36,000
but for a lot of the tools on the command line,

814
00:38:36,000 --> 00:38:38,000
that has generally been my impression.

815
00:38:38,000 --> 00:38:44,000
So it seems like it is something that might be worth giving a little bit of a go.

816
00:38:44,000 --> 00:38:48,000
With my workflow of like having these compose files that I go to,

817
00:38:48,000 --> 00:38:51,000
that this is like, this is this stack of applications

818
00:38:51,000 --> 00:38:54,000
and I have another compose file for that's another stack of applications.

819
00:38:54,000 --> 00:38:56,000
That's the part I think that would be missing for you.

820
00:38:56,000 --> 00:39:00,000
You know, because Docker Compose adds its own layer of orchestrating.

821
00:39:00,000 --> 00:39:04,000
So if you were using Ansible or some other things, right,

822
00:39:04,000 --> 00:39:06,000
and it sort of takes it apart.

823
00:39:06,000 --> 00:39:09,000
So instead of like, oh, I want this container running all the time,

824
00:39:09,000 --> 00:39:12,000
you know, in order to check on fail or restart.

825
00:39:12,000 --> 00:39:14,000
In the Red Hat model, the Podman model, they're like,

826
00:39:14,000 --> 00:39:16,000
well, you already have systemd, right?

827
00:39:16,000 --> 00:39:18,000
Like, that's already a thing. Just do that.

828
00:39:18,000 --> 00:39:20,000
Systemd is great at it and it does that for your other services.

829
00:39:20,000 --> 00:39:22,000
And that's what I'd prefer.

830
00:39:22,000 --> 00:39:25,000
Yeah, right. So it plays really nicely maybe if you already are using systemd a bunch

831
00:39:25,000 --> 00:39:28,000
or other configuration management tooling.

832
00:39:28,000 --> 00:39:32,000
Or alternatively, if you want to run systemd inside a container,

833
00:39:32,000 --> 00:39:34,000
which can be a little bit difficult and hacky sometimes with Docker,

834
00:39:34,000 --> 00:39:36,000
Podman supports it right out of the gate.

835
00:39:36,000 --> 00:39:38,000
You know, it makes me really think that it's worth spending more time

836
00:39:38,000 --> 00:39:40,000
getting into Ansible too.

837
00:39:40,000 --> 00:39:42,000
Like, maybe it's worth even for our small infrastructure.

838
00:39:42,000 --> 00:39:45,000
Oh, yeah. No, I mean, I think it is.

839
00:39:45,000 --> 00:39:50,000
There is certainly overhead in learning new tools and, you know, having to apply them.

840
00:39:50,000 --> 00:39:53,000
And there is a certain, you know, you have to assess what can be tricky.

841
00:39:53,000 --> 00:39:56,000
And I think as Docker Compose is nice, it's working well for us.

842
00:39:56,000 --> 00:39:59,000
But if we do a little bit more than Ansible makes sense.

843
00:39:59,000 --> 00:40:00,000
Yeah.

844
00:40:00,000 --> 00:40:02,000
It's just that like, right, when you, if you don't need to customize,

845
00:40:02,000 --> 00:40:05,000
then you want a tool that kind of hides a lot of the stuff from you.

846
00:40:05,000 --> 00:40:08,000
But the second you have semi-complicated customization needs,

847
00:40:08,000 --> 00:40:11,000
you want a tool that's a little more flexible and ready to go.

848
00:40:11,000 --> 00:40:13,000
I mean, the most we have is weird mounts, right?

849
00:40:13,000 --> 00:40:14,000
Yeah, so far.

850
00:40:14,000 --> 00:40:16,000
Now, where Ansible then gets really nice is right now,

851
00:40:16,000 --> 00:40:21,000
we would reimagine machine and then install a few things,

852
00:40:21,000 --> 00:40:23,000
make a few manual tweaks maybe.

853
00:40:23,000 --> 00:40:25,000
And then from the point of starting our Docker Compose,

854
00:40:25,000 --> 00:40:28,000
that all would be totally the same.

855
00:40:28,000 --> 00:40:30,000
Ansible would just bridge that gap, right?

856
00:40:30,000 --> 00:40:33,000
So that we could have the whole system up and running.

857
00:40:33,000 --> 00:40:35,000
And you can see it's one of those things where it's like,

858
00:40:35,000 --> 00:40:38,000
if you're doing one system, it's still better, but it's less better.

859
00:40:38,000 --> 00:40:40,000
And if you're doing 10 systems, it really matters.

860
00:40:40,000 --> 00:40:43,000
And if you're doing 1,000 systems, then there's no other way to do it.

861
00:40:43,000 --> 00:40:46,000
So what about a scenario where I'm developing locally

862
00:40:46,000 --> 00:40:48,000
and then I want to deploy on a remote system?

863
00:40:48,000 --> 00:40:52,000
Is there a particular advantage to using Podman, do you think?

864
00:40:52,000 --> 00:40:56,000
You can, you know, you can have it just do less, I guess, right?

865
00:40:56,000 --> 00:40:57,000
Like you can just install it.

866
00:40:57,000 --> 00:40:58,000
You don't have this daemon running.

867
00:40:58,000 --> 00:41:01,000
And the rootless aspect would be nice.

868
00:41:01,000 --> 00:41:04,000
I assume it must be like you add your user to a group, then you can use it.

869
00:41:04,000 --> 00:41:05,000
You don't even have to do that.

870
00:41:05,000 --> 00:41:06,000
Oh.

871
00:41:06,000 --> 00:41:07,000
Yeah, that's what's nice, right?

872
00:41:07,000 --> 00:41:10,000
And so you don't have to worry that like you're having all these people

873
00:41:10,000 --> 00:41:13,000
that you've added to the Docker group are now, you know, $2.

874
00:41:13,000 --> 00:41:14,000
Yeah.

875
00:41:14,000 --> 00:41:18,000
And there's a good talk that Red Hat has out,

876
00:41:18,000 --> 00:41:20,000
and I'll try to find it and add a link to the show notes,

877
00:41:20,000 --> 00:41:22,000
kind of talking about some of these downfalls.

878
00:41:22,000 --> 00:41:26,000
The Docker socket is really just a security nightmare in so many things.

879
00:41:26,000 --> 00:41:29,000
Because Docker is so hooked into all these low-level kernel primitives.

880
00:41:29,000 --> 00:41:31,000
And it's going to be an ongoing soft spot too.

881
00:41:31,000 --> 00:41:34,000
Yeah, you can do stuff where you like change users or get, you know,

882
00:41:34,000 --> 00:41:38,000
new permissions that under normal circumstances get logged or audited

883
00:41:38,000 --> 00:41:39,000
or the kernel is aware of.

884
00:41:39,000 --> 00:41:42,000
But because you take a totally different route concocted by Docker,

885
00:41:42,000 --> 00:41:45,000
it's mostly invisible unless you're actively looking for it.

886
00:41:45,000 --> 00:41:51,000
Yeah, again, going back to my general totally outrageous assertment about

887
00:41:51,000 --> 00:41:54,000
Red Hat's tools is that is the great thing, is that they're going to be

888
00:41:54,000 --> 00:41:57,000
integrated with the logging, with the rest of the system.

889
00:41:57,000 --> 00:41:58,000
Cockpit rolls out.

890
00:41:58,000 --> 00:41:59,000
It's got support for it.

891
00:41:59,000 --> 00:42:00,000
You can see it in the logs.

892
00:42:00,000 --> 00:42:03,000
It is really nice from that standpoint.

893
00:42:03,000 --> 00:42:05,000
And it works with the wider tool set.

894
00:42:05,000 --> 00:42:07,000
I'm convinced, actually.

895
00:42:07,000 --> 00:42:09,000
I think I'm going to give it a go right here on the old laptop,

896
00:42:09,000 --> 00:42:11,000
because I've got a couple of ideas that I want to try.

897
00:42:11,000 --> 00:42:12,000
Yeah.

898
00:42:12,000 --> 00:42:14,000
And the nice part too is you can still play together too.

899
00:42:14,000 --> 00:42:18,000
So you can use Builder and Podman locally to build your images,

900
00:42:18,000 --> 00:42:20,000
to test them, to run them on your machine,

901
00:42:20,000 --> 00:42:23,000
and then just push the exact same image up to your server

902
00:42:23,000 --> 00:42:24,000
when you want to run it with Docker Compose.

903
00:42:24,000 --> 00:42:25,000
That's totally fine.

904
00:42:25,000 --> 00:42:26,000
Aww.

905
00:42:26,000 --> 00:42:28,000
Yeah, it's pretty nice.

906
00:42:28,000 --> 00:42:32,000
So how many containers have you seen running on a host?

907
00:42:32,000 --> 00:42:37,000
I saw this article about taking a system from 30 to 230 Docker containers.

908
00:42:37,000 --> 00:42:38,000
Oh, boy.

909
00:42:38,000 --> 00:42:39,000
What are they doing?

910
00:42:39,000 --> 00:42:40,000
I don't know.

911
00:42:40,000 --> 00:42:46,000
But I do kind of wonder, because I'm kind of new to this in actual production

912
00:42:46,000 --> 00:42:50,000
and not just screwing around, what our limit is.

913
00:42:50,000 --> 00:42:51,000
Like, I don't know.

914
00:42:51,000 --> 00:42:58,000
I have a better sense, because in the VM world, I carve out 4 gigabytes of RAM.

915
00:42:58,000 --> 00:43:01,000
I carve out 100 gigabytes of disk storage.

916
00:43:01,000 --> 00:43:04,000
I allocate this much to that system, and now it's gone.

917
00:43:04,000 --> 00:43:06,000
And that math is simple in a way.

918
00:43:06,000 --> 00:43:07,000
It is.

919
00:43:07,000 --> 00:43:09,000
And it's a cleaner separation of concerns, right?

920
00:43:09,000 --> 00:43:10,000
Because you're basically like, all right,

921
00:43:10,000 --> 00:43:12,000
well, here's this whole other operating system over here.

922
00:43:12,000 --> 00:43:14,000
I will deal with it by itself,

923
00:43:14,000 --> 00:43:16,000
and then only if I need to go back up to the hypervisor

924
00:43:16,000 --> 00:43:17,000
will I even think about that.

925
00:43:17,000 --> 00:43:24,000
And maybe the application in that VM consumes all of the resources in that VM, maybe.

926
00:43:24,000 --> 00:43:30,000
But right now, in our setup, an application is just another process on the box.

927
00:43:30,000 --> 00:43:32,000
And that, for me, is a weird mental shift,

928
00:43:32,000 --> 00:43:35,000
because I'm used to it being isolated off into its own machine.

929
00:43:35,000 --> 00:43:38,000
And to me, it seems like I know you can put constraints on it,

930
00:43:38,000 --> 00:43:42,000
but it seems possible that just one of those containers could go crazy.

931
00:43:42,000 --> 00:43:43,000
Oh, yeah, sure, right?

932
00:43:43,000 --> 00:43:47,000
It could fill up all of its volume space, it could eat a bunch of CPU.

933
00:43:47,000 --> 00:43:53,000
Yeah, that, to me, that's where I can't say, well, we'll put X amount of containers.

934
00:43:53,000 --> 00:43:57,000
Because I don't feel like I can predict like I could with a VM.

935
00:43:57,000 --> 00:44:03,000
Right, and I think that's maybe partly a result of the different philosophies behind this.

936
00:44:03,000 --> 00:44:08,000
Because I think if you were, you'd probably have already instrumented your system, right?

937
00:44:08,000 --> 00:44:09,000
You'd have a bunch of stuff.

938
00:44:09,000 --> 00:44:12,000
So you'd build a box, and then you would go test how many containers you want.

939
00:44:12,000 --> 00:44:16,000
And you'd probably then be able to run more containers than you could VMs.

940
00:44:16,000 --> 00:44:19,000
But you're right, you don't have the same sort of heuristics and understandings that you do.

941
00:44:19,000 --> 00:44:24,000
But I wouldn't be able to say, well, if I can run four VMs, I can run 10 containers.

942
00:44:24,000 --> 00:44:26,000
There's just not that math, you can't do that.

943
00:44:26,000 --> 00:44:29,000
Yeah, and as this article points out,

944
00:44:29,000 --> 00:44:33,000
because it's nice that you don't have multiple kernels in some senses.

945
00:44:33,000 --> 00:44:36,000
But it means that you might need to do more tuning,

946
00:44:36,000 --> 00:44:38,000
because you have a more deeply nested system,

947
00:44:38,000 --> 00:44:42,000
or the kernel is doing more nested things than in the VM model.

948
00:44:42,000 --> 00:44:45,000
So like they're running into stuff where, you know,

949
00:44:45,000 --> 00:44:50,000
the regular Docker networking setup involves a whole bunch of NAT.

950
00:44:50,000 --> 00:44:53,000
And then that's going to involve the contract table and IP table,

951
00:44:53,000 --> 00:44:55,000
so you can keep track of all the connections that are going, right,

952
00:44:55,000 --> 00:44:59,000
as you map onto the Docker subnet and all that.

953
00:44:59,000 --> 00:45:02,000
So at some point, that'll just start dropping packets if you have too many.

954
00:45:02,000 --> 00:45:03,000
And it's like, how do you know, right?

955
00:45:03,000 --> 00:45:05,000
I mean, there's tunables, you can go play with it.

956
00:45:05,000 --> 00:45:08,000
If you're already doing a lot of Linux kernel, you know, optimization,

957
00:45:08,000 --> 00:45:10,000
maybe you know, but probably you don't.

958
00:45:10,000 --> 00:45:12,000
Probably you just ran a bunch of containers that you have to go.

959
00:45:12,000 --> 00:45:14,000
You have to be instrumenting and monitoring your system

960
00:45:14,000 --> 00:45:16,000
if you're going to even see those problems.

961
00:45:16,000 --> 00:45:20,000
That's one of those, it's a combination of the driver, of the hardware,

962
00:45:20,000 --> 00:45:23,000
of your specific kernel version, of the software that's talking to the kernel.

963
00:45:23,000 --> 00:45:29,000
Like it's such a unique blend that the only way you'll get real data

964
00:45:29,000 --> 00:45:32,000
and any kind of predictability is to just do it in production.

965
00:45:32,000 --> 00:45:36,000
That to me seems crazy because what you're proposing is just throw it up there

966
00:45:36,000 --> 00:45:38,000
and see how it performs.

967
00:45:38,000 --> 00:45:42,000
And ideally, you over-provision so you know it's going to perform well

968
00:45:42,000 --> 00:45:46,000
and maybe you can add, but sometimes things don't go ideally.

969
00:45:46,000 --> 00:45:49,000
And all of a sudden, you've thrown a box up there that isn't fast enough.

970
00:45:49,000 --> 00:45:52,000
We've had something similar happen to us where we put it in production.

971
00:45:52,000 --> 00:45:54,000
It's like, that's not quite fast enough.

972
00:45:54,000 --> 00:45:57,000
We kind of expected it to be a little better, and now what do we do?

973
00:45:57,000 --> 00:46:01,000
And it's just like we don't really have like a super solid answer now.

974
00:46:01,000 --> 00:46:03,000
Yeah, that's true. That's true. We need more.

975
00:46:03,000 --> 00:46:05,000
I mean, somewhat we just need more resources.

976
00:46:05,000 --> 00:46:06,000
More hardware.

977
00:46:06,000 --> 00:46:07,000
Yeah.

978
00:46:07,000 --> 00:46:10,000
But because we kind of, I mean, I don't know.

979
00:46:10,000 --> 00:46:14,000
It seemed like on paper it was going to be plenty of horsepower.

980
00:46:14,000 --> 00:46:19,000
And then in actual production, and maybe the cloud provider

981
00:46:19,000 --> 00:46:22,000
isn't really giving us quite what the specs says they were.

982
00:46:22,000 --> 00:46:25,000
Because I feel like if we ran that same workload on physical hardware,

983
00:46:25,000 --> 00:46:26,000
it would be faster.

984
00:46:26,000 --> 00:46:27,000
It's a good question.

985
00:46:27,000 --> 00:46:28,000
The same specs, right?

986
00:46:28,000 --> 00:46:30,000
The same specs on physical hardware.

987
00:46:30,000 --> 00:46:34,000
So there's that variability too when you're on someone else's computers.

988
00:46:34,000 --> 00:46:35,000
Yeah.

989
00:46:35,000 --> 00:46:37,000
One other thing I thought was funny from this is

990
00:46:37,000 --> 00:46:41,000
they also started running into issues when they ran out of PIDs on the system.

991
00:46:41,000 --> 00:46:42,000
Sure.

992
00:46:42,000 --> 00:46:43,000
It's eventually going to happen.

993
00:46:43,000 --> 00:46:44,000
It's eventually going to happen, yeah.

994
00:46:44,000 --> 00:46:45,000
So it's another one.

995
00:46:45,000 --> 00:46:47,000
This is just a fun, good article to check out

996
00:46:47,000 --> 00:46:50,000
if you are going to run any large number of containers.

997
00:46:50,000 --> 00:46:52,000
And it points you to some nice little kernel values

998
00:46:52,000 --> 00:46:54,000
you can tweak and tune that you might need.

999
00:46:54,000 --> 00:46:56,000
Where do people find that, Wes?

1000
00:46:56,000 --> 00:46:59,000
Where would I find links for this week's episode?

1001
00:46:59,000 --> 00:47:00,000
Like that microphone we talked about.

1002
00:47:00,000 --> 00:47:01,000
Like that microphone.

1003
00:47:01,000 --> 00:47:04,000
Well, you can go on over to coder.show,

1004
00:47:04,000 --> 00:47:09,000
specifically coder.show slash 369 for this week's episode.

1005
00:47:09,000 --> 00:47:11,000
But you'll also find ways to get in touch.

1006
00:47:11,000 --> 00:47:12,000
You just hit the contact button.

1007
00:47:12,000 --> 00:47:16,000
And the easiest way to make sure you always get fresh Coder Radio

1008
00:47:16,000 --> 00:47:18,000
is, of course, just subscribe.

1009
00:47:18,000 --> 00:47:19,000
We're on all the apps.

1010
00:47:19,000 --> 00:47:20,000
We're pretty much everywhere.

1011
00:47:20,000 --> 00:47:21,000
That's true.

1012
00:47:21,000 --> 00:47:23,000
Really, that's where the show notes are, really, is in the app too.

1013
00:47:23,000 --> 00:47:24,000
Yeah.

1014
00:47:24,000 --> 00:47:25,000
It's in the apps.

1015
00:47:25,000 --> 00:47:26,000
We've got chapters and stuff too.

1016
00:47:26,000 --> 00:47:28,000
So you can skip right to your favorite part of the show

1017
00:47:28,000 --> 00:47:29,000
if you only have a little bit of time.

1018
00:47:29,000 --> 00:47:30,000
Those are pretty sweet.

1019
00:47:30,000 --> 00:47:31,000
Yeah, they are.

1020
00:47:31,000 --> 00:47:32,000
A lot.

1021
00:47:32,000 --> 00:47:34,000
Especially like when I'm going back to like,

1022
00:47:34,000 --> 00:47:36,000
what stupid thing did I say like a year ago?

1023
00:47:36,000 --> 00:47:37,000
Yeah.

1024
00:47:37,000 --> 00:47:39,000
It's super great for just trying to reference like,

1025
00:47:39,000 --> 00:47:40,000
oh yeah, which mic did Chris say?

1026
00:47:40,000 --> 00:47:41,000
Yeah, there you go.

1027
00:47:41,000 --> 00:47:42,000
Pop right over there.

1028
00:47:42,000 --> 00:47:43,000
Huh.

1029
00:47:43,000 --> 00:47:44,000
Yeah.

1030
00:47:44,000 --> 00:47:46,000
Now, of course, you can also just go to JupiterBroadcasting.com

1031
00:47:46,000 --> 00:47:49,000
where we've got a whole other selection of fine programs.

1032
00:47:49,000 --> 00:47:50,000
Can people find you on the Twitter?

1033
00:47:50,000 --> 00:47:51,000
Yeah, they can.

1034
00:47:51,000 --> 00:47:52,000
At Wes Payne.

1035
00:47:52,000 --> 00:47:53,000
And I think you're there too.

1036
00:47:53,000 --> 00:47:54,000
I am.

1037
00:47:54,000 --> 00:47:57,000
At Chris LAS, Linux Action Show.

1038
00:47:57,000 --> 00:47:59,000
How retro is that?

1039
00:47:59,000 --> 00:48:02,000
Tweet me your ideas for a new end of handle.

1040
00:48:02,000 --> 00:48:03,000
Right.

1041
00:48:03,000 --> 00:48:04,000
We'll spruce the whole thing up.

1042
00:48:04,000 --> 00:48:05,000
Yeah.

1043
00:48:05,000 --> 00:48:06,000
Fresh it up for the new year.

1044
00:48:06,000 --> 00:48:07,000
I think Joe probably votes Chris LAS.

1045
00:48:07,000 --> 00:48:09,000
We'll see what Mr. Dominic says when he comes back.

1046
00:48:09,000 --> 00:48:10,000
Yeah, we'll see.

1047
00:48:10,000 --> 00:48:11,000
So do stay tuned.

1048
00:48:11,000 --> 00:48:13,000
Well, you know, we did this show live this week.

1049
00:48:13,000 --> 00:48:15,000
It was a little late maybe, but don't worry.

1050
00:48:15,000 --> 00:48:17,000
Go to JupiterBroadcasting.com slash calendar.

1051
00:48:17,000 --> 00:48:19,000
You can find out when we are here live.

1052
00:48:19,000 --> 00:48:21,000
We'd love to have you join.

1053
00:48:21,000 --> 00:48:24,000
Until then, we'll see you next episode.

1054
00:48:24,000 --> 00:48:29,000
We'll see you next time.

1055
00:48:54,000 --> 00:49:01,000
Bye-bye.

