This is KOTOR Radio, episode 482 for September 5th, 2022.
Hey good buddy, welcome back to Jupiter Broadcasting's weekly talk show, taking a pragmatic look
at the art and the business of software development and the world of technology.
My name is Chris over here on the West Coast and our hostess with the mostest over on the
East Coast, it's Mr. Dominic.
Hello Mike.
Happy Labor Day greetings for Florida, where we don't believe in paid time off unless you're
retired.
Or in podcasting either, have you noticed?
Yes.
The only holiday we take is Christmas.
We take Christmas, yes.
Yeah.
Yeah.
I don't think we do a show on Thanksgiving, but that's just because we both like to eat.
Yeah.
We've got to make room for the food.
How are you feeling?
You sound a little stuffed up.
A little stuffed up.
You know, I went to TCGCon last week and one thing that comes with those great in-person
events is the conference flu.
Yeah.
You always got to get, remember we used to call that the con crud.
Now we just call it COVID.
Oh, oh.
How did it go though?
Would you do it again knowing you're going to get sick?
Last week was TCGCon.
It went great.
We talked about it.
This weekend was the Dominaria United MTG pre-release.
Oh, whoa, whoa.
I did two weeks in a row.
This is another magic event.
Another magic event.
I did two days of planes walking and tapping that mana.
I tapped that mana so hard.
It was amazing.
So Squirrely Dave was asking for stats.
Here we go.
Five and O, standard.
Boom.
Won that one.
Ha!
Did a sealed arena sealed, which is the digital version.
Five and three.
That's not a win.
All right.
Did a in-person sealed.
Five and two.
Some reason the arena always has until you lose to three.
The in-person one is based on who shows up.
So that was okay.
I will say that five is my lucky number.
I think what happens is as I progress through the day into the evening, I get more tired.
Sure.
And just a little more lazy.
So yeah, also played some Commander.
It was a long weekend.
If you stay at it, you can probably overcome some of that sleepiness.
You can probably train that out a little bit.
But also, you just kind of started this.
You're doing pretty good.
Right?
This is the second event.
You're doing pretty good.
Pretty excited.
I'm going to, you know, the COVID gods permitting, I'm going to go to TamperNerdCon in November.
I'm playing in two events there.
Yeah.
Ha!
Oh, man.
That's great.
Well.
Well.
I'm looking forward to hearing how that goes.
Yeah.
Come on, folks.
Hit me up on arena.
Let's do this.
Oh, gosh.
Oh, no.
This is going to become a whole thing.
All right.
Well, moving right along before it takes roots, ChunkyPie wrote in about RSI and he had a
few hot tips.
He's in his 40s.
He's been using keyboards since high school.
And of course, every job he's ever had, keyboards.
He's now learning to become a developer, keyboards.
And his big lesson, he says, is the ergonomics really matter.
And the sooner you start taking the ergonomics seriously, the better off you likely will
be.
And as he puts it, keyboards aren't going to go away anytime soon.
So it's best to adapt your workspace now to optimize.
We got a few notes on the RSI subject.
So thank you, everybody.
I appreciate your thoughts there because I agree with the sentiment, like take advantage,
get yourself a good working setup today.
And it's sort of like an investment in your tools, which is your body parts.
We also got some feedback from Adam.
He says, hey, guys, love the show.
For RSI issues, well, it's taken me a few years, but I think I found the perfect solution,
at least in my case.
My desk chair is actually a Staples gaming chair, which has the armrest sitting at the
same height as my desk.
For keyboards, I need a split ortholinear keyboard that lets you split or rebound.
I have two mice.
I switch between them, a Logitech MX Master as my main, and then I have an Anker ergonomic
vertical mouse.
Using this combination has cured 95% of my RSI.
And actually, I'll jump in there, Adam.
I also do this at home.
For some reason, I don't do it much at work.
But at home, I switch between two different mice.
I have the MX vertical, and I have a trackpad.
I think the trackpad is probably harder on my hands overall.
The verticals are really cool mice if you've never seen those.
They look weird, but they really work because you change how you move the mouse.
Instead of a side-to-side wrist action, it's a side-to-side arm action.
It's much easier on the old wrist.
And then there was a topic, Mike, that I talked about.
Just this is what I effing love about this show.
You and I will just randomly toss something out there just as an aside, and then the audience
takes and runs with it.
Because we've got some boosts about this, too.
And Adam wrote in on email.
He says, on the topic of uniforms, I can't believe this, but we had multiple people writing
about uniforms.
I touched on something.
I don't know.
Maybe there's something to it.
Adam says, my daily work uniform is a black t-shirt, black cargo shorts, black socks,
and dark blue shoes.
I work construction, so all black hides the copious amounts of sweating that I do.
With my regular clothes, it's mostly just jeans and khakis and a white or black t-shirt.
I do have a few novelty shirts, like he has his old Last Tux t-shirt.
But he kind of has like, I don't know if I'd call that a uniform.
He kind of has like a set of small range of clothing.
That is almost too complicated for me.
I want just like the same thing all the time, almost.
But we'll see.
We'll come back to that later.
And then Adam had, he had three points.
This is his third point, his last point.
And this one he's taken us to task on.
On a side note, why is everyone raving about the launch keyboard?
I know it's made by System76, but I've seen that build quality and that layout before.
Also, the firmware isn't as open source as everyone claims.
It's based off of QMK.
That is open source.
Also, I'm not sure if you all mentioned it, but I don't think they're going to be able
to support wireless anytime soon because of QMK.
I don't mean to rain on anyone's parade, but I have been in the mechanical keyboard world
for several years and the launch isn't anything new, but keep up the great work.
So I thought this is an interesting little snapshot here because Adam mentions the build
quality before, but I don't think he's ever owned a launch and I'm holding the launch
right now in my hands.
And so I don't know how he can comment on the build quality, which is excellent.
But you know, there's an interesting thing here.
It's like I went and did a little digging around on the open source stuff.
It looks like projects that integrate with the launch, like the keyboard configurator,
it's GPL, the FWEPD stuff is all GPL, the layout, the design, the CAD drawings, that's
all GPL.
I don't know if everything in the firmware is GPL.
I don't really know if it's further than any other keyboard vendor or most keyboard vendors
take it, is that good enough?
Is that where that line is?
And then the other thing is, if somebody else has made a keyboard like this, it doesn't
really matter if System76 is introducing it to a new market, a market that maybe hasn't
bought that stuff before, but trust the build of System76, so they're willing to spend that
money on a keyboard when maybe they weren't before, because that's me.
It was just about the time the launch came around where, you guys know on the history
of the show, I was starting to just consider mechanical keyboards for my RSI, and they
happened to just nail the timing with the launch.
But I was never in that market really before, and it kind of opened my eyes to that.
Yeah.
I mean, the other thing is, you know, longtime listeners know that there used to be a brand
of mechanical keyboard that I religiously used.
People they sense, I don't know if they got a PE bio or what happened, but their quality
has just gone way down in recent years, and they've focused on kind of more whiz-bangy
features.
I don't know, more competition's good, right?
I think I'm using the launch, I'm still testing out the launch small one, the Lite, with the
pink switches.
I think it's pretty good.
I prefer the bigger one because I like the USB hub.
One fair point in his email, though, yeah, right, wireless would be better, but then
you lose the USB hub.
But for the Lite, definitely wireless, because there is no hub.
Still, I kind of like the idea of there's lots of different configurations, lots of
different keyboards made by lots of different vendors, and you just got to find the right
one for you.
It's like building your lightsaber.
Yeah, and you know, there's lots of different hands, and different hands fit better with
different lightsabers.
Right.
Not every Batlet is for you.
You have to find the right one.
Let me tell you.
Let me tell you.
One ear's sewed back on.
Let me tell you.
Exactly.
Not my ear.
Not my ear, of course.
And everybody's different.
We all have different appearances, heights, weights.
For instance, take a look at Takuvma and Kalish.
How much more different could you get?
Yeah, I agree with you there.
So speaking of keeping things similar, perhaps even uniform, DeckBot wrote in about the uniform
lifestyle.
He says, you were discussing the uniform lifestyle.
Where I come from, like my work, there's no such requirement, but I do occasionally travel
for customers, so I'm allotted five free t-shirts a year.
The choices between salesy, a white or blue button-down shirts with tastefully embroidered
logos on the breast, or just black polos featuring the embroidered logo.
Naturally, I chose the black polos since the customer portion of the floor is typically
a dirty industrial environment where everything is coated in metal dust, especially the Linux
welders I'm working with.
Right on, DeckBot.
Tell me more about that.
After a decade of free polos, my wardrobe evolved into a collage of corporate black
polos with generations of marketing and obsoleted logos and slogans that generally pair well
with jeans.
That hits, right?
That hits.
A decade of free polos, my wardrobe has evolved into a collage of corporate black polos with
generations of marketing and obsoleted logos.
That hits.
That hits.
Okay.
He says, in the morning, my choices devolved into what is clean and how old is the logo?
That also hits.
He says, I tend to hang the clean laundry in the back of the closet and just pull shirts
from the front so all shirts are cycled evenly.
I try to do something similar.
He says, I hear JB has a bunch of shirt merch on some websites.
Five to 10 shirts should set you up for daily wear, leaving you nerd shirts for special
occasions, save from daily wear, tear, and abuse.
Thanks for all the shows, DeckBot.
This is something a couple of people touched on is, maybe I should buy my own swag.
I do actually have pretty much all my clothes on my own swag, but they're all old swag.
I feel like I need to do a whole new refurb and then just buy a bunch of them.
But we'll see.
I appreciate the thoughts on uniforms.
We'll leave it there until we get to the boosts for now, but please do keep it coming.
Although, I haven't talked to you about it.
I don't know if it's possible.
At some point in the next two weeks, it'd be really great if we record a double.
You don't have to, but it would just make travel time a little easier that first week.
Yeah, sure.
Let's do it.
So I'm thinking we need the audience to send in as many boosts and contact forms as possible
to help fill our bags, so that way we have plenty to go through, so that way we don't
miss a beat on the prerecords.
And then our last email today comes in from Daniel, and he wants to talk about remote
work.
And I've been kind of thinning these out, not really including most of these, but he
touched on one thing in here that put it over the line, so I wanted to conclude it in the
show.
He writes, I've been listening for a good five years at this point, and I really love
the show.
I wanted to comment on the remote debate.
I will concede that the tooling is good enough to get the job done effectively.
That even includes pair programming.
Nevertheless, losing the social side of things is a deterrent to the work culture.
If you like to play pickleball after work, for example, I might be a little nicer about
the fact that you're failing to execute and putting me behind on something.
But if you're just a name on a screen, well, you're getting blamed in the nicest way I
can think to do so.
Chris, you've called this out before, when we see each other as humans, we work better
and it's very hard to see each other as humans if all we do is talk to each other during
a stand up, even if you have a stand up meeting.
Some of us actually like people.
Daniel has touched on something that I want to phrase a little bit differently than throw
it at you.
I have experienced this with myself.
When I have met someone in person and I conceptualize them as a three dimensional human being that
has an entire life and problems and I actually see it and I learn a little bit about them,
maybe I spend some time with them, I am more generous in a text only conversation.
I am more generous about things slipping.
I am more understanding about their situation versus before then, even though if you would
have asked me before I had met them, I would have told you I was doing those things because
I honestly thought I was.
But I was doing to the best of my ability for the character that I conceptualized in
my mind that I'm interacting with in a low bandwidth means.
But when I met them in person and that exchange became high bandwidth and I learned things
about them, perhaps they didn't even want to volunteer, but it's just observational.
I built out a more complete model of that person in my mind and that model seems to
afford me more empathy for them now.
And I think that makes a big difference in the workplace and the only way you can have
it is if people spend not just like a day together, but maybe some significant amount
of time together.
And I think that makes for a well oiled team and again, I see it here with the JB team.
When we get together for stuff, for events, the team really gels people because their
friendships really kind of reignite, it really kind of gets people fired up for a while.
And it's just there's no way of replicating it online hard as we might try.
And that has made them more productive and it's true for all businesses I've ever been
involved in.
And it's just inescapable.
Yeah, I mean, we're never going to be able to 100% replicate the experience.
I just keep falling back to it kind of doesn't really matter because the ship has already
sailed.
In our industry, remote work is a is a is a fait accompli for the most part.
I mean, even Apple's struggling to drag people back to the office, right?
It's kind of like a natural disaster happened.
And now we have to deal with this and we're going to have to learn a new way.
That's literally what happened.
Exactly.
You might be right.
You might be right.
I think you're right.
Depending on what you think of certain lab.
Heyo.
Let me get the bacon.
Let me get the bacon.
Now, I follow what you're saying, actually.
It's sort of it's like, yes, all those things are true.
And still, we are going to have to figure out a way to do this.
Insert standard metaverse plug here, I suppose.
Well, let's do it on.
You know what?
Let's just do it on small scales as we can individually.
Let's take it upon ourselves, individual responsibility, blah, blah, blah, blah.
That's the worst.
I know.
Right.
In other words, come hang out with us on the West Coast.
We're going to be in southern Oregon.
We'll be in northern California.
We're doing JPL and we're doing a meet up near JPL.
So even if you didn't get your name picked, you can still come hang out with us on the
30th.
And we'll also do another meet up in Oregon in the northern Oregon area on October 7th.
All of this is at meet up dot com slash Jupiter Broadcasting.
And we also have our West Coast crew where we're chatting about details, answering individual
questions, bit dot l y slash West Coast crew.
We'll have new swag on board, brand new swag.
We'll be doing some geocaches as we go out.
And of course, I'll be doing some shows on the road.
In fact, starting to freak out a little bit about that.
So, you know, send us in your feedback.
Coder dot show slash contact or send us in a boost.
New podcast apps dot com.
More appreciated than ever when I'm out there burning gas on the road.
Linode dot com slash Coder.
That's where you go to get one hundred dollars in 60 day credit on a new account.
And it's just a great way to support the show while you're checking something really awesome
out.
I love Linode.
And what does love got to do with it?
I mean, you might just think it's an old fashioned notion, but I'll tell you, love is performance.
Love is knowing you're supported.
Love is knowing that there are 11 data centers around the world dutifully serving your data
up to your customers, your clients, your friends and your family or yourself.
Linode's been building servers designed to run Linux in the cloud the fastest, most reliable
and most economical way possible for nearly 19 years.
That's why I say go try it for yourself.
That hundred dollars will really let you actually try it at Linode dot com slash Coder.
I like to mention the stuff that appeals to me.
And like one of the very first things that always comes to mind is the performance that
really does stand out.
But you know, we're almost three years into this and it has been perfect, really.
I mean, I do not regret a single moment of hosting, feel even more fired up and passionate
about that choice as time has gone on.
And as a business owner, but even just as, you know, an enthusiast, when you make that
choice, when you make a technical foundational choice and it continues to pay off, it continues
to give dividends, it continues to be a good choice, that feels really good.
It's like I made the right choice there.
That has been great.
That's something that is not a problem I have had to deal with.
And they're 30 to 50 percent cheaper than the major hyperscalers out there that just
want to lock you into their duopoly platforms with their esoteric language for the crazy
things they call the different services that they've ripped off from the free software
community.
Like that's how they make their money.
And then they haven't even architected their businesses in a way where they can provide
the support that you need, especially when it's something that's mission critical.
And Linode's done all of that.
And I think it all starts in the DNA.
Linode started because they were passionate about the technology.
They saw where this virtualization tech, this user mode Linux stuff that was coming, they
saw where that could go.
And now, 19 years later, I think they have the best set of options in the business as
they've whittled away and built something incredible.
So go try it out.
Support the show.
Maybe learn something.
And get $100 for 60 days on a new account, linode.com slash coder.
So the show's been on the air for a really long time, really, really long time.
We don't even have the entire back archive on the new website yet because we just launched
the new website last week, but we are adding it.
And it goes back basically 10 years.
I don't even know how that's possible.
We've exceeded the run of Linux Action Show by some bit.
We are on a roundhouse kick to 500 episodes.
And since we're sitting here on a Labor Day recording the pod, we thought, why don't we
look back at this last decade on how tooling has changed, processes, workflow, remote work,
platforms.
Let's just look back in time.
And I'm curious if you have any places you want to start on, you know, things that feel
like major shifts for you, maybe specifically around tooling and things like that.
Yeah.
So I think a lot has changed since we started the show in terms of day-to-day work, right?
I seem to remember talking a lot about, you know, manual testing and QA departments and
yeah, let's pour one out for them while we're pouring one out for Sun.
Yeah.
There it is.
There it is.
There it is.
Automated testing, right?
What I guess you would call TDD was much more of a debate than it is now.
If it is at all.
In particular, the whole DevOps idea basically didn't exist 12 years ago.
And I was a little hostile towards it too.
You were hostile, you know.
I'm a little hostile.
I'm going to pat us on the back.
We did call Docker before it was called Docker when they were.cloud, was that their name
at the time?
Yeah, we had the CTO on, yep.
I remember very distinctly feeling like the blurring of developer and sysadmin was a very
bad practice.
Am I still going to feel that way?
You had some fee-fees.
You had some strong fee-fees, yes.
I did.
I did.
Now, to be fair, the tooling has improved tremendously and things like Ansible have
come along and Git and that stuff has really, really made quite a big improvement.
And now, now I'm the guy that's like deploying changes by updating things on GitHub and then,
you know, letting just things happen in the background and rebuild things for me.
It's a very strange sensation.
It's a strange energy, that's for sure.
But it's the de facto standard now.
In fact, you know, I talked about this, T&B, we moved back to GitHub for the most part
because it's just got too hard to fight the tide with a small team.
It's just easier to set up the either direct GitHub integration, you know, with something
like a DO apps or Heroku, which Heroku is going through some changes.
It's, we should talk about, we need to have a heart to heart with Heroku.
There's some, some stuff's going on over there.
I'm not quite sure I understand it other than that they killed their free tier and raised
all their prices.
Oh yeah.
Which seems adorable, but yeah.
Don't even get me started on GitHub actions, right?
You got a problem, they've got an action.
It's amazing.
Yeah.
I could see a lot of our publishing pipeline based around GitHub actions.
Why not?
It's, it's pretty powerful.
The way we've been able to use actions, the way it just works with Hugo, it is, it is
so, it is so smooth for the deployment of the new site and it makes it possible for
way more people to participate in the process.
And in the old sysadmin days, I would have had to have managed it all with user accounts
and groups and SSH keys and FTP access.
It truly was a worse way of doing things.
And now people can publish things to the website based on like their GitHub level of permissions.
And that makes participating in a community project way more doable.
It also adds a layer of, this is kind of a double edged sword with standardization, right?
And abstraction.
Like you really, you know, you don't necessarily, not everyone in the, in the process even knows
what's going on.
They're not our hosting sponsor right now.
But I just, can I just call out a DO's app platform, which is effectively those sons
of bitches.
It's effectively just Docker containers.
Yeah.
And all they've done is basically saved you the hassle of having to know how to like register
on Docker hub and like, or even run your own little Docker hub and do all of this yourself,
set up, you know, engine X or whatever you're using.
You just point it to a GitHub repo, give it a little YAML file and bam, it pulls it out.
Umbral is a project for self hosting.
It's very much the same thing.
Same idea.
Yeah.
You just get a dashboard.
You click the thing like from an app store, which, you know, just an open source.
And it just does all the Docker stuff, all of the routing stuff in the background for
you.
Oh, well they all have that.
I don't know.
It has like, they have a whole list.
If you want to just like pull up.
I want GitLab.
I want Rails.
I want chicken.
Please.
Mammix.
Did I just go to Mammix?
Mammix is a very compressed version of what's happened to the car industry.
You and I came in just as they were starting to seal up the engines and we watched them
go from like open engines that anybody could work on and build to fully sealed up engines,
but now way more available to, and there's way more people that can like deploy this
stuff now.
And that's what we've witnessed in a really compressed timeline in the run of the show.
To the point where orchestrating your containers has become a thing, right?
There's like a million consultants you want to go around.
They used to sell you agile training.
Now they want to sell you Kubernetes training.
Yes.
Oh my gosh.
And that's, you know, that's kind of, I don't have it on the list, but another big thing.
What the hell happened to the middle managers?
I haven't dealt with a PM who was a pure PM in probably like four years.
Yeah.
I think they're out there.
There's probably a large organizations, but otherwise it's always double duty.
Now it's always somebody else doing double duty.
It seems like, yeah, there's definitely like a PM person, but they're always like also
the DBA or they're like, you know, the guy who runs all the get stuff or he, the one
wizard of Kubernetes who orchestrates all their containers, right?
Or the, or your manager's also playing the role as PM, which is like kind of just doing
double duty.
But you know, I, I'm not necessarily against it because a lot of the PM hasn't been the
best thing to come along and it's sometimes it's added a, you know, it's, it, it adds
stakeholder creep having a PM.
No, I think we should do a jaunty jig on their grave.
I think it's good.
I'm saying this is a feature.
I thought we were going to, I thought we were going to disagree on this.
Oh, no.
I mean, I think if, you know, I like the lead, if you have a DBA, the DBA is a good PM.
The lead developer is probably a great PM.
Like what is a PM?
He organizes your Kanban board and that's another one.
Just the agile has eaten the damn world.
There's no argument anymore.
You're doing agile.
And I know our friend Adam's going to get mad at me, but even like a vet modeling, very
agile ask, very influenced by agile, right?
It's all agile.
There's no one outside of maybe the DOD, even then doing waterfall it's over.
And that's a big change.
If you go back, that was a huge, that was a huge discussion for years.
This huge, huge discussion for years, you know, I didn't even realize it would happen,
but looking back, there's a, there's like the master switch and, and into the plex.
There's a couple of books that are really good at showing how tech is kind of following
the trends of the radio industry and the car industry and all these previous industries
that have come along, even cable television.
And one trend that happens in there is these kinds of philosophies, economics even, right?
You've had Austrian economics and Kenzie and economics, right?
And over time, it just seems that a predominant philosophy does take over.
And you just don't even, when, when it reaches that kind of mass threshold, you don't even
realize it's happening because it's just normal now.
It's just the way everybody, and maybe we don't even call it that anymore, right?
It's just the way things are.
It's just the way you do things now.
You know, I didn't even realize I was doing agile until I had to do the notes for the
show today and I was like, well, let's see, I have a combine born of weekly deliveries.
I deploy to production at least twice a month.
The only thing I don't do is standups because I mean, although we kind of do, we have a
daily check-in, but we don't do like, like there was some stupid ceremony in agile, right?
Like the, you know, the agile consultants were basically, I think flimflam men, right?
Well, that's always the stuff that turned me off.
As soon as you get to the ceremony stuff, I started getting turned off.
I remember one, one place I was a contractor at, they had like this little ball.
It was like one of the, one of those Apple promo balls.
It was like kindergarten.
You couldn't talk unless you had the ball and you had to toss the ball, like playing
catch for, you know, 30 year olds.
I hate that stuff so much and I, I know it's about team building and it even sometimes
works on me when I'm forced to participate, which I hate even more, but I still hate it.
I never want to do it.
It feels like a huge waste of my time.
I'm a professional.
I'm always going to be as professional and polite as I can.
And we'll build a team bond based on the good work and the wins.
That's how you build a team bond is wins.
Well, and there's always the one dude who just can't catch and somebody's coffee lands
in a Mac book.
We're going to say that's what happened.
We're going to say that we're going to use that excuse.
Yeah.
Right.
Okay.
Very good.
Yeah.
You know, one of the things, uh, just kind of while we're touching on all of this is
what we have landed on.
And I think it's for the better is a lot of my processes now are just self-documenting
where in the past all the documentation required me to generate it.
Like when I pushed a production, there's a commit log there where I leave a note, right?
When I configure something in like Nix, there's a configuration comment that I leave behind
or like when we deploy something for the web server and ansible that's self-documenting
ansible is self-documenting now.
And that is a game changer for me because I sometimes do documentation and I do it really
good and then I, and then I like burn out for a year and then I don't do it for like
a year.
So it's a lot of this stuff, a lot of these processes, not all of them, but a lot of these
processes now, you know, the kids these days, uh, they're self-documenting and I think that's
a net positive.
Yeah.
I would just like to add to that list.
The, uh, fast API, the thing Alice has written on, it's, uh, got beautiful self-documentation
and I know the.net folks have something similar.
Uh, shout out to Wes again for turning me on to fast API a couple of years ago.
Super helpful.
You want to talk a little remote?
I mean, that's the elephant in here.
I feel like.
Yeah.
I mean, so, you know, we talk about remote all the time.
I would actually like to twist this into an actual doing development remotely.
Not like, is it good for management?
Are people lonely?
You know, whatever.
Are they wearing pants?
I kind of, so, you know, I've been doing the code pilot experiment and it is comically
bad when it's bad.
But I realized, and again, this kind of came to me last night when I, when I first pitched
you on this idea for the show.
The problem is it's too ambitious.
It shouldn't be trying to write your application good for you.
It should just be a linter on steroids.
Sure.
So let's take the Python case or let's, you know, I think a more common case, let's take
the TypeScript case.
You have TS lint, which is a very good TypeScript linter code pilot should augment that and
say TS lint says you violated this rule.
I looked on the public GitHub repos.
This is how people doing something that looks similar, because I can already do that, right?
Tell you code that looks similar to yours have gotten around this.
Would you like to accept my solution to satisfying the linter rules?
Oh, that's so actually helpful.
That would actually be helpful.
And I could see a world where you, GitHub, they do all kinds of crap.
Why not do this?
Have different accepted linter style guides and say, you know, all right, the mad botter
is adopting, you know, for Ruby, which is a little looser than Python, right?
All these things with the exception of all methods must have parenthesis, right?
None of this, you know, my method space parameter stuff, which is true, which is our style guide.
And GitHub copilot, you just need to know that.
And anybody who's logged into our GitHub on VS code or whatever, you flag that as an error.
Oh, man.
See, and that's when you have to work with other vendors or the customer looks at your
code.
You just look so much more professional when you have one style.
Additionally, we're kind of just accepting linters as a fait accompli here.
Linters were kind of a new, like not new, new, but they have come a huge way in terms
of what they can check for.
And way more common.
Way more common.
If you if you use JetBrains at all, they're built in VS code is always trying to tell
you that you suck.
So you know what I really like about your idea, your tweak to copilot here is it's also
verifiable if it's doing a good job or not, because you're saying, OK, here's my here's
my standard.
I want to be you know, I want you to compare me to.
And that is, did it meet the standard or not?
And is copilot recommending based on the standard?
That's really easy to determine success where right now it's so ambiguous.
So nebulous.
And of course, you could do that with most of these linters anyway, right?
They all have configs and, you know, things like Rubocop is the one I use for Ruby.
And yeah, I can tell it.
Listen, I I hate I forgot the thing I hate.
There's a oh, I think it's too strict on the line length thing because I like to write
objective C style method names that are like Chris gets up, puts on his robe and ties the
sash and make a cup of coffee.
That should actually be two methods.
Oh, this this must be a good day if I'm tying the sash.
Or a really bad day, depending on how you look at it.
Why can't GitHub copilot?
And I think it can.
Right.
I think this is a choice to have to make.
Be like, all right.
I'm the copilot for your organization.
Don't worry about any config files in your individual repos.
I'm just enforcing this globally.
It knows what language you're writing.
It knows what framework you're using.
It knows if you're sleeping.
It knows if you're awake.
Yeah, I'd like that in our show docs just for markdown, you know, be be be be tidy that
up for us.
Huh, clippy at the next level.
That would be really great.
How did we get to there?
I love that.
But I think that's oh, because you're talking about remote tooling, remote tooling.
That's a great example of tooling that could actually help people that are developing remotely
on their own that don't have somebody they can tap the shoulder on.
That's a great that's a great example.
I could see it getting there.
That doesn't seem impossible.
And it actually seems easier than what they're what they seem to be trying to do.
Right.
Right.
I mean, the linters already exist.
They're all open source.
You could just and they they usually output to like standard out because you can run them
on the command line.
So I'm pretty sure you could just intercept those messages like ah, the TSLint actually
has like really good documentation on the error code.
So they could have a simple dictionary of the error codes, look it up and look for code
that looks similar.
It's all stuff they already do, except for the tying into the linter part.
My benchmark for remote tooling, and if the tooling is comprehensive and complete, is
it exactly the same tooling commands and infrastructure when I'm like in Juneau, Alaska?
And if I'm in the office at a desk, are we using the same tools?
Are we, you know, exact same processes?
Then I think, yeah, at a tooling standpoint, everything's even and it's pretty easy to
get there today.
You just have to pick the right stuff.
So, yeah, getting and, you know, in a lot of ways when you're talking about it from
the developers perspective, remote work might be the best thing to have happened to them
in the last decade, right?
It's so great from a focus standpoint.
My home setup is almost, maybe with the exception of once, has always been so much superior
to my work setup.
Because I always, you know, I'm tinkering, I got my chair, I got my desk, I got my screens
the way I like them.
I got the machine that's a ridiculous overbuilt performance hound, at least I used to back
in my day.
But you know what I mean, like you can really build it your way.
You can play your music, you can have your environment, your food, you know.
You don't have to worry about interruptions, you know, that's why some people like combine
working from home with working late too, because then no one's awake, no one's messaging you
and the two together really let you get in flow.
And that's what it's all about.
You all have seen my three 4am Twitter postings when I start my day to do coding before my
wonderful Pokemon obsessed son wakes up.
Oh, Wes has a good add on for the linters.
I can't believe I forgot that language servers.
You can have hardcore IDE level debugging in the command line independently running.
Hello, Wes.
Welcome to the Coder Radio matrix chat room.
Welcome to the matrix.
The show has a dedicated chat room on matrix.
We'll have well, you can just go to Coder dot show slash matrix and you can join it
while we're live or when we're not either way with the chat is always going for the
show.
We got a dedicated spot.
I see somebody added an item to our little bullet point list here.
Well, two items, really.
I think it's I could have added a third now that I think about it, too.
Don't you find it fascinating that over the last decade, unquestionably, Linux and Apple,
both in their own ways, have just exponentially grown, but not at the cost of Microsoft?
Right.
Didn't we early on when this show started, I think we looked at the market as a zero
sum game mostly.
In reality, there was just plenty of money for all of them to soak up, apparently.
And so Apple has become an absolute behemoth.
They were barely in the enterprise when we started the show, barely in the enterprise
when we started the show.
And now they're a massive player, tons of MacBooks in the workplace.
It's very common for developers to have MacBooks now.
Super common.
Linux, there's Linux in the workplace, Linux on the server, Linux vendors, more developers
choosing Linux.
That's been an exponential growth.
Linux and half the **** in your house, right?
And Microsoft didn't have to go broke for any of it to happen.
In fact, Microsoft is more integral to developers outside the Microsoft ecosystem than they
ever have been.
I was like, Microsoft is weirdly on that Linux badwagon, right?
You know, when you talk about Azure, they have the whole Linux IoT platform, too.
Yeah, yeah.
And they're continuing to update it.
Yeah, they sell lots of Linux over there.
Yeah, they've got two distros they're making now.
They're CBL Mariner Distro.
They just recently updated it to make it possible to run on a wider range of hardware.
They're kind of like beginning to build it to run on stuff that's not just Microsoft
purpose hardware or virtual machines, which maybe I don't know how far they go with that,
but I find that to be fascinating.
There's so much going on and that is it's so rich now and you've really had to find
your niche, I think, for most people that are at least trying to ride these trends.
People that have just kind of picked their thing and they've been doing it for a decade
and still working for them.
God bless.
But for most people that are trying to ride these trends, like you've really had to kind
of niche down and you've had to go through that.
You know, you've kind of had to niche down and you had to find a niche that was complementary
to your skill sets and the team you could build.
And you know, when we started, you weren't talking about the snake a lot or hosting on
Linux.
You know, you were really focused more on the consumer side and maybe general and building
tools for developers, perhaps individual developers.
Yeah, no, I definitely gone through a religious conversion of I'm a little more extreme than
you.
I think these front end services are going to not services front end, like maybe a phrase
that it's all going to be the web in some form or another.
Really?
Yeah.
Oh my God.
This might be, I've been corrupted by just writing lots and lots of business software
for the last couple of years, but no one wants to pay for, you know, what I used to call
double native and it's probably not worth it for most business cases.
Honestly, the thing holding the web back is, is Apple.
Apple's just outright refusal to make mobile Safari good.
I mean, yep, but ironically, some of the most complicated web apps in existence are shipping
as iOS apps in the app store.
I just shipped one for somebody.
Yeah.
Yeah.
So there's, it is happening.
So like because of that, those pieces are that groundwork, that skill set, all of that
is getting laid, even though it might be shipping as an iOS quote unquote native app, the tooling,
all of that.
I think you're right.
And here's what I think too.
I think historically things revert to the mean, you know, like the web is the mean,
the web is the standard general platform.
That's why the web's running on Linux servers because that's another general standard tech
platform.
And inevitably, inevitably you just, you just give up, you concede and you just use the
general tech platform.
It's just the way it goes.
Even if you package that up as an app, it's still going to be using web technologies on
the backend.
And you, and you look at some of the biggest fricking iOS apps out there, some of the top
apps on the iOS app store, they can reconfigure parts of that UI on the backend like nobody's
business because it's all web rendering.
We talked about a Ionix new offering for that last week, the same exact idea.
You can reconfigure and even call capacitor plugins as long as the plugins already in
your bundle, right, without updating the actual app.
You know, there is a, there is kind of a little bit of disappointment here though.
I would have bet a few years ago that web assembly would be a much bigger part of our
day-to-day lives.
Yeah.
Yeah.
And that just didn't happen again.
And I think because of Apple, maybe because if it doesn't work on iOS, well, damn.
It's kind of why start the project.
It's kind of a non-start, especially in the States.
I know some of our European audience who we tenderly love is another way to put that.
I believe yesterday or it must have been Friday, I saw a headline that iOS user market share
has actually just surpassed Android.
Did you see that?
Is that possible?
I just believe I saw that.
I find that incredibly hard to believe.
In the US maybe.
Maybe.
Yeah.
I'll double check it.
But my point is, if you had an existing platform, an existing application and iOS came along
and it didn't support iOS, that didn't wreck your world.
But today in 2022, a project is a non-starter if it's not going to support iOS.
Yeah.
Android.
Let's just say a lot of devs don't do a whole lot of testing on Android Chrome because it's
basically Chrome, right?
Just we're on iOS.
Have you seen the leaks that came out this morning?
Definitely definitely definitely not from Apple PR shutting down expectations for the
iPhone announcement tomorrow.
You called this.
I think you might be right.
Ironically, elephant in the room again.
Several of them.
Get them out of here.
Several elephants.
This is coming out on the day of the Apple event.
Yeah.
So tomorrow it's Monday now for us.
So today for you, I guess.
Yeah.
And so maybe we'll be wrong, but you're right.
The leaks seem to suggest smaller notch is the big new feature.
Smaller notch.
Maybe a slightly better camera.
Yeah, of course.
Yeah.
And if you're like me and dropped your iPhone and you don't want to pay the repair, you
might get one anyway.
Although I'm running at 12.
So for me, there probably is more change right in terms of processor and all that.
Yeah.
Oh, actually, it might be worth an upgrade for you.
Yeah.
So it's who who could have leaked something like that?
Who could the source who could have known be?
That Mark Gurman sure seems to have the right phone number.
Sure does.
That source is.
And it sure seems to never get caught by Apple somehow.
Sure is strange.
It's weird.
It's weird.
But Apple's iPhone overtakes Android with more than half of the U.S. market share.
I believe that there are no more iPhones in the U.S.
Well, and if you've ever like sat in a pub, you'll know that Samsung is betting all in
on folding phones, which oh, my God, they're like fourteen hundred dollars to they're really
expensive.
It seems ridiculous.
I don't.
Yeah.
And the thing is, the headline isn't Apple's iPhone 13 overtakes Android.
It's all iPhones.
And Apple loves selling old iPhones.
And what is that?
The iPhone or whatever, the real cheap one.
I got one for for my grandma.
Still a solid phone.
She loves it.
It comes in cute colors.
I mean, why not?
Yeah, it's a good size.
It's got decent battery life.
You know, it's a decent it's a decent deal.
She's happy.
Got her that in a in a past gen iPad, Benny.
She loves it.
Tailscale dot com slash coder.
Go there to get a free personal account for up to 20 devices.
And of course, you support the show if here's what's up.
This is just a little bit of talk between you and me.
I don't want don't share this to anybody else, but I just want to have a private moment
with you.
If you do nothing else today but install tailscale, you can call today because that that's going
to set you up forever.
Like tomorrow's work is a little bit easier.
I love tailscale.
It's so quick to get going to select after like two minutes.
You're done for the day, you know, because I'm giving you permission to take the rest
of the day off when you go to tailscale dot com slash coder.
You're going to set up a zero config mesh VPN in just a couple of minutes that manages
firewall rules, takes care of that dreaded carrier double net situation some of us find
ourselves in, and it connects all your devices directly to each other using WireGuard's noise
protocol.
The good stuff.
This is the stuff that we hoped we'd see hit the market once WireGuard became a thing.
When it was a twinkle in our eyes, you can quickly and easily create a secure network
between your servers, your computers, your virtual machines, your cloud instances.
I even have it as an add on to home assistant.
It's just so wonderful.
And then additionally, you can share with people.
You can set up ACLs that supports DNS if you want to put a DNS server in there.
For me, the real fundamental shift in my game was when I realized all these various devices
like at the studio, at home, my kids' computers, my VM machines I'm working on for projects,
my VPSs, they all now have a static IP on this mesh network.
So then I started realizing, well, I'll just connect to that IP all the time.
And it has changed the way I do networking.
No more inbound firewall rules, gone.
I don't have to worry about any of that stuff anymore.
Now my bookmarks for like the web apps and services that I use that I run on different
servers and stuff, they're all using the tail scale IP.
So it's the same bookmark.
It's the same IP when I'm at home, when I'm at the studio, when I'm over at the kid's
house, it is the same everywhere.
You guys, when we got to that point and then I started doing sharing with different members
of the JB team and we really just, we have built our own little private internet and
it's been so easy with tail scale.
And now tail scale has tail scale SSH, which just makes managing your SSH connections even
easier.
Keep connected with tail scale.
It'll change your game.
It's on the level of like file sync and the types of technologies, you know, collaborative
editing chat.
Like it's just a fundamental tool now, a fundamental tool and it couldn't be built better.
It's a great app, a great team, and you can try it for free for up to 20 devices and support
the show when you go to tailscale.com slash coder.
It just doesn't get any better than that.
I'm thrilled to tell you about tail scale.
Go try it out, tailscale.com slash coder.
Well speaking of Apple, you ready to get yourself an Xcode cloud subscription.
They're now generally available for developers after launching in beta in June.
I am not.
No.
But Mike, this is a whole category of people that have to have access to Apple's platform
that they could monetize.
No.
Here's a little bit of the details.
It's like 15 bucks a month for the base plan.
Subscriptions can be like more expensive if you want to add more compute hours.
So 15 bucks a month gets you 25 compute hours, which is, you know, you know what that means.
However long you use some of the back end, you can get 100 compute hours for 50 bucks,
150 compute hours for 100 bucks a month and a thousand compute hours for 400 a month.
You can configure Xflow to upload and build in the cloud and Apple is going to offer 25
compute hours per month at no cost until the end of 2023 so you can try it out and get
real hooked.
You know, so you can now you can build on your MacBook Air and upload it to Apple.
This has really got to be about getting things ready for Xcode on iOS.
Nah, I don't think so.
No?
Wouldn't you think in order to have a really complete iPad development experience where
you can build applications for Apple's various platforms, you're not going to want to build
all that on an iPad?
I mean, you could.
But wouldn't you just, you know, you do everything on the iPad and you upload it to Xcode cloud
and let it build and deploy to the App Store?
I think to make the development experience on iPad good, this is not like the most pressing
issue.
For instance, you'd have to fix multitasking on iPad, which I don't know how they would
do.
Yeah.
Yeah.
So, you know, I actually think this is for the enterprise because, you know, code signing
is a pain in the butt.
And I can imagine lots of organizations that like hire a contractor, the contractor gets
in a dispute, quits, gets fired, whatever.
And oh, he had all the private keys for all of our iOS stuff and our push notifications
and whatever.
We need to now regenerate everything and revoke all the keys.
It's a huge hassle, huge pain in the butt.
I've had people ask me to do it for them many times when they've either had a nasty breakup
with a vendor or whatever.
In a lot of ways, this is almost like a Jenkins for our Xcode.
Wouldn't it in theory allow an enterprise to deploy cheaper Macs as well with lower
end hardware?
You know, just something enough to run Xcode.
Yeah, but the MacBook Airs are damn powerful now and they're not that expensive.
Today.
Right.
Well, the 20% Tim Cook markup could happen, I guess.
No, I just, you know, you take this thing out a few years, I could see it.
I think where this would really take things to the next level is if it let you develop
on other platforms other than Mac OS.
They will never do that.
Never.
Never.
I would pay for it if they did that.
Yeah.
Right?
I mean, the truth is if you're a medium sized business enterprise, it's just better to buy
a Mac mini, put it in a closet somewhere and centralize all your code signing that way.
And you spend what?
If you really want to go balls to the walls, you spend what 2100, 2200 once.
Take the write off, right?
And then you throw it in the closet.
I have a very sad Mac mini for that reason.
Although my goddamn MacBook Air is faster than it, which now is a MacBook Pro 16 inch,
but all right, so I guess they're not getting a subscription out of you.
No, you know, I mean, there are things they could add to it, right?
Like there used to be, I forgot the name of the service, but where they would actually
test it on different devices and form factors and send you back the screenshots of an automated
like Selenium script running and touching different touch points that would be of value.
But again, this is kind of a product of their own success.
Xcode doesn't suck as much as it used to.
And you could basically do this locally with, well, Selenium, which, but to be clear, the
thing I just described does not appear to be a service they're offering, right?
This really does look like running your Xcode tests, making a build, handling distribution
in the Xcode Cloud.
All right, well, let's round out the show with a few boosts.
We got 2000 stats from Nev who boosted into the show a reliable booster.
He says, Chris, I've been living the UbiForm lifestyle, the uniform lifestyle for 10 years
now.
It's just a plain white t-shirt and jeans.
My biggest recommendation is that you have a few optional clothes like maybe a basic
pair of khakis, maybe a few polo shirts, because every now and then you'll want to switch it
up.
But honestly, it's been fine.
It's one less decision I have to make in the morning other than, is it a pants or is it
a pajamas day?
Okay, I'm kind of really liking this idea, and I'm not sure if I can tackle it right
now because you would not believe the chore list I have to get ready for the...
It's one of these things where getting ready for the road trip, three or four things go
on the chore list every day and maybe one thing comes off.
So it's pretty stressful at the moment.
So I don't think I want to take on redoing my whole wardrobe, but I am really liking
this uniform idea.
So I'm going to touch on this.
If I come up with something that's like with JB branded, I may just make it available for
those of you who want to try it too.
I'm sure it'll get a total of four sales, but I might try it because I like...
I mean, I was thinking about, I don't like wearing other people's logos.
Like I'm going to go to the meetup, I should be wearing JB swag, but I don't know.
All my swag either doesn't fit or it's too small, because I've gotten fat or it's faded.
The stuff that does fit, it's faded too.
It's all old.
Yeah, you should totally wear JB stuff to the shows.
This is one more thing to add to my list.
He's making a list.
All right.
Next boost came in from WM2222sats, a row of ducks.
He says, thanks for your thoughts.
He boosted in last week, mentioned that he was on the spectrum and having some challenges
with his workers and kind of feeling left out.
He says, I think I needed to hear what you guys said, especially the part about it just
being work.
I don't have to be friends with any of my coworkers.
I guess I just had a lot of unrealistic expectations going in.
I would add that my last message didn't really paint a clear picture.
There was somewhat some hostile things I had to deal with, but I think I'm just going to
avoid putting too much into this semi-public forum.
He says, you don't have to read this on air.
I just wanted to thank you all.
But I wanted to read it on air because I think it was an interesting reflection that you
made WM.
And I would say, don't write them off either.
You have friends and you have acquaintances and both are valuable.
And a work acquaintance is a lot like a friend, but sometimes when you stop working there,
that relationship kind of fades away.
But while you're there, it's a good, healthy social dynamic that's productive.
So build acquaintances is what I would say.
And then if they turn into friendships, that just happens organically.
But if they don't, that's fine.
You know, you just get your work done.
Everybody's there to get paid.
So we had somebody boost in from Castamatic with no name, but I wanted to read this boost
on the air.
They sent in 5,000 sats.
They call these things wardrobe capsules.
It's a stupid name, but I've been living the hashtag uniform lifestyle for a few years.
It's hecking great.
If the haters lean into it, all right, I'm feeling good about that.
I'm going to do it, dude.
I'm doing it.
I'm doing it.
I'm going uniform style.
If you if you want to join me, you're welcome, but I'm going.
I recommend a nice pair of black, incredibly tight slacks and a gold long sleeve shirt.
You got to have a couple of pips on the one chest, right?
Maybe some sort of triangle logo.
All right, and just walk around in that every day.
You know, I hear those fabrics are designed for comfort, so that should be great.
Well, you got to have your iPhone out and sound like you're scanning everything.
Maybe have the AR mode on.
I have this app called Science Scanner or Sci Scanner, which is just a it's a knockoff
tricorder, but they can't call it a tricorder because they get sued and they can't use the
tricorder sounds, unfortunately, but it still looks like a tricorder.
I hate to admit that I have gone to a Ren Faire and done the Star Trek lost thing.
Yes.
Yes.
Yeah, it's terrible.
Johnny is our big booster this week with 10000 sats.
After listening to last week's episode or whichever it was, when we talked about Google
reporting that dad for taking pictures of his son for telemedicine, he says, Goodbye,
Google.
And I got to tell you, Mike, I'm still thinking about that story every day.
You're haunted.
Last night, Wes and I were like, you know, we were talking about, is it time for me to
get a new Android device and kind of get an updated experience with Android?
Because it's been since the pixel three and maybe I'm getting a little out of date.
Yeah, yada, yada, yada.
And I start looking at it.
You know, the price seems kind of fair.
And then I think.
No, you know what, I'm not going to get any more ties to this company like that line's
been crossed.
I'm done.
And I'm going to take my photos off of Google.
I have not been using Google Maps for a while that also I sort of crossed that line last
summer.
And I think that story was it.
It's not like it's I'm not freaking out, but I in my mind.
Google is now kind of like a hostile territory, like they're not actively hostile, but it's
like I've walked into a bad neighborhood and I need to be really careful and I probably
need to just maybe move my assets out of that neighborhood.
And it's really stuck with me.
It's not it has not faded since we've talked about that story.
I'm I'm really disturbed by what Google did.
So there's that, I guess.
Sometimes maybe that's a good thing.
Maybe that was the that was the story I needed to hear to kind of make it stick.
Perhaps we'll see.
It's so damn hard.
Like Google search.
I don't know if I can stop using that.
I don't find any other stuff is good.
Gmail find that to be the best Google apps for business.
Also good.
Although I don't really care so much about that.
It's more about my personal stuff.
DPG comes in with our last boost of the week that's going on air.
But thank you, everyone who boosted.
They all get read.
Sometimes I'll read extra ones that don't make into the show.
I'll read them in the live stream.
So your support is appreciated.
And DPG comes in with eight thousand eighty five sats.
B-O-O-S-T.
He says in honor of the new Ryzen processors, I thought this amount was appropriate.
Love the show.
The new Ryzen's look so great.
Yeah.
Yeah.
I hope I hope to have more on that in the future.
I'm feeling like it is time for a new machine.
I wanted to get a new desktop before the pandemic and then the supply chain went crazy and I
thought I can wait.
And now I'm really itching.
I like Bill.
I have built up momentum.
Also just a shout out to Golden Dragon.
He said, hey, guys, just 19 shows until episode five hundred.
Keep up the great work.
We got seventeen oh one sats, an enterprise boost from user seventy nine one.
He just wanted to boost some joy in.
He says, please keep the broadcast coming.
And we got two hundred and twenty two sats from oh a guy one who said, you know what?
Keep the advertising pitches in from time to time.
I didn't grab any this week, but every now and then, sparingly, I'll throw a advertising
pitch email in that we get.
We have had weeks where we have got more of those pitches than we've actually got an email
from the audience.
Yeah.
Yeah.
It's usually.
Isn't like the end of the quarter, we usually get hammered.
Yeah, that's got to be it is they got to figure maybe you're getting ready for the next quarter
and you're going to take anything, you know, you'll just and that does happen.
You know, that is the thing is there's and I was just listening to Strattick.
I don't know if you follow Ben Thompson still, but he interviewed the former CEO of Anchor,
the podcasting platform that Spotify bought, and it will send chills down your spine.
They have figured out that their path to making a lot of money is to monetize the hell out
of little podcasts, you know, podcasts with a few hundred downloads, a few thousand downloads
and just ram them up with dynamic ads and stuff.
So but like aggregate aggregate.
So they'll go to what they'll they'll sell like ten thousand downloads, but they'll do
it by running it across, you know, a thousand shows.
That's super sneaky.
And the only way they can do it is by you have to be on their platform.
They have to be able to dynamically reencode your file.
They have to be able to have to do it in their player so they can track everything that the
player is doing.
And the thing is, is they're coming to podcasters who are struggling and they're just saying,
here's a check.
Come on our platform.
Well, you can work with one of our consultants to migrate over to our platform.
Would you like to schedule a call?
And they're going to basically YouTube up Spotify is going to YouTube up podcasting.
That's why we do the boost, right?
So anyways, go get a new podcast app.
Let's keep this thing decentralized new podcast apps dot com.
Let's not let let's not let's not watch that go this direction.
My God, let's not watch another thing go this direction, please.
Also big thank you to our members who make that possible.
You guys are playing a huge role in letting us be picky, choosing the sponsors we work
with.
I genuinely love working with Linode and Talescale.
Use the hell out of them every single day, right?
That doesn't just accidentally happen.
It's because we had the runway, the opportunity to work with those folks.
So thank you, everybody over there, Coder QA dot co.
Go listen to the Coderly and our Matrix room.
Everybody hanging out in our new Matrix chat.
Thank you very much.
If you want to join that Coder dot show slash Matrix going all the time.
And that might be good on the road trip.
You know, you never know.
There might be updates in there.
And of course, you can watch the show on Monday's nine a.m. Pacific noon Eastern over at J.B.
Live dot TV or Jupiter to Mr. Dominic.
Where should we send folks?
Give them some wisdom, some resources.
Well, sure.
So wisdom never tap out before your attacks that always play stuff in your second main
face.
There's your wisdom.
And follow me on Twitter at Domenico.
You'll get coding magic and my October fest.
Sell it brought.
So you I knew you.
Yes.
I knew I did.
This is my favorite time of year for cooking with beer.
So it looks so good.
Wes and I were actually working on some studio stuff and we hadn't just eaten some fried
tip.
I think we would have had to cook up some brats.
We love the beer.
Beer soaked brats.
It's came out good.
Yeah.
Yeah, I bet.
All right.
Well, links to what we talked about today.
Coder dot show slash for a two.
And don't forget, we want your feedback.
So boosted in or go to the contact page over there.
You can also find our RSS feed on the website and then you can watch the video archives
of these live shows and catch future live shows at Jupiter to.
Thanks so much for joining us on this week's episode of the Coder Radio program.
And we'll see you right back here next week.
