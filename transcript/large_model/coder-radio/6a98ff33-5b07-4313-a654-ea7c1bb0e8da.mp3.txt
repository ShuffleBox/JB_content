This is Coder Radio, episode 338 for December 31st, 2018.
Hi everyone and welcome to Coder Radio, Jupiter Broadcasting's weekly talk show, taking a pragmatic look at the art and the business of software development and its related technologies.
This episode is recorded across the Pacific Northwest and the beautiful state of Florida. My name is Chris.
That's not so important. What's more important is who's joining me from Florida. Why, yes, it is our very own Florida man. It is Mr. Dominic.
Hello, Mike. 2019 is at the yes-a, at the bings-a. Oh, I thought maybe the year he finally, finally, finally went away.
Mesa gonna be with you forever. That's why I'm getting that impression. It's taking 338 weeks for it to sink in.
But it's starting to finally sink in. How are you doing? Did you have a good holiday? How are you?
I had I had a wonderful holiday. I somehow accidentally bought out the toy store. Oh, yeah. I think I went a little overboard.
I did that, too. And I have discovered the joys of napping. Yeah, I was actually I wasn't sure if you wanted me to out you or not.
But Mr. Dominic is joining us fresh off of a nap. You know, I think it's about 3 p.m. where you're at right now.
And that I find is my peak napping time. If I'm going to if I could if I could sneak away and have a nap, that's peak nap time.
And it sounds like an old man thing to say, but naps might be one of the best life hacks.
I'm proud of you, although your timings a lot. It takes me at least for me.
It takes me a solid 30 minutes to turn back into a human being after a nap.
You know, I can do it pretty quickly. But let me tell you something. There is no greater luxury than going to sleep at two o'clock in the afternoon.
Oh, I know. I mean, it's decadent. It is. And it's one of the perks of, you know, being your own boss.
Right. Yes, absolutely. Yeah. I especially after our last episode where we got really hard on that whole thing.
Like it is there. It is good to sometimes take a step and go, man, you know, it's nice being being the master of my own domain.
That's right. So the process. See, you want to learn my napping secret here?
I do, because I actually no joke. It sounds like a bit, but I am planning to hone a healthy nap hygiene and hopeful habit in 2019.
So any tips you have for me, I would really appreciate.
So I have been perfecting the nap because you're right. You don't want that like groggy like nap hangover.
Yes. I don't think I can burn an hour. Right. I think I've got like a half hour, 45 minutes.
Maybe I can sneak here and there every other day.
So the trick is you want to do it right after you eat lunch.
I was thinking that, too, because you get like the food coma, the food coma.
And you want to have a little bit of coffee before you go to sleep, but right immediately before.
Oh, man, this is good. Right. So that way, while you're sleeping, your body is digesting the caffeine.
You wake up the caffeine. Absolutely. You start metabolizing the caffeine.
So when you finally like in this case, the alarm for the show came on and woke me up.
You you're loaded with caffeine. So it only takes a minute or two to stabilize.
OK, so are you are you a rough sleeper like I am?
Like I have pretty horrible sleep. Yeah. Have you have you done a sleep study?
The missus is pretty aggressively pushing.
Yeah. My missus is pushing me to go get my second sleep study right now.
Yeah. It's the worst. It's the worst.
It's the worst. Yeah. I've gotten pretty deep into sleep tracking.
And I use a couple of different apps because, like I said, I'm deep into it.
And what's great, I got to say a little quick Android versus iPhone on sleep tracking is I would say the most robust sleep tracking goes to Android.
Sleep as Android is not nothing beats that.
Especially if you have Android where. But there is a distinct advantage to the way the Apple Watch does sleep tracking that is neat.
And that isn't such that the Apple Watch is just tracking your movement and your heart rate and things like that and saving them to health kit.
And then the apps analyze the health kit data so you can have three or four different sleep apps that aren't drawing down your watch battery or your phone battery while you sleep.
They're analyzing the data collected while you slept. And so that is really cool.
So I've got different views into different sets of sleep data as I'm trying to lose weight and exercise.
I mean, I'll get into this a bit later in the show and I'm tracking it all with these apps.
It's actually it's gone from just like navel gazing and playing with myself to actually creating a feedback loop that is that is reinforcing positive behavior that is positively influencing my sleep.
I'm really excited about today's episode because I'm in a good space with like where I'm going in 2019.
And it sounds like you've got some serious goals like, you know, I hate how I really I'm not a big fan of New Year's resolutions because I kind of just want to start right now.
It's always been my thing. But goals or new ways of thinking, thought technologies, if you will, or frameworks, I'm kind of all about that for the new year.
So I think I'm really excited about today's episode to chat with you about it because you're full of good hacks already.
But why don't we start with an email from Nicholas? Because this is great. Nicholas goes way back. In fact, he says, I've been listening since episode one.
That's a man who can tolerate some pain. Right. Like, Nicholas, first of all, thanks for putting up with us.
We are not easy to listen to for that long. And I greatly appreciate your fortitude and willingness to put up with my ridiculous behavior.
And I won't I won't speak for Mike, but you know what I'm talking about. All right. So I think we all know what we're talking about.
He says, I've been listening since episode one. And I remembered I even remember, he says, when Koda Radio was being announced on the Linux action show.
The start of my software career happened around the time of the start of the show, and I've never missed an episode.
A couple of episodes ago, Chris struck a chord in regards to the future of Microsoft and Electron.
It just so happens that weeks prior, I decided no J.S. had staying power and it was time for me to get involved.
I come from a strong sequel in Java background. I well, you know, those established technologies.
I've branched off several times to learn Haskell or Clojure or Scala and Q2.
After learning these technologies and watching their adoption and communities flatline or decline into nothingness.
I now feel like a defeated Viking sailing back with no treasure after a long raid.
That is that is very relatable, Nicholas, right there.
He goes on to say, when learning something new, I tend to have similar thoughts as Mike, or at least I think based on his comments.
I remember back when Mike had his first run with Qt years ago, he got me excited about it and I could see why.
There's an architecture beauty to Qt that causes a software developer to assume Qt has to take off.
How could such an engineering accomplishment not take off?
It's like this with so many great languages and frameworks, though.
I think the comments Chris made about Microsoft Electron and an electron have weight.
Not not because node.js and JavaScript Electron are great technologies,
but because JavaScript has become the lowest common denominator for inexperienced developers to write a lot of code quickly.
And often they make a big mess in the process.
It's also proving to fulfill the right once run everywhere promise.
My hope for 2019 and beyond is that Microsoft will get ahead of this being more of a Linux guy.
I never expected Microsoft to be the shepherd for so many open source projects.
And now. They have the potential to start replacing major applications with electron.
Great show, guys, and best of luck for 2019.
Yeah, Nicholas, isn't that interesting about the part that he says in here that really resonates with me?
Is when he talks about how he looked at Qt and thought, how could such an engineering accomplishment not take off?
I feel like we get stuck in that trap a lot, a lot, and sometimes early in the game before anything's taken off,
you don't have a lot of things to base your decision off of.
So you kind of have to look at the engineering merits of something.
That's not always the biggest factor.
Sometimes the market has other ideas, right?
Things just don't go the way I mean, really, by all accounts, Qt should be huge right now.
I mean, it's pretty big, but it should be. It should be.
It should be. It should almost especially for kind of a more Linux leaning audience like we have.
I feel like it should be more of a standard platform.
That's the way it should be a standard.
It should be a standard, right?
Like you want to develop an app using app as very loosely for, frankly, if you're a Linux action show or Linux unplugged user or action news now,
I like the switch, by the way. I like the news.
Yeah, yeah.
It has, you know, I mean, just saying, side note, it's had an unbelievable year.
It's been great.
It's been fabulous.
In fact, I'm dating you actually because I can't remember if it was Linux unplugged or Linux action news,
but our disappointed Viking reveals something in his email here that I'm struggling with.
You know, I'm using my Mac and my Galaga like 50-50 because I have this giant Swiss project I'm doing.
One thing that keeps bothering me is that the apps on my Mac are pound for pound better with the exception of Slack, which is terrible.
Yeah, yeah, yeah.
Yeah, you know, and the other thing is, the other thing too is, you and I were chatting about this off air,
is that on the Mac, you generally, you have three or four apps to pick from and maybe one or two of them is really good.
They're all slightly more than you'd like to pay for them, but you are willing to pay for them
because they are far and above beyond anything that's a web app or on Windows or on Linux desktop.
And that, I mean, that hurts for me to say.
Yeah.
And what I realized I was doing, and you guys that have been listening like Nicholas to the show for a long time,
know that I kind of, I come at this with an anti-web app bias.
I'm an old fart who feels like my applications shouldn't be in a browser because the browser is unstable.
It's a security vulnerability.
It's also just a lot of runtime more than ever than to just run an application.
It makes Wine look like a simple, simple thing when you're running a Windows application on Linux.
If you think about it, if you think about running a Windows application under Wine on Linux,
that's more pure than running a damn application in a web app under, you know, Chrome or whatever.
But as I, I'll just make this quick, as I've been transitioning to Linux after I got the ThinkPad and I just really went all in,
I stopped video editing.
That was really the marker, wasn't the ThinkPad.
It was when I stopped video editing.
I just, I just, all the Macs went out of my life.
I just flushed the toilet.
All the Macs were gone.
I'm no longer in the need of a Final Cut OS.
And I started leaning a lot more on web apps and it's just awful.
It's just been, 2018 has been the year of web apps for me and it's been awful.
Yeah, I can't tell.
I'm going to give you a real world example.
I mean, I'm going to exclude Xcode from the conversation because that's kind of a compulsory.
Same like Visual Studio on Windows.
Like if your job requires it, then it's sort of a conversation ender.
It's sort of, yeah, right.
If you're developing in Swift and Xcode, yeah.
But goddamn, an OmniGraffle, right?
Like I just, I have to make a lot of like pretty diagrams for people because people want to know before they hire us to, you know,
build these systems for them, what they're going to get or at least what we think, you know, upon a discovery, right?
Obviously things change.
And I have been through at least a dozen, either web applications, wrapped electron apps, LibreOffice draw when I was in a particularly dark place.
And it just makes more sense for me if I'm not already working on the Mac for that particular project to just switch over to the Mac and do it on Omni.
Because I know it sounds like the dumbest thing if you've never used OmniGraffle, you're going to be like, no, it's the big deal.
It is. It's Visio for human beings.
Right. It's Visio if you don't actually hate yourself.
Yeah. Yeah. If you're not a cutter.
Jeez. Got me on that one. All right.
But unfortunately, like all things from the Omni group, it's not available on anything but the Mac and maybe, maybe iOS.
And if and get ready to pay, because if you want the good version, it's 200 bucks.
Oh, yeah. Oh, by the way, that's the other irony.
The iPad Pro version of this app, which does exist, is better than most of the web app alternatives on desktop.
Oh, absolutely. Yeah, 100 percent.
So if I had to like let's just say like I did no more Swift work, which I got to talk about because for some reason that came back up.
I probably would be more inclined to like get a Thelio, but still do all this documentation work on an iPad.
Well, yeah. Yeah. Yeah. Welcome to my world right now.
Oh, and Slack on iPad. I just want to say. Yeah. Well, native. It's so much better.
It's so much. You could just like port that. Right.
When this when that Marzipan thing comes out to port it to Mac, that should be their first step.
They should. And then. Yeah, seriously.
Then the Mac version would be the best desktop superior to all the desktop versions.
Yeah, I'm I'm not surprised that you and I are both feeling this way because think about it.
So Omni Graffle. Great example. I think Omni Graffle is maybe the perfect example.
The Omni group is the company that makes that Omni focus and a few other applications are pretty well known for.
And they've been around for like 20 years.
So you've got a dev shop with a 20 year legacy.
You've got a platform that has 20 plus years of design ethos and thinking and language.
You've got a stable, well set of documented APIs.
You've got a distribution mechanism that you while it takes a large cut, provides your CDN and provides your payment processing, provides in that purchase mechanisms.
Is it that surprising that you and I are sitting here going shit somehow, man, this has resulted in a better set of applications than what you get when you run something in a web browser on a free desktop.
I actually don't think it's that surprising. It's disappointing.
That's for sure, because I'm a user of that free desktop talking to you on you.
I'm on one right now as we're doing this. But I got to say, like Omni Graffle, Slack, you know, I'll throw another one out there.
That's just I'll stack this up against anything that's available on Android or the Linux desktop airmail.
Oh, yeah. If you have a few mail accounts, if you know if you if you're if you're tracking a female, nothing beats airmail.
I've tried everything else. Nothing beats airmail. That is my email client of choice on Mac.
Yeah, I will. It's that's what I use on the iPad.
So the the. The weird shift that I'm I am really struggling with a bit is I've gone from a workflow shift where my desktops are my main source of truth to where.
His sounds, this sounds so douchebaggy, but it's just it's just the truth.
My my my iPad is the source of truth now. The iPad is because it's got I a writer, I a writer.
I'll put a link in the show notes. It's got to be one of the best text editors I've ever used.
It's got working copy on my iPad. Working copy has got to be no offense because Code Journal was awesome.
But working copy has got to be one of the most powerful get clients for iOS that I've ever used.
It's just here's why I like working copy. Working copy can run in the background as glue.
And you don't ever have to really use the app. Yeah, they've they've they've.
So I can just I can be an I a writer and I can be writing show notes and I can be writing notes and I can hit save and working copy is saving that up on my GitHub repo for me.
And it's saving each version up on GitHub for me as I'm sitting there writing and I'm just I I got to I really it's just so great because I just fire up the app.
I just start writing. I hit save and everything in the background is going up to GitHub with me not having to do anything.
And this workflow is pretty good. And so what I've what I've been doing over time is I'm trying to come up with.
Workflows that are not specifically locked into iCloud. They're not locked into Google. They're not locked into one particular cloud vendor, but they work really great.
And I can access them from the desktops and the iPad. But the primary the primary dependency is that the iPad can work flawlessly.
The desktops and laptops are now secondary. If I can get it, if I can view it, if I can edit, that's great.
But it has to be on the iPad, which is a complete 180 from where it was before the iPad Pro.
I've even I know this sounds stupid, but I've even gotten myself set up now with a mechanical keyboard, a great mechanical keyboard, which one?
It's I think it's Mattias Pro. It's got the the one that's designed for the Apple command key.
I don't know what I think it's. I'll try to find it. I'll try to put it in the show notes. I got the Mattias Pro hooked up to a USB hub that has power.
It's got it's got a professional sound connected to it. And then it's got professional monitors.
I've got my speaker set up, my sound system and my speaker set up connected to my iPad is is bigger and more expensive than the iPad.
It's my editing speakers. I don't do a lot of editing anymore, but I have started editing on the iPad using Fahrenheit, which is a fantastic audio editor.
And what I've learned is I've had to eat a little bit of my own hat because I wrote iOS off as a consumption operating system.
You know, it's cute for phones. It's good. It's reliable.
It's you can expect it to perform on your phone and it makes a good phone operating system.
But on the tablet, you know, Android's way better because you get access to the file system.
You can connect actual storage devices. You can install a file browser like the Android would be a way better tablet operating system except for that.
They just dropped the ball and and the workflow on iOS has gotten a lot better.
Some of the some of the things that I've really noticed is it's a lot like Unix.
I know that sounds crazy, but a bunch of small apps I string together to accomplish something.
I've gone on too long about it, but.
It this 2019, I I have no idea at the end of 2019 where I'm going to end up with my desktop Linux usage because I think.
I just I think I think I'll get into it, but I think I'm in a mindset now where the strongest will win.
And whatever comes out strongest is what I'm going to end up using. And I go into it without any bias.
So whatever just works the best for me is is what I'll walk out using by the end of 2019.
I mean, in terms of different Linux environments or or whether it's the Linux desktop at all, all of it.
So I'm going to launch a new series soon on the network, but I'm just really busy planning to get married and all that kind of stuff.
Once I get all that done, I'm going to launch a series on the network called Distro Hopper,
where I just go through a bunch of different desktops and distros and try them all out and just see which one works for me.
And if at the end of it, none of them work for me, I'll be honest about it. And I'm just going to switch.
I'm just I've got this has got to stop. This has got to fucking stop. You know what I mean?
Like this is yeah, I feel the same way. Yeah. Like it's it's like I've got a problem in a way.
Like I've got a problem and I can't I am compulsive in this regard and I've got to get a handle on it because I'm wasting too many of my CPU cycles on it.
You feel similar?
So I'm going to make a cheap joke about myself breaking computers, but seriously, like I have paved and wiped and installed.
Either Mac OS or.
I know you feel this way, too, right? You have a way you want your system set up.
And just always having to hop around, always having to switch has proven to be a tremendous waste of time.
I got to be honest, I'm like I almost feel like if I can do one process improvement for the new year, it's.
You know, whether I have to keep juggling Mac and Linux because I'm going to be stuck doing Swift development, I just have to have one set up for Mac, one set up for Linux.
Yeah. And that has to be good for the year. That's what I'm that's exactly where I just has to be done.
Yeah. Right. And you know what? Waste of time.
I think maybe when when the cards fall where they are or where they may or whatever this whatever the stupid saying is, you know, maybe I end up on a known desktop and I get a 13 inch MacBook.
Or something. I don't know. I don't know where it's going to go. I tell you what it comes out to.
But we're relatively sure Windows 10 is not going to win this this beauty contest.
No, no. This isn't really what we we assemble here to talk about today.
But but it is both of us kind of saying like we're not going to have another 2018 where we just flip and flop for like the whole year trying to figure this out.
Like, yeah. And you know what? Part of it, part of for me is there's a risk in offending a portion of the audience.
If I come out and I say, you know, this is just way better on XYZ platform.
It doesn't matter. It doesn't matter what I choose. If I come out and say.
I'm dropping plasma because of the multi monitor issues that I'm having and I'm switching back to Gnome and I'm switching back to Arch.
I'm going to offend a ton of Ubuntu users and plasma users who have identified me as one of their champions who's rallying people to try plasma.
And if I say if I say, well, I'm I'm I tried Gnome and it just didn't live up to what I want and I'm sticking with plasma, I'll offend all the Gnome people.
So and if I say I'm switching to Mac, I'll offend all of the Linux users. And if I say the Mac didn't cut it, then all of the Mac people listening will say, what the fuck, man?
You didn't give it a true shot. You're such a biased Linux user. Like, there's no winning for me in this.
I've just got to get through it and have it over with. Yeah, I don't I don't think I'm going to be a little mean.
I really don't think people should care as much as they do. That's it. Right.
Like if the head of the Linux Foundation runs Linux or runs Mac or runs Windows, it shouldn't matter if that's it.
That is it. So like Swapnil is a Linux journalist who has a YouTube channel called The Fourth Industrial Revolution, if you want to look him up.
And if you go look at his comments on his YouTube videos where he's interviewing Linus Torvalds, Greg Kh, just great people in the open source world.
He's there at the events. Excuse me. He's there at the events interviewing these people and he's doing a great job.
And the comments are always, hey, man, did you edit this on a Mac? Hey, man, why aren't you using Linux Swap?
Well, I mean, come on, Swap, why aren't you using Linux? And, you know.
It is an obsession in the wrong area, because if you think about it, the desktop for Linux and for FreeBSD for all of the non-commercial operating systems is trivial.
It really doesn't matter. All of the money being spent on open source is being spent on the enterprise.
All of the money being spent on desktop development is being spent in the commercial operating systems.
The free desktops are, by the grace of God, a secondary benefit we get by Linux being a champion on Android and on IoT on servers.
And for some reason, Red Hat spends an irrational amount of money on free desktop projects.
And we are all here running our free desktop sort of riding on the coattails of desktop. Desktop Linux is riding on the coattails of server Linux.
So are you suggesting that I'm not sure that I don't agree with this, that since the real game for Linux is an IoT and on the server,
all these little flame wars about, for instance, GNOME versus Plasma, which I think is the dumbest argument that goes on, are kind of completely useless.
We're not important.
Total distractions.
Yeah, I have to agree with that.
Yeah. Meanwhile, there's like a whole billion dollar industry out there that is booming.
And we're sitting here worried about are people writing Qt apps or GTK applications?
Are you running Mac OS, Windows or KD or Plasma?
Are you on Pop OS or are you on Ubuntu Mate?
Are you on elementary OS or are you on Arch?
Are you on OpenSUSE or are you on Fedora?
The things that we're worried about are just, that's not what the market's worried about.
No, not at all.
Yeah, that's what the, I think that's ultimately going to be the lesson, hopefully of 2019,
because now that we have Microsoft being bigger in the space and a bunch of other companies,
I don't, in a weird way, I do think we're going to see continued growth in the Linux desktop.
Yeah.
But I think it's going to somehow be different.
I think a lot of the real big money action is going to be, and continues to be, right,
this isn't a new trend, on the server side and particularly the IoT side, I think we're
going to see something pretty, I don't want to say like Docker for IoT, but something
like that that standardizes the IoT landscape.
It's one of the dirty little things that if you've ever done IoT development, it's very,
unless you're using like a Raspberry Pi or an Arduino, which is kind of IoT, but I'm
talking like 5G.
Yeah, also it's like consumer grade hardware, so it's a bit of a risk too.
Yeah, I'm talking about like real industrial grade IoT.
All of these platforms are kind of their own beautiful little ponies.
Oh, sure.
You've got to collect logs, you've got to ship updates, you've got to manage the lifespan
of the hardware, and you've got to stand up all those backend services to provide that.
You've got to build all of that, unless you go with Azure Sphere OS.
Right, which I still don't think, I mean, Azure Sphere is very interesting, but what
I'm thinking more is like an open source, kind of like a Docker, like an abstraction
over the core system.
Sort of like how, and I'm just saying as a comparison, not that it's going to be this,
Project Treble is for Android, where you kind of abstract away some of the hardware stuff
and you can keep the kernel and the software layer current, and then it's just this abstraction
layer that you have to kind of fiddly worry about the hardware implementation details.
Something sort of like that, but for IoT?
Yeah, that's what I'm thinking.
Exactly like that.
I could see that.
I could definitely see that.
I think that'd be really, really good.
And then let's move on.
I want to get to your goals for the next year, but back to your Microsoft point, just super
quick, isn't Microsoft sort of total change of tone and doubling down on open source in
a way like a weird validation of everything that I just talked about?
Microsoft is sort of proving that it's about the server side.
It's always been about the server side.
And the desktop is just secondary for people that want to compete in that market.
But if you're not making the hardware like Macs, like Chrome, like the Surface, then
it's almost not a game worth playing.
You have to be, at this point in 2019 now, it has to be everything that has to be a complete
product.
It needs to have storage.
It needs to have applications.
It needs to have all of these third parties that connect in with it, like Mac OS does,
like Chrome OS does, like Android does, like iOS does, and Windows.
Yeah, I think that's exactly the point.
I think it's going to be...
You mentioned a few weeks ago, I think, some pretty aggressive kind of hinting or predictions
about what Microsoft might do with Electron.
Yeah.
If they do that, I think that's going to be more than just make Electron on the desktop
better.
I think we're going to see some sort of holistic...
We're going to see something...
How can I say this?
Like something where that technology, where the Electron technology becomes glue between
your server, your client software.
Something bigger than just making Electron less crappy.
Yeah.
Yeah, of course.
That is Microsoft's bread and butter there, isn't it?
That is really what they're kind of good at.
In fact, not to double down on my own theory here, but in a way, Microsoft, for a very,
very long time, has been a huge proponent of write once, run everywhere.
They've just done a really bad job.
Well, they've done a great job.
Hey, Chris, I have to update my J-Shot.
I'll be right back.
Thank you.
Yes.
You know exactly where I was going.
That is exactly...
They've done a good job.
If you're in the Microsoft-only ecosystem, then write once, run on all Windows platforms
has worked for quite a while.
But this is really about truly legitimately write once, run everywhere.
Of course, it's the VHS of programming languages, but it is truly write once, run everywhere.
And my prediction was that Windows would become the premier platform because Edge rebasing
on Chromium, they could bake in an Electron runtime into the OS.
And Electron applications, it would require some modification in the stack like we talked
about.
We covered that.
But it would make Windows a premier platform to run these Electron applications.
And Microsoft would really just be fulfilling something that they've put a lot of energy
behind for a very, very long time, which is different attempts at the implementation.
Once you get things like Office or a couple of other core applications in Electron, what
really starts to matter is that Chromium engine, not really even the Win32 API or the GDI-based
desktop, what really starts to matter is can you render that Chrome web data.
And Microsoft, if they can get all of us to transition to that, gets a ton of flexibility
on the future of Windows.
I don't know where they go with that.
But if they're not thinking of this, if they're not, I mean, if they're not thinking about
Electron as one of their many escape hatches from the Windows code legacy, then I don't
know what's wrong with them.
It's got to be part of...
Microsoft doesn't do just one thing.
Microsoft does things when it's beneficial in three, four, or five ways.
And when they can say, all right, this benefits us in multiple ways, then they act.
The move to Electron with their acquisition of GitHub, it enables them to provide applications
from multiple platforms, from mobile to desktop, and it allows them an escape hatch to get
off of the Windows code base if they want to move to something in the future.
It just seems like they got to do it.
They got to.
Yes, I'm even more ambitious than that with if they're going to do it.
It's not going to be Windows, Linux, Mac, server, IoT.
It's going to be...
In fact, I think this is for everybody, including TMB, and I think you're going to see it a
lot too in the open source space of, you're not selling an app anymore.
You're not selling consulting services.
You're selling a full solution.
Part of that may be you have an iOS app that runs Swift.
Part of it may be that you're using some sort of like Azure Spheres.
Actually, if they just do what they're doing with Azure Spheres with Electron, where there
is proprietary, I believe, I don't know.
Did they say that we're going to open source Spheres OS?
Ah, good question.
I don't know.
So, I mean, it's Linux, but the things they've added from my conversation with them are crash
metrics, secure updates, and things of that nature.
And I don't think those are open source.
Well, and there's also on part of...
In one way, the way that they market Spheres OS is kind of weird because it's not just
an IoT operating system.
The real value there is getting the basically pre-rolled security and a bunch of the pre-rolled
functions by connecting it to Azure, right?
And that is...
So, if you're considering...
I'm just going to take a little Spheres OS tangent here.
If you're considering Spheres OS for your project, what you're really considering is
not, these are the boards I want to run.
Right.
What you're saying is, I am buying this entire holistic solution that includes backend processing,
various security technologies on the backside.
I know the Azure stuff is still proprietary.
This is how I'm going to collect my crash logs.
This is how I'm going to ship updates.
The whole package.
Yep.
Right.
I think more and more after listening for you for a few weeks about what you think about
Electron, I think a very similar strategy where it's not you're running a desktop app
in Electron.
It is you are producing a full holistic solution, leveraging these integrated technologies.
It could all be all the way down to IoT, right?
I could see some kind of weird integration between Microsoft approved Electron app and
Spheres OS.
Maybe that's too far.
Maybe they don't see that as the same market, but why wouldn't they have just as they do
in Spheres OS, special prefabbed, basically developer niceties so that you as the ISV,
as the end developer can ship a just more robust solution, which is frankly what I think,
especially going into the new year, that's what it's going to be all about.
It's not going to be about give me a desktop app or give me a web app.
It's going to be, I need an entire solution and I don't care about the platform.
Yeah.
And does that, so going back to Nicholas's email, it started this whole conversation.
He talks in there about how Qt would have to be the dominant victor because it was such
a well engineered solution, which is how I felt about the Linux desktop for so, so long.
And it's not really that, is it?
It's about the comprehensive product that makes it onto the market.
It's really, it's about so many other factors that we as geeks can kind of tune out a little
bit because, you know, a lot of times we'll, you know, in order to be ahead of everybody
else, you kind of, you kind of have to turn to kind of tune in to what's new and what
has possibilities.
And you kind of have to tune out what popular culture is telling you to pay attention to,
to a degree.
You know, you have to balance that.
And I think we as geeks sometimes get trapped in this way of thinking and we think, well,
the properly engineered solution is obviously is going to be the winning solution.
Yeah.
I mean, I would add that Qt is kind of a weird special case because of their dual licensing
situation.
Yeah.
And I've personally been in meetings where just the uncertainty around when exactly do
you violate the GPL has, yeah.
All the time.
All the time.
Every day.
I should get a shirt, violate the GPL every day and see how well it sells.
I would not wear it because I know one of these jokers would actually try to, I could
already see it.
That'd be no good.
All right.
Well, why don't we, why don't we start talking about the things that we gathered here today?
Sounds good.
Great email, Nick.
You definitely derailed us for 48 minutes.
Thank you.
Thank you, Nicholas.
And thank you for listening since episode one.
I really appreciate it.
So moving forward now to your plans for next year.
What do you think, Mike?
What are your, I mean, if you want to call them goals, we can call them that.
But where are you going next year?
And if nothing else, what does present Mike hope that future Mike pulls off?
That might be the way to think about it.
Yeah.
Well, I really want to remove a lot of the thrashing from my processes.
The biggest one being, you know, distro hopping and destroying laptops is not good.
I know it sounds kind of like a joke, but it really was a tremendous source of just
waste, particularly of time.
I need to start shipping first party products faster.
So like not not not.
OK, just to make sure I'm clear, you mean not projects that you're doing because you
got a client doing them, but ones that you might sell directly to the market?
Yeah, I mean, continuing to do both.
But the products through the market, it's definitely important to have a few things
out there.
And there's just a lot of tools that I need for myself that currently don't exist or
don't exist in a form that I like.
So I think that's a pretty good place to start.
Yeah.
This one, I think, is a little controversial.
OK, so I went on Twitter and I asked about TDD again because I knew Kara Swisher wasn't
available and I figured I'm going to get in the flame more.
I mean, I think it would.
I need to take another look at it.
I still really, really don't buy it because I've just run into enough shady consulting
shops that just use it to pad invoices.
Oh, sure.
I mean, well, OK.
Yeah, I mean, do you not buy it in the sense that, you know, it's a small shop with only
so much time and a few people to actually do real work?
Not not to even mention people that could be dedicated to writing tests.
I mean, so if I guess flip your your lens, you're looking at the situation.
And if you had a 25 person development team and three of them could be dedicated to writing
tests all the time, then maybe test driven development wouldn't be so bad, right?
It's scale, isn't it?
It's a scale issue.
It could be a scale issue.
I mean, I definitely agree with that.
Obviously, you know, if we were 25 people.
Yeah, that probably does make sense.
You've still got to answer questions about like test coverage and do you write tests
first, which we're doing TDD.
You probably should.
Although many people on Twitter say, well, they just do it in parallel.
Yeah.
The real the real issue, because theoretically, if you buy the TDD Kool-Aid, even even at
a small scale, it should produce a benefit to you.
I I have I have begun to sip upon the Kool-Aid and.
The people that I talk to that are trying to convince me, they tell me that if you spend
if you spend 10 hours, 20 hours developing your tests and thinking that through, you
spend significantly less time doing actual practical development because of all of the
front matter you had to do to create the test and work that through.
And it generates these endpoint goals for you to test against.
And so it's like sort of it just does so much of the pre-work.
I have yet to actually verify this to me.
I'm more of a just let's just jump in and start building kind of guy.
But this is what I'm being told, because this is how they kind of work at Linux Academy
for their development, is they're like, let's define the scope.
Let's define the test.
Let's make sure this meets what we expect.
How do we measure it?
Now we start building.
And the head of engineering at Linux Academy told me that, you know, if we spend 20 hours
ahead of time planning, then that takes 20 hours out of development time and that she's
she's personally seen that and believes it.
I have yet to adopt the methodology.
Well, I've heard that before.
And then when I get into the kind of like.
How question I get answers, it's yeah, right.
Yeah, it's definitely something I'm going to be exploring.
I'm going to be pretty aggressively exploring the first quarter because it's getting to
the point where, you know, when this all became popular, we had just started the show.
And there were a lot of naysayers, myself included.
Now it's just the case that like maybe not TDD itself, but certainly automated testing
of some stripe is basically the accepted good practice.
And there just has to be a reason for that, right?
Like I hope maybe this is another agile consultant trick, but I hope it's good.
I'll tell you what the skepticist in me says is that it's a way for people that are getting
paid full time by a business to justify their hours.
However, however, if you look at the way we do shows.
It kind of is there is an analogy.
We spend a significant amount of time before the show thinking about the show, planning
the show, organizing the show, talking about the show.
In fact, the thing that takes the least amount of time in releasing the show and everything
is the actual recording of it, right?
Like the editing takes more time, the planning, just you thinking about it takes more time.
And all of that work means that when we sit down and do the show, we have a pretty tight,
compressed, ready to go show.
And so we do all of the legwork ahead of time, and that's kind of what TDD is, if you think
about it in that way.
Like that's how I've started thinking about it.
And I guess that's the way to put it.
I've shifted the way I think about it.
Instead of validating the end result, I'm thinking about it as a way to validate the
work before I even start.
And I think that's the shift.
If you're going to do TDD, that's the shift you got to make.
I could be wrong.
I'd love to hear what the audience thinks.
Yeah, I'd love to hear what the audience thinks.
I mean, this is something where it's either going to be one of these situations where
I just haven't seen the light yet, but maybe I will.
So what else is in your future for 2019?
What else?
I mean, that's big.
I think some serious Swift development.
Oh, I'm sorry.
What?
I'm sorry.
Do we need to end the show?
Should we just hang up?
Should we rage quit right now?
Hang on.
Let me remove all liquids and metal objects from my desk.
I can only imagine what the rest of your day was like after that Swift episode.
I never thought about that.
I never thought about what Mike's day was like after that.
I know what my day was like.
There should have been a bonus content of just following me around with a GoPro, watching
me just rage at the world.
Well, it's time to wave the white flag of Objective-C.
Really?
It only took me five years.
Okay.
All right.
I mean, I'm there with you, man.
I was there for this fight with you.
Unfortunately, the iPad Pro is becoming too good.
And we kind of alluded to this in the beginning of the show, although I don't know if you
knew, oh, I did put it in the doc.
But there's just too much opportunity to make actual production apps for iOS right now,
which is what I have wanted.
And please listen to the back catalog.
And I have a feeling episode 104 will be your favorite.
That I was willing to lose $40,000, work on Windows just to do this on WinRT.
I still know iOS like super well.
I do it for contracting work.
I know what you mean.
I know what you mean.
It's still in that sweet spot for you.
And say you want to scale out a team, like you know how to scale that out.
I know all the tools.
I know the code signing.
The art expectations.
How to play the App Store game.
I know how to work with Apple reps.
Yeah.
Yeah.
Yeah.
Yeah.
And you know, it honestly, it would be a little silly and frankly a little petulant to just
not go with the flow.
This is the flow now.
Hang on.
I'm choking on blood right now.
I know, right?
This is the flow.
This is now the flow, which we have now.
It's so amazing that this show really kind of started before the App Store was a phenomenon.
And we've watched this happen, this phenomenon of learning how to game the App Store.
Learning how to make sure that you're meeting the right features and getting the right design.
And it would be honestly negligent if I took a completely, you know, just removed, detached
perspective.
You would be negligent in your business not to pursue this.
Right.
And it's exactly what I've been droning on about for six years.
Seriously.
So.
Yeah.
Yeah.
It's, you know, whether I think Swift is ultimately going to be a better language than Objective-C,
that's I think it really doesn't matter.
It doesn't matter.
It doesn't matter if it's better or worse than Go or Rust.
It doesn't matter.
It's better than Rust.
I mean.
Oh, man.
The emails.
They're coming already.
No, but the point is, right.
This was my dream.
If you listen to the back catalog, I was always, always, always on about this production tablet
apps.
And I'm seeing you luxuriate with your Voltron out iPad Pro.
Did you see the random?
Did you look in the random thread today on our Slack?
Did you see what I'm doing?
Did you see what I'm doing?
I did see that.
I did see that.
It's amazing, dude.
For Batman.
You can't do that with a laptop, right?
No.
No, you can't.
It's getting to the point where literally it's the Surface RT dream come true.
All right.
So for the audience, I got myself a tripod mount for the iPad.
Now you're like, Chris, why do you have a tripod mount?
Well, so think about somebody who is obsessed with production standards, who has to join
a weekly or sometimes many weekly video conferences.
One of my burdens, one of the things that is wrong with me is that I am obsessed with
making sure that my camera shot looks awesome in those meetings.
I know I shouldn't, but I can't, I can't be on camera and have it look bad.
Like I can't do that.
Like, why am I like, I'll just turn my camera off, right?
So I got myself a tripod.
I got to stand for the iPad.
I already had a ring light.
So I've got a vanity light that turns on and I've, I've mounted the iPad in the middle
of this vanity light with a ring light around it.
So that way I am, I am the best looking person on those meetings.
It's not the iPad doing that for you, I'm just saying.
Hell.
But you can't, you can't, you can't mount your laptop like that or a desktop.
And I don't like running the Zoom app on Linux.
It's actually kind of nice that Zoom does make the Zoom meeting thing available for Linux.
I do appreciate that.
Thank you.
And I do use it, especially for like the quickies.
I love it.
But for like the meetings where I'm going to be in a solid meeting for an hour, I would
rather have my laptop available to get work done in the meeting.
And then I just use the tablet to run the native application.
And I put that thing up on a, on a, on a, on a stand.
And when I'm done, I pop it out and I, and I just put it back in its keyboard folio and
it's back to being a, you know, an email Slack, telegram machine.
You know, it's just, it's really versatile in a way that a desktop computer is not.
All right.
Are you, do you want me to do a couple?
Do you want, are you good?
You go, take it out, take it away.
Yeah, I'll do a couple.
So I'm going to do something that anybody that is a listener of the Cortex podcast,
I have it linked in the show notes, is maybe familiar with.
And I don't normally do this kind of thing, but I've decided to do in the spirit of Cortex,
a year of theme.
And I'm going to do for me personally, and only I could do this.
It's interesting.
The year of structure, 2019 is going to be the year of structure.
I, I, nobody else could really apply structure upon me.
You know, an employer and a significant other, they can't, I just reject it.
Don't, don't give me your rules.
Don't give me your playbook.
I define what the playbook is.
Right.
But this, this has been a different kind of transition for me.
2019 is going to be interesting because after my divorce about four years ago,
I just sort of embraced working my fucking ass off, just worked my ass off,
just really dedicated myself to working hard.
And I said, things like routine and structure and rules, those are for losers.
I'm going to focus on my work and things are going to flow from that.
And that's what I'm going to do.
And that's been good for a couple of years.
I, you know, I built up the business.
I got it to a point where I could sell it and, and then be choosy about how I sell it.
So not only was I selling it, but I sold it in a way where I could be choosy
and make sure that the genuine things that are important about this network don't die.
And for the most part, it's been a net positive.
You know, editorially, they stay out.
You've never been, I mean, I'm not to speak for you, Mike,
but you've never been contacted by anybody at Linux Academy saying what you can or cannot say.
I've never had a conversation with you saying what you can or cannot say.
And, you know, so I wanted to make sure that it was a good sale too.
And I had to get the business in a spot where it was enticing.
So I had a bargaining chip there to make it sustainable.
It wasn't like a big plan of mine.
I didn't have some big plan for years.
It's just how it worked out.
But that's because I really just focused hardcore on the company.
But I paid for that personally.
I think some of the, some of the issues I had recently were a result of that.
But I thought structure and rules were for people who had day jobs, you know, day jobs.
Not for us self-employed people.
We make our own rules.
Not for us wildcatters.
No, we're rogues.
We make our own rules.
We're rogues on the King's Highway.
That's right.
That's right.
Go as fast as I want.
Nobody's going to give me a ticket.
Turns out that was a bunch of horseshit, but I'll get to that.
And in a way, it's not my fault.
It's all completely my lady's fault.
Thank you so much for making me do this.
No, not really.
It's sort of been one of these things where I felt like after a couple of years I needed to up my game.
And the only way I could up my game is by creating some routines and some structure that I follow.
And structure is, and routines are interesting.
And I'll give you an example.
If I told you, and this is actually true.
If I told you that every morning for the last month I've gone to the gym every weekday at 6 a.m.
Shocking.
Actually, I've gone at 5 a.m.
I haven't gone at 6 a.m.
I've gone at 5 a.m. every day.
And I've been restricting my eating window from about 10 a.m. to about 4 p.m.
And if it's outside of that, I don't eat.
Wow.
How's that working for you?
Pretty great.
And you're impressed by that.
Because what I am signaling to you is that I am a dependable person who outside of work has my shit together personally.
And I'm going to these things.
And I'm doing these things.
And I'm not trying to brag.
I'm just saying there is actual value in signaling that to the people around me.
So I'm officially now the leader of a team of people around me.
And I expect them to do better than they've ever done before.
But if I expect them to do better than I've ever done before, well then I sure as hell need to start doing better than I've ever done before.
Because actions speak louder than words.
So when I wake up at 4.45 a.m. and I fucking don't feel like going to the gym, I remind myself that it's more than just my health.
I am sending a message to the people around me about consistency.
About being a fucking adult.
About being responsible about the shit that I'm trying to do and getting it done.
And if I commit to it, I'm going to do it.
Because that's what adults do.
That's what professionals do.
And that's what this whole year is about.
And I said earlier, I was blaming my lady.
But what kind of came up is she is shutting down her clinic.
And she's going to more of like a mobile setup where she's going to go to people.
And she's going to set up group sessions at retirement homes or community centers or hospitals and treat people there instead of having a clinic where they come to.
And she's been struggling with, well, how do I know when to get up in the morning?
How do I know, you know, what my schedule is?
How do I keep myself accountable without any structure?
And that's really what sort of made me think about this in a way where when I got divorced a few years ago, I rejected anybody that tried to apply rules to me or structure because, you know, screw them.
I'm my own boss.
But now I see the value in it.
I see the value in routine.
I see the value in structure.
And I'm choosing to implement it upon myself.
Like I'm going to I'm going to I'm going to adopt a regime of structure over 2019 and I'm going to make myself try it for a year because the first month sucks.
The second month sucks.
The third month sucks.
In fact, and I was talking to Carl about this at System 76 because I've been thinking about this for a while.
So when I was visiting Carl, I I said to him, I said, Carl, you are as long as I've known you, which has been about 13 years, you have been in great shape.
Carl looks ripped in a shirt like seriously, even even somebody who's killing himself to, like, keep that company going and transition it to a production company.
He looks great. He looks great. Yeah.
And so I said, Carl, what do you do? And he said, here's the thing, Chris.
It takes nine months of going to the gym every day before you like it.
You've just got to do it.
And that is my my thinking for 2019 is the first nine months are going to be like eating the shit sandwich.
I'm just not going to like it because I I like to think of myself as a free spirit, as a creative individual who sets his own schedule.
I'm a I'm my own man. Right.
But now my own man is going to apply rules upon himself that he has to follow that is going to affect everybody I live with.
It's going to affect my lady. It's going to affect my kids. It's going to affect me.
Like rules are lying are laying in over twenty nineteen.
My kids are with me for this week and my I feel bad for them because they show up.
And the first thing is, is here's dad's three new rules for this week.
Not the only three rules, which would have been the way it was before.
Right. It would have been here's the three rules.
Now it's here's three new rules and you will all be following them this week.
And I'm I'm still waking up. I'm you know, I'm still getting up early every single morning.
It's the holidays or not. It doesn't matter. It is a year of structure.
I'm going to spend one year living a year of structure in an attempt to up my game, to be more of a professional,
to to be a professional in a way that extends beyond just podcasting, that extends beyond my time on the microphone and my time editing and publishing,
but extends into when I wake up in the morning, it extends into what I eat, how I drive.
You know, I love to speed. I love to go fast. I really love to go fast.
Like I go on road trips where I can go fast on purpose because that area is legally allowed to go fast.
And so I have to constantly reign myself in when I'm in Washington because Seattle has the worst traffic in the world.
And so, like, you know what? Be a fucking professional.
Get your shit together. Be a man. Be an adult. You know, it is it is so funny.
I have recently. So I bought myself a road road bike for not a motorized.
Hey, good for you. And I have been going just about every day. Really? Obviously, Christmas Day.
I couldn't go. But yeah. Yeah. I didn't go to the gym Christmas Day either. I have been right.
Well, of course, things like that, you don't do it right. I have been doing that.
I have been cutting out fried food as much as possible. You know, less booze.
Right. Feel better. Get more work done.
And I think, yeah, I think I'm going to join you in this. Actually, I will do the nine month challenge.
It is you got to do it for nine months, right? Like three months isn't enough.
Yeah. Are you feeling results already, though?
So. This has been probably the most positive thing about it is and I've intentionally not talked about it much,
but I am tracking it on several different fronts.
And probably the number one metric I am noticing is my mood is much better in the mornings.
Just like my outlook on things. What would normally be like a catastrophe is yet another challenge in which I realize I can get something out of it.
I don't know the best way to phrase it, but I go from being somebody who is dreading the next problem to somebody who is taking all of the problems I'm facing,
combining them together and coming up with a great solution. And it's it's like a it's a higher energy.
It's like a I don't know, like I come into work at six a.m. and I'm just like, I'm good to go.
Like I'm I'm a super positive person and I feel really good. And it's not it's not massive.
But like I was talking about at the beginning of the show, I have a really, really significant sleep problem.
I I get about 30 minutes on average of sleep per night. Which is pretty bad.
And it's not a joke. I'm not like it's not things that keep me up at night.
It's a it's a it's a significant life impacting problem that makes me tired.
It makes me grumpy. It makes me feel like everything is a challenge. It's awful.
30 minutes of deep sleep a night. The last time I remember having a dream as an example, I don't know.
I mean, a lot of people dream. I don't. The last time I remember having a dream was when I was in the hospital after my surgery
and I was propped up and I could and they had a breathing thing on me and I was being supplied air.
That was the last time I dreamt. And that was September 11th.
That's the last time I had a dream. It's not good. It's not good.
And so the last couple of months as I've been ramping this up, it started before Thanksgiving, really.
I have seen significant improvements in my sleep and then now and it's not great still.
But now I'm getting two hours of deep, genuine REM sleep per night. Two hours from 30 minutes is a significant improvement.
And I feel like a new person. I feel like I have more energy. I feel like I'm willing to tackle more challenges.
I feel like so many things. And so I've been willing to go to the gym, for example, because I'm not so damn tired that I can barely function.
Two hours of sleep, man, after a couple of years of 30 minutes, I'm feeling really great.
I'm going to the gym. I'm fasting or intermittently fasting. I'm showing up at work and I'm feeling great.
And I'm getting a ton of stuff done before the day even starts. I'm ahead of everybody who I work with on the different time zones.
It's pretty good. And all of that has been trackable with different applications.
And I don't think this is worth just shrugging off, like tracking, being able to see on a chart my sleep improve and my exercise improve and my heart rate improve.
Because I wear this watch 24-7. Well, 22-7 because it charges. But you know what I mean?
Like it's it gets my daytime heart rate. It gets my sleeping heart rate. It gets my heart rate when I'm swimming.
It gets my heart rate when I'm on the treadmill. It gets my heart rate when I'm having sex.
Like it constantly is tracking my heart and I'm able to see the difference of my heart rate when I'm sleeping versus when I wake up versus the middle of my day.
And I'm seeing my heart rate drop. I'm going from like a resting heart rate of 100 beats per minute to a resting heart rate of 90 beats per minute.
And that's it's a small adjustment, but it's a big one. Right. And in fact, right now it's even better.
Like my average has gotten down to 70 for the last week. I see a physical improvement in how hard my heart is beating.
And I'm getting more sleep. So I do see a positive feedback loop as I go through this.
I see a positive feedback cycle that encourages me to keep doing this.
So has your stability in your night of sleep, for lack of a better term, improved?
It's still hit and miss. Like last night was rough. I was up a lot last night. I was up at 11 p.m.
I was up at 1 p.m. I was up at 4 p.m. and I was up at 5 a.m. 4 a.m. 5 a.m. and 6 a.m.
It's still not every night's great. Not every night's great. But it has, on average, gotten significantly better. Significantly better.
And I'm trying to get a better sleep hygiene in general. So that way I go to bed around. I try to go to bed around 9 p.m. every night.
I don't always successfully do it. But what's crazy is, you know, you always hear people talk about like reducing screen time and blue light, which always sounds like hocus pocus.
But it sounds like black magic to me. Yeah, it does, doesn't it? On the nights that we don't watch Star Trek, I sleep better.
And Star Trek is one of those things that's like soothing to my soul. When I'm sick, I watch Star Trek. Like that's it's like it's mom's home cooking for me.
And even still, on the nights that we don't watch Star Trek, I sleep better. And what I mean by sleep better is I actually start registering some level of sleep around 10 p.m.
And if I watch television, I don't start registering any kind of level of deep sleep until 1 a.m.
And I have we've thankfully, my lady Hadia is super willing to work with me on this because she wants me to sleep more, too.
And so she's been willing to like, let's do TV nights and non TV nights and we'll do some testing. And when we see results, we're like, well, let's test it again.
And then we see the results like, OK, well, let's test it again. And I'm you know, I'm kind of taking it.
I'm kind of taking advantage of the fact that she's willing to work with me on this because she sees it as a big improvement, too.
She's seen the results. I'm a different man. I know you've changed. It's like you've found sleep, Jesus.
Can we use that as a title or would that offend everyone? I don't know.
I don't know. I think it's worth a shot. I just want to throw it out there of all the crazy titles we've done.
I feel like this may in fact be the best one. Yeah. Yeah, I know.
So architect, we've lost a few people in the chat room. I'm I've gone away. Yeah. People don't understand why dreams and REM sleep and deep sleep like that.
They don't know how it all connects together because this is stuff that I've I've been reading.
So you have the problem, right? That's the. Yeah. Yeah.
This is stuff that I've gotten like really passionate about and been reading about and researching about for like a year or more now.
And people listening to this cold have no idea what I'm talking about. But maybe we can bring it back.
Maybe we can bring it back to Coder Radio a little bit like, you know, like there's an obvious tie.
Right. So, I mean, there have been tons of papers written out about complex, you know, thinking and logic, i.e.
software development, the negative effects of sleep deprivation on that.
And I get all you people in college, people are still like, you know, 22 are going to say, no, I can do it.
You can do it. Then you I'm going to say a decade later, it's going to get harder.
You're going to notice that. I mean, I just had a three a.m. night last week.
Right. I used to do those three times a week. No problem. Bounce.
I was like death all day the following day.
I mean, I couldn't think clearly. I was just and I wasn't you know, it wasn't like a hangover situation.
It was a I was literally up at three. I'm doing some droplet management.
It's just it's not the right way to do things.
Mike, party. Yeah, I don't party alone. I party with droplets.
That's how I party, man. We all party. I hope so. Otherwise, I am messed up.
Architect is clarifying his opinion, by the way, in the chat room.
He says, I'm not saying that just because you don't remember your dreams, you're not sleeping.
I'm just saying. So is that clear? Fair enough. Yeah. OK, fair enough.
Well, what about Rust? You're going to learn Rust in 2019?
You know, I'm going to devote exactly zero time to learning Rust.
OK, that will surely just make everyone listening happy.
And no one listening will be upset by that statement.
No, not at all. And I think we know what the YouTube comments are going to be like now.
Well, Mr. Dominic, what else? What else? Anything else?
These aren't predictions. These are personal goals for 2019.
I got the year of structure. You've got. So hopefully I hopefully I feel for you, man.
I hope that this is going to be the year of testing for you. Year of testing.
You're going to nail it. You're going to, you know.
I think that's probably my going to be the hardest transition for me.
And I'm wondering if it's not going to be a come to Jesus moment.
I just. Yeah. Yeah. It's got to be like somebody is really, really, really upset.
And you have to sit there and go, what could we have possibly done to avoid this situation?
Right. I mean, that's kind of what you want to avoid.
That's what happened to me with the whole ruptured appendix is not that I had an appendix appendix issue,
is that I tried to work through it for three weeks until it became a deadly issue.
Right. Like, how far do you push something? It's true.
How far are you willing to go before your. Yeah. Yeah.
And the reality is, the sooner you call it, generally the better off you are.
Like the more you've limited the damage.
For me, like it took till I lost the functionality of my right leg before I went to the hospital.
Like looking back at it, I feel like I was in some sort of weird fugue state.
I can't believe it. I can't believe it. Like I was sleeping hours and hours a day.
There were some days where I slept the entire day and all night.
And it took until I lost the ability to move my right leg because the bacteria that my appendix was leaking
rotted away my muscles. Don't let that happen to you.
I would like for that not to happen. Yeah, you got to call it.
You got to call it. You got to be just aware of that kind of stuff.
And I don't know, that's always kind of the game is walking that line.
You want to walk it as far as you can, but you don't want to go so far that you can't repair the damage.
Now, that's a good point. Well, Mr. Dominic, where should we send people?
Where do you want them to go? Apparently the sleep clinic.
No, go to actingmanuco on Twitter.
I would say that. That's what I was going to say.
You could check out at Chris LAS, the networks at Jupiter Signal, and the shows at Coder Radio Show.
We also have the subreddit, coderradio.reddit.com. Checked it this morning.
And we've got the contact page. That's how Nicholas got a hold of us.
Just go to coder.show.com. I was going to say, you could choose Coder Radio from the drop down
at jupitabroadcasting.com. But that's old school. We're working on a new version of the site.
That's my prediction for 2019 is a new jupitabroadcasting.com. How about that?
In the meantime, coder.show slash contact and coder.show slash 338 for the links on this week's episode.
Thanks for joining us. See you back here next week.
