WEBVTT

00:00.000 --> 00:07.000
This is Koto Radio, episode 313 for June 14th, 2018.

00:31.000 --> 00:34.880
Welcome to Koto Radio, Jupiter Broadcasting's weekly talk show, taking a pragmatic look

00:34.880 --> 00:40.640
at the art and business of software development and its related technologies. This episode

00:40.640 --> 00:45.440
is brought to you by our two fine sponsors, Digital Ocean and Linux Academy. I'll tell

00:45.440 --> 00:50.600
you more about those sponsors as this show goes on, but our host, our host is established

00:50.600 --> 00:57.600
in the stormy bayous of Florida. It's Mr. Dominic. Hello, Mike.

00:57.600 --> 01:02.300
Greetings from Thor's apartment. Yeah, it really is the hammer of thunder

01:02.300 --> 01:06.040
over there. You might hear a little bit in the background from time to time. Apparently,

01:06.040 --> 01:10.040
it's the apocalypse in Florida. Are you going to be okay? Are you going to survive this?

01:10.040 --> 01:14.560
If I don't, I'll get eaten by alligators, so it's very green, very ecologically efficient.

01:14.560 --> 01:19.180
Yeah, it is the circle of life. Well, Mr. Dominic, we have a great show, so we're going

01:19.180 --> 01:23.080
to get to our traditional follow-up and feedback, and then later on in the show, the CEO of

01:23.080 --> 01:28.320
GitLab is going to join us. Sid Brande will come on and he'll talk about GitLab and what

01:28.320 --> 01:31.240
they're doing and some new things that are in the work. I think it's going to be a fascinating

01:31.240 --> 01:35.800
chat in light of recent news, but before we go, there's some things that I have to give

01:35.800 --> 01:40.440
Mike a hard time about. Some traditional follow-up here on the show, and probably to keep things

01:40.440 --> 01:47.760
continuous, continuity, I suppose, we should start with a follow-up on last week's episode

01:47.760 --> 01:54.840
where Mr. Dominic had a strong reaction to Apple's WWDC, but you had a chance to sit

01:54.840 --> 01:58.760
down, read some of the docs, and burn everything to the ground.

01:58.760 --> 02:04.560
Yeah, I still think the videos are terrible. I just want to put that front and center,

02:04.560 --> 02:08.080
but what I was impressed with when I actually got to look at some of the session videos

02:08.080 --> 02:17.800
and the docs really was ARKit 2, and I don't know if I'm impressed with Metal. I find it

02:17.800 --> 02:22.960
intriguing that they're deprecating OpenGL in favor of Metal. Did you catch that little

02:22.960 --> 02:23.960
bit there?

02:23.960 --> 02:27.440
Oh yeah, I did. Oh yeah, I caught that. I definitely caught that. Yeah, I'm really torn

02:27.440 --> 02:31.520
on that because Metal does seem like it lets people, developers, accomplish some really

02:31.520 --> 02:36.400
great stuff, but at the cost of industry standardization.

02:36.400 --> 02:41.800
Right, which is weird because they're really doing all they can to make Swift not an Apple

02:41.800 --> 02:47.720
language, right? It's an open source standard, but on the graphics side, Metal is completely

02:47.720 --> 02:48.720
proprietary.

02:48.720 --> 02:53.760
Yeah. OpenGL never has been great on the Mac platform.

02:53.760 --> 02:57.600
Is that Apple's fault, or? Yes, it is actually. Never mind.

02:57.600 --> 03:06.240
I think so. It's hard to say, but yeah. So, Metal aside, ARKit, yeah, I think actually

03:06.240 --> 03:10.080
the Mac got some of the best stuff in this last round. There's no good Mac hardware,

03:10.080 --> 03:11.080
but that's a separate issue.

03:11.080 --> 03:16.360
That's a separate issue. I mean, I actually updated my MacBook Pro to Mojave, which you

03:16.360 --> 03:17.360
have to say with the little...

03:17.360 --> 03:20.040
Oh, you did? Really? You really rolled the dice, huh?

03:20.040 --> 03:26.760
I rolled the dice. Dark mode looks terrible on apps that aren't ready for it, shocker,

03:26.760 --> 03:31.800
but the updates to Xcode are really, really nice, particularly if you are in any way an

03:31.800 --> 03:38.720
Xcode user. Check out the session video for LLDB and new debugging tools. There's a lot

03:38.720 --> 03:46.040
of just cool stuff added to Xcode. Now, if you've ever used a JetBrains IDE or Visual

03:46.040 --> 03:51.640
Studio proper, you'll be like, okay, so this is features that they should have had years

03:51.640 --> 03:58.440
ago, but the fact that they have them now is really good. In particular, just the command

03:58.440 --> 04:11.240
line interface on the console in Xcode is just awesome. It's really catching up. I understand

04:11.240 --> 04:17.280
from the technical session what they're doing with the whole machine learning and kind of

04:17.280 --> 04:21.200
the machine learning. Remember we talked about the machine learning on the iMac Pro potentially

04:21.200 --> 04:25.560
using Swift to train your models. I now get what they mean that for. You are not going

04:25.560 --> 04:31.520
to build a giant backend service that's like an AI assistant. What you might build though

04:31.520 --> 04:39.560
is like a little help, like a help function or some other kind of tangential or additional

04:39.560 --> 04:44.920
functionality into an app on an Apple platform. If that's all you're doing, if machine learning

04:44.920 --> 04:48.400
and AI, and I'm starting to hate the term machine learning because apparently everything

04:48.400 --> 04:54.440
is machine learning now, this is a not so painful path, except for the big thing that

04:54.440 --> 05:01.960
I know Chris is going to jump all over. The hardware is just, you would not do this, right?

05:01.960 --> 05:08.000
You would not generally want to train machine learning models on any of the common Mac hardware

05:08.000 --> 05:11.160
today. I mean, maybe an iMac Pro, sure.

05:11.160 --> 05:15.440
And you wouldn't really expect the story to be, we'll use an eGPU. Oh, and yeah, we'll

05:15.440 --> 05:20.160
get Nvidia. We'll get Nvidia working in there, but for now just use an eGPU. That's not really

05:20.160 --> 05:24.800
the answer. And the answer also can't be buy an iMac Pro. And the thing is the iMac Pro

05:24.800 --> 05:33.560
is now damn near 200 days old. So even their newest machine is old. That is not competitive.

05:33.560 --> 05:37.320
And so they want to get into this VR, AR, they want to get into machine learning. They

05:37.320 --> 05:41.320
want people to look at Mac OS Mojave as a professional workstation. They got to close

05:41.320 --> 05:45.480
the gap on the hardware. They got to fix the MacBook keyboard and they got to get newer

05:45.480 --> 05:49.720
cost-effective machines out that developers can start to experiment with. They almost

05:49.720 --> 05:52.640
have to go back a little bit to their roots when they were trying to convince developers

05:52.640 --> 05:55.040
to come over to the Mac again.

05:55.040 --> 05:59.440
And so the reason why I thought WWDC was decent is because I could see the groundwork. I could

05:59.440 --> 06:03.640
see the software groundwork being laid. I don't see any hardware suggestions or hints,

06:03.640 --> 06:08.440
but that's not necessarily indicative of anything. But that's why I thought it doesn't really

06:08.440 --> 06:13.520
impact my day-to-day life. Not going to change how I do work, but if I use the Mac platform

06:13.520 --> 06:21.360
and iOS to an extent, because their automation stuff with their workflow version of shortcuts

06:21.360 --> 06:27.120
I think is powerful. So if I followed that platform closely or was looking forward to

06:27.120 --> 06:31.960
improvements to that platform, I would consider I got something, at least a value out of WWDC.

06:31.960 --> 06:37.640
If they don't answer it though with the hardware component soon, it's still half the story.

06:37.640 --> 06:42.520
Yeah, I would even add too that if you're not like a graphics development person, which

06:42.520 --> 06:48.720
I am not though I'm having to learn more Metal than I would like, Metal is actually kind

06:48.720 --> 06:53.840
of the unsung hero of this WWDC, I think, when you look at the technical docs. For instance,

06:53.840 --> 07:00.040
core animation, which is, if you don't know, it's a high-level framework. Basically a common

07:00.040 --> 07:05.500
pattern let's say would be, you know, animation with duration, blah blah blah, here's a C

07:05.500 --> 07:10.120
block with your animation. That's obviously the Objective-C syntax. What would happen

07:10.120 --> 07:15.240
in the past is that would be a core animation call, which would call into the core animation

07:15.240 --> 07:20.520
API, which in turn would actually call into OpenGL for you. So you needed no knowledge

07:20.520 --> 07:24.080
of OpenGL, right? Just like Grand Central Dispatch.

07:24.080 --> 07:26.240
Don't worry about that. Don't worry about that.

07:26.240 --> 07:32.040
Right. It's an abstraction, right? Just like Grand Central Dispatch is and was an abstraction

07:32.040 --> 07:37.640
over threading, core animation is now not calling into OpenGL, is my understanding.

07:37.640 --> 07:41.720
It's calling directly into Metal, which does seem to have some significant performance

07:41.720 --> 07:50.080
increases. I think going forward, particularly if you're looking at AR solutions, the investment

07:50.080 --> 07:56.720
of learning Metal, which is a pretty, I've been doing some research into it, thick and

07:56.720 --> 08:02.840
juicy piece of API, is probably going to pay off big time. And of course there was a little

08:02.840 --> 08:04.840
carrot for me that I didn't know about it.

08:04.840 --> 08:06.880
Oh, what was it?

08:06.880 --> 08:10.040
This to God's one true programming language.

08:10.040 --> 08:12.720
Oh, really? Objective-C got some-

08:12.720 --> 08:16.240
Objective-C has quietly been getting improvements. I love it.

08:16.240 --> 08:19.920
Really? That's good. You know what? That must be because there's still some diehards in

08:19.920 --> 08:21.840
Apple that are using it, right?

08:21.840 --> 08:26.040
There's got to be one guy like me saying, I don't care. What's that Swift for? Get it

08:26.040 --> 08:27.040
out of here.

08:27.040 --> 08:31.200
I love it. You know what? Maybe it was a birthday present to you because rumor has it you and

08:31.200 --> 08:34.400
Donald Trump share similar birthday weeks. So happy birthday, Mr. Trump.

08:34.400 --> 08:35.400
Yeah, mine was yesterday.

08:35.400 --> 08:40.920
Yeah, and Trump's is today. So you and Donald get together, have a little birthday party

08:40.920 --> 08:45.880
this weekend and Apple gave you a gift and that was some modest improvement at Objective-C.

08:45.880 --> 08:48.520
What was it in particular?

08:48.520 --> 08:52.720
It's just some basically better interop with Swift, a few more. They've been getting it

08:52.720 --> 08:57.200
the whole time, but yeah, I know. A lot of it has to do with interoping with Swift and

08:57.200 --> 09:02.280
being able to not be completely foreign. I mean, the reality of the situation is if you're

09:02.280 --> 09:06.480
starting a new iOS app, you probably should just do it in Swift. Although there was a

09:06.480 --> 09:10.520
great post I read and I completely agree and we should have put it in the show notes, but

09:10.520 --> 09:15.040
I forgot where Objective-C is the one true programming language. And my favorite part

09:15.040 --> 09:19.880
compared to Swift is that I didn't have to write this post. So see, I'm not the only

09:19.880 --> 09:20.880
one.

09:20.880 --> 09:24.520
Yeah. Speaking of people that are writing posts for us, just kind of gingerly related

09:24.520 --> 09:29.020
to what we were just talking about. Rogue, Amoeba, long time, really high quality Apple

09:29.020 --> 09:35.200
software developers that have made third party apps for the Mac for ages have released a

09:35.200 --> 09:40.280
post today called On the Sad State of Macintosh Hardware. And they basically lay it out there

09:40.280 --> 09:45.320
that it's devastating to them that there is so much Mac hardware that's out of date that

09:45.320 --> 09:50.480
they're seriously concerned as a Mac software shop. And if you look at the Mac Rumors Buying

09:50.480 --> 09:55.760
Guide, every machine is essentially a don't buy with the exception of the iMac Pro, which

09:55.760 --> 09:57.360
is marked as a neutral.

09:57.360 --> 09:58.360
And just for-

09:58.360 --> 10:01.040
It's a 5,000 plus dollar neutral.

10:01.040 --> 10:10.480
Yeah. Yeah. And just for note, the Mac Mini today, 1,337 days old. That's how long ago

10:10.480 --> 10:16.160
it was updated. The Mac Pro has been more than a year, 436 days. MacBook Pro, also more

10:16.160 --> 10:24.440
than a year, 374 days. The MacBook Pro hasn't been updated for 374 days. And they say it's

10:24.440 --> 10:28.800
very difficult to recommend the current crop of Macs to customers. And that's deeply worrisome

10:28.800 --> 10:33.360
to us as a Mac based software company. For our internal needs, we've wound up purchasing

10:33.360 --> 10:39.060
and used, we've wound up purchasing and used hardware for testing rather than optimizing

10:39.060 --> 10:45.360
to compromise heavily on a new machine. This isn't good for Apple, nor is it what we want.

10:45.360 --> 10:50.000
So I thought we should just mention that in the light of WWDC, there's still huge problems

10:50.000 --> 10:54.540
and now it's the hardware stuff. And so that's the reality of that. And it's not just us

10:54.540 --> 10:55.960
that's bitching about it. It's other people-

10:55.960 --> 11:01.680
No, it really isn't. I mean, I was actually pretty surprised that they didn't, at least

11:01.680 --> 11:10.480
like spec bump, at least the iMac Pro, thinking this is your one really viable contender to

11:10.480 --> 11:17.200
say like the high end Dells and basically everybody else, right? HP has high end machines,

11:17.200 --> 11:23.880
Dell has high end machines, but they didn't do it, like nothing. So it seems-

11:23.880 --> 11:27.520
I was recently just shopping here because Linux Academy is putting it in an OBS system

11:27.520 --> 11:32.360
and it's like, well, what do we use? What is the go to high end PC that's guaranteed

11:32.360 --> 11:37.480
to work with Linux? And I run through all the usual suspects and there's different compromises

11:37.480 --> 11:42.840
with each set. And we've reached a point now where the Mac isn't even a consideration.

11:42.840 --> 11:47.840
Yeah. I mean, we're doing the show right now 100% on Linux, right? I'm on POP and you're

11:47.840 --> 11:48.840
on-

11:48.840 --> 11:49.840
Yeah.

11:49.840 --> 11:50.840
What do you want still, KDE?

11:50.840 --> 11:51.840
Kubuntu 1804, all the way, baby.

11:51.840 --> 11:52.840
Yeah.

11:52.840 --> 11:57.600
Rocking it on all the machines, all the machines we're routing through audio, all on Kubuntu

11:57.600 --> 12:04.840
end to end. So yeah, that is speaking of remote, I am remote this week. I'm in Texas. I think

12:04.840 --> 12:12.120
I mentioned I'm at Linux Academy. I'm just outside of the Fort Worth area. And I have

12:12.120 --> 12:17.800
been exposed now pretty heavily this week to a company that believes pretty deeply in

12:17.800 --> 12:23.000
remote work. I'd say about half their staff, maybe more, maybe as much as 60%, 70% of their

12:23.000 --> 12:28.600
staff are remote at Linux Academy. And they've, for competitive reasons and all kinds of reasons,

12:28.600 --> 12:32.000
including some people just work better that way. You and I have gone back on this, back

12:32.000 --> 12:37.040
and forth on this because I've been working remote now since May 27th. I have been on

12:37.040 --> 12:43.760
the road since May 27th doing all of the shows and doing all running the business remotely.

12:43.760 --> 12:48.000
And then coming here to Linux Academy, this is my last stop before I start the long haul

12:48.000 --> 12:53.760
home. And it's really given me perspective on this remote work thing. And so if it didn't

12:53.760 --> 12:59.800
make me smile, I don't know what would, yesterday, Mr. Dominic tweets, at Chris LAS is going

12:59.800 --> 13:04.300
to have a lot of fun making fun of me on the next code of radio because I've already given

13:04.300 --> 13:12.920
up the onsite work thing. So Mr. Dominic, here we go. John Kerry of the remote work

13:12.920 --> 13:18.640
flip floppers, flipping and flopping on the remote work. And I want to know what happened

13:18.640 --> 13:22.040
because you were going all in. I mean, you had an office building you're going down with.

13:22.040 --> 13:26.560
You had people there on site. You had an air conditioning machine making ticking noises

13:26.560 --> 13:29.200
in the background. You were all in.

13:29.200 --> 13:35.680
And people were clear that that won't be too common anymore. It's funny because I flip

13:35.680 --> 13:39.960
flopped on this a few times and it's always for the same reasons, right? What occurred

13:39.960 --> 13:46.360
to me in this latest adventure is that limiting yourself to one physical location creates

13:46.360 --> 13:53.440
all kinds of weird logistical problems where being remote doesn't. And people really, especially

13:53.440 --> 13:58.640
developers, really don't do their best work chained to a desk nine to five every day.

13:58.640 --> 14:03.160
If that hasn't been an adjustment for me because I've been working at a desk setting up a machine

14:03.160 --> 14:07.920
and I hear a lot of different conversations around me and I have really lost my ability

14:07.920 --> 14:09.240
to tune that out.

14:09.240 --> 14:14.120
Right. And, you know, the problems I thought I was solving by going on on site are actually

14:14.120 --> 14:19.240
solved in a much perhaps more brutal way. Like if someone screws something up, you should

14:19.240 --> 14:27.880
just fire them like immediate where, you know, remote because remote requires and I think

14:27.880 --> 14:32.080
this is going to be something that some people are going to have a hard time with. It requires

14:32.080 --> 14:38.000
a level of kind of self accountability and self management that maybe some folks don't

14:38.000 --> 14:42.760
have. But the reality is someone who's like a bad dev is going to be a bad dev on site

14:42.760 --> 14:48.440
or off site, right? There's no, no difference. And, and, and maintaining the site is just

14:48.440 --> 14:54.680
expensive. Yes. Now it's one thing to have like a small space to have like an office

14:54.680 --> 15:00.360
if you need to meet a client or, you know, whatever, but to every time you hire someone,

15:00.360 --> 15:05.080
you need more desks, more, you know, obviously remote employees, you're still buying them

15:05.080 --> 15:14.480
computers generally, but it's just like the, the ongoing process of growing becomes incredibly

15:14.480 --> 15:24.040
costly with the space. And it, it doesn't seem, how can I put this?

15:24.040 --> 15:28.920
It's not money spent on the core product in a way. It's not money spent well and the advantages

15:28.920 --> 15:37.160
of having a centralized location, you know, I I'm in plant city, Florida right now, Tampa

15:37.160 --> 15:42.840
or Orlando, Florida would be different to have an office, but the cost would be at least

15:42.840 --> 15:47.000
double and that's just to be part of that community and whatever, but everything's more

15:47.000 --> 15:51.700
expensive, right? It's like before we were in New Jersey, an office in Manhattan may

15:51.700 --> 15:57.440
have been more beneficial, but like would have been like 10 times as much. Yeah. So

15:57.440 --> 16:05.480
when you're small, uh, I've come to the realization that your main strength is actually a flexibility

16:05.480 --> 16:12.480
and being tied down to one address is, is not flexible. It's not that go ahead.

16:12.480 --> 16:15.680
No, I follow it. Go finish it up. Cause I follow what you're saying. It's like the being

16:15.680 --> 16:19.680
a small, you have that dynamic flexibility. You can pivot, you can make drastic changes

16:19.680 --> 16:26.440
and make big decisions, but when you add the cost of real estate or rent or just a contract,

16:26.440 --> 16:28.520
it slows you down there.

16:28.520 --> 16:34.860
Exactly. And you know, I still see an advantage in having a small space, um, that you can

16:34.860 --> 16:38.680
meet a customer at, do an event at like we're actually a, I don't know if you know this

16:38.680 --> 16:43.960
first, I tweeted this too, but you only get me on the gotcha tweets. Uh, the mad botters

16:43.960 --> 16:49.280
now sponsoring the plant city software development meetup. So on the 21st after work, we're having

16:49.280 --> 16:54.160
people over and we're catering coffee and a couple of, uh, treats there and in our office,

16:54.160 --> 17:00.640
yeah, on the 21st, yeah. In our offices in plant city. So that should be, uh, yeah, the

17:00.640 --> 17:05.640
Thursday, if that's 21st, 22nd, I'm not sure, uh, that is one use for a space, right? It's,

17:05.640 --> 17:10.280
it's good to have, you know, if your team's still relatively local, you can have meetings.

17:10.280 --> 17:13.600
But the other reality is like, I don't know if you know this, the economy is really good

17:13.600 --> 17:18.340
right now and hiring people is like super hard. So saying you must work in plant city

17:18.340 --> 17:22.600
Florida is not super effective.

17:22.600 --> 17:29.440
Yeah. Okay. That's all fair. Um, what I've noticed that canonical and now Linux Academy

17:29.440 --> 17:35.560
seem to do is they do seem to drop some cash on like large meetup events or summits or

17:35.560 --> 17:40.560
sprints or whatever the companies happen to call them. And they, they bring people in

17:40.560 --> 17:46.280
and have them work together for, for intense periods of time. Um, and then they go back

17:46.280 --> 17:49.600
and go back and work remote and they seem to do that a few times a year. What are your

17:49.600 --> 17:53.560
thoughts on something like that? Is that, is that feasible in a, in a, in a smaller

17:53.560 --> 17:54.560
operation?

17:54.560 --> 18:01.280
Well, I think the smaller you are, the more budget constrained you are. Um, I could see

18:01.280 --> 18:06.900
a situation where you're renting like a shared office type of space or indeed doing what

18:06.900 --> 18:13.520
I'm doing. You are keeping a, a small physical office. Um, then yeah, I can see that making

18:13.520 --> 18:16.920
sense. You know, maybe once a quarter.

18:16.920 --> 18:21.120
You know, we should ask our guests about this. So why don't we bring on Sid Sabrande? He

18:21.120 --> 18:26.000
actually is a pretty, a pretty big advocate for remote work. And I'd be curious how they

18:26.000 --> 18:31.200
do that at GitLab. So we'll get there, but let's, let's get Sid. So without further ado,

18:31.200 --> 18:37.240
joining us on the line from GitLab co-founder and chief executive officer is Sid Sabrande.

18:37.240 --> 18:38.760
Sid, welcome to the show.

18:38.760 --> 18:40.680
Thanks for having me.

18:40.680 --> 18:44.880
How'd I do on that pronunciation of the last name? I just kind of took a shot at it.

18:44.880 --> 18:45.880
Good enough for me.

18:45.880 --> 18:51.800
Well, thank you for being generous. I appreciate that. So Sid, we absolutely wanted, we've

18:51.800 --> 18:55.860
actually been wanting to chat with you forever, uh, because Mike is a GitLab user as part

18:55.860 --> 19:00.280
of his day-to-day business, but also, obviously thanks for that.

19:00.280 --> 19:07.920
Thank you. Yeah. Yeah. It's actually, it's very popular with our audience. Um, and so

19:07.920 --> 19:11.680
with the big news from Microsoft recently, we thought this would just be a great opportunity

19:11.680 --> 19:17.120
to chat with you. Uh, and I, we were just talking about remote work and so I want to

19:17.120 --> 19:21.040
get to there in a moment, but maybe we should just kind of back up a little bit. So GitLab

19:21.040 --> 19:26.560
is famous for being an open core company. And I thought, I thought if I recall the first

19:26.560 --> 19:30.680
time I'd ever seen you talk about it, I thought I recall you talking about GitLab as an open

19:30.680 --> 19:35.520
source company. And then I noticed sort of a tone change to an open core company. So

19:35.520 --> 19:39.280
would you, would you kind of explain how the GitLab model works for us?

19:39.280 --> 19:45.720
Yeah, for sure. So GitLab started as an open source project by my co-founder Dimitri in

19:45.720 --> 19:53.120
2011. And we, uh, uh, we built a company around it and we tried to finance that company in

19:53.120 --> 20:01.640
different ways. Um, we tried, uh, donations, we tried consulting, we tried support contracts,

20:01.640 --> 20:07.040
um, but it all wasn't sustainable. And all the while that the popularity of the open

20:07.040 --> 20:12.480
source project was increasing. So there was more and more time going into release management,

20:12.480 --> 20:18.120
performance updates, uh, bug fixes, all these things that you have to do. So we needed a

20:18.120 --> 20:25.560
better model. So we settled on licensed software. We, uh, introduced GitLab enterprise edition,

20:25.560 --> 20:32.640
which is paid and, uh, proprietary. And so we changed from saying we were open source

20:32.640 --> 20:38.760
to open core. There's both an open source edition and a proprietary edition of GitLab.

20:38.760 --> 20:41.840
And that's what we, uh, that's what open core means.

20:41.840 --> 20:48.040
I see. Thank you. So the other off the wall question I had is, is it true, the rumors

20:48.040 --> 20:54.760
that, uh, before you started GitLab, the relational submarine company, is that a true thing?

20:54.760 --> 21:00.720
Yeah, it's a true thing. Uh, I was the first employee and, and, and incorporated a company

21:00.720 --> 21:04.200
that still makes the most submarines every year.

21:04.200 --> 21:09.720
No kidding. That is, that is the, that is the neatest little, like, I would love, I

21:09.720 --> 21:14.920
didn't even know a personal submarine was something I could have. So it's, um, if you

21:14.920 --> 21:21.400
want, you can have a trade over bowl, but it really is, is, uh, a bit expensive. It's

21:21.400 --> 21:27.440
about $2 million. And, uh, most people that own it have a, a large boat to, uh, store

21:27.440 --> 21:28.440
it on.

21:28.440 --> 21:33.040
Sure, sure. Boy, I saw there's things to aspire to is what you're telling me. I, I like that.

21:33.040 --> 21:36.960
So I, I guess, uh, also when I was digging through sort of your background, it looks

21:36.960 --> 21:41.600
like, uh, you have some, or you used to, you used to at least have some love for, uh, Ruby.

21:41.600 --> 21:45.000
Yeah, I used to be a Ruby on Rails developer.

21:45.000 --> 21:50.160
Now, uh, I won't hold, uh, hold that against you in any way as, uh, as the show goes on,

21:50.160 --> 21:53.960
but do you, I suppose these days, not much chance to do much Ruby?

21:53.960 --> 22:00.720
No, it's, uh, I went from programming code to maybe programming some processes in the

22:00.720 --> 22:04.760
company. I do commit regularly to our handbook.

22:04.760 --> 22:09.960
Okay. So, um, let's talk about the company for a little bit. So let's talk about GitLab.

22:09.960 --> 22:11.880
How big is GitLab now?

22:11.880 --> 22:15.400
It's 300, 300 people.

22:15.400 --> 22:19.880
Holy smokes. The last number I saw was somewhere in the hundreds. That's, that's amazing. So

22:19.880 --> 22:23.400
these last few weeks must have been, uh, pretty remarkable.

22:23.400 --> 22:31.080
Yeah, it was amazing. After, uh, GitHub got acquired, um, we saw a lot of love for GitLab,

22:31.080 --> 22:35.600
a lot of people migrating, but especially a lot of people giving GitLab an audit look

22:35.600 --> 22:39.960
and, uh, and really being amazed by where we've come since a few years ago.

22:39.960 --> 22:45.720
I think both Mike and I really liked, uh, the messaging approach that GitLab had around

22:45.720 --> 22:50.960
the GitHub purchase. You guys really seemed on top of it, like almost like you were waiting

22:50.960 --> 22:56.540
for this to happen. Like you had that stuff up your sleeve, ready to pull out. Can you,

22:56.540 --> 22:59.040
can you explain that a little bit to us?

22:59.040 --> 23:03.900
There were rumors in the week before that they might've been acquired. And so we, uh,

23:03.900 --> 23:09.840
we started preparing and, uh, I think, I think we did well in, in the preparations and over

23:09.840 --> 23:14.920
the weekend we saw people moving to GitLab and, uh, it was great to see that, that response.

23:14.920 --> 23:21.920
I'm looking at a tweet here from Zach Kaling, uh, who tweets, okay, I get it. GitLab's product

23:21.920 --> 23:27.000
leapfrog GitHub. I'm shocked how incredibly nice, thoughtful, and well designed it is.

23:27.000 --> 23:32.040
Fantastic building tools, incredible Kubernetes support, built-in CI-CD, security testing,

23:32.040 --> 23:37.160
project management, and support features. Moving to GitLab. That is really what we love

23:37.160 --> 23:42.560
to see. Not people moving because they're hating on Microsoft or GitHub, because I think

23:42.560 --> 23:47.640
Microsoft is going to do a good job being a maintainer of GitHub, but really moving

23:47.640 --> 23:51.480
because they, they like a single product for the whole DevOps cycle.

23:51.480 --> 23:52.480
Yeah.

23:52.480 --> 23:56.600
One thing that's very attractive, uh, for my company using GitLab is that we can host

23:56.600 --> 24:00.520
it ourselves. Do you, do you have any, do you see that as a competitive advantage for

24:00.520 --> 24:05.960
you or is that kind of a, an offshoot of the main product or do you see that as the main

24:05.960 --> 24:06.960
product?

24:06.960 --> 24:11.080
Yeah, no, we, we have two products or we have one product and two ways to consume it. Either

24:11.080 --> 24:15.120
you use our.com or you self-host it, but it's a, the self-hosting is a really important

24:15.120 --> 24:19.000
part. Not in the least because it, uh, it means you have that freedom. Even if you're

24:19.000 --> 24:23.320
using the.com, you'll always have an export button and you can move to your own hosted

24:23.320 --> 24:30.120
instance or, uh, GitLab host.com or somewhere else where you want to, uh, where you want

24:30.120 --> 24:31.120
to be.

24:31.120 --> 24:37.120
Yeah. Now, uh, back to the acquisition of Microsoft, when you heard that, uh, when the

24:37.120 --> 24:42.360
rumors first started circulating, were you concerned? It seems like it takes a, essentially

24:42.360 --> 24:46.320
a competitor and sort of supercharges them with Microsoft's bank account.

24:46.320 --> 24:52.240
Yeah. So they're going to have a bigger bank account. Um, and, um, I think for us, the

24:52.240 --> 24:58.560
hardest thing will be that they'll have Microsoft's Salesforce. Like Microsoft speaks to a lot

24:58.560 --> 25:04.280
of companies. Uh, they, they, they regularly deal at the C level in those companies and

25:04.280 --> 25:10.840
they can now like add this additional, uh, offering to that, to their, to their bundles.

25:10.840 --> 25:15.280
And then they're, they're famous for having a good bundling strategy. So that's going

25:15.280 --> 25:21.120
to be harder for us. What's going to be better for us is that, um, they're going to be focused

25:21.120 --> 25:27.160
on, on integrating with Microsoft and Azure and all those other things. And, uh, I think

25:27.160 --> 25:31.500
for us, uh, we're going to go full steam ahead and we'll keep releasing every single month

25:31.500 --> 25:36.600
and keep adding great features for the whole, uh, for that whole DevOps life cycle.

25:36.600 --> 25:40.320
Now a little birdie tells me, speaking of some of those features, that there's something

25:40.320 --> 25:44.960
called auto DevOps that's coming along. And I was wondering if you could share a little

25:44.960 --> 25:47.080
details about auto DevOps.

25:47.080 --> 25:55.480
Yeah. So we're really, really bullish on auto DevOps on a week from now, June 22nd, we'll

25:55.480 --> 26:01.280
release GitLab 11.0 and other DevOps will be generally available. And what you do is

26:01.280 --> 26:08.120
you just push your code and GitLab does the rest. It will build your code, run your tests,

26:08.120 --> 26:14.560
check the quality, do static application security testing, dependency scanning, license management,

26:14.560 --> 26:18.760
container scanning. It will boot up a review app, kind of like a staging environment, per

26:18.760 --> 26:24.640
merge request, dynamic application security testing and deploy it. It will do browser

26:24.640 --> 26:29.920
performance testing and it will do monitoring of all the vital metrics. So all of that,

26:29.920 --> 26:35.040
just by pushing your code, nothing to configure. We think that is the future and we're really

26:35.040 --> 26:37.800
excited about having it out to the world.

26:37.800 --> 26:40.560
Yeah. That's great timings. That's coming pretty soon.

26:40.560 --> 26:43.960
Yeah. Now in a week, the 22nd.

26:43.960 --> 26:49.160
Oh, very neat. Well, I look forward to hearing about it or seeing about it when it launches.

26:49.160 --> 26:54.280
So auto DevOps, I am, I'm not familiar. I, I, but it sounds like a, sounds like a fantastic

26:54.280 --> 26:56.880
addition and top of that, haven't you go ahead, Mike.

26:56.880 --> 27:00.880
No, I'm pretty deep into using the current continuous integration tools in the community

27:00.880 --> 27:07.080
edition of GitLab. Is there a break point between auto DevOps and the enterprise edition?

27:07.080 --> 27:10.120
Or is that just, everybody's getting that?

27:10.120 --> 27:15.040
Everybody's getting auto DevOps. The only thing is that the security features right

27:15.040 --> 27:20.240
now are ultimate edition. So they're not part of the community edition. I think all the

27:20.240 --> 27:26.480
other things, maybe except the license management is, is part of it. So you just push your code

27:26.480 --> 27:30.000
and you get your review app, you get the monitoring, everything.

27:30.000 --> 27:37.400
Can we talk about the additions for a moment? Because I noticed that you've recently made

27:37.400 --> 27:41.600
for open source projects and for schools, some of the high end plans are free now. So

27:41.600 --> 27:45.560
can you talk a little bit about the reasoning behind that and what the different plans are?

27:45.560 --> 27:47.960
Cause I'm, I'm a noob to this stuff.

27:47.960 --> 27:54.340
Yeah. So we have a lot of universities using GitLab already and we wanted to make sure

27:54.340 --> 28:00.400
that those, the students, they train with all of our features. So when they go out into

28:00.400 --> 28:05.040
the workplace, they tell their new employer, like, why aren't you using all these awesome

28:05.040 --> 28:09.280
GitLab features that are available that many people are not yet aware of.

28:09.280 --> 28:11.800
That's interesting. So it was a barrier for them.

28:11.800 --> 28:16.880
It was a barrier. Universities don't have big budgets or they're not like paying for

28:16.880 --> 28:22.560
software a lot. So we figured we just give this away. And also open source projects,

28:22.560 --> 28:27.560
some open source projects like Gnome and Debian, they insist on using open source. So they

28:27.560 --> 28:32.480
switched to GitLab and they're using core, but some open source projects are pragmatic

28:32.480 --> 28:39.160
about whether they run on proprietary software. And for them, we, we, we want to make it easy

28:39.160 --> 28:44.000
for them to also use all those security features. We're passionate about open source and we

28:44.000 --> 28:49.080
want to help them in any way we can. And there's different plans for, for GitLab. So there's

28:49.080 --> 28:54.520
a great core edition that's totally free, both if you download it or if you use private

28:54.520 --> 29:00.400
repos on GitLab.com. And we have three different tiers from starter, which is four bucks per

29:00.400 --> 29:05.880
user per month, all the way to ultimate, which is 99 bucks per user per month.

29:05.880 --> 29:11.600
So do you kind of see this as a type of contribution back to open source then?

29:11.600 --> 29:17.320
So ultimate for free, we see that as a bit of a contribution, but what we don't want

29:17.320 --> 29:23.320
to give is the impression that we think this is an alternative to having a really great

29:23.320 --> 29:27.940
open source edition. We understand that there's lots of open source projects that only want

29:27.940 --> 29:33.340
to be based on open source. I will keep listening to Gnome and Debian and all the other projects

29:33.340 --> 29:38.300
who are in the process of switching. We'll make sure that core will always be a great

29:38.300 --> 29:41.000
way to, to run an installation like that.

29:41.000 --> 29:46.400
Do you think that could be a market that starts to grow and maybe, maybe as a result in somewhat

29:46.400 --> 29:50.640
of this Microsoft purchase that, that core group of open source developers who maybe

29:50.640 --> 29:55.280
have fairly large projects, but they do have that, I guess, moral ground you might call

29:55.280 --> 29:58.720
where it has to be open source, but they need something that has enough features. It seems

29:58.720 --> 30:00.680
like there could be some contention there.

30:00.680 --> 30:04.680
I don't think it's going to be a problem. I think Microsoft has shown it's, it's an,

30:04.680 --> 30:09.400
it's a new company. They're not pulling the tricks of the past. So I don't, I think that

30:09.400 --> 30:16.280
companies and organizations are contemplating a move to GitHub will not be phased. Um, there

30:16.280 --> 30:20.680
are, however, a lot of big open source projects that say, we're not going to go to someone

30:20.680 --> 30:26.160
else's software as a service ever. We want to be in control. We want to run our own website.

30:26.160 --> 30:33.160
And examples are like Ruby and Apache foundation and Gnome and Debian. And some of those are

30:33.160 --> 30:37.840
now moving to GitLab. And we think if you want to self host a GitLab is the logical

30:37.840 --> 30:41.520
choice and we want to stimulate that as much as we can.

30:41.520 --> 30:48.280
Yeah. I was, uh, I was just a fantasizing about some news announcement one day, uh,

30:48.280 --> 30:52.360
where the Linux kernel moves off of GitHub to a self hosted GitLab instance. And I was

30:52.360 --> 30:57.600
trying to think of what would they need from a GitLab core to pull that off. And I wonder

30:57.600 --> 31:04.240
if everything is there yet and w would you be comfortable maybe contributing things to

31:04.240 --> 31:07.360
the open source version that haven't been there in the past to meet those needs. If

31:07.360 --> 31:11.640
it meant a significant maybe set of projects might come over.

31:11.640 --> 31:16.600
Yeah, we're open to that. I don't think the Linux kernel considers themselves hosted on

31:16.600 --> 31:21.560
GitHub at this moment. I think they're, they're hosted on self hosted Git and they're sending

31:21.560 --> 31:28.920
patches by email. Um, if they ever wanted to move to GitLab, um, we'd be very open to

31:28.920 --> 31:33.720
talking about open sourcing certain features. And with Gnome and Debian, it was the same.

31:33.720 --> 31:38.080
We open source certain features that they, uh, they, they thought were absolutely essential

31:38.080 --> 31:45.400
that, uh, that's, that's a great point. Uh, well put. Is it, um, go ahead. No, I was going

31:45.400 --> 31:48.160
to switch to remote work, but if you've got more, keep going.

31:48.160 --> 31:52.920
How common is it? Is it for someone to switch from the open source, uh, edition that I'm

31:52.920 --> 31:57.280
currently on to the, to the, I want to say proprietor, but to the paid edition.

31:57.280 --> 32:05.200
Yeah. So far about 6% of the people have done that. And we think, uh, six, six or 60, uh,

32:05.200 --> 32:12.600
zero six. So only, only five to 6% has actually switched to a paid edition. And we see it

32:12.600 --> 32:17.800
increases as the organizational size increases and as they adopt more of the different features

32:17.800 --> 32:24.880
of a GitLab. So Mike, probably you're not switching yet because you're, you might be

32:24.880 --> 32:29.720
a smaller organization. If you were using, yeah, if you were using the same amount of

32:29.720 --> 32:33.600
features that would like a thousand people, I think it would be a no brainer to switch

32:33.600 --> 32:35.480
to a paid edition.

32:35.480 --> 32:39.600
And does that process, uh, cause you know, we've done a few upgrades. We tested it out

32:39.600 --> 32:44.600
for a while. Is that process a pretty easy turnkey process? I'm thinking in particular

32:44.600 --> 32:48.960
because we have, I know a lot of our listeners are independent development shops, consultants

32:48.960 --> 32:55.360
that maybe have 30, 40 people and are thinking about maybe it's time to step up to the ultimate

32:55.360 --> 32:56.360
mission.

32:56.360 --> 33:04.640
Yeah. So, um, it is a very easy process. It's, uh, either you just install the new packages

33:04.640 --> 33:10.440
and you import a backup. Um, but if you've downloaded GitLab recently, you'll probably

33:10.440 --> 33:15.940
have enterprise edition by default with all the core features. Uh, but you have that installation

33:15.940 --> 33:19.680
and then it's really a question of just entering a license key and you're done.

33:19.680 --> 33:21.280
Oh, that's great. Okay.

33:21.280 --> 33:27.840
Yeah, that is great. I like that. Um, so Mike and I have had an on and off relationship

33:27.840 --> 33:32.920
with remote work. He and I both, uh, have small businesses and we have a handful of

33:32.920 --> 33:37.840
contractors and employees and we've, we've really tried to experiment with this remote

33:37.840 --> 33:41.560
work and we've had this ongoing multi-year conversation now with our audience about it

33:41.560 --> 33:46.400
who are also experimenting. And so when, uh, I was, uh, kind of doing some research on

33:46.400 --> 33:51.640
you before the show, I saw several different talks where, uh, you sort of were a proponent

33:51.640 --> 33:57.760
of remote work and you mentioned over 300 employees or a staff. How many of those roughly

33:57.760 --> 34:01.640
if you can share are remote and can you, can you, uh, share your thoughts on that?

34:01.640 --> 34:08.720
Yeah. So 100% of our team members are remote and we're now, uh, we have people in 40 countries.

34:08.720 --> 34:16.180
Wow. Wow. And, and, um, I'm curious, do you supplement the remote work with like get together

34:16.180 --> 34:21.320
events like summits or sprints where you bring people together and have teams working together

34:21.320 --> 34:24.180
for a bit and they go back home? How does that work?

34:24.180 --> 34:29.000
We do a summit every nine months and we try to go to a nice location. Last one was in

34:29.000 --> 34:35.440
Crete in Greece and the next one is in Cape Town, South Africa and it's for a week and

34:35.440 --> 34:39.320
we don't put you in a conference room for the entire week, but we try to go out and

34:39.320 --> 34:45.040
do things together. Um, right. Which legitimately is team building too. Yeah. We think that

34:45.040 --> 34:49.880
if we're going to all that effort and expense to get together, we shouldn't do things that

34:49.880 --> 34:54.280
we could do remote, like watching a presentation. We should do things that you can only do in

34:54.280 --> 35:02.000
person like visiting something together. Um, and it's all about getting to know, uh, your

35:02.000 --> 35:08.200
fellow team members and the members of the GitLab community. What's, but like every nine

35:08.200 --> 35:14.080
months is way too little. So what we also do is, is a lot of like structured social

35:14.080 --> 35:19.760
interaction. When you, when you spend one and a half hours every day, driving to work

35:19.760 --> 35:26.640
or going to work there at work, you have kind of unstructured social interaction just by

35:26.640 --> 35:31.720
virtue of people walking around, they'll talk to each other. We don't have that. So we facilitate

35:31.720 --> 35:36.120
that. We have different things. We have things called virtual coffee breaks. We just schedule

35:36.120 --> 35:40.440
time on someone's calendar. They understand the concept and you, you can talk about work,

35:40.440 --> 35:46.680
but you don't have to. It's kind of just chit chatting. What facilitates that conversation?

35:46.680 --> 35:52.880
It's Google calendar and zoom. Okay. And we ever, everyone that joins the company has

35:52.880 --> 35:58.040
to, has to start with 10 so that they get accustomed to it. We have a team call every

35:58.040 --> 36:03.080
day and it's a five minutes of announcements and then 25 minutes of people talking about

36:03.080 --> 36:08.760
their life outside of work. Sometimes it's about a certain subject. Today we had breakout

36:08.760 --> 36:14.400
rooms. Suddenly you're in a room with just a subset of the people. That's a great, great

36:14.400 --> 36:19.480
way to kind of get to know each other, get to know each other's hobbies. For people that

36:19.480 --> 36:24.920
have like GitLab people around them, we also like pay for them to organize a meetup. And

36:24.920 --> 36:28.680
if you want to go visit other GitLab team members, we, we pay for the travel that's

36:28.680 --> 36:29.680
involved.

36:29.680 --> 36:36.200
Really? Wow. So there is a bunch of interesting ideas in there that I'd never considered that.

36:36.200 --> 36:41.920
That daily call strikes me as almost borderline too much though. Like in terms of taking productivity,

36:41.920 --> 36:46.400
is that something that is debated a lot or have you found that that you just stick to

36:46.400 --> 36:47.400
it and it works?

36:47.400 --> 36:55.720
Yeah, I think you, you don't want to be too afraid of, of hurting productivity. People,

36:55.720 --> 37:00.440
what we always say is we don't monitor your hours, we monitor your results. And so we're

37:00.440 --> 37:04.560
not, we're not going to, we're not going to force you to be in that call. It's, it's optional.

37:04.560 --> 37:08.040
Like almost every meeting at GitLab, if you don't want to be there, you don't have to

37:08.040 --> 37:12.240
be there. And if it's not interesting to you, it's totally fine to go do something

37:12.240 --> 37:18.800
else while you're, while you're logged into a meeting.

37:18.800 --> 37:22.560
And that's a nice balance. I like that balance you've struck there. That makes, that makes

37:22.560 --> 37:26.400
a lot of sense. And then the other thing that I've, go ahead.

37:26.400 --> 37:30.040
Yeah. People new to GitLab sometimes say, I'm going out for lunch and everyone says,

37:30.040 --> 37:33.460
well, I have a great lunch, but you don't have to tell us. Like you're, you're the boss

37:33.460 --> 37:38.320
of your day. If you want to go to the gym during the day when it's quiet or to the supermarket,

37:38.320 --> 37:41.200
that's the freedom of remote work and you should embrace it.

37:41.200 --> 37:46.160
Boy, that really does sound appealing. So the other thing you said in there that is

37:46.160 --> 37:51.560
a new concept and it sounds expensive to me as a business owner, but I like it, is you'll

37:51.560 --> 37:56.160
pay for the travel if they want to go meet another team member. That, how does, how does

37:56.160 --> 37:59.760
that really, does that work well? Even people don't abuse that and that's, that's not a

37:59.760 --> 38:02.080
huge cost center.

38:02.080 --> 38:07.520
It's not. So we pay for like the, the plane ticket. We'll pay a few hundred dollars and

38:07.520 --> 38:12.840
then when they're there, they sometimes rely on the hospitality of the other team members

38:12.840 --> 38:18.400
or connection they have to, to actually stay there.

38:18.400 --> 38:24.000
That is, that really gives me something new to think about. And what about the onboarding

38:24.000 --> 38:29.080
process? You know, getting somebody acquainted with the culture, how you work, some of these

38:29.080 --> 38:33.240
ideas, it seems like the onboarding process maybe would be the time where you'd want people

38:33.240 --> 38:34.240
together.

38:34.240 --> 38:41.920
Yeah. So what's important is that you get to meet your, the other people that are also

38:41.920 --> 38:48.200
onboarding because kind of you feel connected to them. So we do a GitLab 101s, which are

38:48.200 --> 38:54.380
sessions where they ask questions to an executive. So it's not a presentation. It's just purely

38:54.380 --> 39:00.380
asking that executive questions. I do those and every C-level exec does those. It's also

39:00.380 --> 39:03.860
about getting to know the people in the company. So those, those virtual coffee breaks really

39:03.860 --> 39:08.320
help there. And then for the rest, we just want to make it as efficient as possible.

39:08.320 --> 39:13.440
So you get an onboarding issue and there's more than a hundred check boxes on that of

39:13.440 --> 39:17.560
all the things that have to happen. Most of it you have to do yourself, but also the work

39:17.560 --> 39:21.680
that other people have to do for you, adding you to systems that's visible so you can check

39:21.680 --> 39:26.720
whether it's still coming up or whether people have done that. And then we have a great handbook

39:26.720 --> 39:30.840
of over a thousand pages that describes all the different processes in the company. You

39:30.840 --> 39:34.880
don't have to read all of that, but everything that relates to your function, you're expected

39:34.880 --> 39:41.960
to read. So you can onboard without having to bother people with a lot of questions.

39:41.960 --> 39:45.840
Now you say great handbook. Now, didn't you earlier say that you work on the handbook?

39:45.840 --> 39:46.840
Yeah.

39:46.840 --> 39:48.840
You might be biased.

39:48.840 --> 39:53.740
I'm very biased towards the handbook because we've seen it work.

39:53.740 --> 39:59.280
That's a good idea. I like that idea. I'll admit I've never thought about creating a

39:59.280 --> 40:03.880
handbook, but I could really see the usefulness of it, especially if you're bringing on a

40:03.880 --> 40:05.480
lot of people pretty fast.

40:05.480 --> 40:10.600
Yeah. We're growing about TREACs year over year. So it's really important that we can

40:10.600 --> 40:15.160
onboard new people. And people always say, look, I onboarded. And what was amazing was

40:15.160 --> 40:18.820
every time I had a question, people were so nice. And then I always think, yeah, that's

40:18.820 --> 40:23.880
because you have 10 times less questions because most things are documented already. So when

40:23.880 --> 40:28.040
there's few questions, it's easier to be receptive to them.

40:28.040 --> 40:35.240
That makes a lot of sense. And as somebody who is just sort of getting acquainted with

40:35.240 --> 40:39.120
GitLab after the recent news, I've always been aware of it, but really getting acquainted

40:39.120 --> 40:44.640
now, that gives me a confidence in the long-term structure of the company. It sounds like there's

40:44.640 --> 40:50.800
a real process for scaling, bringing new staff on, and keeping that going without derailing

40:50.800 --> 40:54.240
the company because that can be one of the hardest things with a company is bringing

40:54.240 --> 40:56.680
people on and getting that right.

40:56.680 --> 41:02.320
So I am pretty positive about the future. You must be as well. You must be pretty positive

41:02.320 --> 41:05.200
about what at least the next few years have for GitLab.

41:05.200 --> 41:11.440
Yeah. I'm super excited. This year, we're going to complete our vision of complete DevOps.

41:11.440 --> 41:17.560
So it used to be that GitLab was just version control, and then it was just for developers.

41:17.560 --> 41:21.360
And now we're going to make sure that you can run the entire lifecycle all the way up

41:21.360 --> 41:25.460
to deploying to production and monitoring in GitLab. And we think that's going to bring

41:25.460 --> 41:31.040
so many advantages. Imagine you're rolling, you're pushing your code. It gets deployed,

41:31.040 --> 41:37.120
but then GitLab says, sees that you're breaching a service level objective. It automatically

41:37.120 --> 41:42.300
rolls back the code and says, hey, something went wrong here. Or overnight, there's like

41:42.300 --> 41:47.000
Debian has a security update. It gets rolled out automatically, but we monitor it. And

41:47.000 --> 41:51.760
if it doesn't work, we roll it back. So instead of babysitting deployments, you can do it

41:51.760 --> 41:57.240
all with GitLab. And super excited by what we're doing there.

41:57.240 --> 42:02.800
So that's auto DevOps, right? And that's going to be launching on June 22. That's next week.

42:02.800 --> 42:07.640
So one feature I mentioned is auto revert. That's not yet in GitLab, but that will be

42:07.640 --> 42:09.220
launching this year.

42:09.220 --> 42:13.900
It just really strikes me as a way to empower even understaffed open source projects. People

42:13.900 --> 42:18.200
that are on GitLab now that maybe don't have all of the resources that larger projects

42:18.200 --> 42:22.960
might, this could help them get more done. So that's going to be a great feature.

42:22.960 --> 42:26.880
Spend less time on your tooling. Spend less time on babysitting changes. Spend more time

42:26.880 --> 42:28.560
on actually creating functionality.

42:28.560 --> 42:33.720
Yeah. Well, Sid, thank you very much for coming on. I'm sure these are very busy days for

42:33.720 --> 42:37.240
you. And so Mike and I both really appreciate you making time to come on the Coder Radio

42:37.240 --> 42:38.240
program.

42:38.240 --> 42:39.800
Anytime. Thank you.

42:39.800 --> 42:45.400
Thanks, Sid. Boy, that was great picking Sid's brain on the remote work stuff. I mean, very

42:45.400 --> 42:50.360
awesome hearing about GitLab and also very much looking forward to them launching auto

42:50.360 --> 42:57.040
DevOps. But what do you think about his thoughts on the remote work stuff? Like they 100% remote

42:57.040 --> 42:58.580
work.

42:58.580 --> 43:03.440
You know what? Honestly, I was a little, cat got my tongue because I was thinking about

43:03.440 --> 43:11.680
what he was saying. I was like, can that really work? I might have to try it. I mean, yeah,

43:11.680 --> 43:17.160
some of that stuff, you know what, having the team meetups, it makes a ton of sense.

43:17.160 --> 43:23.040
And if they're growing, as he said, 3x year over year, it's scaled up to what, 300 people?

43:23.040 --> 43:26.360
That's incredible to me. That's great.

43:26.360 --> 43:31.240
I'll put a link. He mentioned, as we were saying goodbye, that that handbook is open

43:31.240 --> 43:34.360
source. So I'm going to put a link to that in the show notes. So if you want to grab

43:34.360 --> 43:39.240
it, you can go to coder.show slash 313 and we'll have a link to their handbook that they've

43:39.240 --> 43:42.480
put in the show. But Mike, I think that's probably it right there. I think we should

43:42.480 --> 43:47.880
probably wrap it up. I'm going to be traveling with kids for the next weekends or so. So

43:47.880 --> 43:51.080
I don't really know what the recording schedule is going to be. So just the surefire bet is

43:51.080 --> 43:56.880
coder.show slash subscribe. Mike and I will work it out over the next few days. But when

43:56.880 --> 44:01.100
we do publish an episode, as long as you go to coder.show slash subscribe and subscribe

44:01.100 --> 44:04.320
from one of the ways there, you'll get every single episode that we put out. Mr. Dominic,

44:04.320 --> 44:06.560
where should people find you throughout the week?

44:06.560 --> 44:11.820
Follow me at Dominic on Twitter. Boom. You can follow me on Twitter. I'm at Chris L.A.S.

44:11.820 --> 44:16.520
and follow my journey home from Tejas at Jupiter broadcasting dot com slash Rover. Thanks so

44:16.520 --> 44:36.880
much for being here and hopefully we'll see you right back here next week.

