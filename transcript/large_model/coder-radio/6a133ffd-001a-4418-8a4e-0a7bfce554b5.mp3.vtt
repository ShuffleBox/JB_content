WEBVTT

00:00.000 --> 00:07.000
This is Koda Radio, episode 362 for June 17th, 2019.

00:31.000 --> 00:45.000
Hello and welcome to Koda Radio, Jupiter Broadcasting's weekly talk show that takes a pragmatic look at the art and business of software development and related technologies.

00:45.000 --> 00:53.000
My name is Wes and on the other line, well, it's that fighting Floridian, Mr. Michael Dominic. Welcome to the show, Mike.

00:53.000 --> 00:58.000
Thank you, Wes. And I think we have an often lover with us this week.

00:58.000 --> 01:04.000
Oh, yes. Rejoining us once again in corner number three, Mr. Chris Fisher.

01:04.000 --> 01:07.000
Guys? Oh, yeah, it's Koda Radio time, isn't it?

01:07.000 --> 01:08.000
Oh, it is. We're live.

01:08.000 --> 01:10.000
I mean, I was just in here doing work. I don't know what you guys are doing here.

01:10.000 --> 01:15.000
We got roped in, tied you up to the chair, put a microphone in your face, and now you're with us.

01:15.000 --> 01:22.000
Oh, man. I actually am really glad to be here because there's two topics, at least today, that I have many things to say on, but I feel like I've joined a new cult.

01:22.000 --> 01:27.000
I'm part of a cult member now and I can't wait to tell you guys about it. Life-changing stuff.

01:27.000 --> 01:32.000
You've been raving on it behind the scenes, but you haven't been willing to give us any more details than that.

01:32.000 --> 01:33.000
Save it for the show, you say.

01:33.000 --> 01:34.000
You know how I do.

01:34.000 --> 01:36.000
Yeah, that's pretty smart.

01:36.000 --> 01:39.000
I'm thinking it's HomePod 5 and 6, but that's just my guess.

01:39.000 --> 01:42.000
I can never get away from it.

01:42.000 --> 01:44.000
It's a whole HomePod-powered home theater system.

01:44.000 --> 01:49.000
You know, this HomePod thing is really taking a life of its own because, I kid you not, my wife told me yesterday, she said,

01:49.000 --> 01:52.000
darling, when you die, I'll bury you with one of the HomePods.

01:52.000 --> 01:54.000
HomePod and Levi, right? That's what you need.

01:54.000 --> 01:57.000
You know, Chris, I did join the HomePod club.

01:57.000 --> 02:02.000
Yeah. Okay. Now, be honest with me. Do you like it?

02:02.000 --> 02:07.000
I liked it for the one day I had it, and then my wife heard it and commandeered it.

02:07.000 --> 02:08.000
Oh, that good?

02:08.000 --> 02:10.000
Yeah, they're good.

02:10.000 --> 02:13.000
Yeah, they're good, so I have ordered a second HomePod.

02:13.000 --> 02:22.000
Honestly, if Apple would put Bluetooth in that thing or an aux in, I would graduate this from a joke meme thing to an actual serious recommendation.

02:22.000 --> 02:25.000
Yeah, for me, it's another product of theirs that I admire from afar.

02:25.000 --> 02:29.000
I've heard them. They do sound great. I would probably buy one, but it's useless to me.

02:29.000 --> 02:35.000
The reason why I got it, ultimately, is I took a bet that Apple was going to do more with this thing as time went on.

02:35.000 --> 02:40.000
Like, why would they put, like, an A8 processor in a speaker unless they had some serious intentions?

02:40.000 --> 02:48.000
And now you see with some of the updates that are coming to HomeKit cameras, the HomePods will now be doing on-network analysis of the images.

02:48.000 --> 02:49.000
Really?

02:49.000 --> 02:52.000
Just saying. HomePod gets more useful. Just saying.

02:52.000 --> 02:57.000
Apple is particularly good at that, though, right? I mean, they sort of, the longer-term enablement of features?

02:57.000 --> 03:03.000
Yeah. Yeah, I kind of feel like maybe if they were going to launch it today, though, they'd probably put a screen on there.

03:03.000 --> 03:09.000
Yeah, that's sort of the trend. Sort of the trend of things. But I missed you guys, so it's nice to be back.

03:09.000 --> 03:11.000
It's been a while since we've all been together.

03:11.000 --> 03:13.000
It's lovely to all be here today.

03:13.000 --> 03:14.000
Reunited.

03:14.000 --> 03:17.000
I see you've brought a little toy to the studio.

03:17.000 --> 03:18.000
You want to talk about it?

03:18.000 --> 03:20.000
Yeah, I'm kind of curious.

03:20.000 --> 03:24.000
Well, God, so close to the HomePods. This really makes me look bad.

03:24.000 --> 03:29.000
So I have an iPad. I think the audience knows that. And I think it's actually a pretty great work machine.

03:29.000 --> 03:33.000
I have ISH on there. I have WireGuard for my VPN.

03:33.000 --> 03:39.000
And there is a really great terminal application that I think it's called Tremulus. I can't remember the name.

03:39.000 --> 03:40.000
Tremulus.

03:40.000 --> 03:42.000
Yeah, I just have it on my home screen here.

03:42.000 --> 03:53.000
And this makes SSHing into multiple boxes just totally easy. And then when I found out that I could also add GitHub as just regular files,

03:53.000 --> 03:59.000
like you go in the files app and get access to GitHub repos, it's like, okay, this is actually starting to become a serious little work appliance for me.

03:59.000 --> 04:02.000
And I just happen to like the email and calendaring on iPad better than I do.

04:02.000 --> 04:03.000
Those just work?

04:03.000 --> 04:08.000
Better than they do on Linux. I just don't like going into the web page, and I don't like Thunderbird very much,

04:08.000 --> 04:10.000
and I don't like Evolution very much, and I don't like KML very much.

04:10.000 --> 04:14.000
I don't even consider using it. I just always use the web client. You're right. It's not native.

04:14.000 --> 04:20.000
No, and a lot of times I want to do extra things like I want to take an invoice and I want to export it out to a PDF for expenses,

04:20.000 --> 04:24.000
for expense tracking and whatnot. There's a lot of easy workflows on iOS to do that.

04:24.000 --> 04:31.000
So I added the Bridge keyboard to the iPad, which you may have heard of before. They make keyboards for lots of devices now.

04:31.000 --> 04:37.000
And it's a Bluetooth metal keyboard. The whole thing is a giant battery that charges over USB-C.

04:37.000 --> 04:41.000
So you can actually charge up the iPad a couple of times off your keyboard, which is pretty great.

04:41.000 --> 04:48.000
It's a backlit, full-cordy keyboard that has better key travel and is more comfortable to type on than the MacBook Pro keyboard,

04:48.000 --> 04:53.000
which I grant you is not a high benchmark. So I'm not saying it's the best keyboard ever.

04:53.000 --> 04:56.000
It's not ThinkPad quality, but it's definitely beyond MacBook quality.

04:56.000 --> 05:00.000
But what is really great about it, and I encourage you to go look it up, it's the Bridge keyboard.

05:00.000 --> 05:08.000
It makes the iPad like a full laptop. The screen has an arm that you can tilt at any angle you like.

05:08.000 --> 05:13.000
It is nice and metal, so it feels all really sturdy.

05:13.000 --> 05:16.000
The fit and finish, it looks like Apple could have made it, really.

05:16.000 --> 05:18.000
Oh, for sure. Yeah, absolutely. Take a look at it.

05:18.000 --> 05:23.000
If you've been thinking about just getting a little work appliance that is foolproof,

05:23.000 --> 05:28.000
like sometimes my displays are screwed up on my workstation or sometimes Comcast goes down,

05:28.000 --> 05:32.000
the iPad is kind of like my anxiety pill for that.

05:32.000 --> 05:37.000
I know that the iPad, I can open up this screen, it's always going to turn on, it's got an AT&T card in there,

05:37.000 --> 05:40.000
so it's always going to connect to the internet, even when Comcast goes down.

05:40.000 --> 05:44.000
I wonder, is this part of the advantage of it? I mean, it's getting more and more general purpose, right?

05:44.000 --> 05:51.000
But it was kind of started as a different type of computing, doing things differently with more limitations, but simplified.

05:51.000 --> 05:55.000
So it is tempting, right? You've got these Linux machines, and either they're kind of fussy to use

05:55.000 --> 05:59.000
or they're a machine you're using for sort of playing and testing.

05:59.000 --> 06:03.000
And not only can't you do that on the iPad, but you're not really drawn to.

06:03.000 --> 06:06.000
So you've left it alone as an isolated device just for certain workflows.

06:06.000 --> 06:10.000
Exactly. And kind of going back to something we've talked about a lot on this show,

06:10.000 --> 06:14.000
is it's really hard to get the perfect workstation. You've got to make a compromise somewhere.

06:14.000 --> 06:17.000
And this is sort of like an escape hatch for some of those compromises.

06:17.000 --> 06:19.000
But additionally, like we were talking about with the HomePod,

06:19.000 --> 06:22.000
you kind of can plan on Apple making this a lot better over time.

06:22.000 --> 06:26.000
So it starts, the iPad Pro, this 11-inch when they first shipped it.

06:26.000 --> 06:30.000
The reviews came out, the number one knock is no file storage access.

06:30.000 --> 06:32.000
You know, you can't hook up storage devices.

06:32.000 --> 06:39.000
Well now, in iOS 13, as we all know now, they're not only adding fantastic file external support,

06:39.000 --> 06:42.000
but they're adding local storage support, they're adding SMB support,

06:42.000 --> 06:46.000
but also additionally, they're making Safari a full desktop browser,

06:46.000 --> 06:50.000
which essentially now makes this, to me, just for my use, just as good as a Chromebook.

06:50.000 --> 06:55.000
And when this iPad Pro 11 was announced, it was at the same time the new Pixel was announced,

06:55.000 --> 06:59.000
that is a Chrome OS, really nice machine that I really considered,

06:59.000 --> 07:04.000
because Linux Academy is all in on the Google app side, and that's where we live.

07:04.000 --> 07:07.000
So I thought, well, maybe I should get a Google device.

07:07.000 --> 07:11.000
I bet that that wouldn't be that polished and that this would be limited,

07:11.000 --> 07:13.000
the iPad would be limited, but in a year or so, they would add more to it.

07:13.000 --> 07:15.000
And that's exactly what's happened.

07:15.000 --> 07:19.000
There is something to the approach, and I think we could all internalize this a little bit,

07:19.000 --> 07:25.000
of just solving the problems you can at the time, but the slow and steady pace of improvement,

07:25.000 --> 07:27.000
instead of just trying to launch everything at once.

07:27.000 --> 07:31.000
What it feels like with the iPad and the HomePod is the stuff they're rolling out now,

07:31.000 --> 07:37.000
they already had on the roadmap a year ago, but they just, they kept it in-house an extra year,

07:37.000 --> 07:40.000
they let it bake an extra year before they ship it.

07:40.000 --> 07:43.000
Right, they're not always playing the first to market sort of thing.

07:43.000 --> 07:47.000
They have enough of their own space to play in that they can afford to get it right.

07:47.000 --> 07:50.000
And I think, I think this might be why I'm starting to,

07:50.000 --> 07:54.000
there's certain things I just really like about Fedora, and I think it's some of that same,

07:54.000 --> 07:59.000
there's certain groundwork they lay down that I follow for a while, and then it lands in each release.

07:59.000 --> 08:01.000
Like, I just started playing around with PipeWire.

08:01.000 --> 08:05.000
You know, I've been watching that land now for a while, and it's been a slow, gradual build.

08:05.000 --> 08:11.000
It's an interesting, it's an interesting way to build a product, and there's just lots of different approaches,

08:11.000 --> 08:15.000
and I think that's the kind of approach that works well for me, a continuous, slow, gradual improvement.

08:15.000 --> 08:22.000
I'm wondering how that compares to some of the drama we saw over the approach to features in the GNOME desktop.

08:22.000 --> 08:27.000
Because some of the iPad development reminds me, you know, it's a little bit, it's a little bit slower,

08:27.000 --> 08:31.000
and, you know, there's plenty of drama around removing features or changing the look and feel of things,

08:31.000 --> 08:35.000
but it seems like the underlying philosophy was kind of similar, right?

08:35.000 --> 08:39.000
Get a few things right, minimize stuff, focus there, and eventually, as we've seen,

08:39.000 --> 08:43.000
some of the features we lost, they've come back in different or more refined ways.

08:43.000 --> 08:47.000
I kind of clearly do remember, like, around GNOME 3.12 or something, like, things really took a turn,

08:47.000 --> 08:49.000
and it just became a real steady, and same with Plasma.

08:49.000 --> 08:52.000
That's one of the things I think, why Plasma is so great right now.

08:52.000 --> 08:54.000
Certain product life cycles, it's pretty nice.

08:54.000 --> 08:56.000
So, I noticed you guys have been doing this challenge thing.

08:56.000 --> 08:58.000
This is, how come we never thought of this, Mike?

08:58.000 --> 08:59.000
It sounds kind of fun.

08:59.000 --> 09:00.000
Just a lot of work, though.

09:00.000 --> 09:02.000
Who has time for challenges?

09:02.000 --> 09:05.000
I know, it's a lot of work, and Wes does not make it easy.

09:05.000 --> 09:06.000
No.

09:06.000 --> 09:08.000
Well, I mean, you said you wanted a challenge.

09:08.000 --> 09:09.000
You know what?

09:09.000 --> 09:13.000
I got to say, this last one, you really got me.

09:13.000 --> 09:15.000
So, Reason ML.

09:15.000 --> 09:19.000
Much like Lawrence of Arabia, I went to OCaml.

09:19.000 --> 09:23.000
Now, I have never done anything in the OCaml world.

09:23.000 --> 09:26.000
If you don't know what I'm talking about when I say OCaml,

09:26.000 --> 09:29.000
it's because you are under the age of 50.

09:29.000 --> 09:35.000
Yeah, can you maybe, for the viewers not familiar with this obscure ML variant,

09:35.000 --> 09:39.000
maybe obscure is too strong a word in that I told you to use it,

09:39.000 --> 09:40.000
but can you break it down a little bit?

09:40.000 --> 09:43.000
What's the deal with OCaml, and how does Reason fit?

09:43.000 --> 09:46.000
Yeah, so OCaml is like a, it is a language itself,

09:46.000 --> 09:50.000
but also like a language that other languages interop with and work with.

09:50.000 --> 09:55.000
It's like a whole world that is deeply mature and deeply complicated.

09:55.000 --> 09:59.000
Reason ML, or I often see it written as Reason, so I'm not sure.

09:59.000 --> 10:01.000
It looks like the official name is Reason ML,

10:01.000 --> 10:04.000
but they call it Reason in some of their docs,

10:04.000 --> 10:11.000
is basically a, I'm going to say like dialect almost of OCaml

10:11.000 --> 10:15.000
that can compile to JavaScript.

10:15.000 --> 10:19.000
Because when we need to compile, there's only one thing we're compiling to.

10:19.000 --> 10:21.000
That's right, it's got to be JavaScript.

10:21.000 --> 10:25.000
And they have an entire, which I love by the way,

10:25.000 --> 10:30.000
an entire page that says what and why as the heading for the page.

10:30.000 --> 10:34.000
So I ended up having to actually read up on OCaml

10:34.000 --> 10:38.000
to understand what was going on here, right?

10:38.000 --> 10:44.000
Basically Reason is a JavaScript interoperable language,

10:44.000 --> 10:47.000
and it can also compile to native code

10:47.000 --> 10:51.000
like a more traditional OCaml type application.

10:51.000 --> 10:54.000
It is considered a systems language,

10:54.000 --> 10:58.000
much like let's say a Rust for instance,

10:58.000 --> 11:00.000
to an application development language like a, you know,

11:00.000 --> 11:03.000
a la, I don't know, C sharp, Objective-C, Java,

11:03.000 --> 11:05.000
most of the more common things.

11:05.000 --> 11:09.000
But holy crap is it fast.

11:09.000 --> 11:11.000
Now there's kind of two variants I found, Wes,

11:11.000 --> 11:13.000
and you can correct me where I'm wrong.

11:13.000 --> 11:16.000
There's the native where you're like literally writing native code

11:16.000 --> 11:19.000
that compiles, that just runs super fast.

11:19.000 --> 11:22.000
But then there's also this JavaScript interoperability

11:22.000 --> 11:27.000
using a, it gets better, intermediary layer called BuckleScript.

11:27.000 --> 11:29.000
Of course.

11:29.000 --> 11:30.000
Isn't that a fun name?

11:30.000 --> 11:33.000
So many, so many things here.

11:33.000 --> 11:36.000
You install Reason via NPM.

11:36.000 --> 11:37.000
Of course.

11:37.000 --> 11:39.000
Which, I mean, that does kind of fit though, right?

11:39.000 --> 11:41.000
I mean, that's how you install TypeScript for instance.

11:41.000 --> 11:42.000
Exactly, yeah.

11:42.000 --> 11:45.000
I found the install weirdly challenging.

11:45.000 --> 11:47.000
I ended up having to go into the Reason Discord and ask for help

11:47.000 --> 11:49.000
because I just couldn't get it to work.

11:49.000 --> 11:52.000
How responsive were they when you went into the community?

11:52.000 --> 11:55.000
They were very happy that people were using it.

11:55.000 --> 11:56.000
Oh, good.

11:56.000 --> 11:59.000
But it's not, I don't mean to say it's like a super small community at all.

11:59.000 --> 12:01.000
Actually, Reason is developed by the people who developed React.

12:01.000 --> 12:04.000
In other words, Facebook, right?

12:04.000 --> 12:09.000
And, oh, that is another flavor of Reason, React and React Native.

12:09.000 --> 12:11.000
So it's high level here.

12:11.000 --> 12:16.000
We have Reason running natively just like OCaml.

12:16.000 --> 12:20.000
We have Reason using BuckleScript

12:20.000 --> 12:23.000
running just like a JavaScript replacement, right?

12:23.000 --> 12:26.000
And indeed, just straight interrupt with JavaScript.

12:26.000 --> 12:29.000
We have Reason with React and Reason with React Native.

12:29.000 --> 12:34.000
It is actually a pretty cool, deeply complicated language.

12:34.000 --> 12:38.000
So, like, just getting set up I found hard, but that might just be me.

12:38.000 --> 12:40.000
Rocks, like the type system, right?

12:40.000 --> 12:43.000
So they give you what they feel are like their five top things.

12:43.000 --> 12:45.000
Rock solid type system.

12:45.000 --> 12:48.000
Yeah, so Reason doesn't want you to screw up, basically.

12:48.000 --> 12:49.000
Much like a Rust.

12:49.000 --> 12:52.000
So I found a very helpful comparison to Rust in general.

12:52.000 --> 12:58.000
Basically, it's not going to make it easier for you to do stupid things.

12:58.000 --> 13:01.000
For instance, there's no such thing as null, right?

13:01.000 --> 13:03.000
Anywhere you would think to use a null,

13:03.000 --> 13:06.000
you're going to be using there's an optional type in Reason.

13:06.000 --> 13:11.000
Now, you can put optionals everywhere and not write super tight code,

13:11.000 --> 13:14.000
but from what I was looking at reading all the samples

13:14.000 --> 13:17.000
and kind of playing with it on my own,

13:17.000 --> 13:20.000
it's not like Swift where everything is going to be optional, right?

13:20.000 --> 13:25.000
It's not, you know, Swift, you're slinging question marks all over the place.

13:25.000 --> 13:26.000
Right.

13:26.000 --> 13:29.000
In Reason, it's more like if you need to, you can.

13:29.000 --> 13:31.000
They say it's simple.

13:31.000 --> 13:33.000
I don't agree, but that's fine.

13:33.000 --> 13:34.000
Really?

13:34.000 --> 13:36.000
So what don't you find simple about it?

13:36.000 --> 13:39.000
I found the setup actually weirdly hard.

13:39.000 --> 13:42.000
It almost felt like there was a different setup process,

13:42.000 --> 13:44.000
particularly for the native stuff, right?

13:44.000 --> 13:47.000
The easiest setup was actually the Reason React.

13:47.000 --> 13:48.000
Interesting.

13:48.000 --> 13:51.000
Because there's a super helpful quick start

13:51.000 --> 13:55.000
that basically just gives you a template.

13:55.000 --> 14:01.000
But once I got it running, I mean, wow, it's fast.

14:01.000 --> 14:02.000
Yeah?

14:02.000 --> 14:03.000
Yeah.

14:03.000 --> 14:06.000
So the tooling is another thing I found interesting

14:06.000 --> 14:11.000
because NPM for native development is weird to me,

14:11.000 --> 14:14.000
but I think that's the direction we're just going in.

14:14.000 --> 14:15.000
Right.

14:15.000 --> 14:18.000
And then you have the other camp where not having it on NPM

14:18.000 --> 14:20.000
is a big downer for them, and they don't want to,

14:20.000 --> 14:23.000
it's like, oh, I have to install a separate build tool chain and stuff.

14:23.000 --> 14:24.000
Oh, sure, yeah, sure, sure.

14:24.000 --> 14:25.000
But you're right.

14:25.000 --> 14:27.000
Like, either you hate NPM or love NPM.

14:27.000 --> 14:30.000
Either way, it's kind of a pain.

14:30.000 --> 14:32.000
Yeah, no, it really was interesting.

14:32.000 --> 14:34.000
I mean, there were a few concepts that I pointed out in the doc.

14:34.000 --> 14:36.000
I am not going to go line by line through this,

14:36.000 --> 14:41.000
but in particular, I found the variant,

14:41.000 --> 14:43.000
basically it's a data structure in Reason,

14:43.000 --> 14:45.000
to be actually pretty cool.

14:45.000 --> 14:46.000
Yeah, I love their introduction.

14:46.000 --> 14:50.000
Behold, the crown jewel of Reason data structures.

14:50.000 --> 14:54.000
Most data structures in most languages are about this and that, right?

14:54.000 --> 14:56.000
Like an object with a couple fields,

14:56.000 --> 15:00.000
a variant allows us to express this or that.

15:00.000 --> 15:04.000
Yeah, and then you can do like fancy stuff with default cases.

15:04.000 --> 15:07.000
And the syntax is just super tight.

15:07.000 --> 15:11.000
Like, I could see if you were really worried about performance

15:11.000 --> 15:14.000
or wanted really hardcore safe functional,

15:14.000 --> 15:17.000
I guess, a hardcore safe functional replacement for your JavaScript,

15:17.000 --> 15:19.000
this would make a lot of sense.

15:19.000 --> 15:20.000
Like, there's actually, I put in the show notes,

15:20.000 --> 15:22.000
again, I'm not going to go too deep into it.

15:22.000 --> 15:26.000
But Ken Wheeler did a pretty good talk in 2018,

15:26.000 --> 15:30.000
where he's basically, in pretty blunt terms,

15:30.000 --> 15:32.000
recommending Reason as, you know,

15:32.000 --> 15:37.000
if you're writing large Node or NPM-based JavaScript code bases,

15:37.000 --> 15:40.000
consider using Reason for all the safety you basically get for free.

15:40.000 --> 15:44.000
It's a very similar argument to, I think, that Rust developers make, right?

15:44.000 --> 15:46.000
Like, yes, you have to follow these rules,

15:46.000 --> 15:49.000
and maybe every once in a while it's frustrating,

15:49.000 --> 15:54.000
but there's just like a whole category of error that you cannot actually commit.

15:54.000 --> 15:57.000
Right, and I mean, it might be a big helper, too,

15:57.000 --> 16:00.000
if you have a large team working on the same application

16:00.000 --> 16:02.000
coming from different backgrounds and perspectives,

16:02.000 --> 16:05.000
or you're, you know, coming back a year later to do an update

16:05.000 --> 16:07.000
on a project you may have worked with a client on

16:07.000 --> 16:09.000
and sort of forgot everything that was there.

16:09.000 --> 16:11.000
You've got these nice types laid out for you.

16:11.000 --> 16:12.000
It's true.

16:12.000 --> 16:13.000
It's got built-in pattern matching,

16:13.000 --> 16:15.000
all the standards you've come to find

16:15.000 --> 16:18.000
in, you know, functional ML style languages these days.

16:18.000 --> 16:22.000
I'm curious, Mike, the comparison to F Sharp,

16:22.000 --> 16:24.000
because F Sharp also has a lot of these goodies, you know,

16:24.000 --> 16:26.000
inspired by some of the same predecessors.

16:26.000 --> 16:28.000
And there's Fable, right?

16:28.000 --> 16:32.000
There's also a JavaScript compilation option.

16:32.000 --> 16:36.000
Do you have any insights into why you might choose one or the other,

16:36.000 --> 16:37.000
or if Reason is tempting to you?

16:37.000 --> 16:40.000
I know you're already in love with F Sharp.

16:40.000 --> 16:44.000
Yeah, F Sharp is, so actually,

16:44.000 --> 16:47.000
the whole F Sharp thing, whether I'm in love with it or not,

16:47.000 --> 16:49.000
I feel like Reason takes functional paradigms

16:49.000 --> 16:51.000
a lot more seriously than F Sharp does.

16:51.000 --> 16:54.000
In particular, F Sharp has a lot of escape valves, right?

16:54.000 --> 16:56.000
And a lot of that's a side effect of having to interrupt

16:56.000 --> 17:00.000
with C Sharp and the.NET platform.

17:00.000 --> 17:02.000
I know people are going to be mad.

17:02.000 --> 17:05.000
I don't think Fable's really a serious thing.

17:05.000 --> 17:08.000
Reason, in terms of the buckle script

17:08.000 --> 17:12.000
and the JavaScript interop, seems a lot more mature

17:12.000 --> 17:16.000
and, frankly, a lot more performant right now.

17:16.000 --> 17:18.000
There is some dependency on JavaScript engines,

17:18.000 --> 17:21.000
like everything else in the JavaScript world, but...

17:21.000 --> 17:23.000
Yes, of course, it depends on where you're running

17:23.000 --> 17:26.000
and how fast it is and how good the JIT is, probably.

17:26.000 --> 17:29.000
Right, I could almost see a progression, right?

17:29.000 --> 17:31.000
In fact, I'm working on something that I'm calling

17:31.000 --> 17:34.000
the functional gateway drug, where F Sharp is basically

17:34.000 --> 17:37.000
your core's light, and then, I don't know,

17:37.000 --> 17:40.000
something else is just moving up and up the chain

17:40.000 --> 17:44.000
until you end up at like Haskell, basically.

17:44.000 --> 17:46.000
Where Reason feels a few...

17:46.000 --> 17:48.000
It's almost stricter, right?

17:48.000 --> 17:50.000
I think that's maybe the right word,

17:50.000 --> 17:52.000
but I don't mean it in a negative way.

17:52.000 --> 17:54.000
Where F Sharp is basically, okay,

17:54.000 --> 17:56.000
you don't have to do this if you don't want to.

17:56.000 --> 17:59.000
Reason is, no, you definitely do.

17:59.000 --> 18:02.000
Having said that, it does interrupt with JavaScript, right?

18:02.000 --> 18:05.000
You could, in theory, break all of that.

18:05.000 --> 18:07.000
It took me a week to figure this out,

18:07.000 --> 18:10.000
but you can actually import native OCaml dependencies

18:10.000 --> 18:11.000
into Reason.

18:11.000 --> 18:13.000
Oh, very nice.

18:13.000 --> 18:16.000
You can leverage the existing OCaml ecosystem.

18:16.000 --> 18:19.000
Yeah, they call it ESI, but I think it's actually pronounced easy,

18:19.000 --> 18:24.000
E-S-Y, which is basically their package manager for OCaml.

18:24.000 --> 18:25.000
Excellent.

18:25.000 --> 18:26.000
Yeah.

18:26.000 --> 18:28.000
Sounds like you've had quite a little wild ride

18:28.000 --> 18:30.000
in the OCaml and Reason ecosystem.

18:30.000 --> 18:32.000
I feel like we went on a journey with Mike.

18:32.000 --> 18:34.000
Do you think you would actually use it?

18:34.000 --> 18:35.000
Are you interested?

18:35.000 --> 18:37.000
It's not like you found some of it tedious.

18:37.000 --> 18:38.000
I'm curious.

18:38.000 --> 18:40.000
People obviously love the OCaml compiler

18:40.000 --> 18:43.000
and having nice inferred types and a smart compiler

18:43.000 --> 18:45.000
that can help you do all this stuff

18:45.000 --> 18:47.000
without ideally getting in your way.

18:47.000 --> 18:50.000
Do you think you'd see yourself actually using this language?

18:50.000 --> 18:52.000
Probably not.

18:52.000 --> 18:54.000
Not because I think it's bad,

18:54.000 --> 18:57.000
but because I think it would be hard to sell to a client

18:57.000 --> 19:01.000
this somewhat esoteric language that isn't JavaScript,

19:01.000 --> 19:03.000
which is a thing they know.

19:03.000 --> 19:06.000
But I could see...

19:06.000 --> 19:10.000
I could see a world where Reason goes much more mainstream.

19:10.000 --> 19:13.000
And to be fair, I don't know usage numbers on it, right?

19:13.000 --> 19:15.000
So maybe it's just like I haven't seen it.

19:15.000 --> 19:17.000
Would you consider it if you weren't...

19:17.000 --> 19:20.000
I could see how maybe you wouldn't want to click a client

19:20.000 --> 19:22.000
or something where they would want...

19:22.000 --> 19:25.000
Maybe they would want to switch consultants later down the line.

19:25.000 --> 19:27.000
I'm just wondering if you might use it

19:27.000 --> 19:29.000
if you're building something for yourself

19:29.000 --> 19:32.000
or a service you were running where you maintained complete control

19:32.000 --> 19:34.000
that was just your project.

19:34.000 --> 19:36.000
I could definitely see a case where...

19:36.000 --> 19:38.000
Again, because it does interoperate JavaScript,

19:38.000 --> 19:40.000
so I could see some mission-critical business logic

19:40.000 --> 19:43.000
that just has to be right and can't have errors.

19:43.000 --> 19:46.000
Much like I currently use Rust and Rails applications,

19:46.000 --> 19:49.000
where this is important and it has to be right

19:49.000 --> 19:52.000
and I'm willing to sacrifice some dev time for it.

19:52.000 --> 19:54.000
Yeah, I could definitely see that.

19:54.000 --> 19:57.000
Excellent. Well, look at you being a sport, playing around.

19:57.000 --> 20:00.000
That was fun. So now is it your turn next?

20:00.000 --> 20:03.000
Yeah, next time we'll get my report on Kotlin.

20:03.000 --> 20:06.000
I give him easy languages on purpose now.

20:06.000 --> 20:08.000
That's a lot of setup, though.

20:08.000 --> 20:10.000
Speaking of setup, that could be a lot of setup to get going,

20:10.000 --> 20:12.000
unless you have anything installed already.

20:12.000 --> 20:15.000
You have to install a gigantic Java-based IDE.

20:15.000 --> 20:17.000
Yeah, that has been interesting.

20:17.000 --> 20:19.000
Oh, you already got it installed?

20:19.000 --> 20:22.000
You're not rushing the homework at the last minute, huh?

20:22.000 --> 20:24.000
I'm trying to, you know.

20:24.000 --> 20:28.000
I'm still working. I'm trying to get a little test Android app built to it.

20:28.000 --> 20:30.000
Oh, nice. So you're going the mobile app. Super cool.

20:30.000 --> 20:32.000
Well, I've been playing with just a little bit.

20:32.000 --> 20:35.000
I played with the command line, and they've got a nice little web client.

20:35.000 --> 20:37.000
You can try it right in the browser,

20:37.000 --> 20:39.000
because guess what? Kotlin also goes to JavaScript,

20:39.000 --> 20:41.000
because everything does these days.

20:41.000 --> 20:43.000
But I wanted to specifically try out playing with an app,

20:43.000 --> 20:46.000
because it's been, A, something I haven't done in a while,

20:46.000 --> 20:51.000
and B, I mean, Google's pushing using Kotlin for Android pretty hard.

20:51.000 --> 20:53.000
Because they hate Oracle.

20:53.000 --> 20:55.000
All right, Wes, so in two weeks from now,

20:55.000 --> 20:59.000
what journey down the functional primrose path am I taking?

20:59.000 --> 21:01.000
Do you want to keep going on the functional?

21:01.000 --> 21:03.000
Because you were right.

21:03.000 --> 21:06.000
You're giving me some a little more mainstream languages.

21:06.000 --> 21:08.000
I'm up for anything.

21:08.000 --> 21:11.000
I was kind of thinking, maybe you should use Go.

21:11.000 --> 21:13.000
Go? Okay. I've actually not really done Go.

21:13.000 --> 21:15.000
All right, Go sounds fun. Go.

21:15.000 --> 21:17.000
That's what I thought.

21:17.000 --> 21:19.000
And especially since we started you out on your journey

21:19.000 --> 21:21.000
with Kotler and with Erlang.

21:21.000 --> 21:22.000
It's true.

21:22.000 --> 21:25.000
Go is another language that's big on its concurrency primitives.

21:25.000 --> 21:27.000
And I'm really curious, too.

21:27.000 --> 21:30.000
And you've been playing with Rust, and while not the same, right?

21:30.000 --> 21:32.000
I mean, Go has a garbage collector. It's a little higher level.

21:32.000 --> 21:35.000
It still excels at a lot of those lower level systems sort of stuff,

21:35.000 --> 21:37.000
especially around networking tasks.

21:37.000 --> 21:39.000
So I could see it being pretty useful to you, Mike.

21:39.000 --> 21:41.000
Oh, the Rust versus Go thing, huh?

21:41.000 --> 21:42.000
I love it.

21:42.000 --> 21:43.000
I know.

21:43.000 --> 21:45.000
Here it comes. Here it comes.

21:45.000 --> 21:47.000
It's going to be a good episode.

21:47.000 --> 21:51.000
We're chatting offline about something that I think is kind of a significant

21:51.000 --> 21:54.000
change in the run of the show.

21:54.000 --> 22:00.000
Years ago, you can find episodes of Mike and I talking about how just simply

22:00.000 --> 22:06.000
distributing your software on Linux is this huge blocker for a lot of developers.

22:06.000 --> 22:11.000
They think, oh, maybe I could port my application to the Linux,

22:11.000 --> 22:13.000
and then I could ship it over there.

22:13.000 --> 22:16.000
And they start looking at the options, and it's a nightmare.

22:16.000 --> 22:18.000
This was especially true when we started the show,

22:18.000 --> 22:21.000
because Mike was looking around, and we were having a lot of conversations

22:21.000 --> 22:23.000
like, do I target for Unity specifically?

22:23.000 --> 22:25.000
Do I target for GNOME?

22:25.000 --> 22:26.000
Does it need to be cute?

22:26.000 --> 22:27.000
Ah, Unity.

22:27.000 --> 22:28.000
Yeah, I know.

22:28.000 --> 22:30.000
I know, Unity was a thing back then, remember?

22:30.000 --> 22:31.000
It's been a while.

22:31.000 --> 22:33.000
But in this time, a lot of things have shifted.

22:33.000 --> 22:40.000
You now have AppImage, Flatpak, and my favorite, Snaps.

22:40.000 --> 22:42.000
I kind of have a mix right now of containers and Snaps.

22:42.000 --> 22:44.000
So like a desktop application, I'm using Snaps.

22:44.000 --> 22:45.000
Sure.

22:45.000 --> 22:47.000
And server-side applications, I'm using containers.

22:47.000 --> 22:51.000
And then when I'm running Fedora, I use quite a bit of Flatpaks.

22:51.000 --> 22:54.000
But I find them to be great.

22:54.000 --> 23:00.000
I find them to be the solution that we were looking for all of those years ago.

23:00.000 --> 23:04.000
And now, if we could go back in time, and you could tell, hey,

23:04.000 --> 23:06.000
just wait a little bit, and then you can package it up as a Snap.

23:06.000 --> 23:07.000
It's coming.

23:07.000 --> 23:08.000
Right, it's coming.

23:08.000 --> 23:09.000
It's coming.

23:09.000 --> 23:10.000
And you have different options with Flatpaks.

23:10.000 --> 23:12.000
You could host your own repository.

23:12.000 --> 23:14.000
You can have your own private thing.

23:14.000 --> 23:16.000
The whole world doesn't even need to know about.

23:16.000 --> 23:18.000
And that works for some.

23:18.000 --> 23:22.000
And then with Snaps, you have the more traditional App Store-style model

23:22.000 --> 23:24.000
that developers are familiar with right now.

23:24.000 --> 23:26.000
There's a company you can go to for support.

23:26.000 --> 23:29.000
There's a central store that all of the users know about.

23:29.000 --> 23:31.000
So discovery is much easier.

23:31.000 --> 23:33.000
And messaging is much easier.

23:33.000 --> 23:35.000
And verification can happen on the platform side.

23:35.000 --> 23:37.000
And there's all these advantages to a central store,

23:37.000 --> 23:38.000
along with their own disadvantages.

23:38.000 --> 23:40.000
And then you've got the AppImage model,

23:40.000 --> 23:45.000
which is probably the most analogous to app on Mac.

23:45.000 --> 23:47.000
Especially like the original stuff.

23:47.000 --> 23:49.000
Yeah, where you download a DMG.

23:49.000 --> 23:51.000
And it's very close to other app bundles.

23:51.000 --> 23:54.000
An AppImage is like an app bundle that's self-contained.

23:54.000 --> 23:57.000
And it's kind of nice for certain applications.

23:57.000 --> 24:01.000
Etcher uses that, which is a GUI application to write to USB.

24:01.000 --> 24:02.000
Oh, yeah, great one, too.

24:02.000 --> 24:04.000
And that's a perfect application for AppImage.

24:04.000 --> 24:07.000
So each has their strengths and use cases.

24:07.000 --> 24:08.000
Honestly, it's funny, too.

24:08.000 --> 24:10.000
AppImage is, you know, we don't talk about it that much.

24:10.000 --> 24:13.000
But it is, any time I download one, I'm actually kind of pleased.

24:13.000 --> 24:14.000
Especially for trying something out.

24:14.000 --> 24:17.000
Because even with snaps, it's easy to remove, whatever.

24:17.000 --> 24:18.000
They're still at an installation step.

24:18.000 --> 24:21.000
It feels a little more like I'm doing something.

24:21.000 --> 24:22.000
And with an AppImage, you can just run it.

24:22.000 --> 24:24.000
And if you never want to run it again,

24:24.000 --> 24:26.000
it's one file to delete right off your file system.

24:26.000 --> 24:28.000
AppImage feels like a low commitment, right?

24:28.000 --> 24:29.000
Whereas a snap and a flat pack,

24:29.000 --> 24:31.000
you are now committed to that application.

24:31.000 --> 24:32.000
And you aren't, really.

24:32.000 --> 24:33.000
I get that, right?

24:33.000 --> 24:36.000
I mean, you can remove it just as easily.

24:36.000 --> 24:37.000
But it's a little more complicated.

24:37.000 --> 24:41.000
And it just seems a little closer to, I don't know, some bullshit Unix philosophy.

24:41.000 --> 24:45.000
Or just the parts, I understand how it works a little bit cleaner than a flat pack

24:45.000 --> 24:48.000
and snaps presented a little bit more to learn with the daemon running.

24:48.000 --> 24:50.000
And just, it's a more complicated system.

24:50.000 --> 24:54.000
And then last but not least, I was really pleased to see just recently

24:54.000 --> 24:59.000
that snaps have taken kind of a step towards even easier to install.

24:59.000 --> 25:02.000
Have you seen now that they have distro specific install pages?

25:02.000 --> 25:03.000
Yeah.

25:03.000 --> 25:04.000
This is really neat.

25:04.000 --> 25:05.000
And it makes it easier for the end user.

25:05.000 --> 25:08.000
Nothing really has to change for the developer who's packaging.

25:08.000 --> 25:10.000
But for the end user now, say you're on Linux Mint

25:10.000 --> 25:13.000
and you haven't yet jumped into snaps or you're on Fedora

25:13.000 --> 25:15.000
and you haven't gotten a snap set up yet,

25:15.000 --> 25:18.000
you can now get a specific screen that tells you,

25:18.000 --> 25:19.000
this is what you do on your distro.

25:19.000 --> 25:20.000
Here's the commands you run.

25:20.000 --> 25:22.000
If you want a copy-pasta, you can.

25:22.000 --> 25:26.000
And this will get snaps operating and get your first application up and going.

25:26.000 --> 25:30.000
If you're on a distro like, say, Fedora or Mint or something like that.

25:30.000 --> 25:32.000
And it's just reducing that barrier.

25:32.000 --> 25:34.000
The user goes through this experience.

25:34.000 --> 25:37.000
This screen one time to get this stuff set up.

25:37.000 --> 25:40.000
And then they can just snap install to their heart's content after that.

25:40.000 --> 25:45.000
It seems like a good move on the side of canonical and SnapCraft just to show.

25:45.000 --> 25:48.000
I mean, obviously, they've done a lot of work getting SnapD running

25:48.000 --> 25:52.000
and snaps running on many different distributions.

25:52.000 --> 25:53.000
This just seems to reinforce that.

25:53.000 --> 25:56.000
This isn't just a canonical thing or an Ubuntu thing, right?

25:56.000 --> 25:59.000
We have almost first class support for all these other things

25:59.000 --> 26:01.000
right on our main homepage.

26:01.000 --> 26:03.000
And that is a message I think is important, not just to end users.

26:03.000 --> 26:07.000
But ultimately, the bigger message is being sent to developers.

26:07.000 --> 26:11.000
Like, we're going to make it easier for consumers of your software

26:11.000 --> 26:12.000
to get it on their distro.

26:12.000 --> 26:14.000
This seems like an important moment to me, Mike.

26:14.000 --> 26:17.000
And I'm curious with your experience and reflection on all the things

26:17.000 --> 26:19.000
we've talked about over the years, what your thoughts are right now.

26:19.000 --> 26:24.000
So yeah, when I'm on pop, I'm basically, if it's not in the repo, I'm using snaps.

26:24.000 --> 26:28.000
I have a few things like the bot framework emulator

26:28.000 --> 26:30.000
that is distributed as an app image.

26:30.000 --> 26:35.000
But for instance, I use the JetBrains IDs, like RubyMod and IntelliJ.

26:35.000 --> 26:37.000
And those are all snaps for me.

26:37.000 --> 26:39.000
Nice.

26:39.000 --> 26:40.000
I love it.

26:40.000 --> 26:43.000
Every once in a while, you have to deal with the snap, tac-tac, classic thing.

26:43.000 --> 26:46.000
But I think this is great.

26:46.000 --> 26:49.000
The only weird thing I would say is I don't often use the GUI stores.

26:49.000 --> 26:50.000
Right.

26:50.000 --> 26:55.000
I'm usually going to SnapCraft and just finding out what is the actual package name.

26:55.000 --> 26:56.000
That's okay, though.

26:56.000 --> 26:58.000
I mean, you have both options, so whatever the user prefers.

26:58.000 --> 27:01.000
Right, and we're probably not necessarily the people.

27:01.000 --> 27:03.000
It's not always my instinct to even go try to use a GUI page

27:03.000 --> 27:05.000
because I'm installing packages I do it on the command line.

27:05.000 --> 27:06.000
Yeah.

27:06.000 --> 27:08.000
So using the perspective, though, of past Mike,

27:08.000 --> 27:12.000
when you remember you were considering how do I ship even for the Linux desktop.

27:12.000 --> 27:13.000
Sad developer Mike.

27:13.000 --> 27:15.000
Is this it, do you think?

27:15.000 --> 27:17.000
Is this the solution past Mike was looking for?

27:17.000 --> 27:21.000
Oh, are you trying to get me into a packaging flame war?

27:21.000 --> 27:23.000
We're already there, buddy.

27:23.000 --> 27:25.000
Yeah, I think that already happened.

27:25.000 --> 27:31.000
Well, you know what, I have to say that I don't use anything but snaps if I can avoid it.

27:31.000 --> 27:35.000
So I would, yeah, if I were to distribute a desktop Linux application,

27:35.000 --> 27:38.000
it would be via the snap format.

27:38.000 --> 27:41.000
And I would definitely put it in the GUI stores, right?

27:41.000 --> 27:44.000
I know that alternatives exist, right?

27:44.000 --> 27:45.000
Flat packs, things like that.

27:45.000 --> 27:47.000
But I just have no need for it.

27:47.000 --> 27:51.000
And honestly, I like the idea of snaps.

27:51.000 --> 27:52.000
I like that they're simple.

27:52.000 --> 27:55.000
And I was curious, in your estimation,

27:55.000 --> 28:00.000
is the Snap Store being controlled by Canonical a positive or a negative?

28:00.000 --> 28:01.000
No, I wish Canonical controlled more stuff.

28:01.000 --> 28:03.000
I'm the wrong guy to ask.

28:03.000 --> 28:04.000
Well, no, I don't think so.

28:04.000 --> 28:08.000
Because you're looking at it from a developer who wants to publish their software.

28:08.000 --> 28:11.000
And then you, I'm assuming, I don't want to speak for you,

28:11.000 --> 28:14.000
but I assume it's because then there's a company you can interface with.

28:14.000 --> 28:17.000
There are avenues to support.

28:17.000 --> 28:18.000
That is a thing.

28:18.000 --> 28:20.000
Like, to be honest, and this is such like a trivial thing,

28:20.000 --> 28:23.000
my biggest issue with desktop Linux as I use it today

28:23.000 --> 28:25.000
is that extensions kill GNOME constantly,

28:25.000 --> 28:28.000
which means I can't have nice things like changing browser backgrounds.

28:28.000 --> 28:30.000
I'm sorry, changing desktop backgrounds.

28:30.000 --> 28:32.000
Mm-hmm, which I love doing too.

28:32.000 --> 28:36.000
So I almost wish someone, I mean, I know the GNOME Foundation is huge,

28:36.000 --> 28:41.000
but I don't know, just as a pragmatic user who kind of doesn't have a dock

28:41.000 --> 28:46.000
in the GPL FOSS fight, I would rather stuff work

28:46.000 --> 28:52.000
and there be a vendor who you can call or even just email, right?

28:52.000 --> 28:54.000
It does feel different even on like a more surface level

28:54.000 --> 29:00.000
when you go to any of the documentation or the SnapCraft website.

29:00.000 --> 29:04.000
It feels very polished and you can tell there are people always thinking about it.

29:04.000 --> 29:06.000
And that's, with open source, I mean, that may be true,

29:06.000 --> 29:09.000
but when it's a volunteer basis, when it's community working together,

29:09.000 --> 29:12.000
sometimes there's not that same sort of top-down control

29:12.000 --> 29:15.000
that can provide a very polished, friendly appearance.

29:15.000 --> 29:19.000
I mean, I'm very impressed with the Flathub website

29:19.000 --> 29:21.000
and what that community has done.

29:21.000 --> 29:24.000
I mean, I'm using the hell out of Flatpaks on Fedora,

29:24.000 --> 29:27.000
and I may even, once everything's all set up,

29:27.000 --> 29:30.000
I may even give the edge, the user experience to the Flatpaks.

29:30.000 --> 29:31.000
Really?

29:30.000 --> 29:31.000
Yeah.

29:31.000 --> 29:32.000
How come?

29:32.000 --> 29:35.000
Well, once you're in, if you're willing to use the GUI,

29:35.000 --> 29:38.000
once you're in GNOME software, it's, well, same with Snaps.

29:38.000 --> 29:40.000
Really, it's all kind of abstracted.

29:40.000 --> 29:44.000
You don't really notice, but the one thing I feel about the difference

29:44.000 --> 29:48.000
with Flatpaks is I have had more consistent theme experience

29:48.000 --> 29:50.000
and faster launch times.

29:50.000 --> 29:53.000
I couldn't, I could not tell you, legitimately,

29:53.000 --> 29:56.000
on my computer that I use every single day,

29:56.000 --> 29:58.000
I couldn't tell you which applications are Flatpaks

29:58.000 --> 30:00.000
and which ones are from the repo,

30:00.000 --> 30:02.000
but I can tell you which ones are Snaps.

30:02.000 --> 30:05.000
But I still use them, but I can tell you which ones are the Snaps.

30:05.000 --> 30:07.000
Right, so it's not like it's a deal-breaker,

30:07.000 --> 30:09.000
but it is something you notice.

30:09.000 --> 30:12.000
So, but I think Mike represents bigger picture here.

30:12.000 --> 30:16.000
I think Mike represents what will be, if it's not already become,

30:16.000 --> 30:19.000
the vast, vast majority of Linux users.

30:19.000 --> 30:23.000
There is, there is really no, like, noob user

30:23.000 --> 30:28.000
that's going to understand that Windows is a piece of software

30:28.000 --> 30:30.000
that can be loaded and unloaded from a computer.

30:30.000 --> 30:33.000
Right, they don't even really have the concept of an operating system.

30:33.000 --> 30:35.000
I'm not making fun, like, it's just they don't care.

30:35.000 --> 30:37.000
You're not taught that if you haven't researched it.

30:37.000 --> 30:39.000
Yeah, they think it's part of the hardware.

30:39.000 --> 30:41.000
Right, there might be doctors that are geniuses,

30:41.000 --> 30:43.000
but they just don't care that the operating system

30:43.000 --> 30:45.000
is a changeable piece of software.

30:45.000 --> 30:48.000
And then on top of that, even if they did know you could change it,

30:48.000 --> 30:50.000
they'd have to know what Linux is.

30:50.000 --> 30:52.000
And they'd have to know what a Linux distribution is.

30:52.000 --> 30:54.000
And they'd have to be willing to format their computer

30:54.000 --> 30:56.000
and reload it and re-import their data.

30:56.000 --> 30:58.000
This type of new user I don't believe really exists.

30:58.000 --> 31:00.000
I think the newest user you kind of get is when

31:00.000 --> 31:04.000
someone who already runs Linux switches someone else to Linux.

31:04.000 --> 31:07.000
But people who are voluntarily switching to Linux are Mike,

31:07.000 --> 31:10.000
people like Mike, and system administrators,

31:10.000 --> 31:13.000
people in the IT field, that sector of the industry.

31:13.000 --> 31:16.000
Already interested and somewhat knowledgeable about computers.

31:16.000 --> 31:18.000
Know how to read Reddit, know how to use Google.

31:18.000 --> 31:20.000
Yeah, have some debugging skills.

31:20.000 --> 31:23.000
And be maybe even privileged enough to have multiple computers,

31:23.000 --> 31:27.000
so you can have a burner computer that you can load a new operating system on.

31:27.000 --> 31:30.000
This is the type of user that's switching to Linux.

31:30.000 --> 31:32.000
And I think that is a lot of developers.

31:32.000 --> 31:34.000
There's a lot of developers out there

31:34.000 --> 31:37.000
that are going to become the main user of Linux desktop.

31:37.000 --> 31:39.000
There's also, I think, maybe a third category.

31:39.000 --> 31:42.000
We have over here, people when I hire them,

31:42.000 --> 31:44.000
if they're not doing specifically Mac OS stuff,

31:44.000 --> 31:47.000
I do try to give them something like an S76

31:47.000 --> 31:50.000
or some other Linux computer because it's just a lot cheaper

31:50.000 --> 31:52.000
and I can upgrade them year over year

31:52.000 --> 31:57.000
instead of buying them another $2,000 laptop.

31:57.000 --> 32:01.000
And for support type workers, like customer service, things like that,

32:01.000 --> 32:04.000
having an intuitive way to install little applications,

32:04.000 --> 32:08.000
or dare I say applets, small apps,

32:08.000 --> 32:12.000
just getting an account rep to use aptitude or apt-get,

32:12.000 --> 32:14.000
whatever the current name is,

32:14.000 --> 32:20.000
is completely a non-starter, at least in my mind.

32:20.000 --> 32:24.000
But having them open the elementary store or the pop shop

32:24.000 --> 32:26.000
or the Ubuntu store is super easy.

32:26.000 --> 32:30.000
And even writing a batch script for them that does a couple snap installs,

32:30.000 --> 32:32.000
super easy, right?

32:32.000 --> 32:34.000
I can't disagree with that at all.

32:34.000 --> 32:37.000
And I think what the weird thing that's going to happen is,

32:37.000 --> 32:42.000
that type of user, that user base, likes there to be someone in charge.

32:42.000 --> 32:48.000
I would argue that Mike appreciates that there are employees at Canonical

32:48.000 --> 32:51.000
where their employment status and performance status

32:51.000 --> 32:55.000
is based on how certain things perform like snaps.

32:55.000 --> 32:58.000
There's nobody really doing that in the different communities

32:58.000 --> 33:00.000
for other package managers.

33:00.000 --> 33:02.000
If you think about it, that means there's people

33:02.000 --> 33:04.000
where their job is on the line to make this thing a success.

33:04.000 --> 33:06.000
There's a certain level of investment they can take.

33:06.000 --> 33:11.000
And that is a level of insurance that people in the sort of dev,

33:11.000 --> 33:14.000
sysadmin, you know, regular user category like.

33:14.000 --> 33:19.000
What's ironic is people are leaning far to the free software side.

33:19.000 --> 33:21.000
That's the antithesis of the things they like.

33:21.000 --> 33:23.000
They want anyone to be able to control it.

33:23.000 --> 33:25.000
They don't want centralized control.

33:25.000 --> 33:27.000
Which does have a certain benefit, right?

33:27.000 --> 33:30.000
If Canonical decides that they no longer want to pursue investing in snap program.

33:30.000 --> 33:34.000
And this is why there's a place for flat packs, app images, and snaps.

33:34.000 --> 33:37.000
Because there is a market for each of them to address.

33:37.000 --> 33:41.000
And I think snaps particularly address the mic type market.

33:41.000 --> 33:44.000
And I think that's really exciting because that is the type of market

33:44.000 --> 33:45.000
that is creating software.

33:45.000 --> 33:48.000
That's going to be shipping software on multiple platforms.

33:48.000 --> 33:50.000
And that means more software for all of us.

33:50.000 --> 33:51.000
They have a product to ship.

33:51.000 --> 33:53.000
They just need something easy to do.

33:53.000 --> 33:54.000
They want support.

33:54.000 --> 33:56.000
And it is interesting when you talk about the business relationship.

33:56.000 --> 33:57.000
Yeah, right.

33:57.000 --> 34:00.000
If mic is working hard and putting money on the line,

34:00.000 --> 34:02.000
investing and using the snap technology,

34:02.000 --> 34:05.000
it's good to know that the other party is similarly invested.

34:05.000 --> 34:08.000
So let me ask you a question because you guys are more false faithful than I am

34:08.000 --> 34:09.000
in that I'm not.

34:09.000 --> 34:12.000
I'm going to get a lot of great Reddit comments this week.

34:12.000 --> 34:14.000
Isn't it a good thing, right?

34:14.000 --> 34:16.000
Like isn't this just a sign that desktop –

34:16.000 --> 34:18.000
and I specifically mean desktop Linux.

34:18.000 --> 34:22.000
But like now that I could call Dell literally when we get off the line here

34:22.000 --> 34:24.000
and order a Sputnik XPS.

34:24.000 --> 34:28.000
Or I could call, you know, Emmet System 76 and get –

34:28.000 --> 34:29.000
who knows?

34:29.000 --> 34:31.000
Whatever they make, I'm probably going to buy it anyway

34:31.000 --> 34:32.000
because that's my role.

34:32.000 --> 34:34.000
We love you, Mike.

34:34.000 --> 34:39.000
Pre-installed and within an hour of me just like loading a few applications,

34:39.000 --> 34:44.000
I can have a completely functional development or support workstation

34:44.000 --> 34:47.000
for an employee at an engineering company, right,

34:47.000 --> 34:50.000
with a software engineering company where I would –

34:50.000 --> 34:51.000
and I'm going to go on a limp here.

34:51.000 --> 34:53.000
I would say like six years ago,

34:53.000 --> 34:55.000
my only option was to drive to the Apple store,

34:55.000 --> 35:00.000
buy them a Mac and pay, you know, several hundred dollars more at least,

35:00.000 --> 35:02.000
and probably get a lower spec machine.

35:02.000 --> 35:04.000
I mean, there were Linux machines, but they just –

35:04.000 --> 35:05.000
it wasn't what they are today.

35:05.000 --> 35:06.000
No, not at all.

35:06.000 --> 35:08.000
I mean, it was all compromise.

35:08.000 --> 35:10.000
Right, and not that prepackaged experience, right,

35:10.000 --> 35:12.000
where there's a vendor you can call and say,

35:12.000 --> 35:16.000
hey, you know, I blew something up, right?

35:16.000 --> 35:19.000
Hey, now, System 76 has been around for like 11 years.

35:19.000 --> 35:23.000
I don't – but you know, it's funny because there was that period of time,

35:23.000 --> 35:26.000
looking back at it now, where it was like we kind of had an XP moment

35:26.000 --> 35:29.000
where a lot of corporate desktops were shipping with like one –

35:29.000 --> 35:30.000
or something like that.

35:30.000 --> 35:31.000
Yeah.

35:31.000 --> 35:33.000
And now we've kind of – we've kind of entered a new period

35:33.000 --> 35:35.000
where everybody's using Gnome Shell.

35:35.000 --> 35:36.000
It's not true.

35:36.000 --> 35:37.000
Some people use SUSE.

35:37.000 --> 35:38.000
That's true.

35:38.000 --> 35:39.000
No, I'm saying not everybody,

35:39.000 --> 35:42.000
but like all the enterprise applications and desktops that ship,

35:42.000 --> 35:43.000
which is good.

35:43.000 --> 35:44.000
I think it's going to be a good thing.

35:44.000 --> 35:47.000
Why has no one fixed the if an extension blows up in Gnome Shell,

35:47.000 --> 35:48.000
the whole thing goes down?

35:48.000 --> 35:50.000
It's probably a deep architectural change, right?

35:50.000 --> 35:51.000
Oh, yeah, for sure.

35:51.000 --> 35:54.000
So that's like a flaw deep in the low level.

35:54.000 --> 35:56.000
Part and parcel of the single threaded business.

35:56.000 --> 35:57.000
Yeah.

35:57.000 --> 35:58.000
Do you want to explain that at all?

35:58.000 --> 36:00.000
We've talked about it on Linux Unplugged.

36:00.000 --> 36:04.000
It's essentially – it's all a single thread.

36:04.000 --> 36:05.000
It's all one process.

36:05.000 --> 36:10.000
The mutter, the desktop, the extensions,

36:10.000 --> 36:14.000
the JavaScript engine that renders the Gnome Shell interface,

36:14.000 --> 36:16.000
it's all one process.

36:16.000 --> 36:20.000
And so if any part of it crashes, the desktop restarts.

36:20.000 --> 36:24.000
And what's even more brilliant and scary is in the Wayland future,

36:24.000 --> 36:27.000
it will also be the display server.

36:27.000 --> 36:30.000
So your entire display goes down,

36:30.000 --> 36:34.000
which is why Canonical has opted to continue to ship X in their LTS release

36:34.000 --> 36:35.000
because –

36:35.000 --> 36:36.000
It crashes better.

36:36.000 --> 36:38.000
I mean, just the way it separated.

36:38.000 --> 36:39.000
It crashes better.

36:39.000 --> 36:40.000
That's the way to put it.

36:40.000 --> 36:44.000
The Linux desktop, it crashes better.

36:44.000 --> 36:46.000
I think we have a show title on that one.

36:46.000 --> 36:47.000
It crashes better.

36:47.000 --> 36:48.000
Yeah.

36:48.000 --> 36:51.000
So that's why – not to belabor this,

36:51.000 --> 36:53.000
but I think workflow and tools are pretty important.

36:53.000 --> 36:56.000
That's why I spent about a year on Plasma.

36:56.000 --> 36:57.000
Hey, I'm still there.

36:57.000 --> 36:58.000
Yeah, and it's really good.

36:58.000 --> 37:00.000
Our studio machine over there is still on it.

37:00.000 --> 37:05.000
But I've recently switched to XFCE just simply because I like GTK applications.

37:05.000 --> 37:10.000
I just want as least – I just want the little desktop I need around it.

37:10.000 --> 37:11.000
I need a file manager.

37:11.000 --> 37:12.000
I need some launchers.

37:12.000 --> 37:13.000
I need like a taskbar.

37:13.000 --> 37:15.000
I need a clock.

37:15.000 --> 37:17.000
And that's all I want, and that's what XFCE is.

37:17.000 --> 37:19.000
Super, super minimal.

37:19.000 --> 37:20.000
GTK.

37:20.000 --> 37:23.000
And that is rock solid.

37:23.000 --> 37:24.000
Rock solid.

37:24.000 --> 37:28.000
Like it uses – it sips the RAM and it just runs and runs and runs.

37:28.000 --> 37:30.000
And they've done this crazy thing where different things are different processes.

37:30.000 --> 37:31.000
It's just – it's wild.

37:31.000 --> 37:33.000
How traditional.

37:33.000 --> 37:36.000
So can we continue the derail, just briefly talk about eGPUs?

37:36.000 --> 37:37.000
Oh, yes.

37:37.000 --> 37:40.000
I mean, I see you bouncing in your chair.

37:40.000 --> 37:41.000
Join me.

37:41.000 --> 37:42.000
Oh, I have.

37:42.000 --> 37:43.000
I have.

37:43.000 --> 37:45.000
So I have joined the eGPU cult.

37:45.000 --> 37:52.000
I got – I started – I dipped my toes in the water when I got the Lenovo eGPU dock.

37:52.000 --> 37:57.000
Now, this is something that I thought is kind of a slam dunk because I wanted an NVIDIA

37:57.000 --> 38:00.000
card because it's just what I have the most experience with.

38:00.000 --> 38:02.000
And I wanted it to be compatible with my ThinkPad.

38:02.000 --> 38:05.000
So if a Lenovo makes a GPU dock.

38:05.000 --> 38:06.000
Kind of guaranteed compatible, right?

38:06.000 --> 38:07.000
Should work, right?

38:07.000 --> 38:10.000
So I ordered that sucker, and sure enough, it does work.

38:10.000 --> 38:11.000
And it was pretty remarkable.

38:11.000 --> 38:14.000
I could even get it to accelerate the internal display of the laptop.

38:14.000 --> 38:19.000
Now, is this using that funky extra port thing, or is it just standard Thunderbolt?

38:19.000 --> 38:20.000
Straight up Thunderbolt 3.

38:20.000 --> 38:21.000
Nice.

38:21.000 --> 38:23.000
It's a USB-C style connector.

38:23.000 --> 38:26.000
And it also offers a dock, so it's powering the laptop as well.

38:26.000 --> 38:27.000
Right.

38:27.000 --> 38:30.000
So it's the only cable on my laptop, which is really cool.

38:30.000 --> 38:31.000
That's just fantastic.

38:31.000 --> 38:32.000
Yeah, it's really – it's so good.

38:32.000 --> 38:36.000
And then it has Ethernet, and it has three USB ports.

38:36.000 --> 38:40.000
It has a sound card, and it has a couple of display ports and HDMI.

38:40.000 --> 38:43.000
And then it's got a NVIDIA – like, I think it's really not that great.

38:43.000 --> 38:48.000
It's like a – maybe a 1060 mobile in there.

38:48.000 --> 38:49.000
Right.

38:49.000 --> 38:51.000
It's not super fancy, but a big step up from integrated graphics.

38:51.000 --> 38:53.000
Yeah, integrated graphics built in.

38:53.000 --> 38:56.000
And so that's where I dipped my toes, and it felt liberating.

38:56.000 --> 39:00.000
All of a sudden, to be able to have, like, this laptop that has nine hours of battery life

39:00.000 --> 39:04.000
and all open source graphics, and then I plug in this thing,

39:04.000 --> 39:07.000
and I get remarkable performance on this tiny little machine.

39:07.000 --> 39:15.000
But Linux isn't super great at having a GPU just disappear.

39:15.000 --> 39:16.000
First of all, you have to power cycle.

39:16.000 --> 39:20.000
But second of all, even after you power cycle, sometimes when it powers back up,

39:20.000 --> 39:24.000
the – something in the stack goes crazy looking for the missing components.

39:24.000 --> 39:25.000
It's like, what?

39:25.000 --> 39:28.000
Why don't I have all these NVIDIA things installed if I don't have –

39:28.000 --> 39:30.000
and I know I have this module here.

39:30.000 --> 39:31.000
Like, what's going on?

39:31.000 --> 39:32.000
I've built this module.

39:32.000 --> 39:33.000
What's happening?

39:33.000 --> 39:34.000
And it just sits there and freaks out.

39:34.000 --> 39:39.000
And eventually, after about a couple of hours, one of the cores of the machine will –

39:39.000 --> 39:43.000
and the fan will be kicking up – will be completely pegged as it's searching for the missing NVIDIA card.

39:43.000 --> 39:45.000
So I thought, there's got to be a better way to do this.

39:45.000 --> 39:46.000
It's like a wounded animal.

39:46.000 --> 39:52.000
Once I cracked this problem, the floodgates of eGPU heaven opened up,

39:52.000 --> 39:53.000
and it is changing my life.

39:53.000 --> 39:55.000
And I'm not exaggerating when I say that.

39:55.000 --> 39:58.000
It is changing the way I test software.

39:58.000 --> 40:00.000
It's changing the way I test operating systems.

40:00.000 --> 40:03.000
It's changing everything about my workflow.

40:03.000 --> 40:05.000
I am so happy.

40:05.000 --> 40:06.000
So I've got to share this with you.

40:06.000 --> 40:08.000
This is sounding more and more like a legit cult.

40:08.000 --> 40:09.000
This is really great.

40:09.000 --> 40:16.000
So what I realized is the way you do virtualization PCI pass-through is you essentially –

40:16.000 --> 40:20.000
you find these PCI devices, and you dedicate them to the VM,

40:20.000 --> 40:23.000
and you blacklist them from the host operating system.

40:23.000 --> 40:24.000
Right.

40:24.000 --> 40:25.000
So they're the only one.

40:25.000 --> 40:26.000
They don't fight over it.

40:26.000 --> 40:27.000
Right.

40:27.000 --> 40:29.000
And then you go and you configure your VM, and you say, go grab these PCI devices.

40:29.000 --> 40:30.000
They're all yours.

40:30.000 --> 40:31.000
Have at it.

40:31.000 --> 40:35.000
Once you've done that, it's kind of depending on the device.

40:35.000 --> 40:37.000
There's a couple other things you have to mess around with.

40:37.000 --> 40:41.000
But once you've done that, you essentially have these devices dedicated to a virtual machine.

40:41.000 --> 40:44.000
And I thought, well, you know what would be pretty great?

40:44.000 --> 40:46.000
Why don't I dedicate the entire dock?

40:46.000 --> 40:52.000
So my dock with its USB ports, its sound card, its Ethernet, its GPU –

40:52.000 --> 40:55.000
It's almost like a separate motherboard you're jacking in there.

40:55.000 --> 40:56.000
Exactly.

40:56.000 --> 40:57.000
Exactly.

40:57.000 --> 40:58.000
Wow.

40:58.000 --> 41:00.000
Let me tell you, Wes, game changer.

41:00.000 --> 41:08.000
Because now I'm using a real, physical, mechanical keyboard.

41:08.000 --> 41:10.000
I'm using a full-size gaming mouse.

41:10.000 --> 41:16.000
I've got a 2K screen hooked up to this thing, and it's hooked up to the gigabit Ethernet.

41:16.000 --> 41:20.000
I've got big desktop speakers plugged into it.

41:20.000 --> 41:21.000
It's a full computer.

41:21.000 --> 41:24.000
And what you can do, because they're VMs, is you can clone them.

41:24.000 --> 41:27.000
So I built one, and then I've cloned it multiple times.

41:27.000 --> 41:31.000
So I've got a Win 10 version, and I've got an Ubuntu version.

41:31.000 --> 41:34.000
I've got a testing one that I can blow away for testing.

41:34.000 --> 41:37.000
Oh, yeah, for doing distro reviews or just testing some software.

41:37.000 --> 41:40.000
Wes Payne, I have used virtual machines since the 90s.

41:40.000 --> 41:50.000
I have used a PowerPC Macintosh running virtual PC, emulating an Intel, running Windows 98.

41:50.000 --> 41:55.000
I'm telling you, I have had virtual machines where there was an Intel add-on card that you plug into the machine,

41:55.000 --> 41:57.000
and it uses that to virtualize.

41:57.000 --> 42:02.000
I have built up huge VMware infrastructures that were mirrored across multiple data centers.

42:02.000 --> 42:05.000
I have experienced with virtualization.

42:05.000 --> 42:08.000
I have never experienced performance like this in a VM.

42:08.000 --> 42:12.000
If you sat down, and I just had my laptop tucked off to the side, and you sat down and used that computer,

42:12.000 --> 42:15.000
you would use it all day long and have no idea it's a VM.

42:15.000 --> 42:17.000
You would never, you would never, you would never, you would never know.

42:17.000 --> 42:18.000
That's beautiful.

42:18.000 --> 42:19.000
Yes.

42:19.000 --> 42:24.000
I'm going to try to get the product for you for the show notes, because this is the eGPU to get.

42:24.000 --> 42:32.000
If you are going to build your own eGPU, there's a bunch of pre-built ones out there, but they're really expensive.

42:32.000 --> 42:36.000
Like Razer Core is a good one, but it's very, very expensive.

42:36.000 --> 42:40.000
This is kind of expensive because, you know, you have to buy it in components.

42:40.000 --> 42:44.000
But I got the Mantis Venus eGPU.

42:44.000 --> 42:46.000
Check this thing out.

42:46.000 --> 42:51.000
It has, first of all, an open PCI slot, so I can put a much better video card in there.

42:51.000 --> 42:52.000
Oh, yes.

42:52.000 --> 42:56.000
Long story short, as soon as I started gaming, the docks started overheating and shutting down.

42:56.000 --> 42:58.000
So not really built for that.

42:58.000 --> 43:02.000
I made like this amazing breakthrough and started building up all these systems and started installing games

43:02.000 --> 43:04.000
because I thought, hey, let's make a gaming VM.

43:04.000 --> 43:06.000
Let's load it full of games, and then it starts crashing.

43:06.000 --> 43:08.000
But I wanted to go to AMD Graphics anyways.

43:08.000 --> 43:10.000
Oh, yeah, going on that side of the team.

43:10.000 --> 43:14.000
Yeah, yeah, because then I'm also going to build a Hackintosh VM.

43:14.000 --> 43:16.000
No, I was, okay, obviously that was lurking in the back of my mind.

43:16.000 --> 43:17.000
Oh, yeah, I'm going to do it.

43:17.000 --> 43:22.000
I'm going to have Windows 10, I'm going to have a Linux VM, and I'm going to have a Mac OS VM,

43:22.000 --> 43:25.000
and the host OS is Fedora 30 on my ThinkPad.

43:25.000 --> 43:26.000
That is beautiful.

43:26.000 --> 43:27.000
It is.

43:27.000 --> 43:28.000
I'll do a whole segment on it.

43:28.000 --> 43:32.000
I am so happy with everything you're saying, so I'm going to cry.

43:32.000 --> 43:33.000
It's so good.

43:33.000 --> 43:34.000
This is like Christmas.

43:34.000 --> 43:36.000
Check out this eGPU I got.

43:36.000 --> 43:43.000
First of all, it's got a 550-watt power supply in it, so it will deliver a full like 87 watts to the laptop.

43:43.000 --> 43:45.000
Again, single cable here.

43:45.000 --> 43:48.000
It's got gigabit Ethernet in the back of the thing.

43:48.000 --> 43:53.000
It's got three or two USB ports on the back, two USB ports on the front.

43:53.000 --> 43:57.000
So it is essentially, again, I'm going to be able to dedicate all of these to the VM.

43:57.000 --> 44:01.000
It's a full-fledged box, but here's the best part.

44:01.000 --> 44:07.000
I can't believe they did this, and I don't know any other eGPU enclosure that does this.

44:07.000 --> 44:15.000
Inside, they have a SSD slot, so you can mount an SSD inside the eGPU.

44:15.000 --> 44:16.000
Fantastic.

44:16.000 --> 44:20.000
Then you can put the VMs on that disk, and then I move that box around.

44:20.000 --> 44:23.000
I just have Vert Manager all set up on each host.

44:23.000 --> 44:24.000
I plug this thing in.

44:24.000 --> 44:28.000
I immediately get the graphics, and I've got all of the VM disks right there.

44:28.000 --> 44:30.000
You basically just need to plug in some compute.

44:30.000 --> 44:31.000
Wow.

44:31.000 --> 44:33.000
This is an interesting approach.

44:33.000 --> 44:36.000
I mean, it's kind of like having six machines in one.

44:36.000 --> 44:37.000
And you wouldn't know you're not.

44:37.000 --> 44:39.000
You would not know you're on a VM.

44:39.000 --> 44:43.000
You wouldn't know, because it has full GPU performance.

44:43.000 --> 44:48.000
You're using whatever keyboard you want, whatever mouse you want, whatever screen you want.

44:48.000 --> 44:50.000
This is the Thunderbolt dream come to life.

44:50.000 --> 44:51.000
It's so good.

44:51.000 --> 44:52.000
It's so good.

44:52.000 --> 44:53.000
It's great.

44:53.000 --> 44:55.000
So I'm going to set it up here at the studio.

44:55.000 --> 44:56.000
I'm going to set it up on my laptop.

44:56.000 --> 44:57.000
I can move it between.

44:57.000 --> 45:01.000
Now, I imagine it might kind of mess with those stale, funky OSes like Windows,

45:01.000 --> 45:05.000
but you could then use the Linux VMs when you're not even around the dock, too.

45:05.000 --> 45:08.000
And here is also the best part.

45:08.000 --> 45:11.000
Now I don't have any funky proprietary drivers on the host OS.

45:11.000 --> 45:13.000
So it's all Intel stack.

45:13.000 --> 45:14.000
That's nice.

45:14.000 --> 45:16.000
So no weird graphics driver issues.

45:16.000 --> 45:17.000
Everything sleeps fine.

45:17.000 --> 45:19.000
I have great battery life.

45:19.000 --> 45:23.000
All the proprietary garbage is in the VMs.

45:23.000 --> 45:24.000
That's a great way to do it.

45:24.000 --> 45:25.000
Wow.

45:25.000 --> 45:27.000
It's the best Linux desktop setup I have ever had,

45:27.000 --> 45:30.000
because you have the bulletproof open source stack,

45:30.000 --> 45:32.000
but you still get all the proprietary goodies, man.

45:32.000 --> 45:33.000
Yeah, you can game in there.

45:33.000 --> 45:34.000
Do whatever you need.

45:34.000 --> 45:35.000
I know.

45:35.000 --> 45:36.000
It's so good.

45:36.000 --> 45:38.000
And I really don't like Windows.

45:38.000 --> 45:41.000
That's the only thing I realized is I was setting up Windows, setting it up,

45:41.000 --> 45:43.000
and I'm like, I don't like using this.

45:43.000 --> 45:45.000
And it took me like two days, three days,

45:45.000 --> 45:47.000
because there are so many updates and stuff,

45:47.000 --> 45:50.000
and I was learning how to reuse Windows and set up the VM.

45:50.000 --> 45:53.000
In one evening, I got Ubuntu 19.04 installed with Steam and all the games.

45:53.000 --> 45:54.000
So much easier.

45:54.000 --> 45:55.000
Boom.

45:55.000 --> 45:58.000
Windows is at least better in a VM, because you can snapshot and clone it.

45:58.000 --> 46:00.000
I want to play around with WSL 2,

46:00.000 --> 46:02.000
and I want to play around with a new terminal and stuff.

46:02.000 --> 46:03.000
I don't want to be ignorant about it.

46:03.000 --> 46:04.000
But now I've got a nice safe space.

46:04.000 --> 46:06.000
In fact, this is the best way to use Windows, honestly,

46:06.000 --> 46:10.000
because, again, I'd say it's 95% physical performance.

46:10.000 --> 46:11.000
It's so great.

46:11.000 --> 46:14.000
It's a great way to use Windows, and you've got snapshots.

46:14.000 --> 46:16.000
It doesn't have to touch a real hardware.

46:16.000 --> 46:17.000
I am so in.

46:17.000 --> 46:19.000
So I've watched Mike for a little bit, because Mike got a nice box.

46:19.000 --> 46:21.000
Oh, and here's the other thing about that Mantis.

46:21.000 --> 46:27.000
The Mantis is using the same controller and USB controller as the Razer.

46:27.000 --> 46:29.000
So the Razer products are pretty good,

46:29.000 --> 46:32.000
and this is using the same hardware inside that the Razer boxes are.

46:32.000 --> 46:35.000
With a little more space, a little more power supply,

46:35.000 --> 46:37.000
and, of course, that Gigabit Ethernet, the USB hub,

46:37.000 --> 46:42.000
and that hard drive slot, it's the perfect VM box.

46:42.000 --> 46:44.000
I'll grant you, it's a lot of hardware to carry around

46:44.000 --> 46:45.000
to have a good VM experience.

46:45.000 --> 46:48.000
It's a little ridiculous, because there are ways to do it

46:48.000 --> 46:52.000
with like virtual NVIDIA GPU sharing and whatnot, all in one box.

46:52.000 --> 46:55.000
But to me, with my history of VMs

46:55.000 --> 46:57.000
and the things that I have experienced in the past

46:57.000 --> 47:00.000
to get decent virtualization, this doesn't feel like a compromise.

47:00.000 --> 47:01.000
This feels like a gift.

47:01.000 --> 47:02.000
So I'm happy to carry it around.

47:02.000 --> 47:04.000
I'm going to get like a bag.

47:04.000 --> 47:05.000
I might even travel with it.

47:05.000 --> 47:07.000
I'm so dang happy.

47:07.000 --> 47:11.000
You know, it makes me think we could use this for some studio things, too.

47:11.000 --> 47:12.000
I think you just plug it in.

47:12.000 --> 47:15.000
Maybe it's got a VM for run, all the things here.

47:15.000 --> 47:16.000
You could, couldn't you?

47:16.000 --> 47:17.000
Yeah.

47:17.000 --> 47:18.000
Oh, yeah.

47:18.000 --> 47:20.000
You could put all the stuff that's on our Reaper machine here.

47:20.000 --> 47:21.000
It could be in a VM.

47:21.000 --> 47:25.000
Boy, I was kind of debating building like a big, beefy Linux desktop

47:25.000 --> 47:27.000
and put a nice graphics card in it,

47:27.000 --> 47:29.000
but I think I might just have to go this way.

47:29.000 --> 47:30.000
It's so nice.

47:30.000 --> 47:33.000
It's amazing what you'll get out of that ThinkPad.

47:33.000 --> 47:35.000
It's totally different because you have the same exact machine.

47:35.000 --> 47:36.000
Right.

47:36.000 --> 47:37.000
It's a totally different experience.

47:37.000 --> 47:38.000
It's mind-blowing.

47:38.000 --> 47:40.000
Even if you just use it to accelerate the internal screen,

47:40.000 --> 47:43.000
which then you've got to mess with the drivers and stuff.

47:43.000 --> 47:45.000
So, Mike, how does that sound to you?

47:45.000 --> 47:47.000
I mean, how's things in your setup?

47:47.000 --> 47:49.000
This is my jam now.

47:49.000 --> 47:50.000
This is your fault.

47:50.000 --> 47:51.000
This is all on you.

47:51.000 --> 47:52.000
This is my fault.

47:52.000 --> 47:56.000
I've got to say, Chris, you took it several steps further than I did.

47:56.000 --> 48:04.000
Yeah, I can't imagine, and in a week I'll probably buy a Mac Pro,

48:04.000 --> 48:06.000
but I can't imagine buying another desktop now

48:06.000 --> 48:08.000
because you can always slot out a new card in your eGPU.

48:08.000 --> 48:10.000
And if you have a system like the Mantis here

48:10.000 --> 48:14.000
where it's actually your USB dock, one cable in, that's fantastic.

48:14.000 --> 48:15.000
And what?

48:15.000 --> 48:17.000
I mean, this thing, it's like $300 right now?

48:17.000 --> 48:19.000
Yeah, I mean, you do have to get your own video card too.

48:19.000 --> 48:20.000
Sure, of course.

48:20.000 --> 48:22.000
Which, you know, that's good and bad.

48:22.000 --> 48:24.000
I think long-term it's good.

48:24.000 --> 48:26.000
Yeah, a little more expensive up front, but you have choice, freedom,

48:26.000 --> 48:28.000
and you can change it out when you need to.

48:28.000 --> 48:33.000
Yeah, and there is some pretty decent video cards that are not a lot of money

48:33.000 --> 48:36.000
that are still way better than what the Intel graphics is doing.

48:36.000 --> 48:39.000
So you can, I mean, you don't have to get an $800 video card either.

48:39.000 --> 48:41.000
A $100 video card would be good.

48:41.000 --> 48:42.000
Yeah, totally.

48:42.000 --> 48:44.000
Start with something that's easy, and then you can upgrade from there.

48:44.000 --> 48:49.000
Unless you need to push 4K, then I understand, which I do not.

48:49.000 --> 48:52.000
Well, I'm buying one of those fancy new Apple stands.

48:52.000 --> 48:53.000
Not the monitor, just the stand.

48:53.000 --> 48:54.000
Just the stand, yeah.

48:54.000 --> 48:56.000
That has several K of pixels itself, don't you know?

48:56.000 --> 48:57.000
Oh, I didn't.

48:57.000 --> 48:58.000
No, it's good to know.

48:58.000 --> 48:59.000
I imagine.

48:59.000 --> 49:02.000
All stands must be $1,000 or more to be acceptable.

49:02.000 --> 49:06.000
So now how is running the Mac OS VM on Linux?

49:06.000 --> 49:12.000
I haven't done that yet, but I have seen it is happening more and more.

49:12.000 --> 49:13.000
It's becoming a thing.

49:13.000 --> 49:16.000
You better get it now before they stop running on the x86.

49:16.000 --> 49:21.000
Yeah, although in Catalina they're introducing DriverKit,

49:21.000 --> 49:24.000
and DriverKit is drivers in user space,

49:24.000 --> 49:28.000
which might actually be an enabler for the Hackintosh community.

49:28.000 --> 49:31.000
I don't know, but if there is a developer spec they can follow,

49:31.000 --> 49:33.000
and there's a way to run user space drivers.

49:33.000 --> 49:34.000
You're right.

49:34.000 --> 49:37.000
I mean, that might be certainly more flexible than all the, you know,

49:37.000 --> 49:39.000
hacky K extension hacking that's going on now.

49:39.000 --> 49:40.000
Yeah, well, they're locking that stuff down, too.

49:40.000 --> 49:41.000
Exactly.

49:41.000 --> 49:42.000
They're really locking that down now.

49:42.000 --> 49:44.000
In Catalina, the system partitions read-only.

49:44.000 --> 49:46.000
They do APFS magic, baby.

49:46.000 --> 49:47.000
Whoop.

49:47.000 --> 49:49.000
Slicing it up, making it secure.

49:49.000 --> 49:52.000
They're doing that, interestingly, in a time where there's a few Linux

49:52.000 --> 49:54.000
distributions that are also doing that same approach.

49:54.000 --> 49:56.000
It seems like maybe it's a sound strategy,

49:56.000 --> 49:58.000
maybe something we should play with sometime.

49:58.000 --> 50:00.000
Oh, oh, oh, oh, foreshadowing.

50:00.000 --> 50:01.000
Yeah.

50:01.000 --> 50:03.000
Maybe we could make a little project on make your own read-only system

50:03.000 --> 50:05.000
or something.

50:05.000 --> 50:08.000
Well, Mr. Dominic, thanks for letting me crash the party today.

50:08.000 --> 50:09.000
Oh, I loved it.

50:09.000 --> 50:10.000
It was great.

50:10.000 --> 50:13.000
And thank you for joining the cult, the eGPU cult.

50:13.000 --> 50:14.000
I know.

50:14.000 --> 50:15.000
I'm going to succumb sooner or later.

50:15.000 --> 50:18.000
Now, wasn't it, it was just a few weeks ago that,

50:18.000 --> 50:21.000
I can't remember, but I remember you were running a contest for Earth Day

50:21.000 --> 50:22.000
recently.

50:22.000 --> 50:27.000
Yeah, we were running an Earth Day contest for students to basically pitch

50:27.000 --> 50:31.000
and do a little bit of kind of like pre-development documentation and maybe

50:31.000 --> 50:35.000
a little dev on a false solution to climate change.

50:35.000 --> 50:38.000
We got a lot of submissions, and we finally have a winner.

50:38.000 --> 50:43.000
Kyler Chin out of California is getting a System76 Galago Pro.

50:43.000 --> 50:44.000
Congratulations.

50:44.000 --> 50:45.000
That's awesome.

50:45.000 --> 50:47.000
What was the winning entry?

50:47.000 --> 50:51.000
Basically, AI, TensorFlow-powered AI resource management.

50:51.000 --> 50:52.000
That's amazing.

50:52.000 --> 50:53.000
Wow.

50:53.000 --> 50:54.000
Actually, I could see that.

50:54.000 --> 50:56.000
Yeah, it's actually very practical.

50:56.000 --> 50:59.000
Yeah, even just some intelligent resource management can make a huge difference.

50:59.000 --> 51:00.000
I hadn't really thought about that.

51:00.000 --> 51:03.000
There is a place for FOSS and technology and software

51:03.000 --> 51:04.000
to make a big difference there.

51:04.000 --> 51:06.000
I will say it looked like a pretty sweet machine, too.

51:06.000 --> 51:08.000
You had the specs posted up on your Twitter feed.

51:08.000 --> 51:09.000
Oh, yeah, look at that.

51:09.000 --> 51:10.000
And that's no slouch.

51:10.000 --> 51:11.000
Holy smokes.

51:11.000 --> 51:12.000
Holy smokes.

51:12.000 --> 51:13.000
All right, so of course you got it installed with Pop!

51:13.000 --> 51:14.000
OS.

51:14.000 --> 51:15.000
That's how it rolls.

51:15.000 --> 51:16.000
Naturally.

51:16.000 --> 51:17.000
It's got 3.9 gigahertz.

51:17.000 --> 51:18.000
Wow.

51:18.000 --> 51:24.000
The 3.9 gigahertz with eight threads, 16 gigs of RAM, 240 gigabyte disk.

51:24.000 --> 51:25.000
Nice.

51:25.000 --> 51:26.000
Nice.

51:26.000 --> 51:27.000
Oh, look at you.

51:27.000 --> 51:30.000
Even getting the LCD recycling in there.

51:30.000 --> 51:31.000
Look at you.

51:31.000 --> 51:32.000
I'm a full hippie.

51:32.000 --> 51:33.000
And you went 1904 with Pop!

51:33.000 --> 51:34.000
OS.

51:34.000 --> 51:37.000
And of course, it's the 14-inch 1080p display.

51:37.000 --> 51:39.000
Because matte's the only way to go.

51:39.000 --> 51:41.000
That's one functional laptop right there.

51:41.000 --> 51:42.000
Yeah.

51:42.000 --> 51:44.000
Yeah, that's a nice upgrade on the RAM there.

51:44.000 --> 51:45.000
Very nice.

51:45.000 --> 51:46.000
Very nice.

51:46.000 --> 51:47.000
Congratulations.

51:47.000 --> 51:48.000
Kyler, huh?

51:48.000 --> 51:49.000
Kyler.

51:49.000 --> 51:50.000
Kyler Chen, yeah.

51:50.000 --> 51:51.000
Congratulations, Mike.

51:51.000 --> 51:52.000
I think that was a great thing.

51:52.000 --> 51:53.000
That's really good on you.

51:53.000 --> 51:54.000
Look at that.

51:54.000 --> 51:55.000
Yeah.

51:55.000 --> 51:56.000
Mad Botter is doing their part.

51:56.000 --> 51:57.000
We're doing our part.

51:57.000 --> 52:02.160
You can find links to really, I think, all of that, right, over at coder.show slash 362.

52:02.160 --> 52:04.360
And check out the Mad Botter Inc. on Twitter as well.

52:04.360 --> 52:07.000
You can check the – Mike tweeted the specs over there, right?

52:07.000 --> 52:09.000
Is that where he tweeted it?

52:09.000 --> 52:10.000
That's right.

52:10.000 --> 52:11.000
Yep.

52:11.000 --> 52:14.280
Also, we should mention, if you're looking for work, Linux Academy is hiring.

52:14.280 --> 52:16.560
They are hiring developers as well as other positions.

52:16.560 --> 52:19.480
Some of them – most of them are remote work from home, too.

52:19.480 --> 52:20.480
So –

52:20.480 --> 52:21.480
And it's used in technologies.

52:21.480 --> 52:23.920
You've probably heard of things like Node.js and Ruby on Rails.

52:23.920 --> 52:24.920
Yep.

52:24.920 --> 52:25.920
Yep.

52:25.920 --> 52:26.920
Check it out.

52:26.920 --> 52:27.920
LinuxAcademy.com.

52:27.920 --> 52:29.280
If you scroll around the site, or you can go to LinuxAcademy.com slash careers, it links

52:29.280 --> 52:31.440
you to a lever page where they are all listed.

52:31.440 --> 52:32.440
Go over there.

52:32.440 --> 52:35.600
And in there, when you apply, a little pro tip.

52:35.600 --> 52:37.120
Let them know you heard about it here.

52:37.120 --> 52:38.120
Ooh.

52:38.120 --> 52:42.440
That probably improves your chances, I would imagine, because they're going to be more

52:42.440 --> 52:45.200
motivated to hire people that listen to podcasts like this.

52:45.200 --> 52:46.200
That's a real thing.

52:46.200 --> 52:49.840
I mean, if you've been listening to all of Mike's wisdom for all these years, you know

52:49.840 --> 52:51.200
what you're talking about at this point.

52:51.200 --> 52:53.800
It shows genuine, like, passion.

52:53.800 --> 52:56.800
For Objective-C, yeah.

52:56.800 --> 53:00.000
Oh, man.

53:00.000 --> 53:01.560
Never going to go away.

53:01.560 --> 53:02.560
Never going to live that down.

53:02.560 --> 53:04.520
No Objective-C forever.

53:04.520 --> 53:08.240
Just always gives me flashbacks of that post-WWDC episode we did.

53:08.240 --> 53:10.240
Just every time you do it, it gives me flashbacks.

53:10.240 --> 53:14.280
I don't know what the individual episode numbers are, but I have a feeling that one did pretty

53:14.280 --> 53:15.280
well.

53:15.280 --> 53:16.280
Yeah.

53:16.280 --> 53:18.880
I would imagine by now, people have figured it out and listened.

53:18.880 --> 53:23.080
That was a great example of Chris trying to go with the flow and just try to keep the

53:23.080 --> 53:25.040
show on the rails as much as possible.

53:25.040 --> 53:26.040
Yeah.

53:26.040 --> 53:27.040
Not my finest hour.

53:27.040 --> 53:28.040
Oh.

53:28.040 --> 53:29.040
Not my finest hour either.

53:29.040 --> 53:30.040
Listen back.

53:30.040 --> 53:31.040
I seem so young.

53:31.040 --> 53:32.040
So unexperienced.

53:32.040 --> 53:33.040
Oh, child.

53:33.040 --> 53:35.200
That's what I say every time I hear it.

53:35.200 --> 53:37.360
We were wizened now, though.

53:37.360 --> 53:38.360
Seasoned is what I prefer.

53:38.360 --> 53:39.360
Seasoned indeed, yes.

53:39.360 --> 53:42.120
Like an ice cast iron pan.

53:42.120 --> 53:43.120
Oh, thanks.

53:43.120 --> 53:44.400
Thanks at last.

53:44.400 --> 53:46.000
I think that's a compliment.

53:46.000 --> 53:47.000
I'm not really sure.

53:47.000 --> 53:48.000
Yeah.

53:48.000 --> 53:52.480
You know, the show is live on a Monday, jblive.tv, jupiterbroadcasting.com slash calendar.

53:52.480 --> 53:54.320
There may be some prerecording.

53:54.320 --> 53:55.320
I don't know.

53:55.320 --> 53:57.240
At some point, Wes and I have to travel to Texas.

53:57.240 --> 53:58.240
Get to.

53:58.240 --> 53:59.240
We get to travel to Texas.

53:59.240 --> 54:00.240
Yes, we do adventure to Texas.

54:00.240 --> 54:01.240
Yeah.

54:01.240 --> 54:03.160
We're going to do a Texas adventure at the end of the month, but I don't know.

54:03.160 --> 54:04.720
Is that actually going to impact recording?

54:04.720 --> 54:07.520
I don't know if it actually will or not, but we'll chat offline.

54:07.520 --> 54:11.200
The reason why I bring it up on air is because I want to let you know, we do really love

54:11.200 --> 54:12.200
it when you join live.

54:12.200 --> 54:13.200
Oh, it's lots of fun.

54:13.200 --> 54:17.280
And you can get it in your time zone at jupiterbroadcasting.com slash calendar.

54:17.280 --> 54:20.920
Now, if you, you know, maybe you can't make it or you want a backup method to make sure

54:20.920 --> 54:25.040
you always get your Coder Radio, well, Coder Radio, we have an RSS feed.

54:25.040 --> 54:26.040
We have a way to subscribe.

54:26.040 --> 54:27.040
It's true.

54:27.040 --> 54:28.040
We're on all the apps.

54:28.040 --> 54:29.040
Coder.show slash subscribe.

54:29.040 --> 54:33.400
And that's probably, you know, probably we always lead with the live stream, but the

54:33.400 --> 54:39.560
reality is the vast, vast majority, like 99.9% are getting it on the RSS feed.

54:39.560 --> 54:40.720
And we appreciate that.

54:40.720 --> 54:44.480
So we have a Drew now, new full-time Jupiter Broadcasting member joined a couple of months

54:44.480 --> 54:45.480
ago.

54:45.480 --> 54:50.240
Uh, he, he, uh, brings it through the wash, cleans up, brings in Mike's local audio.

54:50.240 --> 54:54.160
So I think, I hope people have noticed it's been sounding phenomenal lately.

54:54.160 --> 54:56.160
I think Coder Radio has been sounding really great.

54:56.160 --> 54:58.800
And a big part of that is, uh, is thanks to Drew.

54:58.800 --> 54:59.800
He's a wizard.

54:59.800 --> 55:03.000
And of course, thanks to Mike for being willing to record the audio there locally, cause it's

55:03.000 --> 55:04.000
more hoops to jump through.

55:04.000 --> 55:05.000
Way more hoops.

55:05.000 --> 55:06.000
No worries.

55:06.000 --> 55:07.000
But, uh, now we're pro sounding.

55:07.000 --> 55:08.560
We're like, we're like getting up with NPR now.

55:08.560 --> 55:11.320
I mean, I don't want to brag, but I'm really proud of you guys.

55:11.320 --> 55:13.880
Planet Coder coming soon.

55:13.880 --> 55:18.280
If you want more Mr. Michael Dominic, and I know you do because, well, I do.

55:18.280 --> 55:20.080
You can find him on Twitter, Mike.

55:20.080 --> 55:21.080
You're at?

55:21.080 --> 55:22.080
At Dimenuco.

55:22.080 --> 55:23.080
Chris, you're there too.

55:23.080 --> 55:24.080
At Chris LAS.

55:24.080 --> 55:26.600
And I'm at Westpane.

55:26.600 --> 55:28.680
Thank you so much for joining us.

55:28.680 --> 55:30.320
Please come back next week.

55:30.320 --> 55:56.960
Hopefully see you then.

