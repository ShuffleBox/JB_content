This is KOTORadio, episode 423, recorded on July 16, 2021.
Hello friend and welcome in to Jupiter Broadcasting's weekly talk show, taking a pragmatic look
at the art and the business of software development and the world of technology.
This episode is brought to you by our friends at a cloud guru, you know, they now have that
cloud playground.
Mm hmm, Azure, AWS and Google Cloud sandboxes on ACG's credit card, not yours.
Get certified, get hired, get learning at a cloud guru.com.
My name is Chris and recording for a limited time.
It's our host from Florida, Mr. Dominic.
Hello, Mike.
Hello, Mr. Fisher.
How are you feeling?
Is everything all boxed up?
Are you like in reduced living mode right now?
Not yet, but this weekend is going to be a hell of a weekend boxing up and yeah, I hate
that.
I've been working so much.
If I was like big money, I would probably hire somebody to pack for me.
But you look at the cost of something like that, I just can't justify it.
It's it's crazy.
I actually looked at it.
I'm like, this is this is like spilling a drink on a MacBook a week.
Yeah, that is that should be a unit of accounting actually, now that I think about it.
Did you see Qualcomm this week was posting that they've got something in house that's
going to blow the pants off of the M1 and that they have plans to compete with Apple
Silicon in PCs.
Qualcomm's gonna save us.
They're gonna save us from our six color tyranny.
Okay.
Yeah, yeah, yeah.
Yeah, they're gonna come in here and they're gonna come in with chips that are gonna save
us by the end of 2021.
Maybe you know, depending on delays 2023.
I don't know, man, I just I guess I'm getting kind of bitter or cynical.
Maybe that's the way to put it bitter and cynical.
I've lost the faith in Qualcomm.
They've done me wrong.
I've I've had some systems.
I've had some phones that had Qualcomm chips and they're supposed to be screamers and they
just were pathetic.
We'll see if they do it.
I'm sure you'll get one though.
I have some consultation that I'm going to need from you later.
I'm gonna need you to walk me off of the ledge a little bit.
Oh boy.
But before we get there, we should probably get to some feedback because our discussion
around Copilot provoked some emails.
Yes.
Varatunda thinks that Microsoft has finally figured out how to kill open source with Copilot.
He says, I was listening to Coder 422 and your musings over Copilot.
He touched on the idea of licensing washing, but I don't know if you went far enough and
he links us to something that Software Conservancy wrote up.
Varatunda goes on to say discusses who is not in charge of open source and how responsibility
can be abdicated for a variety of reasons, and that the biggest threat to the GPL or
any free software license is actually just the enforcement of it.
For a licensed account, like a trademark, it has to be enforced rigorously.
So the real threat from Copilot is not just copying GPL code by mistake, but that copying
would be automated and wholesale and making it impossible to catch and impossible to enforce.
Suddenly you have thousands and thousands of products exploiting GPL code, but no resources
available to enforce those violations.
This is what has me worried.
If you wanted to kill open source, you don't have to kill the GPL, you just have to nullify
it.
Call me a cynic, but I have to say I'm genuinely worried that Microsoft has finally figured
out how to kill open source, not by extending or embracing it, though they seem to really
heart Linux, but by making it irrelevant because no one can enforce the license to make sure
the code remains free for everyone.
You don't need to kill the kernel if you can break all the tools that surround it with
impudence.
It could be a dark future.
I guess I have an even more sadly cynical view.
I think people are already ripping off the GPL left and right.
Sure.
Probably is happening quite a lot, right?
Even if they're just kind of using it to get ideas and then writing their own versions
of it.
It's probably happening, but this seems like it could be a whole new scale.
Right.
And so the idea here is that just the pure quantity, the pure scale of it would make
enforcement like Don financially viable.
I think so.
And then if you can't enforce the GPL, it essentially becomes worthless.
I mean, I don't know.
You know, I've never been a GPL hippie.
I kind of, I always wondered if people who have GPL software, if you find out someone's
using it and they're like a rinky dink, you know, they don't have any resources, whatever.
What are you really going to do about that?
Especially if you're a small shop.
Right.
It's like Microsoft is using your stuff.
Well, then you probably want to negotiate a license, get some money, but right.
But if you're a small shop and another small shop is using your code, like are you even
going to bother with the lawyer fees on that one?
I don't know.
Well, what if it's like an independent developer, like one guy or one gal?
Right.
You'd basically be choosing to wreck them, but of course they are choosing to violate
the license.
That's a tough call.
It doesn't feel like there's a good answer there.
Well, it doesn't feel like you'll make a return either.
Right.
Alexander writes in, he's disappointed in Copilot for a whole number of reasons.
After listening to the episode, he said he wanted to share his two cents.
He says, I'm a professional software developer, but I think I have a biased view probably
because of my experience, but I am disappointed in GitHub, Alexander writes.
And here's a number of reasons.
Number one, it has learned to code by observing code in open source projects.
You know, the code that's probably full of bugs and security vulnerabilities already,
but Copilot doesn't know that.
So it's just going to suggest happily a buggy implementation.
Number two, what about dependency management?
Let's say one tries to use Copilot for Python web development.
Now imagine that project solves two tasks, which are typically solved by two different
web frameworks.
Under normal circumstance, you'd choose a single framework and use it for both tasks.
But I suspect that Copilot will produce code using two different frameworks, which won't
play well together at all.
And then there's that licensing thing.
Number three, Copilot does not attribute the produced code.
So one may just unknowingly include code from, say, open JDK.
And I'm sure Oracle will be so understanding about that.
And number four, and he says this is probably my most biased point, but Copilot actually
tackles the most interesting and creative part of software development.
Why not have it focus on code review instead?
It'll be helpful to have a bot that finds code smells, inefficient implementations,
and a lack of test coverage for extreme cases.
Why not invent tools to automatically create reproducers from users' bug reports?
You know, like a bot that tries to find the best minimal number of steps to reproduce
a bug.
That, that would be invaluable.
Why not tackle automatic issue triaging?
Summing it all up, surely professional developers are not going to use this in an existing project.
Surely the non-professional developers won't use this in a new project.
And the hobbyist developers, well, you're going to find them just constantly reviewing
code instead of writing it.
And for newbie developers, well, absolutely not.
You just entered the field, having a tool that produces a stream of bugs that you'll
spend days trying to figure out is unhelpful, and it's even demotivating.
There has to be something different out there, and Copilot still requires developer input.
So I think it's not a good product.
It's a good scientific experiment in machine learning, and I suppose it's that, but it's
not a product.
I'm afraid it's yet another instance of we built it because we can, but we didn't think
if we should.
Thanks and sorry for the rant, Alexander.
I'm just having a hard time getting my hackles up about this Copilot thing.
Some people definitely are though.
Yeah.
You know, they're upset.
Yeah, it's interesting.
It is to me, because what I'm trying to do is I'm trying to take the input from the audience
and be like, okay, is this a big concern?
And I think they're starting to turn my opinion, but I'm still not super riled up about it.
Okay, so what is turning your opinion from last week?
That's probably a great way to take this.
Well, I really liked what Alexander just said there.
Like, wouldn't it have been so much more useful if it was doing code review or if it could
help automate reproducing user bug reports?
Imagine how actually useful that would be for just about all developers.
Yeah, but that's a harder sell.
Code review often includes things like style and following, you know, whatever the internal
methodology at your organization.
How could a Copilot do that in a generic way?
Yeah, it'd have to be tuned for each.
Yeah, you're right.
That would be tricky.
Mm hmm.
Yeah.
Yeah.
I think they are starting to convince me, though, that it's it's sort of a misconceived
science experiment and not so much a product.
That's sort of where I'm shifting there.
And I do kind of see Varitunda's point about potentially enabling license washing at like
a massive scale.
And that that seems like that could be an issue.
But that's one of those that we just won't know if it's a real problem until we're a
year down the road.
I mean, I just feel like this is one of these things that's going to get a lot of hype.
In reality, it's not going to be used by like serious people very much at all.
Yeah.
Yeah.
Or it's the future of programing.
Or that.
Yes.
Or that.
Yeah.
Yeah.
Yeah.
All right.
Well, Chuck wrote in about solving sleepless nights, which is something that you and I
have been struggling with recently.
Oh, yes.
And just just had a little bit last night.
Just regarding your insomnia.
I have a strategy that has been working for me lately.
My pebble classic misfit sleep and deep sleep numbers tell me that I'm getting about, you
know, six hours on average.
Some nights it's bad.
It's like two hours.
And I try to get all that in one block.
And recently I've been waking up after three or four hours.
I'm just up.
What happens is I'm wide awake and I have trouble getting back to sleep.
Yeah.
Yep.
So he found this YouTube channel called Direction Phil.
I'm saying it wrong, but I have a link in the show notes.
And but here's the idea.
It's a military naval historian that just speaks in a really monotone tone the entire
time.
And it's he says the key is and I completely agree with Chuck here.
The key is to get in on a topic that, you know, you're kind of interested in, but has
nothing to do with your work or life.
So it doesn't trigger like any stressors, doesn't make you think about things you got
to do.
And it's complicated enough that it keeps your attention, but you can also just sort
of drift out and listen to it again and again and again.
He says maybe you might be into lectures or something like that, you know, like stuff
like Galileo orbiting Jupiter.
He says you go find the lecture you like on YouTube and then use YouTube DL to download
it as an MP3 or something like that and throw it on your phone.
Yo ho ho, a pirate's life for me.
This is what I use Audible for.
Just this morning I woke up at three o'clock, which I'm sure you can hear in my voice, audience.
Band problems.
We need to have a special like stinger jingle for it.
Groups for old, you know, online support group for old men or men that are becoming old men
and then having the existential crisis that they're realizing they're getting older.
That's the support group I need right now.
The problem is more the realization, right?
Right.
Because I told my mom, you know, I'm like, you know, I'm starting to realize like getting
older sucks.
And my mom looked at me and she's like, oh, child, you are so young still.
You have no idea.
And I'm like, yes, I realize I hopefully, hopefully still have a while a ways to go.
But it is no doubt in my mind that I have come to the point where I'm realizing, oh,
I am getting older and things are changing.
And I think like my eyesight's changing.
Obviously a lot of other things have changed and it's just sleep is one of them.
And so I have tried to employ this with Audible where I'll try to get a book that keeps my
interest enough, but not so much that I can't fall asleep.
It's a tricky line to walk.
I like the idea of adding YouTube to the mix.
Something else that I've done, which I don't think is good, but just makes me feel like
I'm in control a little bit is I'll just get up and work.
And I know I shouldn't, but honestly, at least then I'm productive with that time.
And as you know, no one's up, right?
So it's quiet.
It's surprisingly a productive amount of time.
But the issue is, is that I'm just wrecked for like the next two days.
I really, it takes me a while to bounce back now, you know, that's what I'm going through
right now.
I was like, I was up at three o'clock or it was 3.30 actually.
So I, you know, I got up, I couldn't get back to sleep and I had a choice.
I have a bottle of Zequil, but now that's late enough that if you take the Zequil, which
for those who don't know, it's like NyQuil without the medicine parts, just sleeping
whatever, you're going to be like, there's no hangover like a NyQuil hangover.
It's terrible.
You're going to be so groggy.
Yeah.
You got to take that like eight, nine o'clock at night.
Eight, nine o'clock, 7.30 maximum.
Yeah.
Okay.
That's probably safe.
So then staring at me is my MacBook Air and it's like, you don't, you do have a bunch
of Python to write.
And I was like, Oh God.
So there I went.
Yeah.
That's sort of been my, it's like, there's a lot of people that are waiting for responses
from me.
There's things that are like for this road trip that are coming up that are pending until
I can get to them and every time we get to a phase in the planning for this road trip
where something is waiting on me, it stresses me out because I've got like two weeks or
so before I'm leaving and there's just not enough time and we're going to have swag on
the road trip and we're going to have a website that goes live and we have a live tracker
and we have people that are joining us at the meetup.
We have like special guests that are coming in and we're getting like their flights taken
care of and all of this stuff, right?
And at each kind of major phase, something gets held up on me waiting and I legitimately
can't respond to the stuff and answer the stuff while I'm recording, which happens like
five times a week.
So like it's tricky.
It really isn't.
So when I'm up late, sometimes I just bang out a whole bunch of emails.
I'll just do a whole bunch of emails or I'll work on the website that we need for the road
trip.
I'll just do something like that that I just never get uninterrupted time for.
I'm not always going to employ this strategy, but while I'm busy and things are on my mind,
I'm just going to use the time for that.
But I really like the suggestion, Chuck.
I like the idea of that military history YouTube channel.
I will throw a link to that in the show notes because I went over to that channel this morning
and checked it out and I like it.
I think, you know, that stuff's kind of kind of cool.
And he included a link to a naval ship that was built here in the Seattle area way back
forever.
Kind of neat, very cool.
Meetup.com slash Jupiter Broadcasting.
We have two meetups, Salt Lake City on August 7th and in Denver on August 20th.
There's going to be swag and goodies and some of your favorite J.B. members will be at some
of these events.
We'd love to see you.
I'll also have a tracker at ColonyTracker.live.
That's ColonyTracker.live and that's all up and going.
That little tracker page will have a meetup link on there and stuff.
If you want to do a micro meetup with us along the way, that's something we'll be doing too.
The whole idea really for this road trip was there's been no events for a long time.
The last event I went to was Texas Cyber Summit which was a stinker and I really wanted to
just get out there and say hi to people again and recapture what is really out there in
the real world because we just live this very skewed reality online all the time between
what you see on YouTube and social media and just chat rooms and whatnot.
It's sort of a skewed version of reality and getting out there and seeing the audience
again sort of resets my brain, makes me realize that it's not the end of the world because
of the M1.
And then additionally, it's really about getting to see some of our team members that we haven't
got to see since Jupiter Broadcasting went independent.
So it's a big Colony reunion and we'll have more details soon but meetup.com slash Jupiter
Broadcasting is where you go to get the details about the meetups that are coming up and let
us know if you can make it.
And let's thank Linode, linode.com slash coder.
They are making this Colony reunion road trip possible.
They started in 2003 as one of the first companies in cloud computing because they were just
geeking out about the technology that was landing in Linux.
That's three years before the other enterprise providers and they're still independently
owned and founded on that love for Linux and contributing that back to the community.
That's one of the reasons they're making the Jupiter Colony reunion road trip possible
with our meetups in Salt Lake City and Denver.
All of that is powered by Linode and everything that we've built since we've gone independent,
we host that on Linode and if we ever run into any trouble or if you ever have any trouble,
Linode comes with amazing fantastic 24-7 customer phone support or ticket support if that's
your preference.
They'll help you, they'll get it settled regardless if you have one Linode or you have a hundred,
they're going to take care of you.
They also have hundreds of guides and tutorials to make sure you can get the best out of Linode.
Anything you want to run in the cloud, anything that you can virtualize or run on a Linux
box, you're going to have a great experience with Linode.
They have super fast systems, great great native SSD speeds, 40 gigabit connections
coming into the different networks, 11 data centers worldwide, they own the links between
their data centers, they are their own ISP, their high-end CPU boxes have AMD epic processors,
they have blazing fast S3 compatible object storage, cloud firewalls and simple one-click
application deployments.
All of it comes together to make Linode a truly best of class experience.
When you want the highest performance and the best ability, when you want to give your
customers or your users a fantastic experience, Linode.
And Linode can also be part of your multi cloud strategy, that can be a huge advantage
for a lot of companies, Linode will snap in with your infrastructure management tools
like Kubernetes and Terraform, make all of that just hum for you.
That's why there's so many routes and options you can go from a total newbie who's never
built anything before to somebody who's deploying servers at scale, Linode can be a solution
for you.
They really managed to pull it off, but you got to see it to actually have it click.
So I want you to go right now to linode.com slash coder, get $100 in 60 day credit on
your new account and you support the show and you can try out all this stuff I'm talking
about and see what works for you.
You're going to be really impressed with their interface to manage all of this, the capabilities,
the speed and if you ever do need it, the support.
It really is the ultimate hosting package and it gives me peace of mind knowing that
my back end infrastructure for our listeners is running up on Linode, linode.com slash
coder.
So Microsoft has announced Windows 365, which provides an instant on boot experience with
cloud PCs managed fully by Microsoft.
They say the instant access lets workers stream Windows with either a web browser or an application
to their Mac, iPad, Linux machine and Android devices.
You pick up right where you left off because the state of your cloud PC always remains
the same even when you switch devices.
They create a virtual PC for you in the cloud.
You customize it how you like with how much RAM, up to 16 gigs of RAM and up to 512 gigabytes
of disk and then those customizations persist.
The interface, anything you tweak up there persists.
The company has built it on top of its Azure virtual desktop platform so it can also snap
in with any of the administration that your company might have with Azure and Azure Active
Directory i.e. when they create you an account now, they can automatically just provision
you a virtual PC standard by their image.
Microsoft will be launching Windows 365 on August 2nd, 2021 to a business of any size.
It is officially here, the Windows experience in the cloud managed by Microsoft designed
to run on any device, even a web browser.
I kind of think this is a great deal for Linux users.
Yeah, I didn't think of it in terms of Linux users.
I was thinking more in terms of the enterprise, but I'm curious, what's the angle there?
Well, imagine you got a guy like yourself, right, where you got a Thaleo system, you've
invested quite a bit in the Linux ecosystem and Linux hardware, but you have these jobs
that come up that just require Windows.
This now is your solution.
For some low monthly rate, you can have a couple of these virtual PCs up in the cloud
that anyone on your team can log into with all of your development tools and your environment
already set good to go and it remains there ready for you to access at any point in time.
All you need is a web browser.
You want to do it from your iPad, have at it Haas, you know, you want to do it from
your Thaleo desktop, have at it and it means you can just stay on Linux in this theoretical
world and when you do need Windows, you have it on demand now.
Kind of like having the Mac Colo, only this is clearly a better solution.
Oh, interesting.
Yeah, that does make sense.
I was thinking for enterprises that don't want to give people, particularly in the work
from home world, like computers that have their data on it, give them one of these and
then you can revoke it once the person's not with the company.
That's probably got to be one of the biggest use cases.
Work from home, secure PC.
Or even contract employees.
Right.
Yeah.
And you know, I could see a lot of office spaces that don't even want to bother with
any local physical hardware.
I've seen a couple of companies in the last few years that have really no land to speak
of.
I've even went into a company that doesn't even have Ethernet.
They just have Wi-Fi and they have no file server.
They have no domain controller.
Everything is cloud based.
The users come to the office, they get on the Wi-Fi and then all of their login stuff,
everything is through the cloud.
Interesting.
Why not now?
Why not the whole PC?
Right.
And I'm assuming you can roll back states with this so that you're not, you know.
I would think.
Yeah.
If something bad happens.
Yeah.
It seems like this was a long time coming.
This was foretold by the ancients.
Yeah.
Like this isn't a shocker, but it is, I don't know, for some reason it still did kind of
catch me by surprise, I would say.
And I think a part of, although not, I guess in retrospect, not too surprising is how hard
they're leaning in on like the iPad and Linux angle on this, like all of their official
documentation and all of it talks about it.
Like, yeah, run Windows on your iPad.
Like is that, is that a huge-
Well, Microsoft loves iPad.
It just seems like a weird, that seems like a weird thing to lean into in their announcement.
Like clearly your use case that you just outlined, Windows shops that are just going to deploy
virtual Windows is going to by far be the vast use case for this.
Right.
Right.
I mean, yeah, I guess it's, I guess it's buzzworthy.
I guess it gets headlines written.
That must be part of it.
Yeah.
I don't know.
I think this is going to be pretty much an enterprise tool, but I like it.
Would you try it?
Yeah.
Would I try it?
Maybe.
I mean, I just took a look at shells.com or I think it's just shells.
Similar idea.
Pretty cool.
They do mostly Linux stuff.
I don't know, I bought enough hard drive space that I can just dual boot, right?
This is going to be a first party managed experience though, right?
Like Microsoft in theory could-
Oh yeah.
They can optimize.
Right.
And they're using RDP on the backend here, which is I think probably better than what
you're going to see with shells because shells is using a spice and then they're bringing
that into the browser.
And it's good.
It's a pretty good experience for what it is, but it's not as performant as RDP is.
You seem, all right.
Yeah.
You seem pretty hot on it.
I mean, I think in the enterprise this would be great, right?
You don't want to give someone a PC and you want to control it.
I see absolutely nothing wrong with it.
Yeah.
Well, because you know what?
For me, I've always felt like the best way to use Windows is in a virtual environment.
In a contained space, it's not your primary desktop.
You access it when you need it.
If something goes wrong, you can revert a snapshot.
Like even when I want to run, if I've ever wanted to run a Windows server, I'd run it
under virtualization.
It's like an insurance policy for me.
I prefer this over on the bare metal.
Well, and a good dev angle here too is testing on different Windows configs.
That is definitely something I would look into.
What do you think of the name?
Windows 365?
No, whatever.
You know, everything's got to be 365 now with them.
I guess.
Does that mean it's cloud now?
Is that their thing?
If it's 365, it's the cloud version?
Yeah.
I think that's anything that's a service is 365.
I'm not using Windows on Christmas.
I'm not using Office on Christmas.
So they can take at least Christmas and Easter off.
Would you use GNOME?
Okay.
All right.
So it starts off reasonable.
Okay.
This has really gone around like a wildfire.
I shouldn't say that, but it really has.
A GNOME developer has been doing a four part series about GNOME.
His name is Tobias Bernard and he's done part one, two and three and they didn't get a lot
of attention.
But then he did part four where he talks about GNOME's values and its principles.
I'm going to preface this.
This is one developer.
This doesn't necessarily represent the entire perspective of everyone involved in GNOME.
However, it probably represents at least some of the widely held feelings and beliefs in
the GNOME team.
And I'll tell you, I read this and I just really had a bad feeling.
So a couple of the points that, and I'll link to the full article, but a couple of the points
that Tobias makes is he explains that GNOME's view is they must avoid user preferences and
settings as much as possible because every preference has a cost in development time.
I agree with that.
That is true.
Every preference adds complication.
It adds another thing you have to test.
I agree.
And I think it's a reasonable design philosophy to try to reduce the amount of user preferences
that have to be set.
And he says they prefer to instead tackle the underlying problems that cause excessive
options.
The only thing is with the GNOME project, it seems like this is taken to an extreme
where it means there can be no user configuration options.
Then he goes on to say, and this one I kind of strongly disagree with, the traditional
desktop is dead.
Yeah, I'm not sure I buy that at all.
And I don't really agree with that because I think Apple and Windows are still selling
quite well.
Especially with what we just saw with COVID too, work from home laptop sales spiked, right?
I mean, I don't think it's dead.
And it concerns me that a desktop maker thinks that, but anyways, he goes on to say system
wide theming is a broken idea.
He suggests those who don't like the way an app looks on their desktop should stop theming
and instead contribute to the app directly upstream.
It's still always viable.
And then that's, see that, that's the one that kind of irks me because most users can't
like write Vala code or C sharp code or whatever, you know, language to this particular applications
written in.
Yeah.
And in particular, again, like I find it a reasonable argument that theming adds variability.
It makes it hard for the developers to exactly expect and test what their apps going to look
like on every system.
I get that.
It's a hard problem to solve.
That being said, when you look at the commercial platforms, windows, Mac, Android, iOS, Chrome
OS, there is such a, a flip on the spectrum.
Back when I first got into Linux in the late nineties, you could get resource fork editors
for Mac OS and you could get theme packs for Mac OS and windows had a plus pack that included
new themes in a way to tweak the UI.
And there were companies like Stardock that would make cool tools to modify the way your
PC looked.
And then when this first smartphones came out, the ones that ran windows CE and Palm,
you could customize the crap out of those.
You could customize the crap out of those UIs and put little widgets everywhere and
up in the little toolbars and do all kinds of stuff.
And now in 2021, we have swung so far the other direction.
User customizability and user control is essentially gone instead replaced by standardization,
standard controls, standard way of doing things, reduction of settings is always a goal now.
And there is a place in the market for that.
That's fine.
But I also feel like more than ever now, more than when I even started using Linux originally,
there's also a place in the market for a desktop environment that does let you have some power
and control and does let you customize it.
And I would go on to argue that giving the user the ability to customize their theme
and tweak their desktop as silly as that sounds and as much of a headache as it is for developers
inspires people to tinker and become curious with their computers.
And it's what creates the next generation of people who are building systems and tweaking
systems because they can investigate, because they can explore their curiosity.
They can open up the hood and they can play around with the engine.
And I think that's probably more important today than it's ever been because it doesn't
exist at all in the general market.
And so for GNOME to come along and say, well, what we're going to do is we're going to lock
everything down and we're going to make it just as bland and generic as all of the commercial
platforms.
Well, then what's the differentiator here?
Because the market's already spoken.
GNOME OS came out after GNOME Shell and has destroyed them in market share for other market
reasons.
But let's just be honest here.
Like, who's your market?
Who are you going for?
And then the last one, Mike, the one that truly gets me angry, legitimately made me
decide I am no longer ever using GNOME Shell.
And it's such a damn disappointment, especially after the project specifically made outreach
to extension developers to improve the extension experience, which we've talked about on this
show, Tobias says, Shell extensions will always be a niche thing.
Yeah, that one hit below the belt.
Rather than building GNOME extensions, Tobias thinks developers should instead make apps
or perhaps contribute directly upstream to GNOME Shell, again with the contribute upstream.
Then you don't need the extension, as if the GNOME project would even accept your patch
because they're notorious for rejecting things that don't match their ideology.
And the bombastic statement of ridiculousness that GNOME Shell extensions are niche is the
opposite, the opposite of reality.
GNOME Shell with extensions is the vast majority of GNOME deployments, considering that Ubuntu,
just the more recent versions of Ubuntu, have a two fold install base over every other GNOME
desktop and it ships with a boatload of extensions by default, makes that statement ludicrous.
Pop OS as well is in there.
Pop OS, even Fedora dude, even Fedora ships with an extension that puts their logo on
the background in GNOME Shell.
Literally every major implementation on every distribution that ships GNOME Shell has extensions
turned on by default.
And the developer says, oh, they're a niche thing, they're going to go away.
If you want that functionality, if you want the Bitcoin price up in your toolbar, if you
want your ping milliseconds up in the toolbar, submit that code upstream to GNOME Shell so
that way we can reject it.
Yeah, I think it's crazy that the solution to that would be submitting upstream.
But again, it's entitled to his opinion and obviously, you know, I don't know.
The dream of GNOME extensions was a great dream.
I do, I mean, it's well documented that I have some reservations about it, but I don't
think the answer is everybody has to like fork GNOME and write in their own features.
That's for damn sure, right?
So it's interesting.
It's sad.
I take it with a bit of salt because this is just one per one individual's opinion.
But yeah, it's I think the problem is like he starts from the premise that the traditional
desktop is dead.
And so it gets really easy to make grand statements that are like just not true.
Yeah.
Because people do like spend their day working on their desktop.
And I know for myself, at least, whether I'm a Mac or Linux or what, I know how each OS
works and that works the way I want it.
And I hate it when like, you know, quote, unquote, the vendor moves my cheese, right?
Like something changes or they tell me I can't do something in particular on Mac as they've
been removing features, right?
Particularly in the area of customization.
I don't know.
This has been a recurring theme, the GNOME extensions.
I just, I don't know.
I like system wide theming.
I like extensions and I don't think the traditional desktop is dead.
Not to like go through and cut them down point by point, but.
I agree completely.
I'll tell you the shift, the shift I had after reading this was I had the sad realization
that the GNOME project probably through, you know, just a culture of a project and a group
of people who share a common set of beliefs that, you know, they kind of they can create
an echo chamber.
And I truly to my core believe they're making a desktop for a user that does not exist.
They're making a desktop for this theoretical, idealized new user who's going to come to
Linux and wants this super simple, clean, get out of your way, just barely, but works
kind of environment that is minimal and very new user friendly.
And it's, it seems like an obvious approach on the surface because if you look at the
computer market and the people who use desktops, well, the vast, vast, vast majority of computer
users are that type of user.
The vast, vast majority of users that will ever use a computer are the type of user that
GNOME is building their perfect desktop for.
But the reality is that's always been the case for Linux and the commercial platforms
are already providing the solution to all of those users.
And because of the market dynamics and work that have sold Chromebooks and continue to
sell Mac books and sell Dells and those are all going to continue to ship those platforms
for a very, very long time.
And those users will buy Chromebooks and Macs.
That's the reality of it.
The people who choose to use Linux are going to be more of engineer types.
They're going to be people who want that flexibility and control over their workstation.
They're going to be people who are intellectually curious about how the computer works.
That's always going to be the user base for desktop Linux, engineers and admins.
It's obvious on its face.
You're going to, of course, have new users out there that are given a Linux box that's
been preset up by an admin or a friend or a family member.
That's always going to be a user out there.
But these are not the people actively seeking out the Linux desktop and choosing and evaluating
desktop environments.
Those are more technical people and they always will be.
This is an engineer's operating system.
Just what it is.
You're either deploying it on a server to solve a problem, you're building a device
or if you're using it on the desktop, you know what the hell you're doing.
This idea that they're targeting this desktop environment at this user who's never going
to choose their product and we have over 20 years of data to show us this.
We are never going to catch up to where some of these commercial desktops are at when it
comes to ecosystem integration because these users also have bones that tie into greater
ecosystems and GNOME Shell is just simply not in a position to offer any kind of competition
to that.
And again, so they're going to have to focus on a user who can live without that kind of
stuff.
This all just sounds obvious when it comes out of my mouth and yet the GNOME project
seems completely blinded by it.
Instead, they're on this quest to actually alienate the existing user base they have
today and shoot for a user that simply does not exist.
It's madness and it simply invalidates the GNOME desktop for me as a possible desktop
of the future because I'm clearly not their target demographic.
They don't think any of us, anyone listening to this show is their target demographic.
They think this person that doesn't exist that they've made up in their minds is the
target demographic.
And so it's with that that I just simply cannot use GNOME Shell, I cannot recommend GNOME
Shell.
And for you, I've got to now start a campaign to convince you to try Plasma because it is
a better experience, but how do I even get somebody to try it because all of the major
distributions are using GNOME Shell and it's pathetic.
You know how you get someone like me to try it?
So my love of Papa West is pretty well documented, right?
But there's a pitch me some other distro other than Ubuntu or Pop that by default comes with
Plasma and is somehow tailored for what I do.
I know I've said it before, there's two things that have happened in recent history, Canonical
could have chosen to go with Plasma and System76 could have chosen to go with Plasma when they
created Pop.
And in both cases, it just came down to GTK is what we've been using, GNOME Shell is what
we've been using, it's what we know, we'll just keep doing it.
When you look at who contributes to GNOME Shell, it's 80% somewhere in that neighborhood,
almost 90% Red Hat staff.
It's so clearly a Red Hat project that we all pretend like isn't a Red Hat project.
And it's Red Hat that's driving this.
And I have a lot of respect for what they do, I think the team has done a lot of hard
work, a lot of good development has come out of there, but it's just no longer for me.
And I'm still going through the morning process.
I've lost a friend.
I just want to say, as we've been on the air, my work Slack is blowing up because we're
recording during the day.
And they're debugging some problem, it doesn't really matter.
But people are all talking about how they've now customized their GNOME terminals.
And the couple people on Mac are like, well, how come we can't do transparencies and background
images in our terminal?
They got to get iTerm, that's why.
That's why, you got to get iTerm basically, because Apple decided that you can't have
that.
Didn't they used to?
I could have sworn it used to.
They used to.
They actually took it out.
They said, OK, just like a small digression here.
I was working on Windows the other day, a VM, because I destroyed my Windows machine.
And the Windows terminal is just, it's a joy.
As a terminal emulator, it's awesome.
I don't understand why I can't have that on Mac.
Well, I mean, I know you're such an iTerm hater, but I tell you, I think Windows terminal
was heavily inspired by iTerm.
Isn't iTerm not being updated anymore?
No, it's updated.
Oh, yeah.
Mm.
I know.
I know.
Yeah.
What I would do if I were you is I'd have one terminal that's the Mac terminal.
That would be my x86 terminal.
And then I'd have one terminal that's my M1-compatible terminal or something, because you know.
I never, ever run the M1 terminal.
Oh, really?
It's all x86?
It's still that bad, huh?
It's still a hot mess?
Well, it's, I mean, I'm doing a lot of Python-y stuff, and it's just, yeah, you got to compile
like this.
That's got a long tail.
Mm.
I actually renamed terminal to terminal M1, and I have another terminal that's just like
a copy of it, but set to launch in Rosetta mode.
That's terminal.
That's Rosetta terminal, rather.
Yeah, I'm just, I don't know, man.
After I read this, I had to sit with this GNOME stuff.
Made me sad.
Yeah.
This thing is forever, right?
I just, I don't know, I mean, we're all rocking iPads, and my long guy just loves it when
we record.
Yeah, especially during the day.
Yeah, I think because I'm really struggling to stay on the Linux desktop these days, Plasma
makes me happy, but it's not perfect, especially when I start getting to Wayland and multiple
monitor setups with multiple refresh rates, and one that's high DPI and one that's not,
one that has HDR and one that doesn't.
It's a real hodgepodge monitor setup I have right now, but I just simply can't afford to
replace all of them.
So it is what it is.
And it's really a struggle bus these days to just use desktop Linux, especially when
you have things like the M1 coming out and the M1X pending.
You have Windows that seems to be getting better and better.
I'm never going to switch to it, but like the pressures really seem to be mounting against
desktop Linux.
And at the same time, you have the lead desktop project and one of their lead developers going
on about how the desktop's dead and about how extensions are niche.
And it's like, wow, could you be any more detached from reality?
Like the people that have the future of desktop Linux in their very hands seem delusional.
Delusional.
I like it.
Seriously.
They think that they think the traditional desktop is dead and they think extensions
are niche, or at least Tobias does.
In my opinion, that sounds delusional.
Yeah, but again, it's just one dude.
And I just don't see how anybody with a straight face could say traditional desktops are dead.
They're not dead.
People work with them every day, especially Linux people who are, you know, overwhelmingly
IT pros of some kind, whether they're developers or sys admins or DBAs or whatever.
I hope you're right.
Audience let me know what you think, coder.show slash contact, or you can weigh in on anything
we've mentioned here or anything else you'd like.
If you haven't joined our Coder QA team yet, coderqa.co, we have a new Coderly that's getting
recorded soon and released very soon.
You get that and access to all the previous ones.
You support the show, you get a limited ad feed and that special bonus Coderly report.
And that is all at coderqa.co.
Thanks to everybody who does support us.
It means a lot.
Mr. Dominic, is there anyone you want to send people anywhere you want to send people, maybe
to your long guy?
Maybe?
I don't know.
Yeah.
No, you know what?
I've been a little inactive on the socials, but follow me at Twitter, add to Manuka, I'll
probably pick back up in a week or two.
Yeah, once, you know, you can always send us some moving pictures.
People love that.
Yeah.
Oh, yeah.
I'm at Chris Elias.
The network is at Jupiter Signal and the show at Coder Radio Show.
Links to what we talked about today, well, that's over at coder.show slash four, two,
three.
You'll also find that contact form I mentioned, as well as our RSS feed and links to our back
catalog and all of that.
And head over to Jupiterbroadcasting.com slash calendar to get our live time so you can join
us when the Coder Radio program is live.
Thanks so much for joining us on this week's episode of Coder Radio.
See you right back here next week.
