1
00:00:00,000 --> 00:00:07,000
This is KOTORadio, episode 321 for August 6th, 2018.

2
00:00:30,000 --> 00:00:39,000
Hi everyone and welcome to KOTORadio, Jupiter Broadcasting's weekly talk show, taking a pragmatic look at the art and the business of software development and its related technologies.

3
00:00:39,000 --> 00:00:46,000
This episode is brought to you by our two great fun sponsors, Linux Academy and DigitalOcean.

4
00:00:46,000 --> 00:00:50,000
I'll tell you more about those great sponsors as this here show goes on.

5
00:00:50,000 --> 00:00:57,000
My name is Chris and joining me every single week is my co-host perched in the podcasting position in the heart of Florida.

6
00:00:57,000 --> 00:01:01,000
Hello, Mike. Hello, Chris. Hello, sir.

7
00:01:01,000 --> 00:01:05,000
I noticed a demotion in 320 episodes as host.

8
00:01:05,000 --> 00:01:09,000
You hit 321. Did I say co-host?

9
00:01:09,000 --> 00:01:13,000
You know why? You know why? I've been watching too much Top Gear. I really have.

10
00:01:13,000 --> 00:01:16,000
And this has gotten in my head and they call them presenters.

11
00:01:16,000 --> 00:01:25,000
And now I'm fighting the urge to say my presenter, our presenter or our co-presenters, which is just damn inappropriate here in the States.

12
00:01:25,000 --> 00:01:29,000
Yeah, I feel like the presenter thing would feel the YouTube comment.

13
00:01:29,000 --> 00:01:34,000
Yeah, it doesn't translate. I know. That's why I'm fighting the urge. And it throws me off.

14
00:01:34,000 --> 00:01:43,000
You're lucky you did that and I decided to harass you a little bit because what I was going to do if we recorded this intro, someone would come back.

15
00:01:43,000 --> 00:01:49,000
Oh, darn. Darn. You missed it. Super sad about that one.

16
00:01:49,000 --> 00:01:51,000
So other than me giving you a hard time, how are you doing?

17
00:01:51,000 --> 00:02:00,000
Good. I mean, I feel a little bad that we didn't communicate as clearly as we could have last week because we got quite a few people that were concerned that we're switching to like a half hour format.

18
00:02:00,000 --> 00:02:05,000
And really what it was is we were doing two episodes. We did two episodes and Mike was sick.

19
00:02:05,000 --> 00:02:12,000
So we figured let's do two 30s. That way we do an hour that week and we spread it out so that we might get some, you know, some some time.

20
00:02:12,000 --> 00:02:14,000
Literal breathing room.

21
00:02:14,000 --> 00:02:23,000
But we didn't actually tell anybody before we did that. So we got a bunch of concerned notes and I'm sorry, but I didn't mean to scare you.

22
00:02:23,000 --> 00:02:29,000
But we are switching to video only. No, I'm kidding.

23
00:02:29,000 --> 00:02:32,000
You almost had me there.

24
00:02:32,000 --> 00:02:34,000
That was fun. Let's do that again.

25
00:02:34,000 --> 00:02:45,000
So we got you know, we get these emails from time to time and a lot of times what we do now is we just respond sort of privately when it's the hey, I'm looking for a new job email because we get a lot of those.

26
00:02:45,000 --> 00:02:52,000
But we got like four this week. And so I just thought Jacob sent one in that just sort of really clicked.

27
00:02:52,000 --> 00:02:57,000
It kind of it kind of summarize them all. Plus, it's a good story. And so I just thought maybe we'd cover one.

28
00:02:57,000 --> 00:03:01,000
I mean, these are kind of ones that we do frequently, but maybe we'll have a new take on this one.

29
00:03:01,000 --> 00:03:05,000
Are you ready to start with the feedback? It's been a little while. Let's do it. OK.

30
00:03:05,000 --> 00:03:09,000
Old format. Yeah. Yeah. Jacob writes and he says, hello, I'm a new listener to the show.

31
00:03:09,000 --> 00:03:13,000
He's also enjoying Linux unplugged, he says. And I have a little background he wanted to share.

32
00:03:13,000 --> 00:03:16,000
I've been in the Marines for 12 years. I'm in the industry.

33
00:03:16,000 --> 00:03:22,000
I'm sorry. I was in the infantry and I'm just coming off three years of recruiting duty.

34
00:03:22,000 --> 00:03:31,000
Zero experience in the IT world, but I was able to complete my CCNA, my CCNA sec, my CCNP, my LCP one.

35
00:03:31,000 --> 00:03:40,000
And I'm working towards our Red Hat certification. I also currently program in Rust and in Pearl on my own projects.

36
00:03:40,000 --> 00:03:47,000
OK, a little slow there, aren't you? Yeah. Yeah. You better you better get a little motivated here, dude.

37
00:03:47,000 --> 00:03:57,000
He says, I'm looking at a transition into the workforce, but my question is, what's the best way to network a land job with no experience and no college degree?

38
00:03:57,000 --> 00:04:01,000
Literally, we got asked that particular question four times this week.

39
00:04:01,000 --> 00:04:05,000
He says, would it be beneficial to put my military record on my resume such as personal?

40
00:04:05,000 --> 00:04:14,000
Yeah, of course it would be. Absolutely. Personal awards, Purple Heart Navy. Yes. Combat distinguishing. Yes. Fitness reports, I guess.

41
00:04:14,000 --> 00:04:18,000
Yeah, I don't know about fitness, but the other stuff to me demonstrates a good work ethic.

42
00:04:18,000 --> 00:04:24,000
I mean, really, what your your military record is being translated to to the business types is a work record.

43
00:04:24,000 --> 00:04:28,000
And it shows a solid commitment and motivation to a long term work commitment.

44
00:04:28,000 --> 00:04:36,000
So that's what that's. Aside from aside from serving and just I think the prestige that comes with that.

45
00:04:36,000 --> 00:04:40,000
And I think that just makes you a good candidate to begin with.

46
00:04:40,000 --> 00:04:46,000
That also just gets translated to, you know, nothing but numbers. It's it's good business.

47
00:04:46,000 --> 00:04:51,000
So I think you do have a strong point there. But this this general theme that seems to be coming up a lot.

48
00:04:51,000 --> 00:04:57,000
Time to switch tracks. What's the best way to land a job? I don't really know anybody in the industry.

49
00:04:57,000 --> 00:05:03,000
I don't really have a degree. What is the best way to get started?

50
00:05:03,000 --> 00:05:14,000
I don't know if anything came immediately to mind for you, but one that I thought of was some contract work here and there that gets you started, gets you rolling.

51
00:05:14,000 --> 00:05:18,000
But and I don't know. I don't know when I say that. I know that sounds easy.

52
00:05:18,000 --> 00:05:24,000
But what I'm talking about is the kind of stuff you could maybe find on Craigslist, the kind of stuff you could find on certain hiring sites.

53
00:05:24,000 --> 00:05:28,000
And don't think of yourself as a contractor directly, like more of a subcontractor.

54
00:05:28,000 --> 00:05:33,000
So you might be working for another contractor or you might be working for a company that has a contract with the client.

55
00:05:33,000 --> 00:05:37,000
So they're managing the client relationship. They're taking care of that stuff.

56
00:05:37,000 --> 00:05:44,000
That is really the hardest stuff, especially if you just want to focus on development and you take a subcontracting position.

57
00:05:44,000 --> 00:05:50,000
It's low key. It's low visibility. And if you're lucky, you can put it on the resume and build contacts.

58
00:05:50,000 --> 00:05:54,000
And it's not going to be a ton of money either. You're going to get paid a little bit less for doing that work.

59
00:05:54,000 --> 00:05:59,000
But there's a lot of those types of jobs out there where a project's working on some project.

60
00:05:59,000 --> 00:06:06,000
I use that term loosely in this case. But let's just say there's a group out there that's working on a new website and or a new app.

61
00:06:06,000 --> 00:06:11,000
And they they just will subcontract out a component of that project.

62
00:06:11,000 --> 00:06:14,000
And that's a great way to pick up some work. What do you think, Mike?

63
00:06:14,000 --> 00:06:19,000
Yeah, I think that's awesome advice. But I would actually say you should kind of lean into the whole military thing.

64
00:06:19,000 --> 00:06:26,000
I'm doing some aerospace work now and not having been in the military is like a huge disadvantage.

65
00:06:26,000 --> 00:06:32,000
There are companies that actually, if you email me again with a direct email on the form, I could put you in touch.

66
00:06:32,000 --> 00:06:39,000
But depending where you are that actively try to hire veterans, because when you're bidding on contracts, it tends to help.

67
00:06:39,000 --> 00:06:42,000
Yes, especially especially like, yeah, particularly like us. Right.

68
00:06:42,000 --> 00:06:51,000
Like if the owners are pure civilians, employing veterans can help you sometimes when bids or even subcontracting to them.

69
00:06:51,000 --> 00:06:58,000
Right. Because there's the way that. Yeah. So I was saying that I had a client that I don't think I'm still allowed to talk about that I had to get security clearance for.

70
00:06:58,000 --> 00:07:03,000
It was a military client had to get security. And they weren't it wasn't the U.S. military itself.

71
00:07:03,000 --> 00:07:10,000
It was just a company that you probably would be familiar with if you thought about the large industries in Washington that would be involved with the military.

72
00:07:10,000 --> 00:07:16,000
They were the they were the customer of the military. I guess they were.

73
00:07:16,000 --> 00:07:20,000
Yeah. The customer. No, they were selling to the military. So they were the seller to the military.

74
00:07:20,000 --> 00:07:25,000
And I was a subcontractor to that large company.

75
00:07:25,000 --> 00:07:30,000
And I was actually a subcontractor to another company that was contracting to them.

76
00:07:30,000 --> 00:07:37,000
And I had to get security clearance. So I would imagine if you have military background, it makes that process much smoother.

77
00:07:37,000 --> 00:07:41,000
Plus, like Mike said, you know, the vernacular, too, which is a big benefit.

78
00:07:41,000 --> 00:07:44,000
So that's it. So, yeah, specifically for you, Jacob, that's really something to consider.

79
00:07:44,000 --> 00:07:49,000
See if you can't even just initially leverage that to get rolling.

80
00:07:49,000 --> 00:08:03,000
And then to the others out there, the thing is, is demonstrating a commitment to stay in the field, to stay working, to stay even informed while you're not actually on a payroll is extremely valuable.

81
00:08:03,000 --> 00:08:14,000
Something that is a good, strong signal to a hiring manager that you are motivated and that you do this stuff out of passion and you're trying to make money off it, not that it's just a job to punch in the clock.

82
00:08:14,000 --> 00:08:28,000
And however you can demonstrate that, that is that is the secret weapon that once that door gets cracked for you, once you find you're in, that's your secret weapon stash that you've had this whole time that then puts you above everybody else.

83
00:08:28,000 --> 00:08:38,000
You know, this is going to sound super kind of self-serving, double-dealing because they're a sponsor, but I have actually heard, you know, there's a lot of these sites that will give you certificates now.

84
00:08:38,000 --> 00:08:45,000
I have actually heard in conversation recruiters and hiring managers actually the AWS serve from Linux Academy.

85
00:08:45,000 --> 00:08:47,000
They're particularly pointing that out as something that they.

86
00:08:47,000 --> 00:08:59,000
Yeah, yeah. The Google, the Google Cloud guys at a recent industry event went up to the Linux Academy booth. They're like, you know, internally we all agree your stuff is better than first party stuff.

87
00:08:59,000 --> 00:09:02,000
It's so good. Like it is. That is really good courseware there.

88
00:09:02,000 --> 00:09:09,000
So I guess we could do the linuxacademy.com slash coders with an S if you want to go there, get a free seven day trial, try it out, see what you think.

89
00:09:09,000 --> 00:09:22,000
There's also a community edition with more and more free stuff going in there all the time. And then the pay side is getting massive refreshes over the last few months, new stuff coming in there, including ways to discover what that new stuff is.

90
00:09:22,000 --> 00:09:30,000
Because now they've added like 300 new bits of training exercises and interactive diagrams and training full courseware and all of that.

91
00:09:30,000 --> 00:09:34,000
But it's hard to expose all the new stuff. So they're working all kinds of UI things as well.

92
00:09:34,000 --> 00:09:42,000
And I have definitely heard from several folks, several, several folks in the more than several in the audience that that does make a difference.

93
00:09:42,000 --> 00:09:52,000
Seeing that and here's the reverse side of reason. The reason why the Linux Academy on your resume for training is particularly good is something we don't talk a lot about in these shows.

94
00:09:52,000 --> 00:10:05,000
But a large percentage of Linux Academy's business actually comes from large enterprises that have staff members that they need to train up so that way they are capable of working on their own internal cloud services.

95
00:10:05,000 --> 00:10:13,000
You know, think about think about these companies like, say, Apple out there that have all of these Linux servers running iCloud.

96
00:10:13,000 --> 00:10:22,000
They have to go somewhere that scales to train those people. And Linux Academy has become the number one outlet for that type of stuff.

97
00:10:22,000 --> 00:10:33,000
Now, imagine that across the entire industry. Imagine how common that is. So the transverse of that is when they see Linux Academy on your resume, it's often the same training outlet they're using already.

98
00:10:33,000 --> 00:10:40,000
So that's also becoming kind of a winning combo because it's recognized and it's trusted. It's something they're paying for themselves.

99
00:10:40,000 --> 00:10:48,000
So if you have the time, if you have the money, I would consider going to Linux Academy dot com slash coders with an S sign up.

100
00:10:48,000 --> 00:10:55,000
You support the show and you kind of get to hit your wagon to their rising brand tide if you get my drift.

101
00:10:55,000 --> 00:11:04,000
And I think it's a good thing. I think when you think like that, when you're you're trying to productize yourself in a way, you're trying to make yourself sellable.

102
00:11:04,000 --> 00:11:11,000
You are selling you. And what does it take to sell a good product? Well, there needs to be associations with other good products.

103
00:11:11,000 --> 00:11:27,000
Right. Like when you get a sound system in a car, it's a Bose sound system or it's a it's a thunder sound system or, you know, whatever, you know, insert name like it's a branded name because that's what is part of what sells the whole car is having these recognizable things that are appealing.

104
00:11:27,000 --> 00:11:36,000
And so if you can make that work, if you can afford the payment or if the community edition has what you need, definitely give it a go. So this is a bit of an advice and as an and a sponsor.

105
00:11:36,000 --> 00:11:41,000
And that's just kind of why they are our sponsor Linux Academy dot com slash coders to just put a button on that.

106
00:11:41,000 --> 00:11:47,000
That's where you go to sign up and support the show and seriously consider it. Now, how about we shift gears to another type of feedback?

107
00:11:47,000 --> 00:11:51,000
I asked for some travel hacks and we got a good one from Mark. Yes, you did. Yes. Yeah.

108
00:11:51,000 --> 00:11:59,000
Also, just to complete the loop this morning before we came down and did the show, I got an email that I was approved for my TSA pre-check.

109
00:11:59,000 --> 00:12:09,000
I am officially and I'm in the system. Get my letters. I'm in the system and I have a traveler ID now, which it's an interesting way.

110
00:12:09,000 --> 00:12:13,000
This works. It's a side note is to really make this happen.

111
00:12:13,000 --> 00:12:21,000
You have to go sign up for mileage plans with the different airlines because the best way to get your traveler ID on your boarding pass.

112
00:12:21,000 --> 00:12:28,000
So that way you can go through pre-check is if you create a mileage plan and then you apply it to your mileage profile, your traveler ID,

113
00:12:28,000 --> 00:12:35,000
which then the airlines will automatically apply your traveler ID to your boarding pass.

114
00:12:35,000 --> 00:12:40,000
So only the federal government collusion with the airlines man to get me to sign up for these membership plans.

115
00:12:40,000 --> 00:12:45,000
I tell you what, it's like, wow, I didn't even know you got to see.

116
00:12:45,000 --> 00:12:48,000
So you can't just you don't just use your driver's license now when you go.

117
00:12:48,000 --> 00:12:55,000
You have to have your traveler's ID that gets issued to you and it has to be printed on your boarding pass.

118
00:12:55,000 --> 00:13:02,000
So the only way to do that right is to have it right to have the airlines. Yeah.

119
00:13:02,000 --> 00:13:07,000
I mean, you know what? It's OK. You know, I should probably just have miles too.

120
00:13:07,000 --> 00:13:11,000
I mean, why not? It makes this whole thing much more economical. So but it's just kind of funny.

121
00:13:11,000 --> 00:13:16,000
All right. So Mark's travel bag hack. I love this. I asked for a few hacks and I'm still accepting them.

122
00:13:16,000 --> 00:13:20,000
If you have good travel hacks, he says here in the U.K. and I think the U.S. is the same and it is.

123
00:13:20,000 --> 00:13:26,000
You have to empty all of your electronics into a separate tray at security from your main bag, which Mark is.

124
00:13:26,000 --> 00:13:32,000
That is the number one thing I'm avoiding with with the TSA pre-check because that causes me a lot of travel anxiety

125
00:13:32,000 --> 00:13:39,000
because of the value of those items and my position to be unable to replace them if anything were to happen.

126
00:13:39,000 --> 00:13:45,000
So like it just causes intense anxiety. He says it's really annoying if you have your charger, external battery,

127
00:13:45,000 --> 00:13:52,000
you know, your USB keys, maybe your car keys and iPad, external hard drive, a dongle for all the things, your headphones.

128
00:13:52,000 --> 00:13:56,000
I'll add your watch. You know, I don't know. I don't know if you put in there.

129
00:13:56,000 --> 00:14:00,000
He didn't actually mention your phone. Yeah. I mean, the list goes on and on, as you can tell.

130
00:14:00,000 --> 00:14:02,000
Not to mention if you've got jewelry and all that crap.

131
00:14:02,000 --> 00:14:09,000
So he says, I use a cable carrying case and he'll have a link. I'll put it in the show notes at coder.show slash 321.

132
00:14:09,000 --> 00:14:14,000
You get it. It has slots for all of your wires, all of your cables.

133
00:14:14,000 --> 00:14:19,000
It has little loops to twist them all up and tidy them away and you put it in the main backpack.

134
00:14:19,000 --> 00:14:24,000
You pull that out. You unzip it. It opens up sort of butterfly style and it lays flat.

135
00:14:24,000 --> 00:14:28,000
Then you simply pick the case up at the end and pop it back into your backpack.

136
00:14:28,000 --> 00:14:31,000
There's no panicking about grabbing all your stuff at the other end.

137
00:14:31,000 --> 00:14:33,000
Good luck with your travels. Mark.

138
00:14:33,000 --> 00:14:41,000
So I put this in the show notes. It's called the Begg Smart Travel Electronics Accessory Thickened Cable Organizer Begg Portable Case.

139
00:14:41,000 --> 00:14:46,000
You could probably just search for Begg Smart Travel Begg or use the link in the show notes.

140
00:14:46,000 --> 00:14:56,000
It is 25 bucks and it does have like individual sections for like batteries, wires and then it's got like an under area where you could stash more stuff in it.

141
00:14:56,000 --> 00:15:04,000
It just looks like a great option. It's about the size of a Kindle in width and length and it's deeper because it's it's a bag.

142
00:15:04,000 --> 00:15:08,000
But it's pretty flat overall. So it would fit in a backpack or something like that.

143
00:15:08,000 --> 00:15:12,000
So thank you, Mark. I think I'm going to pick that sucker up. I think I'm going to do that.

144
00:15:12,000 --> 00:15:17,000
So that's awesome. Any other any other travel hacks? Coder.show slash contact and let us know.

145
00:15:17,000 --> 00:15:25,000
Now, before we move on, Mike found something that is damn handy. It's the Devil's Dictionary for Tech.

146
00:15:25,000 --> 00:15:28,000
This is nice, Mike. This is a good find. I thought it was pretty good.

147
00:15:28,000 --> 00:15:34,000
Yeah, it's actually thanks to the subreddit. Oh, that handy subreddit. Coderradio.reddit.com.

148
00:15:34,000 --> 00:15:39,000
Yeah. So it's got essentially A to well, I would say Zed, but it's A to S definitions.

149
00:15:39,000 --> 00:15:54,000
So, like, for example, a agile, a popular software development methodology that solves the problem of misaligned expectations between the developer and the customer and the customer by pretending they don't exist.

150
00:15:54,000 --> 00:16:06,000
Love it. I mean, is that not the case? So dead on. OK, Amazon Web Services, a cloud computing service which labels relatively simple products with complicated sounding names.

151
00:16:06,000 --> 00:16:13,000
That is so true. And as an enticement for developers to pad their resumes,

152
00:16:13,000 --> 00:16:26,000
as the same developer would never affix file storage to his areas of expertise, but once the file storage has been renamed to S3, suddenly the boast is worth publishing in a professional context.

153
00:16:26,000 --> 00:16:35,000
That is so true. I was using an open source package called Minio, which is basically S3. It's an open source clone of S3.

154
00:16:35,000 --> 00:16:46,000
I think we featured on the show a couple of months ago. And I'm talking to somebody and she's looking at me. She's OK. So, like, you just like save files. I said, oh, it's S3. Oh, well, that's a lot better. S3. Oh, that sounds great.

155
00:16:46,000 --> 00:16:52,000
Yeah. Oh, yeah. I like also they have a good definition for big data because it's always so vague.

156
00:16:52,000 --> 00:16:57,000
Like, what really is big data? And this definition, again, this is a really handy guide. We'll have it linked in the show notes.

157
00:16:57,000 --> 00:17:03,000
There's lots. I won't go through all of them. Big data when Excel crashes.

158
00:17:03,000 --> 00:17:11,000
How about JavaScript? Did you see that one? No. OK, let's do one more. JavaScript. See technical debt.

159
00:17:11,000 --> 00:17:17,000
OK, now we've got to go read. Do they have technical debt in here? No, they don't. But they do have serverless, which I thought was savage.

160
00:17:17,000 --> 00:17:20,000
OK, we'll do that. That will be the last one. And then that's it. We'll stop.

161
00:17:20,000 --> 00:17:34,000
Serverless, the discarding of a generation's worth of technology intended to standardize Web applications in favor of locking yourself into a vendor with unproven proprietary services from Amazon, Microsoft or Google.

162
00:17:34,000 --> 00:17:40,000
I couldn't have said it better myself. That is savage. And it's so, so, so dead on. So dead on.

163
00:17:40,000 --> 00:17:46,000
Speaking of savage, how's that Gallego Pro working out, you maniac? So you've been what, with it for a week now?

164
00:17:46,000 --> 00:17:52,000
It's not on fire yet. So, you know, that's an improvement. Yeah, that is a good improvement. Are you on the Gallego right now or are you on a different machine?

165
00:17:52,000 --> 00:17:59,000
Right now. Oh, yep. It's hooked to a 27 inch Dell. Oh, I got my dual set up here. Is that display port?

166
00:17:59,000 --> 00:18:04,000
I don't know. I'm doing it over HDMI, actually. Oh, OK. A little bit of a, you know, heathen.

167
00:18:04,000 --> 00:18:13,000
Yeah. So a couple of things. We're going to write up a few review of it. But first impressions, my 4K screen days are over.

168
00:18:13,000 --> 00:18:20,000
Oh, really? I must be getting old. A 1080 screen is just more practical for me.

169
00:18:20,000 --> 00:18:28,000
Matt is still better than glossy. And, you know, this is the battery life is significantly better than the first gen.

170
00:18:28,000 --> 00:18:34,000
That's great to hear. Yeah. I mean, it's still not like, you know, MacBook long.

171
00:18:34,000 --> 00:18:39,000
Yeah, it's good enough. I like it a lot. I mean, I'm going to put it through its paces.

172
00:18:39,000 --> 00:18:44,000
What about the fan? What about the fan noise? What about that? The fan hasn't kicked up really.

173
00:18:44,000 --> 00:18:47,000
So I'm wondering if that's not, again, a system.

174
00:18:47,000 --> 00:18:52,000
76 always claimed like it was the firmware.

175
00:18:52,000 --> 00:18:58,000
Then maybe it was. But in this new one, it's I haven't other than cases where it like should.

176
00:18:58,000 --> 00:19:05,000
You know, I'd also I'd also heard it was much more pronounced with the 4K models than the 1080p models.

177
00:19:05,000 --> 00:19:12,000
That could be that, too. Yeah. That there was a particular condition that was triggered by the Intel firmware when the resolution was 4K.

178
00:19:12,000 --> 00:19:17,000
And, you know, I've been on the fence, too. I was just talking with Wes the other day.

179
00:19:17,000 --> 00:19:20,000
Like, I really don't know if my next machine is if it's 4K or 1080p.

180
00:19:20,000 --> 00:19:28,000
I think I'm going 1080p, but I can't tell if I'm doing that because of inadequacies with Linux or if it's just the practical thing to do.

181
00:19:28,000 --> 00:19:33,000
Like if it was a MacBook, this would be a non conversation like you would get retina and it wouldn't matter.

182
00:19:33,000 --> 00:19:35,000
Everything would just be fine. There wouldn't be anything to discuss.

183
00:19:35,000 --> 00:19:39,000
But you would also run it and like some sort of weird. Yeah. Yeah, that's true.

184
00:19:39,000 --> 00:19:48,000
Yeah. So I huh. Yeah, I'm still I'm leaning 1080p as well because it just not that actually I have really not had a lot of problems with 4K on Linux.

185
00:19:48,000 --> 00:19:51,000
It just feels a little bit slower. I don't know. I can't put my finger on it.

186
00:19:51,000 --> 00:19:56,000
I really have problems with it other than it just I don't know. I you know what?

187
00:19:56,000 --> 00:20:01,000
I don't need it, I guess. So are you charging this thing with USB-C at all?

188
00:20:01,000 --> 00:20:05,000
I didn't know that I could. Oh, I don't know either. I'm asking. I know it has USB 3.

189
00:20:05,000 --> 00:20:10,000
I will report back next week. Yeah. All right. Well, I'm glad to hear it's working out for you.

190
00:20:10,000 --> 00:20:25,000
So seems like a good purchase. And you almost have to kind of wonder if maybe if maybe some of those issues that that you had just aren't sort of solved by the later generation Intel chip and chipset, you know, because this thing.

191
00:20:25,000 --> 00:20:32,000
Yes, I would wager that not having the 4K screen and having two generations newer Intel chips is probably.

192
00:20:32,000 --> 00:20:42,000
So you because I think if I recall right from our conversation last week, you got it with the eighth generation I seven eight fifty five zero you which is there.

193
00:20:42,000 --> 00:20:48,000
It runs at one point eight but turbos up to four gigahertz with four cores. That's nice.

194
00:20:48,000 --> 00:20:54,000
So that's good. If that's not if that's not causing thermal issues for you, then I think you got a really good machine on your hands.

195
00:20:54,000 --> 00:21:02,000
This is a nice little travel machine. And who knows? I mean, I'm not super convinced it can be the one machine to roll them all.

196
00:21:02,000 --> 00:21:07,000
But I think I'm going tower. We're going to have our old man tower party. I agree.

197
00:21:07,000 --> 00:21:13,000
Micah sixty eight in the chat room says last he heard the current Galgo does not support USB charging. So maybe we'll find out next week.

198
00:21:13,000 --> 00:21:18,000
Yeah, it also doesn't support the LG Thunderbolt monitor, although I do have to correct myself from last week.

199
00:21:18,000 --> 00:21:27,000
You can use the LG Apple Thunderbolt monitor with certain USB-C. It turns out we have a HP Spectre in the office that can actually power.

200
00:21:27,000 --> 00:21:33,000
Right. Right. Yeah. I don't know how. Yeah. It's got is it and it's a USB-C connection.

201
00:21:33,000 --> 00:21:36,000
Wow. So that that Spectre must have Thunderbolt in it. That's amazing.

202
00:21:36,000 --> 00:21:41,000
The Spectre is pretty neat to have Thunderbolt in it. Yeah. Yeah. Just supposed to have Thunderbolt three. Yeah.

203
00:21:41,000 --> 00:21:48,000
According to Spectre. All right. Well, very good. We have much more to get into, including some cute talk, some top programming languages and more.

204
00:21:48,000 --> 00:21:54,000
So let's take a moment to think DigitalOcean do dot CEO slash coder. No S on that one.

205
00:21:54,000 --> 00:21:59,000
Now that's important because when you go to do dot CEO slash coder, you get a one hundred dollar credit.

206
00:21:59,000 --> 00:22:07,000
You can use that for 60 days to try out DigitalOcean's crazy fast infrastructure with a super easy to use but very powerful dashboard.

207
00:22:07,000 --> 00:22:14,000
A clean, well-documented, well-utilized API with predictable costs and billing, industry leading price to performance.

208
00:22:14,000 --> 00:22:21,000
You can build a project on DigitalOcean in minutes. You can get your system set up in probably less than 55 seconds.

209
00:22:21,000 --> 00:22:29,000
My favorite box is three cents an hour. That gives me four gigs of RAM, two CPUs, 80 gigabytes of enterprise grade SSD storage.

210
00:22:29,000 --> 00:22:37,000
Every rig uses SSDs, three terabytes of transfer on their crazy fast 40 gigabit connection. Great Internet.

211
00:22:37,000 --> 00:22:41,000
Let me tell you, I've been using DigitalOcean for a while. Wow.

212
00:22:41,000 --> 00:22:47,000
It is it is really like if you want if you want to have some fun, go update some packages on a Linux distro after you first spin it up.

213
00:22:47,000 --> 00:22:50,000
It is really something. That's three cents an hour for my favorite rig.

214
00:22:50,000 --> 00:22:55,000
And they have all kinds of now optimized types of droplets and flexible drops where you can mix and match resources.

215
00:22:55,000 --> 00:23:03,000
It's so cool. And they have really, really high performance CPU droplets and ones with massive hundreds of gigs of RAM.

216
00:23:03,000 --> 00:23:07,000
It's just so cool. And all of it has monitoring and alerting built in.

217
00:23:07,000 --> 00:23:14,000
Cloud firewalls to block traffic at the network level so they never touch your rig and data centers all over the world.

218
00:23:14,000 --> 00:23:20,000
And the little bow on top, 99.99 percent uptime. Isn't that cool?

219
00:23:20,000 --> 00:23:26,000
So check them out. DO.CO slash coder. Let me double check that because I want you to get that hundred dollar credit.

220
00:23:26,000 --> 00:23:32,000
DO.CO slash. Yep. Coder. No S. You go there. You sign up with a new account.

221
00:23:32,000 --> 00:23:34,000
You get the one hundred dollar credit and you can really try some stuff out.

222
00:23:34,000 --> 00:23:40,000
You can go from theory testing to full production with DigitalOcean.

223
00:23:40,000 --> 00:23:44,000
And there's a lot of really great open source projects and companies.

224
00:23:44,000 --> 00:23:50,000
The back end of GitLab, DigitalOcean. Back end of Slack, DigitalOcean. It's true. They're really powerful.

225
00:23:50,000 --> 00:23:54,000
And they're super easy to work with. So try them out. DO.CO slash coder.

226
00:23:54,000 --> 00:24:00,000
And a big thank you to DigitalOcean for sponsoring the Coder Radio program. DO.CO slash coder.

227
00:24:00,000 --> 00:24:09,000
So we have ourselves the top programming languages for 2018 as published by the IEEE.org.

228
00:24:09,000 --> 00:24:16,000
On their IEEE Spectrum blog. And the number one. Let's save the number one for last.

229
00:24:16,000 --> 00:24:18,000
Let's save the number one for last. Let's do number ten.

230
00:24:18,000 --> 00:24:23,000
It's not Rust. Did you review this list? Did you see this? This is an interesting list I think.

231
00:24:23,000 --> 00:24:27,000
I have lots of comments. Yes I did review it. I'll tell you there's a big upset on the list.

232
00:24:27,000 --> 00:24:32,000
And I don't know. I don't. I mean. Do they. So let's see here.

233
00:24:32,000 --> 00:24:35,000
So our interactive apps let you choose the metrics. Wait on it.

234
00:24:35,000 --> 00:24:39,000
Okay so they've got an interactive app. I'm trying to figure out how they source this though.

235
00:24:39,000 --> 00:24:45,000
So they talk about. Yeah they do a survey every year. Just like Stack Overflow does.

236
00:24:45,000 --> 00:24:51,000
In 47 different languages. Multiple sources. Yeah. So they do a pretty big survey.

237
00:24:51,000 --> 00:24:56,000
I mean it is the IEEE right? It is the IEEE. So let's start from the bottom.

238
00:24:56,000 --> 00:25:01,000
Number ten. Assembly. Not too surprising there. I mean that seems like a pretty niche thing.

239
00:25:01,000 --> 00:25:08,000
This one surprised me. Number nine. Go. And while we're at it. Number eight. JavaScript.

240
00:25:08,000 --> 00:25:14,000
Like what the hell. Eight and nine in the rankings. I thought JavaScript would be much higher actually.

241
00:25:14,000 --> 00:25:19,000
Yeah. Yeah number eight. JavaScript at number eight.

242
00:25:19,000 --> 00:25:26,000
That seems. That seems really. That seems really far away from number one.

243
00:25:26,000 --> 00:25:31,000
So this is one thing where being IEEE does matter though. IEEE is an engineering.

244
00:25:31,000 --> 00:25:36,000
Originally an electrical engineering association. So their members tend to be.

245
00:25:36,000 --> 00:25:40,000
Dark matter. Dark matter but also like embedded.

246
00:25:40,000 --> 00:25:44,000
Like if we did this on Stack Overflow Assembly would not even. Right.

247
00:25:44,000 --> 00:25:49,000
Right. This is. That's where I was going to take us. Yes exactly.

248
00:25:49,000 --> 00:25:52,000
And I think that's what makes this a fascinating insight.

249
00:25:52,000 --> 00:25:56,000
Because it's like. It's like bizarro survey universe.

250
00:25:56,000 --> 00:26:00,000
Where you survey an entire different category of the industry or categories of the industry.

251
00:26:00,000 --> 00:26:03,000
And you see you get a totally different response. So let's keep going.

252
00:26:03,000 --> 00:26:07,000
Number seven. R. Number six. Just about in the middle. PHP.

253
00:26:07,000 --> 00:26:12,000
Number five. C sharp. Number four. Java.

254
00:26:12,000 --> 00:26:15,000
I bet some of you thought that was going to be closer to number one.

255
00:26:15,000 --> 00:26:22,000
Number four is Java. Number three. C. Number two. C plus plus.

256
00:26:22,000 --> 00:26:27,000
And the number one ranked language according to the IEEE.

257
00:26:27,000 --> 00:26:32,000
Member survey and their spectrum readers and their industry participants.

258
00:26:32,000 --> 00:26:37,000
The number one language is Python.

259
00:26:37,000 --> 00:26:41,000
Amazing. Amazing.

260
00:26:41,000 --> 00:26:45,000
So that's got to be a lot of internal projects and stuff like that right.

261
00:26:45,000 --> 00:26:50,000
Well they actually in their write up they list one of the reasons that was reported to them as Python.

262
00:26:50,000 --> 00:26:55,000
Now is basically being used for embedded programming right alongside like C and C plus.

263
00:26:55,000 --> 00:27:00,000
Yeah they say Python is now listed as an embedded language previously writing for embedded applications.

264
00:27:00,000 --> 00:27:05,000
Tilted heavily towards compiled languages to avoid the overhead of evaluating code on the fly.

265
00:27:05,000 --> 00:27:08,000
On machines with limited processing power and memory.

266
00:27:08,000 --> 00:27:11,000
But while Moore's law may be fading it's not dead yet.

267
00:27:11,000 --> 00:27:16,000
Many modern microcontrollers now have more than enough power to host a Python interpreter.

268
00:27:16,000 --> 00:27:26,000
A nice aspect of using Python is that this way it's very handy in certain types of applications to play with attached hardware via an interactive prompt.

269
00:27:26,000 --> 00:27:29,000
Or dynamically reloading scripts on the fly.

270
00:27:29,000 --> 00:27:33,000
Growing into a new domain can only help boost Python's popularity.

271
00:27:33,000 --> 00:27:39,000
But there's another reason Python's increasing popularity may be seen in R's small decline.

272
00:27:39,000 --> 00:27:42,000
R peaked at number five in 2016.

273
00:27:42,000 --> 00:27:46,000
Dropped to number six last year and now is in seventh place.

274
00:27:46,000 --> 00:27:50,000
R is a language specialized for handling statistics and big data.

275
00:27:50,000 --> 00:27:56,000
As the interest in large data sets has increasingly turned to their applications in machine learning.

276
00:27:56,000 --> 00:28:08,000
The existence of high quality Python libraries for both statistics and machine learning may be making flexible Python a more attractive jumping off point than the more specialized R.

277
00:28:08,000 --> 00:28:12,000
That actually checks out. You know what? That all kind of makes sense.

278
00:28:12,000 --> 00:28:18,000
ActionScript has seen a small eke in the numbers way back in the rankings.

279
00:28:18,000 --> 00:28:19,000
Amazing.

280
00:28:19,000 --> 00:28:20,000
I know.

281
00:28:20,000 --> 00:28:27,000
And Google's Go has interestingly I think declined.

282
00:28:27,000 --> 00:28:28,000
Let's see here.

283
00:28:28,000 --> 00:28:30,000
We see that Google's Go has risen from number seven to number five.

284
00:28:30,000 --> 00:28:33,000
But perhaps the biggest mover is Scala.

285
00:28:33,000 --> 00:28:35,000
I see Google Go at number nine.

286
00:28:35,000 --> 00:28:37,000
So I don't know. What do I know?

287
00:28:37,000 --> 00:28:38,000
But this is a great list.

288
00:28:38,000 --> 00:28:39,000
I'll link it again.

289
00:28:39,000 --> 00:28:40,000
It'll be linked to the show notes.

290
00:28:40,000 --> 00:28:43,000
But man, it is a really yeah.

291
00:28:43,000 --> 00:28:46,000
You're so you still you still nail it with the stack exchange thing or the stack overflow.

292
00:28:46,000 --> 00:28:51,000
Like if you go if you went over there and posted this on one of those Q&A forums, it would be all web languages.

293
00:28:51,000 --> 00:28:54,000
And Swift and Objective C.

294
00:28:54,000 --> 00:28:55,000
Swift would be up there.

295
00:28:55,000 --> 00:28:56,000
Kotlin would be in there.

296
00:28:56,000 --> 00:29:03,000
And Rust for all our listeners who have a deep love of Rust.

297
00:29:03,000 --> 00:29:06,000
You know, where's Rust? Come on.

298
00:29:06,000 --> 00:29:08,000
I just don't get it. All right.

299
00:29:08,000 --> 00:29:09,000
The whole Rust thing.

300
00:29:09,000 --> 00:29:12,000
Like, did you think it was going to take over the world?

301
00:29:12,000 --> 00:29:18,000
Yeah, although Swift Swift not being on this list makes me so happy.

302
00:29:18,000 --> 00:29:20,000
Yeah. Yeah.

303
00:29:20,000 --> 00:29:21,000
Yeah.

304
00:29:21,000 --> 00:29:22,000
No, but I mean, C plus plus.

305
00:29:22,000 --> 00:29:25,000
I mean, number two.

306
00:29:25,000 --> 00:29:26,000
Rocking.

307
00:29:26,000 --> 00:29:27,000
See, number three.

308
00:29:27,000 --> 00:29:28,000
Right. That's a pretty strong.

309
00:29:28,000 --> 00:29:30,000
Yes.

310
00:29:30,000 --> 00:29:33,000
Not totally unexpected, though, when you consider the market.

311
00:29:33,000 --> 00:29:35,000
But yeah. Right. Yeah.

312
00:29:35,000 --> 00:29:38,000
Good to see that Java at number four.

313
00:29:38,000 --> 00:29:42,000
I actually thought it would be two or three. I really did.

314
00:29:42,000 --> 00:29:47,000
Well, you know, I mean, when you hear about the use for Java, wasn't this one of the promises?

315
00:29:47,000 --> 00:29:49,000
What is the embedded?

316
00:29:49,000 --> 00:29:51,000
I just thought that was the promise.

317
00:29:51,000 --> 00:29:56,000
You know, Java Duke has promised us a lot of stuff for a long time.

318
00:29:56,000 --> 00:29:57,000
How about Go, though?

319
00:29:57,000 --> 00:30:00,000
I think Go is kind of the dark horse on this list other than Python.

320
00:30:00,000 --> 00:30:01,000
Yeah. Why so?

321
00:30:01,000 --> 00:30:05,000
Just because I'm thinking about the group of people who would have been surveyed here.

322
00:30:05,000 --> 00:30:08,000
I get C, I get C plus plus.

323
00:30:08,000 --> 00:30:10,000
I'm curious as to what they're doing with Go.

324
00:30:10,000 --> 00:30:12,000
I can only imagine a lot of like.

325
00:30:12,000 --> 00:30:18,000
Server side programs that they would have written C before.

326
00:30:18,000 --> 00:30:20,000
Hmm, I bet you.

327
00:30:20,000 --> 00:30:21,000
Yeah, that's right.

328
00:30:21,000 --> 00:30:22,000
That's the only thing.

329
00:30:22,000 --> 00:30:23,000
Yeah.

330
00:30:23,000 --> 00:30:26,000
Just crunch some data, run some routine kind of stuff.

331
00:30:26,000 --> 00:30:29,000
That would be that's got to be interesting.

332
00:30:29,000 --> 00:30:31,000
Well.

333
00:30:31,000 --> 00:30:32,000
I like this.

334
00:30:32,000 --> 00:30:33,000
I'm glad you found this.

335
00:30:33,000 --> 00:30:35,000
I think we should probably move on.

336
00:30:35,000 --> 00:30:38,000
People probably getting bored with it, but I could I could just dig through this all day.

337
00:30:38,000 --> 00:30:39,000
I really could.

338
00:30:39,000 --> 00:30:40,000
So why don't we talk a little cute, though?

339
00:30:40,000 --> 00:30:48,000
While we're kind of in the mood, we started teasing it last week and I've always kind of felt like it was.

340
00:30:48,000 --> 00:30:52,000
Too complicated, so I'm curious to hear your thoughts on modern cute.

341
00:30:52,000 --> 00:30:55,000
What's it what's it like?

342
00:30:55,000 --> 00:30:59,000
Yeah, so I have been toying with cute for a little bit.

343
00:30:59,000 --> 00:31:01,000
I dip my toes in, dipped out.

344
00:31:01,000 --> 00:31:05,000
I looked at it years ago once before, did something small in it, but it's so different now.

345
00:31:05,000 --> 00:31:06,000
So let's just pretend like it's brand.

346
00:31:06,000 --> 00:31:08,000
Okay.

347
00:31:08,000 --> 00:31:11,000
Cute has a long history.

348
00:31:11,000 --> 00:31:13,000
And.

349
00:31:13,000 --> 00:31:20,000
While cute creator is a decent environment.

350
00:31:20,000 --> 00:31:22,000
You can tell it's one of those tools, right?

351
00:31:22,000 --> 00:31:25,000
It's almost like a visual studio or a IntelliJ.

352
00:31:25,000 --> 00:31:29,000
Like you can tell it needs to accommodate a ton of different stuff.

353
00:31:29,000 --> 00:31:33,000
In fact, it reminds me of Eclipse a lot, although I think it may actually be based on Eclipse.

354
00:31:33,000 --> 00:31:36,000
Somebody could correct that if I'm wrong.

355
00:31:36,000 --> 00:31:43,000
High level, cute is a C++, but you can in theory use other languages.

356
00:31:43,000 --> 00:31:45,000
Software development platform.

357
00:31:45,000 --> 00:31:47,000
There's two different versions of it.

358
00:31:47,000 --> 00:31:52,000
There's cute widgets, which is kind of the older way to do UIs, which is not what I'm doing.

359
00:31:52,000 --> 00:31:53,000
And there's QML.

360
00:31:53,000 --> 00:31:57,000
Yeah, which is so.

361
00:31:57,000 --> 00:31:59,000
Weird.

362
00:31:59,000 --> 00:32:01,000
How do we describe QML?

363
00:32:01,000 --> 00:32:03,000
It's like a cute markup language.

364
00:32:03,000 --> 00:32:05,000
Is that a fair?

365
00:32:05,000 --> 00:32:09,000
I wanted to compare it to like XAML from Xamarin and from.NET.

366
00:32:09,000 --> 00:32:11,000
It stands for cute modeling language.

367
00:32:11,000 --> 00:32:12,000
That's what it is.

368
00:32:12,000 --> 00:32:15,000
Yeah, it's like.

369
00:32:15,000 --> 00:32:16,000
I don't even know what to say, right?

370
00:32:16,000 --> 00:32:20,000
Like in the old Xamarin forms apps, and I think you can still do it in Xamarin.

371
00:32:20,000 --> 00:32:21,000
Someone correct me if I'm wrong.

372
00:32:21,000 --> 00:32:28,000
Before you could do XAML proper on the Mac, you had to do like this weird C Sharp-y markup-y style.

373
00:32:28,000 --> 00:32:35,000
Yeah, so they say it's an interface markup language, a declarative language similar to CSS or JSON for design user interfaces.

374
00:32:35,000 --> 00:32:38,000
Inline JavaScript code handles imperative aspects.

375
00:32:38,000 --> 00:32:44,000
It's associated with Qt Quick, the UI creation kit originally developed by Nokia.

376
00:32:44,000 --> 00:32:46,000
That rings a bell.

377
00:32:46,000 --> 00:32:47,000
That's right.

378
00:32:47,000 --> 00:32:48,000
Oh, yeah.

379
00:32:48,000 --> 00:32:49,000
So this is all Nokia, right?

380
00:32:49,000 --> 00:32:51,000
We're going way, we're going back in time here.

381
00:32:51,000 --> 00:32:53,000
I remember, yeah.

382
00:32:53,000 --> 00:33:03,000
It works surprisingly well, and it works on Linux, Mac OS, Windows.

383
00:33:03,000 --> 00:33:06,000
And with a little bit of work, you can get your application onto mobile.

384
00:33:06,000 --> 00:33:14,000
And almost ever I found out from the Qt folks, almost every car system that has like a touch screen is running a Qt system.

385
00:33:14,000 --> 00:33:16,000
Oh, really? Fascinating.

386
00:33:16,000 --> 00:33:21,000
You think about it, it's part of the promise of applications that work across different types of screens.

387
00:33:21,000 --> 00:33:22,000
It really is.

388
00:33:22,000 --> 00:33:24,000
It delivers on that.

389
00:33:24,000 --> 00:33:27,000
It delivers on that, but it delivers on it in a really interesting way, right?

390
00:33:27,000 --> 00:33:31,000
So I'm going to ignore some of the weird stuff you can do.

391
00:33:31,000 --> 00:33:38,000
I'm going to take the vanilla example of C++ for your application logic and QML for your UI, right?

392
00:33:38,000 --> 00:33:44,000
So let's not like worry about embedding JavaScript in the QML, and you can do some interesting stuff with that.

393
00:33:44,000 --> 00:33:54,000
But it basically says you have this powerful programming language, C++, that is actually kind of cross-platform.

394
00:33:54,000 --> 00:33:56,000
Although there are different implementations, right?

395
00:33:56,000 --> 00:34:01,000
Like for instance, the Qt app I'm writing has to run on Linux and Windows.

396
00:34:01,000 --> 00:34:06,000
And the Windows build system is annoying because it's Windows.

397
00:34:06,000 --> 00:34:14,000
But on Linux and Mac, this is exactly like if you did any kind of even like hobby development in the 90s,

398
00:34:14,000 --> 00:34:18,000
or if you even just like were learning from people who did things in the 80s,

399
00:34:18,000 --> 00:34:21,000
what's in your user's USR slash bin, right?

400
00:34:21,000 --> 00:34:22,000
What's in your slash includes?

401
00:34:22,000 --> 00:34:26,000
Like this is classic, do you know how the Unix system works?

402
00:34:26,000 --> 00:34:27,000
Yeah.

403
00:34:27,000 --> 00:34:29,000
And it's real easy, right?

404
00:34:29,000 --> 00:34:38,000
You just, you know, our setup script for the project, I'd have another developer come in and help me on it internally at the Mad Botter.

405
00:34:38,000 --> 00:34:42,000
I just sort of bash script to set up his environment.

406
00:34:42,000 --> 00:34:47,000
Because that's the world you're in, which is actually kind of awesome, right?

407
00:34:47,000 --> 00:34:52,000
Because if you're using the C++ standard, every vendor, every OS implements the standard.

408
00:34:52,000 --> 00:34:56,000
They may implement it slightly differently, but they all implement it.

409
00:34:56,000 --> 00:34:59,000
Except on Windows, they have their own weird thing.

410
00:34:59,000 --> 00:35:06,000
So you have to make sure when you go over the Windows that you don't like end up with Microsoft Visual C++ or whatever.

411
00:35:06,000 --> 00:35:10,000
It works, it compiles natively.

412
00:35:10,000 --> 00:35:14,000
I have to say, a cute app can blow away any electron app any day of the week.

413
00:35:14,000 --> 00:35:16,000
Yeah, I agree.

414
00:35:16,000 --> 00:35:17,000
Yeah.

415
00:35:17,000 --> 00:35:22,000
Yeah, you know, they've baked in like they've really they've designed it to be really responsive.

416
00:35:22,000 --> 00:35:29,000
Like one of their goals, like for on touch devices is something that can have 60 frames a second animation, you know, be really smooth.

417
00:35:29,000 --> 00:35:33,000
And that makes a huge difference on the user perception of the quality of the application.

418
00:35:33,000 --> 00:35:38,000
And if you don't believe it, just look at iOS popularity, why people claim they love it.

419
00:35:38,000 --> 00:35:40,000
It's fluid, it's responsive.

420
00:35:40,000 --> 00:35:45,000
It's because they're always going for a high frame rate in all of their applications for every scroll.

421
00:35:45,000 --> 00:35:47,000
And that kind of stuff translates.

422
00:35:47,000 --> 00:35:49,000
I have a couple of just small things.

423
00:35:49,000 --> 00:35:53,000
I have used an embedded device that's using this and it is super smooth.

424
00:35:53,000 --> 00:36:03,000
When I was in Texas, it was a weeks ago now, driving around in a Volkswagen Golf, they have this like seven or eight inch touch screen.

425
00:36:03,000 --> 00:36:08,000
There is a high DPI screen that you would you think it could be a tablet screen.

426
00:36:08,000 --> 00:36:15,000
It probably is a tablet screen and it's running their own Volkswagen OS.

427
00:36:15,000 --> 00:36:20,000
But it is the damn fastest, the most responsive.

428
00:36:20,000 --> 00:36:27,000
They they've done things to improve the response time to by putting a touch sensor below the stereo screen.

429
00:36:27,000 --> 00:36:34,000
So as your hand is approaching the screen, the sensor detects the motion and it preactivate some of the UI elements.

430
00:36:34,000 --> 00:36:37,000
So they are immediately hot and ready to go.

431
00:36:37,000 --> 00:36:39,000
There's so there's literally zero lag.

432
00:36:39,000 --> 00:36:41,000
I mean, they've done a few like things.

433
00:36:41,000 --> 00:36:42,000
And so I'm like, I got to look this up.

434
00:36:42,000 --> 00:36:46,000
This is like the best system I have ever seen in a vehicle.

435
00:36:46,000 --> 00:36:47,000
I can't believe it.

436
00:36:47,000 --> 00:36:51,000
And so I'm looking into it and it's it's QML.

437
00:36:51,000 --> 00:36:53,000
They're doing the UI with QML.

438
00:36:53,000 --> 00:37:01,000
And I didn't really grok all of the details of it, but like the some of the stuff I saw about the way some of the some of the ways they're utilizing it.

439
00:37:01,000 --> 00:37:06,000
It just seems super, super, super convenient, really an efficient way to go.

440
00:37:06,000 --> 00:37:14,000
And you got to wonder, like, if you were building a product today that's going to be on mobile, it's going to be on desktop and you know about this and you don't use it.

441
00:37:14,000 --> 00:37:17,000
Like, what's wrong with you? This stuff seems magic to me.

442
00:37:17,000 --> 00:37:23,000
So it's fascinating that you've been kind of discovering the same thing, because I just recently I mean, those two weeks ago, I was looking into that.

443
00:37:23,000 --> 00:37:27,000
Yeah. And so this leads me into my bullet points here.

444
00:37:27,000 --> 00:37:31,000
I think the primary reason people would not use it is C++.

445
00:37:31,000 --> 00:37:38,000
OK, yeah, you're one of the disadvantages of this is you are back in the land of memory management.

446
00:37:38,000 --> 00:37:41,000
Mm hmm. Kind of.

447
00:37:41,000 --> 00:37:44,000
I mean, yes, but not not so.

448
00:37:44,000 --> 00:37:48,000
So C++ is not the bad old language that it used to be.

449
00:37:48,000 --> 00:37:52,000
Right. I mean, it's no Objective C, but really, who is?

450
00:37:52,000 --> 00:38:06,000
I would argue that if you're a pretty, like, skilled C Sharp developer or, you know, Objective C or Swift or any of those C-esque languages, you probably don't need to be super afraid of C++.

451
00:38:06,000 --> 00:38:16,000
And the nice thing is Q implements like, you know, it has its own libraries, like it has its own string class, which you might think, oh, OK, it's a string.

452
00:38:16,000 --> 00:38:22,000
But actually in C++, you definitely want to use their string class because it's a high level implementation.

453
00:38:22,000 --> 00:38:27,000
You don't have, you know, character arrays or that kind of crap.

454
00:38:27,000 --> 00:38:31,000
I do worry, though, and this is why I don't want to full throated recommend this.

455
00:38:31,000 --> 00:38:33,000
There's a couple of things I don't like.

456
00:38:33,000 --> 00:38:40,000
One, the way they're cute is open source, kind of, but there's a real weird licensing thing going on.

457
00:38:40,000 --> 00:38:43,000
And I tried to get in touch with someone from over there to see if we could have them on.

458
00:38:43,000 --> 00:38:53,000
I haven't heard back yet because I you can use it, but they have a bunch of components and a bunch of extra services that don't come without a license fee.

459
00:38:53,000 --> 00:39:01,000
And they charge per seat per month, which seems like a total blast from the past to me for a development platform.

460
00:39:01,000 --> 00:39:04,000
Qt has also been through many, many hands.

461
00:39:04,000 --> 00:39:08,000
Yes. Right. It began with it seems like it's settled, though, right?

462
00:39:08,000 --> 00:39:10,000
It seems like it's settled. I mean, it's its own thing now.

463
00:39:10,000 --> 00:39:22,000
It in a lot of ways, the primary driver for me looking at it was I need this GUI application to actually run on mainstream Linux, Linux disk rows and on Windows.

464
00:39:22,000 --> 00:39:34,000
So once you add Linux into your into your requirements, that knocks out, you know, we have platform UNO on UWP, Xamarin,

465
00:39:34,000 --> 00:39:41,000
Electron was theoretically possible, but I did a prototype and it was just not a good idea for what I'm doing.

466
00:39:41,000 --> 00:39:45,000
And you get down to, OK, well, what runs everywhere? Right.

467
00:39:45,000 --> 00:39:49,000
And not in some weird VM, not in some like.

468
00:39:49,000 --> 00:39:54,000
You know, re-implementing everything, what actually runs natively everywhere?

469
00:39:54,000 --> 00:40:00,000
And you really can't go wrong, so you can't go wrong, but it's something I would urge you to consider.

470
00:40:00,000 --> 00:40:04,000
I'm not going to do a full throated, hey, guys, you should definitely look at Q.

471
00:40:04,000 --> 00:40:08,000
I mean. It is C++.

472
00:40:08,000 --> 00:40:12,000
You can and I know we have a lot of web developers who listen.

473
00:40:12,000 --> 00:40:18,000
You can almost certainly shoot yourself in the foot and you do have to know about pointers.

474
00:40:18,000 --> 00:40:24,000
I think you should all know about pointers, but I know it's just not the case.

475
00:40:24,000 --> 00:40:26,000
So, Chris, I have a question for you.

476
00:40:26,000 --> 00:40:32,000
Is this just me on my old man train again? Have I left the station and am I going back?

477
00:40:32,000 --> 00:40:38,000
I was wondering, you know, but I think you're I think you're on the right track with this one.

478
00:40:38,000 --> 00:40:41,000
I really do. You might I mean, you might be on the old man train regardless.

479
00:40:41,000 --> 00:40:45,000
Sorry, but I think at least it's going in the right direction on this one.

480
00:40:45,000 --> 00:40:48,000
Having having seen some examples of what it can do.

481
00:40:48,000 --> 00:40:53,000
The Ubuntu phone project, it was, you know, they didn't they didn't really fully make it to orbit,

482
00:40:53,000 --> 00:40:57,000
but they did lift off the ground like they did get the phone out to carriers.

483
00:40:57,000 --> 00:41:02,000
The BQ whoever was made a few devices like in some ways, you know,

484
00:41:02,000 --> 00:41:07,000
it's a measurable success to go from concept to actually carriers that are selling it to customers.

485
00:41:07,000 --> 00:41:12,000
And they their whole UI was done this way with QML and Qt.

486
00:41:12,000 --> 00:41:17,000
And the results that they demonstrated were pretty remarkable.

487
00:41:17,000 --> 00:41:19,000
And some of those applications continue to live on.

488
00:41:19,000 --> 00:41:23,000
In fact, I think one of the reasons the Ubiports project, which is continuing Ubuntu phone,

489
00:41:23,000 --> 00:41:31,000
I think one of the reasons they live on is is because of the foundation canonical used to build it because it is solid.

490
00:41:31,000 --> 00:41:36,000
And it was impressive what they managed to get done in such a short period of time.

491
00:41:36,000 --> 00:41:41,000
And those QML applications still live on their terminal application and their file manager.

492
00:41:41,000 --> 00:41:43,000
What they still live on. People like them.

493
00:41:43,000 --> 00:41:49,000
And it's fascinating to use them because you can resize them and watch them relay out their UI.

494
00:41:49,000 --> 00:41:53,000
And if you size it up real small on a desktop, it looks like a phone UI.

495
00:41:53,000 --> 00:41:58,000
But it's still fully functional with the mouse. And there's something to that.

496
00:41:58,000 --> 00:42:01,000
And it's a quest that you've been on for a while.

497
00:42:01,000 --> 00:42:09,000
And I think in the background there has been little chants of Mike, check out Q, Mike, check out Q.

498
00:42:09,000 --> 00:42:11,000
But it's not been like a strong chorus.

499
00:42:11,000 --> 00:42:15,000
But I think those people were on the right track, too.

500
00:42:15,000 --> 00:42:20,000
No, I think they were. And I think this actually kind of ties into our thing, our post from IEEE,

501
00:42:20,000 --> 00:42:27,000
where in what I'm finding is as I'm kind of like digging into the Q community a little more,

502
00:42:27,000 --> 00:42:31,000
this has been used all over the place by all kinds of engineering companies.

503
00:42:31,000 --> 00:42:33,000
Yeah. And I just a real time follow up.

504
00:42:33,000 --> 00:42:41,000
I can confirm from someone in the chat room that Tesla is or was using Q in their cars.

505
00:42:41,000 --> 00:42:44,000
Yeah. That doesn't surprise me at all.

506
00:42:44,000 --> 00:42:48,000
Well, I found out like a lot of folks are just like smart TV interfaces are using this.

507
00:42:48,000 --> 00:42:50,000
LG, another big name.

508
00:42:50,000 --> 00:42:51,000
LG uses it.

509
00:42:51,000 --> 00:43:02,000
Yeah. See, the thing is with both the Volkswagen and the Teslas, they have like actual GPUs in these cars.

510
00:43:02,000 --> 00:43:05,000
And I'm not saying like Q and QML require that.

511
00:43:05,000 --> 00:43:08,000
But the thing is, is it just so beautifully scales up.

512
00:43:08,000 --> 00:43:14,000
Like if you have low resources, if you're constrained, you can make it work like even a watch.

513
00:43:14,000 --> 00:43:23,000
But if you can go up to something that has a full arm CPU with a real GPU as far as these system on chips go, like a Tegra,

514
00:43:23,000 --> 00:43:28,000
you can you can make a beautiful interface with it's got sweeping animations.

515
00:43:28,000 --> 00:43:31,000
It's got full renderings of the car.

516
00:43:31,000 --> 00:43:39,000
When you put the car in reverse, it has a radar scanning animation that's gorgeous and fluid 60 frames a second that comes up

517
00:43:39,000 --> 00:43:45,000
and identifies objects around you, identifies open parking spots and if your car can fit in them

518
00:43:45,000 --> 00:43:50,000
and then represents all of that information on the infotainment screen while you're backing up.

519
00:43:50,000 --> 00:43:52,000
And I buried the lead on you.

520
00:43:52,000 --> 00:43:53,000
Oh, yeah. What's that?

521
00:43:53,000 --> 00:43:55,000
There are Python bindings.

522
00:43:55,000 --> 00:43:57,000
Very good.

523
00:43:57,000 --> 00:43:58,000
Very good.

524
00:43:58,000 --> 00:43:59,000
Yeah, of course.

525
00:43:59,000 --> 00:44:02,000
So, yeah, you did kind of hint that you don't have to use C++.

526
00:44:02,000 --> 00:44:03,000
But you don't have to.

527
00:44:03,000 --> 00:44:05,000
It feels like the focus, though.

528
00:44:05,000 --> 00:44:07,000
That really does feel like the focus.

529
00:44:07,000 --> 00:44:11,000
Yeah. I mean, obviously, I mean, the Python bindings are supposedly official.

530
00:44:11,000 --> 00:44:15,000
I mean, they say they're official, but the main line is still C++.

531
00:44:15,000 --> 00:44:17,000
Yeah.

532
00:44:17,000 --> 00:44:19,000
I wonder if Tesla will continue to use it.

533
00:44:19,000 --> 00:44:21,000
I know, you know, they change those things up.

534
00:44:21,000 --> 00:44:26,000
They also just announced, like JBLive42 is pointing out in the chat room, that they're going to build their own custom GPU chip.

535
00:44:26,000 --> 00:44:28,000
That should go pretty swell.

536
00:44:28,000 --> 00:44:33,000
But, yeah, I actually think the old man train is on time and going in the right direction.

537
00:44:33,000 --> 00:44:35,000
And I fully encourage it.

538
00:44:35,000 --> 00:44:36,000
I've been super impressed.

539
00:44:36,000 --> 00:44:39,000
Also, you know, I'm coming from somebody who uses the Plasma Desktop now.

540
00:44:39,000 --> 00:44:43,000
So, a lot of the widgets I use on the Plasma Desktop are QML and whatnot.

541
00:44:43,000 --> 00:44:45,000
And it's just been super rock solid.

542
00:44:45,000 --> 00:44:46,000
They've been really great.

543
00:44:46,000 --> 00:44:48,000
And they weren't always that way.

544
00:44:48,000 --> 00:44:50,000
You know, this has been a long process.

545
00:44:50,000 --> 00:44:53,000
These things have not always been this great.

546
00:44:53,000 --> 00:45:01,000
Yeah, they legitimately took their time to cook and we're just sort of reaping the benefits of that slog now, I think.

547
00:45:01,000 --> 00:45:03,000
And I think the future is bright.

548
00:45:03,000 --> 00:45:12,000
Isn't it interesting, though, because don't you see kind of a bifurcated world here where there's one, like broadly speaking, there's two camps of thinking on this stuff.

549
00:45:12,000 --> 00:45:18,000
And I'm just going to use Linux desktop environments because, you know, nobody ever gets upset when you talk about them.

550
00:45:18,000 --> 00:45:19,000
Ready for this?

551
00:45:19,000 --> 00:45:20,000
Yeah.

552
00:45:20,000 --> 00:45:23,000
There's one which is more in the, let's call it the, we'll call it the Q camp.

553
00:45:23,000 --> 00:45:24,000
It's really like a native camp.

554
00:45:24,000 --> 00:45:25,000
Right.

555
00:45:25,000 --> 00:45:27,000
And there's no one which is like, let's throw JavaScript in your desktop.

556
00:45:27,000 --> 00:45:28,000
Nothing bad's going to happen.

557
00:45:28,000 --> 00:45:29,000
Yeah.

558
00:45:29,000 --> 00:45:30,000
Yeah.

559
00:45:30,000 --> 00:45:31,000
Fair.

560
00:45:31,000 --> 00:45:32,000
I mean, QML can have some JavaScript in it, too.

561
00:45:32,000 --> 00:45:33,000
Yeah.

562
00:45:33,000 --> 00:45:34,000
Yeah.

563
00:45:34,000 --> 00:45:38,000
I mean, the truth is there's a lot of overlap, too, with WebAssembly.

564
00:45:38,000 --> 00:45:48,000
But I feel like what it is, this is my personal opinion, having watched these markets for 13 years now, pretty closely covering it every single week.

565
00:45:48,000 --> 00:46:00,000
And what happened was is that the reality is the Linux desktops for a very, very, very long time have had a big, huge shit sandwich that they have to eat.

566
00:46:00,000 --> 00:46:06,000
And Plasma ate that sandwich back of the switch to Plasma 5.

567
00:46:06,000 --> 00:46:15,000
When they went from KDE 4 to Plasma 5, they started investing in an architecture and in a way you build things.

568
00:46:15,000 --> 00:46:18,000
And it was more than just a reboot.

569
00:46:18,000 --> 00:46:21,000
In fact, the UI saw very little significant overhaul.

570
00:46:21,000 --> 00:46:28,000
It was remarkable how they managed to reimplement the old 4 version in the 5 version of the desktop.

571
00:46:28,000 --> 00:46:30,000
Like, they've spent a lot of time doing that.

572
00:46:30,000 --> 00:46:38,000
And it was because what their focus was wasn't on revitalizing and revamping the entire UI like Gnome 3 did.

573
00:46:38,000 --> 00:46:45,000
Their focus was on the technological fundamentals and later on and very quickly on integrating technologies like QML.

574
00:46:45,000 --> 00:46:49,000
And they have been iterating on that now for seven or eight years.

575
00:46:49,000 --> 00:46:52,000
I mean, I don't remember the dates exactly, but it's been a long time.

576
00:46:52,000 --> 00:46:53,000
Let's say five years.

577
00:46:53,000 --> 00:46:55,000
They've been iterating and iterating and improving that.

578
00:46:55,000 --> 00:46:59,000
And now they've gotten to the point where they have LTS releases that they support for multiple years.

579
00:46:59,000 --> 00:47:06,000
And they've really developed this, where Gnome has punted that shit sandwich down the road.

580
00:47:06,000 --> 00:47:17,000
And they just now, finally, after a year of writing the post, one of the developers released a post suggesting it is time to remove the ability to theme Gnome.

581
00:47:17,000 --> 00:47:25,000
And there is conversations in the work to discontinue the extensions or fundamentally alter the way they function.

582
00:47:25,000 --> 00:47:31,000
And then, of course, all this is going on while they're trying to figure out how to make Wayland work.

583
00:47:31,000 --> 00:47:33,000
And they have this issue where everything's on a single thread.

584
00:47:33,000 --> 00:47:35,000
Everything's on a single process.

585
00:47:35,000 --> 00:47:39,000
Which on Wayland, and Fedora has noticed this is a big issue.

586
00:47:39,000 --> 00:47:49,000
In fact, the number one causes of crashes on the Fedora 28 desktop right now is an extension failure in Gnome 3, which then takes out the shell.

587
00:47:49,000 --> 00:47:57,000
And since the shell and the compositor and the extensions are all one thread, when it takes out the compositor on Wayland, it takes out your display server.

588
00:47:57,000 --> 00:48:00,000
Wayland is just protocols. It's not a display server.

589
00:48:00,000 --> 00:48:10,000
Gnome is acting as its own display server now on Wayland, and it's all one process because they didn't want to eat the shit sandwich of inter-process communication and security that comes with that.

590
00:48:10,000 --> 00:48:17,000
They didn't, so they punted it down the road, and now what's happening is the number one cause of crashes, Gnome 3 shell extension crashes.

591
00:48:17,000 --> 00:48:26,000
It takes out the shell desktop, which takes out the compositor, which drops them back down to either the command line or a login prompt if they're lucky.

592
00:48:26,000 --> 00:48:32,000
And so this issue has basically caused the conversation of, well, what are we going to do? Do we just get rid of extensions?

593
00:48:32,000 --> 00:48:39,000
Because they're still not willing to fundamentally redesign the technical architecture of the desktop.

594
00:48:39,000 --> 00:48:49,000
And so while GTK is fine, and GTK 3 keeps getting great features, and they're getting really close to just like a stable point for GTK 3,

595
00:48:49,000 --> 00:49:00,000
it is so closely tied to the Gnome shell and the Gnome team and their ambitions and goals that it doesn't really come across as an industry-wide toolkit or option.

596
00:49:00,000 --> 00:49:05,000
It comes across as a great option if you want to make something on the Gnome desktop.

597
00:49:05,000 --> 00:49:17,000
But if you want to make something that could run on a television, that could run on a car screen, that could run on a watch, a phone, and run on desktops and be performant in those areas, that's not GTK 3.

598
00:49:17,000 --> 00:49:29,000
And the Gnome folks, by refusing still to eat that shit sandwich, are not investing in improving the architecture that they need to really kind of bring up the entire ecosystem over there.

599
00:49:29,000 --> 00:49:40,000
And so when you look at these two options and you say Linux is in your target list, you're really only left with Qt, and then you just happen to assume all the benefits that come with that.

600
00:49:40,000 --> 00:49:46,000
Ironically, all the Linux distros, though, have chosen the Gnome camp, and they're all in on GTK.

601
00:49:46,000 --> 00:49:52,000
So if we control for just a minute, we haven't talked about your love affair with Plasma.

602
00:49:52,000 --> 00:50:02,000
Why, and believe me, I believe you, why is it that you think so many distros have chosen Gnome over, basically?

603
00:50:02,000 --> 00:50:10,000
Well, I think it's definitely simpler, it's cleaner, and it is a little less distracting.

604
00:50:10,000 --> 00:50:16,000
So it really is probably, it's Mac OS from a UI standpoint done right, I think.

605
00:50:16,000 --> 00:50:18,000
I think it's a little better than Mac OS.

606
00:50:18,000 --> 00:50:31,000
When you really get it dialed in, when you think about how it really stays out of your way, and it's minimal, but it has a decent launcher, a dock, depending on how you configure it, the idea and the curb appeal is high.

607
00:50:31,000 --> 00:50:41,000
But the problem is, once you start losing work, those things become less attractive and less attractive, and man, did they hold me for a while.

608
00:50:41,000 --> 00:50:46,000
Because I really just need a system that works, and I just want it to be clean, simple, and out of my way.

609
00:50:46,000 --> 00:50:48,000
I don't need to do a whole lot of stuff.

610
00:50:48,000 --> 00:51:05,000
So it took me three goes, but by getting slowly and then failing, and then going back and trying Plasma again and failing, and then going back, each time I got a little bit further, I learned a little bit more, and I kind of relearned how I need to set up the desktop to make it work for me.

611
00:51:05,000 --> 00:51:08,000
And since then, I mean, there's just no going back for me.

612
00:51:08,000 --> 00:51:21,000
Because it's, not only is it super reliable, and use less memory than GNOME, but it feels like, what it feels like is when computers were still awesome.

613
00:51:21,000 --> 00:51:30,000
And they were getting faster every year, and Microsoft and Apple were all in, full bore, trying to make the best competitive desktop with each other.

614
00:51:30,000 --> 00:51:45,000
And that's the only thing they were competing on, was really the desktop, and Linux was like just this up-and-comer that was trying as hard as it could to catch up and even surpass in certain areas, and it was just all about the x86 desktop.

615
00:51:45,000 --> 00:51:51,000
And we were getting new stuff, like people were thinking of new things that you could put in there that were actually useful.

616
00:51:51,000 --> 00:52:00,000
It wasn't to the point now where you had to add voice assistants and all these crazy tie-in features that come with the overhead of being a company that has all these other agendas.

617
00:52:00,000 --> 00:52:03,000
It was just, let's make the desktop great.

618
00:52:03,000 --> 00:52:05,000
And that's what Plasma feels like.

619
00:52:05,000 --> 00:52:17,000
They're not removing features, they're not taking things away, they're carefully improving upon the existing UI, carefully trying to make things a little cleaner, a little simpler,

620
00:52:17,000 --> 00:52:26,000
while at the same time, not completely letting off the gas of new features, and slowly adding in new features, and sometimes while doing that, tidying up the way things are done.

621
00:52:26,000 --> 00:52:34,000
But it always net results in either more stuff I can do now with my desktop, or stuff I just don't even have to pay any attention to.

622
00:52:34,000 --> 00:52:36,000
The worst case is it doesn't even affect me.

623
00:52:36,000 --> 00:52:39,000
And it's been a fantastic experience.

624
00:52:39,000 --> 00:52:53,000
And I tell that to you on a machine right now that has 18 days of uptime, and I'm sitting next to a system that has 65 days of uptime, and a system that has 33 days of uptime.

625
00:52:53,000 --> 00:52:55,000
They're all running the Plasma desktop.

626
00:52:55,000 --> 00:53:12,000
If you go light on the extensions, then you're good. If you can do that, if you can make GNOME 3 usable, I just kind of resent the fact that I do feel like I have to add about 8 extensions,

627
00:53:12,000 --> 00:53:21,000
I have to go in and I have to turn on minimize and maximize, I don't longer get desktop icons, the file manager has reduction in features every release, there's things about it.

628
00:53:21,000 --> 00:53:32,000
I actually like their design, I do think that it's important that a desktop environment makes strong decisions and stick by a set of ideals, and have a clear vision, which they certainly have.

629
00:53:32,000 --> 00:53:42,000
But fundamentally, and this is my last piece and I'll be done, fundamentally, their vision far exceeds their reach.

630
00:53:42,000 --> 00:53:47,000
And thankfully they've recently gotten some good funding, but it appears from all that funding they're only hiring one core developer.

631
00:53:47,000 --> 00:53:49,000
The rest is all admin.

632
00:53:49,000 --> 00:53:56,000
And really, they need more developers, they need more capacity to accomplish what they're trying to do.

633
00:53:56,000 --> 00:54:03,000
Because at the rate they're going, it's so slow, and there's that sandwich that's still sitting on their plate, and it's not getting any fresher.

634
00:54:03,000 --> 00:54:07,000
And they're just not addressing it, and they keep punting it.

635
00:54:07,000 --> 00:54:20,000
In 2018, that is not a professional grade desktop environment, where everything runs on a single thread and if an extension crashes, or your desktop environment crashes, it takes out your entire display server.

636
00:54:20,000 --> 00:54:24,000
I mean, that's worse than classic Mac OS, that's worse than classic Mac.

637
00:54:24,000 --> 00:54:27,000
Yeah, I mean, just a real world example.

638
00:54:27,000 --> 00:54:31,000
So I'm running POP before that, I was running Ubuntu, but they're both Note 3, right?

639
00:54:31,000 --> 00:54:35,000
In fact, POP is really very Ubuntu-like.

640
00:54:35,000 --> 00:54:37,000
It's basically Ubuntu.

641
00:54:37,000 --> 00:54:40,000
And for some reason, I thought I was an idiot, because I couldn't...

642
00:54:40,000 --> 00:54:49,000
You know how on a Mac, or really any desktop environment, you can change, you can have a folder of images and change the wallpaper on your desktop.

643
00:54:49,000 --> 00:54:51,000
Oh yeah, no, can't do that, no.

644
00:54:51,000 --> 00:54:53,000
Can't do it. You've got to install an extension.

645
00:54:53,000 --> 00:55:02,000
So I installed an extension that was recommended, and I'm thinking, why is my machine so goddamn unstable?

646
00:55:02,000 --> 00:55:07,000
And I was really about to rage quit and just go to Mac, but I'll just deal with Mac.

647
00:55:07,000 --> 00:55:13,000
And I found out that the process that was crashing was caused by the extension.

648
00:55:13,000 --> 00:55:20,000
Every once in a while, it would try to flip to a new image, and just something wouldn't click right, but it just locks the entire thing up.

649
00:55:20,000 --> 00:55:30,000
I chased my tail for three days, trying to figure out why my system was pausing every three seconds or so.

650
00:55:30,000 --> 00:55:33,000
So much so that even my mouse cursor would freeze up on my screen.

651
00:55:33,000 --> 00:55:39,000
If anything was happening, it would freeze, and I couldn't figure it out.

652
00:55:39,000 --> 00:55:43,000
Audio would keep playing, but everything on the screen would completely freeze, just totally lock up.

653
00:55:43,000 --> 00:55:48,000
And if I had a background process running on a TTY, that would be fine.

654
00:55:48,000 --> 00:55:53,000
But anything graphical would lock up every three seconds or every five seconds.

655
00:55:53,000 --> 00:55:59,000
And it was really brief, it was like half a second, but if you were moving the mouse at the time or looking at a YouTube video, it was definitely noticeable.

656
00:55:59,000 --> 00:56:03,000
And I started thinking, maybe I'm having graphics issues, maybe it's a driver problem.

657
00:56:03,000 --> 00:56:06,000
Turned out it was a Gnome Shell extension.

658
00:56:06,000 --> 00:56:10,000
I can't remember if it was the temperature one or if it was one that was checking the CPU.

659
00:56:10,000 --> 00:56:18,000
But every time it would check in on the stats that it was collecting, it would freeze up the whole UI as it was checking, because it's all a single thread.

660
00:56:18,000 --> 00:56:26,000
And my whole system would lock for half a second until that field updated, and then it would resume.

661
00:56:26,000 --> 00:56:31,000
When I figured that out, first thing I did was turn off the extension, but then I sat with that for a bit and I'm like, you know what, I think I'm done.

662
00:56:31,000 --> 00:56:33,000
This is amateur.

663
00:56:33,000 --> 00:56:42,000
If I wasn't a big fan of Linux, if Windows behaved like this, I would light up Microsoft for weeks on air.

664
00:56:42,000 --> 00:56:51,000
I just want to mention Unity here, if there was something wrong with Unity, why did we have to kill Unity?

665
00:56:51,000 --> 00:56:56,000
Hey man, all good things, all good things I suppose.

666
00:56:56,000 --> 00:57:05,000
But yeah, it has been an interesting thing to discover about where Qt has snuck its way into that we don't even realize, because here's the funny thing about it.

667
00:57:05,000 --> 00:57:09,000
It's usually so well done that it doesn't stand out.

668
00:57:09,000 --> 00:57:18,000
You know what I mean? You can spot the phonies, like the uncanny valley of applications where you go, oh, this is an Android system, I can tell this touchscreen is an Android.

669
00:57:18,000 --> 00:57:25,000
Those kinds of things, or this is an Electron application, or this iOS app is obviously a cross-platform app with Android.

670
00:57:25,000 --> 00:57:34,000
You could just see that uncanny valley, but that's the thing with Qt and QML applications on embedded devices and stuff, there's really no tell.

671
00:57:34,000 --> 00:57:36,000
It just looks highly native and custom.

672
00:57:36,000 --> 00:57:43,000
I mean, I used that VW interface for a week, and when I first sat down I thought, oh, this must be Android.

673
00:57:43,000 --> 00:57:49,000
But then I'm like, I swear to God, my first thought after that was, you know, this seems way too fast to be Android.

674
00:57:49,000 --> 00:57:53,000
Because everything's moving around, everything's fluid, there's no frames being dropped.

675
00:57:53,000 --> 00:57:57,000
So it must not be Android.

676
00:57:57,000 --> 00:57:59,000
Is this like an iPad, just like shove it in?

677
00:57:59,000 --> 00:58:02,000
Yeah, right? I'm like, no, it can't be that. So I had to look it up.

678
00:58:02,000 --> 00:58:05,000
So is it still a thing, and then I know where I have to go, but is it still a thing?

679
00:58:05,000 --> 00:58:13,000
Like back in the Ubuntu 9, 10 days, you used to be able to do this little trick where you would basically have two desktop environments.

680
00:58:13,000 --> 00:58:15,000
And you would just log in to either Node.

681
00:58:15,000 --> 00:58:21,000
Oh, yeah. You could probably, I mean, you could definitely, you can absolutely log out and switch environments, 100%.

682
00:58:21,000 --> 00:58:22,000
You can do that.

683
00:58:22,000 --> 00:58:24,000
Yeah, that's what I'm saying. That's still a thing.

684
00:58:24,000 --> 00:58:26,000
Yeah, oh, yeah, totally.

685
00:58:26,000 --> 00:58:36,000
In fact, one of the things I really like about how Canonical has implemented their GNOME desktop is all of their modifications aren't implemented as individual extensions.

686
00:58:36,000 --> 00:58:39,000
They're implemented as sort of like a customization to GNOME.

687
00:58:39,000 --> 00:58:48,000
And what that means is you can log out and just log into a stock GNOME session with no extensions, no changing, just stock upstream GNOME.

688
00:58:48,000 --> 00:58:54,000
And then log out, hit that dropdown box, log back into their Canonical session and get the full Canonical customization.

689
00:58:54,000 --> 00:59:01,000
I wonder how much somebody running POP, if you were to, just for the hell of an install, KDE, what would happen?

690
00:59:01,000 --> 00:59:06,000
I don't know. There's a meta package. It's like Kubuntu-Desktop or something like that.

691
00:59:06,000 --> 00:59:09,000
You might look it up for that. And then it'll pull down like a whole bunch of stuff.

692
00:59:09,000 --> 00:59:12,000
I mean, it could break your box up a little bit. I don't know about POP OS.

693
00:59:12,000 --> 00:59:18,000
Usually the worst thing that happens and what always kind of annoys me and why I don't tend to do it is you get doubles of stuff.

694
00:59:18,000 --> 00:59:20,000
So now you're going to have G edit and K write.

695
00:59:20,000 --> 00:59:24,000
You're going to have terminal and console, right? And that's just sort of a mess.

696
00:59:24,000 --> 00:59:29,000
Yeah, I know. I mean, I basically live in VS Code, which I might drop from them again, and QT creator.

697
00:59:29,000 --> 00:59:34,000
You know, I am hating on the Electron. You must be whispering in my ear. You've got it.

698
00:59:34,000 --> 00:59:38,000
Hey, I just spec for Electron now, man, and I live with it. I just spec for Electron.

699
00:59:38,000 --> 00:59:39,000
Double the RAM.

700
00:59:39,000 --> 00:59:44,000
See, what's great about Slack is you can just keep adding Slack channels to one application.

701
00:59:44,000 --> 00:59:51,000
So now I'm in like 10 slacks and, you know, I'm only using one app, so I feel like I'm on the other end of that now.

702
00:59:51,000 --> 00:59:53,000
So now it's like totally fair that it's using all that.

703
00:59:53,000 --> 00:59:56,000
You just accept that Slack is using like two gigs of RAM.

704
00:59:56,000 --> 01:00:00,000
Living with abuse here. I'm living with abuse. All right, Mr. Dominic.

705
01:00:00,000 --> 01:00:01,000
All right.

706
01:00:01,000 --> 01:00:03,000
Well, where should we send people to get more of you throughout the week?

707
01:00:03,000 --> 01:00:05,000
Follow at Duminico on Twitter.

708
01:00:05,000 --> 01:00:08,000
That's clever. That's clever advice. I like that. You can follow me on Twitter too.

709
01:00:08,000 --> 01:00:11,000
I'm at Chris LAS. The whole network is at Jupiter Signal.

710
01:00:11,000 --> 01:00:15,000
Links to everything we talked about today, coder.show slash 321.

711
01:00:15,000 --> 01:00:17,000
And hey, consider joining us live.

712
01:00:17,000 --> 01:00:20,000
Get the live time at jupiterbroadcasting.com slash calendar.

713
01:00:20,000 --> 01:00:23,000
And then that live page, jblive.tv.

714
01:00:23,000 --> 01:00:30,000
Also, don't forget that subreddit, coderradio.reddit.com, and that contact page, coder.show slash contact.

715
01:00:30,000 --> 01:00:33,000
We'd love to hear your questions, your thoughts, and your travel hacks.

716
01:00:33,000 --> 01:00:36,000
Okay, everybody. Thanks so much for tuning this week's episode of the Coder Radio program.

717
01:00:36,000 --> 01:00:41,000
And we'll see you right back here next week.

