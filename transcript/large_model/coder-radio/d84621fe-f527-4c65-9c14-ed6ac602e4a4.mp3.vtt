WEBVTT

00:00.000 --> 00:07.000
This is Koda Radio, episode 360, for June 3rd, 2019.

00:31.000 --> 00:44.000
Hello and welcome to Koda Radio, Jupiter Broadcasting's weekly talk show that takes a pragmatic look at the art and business of software development and related technologies.

00:44.000 --> 00:56.000
My name is Wes, and I'm pleased to be joined on this day of WWDC by the one, the only, Mr. Michael Dominic, who I know is all riled up. Welcome, Mike.

00:56.000 --> 01:00.000
Thank you, Wes. I am. And how are you on this holiest of days in the year?

01:00.000 --> 01:08.000
You know, actually, I'm doing great. WWDC has been a lot of fun to watch. I mean, it's still going on right now as we're live.

01:08.000 --> 01:09.000
That's right.

01:09.000 --> 01:19.000
So we're missing a bit of it. But as I was preparing for today's show, I got to tune in. And while I do not currently own any Apple devices whatsoever, it's still just kind of fascinating.

01:19.000 --> 01:24.000
It shows a lot about like the state of the industry and then where they're going. Plus, they've had some big announcements today.

01:24.000 --> 01:28.000
Oh, yeah. Big as in huge.

01:28.000 --> 01:35.000
But before we get there, I mean, there's some other stuff to cover. We don't want that to eat the whole darn show today. Of course not.

01:35.000 --> 01:48.000
And before any of that news came out, I noticed from some of your tweets, I've inferred that you've kind of been struggling with the machine of yours that we're all a little disappointed you've had to fight so much with.

01:48.000 --> 02:02.000
Yeah, so sadness. If you check out DominicM.com, and I'll throw it in the doc, you'll see that I have been battling my System76 Thalios, fairly aggressive fan noise.

02:02.000 --> 02:12.000
And when I say aggressive, you know, I got to the point of downloading a decibel monitor and actually like putting my hand next to the machine or like putting it on top and measuring it in all different ways.

02:12.000 --> 02:22.000
I was hitting the high 40s to low 50s in decibels at idle, meaning nothing running, just like sitting there on, you know, your gnome desktop.

02:22.000 --> 02:24.000
Oh, that is that is loud.

02:24.000 --> 02:29.000
Right. So all the measurements I'm going to bring out here except for one are idle.

02:29.000 --> 02:36.000
So not spinning up Chrome, not like doing the show, not compiling code, right? Idle.

02:36.000 --> 02:44.000
And it's really a shame because I like the Thalio. It's such a beautiful tower, in my opinion. I know the word is a little controversial, but I like it.

02:44.000 --> 02:54.000
That it was just untenable for me to use it to do the show. And basically like conference calls, which I have four or five times a week.

02:54.000 --> 02:57.000
Yeah, that's kind of important when you're talking to your clients and possibly employees.

02:57.000 --> 03:04.000
Right. So especially now that we're fully remote, it's kind of just not OK for me not to be able to get a clear call through.

03:04.000 --> 03:10.000
So I ended up on Reddit and a bunch of forums basically digging through this problem.

03:10.000 --> 03:18.000
And it turns out because my first thought is, of course, you know, I had this problem a while ago and I just ignored it because I was using the Thalio for other stuff.

03:18.000 --> 03:21.000
And I thought, well, maybe mine is defective. Right. Like maybe there's something weird.

03:21.000 --> 03:24.000
This one needs to be tweaked, whatever. That's not the case.

03:24.000 --> 03:27.000
Right. No, that's not the case. There's a whole pile of people complaining.

03:27.000 --> 03:35.000
But even positive reviews of it mentioned the fan noise. Even my original review mentioned fan noise.

03:35.000 --> 03:38.000
Obviously, I think some people might be able to tolerate it a little better than I can.

03:38.000 --> 03:42.000
Part of it is because, you know, as you know, we're working on sound quality for all the shows.

03:42.000 --> 03:46.000
Right. So having a giant fan behind you is not great.

03:46.000 --> 03:49.000
Right. And this wasn't just the level you were provided behind the scenes.

03:49.000 --> 03:52.000
You'd provide some samples that we were all taking a look at.

03:52.000 --> 03:54.000
Yeah, we were all working on it in Slack.

03:54.000 --> 04:00.000
And it was it was pretty remarkably like you had to do a lot even to get it to the sort of acceptable phase, honestly.

04:00.000 --> 04:06.000
Yeah. So I ended up having to open the case and rewire the. So there's two fans.

04:06.000 --> 04:09.000
Technically, there's three because there's a GPU fan, but I didn't mess with that one.

04:09.000 --> 04:13.000
There's an intake fan at the bottom. There's the GPU fans.

04:13.000 --> 04:22.000
But the two fans we care about are that intake one at the bottom of the case and the CPU fan, which is like if you're looking at it, it's like at the top back.

04:22.000 --> 04:25.000
Right. And it's it's it's a CPU fan that you would expect to see.

04:25.000 --> 04:30.000
Right. So I'm very easy to open up. They did that really well.

04:30.000 --> 04:33.000
The hand screws work great. I did not have any problems.

04:33.000 --> 04:41.000
I ended up figuring out that for whatever reason, with the daughter board, that custom FOSS board that they use,

04:41.000 --> 04:50.000
it wasn't exactly honoring my changes in the BIOS for the fan curve, the fan speed curve, which is set fairly aggressively.

04:50.000 --> 04:55.000
So you could go twiddle and tweak settings in the BIOS. No observable effect.

04:55.000 --> 05:01.000
Which as a Mac guy, I can tell you how happy I am to be tweaking the BIOS and opening a case.

05:01.000 --> 05:04.000
Yeah, that's what users should have to do. Right. I'm already in a dark place.

05:04.000 --> 05:16.000
Right. So, you know, I figure out from reading Reddit and just like tweaking and seeing other people complaining that it looks like it's all this daughter board.

05:16.000 --> 05:23.000
So if I wire it to the motherboard, it being the CPU fan, I bet it will honor the BIOS settings.

05:23.000 --> 05:28.000
Oh, so you just sort of you just routed around. You said the daughter board, it's not working. It's driving the fan too hard.

05:28.000 --> 05:30.000
Let's try the actual BIOS control.

05:30.000 --> 05:35.000
Well, it was either that or, you know, Drew and I were going back and forth and slack talking about different fans I could buy.

05:35.000 --> 05:38.000
But that that's like crazy train. Right. That's.

05:38.000 --> 05:41.000
Yeah, that's that's even farther down the path of madness.

05:41.000 --> 05:43.000
Right. That's like just go buy a Mac Pro. Right.

05:43.000 --> 05:48.000
So I did that, which was a fairly non-involved installation.

05:48.000 --> 05:52.000
I mean, I don't have the there's Thaleo and Thaleo Major and I think there's one above it.

05:52.000 --> 05:57.000
I have the smallest case and a relatively large GPU.

05:57.000 --> 06:03.000
So I did have to like remove the GPU to be able to get my, you know, my hands in there and do everything.

06:03.000 --> 06:11.000
But you know what? Gotta love the industrial design, a lot of good cable management, the actual like hardware side of this.

06:11.000 --> 06:14.000
Though I don't think I should have had to do it was very easy.

06:14.000 --> 06:20.000
OK, so that's not it's not all bad. And if you were making some other hardware swap or upgrade, that'd be a success story.

06:20.000 --> 06:23.000
But you would have preferred not to have to open that thing up at all.

06:23.000 --> 06:29.000
Right. Like after I got it open, I noticed if I wanted to throw another SSD in here, man, would that be dirt simple.

06:29.000 --> 06:32.000
Like that would be the five, ten minute job. Super simple.

06:32.000 --> 06:38.000
But this is, you know, OK, so I wire it there, go into the BIOS and I start screen with the settings.

06:38.000 --> 06:46.000
And it turns out I was able to get it down to about 36 decibels, which is OK.

06:46.000 --> 06:50.000
It's barely acceptable, I think, for a desktop.

06:50.000 --> 06:57.000
The big caveat here was I did not rewire the intake fan because I was concerned about too much heat.

06:57.000 --> 06:59.000
Right. I only rewired the CPU fan.

06:59.000 --> 07:05.000
You were a little concerned. I mean, this is an expensive machine and you don't want to have it, you know, just melt down itself.

07:05.000 --> 07:10.000
Right. And the other thing is just like the way the cables run, the intake fan was just a lot harder to get to.

07:10.000 --> 07:16.000
That was going to be a much more in-depth operation there.

07:16.000 --> 07:20.000
So it was OK for a day or two.

07:20.000 --> 07:25.000
Then my wife, unbeknownst to me this morning, was cold.

07:25.000 --> 07:30.000
So she turned the air conditioner, because I remember Florida, so it's always like 90 degrees, right?

07:30.000 --> 07:32.000
So we always run central air.

07:32.000 --> 07:34.000
So you have AC cranked just 100 percent of the time.

07:34.000 --> 07:40.000
But she turned it down, meaning temperature higher, to 75 today.

07:40.000 --> 07:43.000
Remember, I did not touch the intake fan.

07:43.000 --> 07:49.000
Well, the intake fan felt the increase in temperature today and was right back up to about 45 by itself,

07:49.000 --> 07:53.000
even if the CPU fan didn't come on or barely came on with my new settings.

07:53.000 --> 07:54.000
Wow.

07:54.000 --> 08:00.000
So I ended up making the decision that it wasn't worth it for us to keep, us meaning you, me and Drew,

08:00.000 --> 08:06.000
to keep going back and forth with sample recordings, so I just disconnected the failure.

08:06.000 --> 08:09.000
Having said that, my fan hack does work,

08:09.000 --> 08:15.000
provided you are not already in a relatively hot ambient environment.

08:15.000 --> 08:22.000
And also, there is nothing that would stop you from rewiring the intake fan too.

08:22.000 --> 08:27.000
To their credit, a developer named Michael at System76 did reach out on Twitter.

08:27.000 --> 08:29.000
They are very aware of this issue.

08:29.000 --> 08:38.000
The GitHub issue is linked in the Twitter thread, and we can throw it in the show notes too.

08:38.000 --> 08:40.000
You know, they've known about the issue for a while.

08:40.000 --> 08:42.000
It is hard-coded in the Thaleo firmware.

08:42.000 --> 08:44.000
Oh, man, Ralph.

08:44.000 --> 08:49.000
There's no, like, gooey way or even, like, change a config file way to fix this.

08:49.000 --> 08:51.000
So would you have to, like, reflash that board or something?

08:51.000 --> 08:53.000
Well, they have to patch it, right?

08:53.000 --> 08:55.000
That's going to be the solution.

08:55.000 --> 08:59.000
There's also some question about, like, what is the acceptable number?

08:59.000 --> 09:06.000
I would openly admit that most people aren't doing podcasting and tons of conference calls on Thaleo,

09:06.000 --> 09:10.000
so I imagine maybe a lot of people are more tolerant than I would be.

09:10.000 --> 09:13.000
Yeah, if you just have it in the corner and you're trying to churn through some renders

09:13.000 --> 09:16.000
or, you know, compile a big code base, maybe you don't care.

09:16.000 --> 09:18.000
Or, like, under your desk, right?

09:18.000 --> 09:20.000
Like, if you don't have a carpeted floor, you could put it on the floor,

09:20.000 --> 09:23.000
and then you probably, you know, it's fine.

09:23.000 --> 09:25.000
It'll block some of the noise, at least.

09:25.000 --> 09:27.000
So, I don't know, right?

09:27.000 --> 09:31.000
Like, it is, you know, as I wrote in my post, it's a premium-priced product.

09:31.000 --> 09:34.000
I mean, that's not great.

09:34.000 --> 09:36.000
I hope they fix it.

09:36.000 --> 09:39.000
Right, that PR you linked to did look like they were actively investigating

09:39.000 --> 09:43.000
and even prepared something that might have worked for your issue.

09:43.000 --> 09:46.000
It's just, you know, it's not in the pipeline yet,

09:46.000 --> 09:49.000
and who knows when you'd actually be able to go get that applied to your machine.

09:49.000 --> 09:51.000
I don't even, I mean, I don't know what the, did they have,

09:51.000 --> 09:54.000
like, a firmware updater, so maybe it just rolls out that way?

09:54.000 --> 09:55.000
Yeah, I think it just rolls out.

09:55.000 --> 09:58.000
I think, ideally, it would roll out through the firmware updater.

09:58.000 --> 10:00.000
I think that's how, actually, they do it for them, all of them.

10:00.000 --> 10:03.000
Because there was an issue with the Galagos about a year ago

10:03.000 --> 10:05.000
where that's how they did it, just the firmware updater.

10:05.000 --> 10:06.000
Right, yeah.

10:06.000 --> 10:08.000
So, if they can actually get there, that'll be good,

10:08.000 --> 10:11.000
but it seems like it's taken a long time

10:11.000 --> 10:13.000
for this much information to really be available.

10:13.000 --> 10:17.000
And now that it's out and you can see sort of the open review process on GitHub,

10:17.000 --> 10:19.000
that speaks a lot to kind of the point of this board, right?

10:19.000 --> 10:22.000
They wanted to have this open firmware custom board

10:22.000 --> 10:24.000
so that instead of having to get, you know, secret code

10:24.000 --> 10:27.000
from the motherboard manufacturers to control the fan stuff,

10:27.000 --> 10:29.000
they could do it all in open source

10:29.000 --> 10:31.000
and with their own custom stuff that could be modified.

10:31.000 --> 10:34.000
It seems like we're just a little early in that process

10:34.000 --> 10:37.000
where it doesn't work great for the end user.

10:37.000 --> 10:40.000
Now, maybe down the line, that can change, and it is out in the open,

10:40.000 --> 10:42.000
so there's probably some room there.

10:42.000 --> 10:43.000
Still early days.

10:43.000 --> 10:44.000
Yeah, still early days.

10:44.000 --> 10:49.000
I mean, this is their first, you know, self-100% manufactured piece of hardware.

10:49.000 --> 10:53.000
I don't think, as problems go, this is the worst problem you could have,

10:53.000 --> 10:57.000
and I will be shocked if it's not tweakable via firmware update,

10:57.000 --> 11:02.000
since, you know, the fan curve is, again, currently hard-coded in the daughterboard.

11:02.000 --> 11:05.000
So, really just make a little known utility that I can change that,

11:05.000 --> 11:07.000
and life is great.

11:07.000 --> 11:10.000
So, ask me what solution I ended up going with

11:10.000 --> 11:12.000
that I'm talking to you on right now.

11:12.000 --> 11:16.000
I was going to say your fan noise doesn't sound bad at all today.

11:16.000 --> 11:22.000
Hmm, I'm a little suspicious that it might have something to do with Apple.

11:22.000 --> 11:23.000
Wrong.

11:23.000 --> 11:24.000
What are you using?

11:24.000 --> 11:28.000
I am using the Galago Pro with an eGPU.

11:28.000 --> 11:30.000
Is that right? Okay.

11:30.000 --> 11:31.000
Yeah.

11:31.000 --> 11:34.000
What GPU do you have in your eGPU setup?

11:34.000 --> 11:36.000
Oh, geez, we did an episode on it a few weeks ago.

11:36.000 --> 11:42.000
It is the Radeon Sapphire MX, or, yeah, 560, I think.

11:42.000 --> 11:43.000
Yeah, that's right.

11:43.000 --> 11:45.000
Yeah, in the OWC case,

11:45.000 --> 11:49.000
it's the Apple-recommended one that connects via Thunderbolt.

11:49.000 --> 11:54.000
I am, very ironically for something we're going to talk about later today, Wes,

11:54.000 --> 11:57.000
I think I'm bought in on the eGPU lifestyle now.

11:57.000 --> 11:58.000
Yeah, I'm getting really tempted,

11:58.000 --> 12:02.000
and part of me wants to build a big new honkin' Linux desktop.

12:02.000 --> 12:04.000
Another part of me wants to get something a little smaller

12:04.000 --> 12:07.000
and just go the eGPU route because I have this other, you know,

12:07.000 --> 12:08.000
I have a ThinkPad that I could use with it too.

12:08.000 --> 12:13.000
It just seems like an affordable choice that's working decently enough

12:13.000 --> 12:14.000
if you're all right with tinkering.

12:14.000 --> 12:16.000
Yeah, and it's not that much tinkering, really.

12:16.000 --> 12:18.000
Even on Linux, there's just like a little,

12:18.000 --> 12:21.000
I think you linked it a couple of weeks ago that I ended up using,

12:21.000 --> 12:23.000
a little bash script that just sets it up.

12:23.000 --> 12:25.000
The only big bug that I see on,

12:25.000 --> 12:28.000
I'm running a pop in 1904, so I've been to 1904,

12:28.000 --> 12:32.000
is you cannot like hot unplug your Thunderbolt eGPU.

12:32.000 --> 12:35.000
Yeah, I imagine your graphics card disappearing

12:35.000 --> 12:38.000
is probably an upsetting event to everything depending on that.

12:38.000 --> 12:41.000
Well, Mac actually handles it, and so does Windows.

12:41.000 --> 12:45.000
Well, where do you think you are, Mike? Come on.

12:45.000 --> 12:46.000
Yeah, I know, Jesus.

12:46.000 --> 12:49.000
You want stuff to work or do you want an open source operating system?

12:49.000 --> 12:50.000
In the words of Leonard Pottering,

12:50.000 --> 12:53.000
you're getting this free, stop complaining. Yeah, I got it.

12:53.000 --> 12:54.000
Yeah, that's great.

12:54.000 --> 12:57.000
All right, well, it's nice that that system is working

12:57.000 --> 12:59.000
and that the fan noise is an acceptable level.

12:59.000 --> 13:04.000
For my recording stuff, I've just had to move all my equipment out of the room,

13:04.000 --> 13:05.000
but that's not an ideal choice.

13:05.000 --> 13:07.000
That would have been much too simple.

13:07.000 --> 13:08.000
That would be much too simple.

13:08.000 --> 13:10.000
You got to fight. You want to make it a fight.

13:10.000 --> 13:12.000
That's right. I want the glory of battle.

13:12.000 --> 13:15.000
So I'm curious what you think about,

13:15.000 --> 13:17.000
let's just dive into WWDC

13:17.000 --> 13:22.000
and start with what is maybe the most exciting thing and the most relevant.

13:22.000 --> 13:24.000
The Thaleo not working out too great.

13:24.000 --> 13:27.000
You might be able to find something more to your liking

13:27.000 --> 13:30.000
in an Apple's new Mac Pro.

13:30.000 --> 13:33.000
You know, I really wish Chris was here so I could ask him for,

13:33.000 --> 13:35.000
what is it, $6,000?

13:35.000 --> 13:38.000
Yeah, that is the starting price of this new machine.

13:38.000 --> 13:39.000
Yes, that's right.

13:39.000 --> 13:42.000
You know, it's for show research. We need it.

13:42.000 --> 13:43.000
Yes, exactly.

13:43.000 --> 13:45.000
Xenics Academy will gladly pay for it.

13:45.000 --> 13:49.000
You know, honestly, it would probably make an excellent studio machine.

13:49.000 --> 13:52.000
No, actually, you know, while we were getting ready,

13:52.000 --> 13:56.000
I was kind of looking into the verge right up in the specs.

13:56.000 --> 13:59.000
Many developers are not going to need this machine.

13:59.000 --> 14:02.000
This does sound like kind of a audio production,

14:02.000 --> 14:04.000
particularly video production unit.

14:04.000 --> 14:05.000
Yeah, they're like,

14:05.000 --> 14:08.000
we heard you're disappointed we haven't made a media workstation,

14:08.000 --> 14:11.000
so we are going hard at making a media workstation.

14:11.000 --> 14:12.000
Like, super hard.

14:12.000 --> 14:13.000
Like, I like it.

14:13.000 --> 14:14.000
I mean, Wes, I got to be honest.

14:14.000 --> 14:18.000
If I did not, on a whim, start the eGPU Kool-Aid,

14:18.000 --> 14:21.000
I would probably be saving up for the next 10 years to buy one of these.

14:21.000 --> 14:24.000
Yeah, that's a big investment.

14:24.000 --> 14:28.000
Plus, you still need to buy their new fancy new screen at the same time.

14:28.000 --> 14:30.000
I'm sure you can reuse the screen you have,

14:30.000 --> 14:31.000
but that's just not the Apple way.

14:31.000 --> 14:33.000
It's just not the Apple way.

14:33.000 --> 14:35.000
Was there anything about the Mac Pro that stood out to you?

14:35.000 --> 14:37.000
I mean, first of all, it's not like some stupid shape, right?

14:37.000 --> 14:38.000
We should say that.

14:38.000 --> 14:40.000
It is a tower, effectively.

14:40.000 --> 14:43.000
It looks like, I mean, just a fancy high-end machine.

14:43.000 --> 14:44.000
Yeah, you could recognize that.

14:44.000 --> 14:45.000
Oh, that's a computer.

14:45.000 --> 14:46.000
Yeah, okay.

14:46.000 --> 14:48.000
It's like something you would buy on like Newegg, right?

14:48.000 --> 14:50.000
Like if you buy it for a custom case.

14:50.000 --> 14:51.000
It looks nice.

14:51.000 --> 14:54.000
It looks very much like the old cheese grater Mac Pro,

14:54.000 --> 14:56.000
which is what people want.

14:56.000 --> 14:58.000
Yeah, I like that callback.

14:58.000 --> 14:59.000
It's nice, yeah.

14:59.000 --> 15:03.000
It is massive overkill for all but the highest end of developers, I would say.

15:03.000 --> 15:05.000
Yes, this is not, you know, I mean,

15:05.000 --> 15:08.000
I think many people are willing, maybe not pleased,

15:08.000 --> 15:11.000
but willing to spend somewhere between, you know, $1,500 and $3,000

15:11.000 --> 15:15.000
on a nice workstation for something that just should last a couple of years

15:15.000 --> 15:18.000
and, you know, has decent graphics and nice peripherals and all that.

15:18.000 --> 15:21.000
This is not in that box at all.

15:21.000 --> 15:23.000
It really is like you're a serious professional.

15:23.000 --> 15:27.000
This is coming out of some business line budget somewhere

15:27.000 --> 15:31.000
because it's going to be, you know, it's going to be your main production tool.

15:31.000 --> 15:34.000
And if that's true, it seems awesome.

15:34.000 --> 15:37.000
Like I've known a few shops that have played around with buying, you know,

15:37.000 --> 15:41.000
like custom rigs designed for machine learning data science applications,

15:41.000 --> 15:44.000
which is boxes rigged with GPUs so that you can, you know, train and test,

15:44.000 --> 15:46.000
evaluate models faster right there on your desktop

15:46.000 --> 15:49.000
and not have to push it off to some cluster.

15:49.000 --> 15:52.000
For that space, this seems very competitive, right?

15:52.000 --> 15:57.000
And I'm sure other people working on stuff like ARKit, et cetera,

15:57.000 --> 16:00.000
these will be great machines for that internally too.

16:00.000 --> 16:03.000
Kind of. So you don't even need that much for ARKit.

16:03.000 --> 16:07.000
I mean, like the MacBook Pro that I have, the i9 with the Radeon

16:07.000 --> 16:12.000
or, hell, a Mac Mini with the eGPU I have will do you just fine on ARKit.

16:12.000 --> 16:15.000
But there's a little dirty, can I give you some inside baseball?

16:15.000 --> 16:17.000
Yeah, please do.

16:17.000 --> 16:22.000
If you are an independent Apple developer and you have a business account,

16:22.000 --> 16:24.000
you should not buy this.

16:24.000 --> 16:27.000
You can actually just lease them and they're much more affordable.

16:27.000 --> 16:29.000
You do like a three-year lease.

16:29.000 --> 16:31.000
Oh, yeah. What does that look like?

16:31.000 --> 16:35.000
You end up paying less as long as you're always going to be locked into Apple.

16:35.000 --> 16:37.000
That's kind of their...

16:37.000 --> 16:39.000
Right. As long as you're committed to like continually having

16:39.000 --> 16:41.000
one of these machines around.

16:41.000 --> 16:43.000
And you cannot lease the lowest end version.

16:43.000 --> 16:45.000
Ah, yeah.

16:45.000 --> 16:47.000
But they're doing that pretty aggressively with the iMac Pro,

16:47.000 --> 16:50.000
which if I wanted an iMac Pro, I would just lease it through my business.

16:50.000 --> 16:55.000
And it would actually be a much less significant purchase, end quotes.

16:55.000 --> 16:57.000
Especially the way I go through...

16:57.000 --> 16:59.000
I mean, there's a whole thing.

16:59.000 --> 17:02.000
I don't want to go on my eGPU tangent, but if this works out for me,

17:02.000 --> 17:06.000
really, I'm just going to buy a new laptop every year to like upgrade

17:06.000 --> 17:10.000
memory and processor and RAM because I only have 16 gigs.

17:10.000 --> 17:13.000
Yeah, then you've separated stuff. You can have two different upgrade cadences

17:13.000 --> 17:15.000
for your GPU system.

17:15.000 --> 17:17.000
Two cadences. Right.

17:17.000 --> 17:19.000
Yeah, that's really nice.

17:19.000 --> 17:21.000
One disappointing thing is no NVIDIA.

17:21.000 --> 17:23.000
Right? I was kind of surprised by that.

17:23.000 --> 17:26.000
They were playing up the expandability, right?

17:26.000 --> 17:30.000
It's so funny to think, but it's like, we brought PCI back to the Mac,

17:30.000 --> 17:34.000
which is ridiculous in some perspectives and nice in another perspective, right?

17:34.000 --> 17:37.000
I have never been so excited about PCI, though.

17:37.000 --> 17:40.000
I mean, it seems like they're doing it right, too.

17:40.000 --> 17:44.000
And Thunderbolt just sort of wired throughout the entire thing.

17:44.000 --> 17:47.000
It's definitely an IO monster.

17:47.000 --> 17:49.000
Yeah, it's an impressive machine.

17:49.000 --> 17:50.000
Yeah, I don't know.

17:50.000 --> 17:53.000
I can't imagine a day where I get to really play with one up close,

17:53.000 --> 17:55.000
and that's kind of the disappointing part.

17:55.000 --> 18:00.000
I don't need to edit or render a bunch of like native ProRes 8K.

18:00.000 --> 18:02.000
I'm sure if you do, that's pretty exciting.

18:02.000 --> 18:05.000
It's weird, though, because it seems like this is...

18:05.000 --> 18:08.000
When I was listening to it, honestly, I was excited.

18:08.000 --> 18:11.000
I did kind of grow up on Macs, and so I liked them.

18:11.000 --> 18:13.000
And for a long time, they were this, right?

18:13.000 --> 18:18.000
They were the sort of media professional designers or print or whatever industry.

18:18.000 --> 18:23.000
A Mac was like a creative person's workstation and a computer designed for them.

18:23.000 --> 18:26.000
It felt like they were trying to hearken back to that and embrace it.

18:26.000 --> 18:30.000
But at that price point, now that I think about it, it feels like maybe...

18:30.000 --> 18:32.000
It's exciting because it's new and it's great,

18:32.000 --> 18:34.000
and they're clearly committed to doing it right,

18:34.000 --> 18:36.000
but it's just not for us.

18:36.000 --> 18:38.000
So I had the same experience growing up.

18:38.000 --> 18:40.000
Macs were particularly the...

18:40.000 --> 18:42.000
It wasn't the cheese grater.

18:42.000 --> 18:45.000
It was like the G5 tower, whatever, the G4.

18:45.000 --> 18:48.000
It was like an aspirational thing for me.

18:48.000 --> 18:50.000
Back on the PowerPC days.

18:50.000 --> 18:52.000
Right, back in the PowerPC days.

18:52.000 --> 18:55.000
But I could never afford a Mac back then.

18:55.000 --> 18:59.000
I think they're aspirational devices and things you will sell to Pixar.

18:59.000 --> 19:05.000
So I could see a JB having one right to just do some super high-end renders

19:05.000 --> 19:08.000
every once in a while or just crank through some video assets

19:08.000 --> 19:10.000
when you guys are on the road.

19:10.000 --> 19:13.000
The sort of frustration, I guess, maybe captured a lot of this

19:13.000 --> 19:15.000
because I'm curious, I'm Apple curious.

19:15.000 --> 19:18.000
Actually, my very first smartphone was an iPhone,

19:18.000 --> 19:21.000
so that was my introduction to that world in the first place.

19:21.000 --> 19:23.000
So I spent many years on iOS.

19:23.000 --> 19:25.000
I'm not there now,

19:25.000 --> 19:28.000
but I keep looking on thinking about how do these devices fit?

19:28.000 --> 19:30.000
Do they make sense in my life?

19:30.000 --> 19:32.000
Some of the news around, let's say, like the Apple Watch

19:32.000 --> 19:34.000
becoming more of a standalone device.

19:34.000 --> 19:36.000
That's interesting because I don't have an iPhone.

19:36.000 --> 19:38.000
Maybe I will, but I just got a Pixel 3,

19:38.000 --> 19:41.000
so I'm not going to switch this generation at least.

19:41.000 --> 19:43.000
If I could use it on its own, though,

19:43.000 --> 19:46.000
it's clearly the only device in its class out there, right?

19:46.000 --> 19:48.000
So there's not a lot of choices.

19:48.000 --> 19:51.000
So it's frustrating that when Apple does something,

19:51.000 --> 19:55.000
if you can shape the ways that you want to interact with that device

19:55.000 --> 19:57.000
into the ways that they're designing for,

19:57.000 --> 20:00.000
they do it right and at such a level of design and thoughtfulness

20:00.000 --> 20:02.000
that no one else can touch.

20:02.000 --> 20:05.000
So it's frustrating to someone as an outsider who wants to use it.

20:05.000 --> 20:07.000
It doesn't quite feel like it's in the shape

20:07.000 --> 20:09.000
where it plays with the way I use computers yet,

20:09.000 --> 20:11.000
but it's getting close.

20:11.000 --> 20:14.000
And another way it's getting close is iPad OS,

20:14.000 --> 20:17.000
the new sort of grown-up version of iOS

20:17.000 --> 20:20.000
that has more iPad-focused features

20:20.000 --> 20:24.000
and regular old computer stuff like files and folders

20:24.000 --> 20:26.000
and SMB support.

20:26.000 --> 20:29.000
Yeah, this is probably the most exciting thing

20:29.000 --> 20:32.000
in this dub-dub for me.

20:32.000 --> 20:35.000
I really, really, really think most people working in factories

20:35.000 --> 20:39.000
and, like, offices and in sales and lots of places

20:39.000 --> 20:41.000
do not need computers anymore.

20:41.000 --> 20:44.000
They need, like, powerful tablets with, you know,

20:44.000 --> 20:47.000
so basically LTE chips, right, LTE SIM cards.

20:47.000 --> 20:51.000
Yeah, always on, just, you know, have all of your communication apps

20:51.000 --> 20:53.000
because that's 90% of what we're doing, right?

20:53.000 --> 20:55.000
It's sending emails, checking Slack, doing some web browsing,

20:55.000 --> 20:58.000
maybe a little bit of creative work on the side.

20:58.000 --> 21:00.000
Or, like, whatever, you're, you know, you're an inspector.

21:00.000 --> 21:02.000
You can already see this, actually.

21:02.000 --> 21:04.000
A lot of people do this already.

21:04.000 --> 21:08.000
But just, like, more powerful applications,

21:08.000 --> 21:10.000
I kind of think they're all going to be HTML5

21:10.000 --> 21:13.000
a la WebAssembly pretty soon.

21:13.000 --> 21:17.000
But you do need the OS to actually support, you know,

21:17.000 --> 21:19.000
the tablet as a real computing device

21:19.000 --> 21:22.000
and not, you know, a content consumption device.

21:22.000 --> 21:24.000
Right, and they have branched off, right?

21:24.000 --> 21:27.000
Tablets are doing a lot more or at least exploring different spaces

21:27.000 --> 21:30.000
than what you can do on the limited size and shape of a phone.

21:30.000 --> 21:31.000
That's another area.

21:31.000 --> 21:33.000
Like, there's not another tablet that I would,

21:33.000 --> 21:34.000
that I'm really interested in.

21:34.000 --> 21:36.000
And I've used iPads for a long time.

21:36.000 --> 21:37.000
I'm familiar with them.

21:37.000 --> 21:39.000
And they're, I mean, they're pretty great at it.

21:39.000 --> 21:43.000
You have had to accept that Apple basically wanted to reinvent the OS

21:43.000 --> 21:46.000
and start off with their, you know, their, like, user faces stuff

21:46.000 --> 21:49.000
and then add in redone and reworked primitives,

21:49.000 --> 21:51.000
things like the, you know, ways that you interact with files

21:51.000 --> 21:54.000
or USB drive support that you would expect on a traditional machine

21:54.000 --> 21:58.000
but hadn't been implemented in this new world of iOS.

21:58.000 --> 22:01.000
But it's getting closer, and you can see the day.

22:01.000 --> 22:03.000
And, you know, it'll be some straggling curve,

22:03.000 --> 22:05.000
but more and more of general purpose computing

22:05.000 --> 22:07.000
is being eaten by these devices.

22:07.000 --> 22:09.000
Yeah, I mean, and Apple can kind of take their time

22:09.000 --> 22:13.000
because, you know, Ubuntu Touch was never a real competitor.

22:13.000 --> 22:15.000
Android on tablets was always kind of crappy.

22:15.000 --> 22:16.000
Yeah, there is no competitor.

22:16.000 --> 22:18.000
Yeah, Windows is maybe the nearest thing,

22:18.000 --> 22:21.000
but they're a distant second.

22:21.000 --> 22:24.000
Mm-hmm, and I don't think they can yet compete with the,

22:24.000 --> 22:26.000
for all the pains it causes power users,

22:26.000 --> 22:30.000
the rethought interaction models and, like, ways of how computing works

22:30.000 --> 22:32.000
that I think is really appealing.

22:32.000 --> 22:34.000
All right, so a little bit personal.

22:34.000 --> 22:36.000
My father's a bit of a Luddite.

22:36.000 --> 22:38.000
He's not a computer-forward person.

22:38.000 --> 22:39.000
He can use them as a tool

22:39.000 --> 22:42.000
but isn't really interested in them other than that.

22:42.000 --> 22:45.000
Being disappointed in some of his local news available,

22:45.000 --> 22:49.000
the family got him an iPad this Christmas as a sort of like,

22:49.000 --> 22:51.000
oh, here, you know, we've got, like, the New York Times

22:51.000 --> 22:53.000
or whatever other subscriptions you want to put on there.

22:53.000 --> 22:55.000
You can have it right there.

22:55.000 --> 22:58.000
It was the first, like, new machine he'd used in a few years,

22:58.000 --> 23:02.000
and I don't know that many other, you know, a Surface or a Windows tablet,

23:02.000 --> 23:04.000
it just wouldn't have provided the same sort of ease

23:04.000 --> 23:06.000
and clarity of the interaction models

23:06.000 --> 23:10.000
that I think let him actually be successful at using the device.

23:10.000 --> 23:12.000
I came back and visited just recently,

23:12.000 --> 23:14.000
and he was sitting there on his tablet,

23:14.000 --> 23:17.000
and he was telling me about some hacking story reported in the New York Times.

23:17.000 --> 23:19.000
I was like, what? Are you the same person?

23:19.000 --> 23:20.000
Nice.

23:20.000 --> 23:23.000
And it's just because, like, that device is simplified and safe

23:23.000 --> 23:25.000
and lets him feel comfortable using it in a way

23:25.000 --> 23:27.000
that a more powerful machine probably wouldn't.

23:27.000 --> 23:29.000
Yeah, I think that makes a ton of sense.

23:29.000 --> 23:31.000
I mean, and also they're, you know,

23:31.000 --> 23:34.000
they're fairly easy to replace and service, right?

23:34.000 --> 23:36.000
That's a good point. You can just get a new one.

23:36.000 --> 23:38.000
You know where to take it.

23:38.000 --> 23:40.000
And if you're using all the iCloud stuff,

23:40.000 --> 23:42.000
then you know most of your data is going to be safe, too.

23:42.000 --> 23:44.000
You have a guaranteed configuration that you're developing to,

23:44.000 --> 23:48.000
or at least a small set of guaranteed configurations, right?

23:48.000 --> 23:50.000
So you don't have, like, a million different devices

23:50.000 --> 23:55.000
with, you know, a million different potential pieces of hardware

23:55.000 --> 23:58.000
or settings, blah, blah, blah.

23:58.000 --> 24:01.000
So I think the last thing, or the last two things,

24:01.000 --> 24:03.000
would be Project Catalyst,

24:03.000 --> 24:06.000
which was the artist formerly known as Marzipan.

24:06.000 --> 24:08.000
I don't have a lot here, Wes.

24:08.000 --> 24:11.000
It's okay, so you can bring your iPad apps to Mac.

24:11.000 --> 24:13.000
Right, that's the goal here, is you can take apps

24:13.000 --> 24:15.000
that have already been designed, is that right?

24:15.000 --> 24:18.000
So you have an app that's already running on iOS,

24:18.000 --> 24:20.000
and then through, I guess, Project Catalyst,

24:20.000 --> 24:23.000
you can get it up and running on the Mac.

24:23.000 --> 24:25.000
Yeah, I mean, I think in reality,

24:25.000 --> 24:29.000
the good Catalyst apps are going to be designed from the ground up.

24:29.000 --> 24:31.000
Right, that's the issue so far,

24:31.000 --> 24:33.000
is everyone seems to have a complaint that, like,

24:33.000 --> 24:37.000
yeah, okay, it does run, but it feels like a weird ported iOS app

24:37.000 --> 24:39.000
that doesn't fit desktop paradoxes.

24:39.000 --> 24:41.000
It doesn't fit with the platform, but, you know,

24:41.000 --> 24:44.000
the second thing they announced, Swift UI,

24:44.000 --> 24:48.000
which is a very React component-y way to build UI.

24:48.000 --> 24:49.000
Did you notice that?

24:49.000 --> 24:52.000
Yeah, I don't know quite how declarative

24:52.000 --> 24:54.000
or along that spectrum it will be.

24:54.000 --> 24:56.000
I haven't got enough chance to play with it, obviously,

24:56.000 --> 24:58.000
but it did, just from the few samples and interactions

24:58.000 --> 25:00.000
that they were showing, it did feel that way,

25:00.000 --> 25:04.000
which might make it kind of cool.

25:04.000 --> 25:06.000
I mean, that's always been my complaint

25:06.000 --> 25:11.000
with some of the more, you know, just old-fashioned UI sort of policies.

25:11.000 --> 25:13.000
I think that was why React took off so well,

25:13.000 --> 25:15.000
is you could just sort of say, like, here's what I want the page to be,

25:15.000 --> 25:19.000
here's how it should work, and you figure it out, library.

25:19.000 --> 25:21.000
Yeah, I mean, the.NET world has this.

25:21.000 --> 25:26.000
In fact, Xamarin used to be very common to do your UI

25:26.000 --> 25:28.000
in declarative C-sharp, basically,

25:28.000 --> 25:31.000
which looks an awful lot like what they're doing in Swift here.

25:31.000 --> 25:34.000
So this is, I think, Apple.

25:34.000 --> 25:37.000
It's pretty clear to me that Swift UI is,

25:37.000 --> 25:39.000
you know, let's say one or two reps from here

25:39.000 --> 25:41.000
are going to be the UI framework.

25:41.000 --> 25:44.000
Does that mean Objective-C is over with?

25:44.000 --> 25:47.000
I mean, are we really entering the era of Swift only?

25:47.000 --> 25:50.000
We're not there yet, but I would say in a refer to pour out your 40s

25:50.000 --> 25:52.000
and pour one out for Objective-C.

25:52.000 --> 25:55.000
Now, it's still, still, it could be possible that your logic

25:55.000 --> 25:57.000
could be written in Objective-C,

25:57.000 --> 25:59.000
because they still support C++, right?

25:59.000 --> 26:01.000
Ah, yes.

26:01.000 --> 26:04.000
I'm writing UX in Objective-C. Yeah, the end is nigh.

26:04.000 --> 26:07.000
You might have some, yeah, backend libraries that you're using,

26:07.000 --> 26:09.000
but the main thing that you're going to use to design

26:09.000 --> 26:11.000
the whole application will be Swift.

26:11.000 --> 26:13.000
It's going to be Swift, yeah.

26:13.000 --> 26:16.000
I mean, right now, Swift UI is not mandatory,

26:16.000 --> 26:19.000
or it wasn't clear in the keynote if it's mandatory.

26:19.000 --> 26:21.000
It doesn't seem like it is.

26:21.000 --> 26:23.000
But I think at this point, it's definitely something,

26:23.000 --> 26:25.000
if you're building a new, particularly iPad OS,

26:25.000 --> 26:28.000
or I keep wanting to say Marzipan Catalyst app,

26:28.000 --> 26:32.000
I would be hard-pressed to not look at that.

26:32.000 --> 26:37.000
Just from the demos they showed, it looks very powerful,

26:37.000 --> 26:40.000
and I imagine there's some performance gains

26:40.000 --> 26:43.000
in not having to load and unload nib files.

26:43.000 --> 26:47.000
Just my two cents, but, yeah.

26:47.000 --> 26:51.000
So speaking of things that are hyper-performant, Wes, I hate you.

26:51.000 --> 26:53.000
Yeah, you're a little mad at me,

26:53.000 --> 26:56.000
and I think in a good way, though, knowing you.

26:56.000 --> 26:59.000
It's good hate. It's good hate.

26:59.000 --> 27:01.000
So Wes turned me on to Elixir

27:01.000 --> 27:03.000
as part of our 7 Weeks 7 Languages.

27:03.000 --> 27:06.000
Yes, I did. Maybe you could tell us a little bit about Elixir.

27:06.000 --> 27:08.000
I know we've mentioned it on the show,

27:08.000 --> 27:11.000
but I think this is the deepest dive we've dared to do.

27:11.000 --> 27:15.000
Yeah, yeah. I failed to complete my GitHub assignment, of course,

27:15.000 --> 27:18.000
but I will post something after the show.

27:18.000 --> 27:22.000
I ended up digging deep into Elixir videos and Elixir tutorials.

27:22.000 --> 27:26.000
In particular, two comparisons to Ruby

27:26.000 --> 27:30.000
and some performance statistics.

27:30.000 --> 27:33.000
Ah, and one of the things I'm curious to see out of this

27:33.000 --> 27:36.000
is what you think, as an experienced Rubyist,

27:36.000 --> 27:38.000
if those comparisons really make sense

27:38.000 --> 27:41.000
or if it's just sort of surface level.

27:41.000 --> 27:44.000
Yeah, well, obviously, I'm not a big fan of benchmarks,

27:44.000 --> 27:46.000
but there's definitely...

27:46.000 --> 27:50.000
In fact, I linked to a blog post in the show notes

27:50.000 --> 27:52.000
comparing Elixir and Phoenix,

27:52.000 --> 27:55.000
which is their MVC-ish web development framework,

27:55.000 --> 27:57.000
an API development framework,

27:57.000 --> 28:00.000
and Ruby and Rails, which everybody knows what Rails is.

28:00.000 --> 28:04.000
And yeah, I mean, there's some significant performance increases,

28:04.000 --> 28:07.000
and the author makes just a tremendous argument

28:07.000 --> 28:10.000
that by virtue of being functional,

28:10.000 --> 28:13.000
but also just less magical than Ruby,

28:13.000 --> 28:16.000
Elixir is not only more performant,

28:16.000 --> 28:20.000
but you have less of the issues of a gem is no longer maintained

28:20.000 --> 28:24.000
or blows up or is incompatible with some new version of some other gem

28:24.000 --> 28:26.000
it depends on and you have a problem.

28:26.000 --> 28:30.000
Now, to be fair to Ruby and Rails, the disadvantage is obvious.

28:30.000 --> 28:33.000
Ruby and Rails are particularly designed for developer productivity

28:33.000 --> 28:36.000
and getting things done as quickly as you can.

28:36.000 --> 28:39.000
But damn, I mean, to me, it's not really an either-or.

28:39.000 --> 28:41.000
I know that's a click-baity way to do this.

28:41.000 --> 28:44.000
Right, yeah, of course. You have to choose the tool for the job.

28:44.000 --> 28:47.000
But maybe this is a new useful tool to you.

28:47.000 --> 28:49.000
Well, I think for crunching through data,

28:49.000 --> 28:53.000
for things like multi-channel messaging, i.e. bots,

28:53.000 --> 28:57.000
having Elixir components might make a lot of sense.

28:57.000 --> 29:01.000
Saving server costs, getting things done quickly,

29:01.000 --> 29:05.000
and just the guaranteed safety of being purely functional

29:05.000 --> 29:08.000
I think is pretty interesting.

29:08.000 --> 29:11.000
And its syntax is very Ruby-esque, so it was weird.

29:11.000 --> 29:14.000
As I was playing with it, it didn't feel that foreign to me.

29:14.000 --> 29:17.000
Right, and so in comparison, Elixir is based on Erlang,

29:17.000 --> 29:20.000
and they both run on the Beam VM.

29:20.000 --> 29:23.000
Erlang was developed out of Prolog, so the syntax is,

29:23.000 --> 29:26.000
if you haven't done Prolog, it's pretty darn wacky.

29:26.000 --> 29:29.000
So you're saying you felt pretty comfortable as a new developer coming in,

29:29.000 --> 29:33.000
not familiar really with the platform, and just sort of getting to work.

29:33.000 --> 29:37.000
Yeah, I did. I felt like it was pretty solid, pretty well-maintained.

29:37.000 --> 29:41.000
I mean, the documentation is some of the best documentation I've seen in a while.

29:41.000 --> 29:44.000
Yeah, you can tell the project really cares about that,

29:44.000 --> 29:48.000
which is great for bringing on new people into the project.

29:48.000 --> 29:53.000
Yeah, I would say the only somewhat downside I found is that it doesn't,

29:53.000 --> 29:55.000
and you can correct me if I'm wrong,

29:55.000 --> 29:58.000
it doesn't seem like it's a very popular language right now.

29:58.000 --> 30:01.000
No, I mean, the Beam's always been a bit of a niche,

30:01.000 --> 30:04.000
and Elixir is pretty darn new.

30:04.000 --> 30:07.000
Maybe not really that new, but on the scale of languages,

30:07.000 --> 30:09.000
it's still new and growing.

30:09.000 --> 30:12.000
It does seem like the community's pretty active.

30:12.000 --> 30:16.000
I think it might also fall in one of the sort of secret weapon camp where,

30:16.000 --> 30:18.000
you know, you might not use it at your big enterprise

30:18.000 --> 30:20.000
where you already have a Java application,

30:20.000 --> 30:25.000
but perhaps for someone with a small consultancy who has a little more choice,

30:25.000 --> 30:30.000
you know, like famously WhatsApp has been based on Erlang for a long time.

30:30.000 --> 30:33.000
And so you can see how in certain applications,

30:33.000 --> 30:35.000
as long as you're willing to put up with, you know,

30:35.000 --> 30:37.000
having to do a little extra work training on new people

30:37.000 --> 30:40.000
to get them familiar with the language, it might make your code easier.

30:40.000 --> 30:43.000
Like, I'm curious what you thought about the, you know,

30:43.000 --> 30:46.000
the sort of agent-based systems, message passing,

30:46.000 --> 30:48.000
having actors that you can use.

30:48.000 --> 30:52.000
Yeah, see, in a weird way, it all felt very old,

30:52.000 --> 30:54.000
but also very new to me.

30:54.000 --> 30:57.000
And to be honest, I actually bought a book on it.

30:57.000 --> 30:59.000
I'm going to be digging into it more.

30:59.000 --> 31:01.000
Really? That's fantastic.

31:01.000 --> 31:03.000
Because I may actually have a practical use for this.

31:03.000 --> 31:05.000
So I don't want to talk out of my butt too much.

31:05.000 --> 31:09.000
Do we need to extend this so that you can have another week in the challenge?

31:09.000 --> 31:12.000
Well, I think we don't,

31:12.000 --> 31:15.000
just because I might do something a little bigger.

31:15.000 --> 31:17.000
But I think I'm sold on Elixir, right?

31:17.000 --> 31:21.000
If the goal was to convince me that Elixir is something worth looking into,

31:21.000 --> 31:24.000
I, you know, just for example,

31:24.000 --> 31:28.000
I was reading the basically of this whole getting started basically book,

31:28.000 --> 31:29.000
right, on their website.

31:29.000 --> 31:31.000
And I read through the whole damn thing.

31:31.000 --> 31:34.000
And they very wisely assumed that the people

31:34.000 --> 31:37.000
who would be attracted to Elixir are Rubyists.

31:37.000 --> 31:40.000
So they kept comparing things to Ruby,

31:40.000 --> 31:42.000
which makes it very easy to kind of, okay,

31:42.000 --> 31:44.000
so this is, I forgot what the thing was,

31:44.000 --> 31:46.000
but this is like a Ruby, I think it was like a,

31:46.000 --> 31:50.000
some kind of, the way they do pattern matching differently, right?

31:50.000 --> 31:54.000
Where Ruby kind of does and doesn't, but that's the whole thing.

31:54.000 --> 31:55.000
No, you're right.

31:55.000 --> 31:58.000
I mean, pattern matching is kind of ubiquitous in the Elixir world.

31:58.000 --> 31:59.000
Right.

31:59.000 --> 32:02.000
So it's like, if you would have done this in Ruby,

32:02.000 --> 32:06.000
this is our much less code, simple, more functional way to do it,

32:06.000 --> 32:09.000
which is kind of, I got to say,

32:09.000 --> 32:14.000
I really am surprised that I haven't heard more about it.

32:14.000 --> 32:17.000
Although I could definitely see that building anything non-trivial in this,

32:17.000 --> 32:19.000
there's got to be some kind of learning curve here.

32:19.000 --> 32:21.000
Like I just reading through it, it was like, okay,

32:21.000 --> 32:24.000
so these are some pure functional techniques here, right?

32:24.000 --> 32:27.000
This is not functional, like F sharp is functional.

32:27.000 --> 32:28.000
This is really functional.

32:28.000 --> 32:29.000
Yeah.

32:29.000 --> 32:30.000
I mean, there is, you know,

32:30.000 --> 32:33.000
the VM has a lot of immutability sort of baked into it.

32:33.000 --> 32:35.000
So where, whereas say with the JVM,

32:35.000 --> 32:38.000
you can layer that on top in a more functional language,

32:38.000 --> 32:39.000
you don't really have the option.

32:39.000 --> 32:42.000
You have less escape routes, I think, on the beam.

32:42.000 --> 32:44.000
It is interesting though,

32:44.000 --> 32:48.000
I'm curious if when you get to try some more of the concurrency,

32:48.000 --> 32:49.000
because that seems like in particular,

32:49.000 --> 32:54.000
an area where Ruby really struggles and Elixir really shines.

32:54.000 --> 32:55.000
Yeah.

32:55.000 --> 32:56.000
And like, so does Node, right?

32:56.000 --> 32:58.000
So if you think about my use case of like chat bots

32:58.000 --> 32:59.000
for something like an Alice,

32:59.000 --> 33:04.000
that's an area where I would love more help.

33:04.000 --> 33:05.000
Yeah.

33:05.000 --> 33:07.000
And the nice, the advantage too, right,

33:07.000 --> 33:10.000
is that you have different concurrency models.

33:10.000 --> 33:13.000
So with Node, you know, you have this single core.

33:13.000 --> 33:15.000
Now I know, I realize there's multiple core aspects you can do

33:15.000 --> 33:17.000
with IO and other aspects of it,

33:17.000 --> 33:21.000
but your main code runs on a single core.

33:21.000 --> 33:23.000
Beam is kind of unique, not really unique,

33:23.000 --> 33:27.000
but somewhat unique in that it has preemptive multitasking as well.

33:27.000 --> 33:30.000
So you have some nice guarantees in terms of, you know,

33:30.000 --> 33:34.000
latencies and responses because one messed up really long task

33:34.000 --> 33:36.000
can't eat into the system

33:36.000 --> 33:38.000
in the way a cooperative multitasking system can have happened.

33:38.000 --> 33:40.000
I couldn't have said it better myself.

33:40.000 --> 33:42.000
So what did you think of, I think,

33:42.000 --> 33:47.000
the much easier assignment I gave you?

33:47.000 --> 33:53.000
Yeah, so you assigned me to TypeScript.

33:53.000 --> 33:55.000
It's honestly, it's been interesting.

33:55.000 --> 33:57.000
I've been having a lot of fun playing with it, so thank you.

33:57.000 --> 33:59.000
It was a good choice.

33:59.000 --> 34:01.000
It's a language I've been watching,

34:01.000 --> 34:04.000
but I hadn't directly interacted with.

34:04.000 --> 34:07.000
So my first stop was over to the playground they have,

34:07.000 --> 34:09.000
and that's just like a little web app

34:09.000 --> 34:10.000
where you type in some TypeScript

34:10.000 --> 34:13.000
and then it'll show you the output JavaScript

34:13.000 --> 34:15.000
and then you can run it there as well.

34:15.000 --> 34:18.000
And that was sort of in lieu of a REPL.

34:18.000 --> 34:20.000
It's always funny, like, playing with more static languages

34:20.000 --> 34:22.000
because I'm used to trying things out

34:22.000 --> 34:24.000
and just sort of opening up a REPL and playing around

34:24.000 --> 34:26.000
and, you know, kind of trying out basic evaluations

34:26.000 --> 34:29.000
and learning a little bit of the syntax.

34:29.000 --> 34:30.000
And that's just not the way.

34:30.000 --> 34:32.000
I mean, there is TS Node,

34:32.000 --> 34:34.000
which is a little TypeScript REPL on top of Node,

34:34.000 --> 34:36.000
so I got that installed and played there too.

34:36.000 --> 34:38.000
But it was kind of fun as someone who'd used

34:38.000 --> 34:41.000
other transpiled languages just to go look

34:41.000 --> 34:44.000
and see how some of the basic constructs, like,

34:44.000 --> 34:46.000
I think it's kind of educational even for people to look at

34:46.000 --> 34:48.000
just, like, the basic class stuff, right?

34:48.000 --> 34:50.000
So, like, TypeScript adds types to JavaScript,

34:50.000 --> 34:52.000
but it also incorporates a lot of the newer standards

34:52.000 --> 34:55.000
and proposals and changes to JavaScript,

34:55.000 --> 34:58.000
so it just feels kind of like a better,

34:58.000 --> 35:00.000
more polished JavaScript.

35:00.000 --> 35:04.000
But I found it interesting seeing how some of those constructs

35:04.000 --> 35:06.000
turn into JavaScript, and you can learn a little bit.

35:06.000 --> 35:09.000
You know, if you're not familiar with the weird

35:09.000 --> 35:11.000
prototypical inheritance structures

35:11.000 --> 35:12.000
and the way JavaScript works

35:12.000 --> 35:15.000
and how you can sort of model objects and that sort of stuff,

35:15.000 --> 35:19.000
looking at, like, a basic class and its compiled code,

35:19.000 --> 35:22.000
it honestly explains a lot, which is kind of neat.

35:22.000 --> 35:24.000
And you can see stuff like what structures

35:24.000 --> 35:26.000
are purely at compile time.

35:26.000 --> 35:28.000
Like, interfaces, for example, in TypeScript,

35:28.000 --> 35:30.000
they don't, you know, there's no generated output.

35:30.000 --> 35:32.000
It's all just stuff that the compiler uses

35:32.000 --> 35:33.000
to better check for you.

35:33.000 --> 35:36.000
So you can tell they spent a lot of time

35:36.000 --> 35:38.000
thinking and designing this really well.

35:38.000 --> 35:42.000
I also went on my own TypeScript journey about a year ago.

35:42.000 --> 35:45.000
Would you write TypeScript over JavaScript?

35:45.000 --> 35:49.000
I know you like ClojureScript, so I guess it's assuming

35:49.000 --> 35:52.000
you were, like, verboten for writing ClojureScript, right?

35:52.000 --> 35:54.000
Right, yeah, yeah, sure, yeah.

35:54.000 --> 35:56.000
So I think the problem you have with JavaScript

35:56.000 --> 35:58.000
is you sort of got to pick things.

35:58.000 --> 36:01.000
You got to pick which JavaScript and which tools.

36:01.000 --> 36:03.000
And you'll still have some of that with TypeScript.

36:03.000 --> 36:06.000
It's not like it totally solves all of those problems.

36:06.000 --> 36:09.000
But I think it sort of is a nice standard,

36:09.000 --> 36:12.000
because worst case, right, it is just a superset of JavaScript.

36:12.000 --> 36:14.000
So you kind of get, you know, the compiler doing a bunch

36:14.000 --> 36:18.000
of the nice stuff, so you get all the modern standard stuff.

36:18.000 --> 36:21.000
And you can have, you know, not only will it do

36:21.000 --> 36:24.000
a pretty decent job of inferring types automatically for you,

36:24.000 --> 36:27.000
so you get a little bit of extra safety almost for free,

36:27.000 --> 36:29.000
and you can turn off all the, like, harsh flags

36:29.000 --> 36:31.000
if you really don't want that stuff to, you know,

36:31.000 --> 36:33.000
to prevent you from actually emitting JavaScript.

36:33.000 --> 36:35.000
Like, yeah, yeah, yeah, I know, my algorithm is unsound,

36:35.000 --> 36:38.000
but I just, in practice, never hit the edge cases.

36:38.000 --> 36:41.000
Then just spit this out for me, TypeScript.

36:41.000 --> 36:45.000
I think it is probably a pretty good choice for, you know,

36:45.000 --> 36:49.000
if you don't have a reason to stick to standard JavaScript.

36:49.000 --> 36:52.000
It's well-supported, there's types for lots of libraries,

36:52.000 --> 36:57.000
and it, you know, as they say, it's JavaScript that scales.

36:57.000 --> 36:59.000
I can see that being true.

36:59.000 --> 37:03.000
You know, it does provide a lot of the niceties

37:03.000 --> 37:05.000
of a statically typed environment that can help

37:05.000 --> 37:07.000
sort of formalize things if you've got a diverse team

37:07.000 --> 37:09.000
with different backgrounds and different skill sets

37:09.000 --> 37:12.000
working all on the same large code base together.

37:12.000 --> 37:14.000
It seems like that would be an area

37:14.000 --> 37:16.000
where it particularly shines.

37:16.000 --> 37:18.000
It would also work, I think, for anyone who's sort of

37:18.000 --> 37:20.000
interested in this stuff but doesn't, you know,

37:20.000 --> 37:22.000
isn't comfortable going a little more off the beaten path

37:22.000 --> 37:24.000
with something like ClosureScript or PeerScript

37:24.000 --> 37:27.000
or, you know, any of the more functional

37:27.000 --> 37:29.000
or just extreme variants of languages

37:29.000 --> 37:31.000
that transpile the JavaScript.

37:31.000 --> 37:33.000
You get all these extra layers of type stuff,

37:33.000 --> 37:37.000
and I think a big plus and a big negative for me personally

37:37.000 --> 37:39.000
is that the rest of it is the same, right?

37:39.000 --> 37:42.000
So, like, all the basic constructs, it's just JavaScript.

37:42.000 --> 37:45.000
So, it's not a huge paradigm shift

37:45.000 --> 37:47.000
except for all the extra stuff you can do

37:47.000 --> 37:49.000
with the fancier compiler.

37:49.000 --> 37:51.000
Now, that's not really, I prefer some, you know,

37:51.000 --> 37:53.000
like, functional methods of thinking.

37:53.000 --> 37:55.000
So, I did do a little bit of playing around

37:55.000 --> 37:57.000
with some of the libraries available for TypeScript,

37:57.000 --> 37:59.000
like, I think it's like just FPTS,

37:59.000 --> 38:01.000
and there's one called Peerify.

38:01.000 --> 38:04.000
I don't know what is the current state of the art

38:04.000 --> 38:07.000
or which is the best, but you can tell that those things,

38:07.000 --> 38:09.000
you know, people are interested in that stuff

38:09.000 --> 38:11.000
and have ported some of the ideas from Haskell

38:11.000 --> 38:14.000
and other more serious statically typed languages.

38:14.000 --> 38:16.000
I feel roughly the same way.

38:16.000 --> 38:19.000
It almost doesn't go far enough

38:19.000 --> 38:22.000
for me to not just use JavaScript.

38:22.000 --> 38:24.000
Although, interesting, so given, if we throw ClosureScript

38:24.000 --> 38:27.000
back into my question from about two minutes ago,

38:27.000 --> 38:29.000
you would just go ClosureScript every day, right?

38:29.000 --> 38:31.000
Yes, I think I still would.

38:31.000 --> 38:33.000
I enjoyed using TypeScript.

38:33.000 --> 38:35.000
I was legitimately impressed with, you know,

38:35.000 --> 38:37.000
I just kind of got the standard VS Code

38:37.000 --> 38:39.000
sort of dev environment set up,

38:39.000 --> 38:41.000
and it's really nice,

38:41.000 --> 38:46.000
and I like how flexible the type system is.

38:46.000 --> 38:49.000
It's nice not to just have, like, the nominal sort of typing

38:49.000 --> 38:53.000
that you get with C Sharp or Java

38:53.000 --> 38:55.000
so that you can really, it feels closer

38:55.000 --> 38:58.000
to really modeling the data and the structures of stuff

38:58.000 --> 39:00.000
so that you can easily have interoperability

39:00.000 --> 39:02.000
and you don't have to get obsessed

39:02.000 --> 39:04.000
with making individual types for all these little things.

39:04.000 --> 39:07.000
You can kind of play along that spectrum as you need

39:07.000 --> 39:09.000
when you have, you know, when you're in the prototyping stage

39:09.000 --> 39:11.000
and stuff's a little more flexible,

39:11.000 --> 39:13.000
and then maybe you further refine those ideas

39:13.000 --> 39:16.000
of what types you're playing with as your system solidifies

39:16.000 --> 39:18.000
later down the path to production.

39:18.000 --> 39:21.000
So for a type system, I thought it did a really good job

39:21.000 --> 39:24.000
of just not getting in the way,

39:24.000 --> 39:29.000
but I don't particularly enjoy many of the standard

39:29.000 --> 39:31.000
object-oriented approaches to modeling problems,

39:31.000 --> 39:33.000
so that's a little bit of a barrier,

39:33.000 --> 39:35.000
and it felt like I was kind of shoehorning

39:35.000 --> 39:38.000
some of those functional stuff on top.

39:38.000 --> 39:42.000
So I would probably try to play with ClosureScript more often

39:42.000 --> 39:44.000
or just stay in that camp, and I think it's interesting

39:44.000 --> 39:47.000
because some of the problems that these are solving,

39:47.000 --> 39:49.000
they've taken very different routes

39:49.000 --> 39:51.000
because, you know, TypeScript's going the,

39:51.000 --> 39:53.000
all right, well, you're going to have big files,

39:53.000 --> 39:56.000
you have huge projects that are hard to keep in your head.

39:56.000 --> 39:58.000
We're going to help you by adding this nice rigid structure

39:58.000 --> 40:01.000
of typing to help you have a more well-founded program,

40:01.000 --> 40:04.000
validate things, check your back for you.

40:04.000 --> 40:06.000
I think the ClosureScript approach is basically to say,

40:06.000 --> 40:07.000
I mean, there is lots of stuff,

40:07.000 --> 40:09.000
and we can get into that in a different episode,

40:09.000 --> 40:11.000
but the basic approach is just like,

40:11.000 --> 40:13.000
let's have less of this, you know?

40:13.000 --> 40:15.000
Like, let's focus on simplicity and have a small program

40:15.000 --> 40:17.000
that you can understand,

40:17.000 --> 40:19.000
and you can then avoid those same mistakes.

40:19.000 --> 40:21.000
Yeah, no, I think it would be great one week

40:21.000 --> 40:23.000
to do a deep ClosureScript dive.

40:23.000 --> 40:26.000
You could teach us all the glory of ClosureScript,

40:26.000 --> 40:27.000
and I'm not even kidding.

40:27.000 --> 40:29.000
It's probably, you know,

40:29.000 --> 40:33.000
I am slowly coming to your functional way of thinking.

40:33.000 --> 40:36.000
More and more, I'm just tired of managing state, basically.

40:36.000 --> 40:38.000
Yeah, I mean, of course you have state.

40:38.000 --> 40:40.000
I think the key is just to sort of refine

40:40.000 --> 40:43.000
your interactions with it and reduce the ways

40:43.000 --> 40:46.000
that you can have error and sort of centralize that state.

40:46.000 --> 40:48.000
Actually, I'll provide in the show notes,

40:48.000 --> 40:50.000
there's a great little video from a recent Closure conference.

40:50.000 --> 40:53.000
All about solving problems the Closure way.

40:53.000 --> 40:56.000
And it's not, the whole talk is in JavaScript,

40:56.000 --> 40:57.000
so I think it's pretty approachable,

40:57.000 --> 40:59.000
and it talks to some of those things of, you know,

40:59.000 --> 41:02.000
like why some of these simple and functional techniques

41:02.000 --> 41:05.000
might help you reason about your code better.

41:05.000 --> 41:06.000
Couldn't have said it better myself.

41:06.000 --> 41:09.000
Okay, so we had Elixir and TypeScript.

41:09.000 --> 41:13.000
So we had one very functional language so far, right?

41:13.000 --> 41:15.000
And one language that really, really wants you

41:15.000 --> 41:17.000
to embrace the OO side of life.

41:17.000 --> 41:18.000
Is that fair?

41:18.000 --> 41:20.000
Yeah, mm-hmm.

41:20.000 --> 41:21.000
So what are we thinking for next week?

41:21.000 --> 41:23.000
Do you want to go first, or do you want me to go first?

41:23.000 --> 41:25.000
Hmm, let's have you go first.

41:25.000 --> 41:30.000
Well, I'm very tempted to do Opsi, just as a funeral.

41:30.000 --> 41:33.000
But I won't, because it's dumb and wasteful.

41:33.000 --> 41:37.000
I mean, I'll try to venture down any path you lay forth.

41:37.000 --> 41:40.000
It's not worth it, and it's just not worth it,

41:40.000 --> 41:42.000
because it's, yeah.

41:42.000 --> 41:43.000
I'm actually going to say Kotlin,

41:43.000 --> 41:46.000
because I'm honestly curious what you,

41:46.000 --> 41:49.000
as a very functional-oriented guy,

41:49.000 --> 41:51.000
are going to think about Kotlin,

41:51.000 --> 41:52.000
which is obviously not functional,

41:52.000 --> 41:56.000
but I think you might find some things you like.

41:56.000 --> 41:57.000
Hmm, okay, yeah.

41:57.000 --> 41:59.000
No, that sounds great, actually.

41:59.000 --> 42:01.000
I'm looking forward to that.

42:01.000 --> 42:03.000
Now for you, Mr. Dominic.

42:03.000 --> 42:08.000
Hmm, I've been wrestling with a few ideas,

42:08.000 --> 42:10.000
and I think I'm going to keep you on a little,

42:10.000 --> 42:13.000
the little corner of the world you're in at the moment.

42:13.000 --> 42:16.000
But now it's your turn to get to play in the JavaScript space.

42:16.000 --> 42:21.000
So I say let's have you try ReasonML.

42:21.000 --> 42:23.000
ReasonML?

42:23.000 --> 42:25.000
Oh, I am Googling it.

42:25.000 --> 42:28.000
I actually don't know this ReasonML.

42:28.000 --> 42:30.000
Okay, okay, so what is this like that I would know?

42:30.000 --> 42:32.000
Is this a JavaScript alternative now?

42:32.000 --> 42:33.000
Yes, it is.

42:33.000 --> 42:37.000
It's a new syntax basically on top of OCaml

42:37.000 --> 42:40.000
that compiles to JavaScript.

42:40.000 --> 42:42.000
So where it has gotten a lot of adoption,

42:42.000 --> 42:44.000
it's kind of come out of Facebook.

42:44.000 --> 42:46.000
A lot of the people behind React originally

42:46.000 --> 42:48.000
have been working on this.

42:48.000 --> 42:51.000
So there's even a version of React that runs on Reason.

42:51.000 --> 42:53.000
Oh my God, it works with NPM?

42:53.000 --> 42:54.000
Yeah.

42:54.000 --> 42:56.000
And they have a weird version of Mario written in it?

42:56.000 --> 42:57.000
Okay, okay.

42:57.000 --> 42:59.000
There's a lot to like about ReasonML,

42:59.000 --> 43:01.000
and there's many similarities to ClojureScript.

43:01.000 --> 43:04.000
So I'm kind of using you as a guinea pig here

43:04.000 --> 43:05.000
to tell me what you think about it.

43:05.000 --> 43:07.000
Now this looks like it runs in the browser.

43:07.000 --> 43:08.000
Yeah, it does.

43:08.000 --> 43:11.000
And I'm sure you could run it on Node as well.

43:11.000 --> 43:12.000
I've not tried that.

43:12.000 --> 43:13.000
Yeah, I see it.

43:13.000 --> 43:15.000
I see they're running it in a Node app here.

43:15.000 --> 43:17.000
That's a quick start.

43:17.000 --> 43:18.000
All right, well, it looks,

43:18.000 --> 43:21.000
and this time I'm going to finish my assignment,

43:21.000 --> 43:24.000
and I'll give you a hint at what it's going to be.

43:24.000 --> 43:25.000
Ooh.

43:25.000 --> 43:26.000
Are you ready?

43:26.000 --> 43:28.000
I'm dying to know.

43:28.000 --> 43:30.000
This is pod racing.

43:30.000 --> 43:31.000
Wait, what?

43:31.000 --> 43:32.000
Tell me more.

43:32.000 --> 43:33.000
Okay, pod racing.

43:33.000 --> 43:34.000
You had me at pod racing.

43:34.000 --> 43:35.000
What are you making here?

43:35.000 --> 43:38.000
I don't know yet, but it's going to be amazing.

43:38.000 --> 43:40.000
And if you beat the pod racing,

43:40.000 --> 43:43.000
you're going to see the most important character

43:43.000 --> 43:45.000
in all of the Star Wars universe.

43:45.000 --> 43:46.000
Oh, I think I know.

43:46.000 --> 43:48.000
I think I know who that might be.

43:48.000 --> 43:49.000
It's C-3PO.

43:49.000 --> 43:50.000
Ah, that's right.

43:50.000 --> 43:51.000
Of course it is.

43:51.000 --> 43:53.000
That beautiful, shiny bastard.

43:53.000 --> 43:56.000
Or I might try to do one of those Advent of Code things.

43:56.000 --> 43:58.000
Yeah, we'll figure that out.

43:58.000 --> 44:00.000
Yeah, maybe we can both do a couple

44:00.000 --> 44:01.000
in a few of these languages,

44:01.000 --> 44:05.000
and they can serve as just a simple little translation of stuff

44:05.000 --> 44:08.000
and see how different techniques exist.

44:08.000 --> 44:10.000
Really, actually, if we're smart,

44:10.000 --> 44:11.000
you know what we should do.

44:11.000 --> 44:13.000
We should do the same thing every week.

44:13.000 --> 44:14.000
Yeah, you're right. We probably should.

44:14.000 --> 44:15.000
Just pick the same stuff,

44:15.000 --> 44:17.000
and we'll implement it in all the languages we try.

44:17.000 --> 44:18.000
All the languages.

44:18.000 --> 44:20.000
So I'll just pick something from the Advent.

44:20.000 --> 44:21.000
You pick something from the Advent,

44:21.000 --> 44:23.000
and we'll just keep it consistent.

44:23.000 --> 44:24.000
Okay, that sounds great.

44:24.000 --> 44:25.000
Ooh, I'm getting excited already.

44:25.000 --> 44:27.000
I guess that means we should probably wrap it up.

44:27.000 --> 44:29.000
We both have new languages to install.

44:29.000 --> 44:30.000
That's right.

44:30.000 --> 44:33.000
That's going to be it for today's episode of Coda Radio.

44:33.000 --> 44:36.000
If you'd like links to everything we talked about,

44:36.000 --> 44:38.000
well, just go to the show notes.

44:38.000 --> 44:41.000
That's coder.show slash 360.

44:41.000 --> 44:43.000
Over at coder.show slash contact,

44:43.000 --> 44:45.000
you can find all the ways to get in touch.

44:45.000 --> 44:47.000
We love your feedback.

44:47.000 --> 44:49.000
You can send us an email that way.

44:49.000 --> 44:52.000
You can head on over to our subreddit,

44:52.000 --> 44:55.000
or you can find us both on Twitter.

44:55.000 --> 44:59.000
I'm at Westpane, and Mr. Dominic, you're at Dumanuco.

44:59.000 --> 45:03.000
The whole network is there too, at Jupyter Signal.

45:03.000 --> 45:05.000
If you follow them, that's a great way to stay in touch

45:05.000 --> 45:07.000
with all the new shows that we release

45:07.000 --> 45:09.000
and find out when we're live.

45:09.000 --> 45:13.000
Another method for that is jupyterbroadcasting.com slash calendar.

45:13.000 --> 45:18.000
We're here almost every single week, right around noon Pacific,

45:18.000 --> 45:20.000
and the app will convert it to you

45:20.000 --> 45:23.000
in whatever time zone you happen to prefer.

45:23.000 --> 45:25.000
Thank you all for joining us.

45:25.000 --> 45:27.000
We'll see you right here next week.

45:27.000 --> 45:36.000
and we'll see you next week.

45:36.000 --> 46:01.000
and we'll see you next week.

46:06.000 --> 46:11.000
.

