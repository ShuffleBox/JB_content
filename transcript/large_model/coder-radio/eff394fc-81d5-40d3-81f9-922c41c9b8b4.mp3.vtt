WEBVTT

00:00.000 --> 00:15.760
This is KOTORadio, episode 425 for August 2nd, 2021.

00:15.760 --> 00:20.080
Hey friend, welcome in to Jupiter Broadcasting's weekly talk show, taking a pragmatic look

00:20.080 --> 00:24.860
at the art and the business of software development and the world of technology.

00:24.860 --> 00:27.320
This episode is brought to you by a cloud guru.

00:27.320 --> 00:32.400
You know cloud guru has them cloud playgrounds, Azure AWS, and Google's cloud in their sandboxes

00:32.400 --> 00:35.040
on their credit card, not yours.

00:35.040 --> 00:40.000
Get certified, get hired, get learning at a cloud guru.com.

00:40.000 --> 00:44.600
My name is Chris and joining us from actually, I'm not quite sure where, but he is joining

00:44.600 --> 00:45.600
us.

00:45.600 --> 00:46.600
It's our host, Mr. Dominic.

00:46.600 --> 00:47.600
Hello, Mike.

00:47.600 --> 00:49.640
Well, hello, Chris.

00:49.640 --> 00:52.320
Oh, hello.

00:52.320 --> 00:53.320
What happened?

00:53.320 --> 01:00.600
Well, like all developers, I have a date, I have a deadline, you know, a project plan,

01:00.600 --> 01:02.080
and it slips dramatically.

01:02.080 --> 01:07.040
Deadline, suggestion, you know, one in the same.

01:07.040 --> 01:11.080
Delusional expectation setting, maybe.

01:11.080 --> 01:13.840
But I mean, you had flights and stuff you had to make.

01:13.840 --> 01:17.200
And thank God for travel insurance.

01:17.200 --> 01:20.680
So I am Florida man for now.

01:20.680 --> 01:21.680
Wow.

01:21.680 --> 01:24.400
And was it a work thing or a personal thing?

01:24.400 --> 01:30.000
It was a complicated issue regarding plumbing at the place I was supposed to be going to.

01:30.000 --> 01:31.000
Oh, okay.

01:31.000 --> 01:32.000
Okay.

01:32.000 --> 01:33.000
All right.

01:33.000 --> 01:34.000
Okay.

01:34.000 --> 01:35.400
So destination plumbing was not in a good state.

01:35.400 --> 01:38.520
So you couldn't get there and take like a poo or something.

01:38.520 --> 01:40.080
That is exactly the scenario.

01:40.080 --> 01:43.960
I just wasn't going to, you know, turn this into bathroom hygiene radio.

01:43.960 --> 01:44.960
But yes.

01:44.960 --> 01:47.880
So, you know, I figure keep it classy right at the top of the show.

01:47.880 --> 01:48.880
The classy, right.

01:48.880 --> 01:54.800
So I was like, I don't know if this is the best move right now, given you can't poop.

01:54.800 --> 01:55.960
I am sorry to hear that.

01:55.960 --> 01:56.960
That's super frustrating.

01:56.960 --> 02:01.480
It's a mild exaggeration, but there were definitely some issues.

02:01.480 --> 02:03.440
That's always rough because you got everything all set up.

02:03.440 --> 02:06.520
You know, it's when you're moving to, it's one of those things where everybody's asking

02:06.520 --> 02:07.960
you, okay, when you're doing this, what's happening?

02:07.960 --> 02:12.600
So you've been telling everybody, everybody's got expectations, and it just gets a whole

02:12.600 --> 02:13.600
life of its own.

02:13.600 --> 02:18.360
And then, of course, things don't go through.

02:18.360 --> 02:21.440
So I got to ask, you know, I got to do the typical follow up question that's always super

02:21.440 --> 02:22.440
annoying.

02:22.440 --> 02:24.480
Do you have any idea when you're going to get in there?

02:24.480 --> 02:28.160
I think definitely not until after the school year at this point because school starts now

02:28.160 --> 02:29.160
next week.

02:29.160 --> 02:31.280
Oh, so it's going to be prolonged Florida, man.

02:31.280 --> 02:32.880
It's prolonged Florida, man.

02:32.880 --> 02:33.880
Wow.

02:33.880 --> 02:34.880
Wow.

02:34.880 --> 02:35.880
Wow.

02:35.880 --> 02:36.880
Okay.

02:36.880 --> 02:37.880
All right.

02:37.880 --> 02:38.880
Well, you know, you might as well stay through the winter and get the nice weather.

02:38.880 --> 02:39.880
That's right.

02:39.880 --> 02:42.160
This is the only email we have on on this particular topic.

02:42.160 --> 02:44.160
But spicy Chris wrote and I know you saw this.

02:44.160 --> 02:49.020
He says, after your effing gnome bashing, I thought I'd write you about an alternative

02:49.020 --> 02:50.660
I've been using for years.

02:50.660 --> 02:52.120
You've been gnome bashing, apparently.

02:52.120 --> 02:53.120
Not me, obviously.

02:53.120 --> 02:54.120
Of course, not me.

02:54.120 --> 02:57.020
Everybody knows that I've I've never said anything negative about gnome.

02:57.020 --> 03:01.000
So they're clearly just talking about it was all me.

03:01.000 --> 03:04.720
But spicy Chris says, just use the terminal, bro.

03:04.720 --> 03:06.380
The command line is thorough.

03:06.380 --> 03:10.140
It's got all kinds of combinations of text applications, and you can use things like

03:10.140 --> 03:14.680
Tmux and Vim and, you know, even got file managers if you want them.

03:14.680 --> 03:19.080
It's highly modular, highly customizable, integrates with scripts in the command line.

03:19.080 --> 03:20.080
Great.

03:20.080 --> 03:21.840
It's easy to write your own shell scripts when you need to.

03:21.840 --> 03:23.160
You never have to worry about the mouse.

03:23.160 --> 03:28.100
It reduces RSI injuries, and the UI never changes unless you want it to.

03:28.100 --> 03:30.800
And no one ever pulls the rug out from underneath you.

03:30.800 --> 03:33.340
You still will need to come up with a way to do a web browser, though.

03:33.340 --> 03:35.880
So just use the damn terminal if you want to use Linux.

03:35.880 --> 03:36.880
No, I don't know.

03:36.880 --> 03:37.880
I mean, sure.

03:37.880 --> 03:38.880
Terminal is great.

03:38.880 --> 03:39.880
I use terminal all the time.

03:39.880 --> 03:40.880
You know what he is?

03:40.880 --> 03:41.880
He's a Mac user.

03:41.880 --> 03:42.880
He doesn't want to admit it.

03:42.880 --> 03:43.880
Because this is what guys say.

03:43.880 --> 03:45.960
It's like, why do you even need to use the GUI on Linux?

03:45.960 --> 03:47.680
Just SSH into a Linux server.

03:47.680 --> 03:49.160
This is something we got into the show.

03:49.160 --> 03:54.160
It's like, just if you want to use Linux, use it on the server, SSH into it, and do

03:54.160 --> 03:55.160
it through a Mac.

03:55.160 --> 03:58.120
Or now Windows, too, I suppose people might say, but we haven't gotten that.

03:58.120 --> 03:59.240
I don't buy this.

03:59.240 --> 04:01.720
This sounds like this email from spicy Chris here.

04:01.720 --> 04:05.760
It sounds like something a younger version of me would say, like a little bit ignorant

04:05.760 --> 04:08.200
of people's history.

04:08.200 --> 04:16.480
I was born in the fires of graphical interfaces, literally born in the fires of building UIs.

04:16.480 --> 04:18.020
And I slogged it out.

04:18.020 --> 04:23.200
Every bad computer interface, every bad cell phone interface, every bad car infotainment

04:23.200 --> 04:24.200
interface.

04:24.200 --> 04:26.840
You see, son, I've lived through it all.

04:26.840 --> 04:31.920
And I haven't lived this long slogging through every bad UI design that could come up since

04:31.920 --> 04:33.040
UIs were a thing.

04:33.040 --> 04:38.440
And I haven't done all of it just to toss it all aside and use the command line.

04:38.440 --> 04:43.240
What has all of this sacrifice of time and patience and essentially beta testing for

04:43.240 --> 04:47.800
the next generation been if not to enjoy the fruits of my labor?

04:47.800 --> 04:49.760
So spicy Chris, you're wrong.

04:49.760 --> 04:54.240
While the terminal is awesome and it's completely worth learning, it should not be your only

04:54.240 --> 04:55.720
interface to your computer.

04:55.720 --> 04:58.800
This is not 1979.

04:58.800 --> 04:59.800
Just my take.

04:59.800 --> 05:01.120
Just my take.

05:01.120 --> 05:04.760
But I'm not also on the side of the camp that says you should never use the terminal on

05:04.760 --> 05:06.000
Linux.

05:06.000 --> 05:11.280
I think in an attempt to make the Linux more appealing, we try to pretend like the command

05:11.280 --> 05:13.040
line isn't necessary.

05:13.040 --> 05:15.960
And I think it gives people false impression of the situation.

05:15.960 --> 05:17.280
Little command line is good.

05:17.280 --> 05:21.520
I mean, I don't particularly like the writer's sentiment.

05:21.520 --> 05:28.800
I agree with you that it's kind of, I don't know, dismissive of people's concerns.

05:28.800 --> 05:34.320
The real answer is like, if you don't like GNOME, then like, you know, KDE exists, right?

05:34.320 --> 05:35.320
As people keep telling me.

05:35.320 --> 05:37.980
I mean, forget about, forget about GNOME for a second.

05:37.980 --> 05:44.200
What do you think about this idea that you should be able to use the computer without

05:44.200 --> 05:47.440
ever having to touch the command line?

05:47.440 --> 05:51.280
I think it's a bull**** goalpost because you can't even do that on the Mac.

05:51.280 --> 05:54.480
There's some things that if you want to change preferences, you have to write some com file

05:54.480 --> 05:55.480
from the command line.

05:55.480 --> 06:00.000
Well, and one of the big selling points of the Mac is, even though Apple doesn't push

06:00.000 --> 06:04.680
it as hard now, but certainly was back in the day, that it's Unix with a good UI.

06:04.680 --> 06:05.680
Well, that's whatever.

06:05.680 --> 06:06.680
Yeah.

06:06.680 --> 06:09.440
Everybody that ever writes in that says, if I want a GUI that's good, I use the Mac because

06:09.440 --> 06:10.440
it's got Bash.

06:10.440 --> 06:11.440
ZShell now, but yeah.

06:11.440 --> 06:13.040
But it's not a good Unix use.

06:13.040 --> 06:15.680
It's not a great user land, though.

06:15.680 --> 06:16.680
The Unix environment.

06:16.680 --> 06:17.680
It kind of stinks.

06:17.680 --> 06:18.680
Yeah.

06:18.680 --> 06:19.680
You load up homebrew and you're fine.

06:19.680 --> 06:20.680
I mean.

06:20.680 --> 06:21.680
Ish.

06:21.680 --> 06:22.680
Yeah.

06:22.680 --> 06:23.680
Yeah, it makes it better.

06:23.680 --> 06:24.680
It does make it better.

06:24.680 --> 06:25.680
Yeah.

06:25.680 --> 06:29.080
Liam, our carrier spy writes in and says, Mike is right.

06:29.080 --> 06:30.080
Congratulations.

06:30.080 --> 06:33.240
5G is basically, it's basically a lie.

06:33.240 --> 06:40.800
Um, you see what Liam says is ever since 4G LTE was deployed, the G's that you see like

06:40.800 --> 06:43.880
4G or 5G are really no longer relevant.

06:43.880 --> 06:50.960
LTE stands for longterm evolution, meaning its core is supposed to last for a long time.

06:50.960 --> 06:56.840
The 3GPP released LTE in 2008, and they create new incremental cellular releases roughly

06:56.840 --> 06:59.040
every one to two years.

06:59.040 --> 07:02.800
Since LTE, there have been some improvements for consumers, but most of the improvements

07:02.800 --> 07:08.960
are targeted towards industrial features such as IoT or vehicle to vehicle or vehicle to

07:08.960 --> 07:10.280
base station, right?

07:10.280 --> 07:11.280
Makes sense.

07:11.280 --> 07:13.560
Or like making it better indoors for people.

07:13.560 --> 07:18.680
4G slash 5G is perfectly capable of supporting people's day to day mobile broadband needs.

07:18.680 --> 07:23.040
The real challenge is convincing telecoms to meaningfully deploy it everywhere.

07:23.040 --> 07:24.040
Yeah.

07:24.040 --> 07:25.040
Yeah, really.

07:25.040 --> 07:27.280
You mean to like spend money on towers?

07:27.280 --> 07:28.280
What?

07:28.280 --> 07:29.280
Yeah.

07:29.280 --> 07:30.280
My bet is actually on LTE.

07:30.280 --> 07:34.160
I'm hoping that the, cause they are deploying some new towers and there are some new frequencies

07:34.160 --> 07:35.360
with 5G.

07:35.360 --> 07:39.000
So my hope is, is that they sell everybody on 5G.

07:39.000 --> 07:42.200
Apple's going to help and Google's going to help with the pixel six.

07:42.200 --> 07:44.080
They're all pushing 5G.

07:44.080 --> 07:47.840
So all of the rubes will get on 5G and then the LTE network will open up for guys like

07:47.840 --> 07:48.840
me.

07:48.840 --> 07:50.640
They'll just sell it to me for cheap.

07:50.640 --> 07:54.000
That's what they've done with the edge network and the 3G network as they've moved on is

07:54.000 --> 07:59.200
they've kind of opened those networks up to just flat rate pay, you know, one flat fee

07:59.200 --> 08:00.560
kind of plans.

08:00.560 --> 08:03.000
All the data you could want, that kind of stuff.

08:03.000 --> 08:04.640
So I'm all about that.

08:04.640 --> 08:08.760
I hope 5G takes off in that way just so the LTE network opens up.

08:08.760 --> 08:12.800
But 5GE, that is just LTE.

08:12.800 --> 08:13.800
That's good info Liam.

08:13.800 --> 08:14.800
Thank you.

08:14.800 --> 08:16.740
If you've got any other insights into the cellular industry, please do let us know.

08:16.740 --> 08:21.120
If you've got an area of biz that you're in that you think we would love an interesting

08:21.120 --> 08:24.920
insight into that most people aren't aware of, let us know.

08:24.920 --> 08:26.920
That's the kind of thing we love to get into the show.

08:26.920 --> 08:31.640
Coder dot show slash contact is where you go for that and we also love your responses

08:31.640 --> 08:32.640
to the show.

08:32.640 --> 08:33.640
Anything like that.

08:33.640 --> 08:36.800
And we should also mention, I don't know, did we say it in the show?

08:36.800 --> 08:40.640
I know we said it on the stream, but we're at a new live time now on Mondays.

08:40.640 --> 08:45.640
Both Mike and I are adjusting to it because A, he didn't move and B, I haven't slept for

08:45.640 --> 08:48.360
not just one night, I haven't slept for two nights.

08:48.360 --> 08:50.360
Two different reasons.

08:50.360 --> 08:54.760
So I actually fell asleep at 7am, but then we had the new show time.

08:54.760 --> 08:59.280
So ironically, if the show was at the old time this week, I could have slept more, but

08:59.280 --> 09:03.920
I had to get up to do the show at the new earlier time.

09:03.920 --> 09:04.920
It's the worst.

09:04.920 --> 09:05.920
But anyways.

09:05.920 --> 09:06.920
It's amazing.

09:06.920 --> 09:07.920
I know.

09:07.920 --> 09:08.920
But it's okay.

09:08.920 --> 09:09.920
I'll get my sleep.

09:09.920 --> 09:10.920
It's fine.

09:10.920 --> 09:11.920
I'll catch up.

09:11.920 --> 09:12.920
I'll probably take an afternoon nap.

09:12.920 --> 09:13.920
But yeah, so we have the new live time.

09:13.920 --> 09:18.960
It's at 10am Pacific, 1pm Eastern at jblive.tv on Mondays.

09:18.960 --> 09:22.080
And the next one that we'll do, I'll be on the road.

09:22.080 --> 09:26.200
I'll be on the way to Salt Lake City for our Salt Lake City meetup.

09:26.200 --> 09:28.340
And then from Salt Lake City, I head off to Denver.

09:28.340 --> 09:31.880
So we have a meetup on the 7th of August in Salt Lake City.

09:31.880 --> 09:35.280
And then we have a meetup on the 20th in Denver.

09:35.280 --> 09:38.880
And we will have that at meetup.com slash Jupiter broadcasting.

09:38.880 --> 09:40.260
Linode will be at the Denver one.

09:40.260 --> 09:47.480
We're going to the pin-dustry, which is an awesome, awesome basically adult fun zone.

09:47.480 --> 09:49.120
I mean not like that kind of adult.

09:49.120 --> 09:51.600
I mean like a fun zone built for adults.

09:51.600 --> 09:54.880
I don't know how else to phrase that.

09:54.880 --> 09:57.160
I didn't know we were taking this direction.

09:57.160 --> 10:00.680
Hey, I figured let's branch out, right?

10:00.680 --> 10:01.680
It's Jupiter at night.

10:01.680 --> 10:09.520
No, it's obviously got pinball, but it's got bowling, and it's a huge facility in the Denver

10:09.520 --> 10:10.520
area.

10:10.520 --> 10:12.200
So that's where we're going to have our meetup.

10:12.200 --> 10:15.120
Linode's going to be giving away raspberry pies.

10:15.120 --> 10:18.400
We're going to create some exclusive content from the road trip and releasing that in the

10:18.400 --> 10:23.040
extras feed towards the middle of end of September, whenever the hell I get back.

10:23.040 --> 10:24.300
That's all coming.

10:24.300 --> 10:30.120
So do join us next week because somehow I'll be pulling off some sort of technical miracle

10:30.120 --> 10:34.960
to live stream the show live from the road because it's going to be tight.

10:34.960 --> 10:37.580
We're going to have a full RV full of kids and humans.

10:37.580 --> 10:42.880
So it's going to be a feat on multiple levels, like trying to keep the business going while

10:42.880 --> 10:47.620
still going down the road, while also trying to take the kids on a family trip, while also

10:47.620 --> 10:53.200
trying to create content for the release once we get back.

10:53.200 --> 10:54.200
And doing the meetups.

10:54.200 --> 10:55.200
And the meetups.

10:55.200 --> 10:56.200
Oh my God.

10:56.200 --> 10:57.200
So let's see how all that goes.

10:57.200 --> 10:58.200
It's too much.

10:58.200 --> 10:59.200
Damn.

10:59.200 --> 11:02.040
I overdid it, didn't I?

11:02.040 --> 11:05.320
I'm realizing that now just before it all starts.

11:05.320 --> 11:06.320
We'll see.

11:06.320 --> 11:07.560
Maybe it'll turn out just fine.

11:07.560 --> 11:08.560
Maybe it'll be fine.

11:08.560 --> 11:09.560
Maybe.

11:09.560 --> 11:10.560
We'll see.

11:10.560 --> 11:14.680
Meetup.com slash Jupiter Broadcasting.

11:14.680 --> 11:17.200
Linode dot com slash Coder.

11:17.200 --> 11:21.080
Go there to get $100 in 60 day credit on a new account and you go there to support the

11:21.080 --> 11:22.080
show.

11:22.080 --> 11:27.000
This here Coder radio program is made possible because you go take advantage of our sponsor

11:27.000 --> 11:28.000
offers.

11:28.000 --> 11:30.520
That's a huge part of what keeps this show on the road itself.

11:30.520 --> 11:34.760
And Linode is one of those sponsors that we can enthusiastically endorse.

11:34.760 --> 11:39.000
Linode's been around since 2003 is one of the very first companies in cloud computing.

11:39.000 --> 11:40.000
I don't even know.

11:40.000 --> 11:44.920
I don't even think it was called cloud computing back then, but now 18 years later, it sure

11:44.920 --> 11:45.920
is.

11:45.920 --> 11:46.920
And they're still in the game.

11:46.920 --> 11:50.000
They're the largest independent open cloud provider in the world.

11:50.000 --> 11:53.800
They have 11 data centers around the world that you can choose from millions of customers

11:53.800 --> 11:59.160
and businesses, and they are still focused on making cloud computing simple, affordable

11:59.160 --> 12:00.720
and accessible to all.

12:00.720 --> 12:06.040
What I love about Linode is their infrastructure is bulletproof, rock solid fast.

12:06.040 --> 12:09.920
And if you want to just get an application up on the web and start working on a project,

12:09.920 --> 12:12.600
they have avenues you can take to do that super quick.

12:12.600 --> 12:17.820
Or if you want to deploy a couple of core infrastructure servers and build up applications

12:17.820 --> 12:21.980
on those servers and do it yourself, Linode makes that possible as well.

12:21.980 --> 12:26.540
They've really refined that dashboard of theirs to make this kind of gradient of usability

12:26.540 --> 12:29.200
super, super accessible.

12:29.200 --> 12:33.080
And then on top of that, they've layered in really great features like DDoS protection,

12:33.080 --> 12:39.360
cloud firewalls, VLAN support, a powerful DNS manager, an easy way to manage block storage.

12:39.360 --> 12:43.020
So if you need a little extra disk on a server, they could totally accommodate that.

12:43.020 --> 12:47.880
Or you can go the route that I often go is I take advantage of Linode's S3 compatible

12:47.880 --> 12:48.880
object storage.

12:48.880 --> 12:50.160
That stuff rocks.

12:50.160 --> 12:54.200
Not only is it super crazy fast, not only can you possibly generate a HTTP URL for every

12:54.200 --> 12:58.320
file in the object storage if you want with great permissions management, but it allows

12:58.320 --> 13:04.800
you to kind of grow, expand, and, I guess, contract your storage as you need it.

13:04.800 --> 13:07.040
And that is just one less thing to manage.

13:07.040 --> 13:10.360
How embarrassing is it when your system goes down because, like I had this happen with

13:10.360 --> 13:14.560
Nextcloud, I added a bunch of files and then I deleted a bunch of files thinking they'd

13:14.560 --> 13:18.840
be removed, but of course they were just being stored in the deleted recycle area of the

13:18.840 --> 13:19.840
server.

13:19.840 --> 13:22.160
So then when we added the next batch of files, we ran out of storage and the whole server

13:22.160 --> 13:23.160
went down.

13:23.160 --> 13:26.800
And you know, like who has time for that in the middle of the workday?

13:26.800 --> 13:27.880
Nobody.

13:27.880 --> 13:31.840
And so that's why I transitioned that system over, I'd say like I did it, of course we

13:31.840 --> 13:35.020
as a team did it, we transitioned it over to S3 object storage.

13:35.020 --> 13:37.680
And it's really accessible and approachable to something like Nextcloud because they have

13:37.680 --> 13:39.880
that kind of stuff built right in.

13:39.880 --> 13:42.960
Of course Linode also has more advanced features if that's your jam.

13:42.960 --> 13:44.880
Maybe you want to make it part of your multi-cloud setup.

13:44.880 --> 13:48.720
They've got Kubernetes support, Terraform support, and they just make all of it very,

13:48.720 --> 13:50.520
very straightforward.

13:50.520 --> 13:54.280
And then it's all sitting on top of super fast networking, super fast hardware that

13:54.280 --> 13:55.280
they keep up to date.

13:55.280 --> 13:59.320
They have their high-end CPU systems, their AMD EPYC processors, and then they wrap it

13:59.320 --> 14:05.000
all up with just the best support in the business, the best customer support there is by phone

14:05.000 --> 14:06.000
or ticket.

14:06.000 --> 14:08.640
And that's just a nice little insurance policy to have.

14:08.640 --> 14:10.760
So go grab our $100 and try it out.

14:10.760 --> 14:15.800
You could learn something, deploy something, or maybe you just want to just compare it.

14:15.800 --> 14:17.460
That $100 lets you kick the tires.

14:17.460 --> 14:21.700
So go to linode.com slash coder, get $100 and 60 day credit on a new account.

14:21.700 --> 14:23.200
And of course you support the show.

14:23.200 --> 14:27.680
That's linode.com slash coder.

14:27.680 --> 14:30.100
So I feel like talking a little ice cream.

14:30.100 --> 14:32.720
We have a new open source compiler.

14:32.720 --> 14:39.000
And if the developer from Stripe is to be believed, this new Sorbet compiler is 22 to

14:39.000 --> 14:44.840
even 170% faster than Ruby's default implementation.

14:44.840 --> 14:45.840
I like speed.

14:45.840 --> 14:46.840
Just maybe a quick background.

14:46.840 --> 14:48.240
Ruby is an interpreted language.

14:48.240 --> 14:50.960
It's like Python if Python were written by sane people.

14:50.960 --> 14:55.120
Unfortunately, it's not very popular because the entire Ruby community more or less was

14:55.120 --> 14:56.120
subsumed by Rails.

14:56.120 --> 15:01.000
Rails fell out of favor.

15:01.000 --> 15:02.000
Ruby is just so elegant.

15:02.000 --> 15:03.000
We could keep moving on.

15:03.000 --> 15:06.240
But it's an interpreted language is the point, right?

15:06.240 --> 15:09.840
But speed is a problem in interpreted languages.

15:09.840 --> 15:13.560
Sorbet is actually like Chris said, from the folks at Stripe.

15:13.560 --> 15:19.640
It is like a static, it was only, not only, but it's basically like a static analyzer

15:19.640 --> 15:22.720
that like adds some type checking and stuff like that to Ruby.

15:22.720 --> 15:24.920
Ruby is a dynamic language.

15:24.920 --> 15:30.400
And this is now a compiler based on that or kind of in parallel to that.

15:30.400 --> 15:34.960
It's powered by LLVM, which anyone who's done any development recently probably knows what

15:34.960 --> 15:35.960
LLVM is.

15:35.960 --> 15:36.960
We don't need to talk about it.

15:36.960 --> 15:40.920
If you don't know, it's a compiler.

15:40.920 --> 15:45.960
I mean, it's, it's a compiler, well, there's a great episode of ATV with Kurt Lassener.

15:45.960 --> 15:46.960
He explains the details.

15:46.960 --> 15:51.120
But think about it like Clang LLVM, if you've ever done any iOS development, you've used

15:51.120 --> 15:52.120
it.

15:52.120 --> 15:57.640
And actually I think, is this still, is this true on stock Ubuntu now that the default

15:57.640 --> 16:04.400
C++ compiler is based on the LLVM or is it still GCC?

16:04.400 --> 16:05.600
That I don't know.

16:05.600 --> 16:08.560
I know it is easy to get it on Ubuntu.

16:08.560 --> 16:12.480
They have it packaged up, but I don't think it's by default.

16:12.480 --> 16:13.480
Don't think so.

16:13.480 --> 16:14.480
At least not in 2004.

16:14.480 --> 16:20.560
Because at the Matabotter, we use LLVM and LLDB just to keep everything unified, right?

16:20.560 --> 16:26.400
So I'm not sure if that's like something I set up on our image of our stock Pop OS or

16:26.400 --> 16:27.400
if that's just how it is.

16:27.400 --> 16:28.400
I don't remember.

16:28.400 --> 16:29.400
And it is in the repo.

16:29.400 --> 16:31.740
So it's like one apt install away.

16:31.740 --> 16:34.080
What this does is exactly what it says on the tin, right?

16:34.080 --> 16:38.700
It is a compiler for Ruby that makes it damn fast.

16:38.700 --> 16:39.960
That is pretty cool.

16:39.960 --> 16:43.320
They are saying that they're using it in production.

16:43.320 --> 16:45.880
But they admonish you not to.

16:45.880 --> 16:46.880
So take that.

16:46.880 --> 16:49.880
Don't do as we do.

16:49.880 --> 16:50.880
Yes.

16:50.880 --> 16:54.400
He goes on with a pretty good conversation about why not do a JIT compiler, why not just

16:54.400 --> 16:57.120
improve the Ruby VM.

16:57.120 --> 17:00.800
And I think the reasons make a ton of sense.

17:00.800 --> 17:08.200
I wonder if this is really going to get too much adoption.

17:08.200 --> 17:13.680
I feel like the majority of people that I talk to that are using Ruby are using them

17:13.680 --> 17:21.320
for fairly, I mean, I'm going to say simple, but fairly run of the mill Ruby on Rails applications

17:21.320 --> 17:27.760
where this kind of thing certainly fast is good, but wouldn't necessarily be super helpful

17:27.760 --> 17:29.680
for the day to day problems they have.

17:29.680 --> 17:33.880
Also when you read their motivations as to why they decided to open source Sorbet, I

17:33.880 --> 17:37.720
mean, a lot of times people get into this stuff to scratch their own itch, but it doesn't

17:37.720 --> 17:42.080
sound like the core things that generally lead to a lot of community adoption.

17:42.080 --> 17:46.560
So the number one reason at the top of their list that they are open sourcing this now

17:46.560 --> 17:50.760
is that they had already shared it with a couple of people, a handful as they put it,

17:50.760 --> 17:53.920
and it was toilsome to manage who they shared it with and who they hadn't.

17:53.920 --> 17:55.560
So this just makes that easier.

17:55.560 --> 17:58.360
And then they have other things in here.

17:58.360 --> 18:05.000
Sometimes you get some improvements, just really just not super enthused about the community

18:05.000 --> 18:06.920
aspect of open sourcing.

18:06.920 --> 18:10.680
And it's much more a utility of, you know, it was just getting hard to track this, and

18:10.680 --> 18:11.840
we figured we put it out there.

18:11.840 --> 18:16.600
I mean, you know, it kind of depends on our internal data structures anyway, so we got

18:16.600 --> 18:17.600
all that figured out.

18:17.600 --> 18:20.320
We had a lot of it already done, so it was just sort of the last piece.

18:20.320 --> 18:21.600
It's just very blasé.

18:21.600 --> 18:28.320
Yeah, and then there's a Ruby community aspect of this of, you know, this is not going to

18:28.320 --> 18:34.680
shake the Ruby community to its core, I don't think, unless my perception of what's going

18:34.680 --> 18:37.280
on is very, very wrong, which I don't think it is.

18:37.280 --> 18:39.480
Do you think it could inspire some changes?

18:39.480 --> 18:44.360
Well, it's interesting because their model for type checking in Ruby, right, was not

18:44.360 --> 18:47.320
adopted by the Ruby core team.

18:47.320 --> 18:48.320
You can use one or the other.

18:48.320 --> 18:51.480
I think you can even kind of use them both together.

18:51.480 --> 18:54.440
But Ruby 3, spoilers for this, is going way deep.

18:54.440 --> 18:57.560
We covered this about six months ago, I think.

18:57.560 --> 19:03.600
Added type checking, Sorbet has had type checking, and they're kind of on parallel tracks.

19:03.600 --> 19:07.160
First of all, you have to need this, right?

19:07.160 --> 19:12.200
If you're just writing like a line of business Rails app, you don't need this, and this is

19:12.200 --> 19:16.880
just adding extra weirdness to your project.

19:16.880 --> 19:24.480
There's so much going on in the let's add type checking and performance improvements

19:24.480 --> 19:33.520
to an interpreted language space now that I'm kind of skeptical with some of this.

19:33.520 --> 19:34.800
Python has something like this too, right?

19:34.800 --> 19:39.080
They've added type checking to a point, or types to a point.

19:39.080 --> 19:42.440
To me, at some point, if you're taking an interpreter languages and writing a compiler

19:42.440 --> 19:46.520
for it, basically your problem is you probably shouldn't have been doing this stuff in the

19:46.520 --> 19:47.520
interpreted language.

19:47.520 --> 19:49.840
So that is exactly what I was going to say, yeah.

19:49.840 --> 19:50.840
Right.

19:50.840 --> 19:55.440
Well, it was fast to get a proof of concept, a V1 up in Ruby, because Ruby is a great language

19:55.440 --> 19:59.880
for developer efficiency, and they admit freely, if you read their blog, which is a really

19:59.880 --> 20:04.720
great blog, the Stripe developer blog, that they do lots of their projects in Go and I

20:04.720 --> 20:05.720
think Java.

20:05.720 --> 20:06.720
Java.

20:06.720 --> 20:07.720
Because they're fast.

20:07.720 --> 20:08.720
Yep.

20:08.720 --> 20:09.720
Yep.

20:09.720 --> 20:10.720
Yep.

20:10.720 --> 20:11.720
Which makes sense.

20:11.720 --> 20:14.720
At Stripe, their problem is performance and scalability, right?

20:14.720 --> 20:18.040
They're literally operating at, we process tons of payments in the world.

20:18.040 --> 20:21.400
Not only is that critical for them, but it's so, so critical for all the businesses that

20:21.400 --> 20:22.400
depend on Stripe.

20:22.400 --> 20:24.880
Like, that's mission critical stuff, payments, right?

20:24.880 --> 20:26.000
So they've got to get it right.

20:26.000 --> 20:31.520
And so when you read the post, and you kind of read into what they're saying, to me it

20:31.520 --> 20:34.400
looks like, well, exactly what you just said.

20:34.400 --> 20:37.480
They created a lot of this because it was quick to get going.

20:37.480 --> 20:41.680
But now they've got to keep it running because of the business critical nature, and the teams

20:41.680 --> 20:47.080
that are maintaining the existing Ruby stuff just desperately, urgently need things to

20:47.080 --> 20:48.440
run faster.

20:48.440 --> 20:54.960
And then they have, as they put it, a handful of teams that are using Java and Go in new

20:54.960 --> 20:57.000
areas that they've rebuilt.

20:57.000 --> 21:02.360
They say that Stripe's existing Ruby code base is many millions of lines of code and

21:02.360 --> 21:06.480
implement Stripe's most business critical workloads, i.e. the most core value stuff

21:06.480 --> 21:07.720
is written in Ruby.

21:07.720 --> 21:10.700
So that's why they're spending the time to make this better, even if they rewrite it

21:10.700 --> 21:11.700
one day.

21:11.700 --> 21:12.700
Yeah.

21:12.700 --> 21:13.700
You know, that's like the magical rewrite.

21:13.700 --> 21:17.240
You know, the refactor that's always, you know, one year away.

21:17.240 --> 21:20.720
Yeah, I don't know about that.

21:20.720 --> 21:21.720
I mean, I have the same problem.

21:21.720 --> 21:26.200
Well, actually, I literally had this problem in Ruby about a year and a half ago.

21:26.200 --> 21:30.320
I solved it by writing the component I needed in Rust and run another project C++.

21:30.320 --> 21:32.720
Right now I'm doing the same thing in Python.

21:32.720 --> 21:38.480
I have a thing that needs to be more performant, so I wrote one little stupid module in C++.

21:38.480 --> 21:42.200
Little stupid module that does, like, mission critical stuff that involves, like, processing

21:42.200 --> 21:44.440
a bunch of data.

21:44.440 --> 21:48.000
And it's just a native binary that the Python application will call into.

21:48.000 --> 21:50.400
I could see this being useful for some people in the audience.

21:50.400 --> 21:51.400
Oh, yeah.

21:51.400 --> 21:52.400
I think it is useful.

21:52.400 --> 21:56.080
So, yeah, we'll have a link in the show notes for that, and you could check out some of

21:56.080 --> 21:57.080
the...

21:57.080 --> 22:00.440
I mean, 170% faster?

22:00.440 --> 22:01.840
I don't care who you are.

22:01.840 --> 22:02.840
That gets your attention.

22:02.840 --> 22:05.480
If it's real, that gets your attention.

22:05.480 --> 22:08.740
We're gonna have to struggle with things that may or may not be real, but I can confirm

22:08.740 --> 22:12.840
that Linux Action News just hit 200 episodes.

22:12.840 --> 22:18.080
We have a sticker out for that, and also, I was just gonna mention, Self-Hosted just

22:18.080 --> 22:19.080
hit episode 50.

22:19.080 --> 22:24.120
Like, these young kids, Mike, we're sitting here at 425, and Self-Hosted just hit 50 episodes,

22:24.120 --> 22:25.800
Linux Action News just hit 200.

22:25.800 --> 22:27.400
Aww, they're so cute.

22:27.400 --> 22:28.400
I know.

22:28.400 --> 22:31.920
We have new stickers for both Self-Hosted and Linux Action News that are taken from

22:31.920 --> 22:36.520
the MP3 album art, which seems fitting for, like, milestone releases, and those are up

22:36.520 --> 22:42.360
at JupiterGarage.com, along with some new swag up there at JupiterGarage.com.

22:42.360 --> 22:47.200
I just want to recommend the Chris the Badger shirt.

22:47.200 --> 22:53.360
I can say that I am ordering several, because having your face on my chest has always been

22:53.360 --> 22:54.360
a dream of mine.

22:54.360 --> 22:59.240
Absolutely, and you know how I prefer that left boob of yours, so I think that's right

22:59.240 --> 23:00.240
where my head will be.

23:00.240 --> 23:02.120
Well, it does flop at a very unique angle.

23:02.120 --> 23:06.640
I've always thought it was a bit of a unique snowflake.

23:06.640 --> 23:07.920
So that's JupiterGarage.com.

23:07.920 --> 23:11.380
That's our swag store, and we're gonna get some more, you know, eventually, if we ever

23:11.380 --> 23:15.020
do another run on the coder robe, that's where it will go.

23:15.020 --> 23:16.520
Don't mention the coder robe.

23:16.520 --> 23:20.080
Irvine, Irving, he just wrote in, he said he loves his coder.

23:20.080 --> 23:22.400
He says it's his great, he works in it every day.

23:22.400 --> 23:26.340
The only thing he says we should do now is we should get an optional lint roller with

23:26.340 --> 23:30.200
it because since he started working in his coder, his cat's all over him, and now he

23:30.200 --> 23:31.440
needs to get the cat hair off it.

23:31.440 --> 23:34.320
Well, you know, the coder, I write 50% fewer bucks.

23:34.320 --> 23:35.320
I just want to say.

23:35.320 --> 23:36.320
Really?

23:36.320 --> 23:37.320
Yeah.

23:37.320 --> 23:38.320
It must be the arm support.

23:38.320 --> 23:41.800
You know, it's cut so that way it doesn't get in the way of typing.

23:41.800 --> 23:47.880
Okay, so this next story, it seems so freaking far out.

23:47.880 --> 23:52.720
I had to like go make sure you weren't trolling me when you linked this story up.

23:52.720 --> 23:53.720
Nice.

23:53.720 --> 23:58.520
This is Doctor Who level like Star Trek, like an actual thing in Star Trek, like this is

23:58.520 --> 24:05.920
nuts, a research team with dozens of scientists working in partnership with Google's quantum

24:05.920 --> 24:13.920
computing lab may have created the world's first time crystal.

24:13.920 --> 24:18.840
We're not kidding you, they've created a time crystal.

24:18.840 --> 24:25.400
Like a perpetual motion machine, a time crystal forever cycles between states without consuming

24:25.400 --> 24:27.240
energy.

24:27.240 --> 24:33.120
Scientists claim to have built this new phase of matter inside a quantum computer.

24:33.120 --> 24:40.960
If it is true, it is literally the magical breakthrough quantum computers have needed.

24:40.960 --> 24:46.360
So I know this sounds wild, and I know it sounds impossible, and there's white papers

24:46.360 --> 24:48.400
I will have linked in the show notes.

24:48.400 --> 24:56.000
It seems the Google team may have figured out what was once theoretical and actually

24:56.000 --> 25:01.320
created this thing in a quantum computer, and they called it a new phase of matter.

25:01.320 --> 25:05.760
It would be like having a snowflake that consistently cycled back and forth between two different

25:05.760 --> 25:09.060
configurations of its crystalline shape.

25:09.060 --> 25:12.840
It's a seven point lattice one moment and then say a 10 point lattice the next moment

25:12.840 --> 25:13.840
or whatever.

25:13.840 --> 25:17.120
Like if you could imagine a snowflake that does that, that's sort of how a time crystal

25:17.120 --> 25:18.120
is.

25:18.120 --> 25:22.840
What Google has done is potentially prove that humans can manufacture time crystals.

25:22.840 --> 25:26.540
In the words of the researchers themselves, quote, these results establish a scalable

25:26.540 --> 25:30.880
approach to studying non-equilibrium phases of matter on current quantum processors.

25:30.880 --> 25:37.960
OK, I'm really not following what any of that means, but it sounds like a really huge deal.

25:37.960 --> 25:40.960
Like people are freaking out in the scientific community about this.

25:40.960 --> 25:45.080
It means the doctor is back and the Daleks are coming.

25:45.080 --> 25:46.200
It's so hard to understand.

25:46.200 --> 25:50.160
I can barely even say the words to even wrap my head around it, right?

25:50.160 --> 25:55.640
It is super complicated, but it could mean that we have kind of a solution.

25:55.640 --> 25:59.480
If this is my understanding of it, we could have kind of a solution that we've needed

25:59.480 --> 26:03.080
to kind of take quantum computers into actual daily use.

26:03.080 --> 26:05.320
Well, I'm actually excited about this.

26:05.320 --> 26:08.480
Obviously people are writing about how this could be like the very, very baby steps, like

26:08.480 --> 26:12.920
a theoretical warp drive, which is nuts, but maybe not nuts, right?

26:12.920 --> 26:15.040
You'll be laughing at me.

26:15.040 --> 26:20.240
But really, will this finally enable us to automatically change our desktop background

26:20.240 --> 26:21.240
in GNOME?

26:21.240 --> 26:22.240
I can't believe you.

26:22.240 --> 26:25.160
I cannot believe you.

26:25.160 --> 26:29.640
First you dismiss all of their response and then you troll them again.

26:29.640 --> 26:30.640
It's amazing.

26:30.640 --> 26:31.640
That is savage.

26:31.640 --> 26:35.040
Kidding aside, this is a huge deal, right?

26:35.040 --> 26:41.920
It's so, it's so like, well, one, all right, this hasn't been peer reviewed, right?

26:41.920 --> 26:47.760
So this could be a fluke that would be very depressing, could be some kind of, you know,

26:47.760 --> 26:50.680
it needs to be a repeatable result to actually be accepted.

26:50.680 --> 26:55.440
But assuming like, I don't think Google would make this up and Princeton University certainly

26:55.440 --> 26:56.440
would.

26:56.440 --> 26:57.440
Right.

26:57.440 --> 26:58.440
Yeah.

26:58.440 --> 27:01.200
So this is like the beginning.

27:01.200 --> 27:06.400
We all might be dead listening to this when this actually matters, but this is the beginning

27:06.400 --> 27:09.480
of a whole new wave of computing, right?

27:09.480 --> 27:12.200
Thinking about quantum computing, the whole big deal is like multivalent states, right?

27:12.200 --> 27:14.360
It's not just ones and zeros anymore.

27:14.360 --> 27:19.880
So that, that's just like, literally everybody listening to the show will effectively be

27:19.880 --> 27:23.160
a dinosaur once this becomes big enough.

27:23.160 --> 27:26.800
Even if we're still around because this is a whole new way of computing.

27:26.800 --> 27:27.800
Yeah.

27:27.800 --> 27:28.800
Yeah.

27:28.800 --> 27:31.480
That sucks for us, but hey, if I get a flying car.

27:31.480 --> 27:32.480
Yeah, that's true.

27:32.480 --> 27:35.640
I mean, Google definitely thinks this is real.

27:35.640 --> 27:41.000
They've with Cornell University are publishing a white paper that we'll have linked in the

27:41.000 --> 27:47.480
show notes and in here they basically promised the moon in the, they say they'll demonstrate

27:47.480 --> 27:51.560
it and yeah, I mean, wild, but you're right.

27:51.560 --> 27:55.400
Even if, even if it was something they could start working on in the next 10 years, the

27:55.400 --> 27:58.280
industry wouldn't transition forever.

27:58.280 --> 28:00.000
So it's not going to, you're right.

28:00.000 --> 28:01.800
It's not going to really impact us.

28:01.800 --> 28:05.760
Maybe, maybe governments, you know, in large institution and research computers.

28:05.760 --> 28:09.840
So maybe it could have an, it could have an impact on our lives in the way that supercomputers

28:09.840 --> 28:13.400
do now where they're helping in research and spying on us.

28:13.400 --> 28:15.360
Yeah, exactly.

28:15.360 --> 28:16.360
Exactly.

28:16.360 --> 28:19.920
Datadog.com slash Coder Radio.

28:19.920 --> 28:25.360
Go there to get a 14 day free trial, support the show and get a free shirt after you create

28:25.360 --> 28:27.000
one dashboard.

28:27.000 --> 28:31.600
Datadog lets you analyze code level performance across your environment and troubleshoot issues

28:31.600 --> 28:37.140
faster than ever using Datadog's tools, like their continuous profiler that automatically

28:37.140 --> 28:40.100
collects profiles from your production servers all the time.

28:40.100 --> 28:44.540
So you can analyze your data quickly with minimal overhead, get your answers quickly

28:44.540 --> 28:46.660
and communicate that with your team.

28:46.660 --> 28:51.260
You get a unified picture of your environment by correlating code performance metrics with

28:51.260 --> 28:57.080
your other monitoring data from your entire stack, all in beautiful real time dashboards.

28:57.080 --> 29:03.120
And it gets even easier with over 450 integrations for tracing, log management and other enterprise

29:03.120 --> 29:07.880
applications you're probably already using that connect in with that continuous profiler.

29:07.880 --> 29:11.600
It's all in one product, all in one platform.

29:11.600 --> 29:15.780
Datadog enables you to pinpoint the root cause of issues faster than ever.

29:15.780 --> 29:21.560
So go try it out for free for 14 days by visiting datadog.com slash Coder Radio.

29:21.560 --> 29:25.880
For a limited time, if you start a free trial and you create one dashboard, you'll get a

29:25.880 --> 29:30.480
free Datadog t-shirt and I love free swag and I could definitely use a t-shirt right

29:30.480 --> 29:31.480
now.

29:31.480 --> 29:37.520
So go to datadog.com slash Coder Radio.

29:37.520 --> 29:41.200
There's one last article I wanted to talk to you about.

29:41.200 --> 29:44.660
It was emailed in to us a couple of times as a suggestion to get our take on it and

29:44.660 --> 29:47.620
it ran over at techcrunch.com.

29:47.620 --> 29:56.160
It's from Sean O'Mara and it's titled the end of open source question mark and the inflammatory

29:56.160 --> 29:59.440
title almost made me want to dismiss it immediately.

29:59.440 --> 30:04.880
But the root of what Sean writes about here is actually something that crossed my mind.

30:04.880 --> 30:10.640
So several weeks ago, well actually April, so it's been more than weeks, there was a

30:10.640 --> 30:17.300
ban by the Linux kernel team of the University of Minnesota for committing hypocrite commits

30:17.300 --> 30:23.940
that was commits to the Linux kernel that were intentionally buggy to create a problem.

30:23.940 --> 30:28.260
Now that code never shipped in production and when the kernel team found out they were

30:28.260 --> 30:33.320
doing this, which it was, they found out earlier in the year, they didn't find out in April,

30:33.320 --> 30:37.160
but there was another series of commits in April that they suspected might be part of

30:37.160 --> 30:39.680
that research renewed.

30:39.680 --> 30:45.560
The timing also worked out fantastically for the kernel team because by creating a huge

30:45.560 --> 30:49.760
issue in April about these hypocrite commits, even though they had occurred earlier in the

30:49.760 --> 30:55.600
year, they were able to get the talk that was scheduled at a security symposium canceled

30:55.600 --> 30:58.880
that was about these hypocrite commits to the Linux kernel.

30:58.880 --> 31:04.080
And essentially what happened is a trusted source at the University of Minnesota used

31:04.080 --> 31:09.600
a basic kind of crappy static analyzer to find obvious low-hanging fruit in the Linux

31:09.600 --> 31:11.420
kernel.

31:11.420 --> 31:16.720
And then it seems unclear but three to five times that we made it through the first pass

31:16.720 --> 31:25.000
of maintainers submitted patches that ostensibly seemed to fix that bug but were so complex

31:25.000 --> 31:30.360
and gross actually intentionally introduced other vulnerabilities when stacked with other

31:30.360 --> 31:32.360
elements in the code.

31:32.360 --> 31:36.640
Now that made it past the first level maintainer but never made it to Linus's tree.

31:36.640 --> 31:39.320
But the research is actually kind of valid.

31:39.320 --> 31:45.920
The research idea was can we exploit our position of trust to get vulnerabilities into a project

31:45.920 --> 31:52.380
like the Linux kernel even with its structured process of maintainers and all of that.

31:52.380 --> 31:54.260
And the answer is yes they could.

31:54.260 --> 31:56.440
They did it successfully.

31:56.440 --> 32:02.180
Now the big upset and the ban which dominated the headlines essentially killed the messenger

32:02.180 --> 32:04.300
of that research.

32:04.300 --> 32:09.160
And so the actual results were kind of put aside and instead the focus was put on how

32:09.160 --> 32:15.120
dare they violate the kernel team's trust and time with these hypocrite commits.

32:15.120 --> 32:19.200
And the discussion never really came back to was it valid research or not.

32:19.200 --> 32:23.820
And what Sean is saying over at TechCrunch is that when you look at the complexity of

32:23.820 --> 32:29.760
this particular problem abusing a trusted source to submit hypocrite commits that is

32:29.760 --> 32:34.560
a problem that is going to impact the entire open source ecosystem.

32:34.560 --> 32:38.100
Every free software project out there needs to be thinking about this.

32:38.100 --> 32:42.380
And the Linux kernel is probably the best suited to defend against something like this

32:42.380 --> 32:46.140
in terms of resources and structure and it was compromised.

32:46.140 --> 32:49.800
So what do you think is going to happen to something like NGINX or GREP or something

32:49.800 --> 32:53.700
lower in the stack that does maybe have only one maintainer.

32:53.700 --> 32:58.200
And so what Sean is saying is this is a huge problem and essentially open source is dead

32:58.200 --> 33:03.040
in the water security wise until they come up with a way to solve this problem.

33:03.040 --> 33:08.620
And he argues that the net result is projects that are large in scale are even worse off

33:08.620 --> 33:13.240
they are just utter unprepared to deal with this game changing hyperscale threat model

33:13.240 --> 33:14.240
he writes.

33:14.240 --> 33:20.860
He says the researchers were able to target and get their patches in in code that was

33:20.860 --> 33:23.280
reviewed by a maintainer.

33:23.280 --> 33:26.920
Maybe they didn't maybe they didn't review it fully who knows but essentially by abusing

33:26.920 --> 33:31.020
their insider position in the community the maintainer probably just took a quick glance

33:31.020 --> 33:34.880
at it and said well it's garbage but it'll fix the issue I suppose.

33:34.880 --> 33:38.160
So is this what do you think is open source essentially screwed unless they come up with

33:38.160 --> 33:41.600
a way to secure this end of the development chain.

33:41.600 --> 33:48.360
I saw the story in like early May and I kind of ignored it because one I'm sure this happens

33:48.360 --> 33:51.800
all the time with or without intent right.

33:51.800 --> 33:56.440
And I can personal experience right I have a lot of dependencies but a lot of PIP dependencies

33:56.440 --> 34:01.120
and people make mistakes when they update their thing or they don't realize they're

34:01.120 --> 34:06.080
breaking backwards compatibility with some other package you're relying on right.

34:06.080 --> 34:10.120
Great I mean there are tons of examples but like there was a intentional and I don't remember

34:10.120 --> 34:16.880
the part of the Heartbleed stuff where the gem for SSL on Ruby they just like killed

34:16.880 --> 34:22.340
a bunch of versions of it because it was exploited but that really screwed up a bunch of Rails

34:22.340 --> 34:27.040
projects for me and caused a lot of heartache it forced me to update faster than I wanted

34:27.040 --> 34:29.420
to.

34:29.420 --> 34:33.780
Also going to the proprietary side and I'm going to get to the point in a minute don't

34:33.780 --> 34:38.960
governments around the world either hoard zero days or in fact demand backdoors.

34:38.960 --> 34:43.680
Well and look what we just saw with the NSO group and the iPhones and Androids that were

34:43.680 --> 34:44.680
getting exploited.

34:44.680 --> 34:48.760
Yeah I mean isn't that just an intentional exploit.

34:48.760 --> 34:53.360
Yeah they're sitting on some exploit to take advantage of that in order to get past Blast

34:53.360 --> 34:58.500
or on iMessage which is the sandbox for iMessage they have to be using some exploit that Apple

34:58.500 --> 34:59.500
doesn't know about.

34:59.500 --> 35:07.060
Yeah I don't I kind of don't buy this I think this is a fun story because it yes the weird

35:07.060 --> 35:11.080
part it was university researchers who you might expect better from.

35:11.080 --> 35:12.080
Yeah.

35:12.080 --> 35:18.160
But this is like saying hey if I have the key to your liquor store I can rob you.

35:18.160 --> 35:24.420
Okay so you any contributor to any project could do this and this has been going on for

35:24.420 --> 35:29.040
decades literally right via you know government entities.

35:29.040 --> 35:33.480
That's my take and or just people that are dicks that are just you know doing stupid

35:33.480 --> 35:34.480
stuff to be a jerk.

35:34.480 --> 35:39.960
The thing is is we have more tooling now than ever to track changes and revert changes and

35:39.960 --> 35:42.720
revoke permissions or honest mistakes.

35:42.720 --> 35:43.720
Yeah absolutely.

35:43.720 --> 35:44.720
Heartbleed was not on purpose.

35:44.720 --> 35:50.040
Right I mean it feels like there's definitely a technological solution to this.

35:50.040 --> 35:55.480
We could have more tools that are checking patches and smarter and smarter like again

35:55.480 --> 35:59.640
I go back to Copilot wouldn't it be interesting if this was a problem Copilot was solving.

35:59.640 --> 36:03.240
But maybe there is some project governance here.

36:03.240 --> 36:07.160
It's so tricky when you have a project like the scale of the Linux kernel.

36:07.160 --> 36:09.280
There's no model to follow there.

36:09.280 --> 36:13.400
They're inventing how you manage a project of that scale every day.

36:13.400 --> 36:16.520
So it's hard to criticize how they manage it.

36:16.520 --> 36:21.600
But this is the thing right unless you're going to go full TNO you're trusting lots

36:21.600 --> 36:24.800
of people whenever you're building modern software.

36:24.800 --> 36:30.000
Even if even if you were pure like Microsoft stack only well one there it's open source

36:30.000 --> 36:34.360
now so it's really in the same league and two even when it wasn't I would argue is less

36:34.360 --> 36:40.480
secure because if you're just getting some proprietary you know binary library or binary

36:40.480 --> 36:45.200
blob or whatever the hell you're doing you don't know right no one else no one outside

36:45.200 --> 36:50.080
of the organization who's probably NDA'd out the butt has looked at that code.

36:50.080 --> 36:54.480
And yes I agree when you go to get hub and you pull down somebody's jam or somebody's

36:54.480 --> 36:58.120
pip project you should assume that everybody's a Russian spy.

36:58.120 --> 36:59.120
Naturally.

36:59.120 --> 37:00.120
Naturally.

37:00.120 --> 37:01.960
I mean what do you what do you what's the alternative.

37:01.960 --> 37:04.000
Are we going to all write everything in assembler ourselves.

37:04.000 --> 37:07.280
You're going to write the entire stack every time.

37:07.280 --> 37:12.360
You know Chris for the next three years I'm just working on my own custom file system.

37:12.360 --> 37:13.920
I call it butter F.S.

37:13.920 --> 37:21.160
Oh you know but this problem is it is the conundrum that is coming across in every aspect

37:21.160 --> 37:23.080
of technology right now.

37:23.080 --> 37:29.280
So like self hosting do you self host everything do you use Google for some things do you use

37:29.280 --> 37:33.120
iCloud when you have an iPhone or do you run next cloud and do you run that entire stuff

37:33.120 --> 37:34.120
yourself.

37:34.120 --> 37:38.360
You don't use Google App Engine that's for sure.

37:38.360 --> 37:42.200
Well that's just it isn't it it's actually a series of balances and compromises and picking

37:42.200 --> 37:46.940
and choosing what you put all the work into what you essentially are you could almost

37:46.940 --> 37:52.260
consider contracting out in a way outsourcing.

37:52.260 --> 37:56.420
It's a big balance now and so it is it is in just about all elements now.

37:56.420 --> 38:01.000
It's kind of a wild thing we're really creating a pretty significant interweb of dependency.

38:01.000 --> 38:02.520
What could go wrong.

38:02.520 --> 38:06.320
Well also I would be a little more afraid of proprietary systems.

38:06.320 --> 38:14.120
In fact it is probably my one big thing against you know Mac and iOS is Apple is a company

38:14.120 --> 38:18.880
that has proven super willing to bow to the Chinese government for all kinds of crazy

38:18.880 --> 38:19.880
right.

38:19.880 --> 38:27.480
Like sure why not some backdoor to iMessage or into iCloud for iCloud right.

38:27.480 --> 38:32.120
At least with the Linux kernel you know there's some crazy dude from somewhere in Libsyn or

38:32.120 --> 38:35.880
I'll some European Munich or something who's like no freedom ha.

38:35.880 --> 38:39.320
Yeah there's going to be there's going to be somebody that's checking it just to cover

38:39.320 --> 38:40.800
their own ass too right.

38:40.800 --> 38:43.820
There's so many different motivations for using that technology that somebody's just

38:43.820 --> 38:48.120
paranoid and when they discover something they'll make a blog post and become famous.

38:48.120 --> 38:54.320
Right exactly like there I am confident that there is some freedom bearded wizard in Europe

38:54.320 --> 38:59.960
somewhere who doesn't give a crap what the US or Chinese governments have to say and

38:59.960 --> 39:02.280
is going to look at all these patches.

39:02.280 --> 39:07.720
Yeah there is that there is that element of at the end of the day there's no one particular

39:07.720 --> 39:12.720
corporate interest that's twisting it and and making it into something and that is in

39:12.720 --> 39:17.760
a way it's a different kind of security right it's a different kind of trust like you can

39:17.760 --> 39:24.120
you can have confidence in the security of Windows 11 or iOS like you can have some confidence

39:24.120 --> 39:29.640
there but you know in the back of your mind like those kind of corporate vulnerabilities

39:29.640 --> 39:34.920
even if the code is pristine those kind of corporate vulnerabilities exist and it's just

39:34.920 --> 39:39.640
the nature of being in business at that size that's just the reality.

39:39.640 --> 39:43.680
It's just how it is and that's a different kind of trust where open source you can trust

39:43.680 --> 39:47.760
that that thing doesn't exist maybe there's flaws maybe somebody is submitting hypocrite

39:47.760 --> 39:51.400
commits but you can trust that it doesn't have those corporate flaws.

39:51.400 --> 39:55.840
Right and also like let's just take the crazier case which you I think you'll remember for

39:55.840 --> 39:59.320
sure because we covered it but a couple years ago there was a story where Facebook and Google

39:59.320 --> 40:04.160
and a bunch of the big tech companies here had to admit that they kind of got hammered

40:04.160 --> 40:09.640
they had a bunch of like Chinese spies working there yep yeah they're targets they're targets

40:09.640 --> 40:14.680
and so but in the open source world let's just say like you know Chris is a Chinese

40:14.680 --> 40:21.160
spy you can sound for that and he's like trying to infiltrate the podcasting world right he's

40:21.160 --> 40:26.880
gonna hack fireside or something well if it's open source somebody's gonna notice what the

40:26.880 --> 40:32.040
hell is this why is all the traffic going to like a Shenzhen that doesn't seem right

40:32.040 --> 40:36.280
proprietary you'd never know yeah right even Facebook didn't know that they had a handful

40:36.280 --> 40:41.440
of Chinese spooks there Google didn't know they had to get rid of them right the government

40:41.440 --> 40:46.800
had to help that Facebook thing are you aware that the first time you probably heard of

40:46.800 --> 40:50.860
the NSO group was actually a couple of years ago when a story came out that Facebook attempted

40:50.860 --> 40:55.360
to buy the Pegasus software so that way they could monitor iOS users outside of what the

40:55.360 --> 41:01.400
sandbox rules allow them to do I did not remember that but Pegasus yeah the very Pegasus software

41:01.400 --> 41:06.360
that is at the center of this whole NSO group controversy right now about hacking phones

41:06.360 --> 41:10.920
using zero-day exploits Facebook tried to get up to become a contractor and they turned

41:10.920 --> 41:17.400
them down they were turned down and this the reason we know this is it's an illegal deposition

41:17.400 --> 41:21.960
it's in court documents that it came out that's how we found out about this so it seems pretty

41:21.960 --> 41:28.660
legit and that's that's you cannot trust them you just cannot trust these companies that

41:28.660 --> 41:34.120
are living off of data they were willing to use spy malware to track users outside of

41:34.120 --> 41:41.960
what the iOS what iOS naturally allows for Wow I did not really I forgot about that that's

41:41.960 --> 41:48.280
whoo yeah that's really something and in the deposition to they're complaining you know

41:48.280 --> 41:51.720
the iPhone is just a lot harder to track the users and the Android phones are so we need

41:51.720 --> 41:57.080
to buy something for the iPhone so that way we can kind of get more data and Facebook

41:57.080 --> 42:02.560
is suing the NSO group I think it was some sort of anyways I'll put the link in the show

42:02.560 --> 42:06.320
notes I don't remember the details because like two years ago but never remember when

42:06.320 --> 42:11.160
police is just like sell software for money yeah those were the days oh here it is I just

42:11.160 --> 42:17.800
found the details so the spyware would have been inserted into the VPN software that Facebook

42:17.800 --> 42:24.800
bought a novel which was a VPN app that got pulled off of the App Store back in 2008 by

42:24.800 --> 42:31.460
Apple for violating data collection policies and in the NSO group the NSO group in their

42:31.460 --> 42:36.360
deposition in court said quote the Facebook representative stated that Facebook was concerned

42:36.360 --> 42:41.640
that its method for gathering user data through a novel project was less effective on Apple

42:41.640 --> 42:47.280
devices than on Android devices and they continued to say quote the Facebook representatives

42:47.280 --> 42:52.600
also stated that Facebook wanted to use purported capabilities of Pegasus to monitor users on

42:52.600 --> 42:59.160
Apple devices and were willing to pay for the ability to monitor a novo protect users

42:59.160 --> 43:04.800
a nova protect used to spy on you I love that Arwellian twisting too that's so great Facebook's

43:04.800 --> 43:14.040
just great so yeah yeah there is something to open source beyond just the kind of more

43:14.040 --> 43:18.120
flashier things that people talk about is that there's just at least nobody that's trying

43:18.120 --> 43:24.720
to hack your VPN to spy on you and if they if they are they get caught right there's

43:24.720 --> 43:29.220
another sinister side of the ANOVA story where Facebook ended up having to admit to they

43:29.220 --> 43:33.680
use the VPN traffic on people's phones to see what the new and up-and-coming apps were

43:33.680 --> 43:37.960
to either buy them or kill them right that's how they bought whatsapp yeah they just well

43:37.960 --> 43:43.200
there's a lot of traffic going on this thing let's get rid of it yeah hmm yep yep yep

43:43.200 --> 43:47.720
so they're creepy it's all really super creepy and so no I say it's not the end of open source

43:47.720 --> 43:52.120
I agree with you in fact it's probably just going to transition into a new phase because

43:52.120 --> 43:58.640
this kind of what do you call it lack of trust trust debt whatever we might have in large

43:58.640 --> 44:03.240
companies and institutions is going to drive market for the adoption of open source and

44:03.240 --> 44:07.940
companies are going to continue to be able to say you know this is our service XYZ brand

44:07.940 --> 44:13.320
new service super scalable service is backed by open source but I want to just throw a

44:13.320 --> 44:17.000
little monkey wrench in all that that's nice independent thinking did you see the story

44:17.000 --> 44:23.620
about the super militaristic raid on the Bitcoin boys up and I think it was a New Hampshire

44:23.620 --> 44:30.400
oh no really why why were they using too much power they refused to get a license to transmit

44:30.400 --> 44:35.580
money and the federal government's response to that was tactical assaults on their home

44:35.580 --> 44:38.680
the one lady they picked up was just like sleeping in her underwear and t-shirt they

44:38.680 --> 44:43.840
like told her if she moved they'd shoot her wow so you're saying I should probably store

44:43.840 --> 44:47.760
my crypto somewhere outside the studio I would definitely have a VPN that's for sure yeah

44:47.760 --> 44:56.320
oh boy hey coder qa members out there coder qa.co if you want to become a member and support

44:56.320 --> 45:00.480
the show you get a limited ad feed and you get the coder Lee report and we repost it

45:00.480 --> 45:04.080
over the weekend because only about half the members like got the auto-generated RSS feed

45:04.080 --> 45:10.900
so if you missed it check your feed again the coders the quotas no the quarters quota

45:10.900 --> 45:14.440
you understand what I'm saying there's a new coder QA out there for you members out there

45:14.440 --> 45:19.080
so go get it for the team I don't know the words are completely gone now it's like I

45:19.080 --> 45:23.360
haven't slept for two nights and I can't even get through yeah you think I'd never done

45:23.360 --> 45:28.120
it before well I do remember this to start wrapping us up I do know there's something

45:28.120 --> 45:32.320
else we should say like maybe you want to send anywhere anybody any place like a website

45:32.320 --> 45:36.640
or I don't know a damn Twitter page I don't know follow me at Dumanuco on Twitter you're

45:36.640 --> 45:40.800
giving away computers yeah I'm oh yes I forgot about that I always forget things yeah yeah

45:40.800 --> 45:43.920
we're giving away Thalios I have to write up the actual terms but it's another student

45:43.920 --> 45:48.680
contest I'll have it ready for next week that's nice yeah we know you're busy these days but

45:48.680 --> 45:52.360
that's pretty great if you're a student out there and you know what student couldn't use

45:52.360 --> 45:56.000
a Thalio keep an eye out for that I'm on the Twitter stu at Chris LES the network is at

45:56.000 --> 46:00.620
Jupiter signal and the whole show is at Coder radio show and that's like good for announcements

46:00.620 --> 46:05.960
news updates time changes at Coder radio show and the at Jupiter signal accounts good for

46:05.960 --> 46:12.080
that too we're live on Mondays now at 10 a.m. Pacific 1 p.m. Eastern over at JB live TV we'd

46:12.080 --> 46:16.000
love to have you hang out with us in the chat room we chat before and after the show follow

46:16.000 --> 46:19.940
the chat room during the show and we love getting your title suggestions too but of

46:19.940 --> 46:24.200
course we always appreciate you downloading subscribing and sharing the show with a friend

46:24.200 --> 46:27.800
thanks so much for tuning in this week's episode of the Coder radio program and we'll see you

46:27.800 --> 46:31.320
right back here next week

