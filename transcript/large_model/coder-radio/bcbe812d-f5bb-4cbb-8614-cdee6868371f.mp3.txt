This is Coder Radio, episode 400 for February 8th, 2021.
Hey there, welcome in to Coder Radio, Jupiter Broadcasting's weekly talk show,
taking a pragmatic look at the art and business of software development and the world of technology.
This episode is brought to you by a cloud guru.
A cloud guru now includes Cloud Playground, Azure, AWS, and Google Cloud Sandboxes.
On ACG's credit card, not yours. Get certified, get hired, get learning at cloudguru.com.
My name is Chris, and sitting there like the podcasting soldier that he is at his post, it's our host, Mr. Dominic.
Hello, Mike.
Hello, Chris. Episode 400 was inevitable, unavoidable.
Happy 400. Actually, was it inevitable? Was it? 400 episodes, man.
That's a lot of PHP hate.
Yeah, it's like eight years of PHP hate is what that is.
It is double the age of my child of PHP hate.
Yeah, that's weird. I hadn't thought about putting this in the age of my kids, but yeah.
Wait a minute. I got married. Wait, you got divorced and remarried and I got married and divorced and had a kid during the run of the show.
Yeah, that's pretty remarkable. First episode, June 11th, 2012. Do you want to be nostalgic for a moment?
Oh, God.
Here's the thing. I was looking around at the old episodes. Our websites, it's getting old, especially the ones from 2012.
There's like an old WordPress plug-in that's injecting download tracking code that shouldn't be there, like a pod track thing, not like a scary tracking thing.
And so if you had to clean all that out, I'll put a direct a direct download episode one, the MP4, which is pretty easy to get thanks to scale engine, if you're curious.
But OK, here we go. Check out this. This is some retro clips.
You know, I thought maybe what we do is just have a little bit of a reflective moment. We don't normally do this thing, but we'll go back in time.
Here is episode one's intro.
You're listening to Coder Radio, Jupiter Broadcasting's weekly talk show, taking a pragmatic look at the art and business of software development and related technologies.
My name is Chris and joining us every week is our host, Michael Dominic. Hey, Michael. Hey, how you doing, Chris? Hey, man. Welcome to the first episode. Thank you.
I think I was breathing in helium during the show and you were in a bathroom for that episode.
I mean, did I even like get confirmed or anything yet? What was I, 12?
Oh, we both we both sound like children. Yes. Who are those kids?
Actually, a couple of fun ones. We even had a song of the week in that episode. You and I kind of go through how we first started talking when I was looking to make native apps for both iOS and Android at the same time.
And we went from building an app conversation to building a podcast conversation.
So we recap that in episode one. But there's there's a moment in the show where you're kind of bullish on the Windows eight Metro store.
I got to I got to play that for you. One last thing at this point.
Yeah, I see a lot of a metro hating in the IRC chat. Yeah, I noticed that.
I just wanted to mention the Windows eight app store. So they're taking a different approach.
Yeah, they're not saying all programs must go through us. They're saying all essentially tablet programs must go through.
Right. Right. Or any desk like to have a desktop Twitter app. You know, you could, you know, you can but you don't have to. Right. Right. Right.
And that is probably the one market where this won't happen. Just because of the so much legacy, I'm going to be watching that Metro app store with a little with a little interest, but honestly, with more skeptical glasses down than I should.
I'm going to be Mr. Skeptical pants with it, I think you're going to be feeling the hate, huh? Yeah. Well, you get a you get a lot right in the show.
You know, your batting rate is pretty good. You're hitting it. Whatever it is, you're hitting average is pretty good.
That was not my finest hour. No. However, in that very episode, you were kind of bullish on cloud apps.
You kind of get and you really kind of were way ahead of me on that one. I'll play that for you. So you are actually considering coding in the cloud to the cloud, baby, to the cloud.
Well, I think there's some old school people that would think that's just absolutely crazy, don't you think? Well, OK, why is it crazy?
You're willing to have a Google Hangout, a phone call in the cloud. Why not have an IDE in the cloud? I mean, I will give myself one thing on that one.
Is it that with VS code effectively is? Yep. One hundred percent. That's exactly what I was going to say. In fact, you could run it on a node server.
And since you made that observation, that was that was code with a K back in the day. Oh, crap. Yeah.
There's been a few iterations of that idea since then. I forgot about those poor bastards.
Yeah. Yeah. You were kind of you were kind of salty in the episode because you want them to hook you up with like a better beta account or something like that.
So you could test it more. Yeah. I was I was pissed off. I'm like, you guys have no customers.
Come on. Yeah. Yeah. Yeah. So, I mean, but you were right. Like, I was like, what are you nutty?
And now here we have VS code, which is essentially an electron application using Web technologies. Pretty remarkable. So you were right on that one.
You were right on that one. I noticed that our website Coder dot show only goes back to episode fifty five due to an RSS feed size limit when we imported.
Really? Yeah. Maybe for the better. I mean, those old episodes are a bit rough. Oh, I'm super OK with that, actually.
Yeah. There is a method if you wanted to get them, but you'd have to be kind of crazy. I don't recommend them.
And, you know, we were learning what we were doing back then. Amazingly, to me, at that point, Jupiter broadcasting had already been going for a while.
Yes. Brian and I were still doing Linux action show. He had just released or had recently released his illumination software creator.
Oh, I forgot about that thing. Yeah. The real basic idea. Yep. And yeah, that's just and it's so funny to think, oh, we've been doing shows.
I make some comment in there about how we've needed a show for years. Wild, man.
A lifetime ago. But to celebrate it, we are going to link in the show notes a special Coder Radio episode four hundred poster.
It's all four hundred titles in the numbers. Four hundred. It's it's the same kind of style we did for episode three hundred.
But this time upgraded with the new Coder graphics, the MP3 album background and all of our titles over all four hundred episodes into a word cloud that says four hundred.
And we will have a link to that in the show notes at Coder dot show slash four hundred.
It's like 20 bucks for a nice, decent sized size of a poster. Mike and I both have ours from three hundred and we both framed them. Love it. Yes.
So we'll have another one to put right next to it. Now we have to do this like every hundred episodes is now it's like a thing.
Yeah. When our kids graduate college, we'll be at like imagine with the one thousand.
You know, technically you could make a two hundred and a one hundred poster, too, right?
Because we know what all the titles are. I never thought of that. Yeah.
The word cloud just gets denser in some senses. But this one has the new logo on it since we refreshed it and all of that new to us still.
So that is in the show notes. But I really want to take a moment here and mark this occasion.
This is a huge deal for us. And I want to take just a few moments and tell you about something pretty special.
It's time for all of us to be productive and to be comfortable.
It took combining multiple platforms and online shops, making tons of phone calls, multiple team members researching.
Oh, sweet Jesus. No, it's a product that is born in 2020 and early 2021.
Mike, it's a product built for the new normal and we're calling it the coder.
That's right. The coder is a 100 percent cotton, terry velour, soft, cozy wear, feels great on the skin right out of the shower and works well all day long.
Oh, for the love of God. It's embroidered right here in the US of A.
And for a limited time run, you can get a clean all black design that features a classy all white coder radio logo on the left chest.
Look and feel comfortable while kicking ass. Life is better in a robe. It's not a house coat.
It's a house coder and you can get it your very own for a limited time at the coder dot shop.
That's right. The coder dot shop. So he did not tell me this was the coder dot shop.
That's right. You can hear those cherry blues for this one. Yeah. Check out the coder dot shop.
Now it has temporary product imagery as we record now because they won't actually give me the high resolution graphics yet, but we're going to have something in there.
So it's a placeholder graphic, but it's that style of robe. You are a sick, sick man.
I just want to. Yeah, it's pretty great. So it's and you know, we worked hard to get this right.
So pre-orders are starting today and they will run through February 28th at midnight.
It's sixty five dollars plus five dollars shipping domestic or fifteen dollars international.
We're still working that out. It is possible we will not be able to ship to all international destinations.
So some countries may not be doable if that ends up happening.
We will communicate that with you and we will, of course, issue you a refund.
But our plan is to start production in the first week of March, maybe about seven business days.
Second week of March, we'll start shipping. So it's a pretty limited offer and it's happening.
I just bought the first one because I'm a sick bastard.
Of course, I was going to get you one, but that's amazing. I'll take two because I spill things all the time.
Fair enough. It took getting rejected by so many fulfillment places that are like a robe.
Are you serious? No, my vendors said, no, we're not doing that.
Yeah. Yeah. I talked to places that are like known for custom stuff and they're like, no, we're not we're not doing a robe.
And it really it took it took the research of Jackie to find this outlet where we could possibly put up a get like an account with them and put in an order.
But we have to put them all in at once. You know, it's all these complicated things to ship a product like this and to get the actual logo embroidered.
But I went with a nice, clean black design and that terry velour softness that doesn't like get all weird if you do have it wet, but doesn't feel strange to wear all day.
I mean, I'm going for an all day wear with this thing. It's the new house coat. It's the coater.
Yeah, pretty proud. Pretty proud. Took way more effort.
I definitely during this process cursed my own name a dozen times thinking you stupid arrogant ass.
Why did you say you could make a robe a little behind the scenes as insane as I think this is?
I'm so happy he finally got this done because I'm tired of hearing about it.
I know. And it's a huge it's a huge load off of my shoulders.
Let me tell you, I was working so hard to get this going. It's in the future, Chris, coffee cups.
Right. That's all they get. Right. Maybe T-shirts.
This is this in the poster is the first swag item Jupiter Broadcasting has done in over two years.
We haven't done swag in a really long time. And I wanted to bring it back in kind of a big way.
And yeah, that's where we that's where the coater came from.
You know, Robe Bros Unite. Go get your orders in.
We'll be batching them up and placing them in. Say Robe Bros Unite.
Yep. Includes ladies too. Very excited about this.
So, yeah, it's a limit. I don't know if I'm ever going to do this one again.
Although now that you have a robe fender, actually. True.
It may be possible to do it again if it goes well.
What I still don't know is it's possible that the international shipping doesn't work out or something gets weird.
Like in the cost to order ratio or we don't get enough orders, you know, that could be a problem.
So there is a couple of scenarios where we just kind of have to say, well, we tried and it didn't work.
But I'm hopeful. I'm hopeful that the Robe Bros come through, maybe even get a couple, you know, and we make this thing happen.
And sixty five dollars is a great deal. That's just slightly above, you know, what we're paying for this thing.
But I looked at some that were like this nice. There were two hundred dollars depending on the vendor.
So this is this is a great robe for what some guys were charging two hundred dollars for Robe charlatans.
And so check it out. The Coder dot shop. And that's exciting.
That is exciting. We have some feedback to get into just because we're having fun on this episode, though, before we get into the feedback.
Did you hear about this guy who compromised a Florida City water supply and started turning up like the lime or the Lyle, whatever it is,
the stuff that they use for cleaning, they turn it up to like a massive quantity. Did you hear about this guy?
No, I did not. What the hell? Well, see, this is why I got to follow the news in your neck of the woods to keep you safe.
Here's a little bit of brief from the local sheriff on Friday morning at about eight o'clock.
A plant operator at the Oldsmart Water Treatment Facility noticed that someone remotely access the computer system that he was monitoring.
This computer system controls the chemicals and other operations of the water treatment plant.
Yeah. So it's Lyle and our lie. Thank you, Wes. And sodium hydroxide.
The only reason they even noticed this happened is because they were using like go to my PC remote control style where you can see the cursor moving around on the screen.
And the technician was standing in front of the monitor and saw the mouse moving around and went, huh, that doesn't seem right.
When someone again remotely access the computer system and it showed up on the operator screen with a mouse being moved about to various to open various software functions that control the water being treated in the system.
The person remotely access the system for about three to five minutes, opening various functions on the screen.
One of the functions opened by the person hacking into the system was one that controls the amount of sodium hydroxide in the water.
The hacker changed the sodium hydroxide from about one hundred parts per million to eleven thousand one hundred parts per million.
Now, because the technician was standing there, he just changed it back.
But legitimately, if dude hadn't been standing there staring at his screen, this thing would have been set up to eleven thousand parts per million had been dumping this stuff in the water.
And I guess I just feel like we are at a point now where we have these massive security insufficiencies, like what happened with if you look at the solar wind compromise, it comes down to some incompetency.
It appears, in my opinion, that just some basics weren't taken care of.
And when you look at, say, the DNC leaks, John Podesta was phished with a link in his email.
And when you look at things like a quote unquote hacker who PC Anywhere is into an old Windows environment and can change some numbers.
What is taken away from this is, oh, it's it's it's a hacker. It's somebody dangerous.
Not we didn't build the system right. We didn't secure the system right. We didn't build for the future.
That should be the conversation. But instead, it's always like, oh, hackers are so elite. They're so sophisticated.
Not really. Somebody knew about the PC Anywhere running on that thing and figured out how to connect to it.
I do wonder what the, I guess, perpetrator thought he was going to gain here.
I know, right? What's the point? You know, they're going to like slap him with some Patriot Act fun for messing with the water supply.
If they can find him, I suppose. There's no it doesn't sound like necessarily they know who did it.
It is Florida. Yeah, I know. That's what I thought. That's when I saw this. Oh, this is a nuke.
Now they have Florida man, the hacker. Florida man with a Guy Fawkes mask.
Right. What got my attention was Florida man hacks into water plan. I was like, wow, now Florida man has gotten really sophisticated.
I don't think we need to keep impressing the rest of the country, Florida. Let's just let's not do this anymore.
Linode.com slash coder. Go there to receive one hundred dollars in credit towards a new account.
That's a lot to try out Linode because their prices are generally 30 to 50 percent less than major cloud providers.
There are cloud provider of choice. We're running multiple servers up there recently.
And to you dads and moms out there, if you're looking to create a safe environment for your kids to play online, this is how one of the ways I'm personally using Linode.
I mean, I talk all the time about how I use it for my business. It's obvious.
Eleven data centers around the world means I can deploy stuff that's close to the audience.
I can deploy stuff that's close to the team. SSDs mean every machine has super fast IO, modern processors, 40 gigabit connections.
I mean, obvious reasons why I would use it for my business. Right. But personally, I've spun up a Minecraft server, a Rust server, and I'm kind of debating also doing an Arc server.
They just make it so easy with these one click deployments.
And something else I'm going to encourage you to check out is I'll have and I'll have a link in the show notes.
This is something you may you may be trying to solve, and that's messaging and delivering messages between applications without putting huge loads on the server, especially for really busy systems.
So you may be looking at something like MQ. Well, Linode has a one click deployment of Rabbit MQ, which is the most popular open source message broker out there.
You can just deploy it in one click on the note and they have a lot of applications like that.
It's not just the games or WordPress installations, but it can be back end tools that make your business more efficient or help you automate or help you deliver a product.
That's how we use it right here. It's part of the sauce that makes it possible for us to make podcasts super easy to get in that process all transparently.
And Linode has all kinds of these kinds of applications you can deploy with one click.
And I've talked about some games and and Rabbit MQ, but there's there's a whole category of them.
And what I love about it is there's there's just usually one or two options you have to answer and you're good to go.
And I like that because it saves a ton of time. It also makes it approachable. You don't have to be an expert.
And then the other thing that they do and they do this really well is they make it super straightforward to turn on backups to make sure you've got data.
And they tell you really clearly in plain language when it's going to be backing up, make it really simple to add your SSH key and get you up and going.
And if you ever get stuck, they've got support like nobody else. Nobody else does support like Linode.
And remember, if you go to Linode.com slash coder, you get that one hundred dollar credit. Play around with object storage, build a dedicated GPU system, try out a game server.
See what I've been talking about and support the show. Linode.com slash coder.
All right, we've got a few feedback items for for Hyundai to get into.
And this first one, I feel like only you can help a guy named Ryan.
He says, Hey, Mike, he's not even talking to me. I've been a Rubyist for well over a decade after Rails introduced me to Ruby.
In my experience, Rails and Ruby SQL and a handful of other Ruby based tools are unparalleled in any other language.
And at this point, I've just built up a tremendous set of skills in this ecosystem.
I'm not trying to brag. It's just what happens when you spend a long time with any given set of language and tooling.
But over time, my projects have become increasingly data centric.
Sometimes I'm cleaning terabytes of data in the past couple of years.
I've been feeling just a little green with envy when I look at some of the libraries available in Python.
Noonby and Pandas seem incredibly powerful, and I can't find comparable libraries in Ruby.
But I can't abide Python. It feels like Ruby's defective cousin.
Excessive selves, parentheses and nono functions make my skin crawl.
I'm a warm, Ruby red blooded pumping man. It runs through my veins.
Any tips you could give me on how you became so cold blooded?
Every time I try, I flounder. How did you put down your shiny gems and pickaxe and slither into the world of Python?
Thanks for the show. A guy named Ryan.
So the thing is, general purpose programming language can be used everywhere.
So please don't write into the show people who are going to say that.
Python just has succeeded in being more commonly used in more domains.
I agree with you that I think the Ruby syntax and kind of the way Ruby wants you to do things is a little more elegant.
Ducks for cover as snakes jump out of trees.
But there's just like, you know what, if you're going to do like some machine learning stuff, you're just not doing it in Ruby.
Right. Even a lot of the embedded stuff I've been working on.
Like, honestly, the next best choice for me at least would have been probably like dot net or some, you know, weird or I guess C++.
Ruby is just not really part of the mix there.
Ruby is not even like on the list is my right.
Yeah. Yep.
So one, no one saying you have to do Python is my understanding.
But if you want to branch out into some of these areas, particularly areas that I've been getting into, there are many choices, but Ruby is not really one of them.
You know, I mean, a guy named Ryan wasn't asking me, but he specifically didn't ask you.
No, no, I understand. But I feel like this is a symptom we see a lot.
Working with thing for a long time, worried I'm getting stale with thing, eyeing other newer thing or maybe not newer in this case, eyeing other thing that looks like grass is greener over on that side.
This feels like a classic situations that developers write in all the time about.
And it's the languages like the characters and the objects change. But the core story, the core plot points are the same here.
I mean, since we're doing classic coder, right, just pick the right tool for the right job that you enjoy using.
But there is a particular problem with what's happened with Ruby in that.
I mean, we've talked, we've had a whole episode on this, that the Rails community basically became the Ruby community in so many ways.
Yeah, and I think Rails is great. I you're not going to hear me bashing rails.
It's more if you want to move into other areas, Ruby is going to be a a limiting choice.
It's not impossible, right? I mean, hell, you could write everything yourself and like build up your own Ruby, you know, embedded framework.
Madman. People have tried to do this. I guess I don't understand why anybody would put themselves through the hassle just to use a language they like, unless that language was Objective C.
Oh, my God. And you think I'm bad with the robe.
That's OK. I just cancelled the Dell XPS 13 order because they told me now it won't come until April.
Whoa. Yeah. eBay, maybe. Maybe you find something.
I mean, I just went on and got a Lenovo ThinkBook on Amazon for literally four hundred dollars left.
So I'll try the Lenovo train. Yeah. I mean, it's funny. Sometimes Amazon is the quickest way to get gear.
It's all the manufacturers seem to have really long delays right now. And I need a touch screen for this job because I just sold all my excess machines.
I'm rapidly buying them back. I'm not doing that again.
Mark writes in. He says, hey, guys, I've listened to interest with all the talk about work from home gear, everything from computers to chairs.
One thing I haven't heard, a discussion on Internet connections.
He wants something bulletproof. He's done IT for 15 years and he quickly learned that one connection will eventually go out.
The easiest way to hook all this up to multiple connections is maybe some sort of load balance or a failover between multiple WANs.
He used to do this with PF sense, but then he bought Ubiquiti Edge Router X for about fifty five bucks.
And now he's using that. He says there will be outages from time to time that will go out or in.
So what he's done is he set up a VPN across both these connections. And that's an interesting idea.
So Mark from Connecticut is asking the audience and I want to pass it along to you. What are you doing at home for bulletproof Internet?
I've had quite the journey in the last six months for the RV. I wanted to get as industrial grade Internet as possible.
I mentioned it once on the show before and now I've done it.
I got that router that was built for public transit buses that's designed to install on a bus because that's essentially what I'm doing.
And I got two LTE connections that are unlimited through various methods.
And then I bond a VPN using a Linode, two Linodes actually, and I can do up to three, but I'm only doing two right now at the other end.
And then it essentially creates with their proprietary VPN technology.
This is a peplink product. It essentially creates a bond connection that can withstand either AT&T or Verizon.
Those are the two LTE networks that I'm using.
It can withstand an outage on either one of them and I don't drop like a stream back to the studio or something like that.
The other nice thing about it is with most of my data encapsulated inside a VPN, the cell phone providers have no idea what I'm doing.
And they can't do things like force downgrade my video to 480p quality.
So it has some nice perks like that, although sometimes there's downsides. Places will reject you if you're connecting from a VPN.
So I worked on that for the mobile connection, and I've talked more about that in the self-hosted podcast if you are interested.
And I go into quite a bit of detail into all the specifics.
And then here in the studio, we just have a Comcast business connection.
And, you know, I know it's popular to hate on Comcast, but I'd say it goes out once every three years for like 25 minutes.
And that's been the worst of it. And we actually host quite a bit of stuff here in the studio.
I'm often streaming and transferring large amounts of data down and up.
I mean, easily, easily four terabytes a month of data comes in and out of the studio, and they've never given me any problems.
It's a business Comcast, so I pay out the wazoo for it.
Yeah, I just at home, I just use commercial, I'm sorry, not commercial, residential files.
And the server facility is its own crazy thing, but it's not. I don't think it's relevant to what you're talking about.
So how reliable is that that set up you have mobile set up?
Yeah, well, it's kind of like fat cats is in our live chat room.
It's like bulletproof Internet might be a full unicorn because it's great as long as I have signal.
And I put an antenna array on the outside of the RV, which does a lot to pick up additional signal.
Gives me like a seven dB boost, which LTE signal is logarithmic.
And so if I can remember, I'm doubting myself as I say this now because I actually don't know if that's true.
But I believe it's logarithmic, easy for me to say.
And so like a six or seven dB improvement in signal is significantly better signal.
I can't believe I didn't mention this. So in very practical terms, I was getting 100 megabits in the woods.
I spent the last three days off grid in the woods in the RV.
And where we park in the woods has a pretty clear line of sight to an LTE tower up on a higher hill.
And so I get rocking, rocking speed on it. And it's pretty great.
And it's really, really solid until one of those providers dies, which happened.
AT&T disabled my SIM card. So now so I was down to one connection.
The system handled it just fine. But it really does stink.
All right. Well, thank you, Mark, from Connecticut.
So Mark reaches out and says, tell me what you're doing at home for bulletproof Internet.
If you've or if you've maybe recently changed up how you're doing Internet, let us know.
Go to coder dot show slash contact and drop in how you're doing bulletproof Internet or whatnot.
A cloud guru has a new course to help you ace bash scripting.
If this is something you haven't mastered yet, you can develop all the skills you need to write effective and complex shell scripts
that can automate mundane tasks and complex implementations as well.
Get a walk through all of the major components and keywords in shell scripting.
There's a lot of them. It's a good way to learn them.
We'll have a link to that course in our show notes at coder dot show slash 400 or go to a cloud guru dot com.
So Rust finally has a foundation, the Rust Foundation is here and Mozilla, AWS and a bunch of other companies are joining right away.
But the Rust Foundation writes today on behalf of the core Rust team, we are excited to announce that the Rust Foundation is here,
a new independent nonprofit organization to steward the Rust programming language and ecosystem.
This marks a huge step forward in the growth of Rust on several axes, which are kind of boring, really, to tell you the truth.
But they say Rust is much more than a programming language in a community.
It also represents a new radical way to collaborate on open source projects.
The decision making power within the Rust project is uniquely delegated and distributed,
with the core team holding little more privilege than other more specialized teams.
Rust counts more than 100 members as leaders in the design and maintenance of the project and nearly 6000 contributors to the Rust language repo alone.
Why do I have a bad feeling about this? This seems like this should be good news.
And this is like an important milestone for every major open source infrastructure type project.
Yeah, why would you have a bad feeling? I don't know.
I mean, I guess it's like the fun's over and now it's serious. Maybe, maybe that's what it is.
Oh, mom and dad came home and now we had to form a foundation.
Actually, if I'm telling you the truth, you know what I think about it. You know what I think it is.
I think it's this new radical way to run the project where the decision making power is within the Rust project.
They say it's uniquely delegated and distributed, with the core team holding little more privilege than the other more specialized teams.
I mean, that seems like that could be bad.
I mean, it seems like it could be great, right? Could be great.
It also could just lead to like Debian style, like Debian style, but worse kinds of disagreements and multiple.
It just really sounds like there's 6000 chefs in the kitchen.
I guess. I mean, what would the alternative be?
Well, you know what I like about the way the Linux kernel is run is that there's sort of this tiered system of decision making.
And you could argue that it's it's gatekeeping, but I'd argue it's as you become competent and prove yourself worthwhile.
And as a solid contributor, you work your way up the system and then you get to the top where like Linus and Greg KH and others are.
And I know that there is solid decision making.
And it is a kernel that has so much code inbound constantly.
It's it's a project that just is is really it's it's at a scale that is hard for a lot of us to even fathom the amount of contributors and code that is inbound to that project.
And I would imagine that if they had 6000 decision makers, it would go nowhere.
The project would be stagnant. It would just be choked up with with decision paralysis.
I could be wrong, but I like the idea that there's kind of a tiered structure of decision making.
Maybe for something like Russ, this style is better. I mean, I could see that argument.
I could see it both ways. Like if I wanted to run an open source project, you bet their ass there would be a tiered decision making structure.
Right. Yeah. I probably go the dictator for life thing.
But it's. I guess I guess you're right, because, you know what, the Linux kernel is one of the most successful projects.
And the truth is, they probably would have struggled more had they not had that tiered.
You know, at some point, somebody has to say what's right and what's wrong. Otherwise, it's always hot dogs and beans.
Yeah. God, I'd love to be playing this in eight years and be one hundred percent wrong.
I want to make that clear. Right. One hundred percent would love for that to be the case.
So we will see. I don't think you're wrong. I don't think you're wrong.
I kind of feel like I'm the guy crapping in the punch bowl now. We're all at the congratulations milestone party and I'm like the guy that's like, this is all going to end badly.
That's that's me now. You're like, we're all going to burn and none of you are sorry and you should really be sorry.
So let's talk about something good. Good news for you at least.
It seems that Homebrew finally has native Apple Silicon and more importantly, M1 support.
Now, that doesn't mean there's bottles for every package that are M1 compatible yet, but it means Homebrew itself is M1 ready.
And that feels like a milestone on the M1 platform for developers. Do you agree?
It does. Right. It's going to probably be a year or two before the packages actually get where they need to be.
This is a necessary step to make the M1 ecosystem work.
OK, now here's my crazy wild idea. I'm not the one that thought of it. It was Microsoft first.
What about continuing that program that Apple was doing right after the M1 was announced, where they either contributed code directly or they paid developers to port a couple of core utilities that ship with Mac OS?
Apple is psychologically incapable of paying developers.
But they did it for the base utilities in Mac OS.
They did. They did.
So what if they just kind of surveyed what developers use, even if they just looked internally at who's using brew?
Just like actively spied on you. Yes.
No, no. Just look at their own staff, their own staff using brew and see because that's probably a decent data point.
See what they're using and then either contribute code, pay the pay your people to contribute code or pay those developers directly to make M1 ports.
Microsoft did it. I don't think that's bad. Why would anybody think that's bad?
It just feels like if you wanted to make this a great developer platform, you'd grease the wheels a little bit.
And greasing the wheels in this example is getting these tools you need to do your job ported over.
I just I worry I had a I saw the announcement that an application that a lot of podcasters use to record their calls for these, you know, these style shows is just thrown in the towel and say they're not porting it to M1.
That's too much work. We're not going to M1.
Oh, man, you just hate to see it.
So if I were if I were Tim Cook and I were cutting some checks for how we're going to, you know, booster the ecosystem, as it were, throwing some money towards some of these projects, these top projects people install via brew wouldn't be such a bad way to do it.
I mean, we don't know that they're not right. We're just like talking out of our butts here.
They they well could be. Yeah, they could be. There hasn't been there hasn't been any reporting like there was some contributions that were made like this was sponsored by Apple or something like that during the big Sur beta.
True. We haven't really seen anything like that yet.
But maybe if anybody's out, if anybody has seen it, let us know.
I think it just be a solid way because otherwise you're right.
It's going to be two years and it won't even be 100 percent of everything.
Well, it's going to be you're going to occasionally hit like roadblocks where it's like, oh, this is so annoying.
Yeah. Yeah. And then you're going to podcast about it and people are like, but you got me to buy a MacBook Air.
I got a little bit of hands on time with Angela's M1.
Oh, and when is the Apple Silicon Action Show starting?
I need to go back and spend a little more time because we spend some of that like troubleshooting monitor issues, the monitor situation.
So bad, so bad.
It's not good. And and she hooked up a just a nice like, you know, like not like a fancy like ASUS style monitor, but, you know, one that was a couple hundred bucks back in the day.
She hooked that up over HDMI and DisplayPort and just had all kinds of problems, graphic artifacts, lines across the screen, depending on what type of connection she was using.
So she ended up getting a 1440p kind of more like a higher end monitor.
And that seems to be working just fine.
But it's one of those things where you get the new machine and you get everything ported over and she's not talking about how fast it is or how easy the process was to migrate over.
What she's getting hit with is the fact that her screen doesn't look right back.
Blaze won't back up properly.
This application has to be told manually to run under Rosetta.
That was her first experiences with it.
And it was interesting for me because I was like, I don't know.
I don't have the answers to a lot of this stuff. I've never used one of these before.
There was more of that than I expected.
That's my first experiences so far is that there was more of those things like printer drivers. If you if you migrate an Intel machine over, you like printer drivers have to be redone because that Intel stuff isn't going to work.
And all that has, you know, she's sitting there kind of figuring it all out on her own.
It's not really much I can do for it because I'm not there and I don't really have an experience with it.
But I was kind of taking notes of her process.
And now it's all said and done.
I think her her big takeaway and I know she's coming from an old like 2012 MacBook or something.
Her big takeaway is she can use her computer and watch videos and browse the web without her fans going all the time.
She doesn't have to hear the computer anymore.
And for her, that actually is a nice quality of life difference because there was times where she couldn't hear the kids talking to her over her computer.
And so now she could she can hear the kids for better or for worse.
So I think it's an upgrade. But I just thought that's a funny like real user observation is that that's how the fan noise makes a difference to a real user is their kids that are talking to them from, you know, the other end of the house can be heard now versus not.
And we talk about in terms of recording or, you know, if it's if it's annoying or not.
But that's a real world reason why people like quieter machines right there.
I'm going to have a tough time going back to fans. So are you tempted at all yourself?
So far, no, because I really have I really have a pretty great Linux setup with plasma, really liking that with my multiple monitor setup and having window rules.
And I know exactly where everything's going to open on each desktop.
Although the other day I was experiencing some really strange graphical artifact issues.
And I also at the same time was having a hard time with an audio editor program.
And I was really just kind of thinking, oh, God, I just missed I'm dealing with things like the program doesn't work the way I want it to because it's maybe just doesn't have all the features I need.
And I'm having these weird graphical overlay glitches that make it hard for me to get my work done.
And that is just enough kind of friction where I can, you know, a little bit more.
I'm like, nope, I'm done. I'm out. And I don't really know why it's the system's been solid.
I'm not really sure why it just started happening. Could be some update or something.
But I'm not tempted yet if they came out with a machine that I could get like a 16 core machine with 24 to 32 gigs of RAM and four terabytes of storage or more.
And I didn't have to spend ten thousand dollars to do it.
That would be tempting because there is something to media production there.
But yeah, not quite. Not not yet. Not yet. Datadog.com slash Coder Radio.
Yeah, it's Datadog. Datadog is a tool for communication, really.
I mean, it's a full stack analytics suite, but it's really the mechanism that lets you communicate between teams and visualize what's going on with your entire infrastructure.
This episode right here of Coder Radio, episode 400 is sponsored by Datadog, the unified monitoring and analytics platform for comprehensive visibility into your entire stack in the cloud, on premises, both at the same time.
Datadog supports it all. You can quickly analyze the performance of your Linux servers in real time with customizable dashboards and troubleshoot issues with real visuals.
And it's such a beautiful layout to go to Datadog.com slash Coder Radio just to see how they visualize this stuff for you.
You don't even have to be a pro to understand these metrics, but you can really go deep.
And within seconds you can view traces, logs and key performance metrics all in one place.
They have beautiful, customizable dashboards and turnkey integrations for over 400 technologies.
You can even use Datadog to monitor those key aspects of a Linux server alongside things inside a container or virtual machine.
And of course, the rest of your stack all in one place.
Get a nice snapshot of the health, visibility and performance of your entire infrastructure.
See what it can do. Go create one dashboard by starting your trial at Datadog.com slash Coder Radio and you'll get a free T-shirt from Datadog.
That's right. Free swag just for checking out their pretty visuals. Isn't that great?
Datadog.com slash Coder Radio. Go there to support the show, set up a dashboard and you'll get a free T-shirt from Datadog.
Get insights into your entire stack and help communicate what you need and make decisions with your team at Datadog.com slash Coder Radio.
I have one last story I wanted to put in at least the notes for people to go read because it speaks to my heart and I'm curious to know what you think about RSS.
The author writes, I firmly believe the Internet and what it stood for peaked with RSS.
RSS or really simple syndication is a means of allowing basically anything online to be collated into a single feed.
You'd visit a website you loved, add their RSS feed to your preferred reader and from then on be instantly notified of any new content.
It was as simple as that. RSS primarily had a heyday during the Web 2.0 era, you know, 1999 to 2010,
when the freedom to do whatever you wanted with the information presented on the web was really the driving force between behind a lot of new features.
Then once social media took over the web, if there was something or someone you wanted to follow online, you just add them to your Twitter feed or subscribe to them on YouTube.
A fine idea until you decide you don't like the layout of the site in question or algorithms that decide that you don't need to see the work of those that you care about as often as you want.
It wasn't until I began working from home and everything in my life moved online that I really began to notice how beneficial RSS could be with relation to my digital well-being.
By selecting only the sites, blogs, creators, etc. that I had serious interest in, I could effectively remove the negative effects of social media and excessive online usage from my life.
You go to one spot, you get all the information the author points out also works great for like managing project feeds and whatnot.
There's a lot of ways you can bring some of that stuff into an RSS feed and so you don't have to get ever ringing notification bells and countless chats that steal your time all day long.
Instead, a lot of that stuff you could actually pipe into RSS and then have one spot you go to check on everything.
And not an insignificant number of sites still make a lot of their content available as RSS.
I use the crap out of it for all of our shows.
I have categories for all of our shows in there and then I've also trained the Feedly bot to have an idea of the topics that I most frequently choose for the show.
And I have feeds that the Feedly bot provides me that are like highlight feeds of like the thousand plus feeds that I have.
I mean, I really use it. I'm an RSS like guy.
Like me, I walk around with an RSS hat on.
But I'm curious if this is even on your radar or if it's even on the listeners radar.
I hadn't thought of it like that.
I actually would. I would consider doing that.
It's nice and Feedly is not bad.
There's other systems too.
In the show notes, I will link to, because why not, News Boat, which is a terminal based feed reader because yeah.
But I like it, man.
You know, I don't have to go look at their websites.
I don't have to go to a bunch of different places.
I even pull in YouTube channels into Feedly.
So I just have like the creators I follow on YouTube and the news networks that I follow just as feeds in there.
No, that actually does make a ton of sense to me.
I could see doing that.
It also is a nice way to pull in Reddit feeds without having to go to Reddit, which can be really nice.
But you have to pay for like their pro version for that.
I also resonate with this idea of cutting down on the number of fricking notifications and stuff.
It hasn't happened for a while, but every now and then I'll lose an off air day to just chat and email,
just catching up and communicating and coordinating over chat and email.
And I get done at the end of the day, my hands hurt and I'm like, what the hell did I do all day?
It hasn't happened for a bit, but it's like a black hole for an entire day.
And if there's a way to cut that down and, you know, you could combine services like Zapier or Hugin,
which is what we use, like H-U-G-G-I-N, I think it's called.
We just talked about it last week on the show to like bring some of these things into feeds,
even like Slack conversations and whatnot.
So I'm curious to know if the audience out there still uses RSS as well.
I feel like if I don't advocate it from time to time, it's going to go away.
I mean, my problem with all that stuff is I get so into automating it that that just ends up being another engineering project of its own.
It totally does. Yeah.
Feedly strikes that balance for me because it knows based on other Feedly users, like what's the most popular stuff
so it can aggregate that information for you.
And then it does have that Feedly bot called Leo that you can train over time.
And that has been an interesting way to surface information.
And of course, it can also follow certain hashtags on Twitter.
So for the self-hosted podcast, we have hashtag ask SSH.
Anytime somebody fires one of those off, it shows up in my Feedly.
I don't have to go looking for it on Twitter. I love it.
And of course, it's what powers podcasts.
You know, if you go to Coder dot show slash subscribe, you'll see right there.
We just have a straight up RSS feed you can put into anything.
But like when you put it on Spotify or you put it on Apple podcasts, you're giving them the RSS feed.
That's what's powering all of that in the back end.
So I don't think it's going to go away, but I think it's less prominent on Web.
I don't think RSS is ever going away.
I mean that but it's less prominent on the Web, don't you think?
Like it's not as easy to get just entire story feeds or whatever in RSS.
It's it is what it is, but we'll continue to use RSS because Facebook ruined the world.
You know, it is social media. It's that damn social media.
And them kids and the millennials, they need to not be on my lawn.
That's all I'm saying. Yeah, I know.
Thank you to our coders at Coder QA, Coder QA dot co.
It's our QA team. They help support the show.
They get the Coderly reports.
And of course, they get the limited ad feed as well.
And we appreciate their support at Coder QA dot co.
Thank you for being a member over there.
Thank you for being amazing.
Yeah. Mr. Dominic, is there anything you'd like to plug this week before we scoots?
Yes, you should all watch WandaVision.
I agree. That has been fun.
I'm now I'm like two out now. I'm two out.
No, I've seen the whole thing, dude. It's good. It's really good.
It's really it's that's a fun idea for a show.
These Marvel series, they might if this is how they're going to be, they might be pretty good.
You know what I'm saying?
They're going to be pretty good. And, you know, as you're lounging in your Coder robe.
That's right. The Coder dot shop, not Coder, the Coder because it's the robe.
It's the Coder, the Coder dot shop.
And of course, we also have a link to the special episode 400 poster in our show notes.
Everything's linked at Coder dot show slash 400.
You can find Mr. Dominic on Twitter.
He's at Dumanuku and his company is at the Mad Potter Inc.
I'm at Chris LAS and the whole podcast network for all the great shows is at Jupiter Signal.
And this year's show has one at Coder Radio Show.
That's a great way to get show news.
Links to what we talked about Coder dot show slash 400.
You'll find our contact form there as well as our RSS feed.
You can join Coder Radio Live and hang out in our chat room and enjoy the pre and post show.
We do it Monday at 5 p.m. Pacific, 8 p.m. Eastern over at jblive.tv.
And we call it the Coder Happy Hour.
Thank you so much and congratulations sir and thank you to Mike for 400 episodes.
Thank you everybody out there.
Thank you audience.
Thank all of you.
And we'll see you right back here next week.
