This is Kota Radio, episode 427 for August 16, 2021.
Hello friends and welcome in to Jupiter Broadcasting's weekly talk show, taking a pragmatic look
at the art and business of software development and the world of technology.
This episode is brought to you by Cloud Guru.
You know, Cloud Guru has them Cloud Playgrounds, Azure, AWS, and Google on their sandboxes
and credit card, not yours.
So go get certified, get hired, get learning at a cloudguru.com.
My name is Chris and joining us like the podcast champion that he is established in the hot
zone.
It's our host, Mr. Dominic.
Hello, Mike.
What's up, Mr. Fisher?
Let me tell you, it is crazy.
So I'm here right now at System 76 as we do the show in Denver.
We made it last night around midnight.
Nice, Mike.
It was the worst driving of my life.
It was a hurricane.
It was like I was driving the RV into a destruction chamber.
The I-76 sections of I-76 are so bad.
It's 75 miles per hour.
I had to drop it down to 35 miles per hour with my hazards on, crawling in the dark down
this highway for an hour as it destroyed my home.
It was brutal.
It was horrible driving.
In fact, I have had awful experiences coming into the Colorado Denver area every single
time.
And I think I will never, ever, ever do it again in my RV.
I'll fly in, but I will never drive in again.
It has been horrendous, the trip in here.
Now this trip will always be a really great trip except for the drive into Denver was
awful.
It was awful.
I didn't sleep.
Afterwards, I was so traumatized by how bad the drive was, I couldn't sleep.
But let me tell you, it's good to be here.
It's good to be here, to be at System 76 where we said hi to a couple of people and parked
right up against their entrance.
I'm going to just sneak right in and grab us a couple more launches.
No big deal.
It's going to be great.
How are you doing?
I am good.
Now, I didn't tell you this off the air because I kind of forgot.
So remember how I had my son's school schedule?
What I did not pay attention to was Monday, they get out an hour early.
Oh my gosh.
So I'm going to apologize in advance if anybody hears, I don't know, Mario or various other
Nintendo Switch games behind me.
Sure.
Yes, I had the baseball slide into getting him.
And have you carline that didn't exist when I was a kid, but it's a goddamn nightmare.
Yep.
The queuing up and it takes forever and you're just stuck.
You're just stuck until it's done.
Oh, yeah.
No fun.
You know, what was fun, though, is I was reading the Netscape.com home page.
Just I don't know, like just bubbled up online.
As one does.
You know, you can download Netscape Communicator 401 for Macintosh and Windows and you can
get communicator preview release six for Unix.
Yeah.
Wow.
Reading the old Netscape.com.
I'll put a link in the show notes.
You guys should go check this out.
It's like a whole other era where Netscape your guide to navigating the net and they've
got like a sailing boat that's sailing across the digital Internet.
It's it's really quaint.
It's a totally different time.
Oh, yeah, because it was it was like the web, but it was like an ocean to write.
Sometimes it was a highway, like a superhighway.
The information superhighway.
Sometimes it was an ocean, you know, where we were just trying to wrap our heads around
it.
I don't know.
Something just made me smile looking at that.
You know, I thought we would get a just a metric ton of feedback about the Apple scanning
your phone pictures for child porn and we didn't get a single email about it.
How weird is that?
I think they don't want us to talk about Apple.
Well, that might be true.
That might be true.
They have a M1 NV could be or it's the exact opposite.
They've all switched.
They've got iPhones and they've made their choice and now they don't want to have to
think about too much or maybe everybody's actually OK with it and it's just it's just
us that are like, wait a minute, this seems like a pretty slippery slope here.
I think Apple did say that they are going to change the program so that way it's not
just the database run by the FBI, but it'll have to be hashes that are added by multiple
countries at the same time or something like that.
I have somebody mentioned something about Beijing before.
Yeah, I've decided Macs just are horrible workstations.
Today's experience.
So I decided to bring a Mac with me on the trip just to, you know, give it a swing.
And it's the best performing machine I have with the largest screen.
And so I brought it to do the remote broadcasts.
And it it has been so frustrating because of the the built in stuff that it just does
in the background.
And I have no control over it.
One is like photo analysis of like detecting faces that I take with my iPhone.
But the other thing that's actually killing me right now as we speak is this damn and
has your session demand.
This thing is taking two megs to four megabytes a second megabytes a second of bandwidth down.
And I'm on a really limited LTE connection because the system 76 buildings actually blocking
one of my cellular providers.
So like I've got like no bandwidth to spare.
And this damn Mac, this damn Mac.
Doesn't matter how many times I kill NS URL session D. I turned off iCloud drive.
I turned off all iCloud stuff.
It doesn't matter what I do.
I cannot get NS URL session D to stop taking every absolute available bit of bandwidth
that I have.
I'm looking at my at my bandwidth transfer chart right now and it's redlined.
It is redlined the entire time.
And I have like 60 kilobits left over for the conversation you and I are having right
now and everything else, everything else is being allocated to this NS URL session D.
And sometimes I see just background processes taking 200 percent of CPU core.
I have no idea what they're doing.
There's no way for me to prevent it because if I if I kill the process, launch D just
restarts it.
This is a joke workstation.
The fact that I have no control and here I am trying to do a live stream, trying to do
my job and the Mac is doing God knows what.
I can't even tell what it is.
I used activity monitor to check the open files and it doesn't give me any indication
of what it's actually doing.
So there could be that, too.
Anyways, I just think it's a joke.
And if anybody knows how to fix that, let me know.
You don't fix it.
You just you get more bandwidth.
Uncle Tim needs his cut.
Yeah, that's true.
Right.
You got to have you got to have those services staying in sync.
Hans writes and he says, hey, guys, love the show.
Keep on going.
You recently touched on a blog post about Gnome's apparent delusional future.
And well, honestly, I couldn't agree more with your analysis.
I am a huge fan of Linux desktop.
And because of that, I like the choice it offers.
What I wonder is what you would recommend as a replacement for Gnome right now.
I'm currently on XFCE and actually been thinking about going back to Gnome, but that doesn't
seem like a viable option anymore.
Is KDE really worth it?
I never gave it much of a chance because it always kind of looked too similar to Windows
to me.
What about CineBit, Mate or Budgie?
I'd be really curious to hear your thoughts on other desktop alternatives.
And I just want to say thank you to Hans for writing in to give me a chance to once again
talk about Plasma on the show so I can slowly chip away at Mike and eventually one day get
him to try it.
I just recommend Plasma a whole straight up.
And yes, default, it will look like Windows, but that's actually clever, I think, because
a lot of people can map their experiences with traditional desktop paradigms onto that
Plasma setup.
But the thing you'll learn about Plasma to almost to a fault is it is extremely customizable
and you can make it look like Unity 7 if you want.
You can make it look like XFCE if you want.
And it's modularized so you can have components of it that will fail that don't take down
the entire desktop stack.
Their Wayland support is coming along really well.
And the performance is now, I would bet you, although I can't guarantee it, but I would
bet you there's a good chance it'll use less resources than XFCE does on your box.
It's really, really light these days.
Did I convince you?
No.
Okay.
All right.
So John writes in, hey guys, I've been a software engineer for about 11 years now and I've now
transitioned into a manager.
Hmm.
Hmm.
Yes.
Hmm.
Okay.
Well, he's happy about it.
So we'll go with that.
He says, I work for a large company and while I know how to be a good developer, I'd like
to hear your guys' thoughts on what makes a good manager of developers.
It's my first time as a manager and I'm going to have to be in charge of a large group in
multiple countries.
I've read a lot of articles and posts, but I would appreciate to hear your collective
perspectives on this.
Keep up the great work.
Sean, do you have any tips maybe you've derived from having bad managers that you would pass
on to Sean?
Yeah.
I mean, I do a lot of management myself these days and I, it's tough because ultimately
it comes down to when's this going to be done?
What's the estimate?
The estimate's always wrong.
Like I feel like the manager problems, at least the way I do things, have always been
on both sides.
The developer problem of like estimation, but with an extra layer of being removed from
the situation.
So I even less visibility into the problem.
I can give you one real case.
Okay.
When I was very, very young, I had a manager who used to literally his move was to count
people's commits.
Oh yeah.
That's like another version of butts in seats almost.
Yeah.
It was really weird and like lines of code.
It was really, that company did not last.
Surprise.
Surprise.
I mean, I struggle with this myself, to be honest, because there's always the let the
coders just code and be happy.
And then there's the way you need process.
And I'm constantly adjusting between more process or less process, right?
Like at one point, we're super deep into Jira, Alassian Jira, and then that just became heavy.
And right now we're kind of basically working in Trello, but already I'm starting to see
things that I'm kind of missing from what I want in Trello, because the manager's job
is ultimately to talk to the stakeholders, sorry, I said stakeholders, I have to vomit,
and be like the middleman between the stakeholders and developers and make sure that expectations
that are being set make sense and that they're met.
Yes.
Yeah.
And also that things the stakeholders are asking for are actually developable, right?
That isn't like, you know, build me a pony.
I actually think accountability and expectations was the area I was going to hit on.
So I think I totally agree with you.
As a manager, I think you need to find a way to hold people accountable and also make expectations
clear all the time.
Like focus on accountability and expectations, but accountability is a tricky one because
you don't want to be a dictator.
You want to be the type of manager that can suss out when performance is lacking because
somebody isn't trained up or doesn't know how to do something versus somebody is just
being lazy and taking you from a ride.
And you kind of have to have a different manager's hat for different situations in that regard.
So keep flexibility in mind when holding people accountable.
But if you don't, if you don't build that muscle, it will become harder and harder over
time and you will build a culture of unaccountability.
And that is going to spell disaster.
Like Mike was just saying, you'll hear guys come up with systems that are just ridiculous
to try to hold people accountable, like counting lines of code or commits.
And you know, that that's obviously not going to work, but you could probably guess what
that person was trying to get at, right?
They were, they were trying to come up with some sort of process and system to hold people
accountable.
That's universal.
And yeah, you can do that to some degree with project boards and, and sprints that have
specific tasks and goals and key results.
But I think the reality is a manager is always kind of being flexible and wears a slightly
different manager hat for each person they work with.
And that's why large teams can be very hard, very, very hard.
And why you will need people who work with you to help message, to help check in your,
you cannot do it all yourself in a worldwide large team in different time zones.
There's a lot you can do.
You could also consider, I hear something that's working really well for people that
are managing groups in different time zones is moving your meetings to a more async style
meeting where perhaps you're posting video updates to a channel.
And instead of everybody sitting in a meeting or a standup because the time zone situation
is so difficult, you come up with more interesting, clever ways to still have high touch communication,
but in a way that doesn't bog people down with meetings.
And as a manager, it's your opportunity to kind of come up with clever solutions for
that.
So focus on accountability with flexibility, focus on making sure that your communication
strategy is clear and that you have a way to manage that many people and keep them all
in sync across different time zones, perhaps async meeting styles instead of everybody
getting on a zoom call, you do individual updates and that kind of stuff.
And I think if you think in those terms, you're probably going to do all right.
You're probably going to do better than most developer managers.
And also I'll just say this too, is like, listen to your people.
If you know they're pushing something or if they think there's a direction that project
needs to go in, at least listen to them and have that conversation, Sean, because perhaps
they know more about a particular thing than you do, because although you sound like you
are a good developer, you've been doing it for 11 years, as time goes on, you're going
to be removed from the day to day into just like problems that the developers are solving.
You're going to be, as time goes on, more and more removed from that just naturally
by not doing it.
And there will be a point where perhaps you need to catch yourself and say, you know,
I do know a lot about this, but maybe this individual, maybe she knows more about it
and I need to listen to her.
And you got to be that kind of manager as well.
Not an easy job.
Turns out it's a lot more work doing the management stuff or it's a different kind of work to
right?
Absolutely and that listening to other folks and but also, again, you can't listen to everybody,
right?
If you have a team of like five or six, you're going to have conflicting opinions and you
have to find a way to resolve those, particularly about like dumb stuff like linters.
It's always the dumb stuff.
It's always the dumb stuff.
Right.
Words.
You could just get two people who are...
Colors.
Yeah.
Oh, my God.
Yes.
You could tell we've both dealt a lot with that.
And that's where everybody always has the most input.
And so it's super frustrating because you just get bogged down in the nuance of stuff
that doesn't matter and it's just excruciating.
And so you got to navigate that as a manager as well.
Have fun, Sean.
It's going to be a blast.
Good luck.
Yeah.
Good luck with that.
Hey, you know what?
I just want to mention super quick meetup.com slash Jupiter broadcasting.
It's this week.
It's Friday the 20th in Denver at Pindustry.
We are asking that you just kind of start trickling in after four o'clock at Pindustry.
You'll find us there.
Linode's going to be there.
We're going to be giving away raspberry pies.
They're going to be giving away a bunch of Linode credit and other stuff.
Some friends from Linode will be there as well.
Some friends from System76 will be there.
A lot of the JB crew, but not all of the JB crew will be there.
And we always get a lot of coder love at these meetups.
So if you're a Coder Radio listener, you are 100% invited to Pindustry this Friday in Denver
at 4 p.m. local time or start trickling in after that.
This is it.
This is the big meetup, the one that we've been on the road for, and it's almost here.
It's very exciting, and we'd love to see it.
Linode.com slash Coder.
Yep, that's right.
Linode sponsors this here podcast, and we enthusiastically use Linode for all of our
hosting needs.
You know, I've built everything on Linode over the last couple of years, and I have
legitimately experienced like all the different options out there for hosting.
I have tried all kinds of things.
But what I like about Linode is the fundamentals.
They have really good performance.
They have a really good interface.
They have a really clear, easy to understand API.
And on top of that, they also have a dashboard that's, you know, that's great.
Like their interface is great.
But they have 11 data centers worldwide, and the connections between those data centers
is super fast.
So if you need multiple spots, you're covered there.
And then Linode itself, as a company, their fundamentals check out as well.
They are the largest independent cloud provider in the world, full stop.
Right there.
Right?
They're independently owned.
They're not backed by a VC that has some goal to dump on the market and then completely
take over the space and jack the prices up.
They've been doing this for 18 years, iterating on it, getting it better and better and better.
And now they have millions of customers, well, at least a million.
I actually haven't checked, but I think it's around a million customers and businesses
around the globe.
I mean, think about that.
This is an independent company that started in cloud computing years before AWS was even,
you know, a glimmer in Bezos's eye.
And Linode has remained focused on providing great hosting since then.
They make cloud computing simple, affordable and accessible to all 30 to 50% cheaper than
the major cloud providers while being fast.
And it's not just me saying that, although I've personally experienced how fast they
are.
They've actually been reviewed and tested against the other cloud providers.
One of Linode's edges is they're using brand new AMD EPYC processors in their dedicated
CPU rigs.
They're using crazy fast SSDs and they are their own ISP.
So it's like every part in the stack has been optimized and it all comes together to give
Linode a performance edge.
I love their S3 compatible object storage.
Have you ever looked into how much software actually supports S3 storage and how much
backup software and how you can do configuration management and all kinds of stuff with object
storage?
Well, they've got it in spades.
I use it for my next cloud instance.
I use it for all kinds of backend file sharing.
It's great.
They have cloud firewalls, VLAN support, a powerful DNS manager and one click application
deployments.
If that's more your thing, if you're not so much of a DIYer, they can cover you there
too with their one click deployments.
So there's an open source product called Minio that I've been using for years.
It basically is, if you know, Doku, right, is an open source implementation of the Heroku
API.
Minio started out as an open source implementation of the S3 API.
Now they have a whole ML thing, but they still support the old, they maintain it.
But they have two sides to their business now.
Originally it was just a FOSS project.
Now there's like some, I don't know what they're doing with the commercial side, but for example,
if you import, this is my real world case, the Ruby S3 gem, but you want to self-host
your files, you just target the endpoint to your local server running Minio.
And from that point on, you don't ever have to think about, and that server could be a
Linode VPN, right, you don't ever have to think about that it's Minio.
You just use all the S3 classes, all the S3 utilities in the S3 gem.
Goes the same for the PIP package and Python and the Java jar and all that kind of stuff.
So yeah, that's a great project too.
It's interesting too to see them try to make it profitable.
And of course Linode has been supporting the Linux community and this year program, making
Coda radio possible and Jupiter Broadcasting's meetup as well.
They're really, their commitment to the community genuinely does run deep.
It's pretty great.
They're also dedicated to offering the best in virtualized cloud computing, which probably
matters a lot to you.
If it runs on Linux, it's going to run great on the node.
So sign up today, get $100 and 60 day credit on your new account and you support the show,
make it possible for us to keep giving away free independent content.
That's linode.com slash coder.
Go there to get $100 and support the show, linode.com slash coder.
All right, I'm attempting to kill processes.
Wes Payne has sent me several launch CTL commands to attempt to stop this NSC URL session.
It's still going like crazy though.
Just crack open some POS files and just go to town.
You know, I'm just, I'm kind of, I'm a little disappointed because we've been getting all
these emails.
They're like, Oh, Max, great workstation, blah, blah, blah.
And it kind of, you know, I was like, okay, well I'll give it a go.
The listeners seem to sure like it an awful lot.
Maybe I, and here I am and I am just, I've thrown everything I can at this.
Only 3.9 megabytes a second on an LTE connection behind the building that's just so frustrating.
But let's talk about the stacked overflow developer survey because it's kind of become
a tradition on this show.
Yes.
How about this one?
Of course I had to start with this one.
They surveyed the respondents for operating systems and you guys probably know this, but
just as a recap, stack overflow does this every year.
They say this year they observed a significant evolution in the way developers are educating
themselves.
They say the younger coders are using online resources like videos and blogs.
In fact, they are more popular using videos and blogs is more popular than school and
books combined now in younger developers.
However, older developers, however that's defined more than 50% of them indicate they
still, uh, or sorry, a lot of them indicate that they are still just using good old traditional
books and traditional ways of learning.
Yep.
And 30% of the people that responded said they were new to coding less than a decade
and 35% have less than five years in the trade, 35% of less than five years, a lot of new
people and um, all respondents when they were asked said windows was the top OS at 45% Linux
number two at 25.32 and Mac OS number three at 25.19 and then WSL at 3.29% interesting
that WSL is broken out 3.29% for WSL and then BSD is at, is at 0.18%, 0.18 for BSD.
Oh man, that's bad.
That's sad when you flip the survey over though to professional developers.
So not just all respondents, but those who identify as a professional developer, I don't
even know what that means, but who knows?
Windows is still in the lead.
Mac OS now comes in at second.
So it now has replaced Linux when you just focus on developers with a 30% indication
and then Linux comes in now at third at 25% WSL three and BSD remains slightly better
at 0.14% of people said they use BSD.
When I saw this, my thinking was the people who are professional developers are more likely
to be like the full time, you know, like, like me or, you know, just like people would
do it as their day job.
Right?
Yeah.
Yeah.
I think that Apple like joint venture stuff and the business support stuff, it's probably
kind of a lot of places it's like you can get the Dell or you can get the Mac book,
right with, in terms of the corporate it, you know, your standard issue.
It could be, if you were looking to at this survey for programming and scripting and markup
languages, I don't know, this might've hurt you because objective C is damn near bottom
of the list of ones people love 73% of respondents said they dreaded using objective C and a
hundred percent of those people have bad taste.
C plus plus is smack dab in the middle, 50% love it, 50% hate it.
Java leans a little bit more towards the hate side.
Well, hmm. Yeah.
Can you guess what's at the top of the list that people just love by a huge margin?
I didn't do my homework.
Is it rust?
How did you guess?
That's right.
Well, it was either rust or Python, so.
People love rust.
I just.
They love rust.
They really do.
They just love it so much.
They love a compiler that kicks you squarely in the balls.
And Westpain will be happy to see that Clojure comes in at number two.
So.
Oh dear Lord.
I thank God we're not doing those challenges anymore.
Now this is also not just programming languages, right?
So TypeScript's on here.
So yeah, you know, I mean, yeah, I mean, yeah, I mean, it's kind of, it's a toy language.
Let's be honest.
I'm just kidding.
I just feel like now I'm trying to get people to email it, you know, cause if they don't
write in, I'm like, all right, fine.
I'm going to, I'm going to, I'm going to poke you in the side until you write into the show.
AWS was the number one loved platform followed by Google.
Actually Google ties it up pretty much with Azure and DigitalOcean, Heroku's on there,
Oracle's on there.
Look at all that.
Wow, man.
A lot of stuff in there, but there you have it.
That's the new, that's the new developer survey.
I guess I was a little surprised to see Linux as high as it was in a way, especially on
the, on the all people respondents, on the all respondents.
Linux beat the Mac.
Well, this has been the trend for a couple of years now though, right?
Where Linux has been gaining share.
It just feels like if you, if you look at the emails we've gotten after the M1 announcement,
it felt like that, that trend was going to start sliding in the other direction.
I would like to see this and even the emails we get broken down by age because I have a
feeling your theory from last week is right that people who, you know, become moms or
dads at a certain age, just like run out of patience with some of the more finicky Linuxy
stuff and end up on the Mac.
Having said that, most of my guys use Papa Westal and it's fine.
In fact, I just ordered someone a Gazelle.
Oh, nice.
Do you want me to walk in there and grab it for you?
I'm right here.
It shipped.
I was going to ask you to actually, it already shipped though.
I'll grab you another launch instead.
Yeah, there is that.
I've definitely gotten that.
So we've done the Salt Lake City meetup and we've had four micro meetups where it's just
like a small group of people and universally it's like people are shifting some opinion
on this.
Not everybody is like switched or anything like that, but there's definitely some opinions
that are shifting and it does seem to be not to, not to like put too fine of a point on
it, but kind of seems like it's people that are near or at their or over their forties.
They've got some kids, they've been working for a little while, a $1,300 laptop isn't
going to make or break them and they kind of just throw their hands up and that's definitely
been not a hundred percent, but it's been really common to see that on this road trip
for better or for worse.
Not everybody though.
So it's been a range of people that I've talked to and I'm kind of like I'm coming up with
a series of questions I'm asking people as these meetups go on to kind of get the information
out of like, well, what went wrong, when did you switch, why did you do it, you know, I'm
just asking.
It's really kind of all anecdotal, but I'll probably get 20, 30 responses from people
overall by the end of this trip.
So I'm starting to change my perspective on it.
And you know, the truth of the matter is the way I'm looking at it right now is this Mac
seems more finicky and it seems like more hassle than a Linux box because this Linux
box, so before it was downloading, now it is uploading.
And I don't know what NSURLSessionD is uploading, but it's uploading two megs a second, which
is about all I have again.
And I'm trying to do a live show, right?
It's so frustrating.
Do you have like a Charles proxy or like a, I think it's like Netcat or something to like
see what exactly it's doing.
Well, I did go into activity monitor and I opened up the process and I looked at the
open files in the process and it doesn't really tell me anything.
Like I see logs in here.
I see analytics.whitelist in here and I see some HTTPS connections from my host to probably
some iCloud server, just the IP address.
This is why Snow Leopard was better.
This is a disqualifier for me.
Is it the first time you've used it in a while?
No, I mean, no, I've used it on, I've been using it on this road trip and you know, so
it was just a couple, a couple of days ago.
When did I do LAN?
Yesterday.
I did LAN yesterday.
That's weird.
Okay.
Yeah.
That's a disqualifier for me.
I think it disqualifies.
I mean, I'm not sure.
I'm going to see if I can figure out how to, how, if I can tame this NSURL session D beast,
then it's not.
But having something take up this much bandwidth when you're on the road is, ooh boy, I should
stop bitching about it, but it's, it's just like so quintessentially like an example of
how the Mac is not fully under your control.
Bitch away.
That's what the advertisers pay for.
Datadog.com slash Coder Radio.
This episode of Coder Radio is sponsored by Datadog, the monitoring and security platform
for developers, security analysts, and ops teams in the cloud age.
You can unify your metrics, your traces and your logs all in one place, troubleshoot issues
faster and break down silos between your teams, create real time, beautiful dashboards for
over 450 technologies in just minutes and easily pivot from high level overview of your
environment to a granular visualization of the metrics and events.
Datadog offers infrastructure monitoring, APM, security monitoring, real user monitoring
and more all in one place.
Are you getting it?
It's great.
So go get started with their free trial today at datadog.com slash Coder Radio.
See why thousands of companies trust Datadog with their monitoring.
Also if you start a free trial and you create one dashboard, Datadog is going to give you
a free t-shirt.
I don't know about you, but I could always use another t-shirt, especially cause I always
spill stuff on myself and free t-shirts help with that pain.
So go over to datadog.com slash Coder Radio, sign up, create a free trial, create a dashboard,
get a t-shirt, support the show and see how it's so nice to bring everything into one
place, communicate across teams, visualize problems faster than ever and plug it into
over 450 different pieces of technology you likely already own.
I really liked this tweet by Steven Trotten-Smith.
He's a developer on the Apple platform.
He's created some pretty good apps.
One that I like a lot is called, I think it's called Broadcast or Broadcaster and it's just
a nice, clean, simple internet radio streaming app for the iPhone that does some smart buffering
and yeah, you might want to check it out.
So Steven Trotten-Smith on Twitter said, quote, the Mac is in the best place it has ever been.
Fresh off a CPU transition, a new design language, beautiful new hardware with two brand new
UI frameworks, universal apps and a popular new programming language.
If that's not enough to convince developers to make native apps, what is?
And I thought about it for a second.
I thought, damn, I think he's right.
Like are we seeing the last great push for native apps with new hardware, new design,
you know, the new design and what is a Big Sur, I can't remember, whatever the new UI
they did.
And of course, Swift getting more popular than ever.
They have the two UI frameworks to make it easy if you're already developing for iOS
to bring your applications to the Mac.
And they're all native.
They're all native.
Do you think Apple has lined everything up to actually convince developers to start focusing
on native apps and give up on things like Electron?
No, it doesn't make sense.
I mean, if you're like a small indie, yeah, you know, the Mac market's surely big enough
to make very beautiful, very kind of polished native applications using Apple's latest frameworks,
you know, kind of running on the treadmill, right?
We've talked about that for years, more in the context of iOS.
Right.
And well, and I think to be fair to them, they have lined this up better than Microsoft,
which is traditionally very good at this kind of stuff.
But when you bring it all together, I think Apple has lined it up better than any other
platform.
And I could even see that sort of leading the way.
Other platform providers like Google and Microsoft looking at that going, let's start building
our own chips.
Let's start shoring this up and making this a good experience for native developers.
I mean, there's an easy Swift dig here, but I'm not going to make it.
I would have a hard time pitching to someone to a business that they should do a native
Mac.
I'd even have a hard time pitching they should do a native iOS app, although on the iPad
now that things are somewhat loosened up, which I think we should talk about more in
a couple of weeks, there is definitely more opportunity.
I don't buy it.
I mean, I want to buy it.
That's why I keep hemming and hawing here.
But yeah, the reality is for most businesses, maintaining native applications is a huge
pain in the ass.
You're almost better off with a PWA or some sort of web based solution.
You know, whether that be a flask or a fast API app returning Jinja, the templating engine
for Python, or just straight up Rails with ERB.
That way you have one thing to update, one thing to maintain, and you don't have these
problems.
And frankly, the PWA capabilities, especially if we're talking about desktop here, where
you don't have Apple's crazy restrictions on iOS Safari, although I did just hit a bug
on Safari for Mac I tweeted about, if you can follow me if you want to see my bitching
about how Apple decided to not cooperate where every other browser does.
I mean, I don't know, and I'm a guy who used to sell Mac applications, right?
So like, I want this to be true.
I think it is true.
I just don't know that, at least in the enterprise space, which is mostly where I live now, it
would ever again, make sense for me to sell someone a native Mac application as like a
custom development job.
And after I asked you the question, I started thinking too, like, it seems like the mobile
industry is just too large.
Mobile users are the number one target.
Oh, yeah, dude, on mobile Xcode file new project, right?
All day long.
Yeah.
It's always going to make the desktop kind of like a second class target, I think.
I think it's just the size of the desktop market has been eclipsed by a juicier, larger
market.
And I think that's just where the native apps are going to be now.
When you have a native app, it's going to be in an app store.
And when you're downloading apps and you're loading them on your PC, on your freeloading
PC with no app store, or the app store you're not using, it's going to be like a web app
for a lot of them.
Yeah.
And I remember like my old app for Mac Code Journal.
One of the things I was completely unprepared for, but ended up being true was people wanting
to buy site licenses for it.
And this is back when the Mac App Store just had come out and did not support anything
close to an organization account.
I don't know.
I mean, maybe I'm wrong.
I'm sure I am wrong.
Obviously, game developers exist.
And I feel like when we say app, we're not talking about games.
But to me, the kind of, quote, productivity or developer tools software market is really
a B2B game, an enterprise sales game.
Yeah.
And like Aveth points out in the chat room, most users don't even know when it's not a
native app.
So that's a factor as well.
And I don't know if you've heard about what one password just did recently, but they just
released one password version eight and the Mac users are revolting because it's now it's
gone from a native app and it is now an electron app.
But then don't worry, it's got a rust back end.
So the rust back end is native, but the user front end is electron.
And some users, you know, they don't care, right, obviously.
But there are a lot of Mac users who are like, well, screw this.
You just took away my pretty native app.
Well, but that makes a ton of sense, right?
Like we're doing C++ back ends with effectively JavaScript front ends.
And you know, for for one password and Microsoft is going to go this way with Office eventually
too.
But with one with one password, it means they now have a Linux version and a Windows version
and a Mac version that's all going to be in sync.
And I guess it doesn't matter that it's going to lose some users.
Some users will quit over this, but I bet long term they're not because where are they
going to go?
I guess they're using Safari as their browser.
Most of the other password managers aren't very good.
I like LastPass, but all right.
I liked Lice.
I switched just about, you know, I don't know, a year or two, I can't remember now, from
LastPass.
And I've been really happy with Bitwarden.
If if anybody wants to give Bitwarden a try, they've got it's open source, but they do
have a premium version if you want to host on their servers and stuff.
And I've liked Bitwarden a lot.
And so if people are looking for an alternative that, you know, is reasonable and seems to
have a good team behind it, I would recommend Bitwarden.
LastPass is not bad, too, but they've recently changed to some crazy scheme where you got
to pay a certain rate to be able to open up your password database on a desktop or a mobile.
And if you don't pay, you can only open it on mobile or you can only open on a desktop.
It depends which one you open it on first.
Like what?
Okay.
That's not confusing.
I don't even want to tell you the stupid thing that I do, but I use iCloud everywhere.
Well, I mean, it works.
You know, it's simple.
It's built into the system.
And most of the stuff I need those passwords for, one, I've aggressively moved to 2FA
for everything.
So that kind of changes, you know.
I mean, the nice thing about having the iCloud password is that it's, you know, it's also
then it works with your fingerprint and your face ID stuff so you can authorize the password
filling with your fingerprint.
That's nice, actually.
Right.
Or the cops can just flash your phone at you.
Yeah, it's really good.
I want to know why you're getting picked up by the cops and they need your passwords in
the first place.
What's going on over there?
Florida, man.
I sold them a Mac desktop app about five years ago and it doesn't work and they're mad.
So, see, full circle.
Oh, yeah.
Okay.
Yeah, there you go.
Hey, I want to say thank you to our QA members, Coder QA at CoderQA.co.
You have a Coderly that's been posted for this quarter.
Go there to join up.
You can get past Coderlys if you haven't yet, but it's really about supporting the show.
You get a limited ad feed as a thank you.
And you get to listen to Mike and I go on about stuff that's sort of like higher level
recap stuff in the quarter reports.
That's a CoderQA.co.
Mr. Dominic, is there anywhere you want to send people this week?
Go at Dumanuco on Twitter and we have a bunch.
We have two job openings at the Mad Botter right now, a junior Python developer and a
entry level QA engineer, but we're looking for someone who at least is somewhat familiar
with Python.
If you can't tell, we do a lot of Python.
There you go.
And where do they find that?
I think this is a procurer slash the Mad Botter Inc.
Okay.
There you go.
Well, you can find me on Twitter.
I'm at Chris Ellis.
The network is at Jupiter Signal and this here podcast, yes, it does have a Twitter
handle which could be useful for like time changes or announcements, anything like that.
That's at Coder Radio Show.
And yeah, everything we talked about today and links and all that, that's at Coder.show
slash 427.
You're also going to find our contact form over there, our subscribe link and all that
stuff if you want to listen to every episode.
You can also join us live.
We do this here show at 10 a.m. Pacific, what is that, 1 Eastern?
I don't know because I'm traveling, but you can get it all at JupiterBroadcasting.com
slash calendar.
We convert it to your local time right there.
That's easy.
You know, I'm robots.
Thanks so much for joining us on this week's episode of the Coder Radio program and we'll
see you right back here next week.
