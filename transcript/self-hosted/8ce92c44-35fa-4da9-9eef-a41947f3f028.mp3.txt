Hello fellow self-hosters, Alex here.
We've got a super exciting episode up our sleeves today.
This is one I've been waiting to share with you
for a little while.
It's a prerecorded interview with Elan,
the CTO and co-founder of Plex.
Chris and I got the chance to talk with Elan
during the JB Sprint in August from his Hawaii home base.
We cover lots of ground in this interview with him
on topics ranging from electric cars
to the motivations behind starting Plex in the first place
and where the project is heading in the future.
Be sure to stick around though,
as we have some exciting news
about the ghost blogging platforms
new release to share as well.
So sit back, relax and enjoy our interview
with Elan Finegold from Plex.
You guys know this, Alex and I are both big Plex users
and I challenged Alex before the show started
to attempt an elevator pitch explanation of what Plex is.
Okay, here we go.
Plex organizes audio and visual media
from your personal media libraries
and allows you to stream it to any playback device.
And for me, Plex has been a huge gateway drug.
I had a Synology NAS back in the day
and now I have a huge server in my basement
with 100 plus terabytes that has 20 cores
and hundreds of gigabytes of RAM.
And I honestly owe an awful lot of that stuff to Plex.
One of the other cool things that Plex does
is that it does on the fly media transcoding.
And why that's important
is lots of different media devices support different codecs.
You know, a web browser might not be able to support
the same codecs as an iPhone, for example,
or an Android TV box.
And the single most magical feature of Plex
is that if I press play on a device,
there's no configuration required.
It will just start playing my media as if by magic
and transcode it from whatever source using FFmpeg
to whatever target device.
It just works and it's wonderful.
That was pretty good.
What'd you think, Elon?
I'm impressed.
Are you looking for a position as our PR spokesperson?
I love your accent.
I love the way you could describe that.
It's brilliant.
Well, I got out of a speeding ticket with this accent
a couple of weeks ago, so.
Now don't be sniping my co-host.
I just got this thing off the ground.
Damn it.
Well, thank you for being here.
We thought maybe we'd like to start
with a few personal questions.
Our crowd is a lot of a do-yourself hosted kind
of group, and they love to know what people's setups are.
And so we would like to ask, at what
you consider to be home base, roughly how many computers
would you say are in the home?
Yeah, sure.
I mean, I work personally off a Mac desktop.
Right now it's a Mac Mini.
I used to have the Trashcan Mac Pro,
but that just got super long in the tooth,
so I moved to one of the new Mac Minis.
And then my wife and I both have MacBooks,
because I really love the fact that they're
super light and portable, and I don't do a lot of coding
on that, mostly on the desktop with a bigger screen.
And then as far as the media box,
I have a 3U Norco box with a bunch of hard drives in it,
probably around 100 terabytes.
And that's running ZFS on top of Ubuntu,
which is sort of what most of us at Kleks
have gravitated towards.
We really like ZFS, or ZFS, if you will,
although there are several people that use UnRAID,
but I tend to use that ZFS.
And it was an older system, but I just upgraded recently.
I guess Facebook and a bunch of other companies
dumped a bunch of Xenons on them that they
were using in data centers.
So I picked up a couple of 8-core, 16-thread Xenons
for like $100 each.
So now it's got a total of 16 cores, 32 threads for $200,
which is kind of unbeatable.
Nice.
No kidding.
Now, I kind of got to know with all of that kind of storage
and stuff, have you invested in a pretty fast local network?
Well, yeah.
When we got the place, we wired it for Cat 6.
But sadly, there's Gigabit running
to all the important places.
And I experimented probably about a year ago
with trying to go 10 gig just between the Mac Mini, which,
as you know, it's ethernet ports for its 10 gig.
And so I added one of these cheap $100 cards
to the Linux system that also supported 10 gig.
And it kind of worked for a few days.
And I would transfer an MKB file back and forth and be like,
oh my god, 300 megabytes per second.
That's incredible.
And it just stopped working on the Linux side after a while.
And I would get like, wouldn't be able to connect.
And I'd have to reboot.
And I just was like, OK, fine.
I'd prefer stable 1 gig over unstable 10 gig.
Right, yeah.
I mean, you must have been around
in a time where even 1 gigabit would be just
a remarkable transfer rate.
Oh, yeah, incredible.
I mean, the thing that actually blows my mind nowadays
is that with a good Wi-Fi connection,
you can get up there in at least the hundreds
of megabits per second.
That is kind of mind blowing.
I don't think wired has actually really kept up
with the accelerating speed of wireless.
Thank goodness, because it probably makes Plex much more
of a real option for people in homes
that don't have physical wiring.
It is true.
I mean, honestly, I think a technology
that people don't give enough credit to is Powerline,
which is also something that's progressed super fast.
I had a thing in my living room that I wanted
to also speed up with wired.
And I used Powerline, and I was able to get about a gigabit,
I think, just over Powerline, which is, again, kind of crazy.
That used to be super flaky.
It used to 10 megabits, 5 megabits,
but that's gotten really good, too.
Speaking of power, I was doing a bit of research
before the interview.
How do you like your Tesla Model 3?
That's so impressive.
I'm like looking around for a spy cam now.
There was some post on Medium that I found.
Yeah, I love it.
It's, to me, it's like the future of cars.
And I know that's a term that is thrown around fairly lightly.
But I guess the feeling I have with it,
as it gets software updates and new features over the air,
is I feel like I'm living through the revolution
on the way to self-driving cars.
And I'm not as bullish.
The company is very bullish about full self-driving,
end of the year, except for regulations.
And historically, that's always been a lot harder.
But it's incredibly cool to sort of live through, in theory,
have the hardware and just need the software
and see the software take incremental steps.
Hey, all of a sudden, it recognizes stop signs.
Hey, all of a sudden, it knows how to stop at a stop sign.
As a nerd geek kind of a guy, that
is an incredibly unique experience in a car.
Usually, you get a car.
Nothing gets updated ever.
You sell it and get a new car.
Maybe you get an upgrade.
So it's really, it feels like a living piece of technology,
essentially.
Did you ever have an iPod back in the day?
I remember that Apple had a similar kind of,
we're used to devices that never see updates.
We never get new features.
And I remember having that same kind of journey of discovery
with my first iPod.
I unfortunately came to iPod late.
Instead, I had one of those creative Zune players,
which was just utter crap.
Oh, yeah.
No one had figured out back then that really all you
needed to do was a simple hierarchy of artist, album,
track.
No one had figured that out until Apple came along
with the iPod, and everyone was like, oh, yeah,
artist, album, track.
That makes total sense.
But yeah, I know Apple's always been really good about updates.
Talking of user interfaces and stuff,
the iPod revolutionized things with a click wheel.
I test drove a Model 3 a few weeks ago,
which is why when I saw it, I brought it up,
because I just wanted to get another person's input
into why I should buy one.
How are you finding the zero buttons thing?
You should definitely buy one.
So I counted, because before the Model 3, I had a leaf.
So I've been electric for a while.
I had two successive leaf leases,
say that a few times fast.
And I counted the number of buttons on my leaf,
and it was something ridiculous.
I'm not exaggerating here.
I think it was something like 60 or 70 buttons
in that front hemisphere compared to the Tesla, which
was like 10 or something like that.
But I have slightly mixed feelings.
For the most part, it works amazingly well.
And the control surfaces that they
do have with the D-pad things on your thumbs
work super well for various aspects.
But there are a couple of things,
like opening garage doors.
And if you have to make adjustments to things,
having to look at the screen and hit a tap target
while you're driving at 50 or 60 miles an hour
is unquestionably less safe than feeling
for a mechanical switch or knowing where it is.
So that's a bit.
But that's essentially just an aspect of, again,
the hardware is a little bit ahead of the software.
Eventually, we probably won't need the wheel.
And eventually, it'll be smart enough
that I don't have to change the wiper speed.
So the hope is that the software will eventually catch up
and just make it less and less likely for you
to have to touch anything.
Yeah, if you're not the one driving,
I guess it doesn't matter so much.
So anyway, let's shift gears a little bit
and get into some of the backstory behind Plex.
It's been around a little while now.
I forget what year it was founded.
Technically, I think we're coming up on the exact 10 year
anniversary of the incorporation.
But we were around for a bit before that,
before we were a real company.
Congratulations.
Yeah, thanks.
Thanks so much.
And I'm wondering, what motivated you to create Plex
in the first place?
I mean, essentially, the story is very simple.
My wife left me alone near Christmas.
I was bored.
And I just wanted to play around with something.
And I had never turned out well.
I'd been running the Xbox Media Center on a hacked Xbox.
And we were just at that cusp where you were starting
to see 720p HD video appear.
And the Xbox was clearly struggling at this.
And the Mac Mini was out.
And that just seemed like an incredibly great form factor
for a tenth of the size of one of those giant Xbox things
and super good horsepower.
So it just seemed like an obvious target.
And the XB1C team had already been working
on porting it to Linux.
And as you know, the underpinning Unix, same thing.
I was like, eh, how hard could this possibly be?
Let me give it a try.
Famous last words.
Yeah, it wasn't very easy.
But that's how it all started, essentially.
It was scratching an itch, which is probably
how most projects start.
Yeah.
Now, I guess the 10 year mark is kind of a good opportunity
to look back.
If you had a time machine, would you go back and slip
one bit of information to past self
to do something differently?
I mean, there's definitely things
we've done along the road that I would have done differently.
But I don't know if I can summarize it
down to a single thing.
Maybe like don't DDOS yourself as much.
Do you mean your servers or yourself personally?
Like our servers DDOSing our services.
Because when you have millions of machines out there,
and you're like, OK, let's flip on this new thing,
and they all start using it, you can melt yourself down.
But no, I think there's definitely lots of lessons
learned along the way.
And one thing that has always been super important to me,
as well as I know my co-founder and a lot of the other people
at Plex, is we really do try to stay
in contact with the community.
Like I've just been in the forums replying to posts.
I love that contact with users.
And I think that having that contact,
keeping that surface area, the surface contact
area between yourself and your user base
helps you on the right track.
They will tell you very vocally when
you're doing something wrong.
And again, you might not always agree,
and you might agree to disagree, or you
might take a slightly different turn,
or it's a quote, what I think is actually not a Steve Jobs
quote, like you might give your customers what they want,
not what they ask for.
But in general, I think you ignore your customers,
and you lose that surface contact area
with your customers at your own risk.
That's, I think, one of the biggest lessons.
It's a tight line, because there's also the enthusiast
trap, where you get stuck always trying
to serve your most vocal, most die-hard fans,
and it's harder to appeal to a wider audience.
That is entirely true.
And I note that I've watched Plex over the years expand
into new integrations with podcasts
and other online services.
Have you seen pushback from the original die-hard Plex
community on those new services?
How's that been?
Absolutely.
Yeah, absolutely.
I mean, I think we used a joke, like if you'd
release an iOS update, the Android people would get angry.
If you'd release an Android update,
the iOS people would get angry.
So I think Plex, one of the metaphors
that we use internally to describe it
is it's essentially a fractal, right?
You can zoom in and maybe you're interested in Plex for music,
so you're very zoomed into that part of our platform.
Maybe you use Plex for movies, and you're
very zoomed into that.
And in a sense, you're protective of the area
that you are the most interested in, most vested in.
And of course, that goes for what app you use,
what streaming device you use or don't use.
And I think there is also just a sense of cheese being moved.
People are used to things a certain way.
Our intent with podcasts, for example,
was to give people the opportunity
to consume this content alongside their other content
and maybe even relate it in a way so that, hey,
if you have Bob Dylan in your library
and you have Plex everywhere, why shouldn't we say,
hey, there's a really good podcast
where they're interviewing Bob Dylan.
So if you like Bob Dylan, you have Bob Dylan in your library,
maybe you want to check out this podcast.
And we thought that would be super cool,
and people would like that sort of integration.
We haven't gotten along to that specifically yet,
but that's along the lines of where we're thinking.
You can see it with title.
There's been also pushback against title.
Some people don't like it.
But I think the people that have music libraries that
want to expand their musical horizons, to me,
and I count myself in that, to me,
I think the title integration is awesome.
I have purchased more new music in the last year
than I have in the previous five years
because it's such a cool way to discover new music.
I mean, I know there's some detail here,
but we show you new album releases from artists
that are in your library.
And we let you play radios where we introduce new stuff
that you haven't heard from title.
So there's all these kind of cool little integration
features.
So I think if you kind of zoom out and you're like,
why flex during title, it might seem kind of weird.
But if you are actually invested into the music ecosystem
and you're a music lover, I think
you'll find there's no other solution that
melds the two so seamlessly.
I like seeing it as a podcaster.
I like seeing those podcasts in there.
And I noticed recently that they seem
to be matching more to what my movie library has.
And I think that's a pretty clever strategy too.
So I say, as a podcaster, keep it up.
But it's a bit self-serving.
Yeah, no, I mean, it's a big, it's
a giant web of media, right?
These things are very interrelated.
There's podcasts that relate to movies.
There's podcasts that relate to TV shows.
There's all sorts of relationships
between different types of media.
And it's nice to have fresh content without me having
to do the work sometimes.
Exactly.
And that's honestly, that's one of the other things
that we like about it is the barrier to entry to flex
historically has been, hey, go get a server.
Hey, go rip a bunch of CDs or DVDs or whatever.
That's hard, right?
You need a computer.
That's always on.
It's clearly not for everyone.
But with a podcast, you don't need a server.
So that makes it, hopefully, lowers the barrier to entry.
So that's also a good thing.
So I wanted to take a minute to just walk back a little bit.
The feedback from the users, I think sometimes the subreddit
in particular can be a little bit toxic.
I noticed one of your posts earlier had, yeah,
I've turned off notifications for obvious reasons.
I can only imagine how many times you get tagged a day.
Just on Reddit.
But there was one piece of feedback
one of the users put, which I just
wanted to get your response to really,
which is most annoying to me is the fact
that many bugs have gotten worse or have been unacknowledged.
Yet Plex does nothing but introduce new features
that I think the majority of users don't care about.
I would rather no new features and a stable app instead
of this feature waterfall.
That seems pretty harsh to me, having been a diehard Plex user
myself for at least, I don't know,
must be five plus years at this point.
I've seen a few bugs and a few issues.
But honestly, I don't see anything
that makes me feel as strongly as this guy does.
I just wanted to get your take on that kind of we
would rather a stable app than no new features.
I mean, I think generally building products,
building software specifically, there's
always a trade off between new features and bugs.
Software is never bug free.
There's always going to be bugs.
And marketing and there's always a push for new features.
So there's always going to be a trade off there.
But I think the trade off that we make,
it's not like all of our engineers
are working on new features.
It's not like all of our engineers
are working on fixing bugs.
There's always a ratio of some doing new work,
some doing bug work.
So it's tricky because there are certainly
bugs that have gone unaddressed for longer
than I would personally like.
There are definitely times when I wish
we were faster at fixing bugs.
But it's always the trade off.
And we definitely do try to address bugs.
I think one of the things that the user is referencing
and one of the things I've seen mentioned elsewhere
is they would love it if we at least acknowledged bugs.
And that's something that, again, we've
tried to be better at.
We try to respond in the forums.
I've encouraged our engineers to spend more time in there
and our support staff to say, hey, we're working on this.
Yep, known issue.
Yep, we're working on it.
But we're sort of outnumbered.
And there is clearly times when we don't.
We aren't able to acknowledge every single thing.
And there's a lot of balls in the air.
Well, as a user, I must say I've noticed over the last nine
months or so that things have gotten significantly better
on the messaging front.
The stability of the apps appears
to have improved quite a bit.
And the only thing that I've noticed
that's changed quite a lot has been the UI.
There's been quite a few different revisions
of the UI this year.
And I wondered, given you just rolled out a new version
a couple of weeks ago, is this the final revision
we're going to see for a while?
Yeah, I mean, that's a perfect example,
I think, of the feedback loop and listening to users
because we were heading down.
I think time flies when you're having fun.
But last year, we were heading a particular direction
with the UI, and we got feedback on it.
And it really kind of missed the mark
for what we were intending.
And so we went back to the drawing board.
And that's when we came up with the Uno, the UI
that we've termed called Uno.
And the response to that has been overwhelmingly positive.
And so what you've seen over the last few months
is essentially just a coalescing of all of our interfaces
to go in that direction because it seems to be one
that our users like and appreciate
the customizability of the home screen
and all that kind of stuff.
So essentially, what you're seeing
is just us converging on this.
We feel that this UI will last us for a while.
It's fairly scalable.
It works in multiple different scenarios,
from all I want to see on my home screen
is podcast and title to, hey, I have libraries
from five different servers I want to have on my home screen
and treat just as importantly.
I think it's the best UI I've ever
seen rolled out from the project.
And I can only imagine the incredible constraints
that there must be in designing for all
of the different types of set-top TV appliance
boxes from Apple TV down to the sticks of all different kinds
and random Android devices.
It must be a pretty large part of the business.
Yeah, and definitely.
I mean, as the tech guy, I really
like it when we can reuse code as much as possible
all over the place.
But you're absolutely right.
I mean, there's a wide variety of platforms that we hit.
The Shield is a very powerful Android platform.
There are way less powerful Android platforms.
There's the smart TVs that have very,
we call them potato devices sometimes,
just because they're not super fast.
That's pretty good.
Do you mind if I borrow that?
That's a good call.
No, and in fact, just as I said it,
I'm like, I wonder why potato?
Spud gun?
Potato?
I guess potatoes are slow, but no vegetables move.
So I don't know why we're singling out a potato.
There's always that science experiment
from elementary school where somebody powers
something with a potato, so it's just enough power.
Thank you.
That makes perfect sense now.
Yeah, that's MacGyver.
Yeah, exactly.
Yeah.
Well, I mean, I can only imagine the constraints just
in shipping that software to on time to end users.
We're having to go through different vendors
and different app stores, and all of that
must be massively complex.
Yeah.
It's very hard.
Yeah, I mean, there's definitely not
an insignificant fraction of time
spent on the packaging and different release formats
and processes and all of that, for sure.
I'm just still thinking about the 10-year mark.
It's pretty significant to be joining us right around then.
And I'd kind of like to know about some future plans.
There must be some stuff in the pipeline near term,
anything that you can share yet?
One of the things that's near and dear to my own heart
is the big upgrade of the music library.
As you may be aware of, we've been moving metadata sources,
and we've kind of revamped and upgraded the music
system and a bunch of our associated systems
in the cloud, and we think it's really awesome.
So we continue to make huge advances
in the personal media space for that media type,
and we're also looking to do some other cool stuff
with movies and TV shows that you're
going to see here shortly.
So I think there's kind of like the trinity of investments.
We definitely are working on making the personal media
features even more interesting.
And we're continuing to look to make the player space for us.
Like you kind of mentioned at the beginning,
you said very nicely about how you can play anything anywhere,
and that's kind of been our mantra for a while.
But we've been investing kind of behind the scenes,
and it might not be completely visible,
but in the actual player stacks of our platform.
So Android TV a couple of years ago
got the Exo player-based thing, which
is an FFmpeg-based player, and then on Apple TV and iOS,
we got the MPV-based player, which, again,
sounds like gobbledygook, which is probably
why it's sort of hidden.
But essentially, we've
No, our audience understands, and boy, do we appreciate it.
Yeah.
Awesome.
Well, I love your audience then.
Yeah, so that's been a key for us,
because we want the media to play well.
We want the media to play fast.
The more you can direct play, the more energy efficient
it is, the faster you can seek, the faster
playback time you have.
So we've really been investing heavily
in that core tech of player upgrades,
and we take it very seriously.
And so that's sort of another part,
because our platform playback is an incredibly huge part.
And then in the third part is kind
of where you've seen us play with podcasts and title
and stuff like that, which is we happen
to think that it's really cool to have access
to an even larger catalog of content, some of which
might not come from your own computer.
And we certainly don't want to force it on people.
People can turn it off if they don't want it.
But we think there's some really exciting opportunities
for remixing your own content, augmenting,
we call it internally.
Augmentation is kind of what the term we use.
And that's kind of what you're seeing with title.
And I'll just give another example.
If I go into Bob Dylan and I've got my title account set up,
if I have missing albums, if I'm missing any albums by Bob
Dylan, they'll show up right alongside the albums
that I own, one click to play them.
That's pretty cool.
So that's some of the innovation space we're playing in.
Yeah, that's really nice.
And it augments cloud services like Spotify
quite nicely to have something like that
available in high quality and everything.
I wanted to touch on the playback improvements
that you talked about.
This is a feature request from me, really.
I have a server that has about 10 or 12 people that
use it regularly.
And one thing I've noticed, I have gigabit upload here.
So I'm not constrained with my pipe going out.
I would love to be able to set an on-the-fly transcoding
preference, like prefer direct play over transcode
or something like that instead of the current default.
A server side?
Yeah, server side, yeah, like push it out to the clients.
I mean, I guess wouldn't that, I mean,
that would assume that your clients have the downstream
bandwidth, right?
Like there might be, let's say if someone
has a five megabit download, they're
not going to be able to direct play a 20 megabit.
That's true.
I would prefer to be able to push a direct play.
I take your point, though.
I mean, you're trying to aim at the lowest common denominator,
which is going to be probably the client's downlink
bandwidth or my upload bandwidth, which
I can control right now.
Or heaven forbid, somebody on mobile.
Yeah.
Yeah, I was going to say, like if someone's on an iPhone,
they probably don't have 20 megabits either.
I mean, what you've touched on there is some of the complexity
that we were trying to, or that we
have been trying to address with the streaming brain
project that we have, where the server is trying
to be very cognizant of all of those facts.
How much upload bandwidth do I have?
What's the bandwidth of file?
How loaded is the CPU right now?
How much bandwidth is the client?
How fast is the client able to transfer?
And sort of magically making adjustments.
So you'll see cases where if you have, let's say,
20 megabit upstream, you'll start with a transcode,
and you'll use up 15 megabits.
And then when a new client comes on,
literally they would only have five megabits left.
But what we do is we downshift so they can share more evenly
the bandwidth.
So there is a lot of magic going on behind the scenes
right now to try to make it automatic.
But that magic is essentially in the transcode,
because that's where you have the volume knob, essentially.
Direct play, there's no real volume knob on that.
I actually am very impressed by how intelligent
the entire back end is.
So this kind of collection of tools
is called the streaming brain, did you say?
Yeah, I'm not exactly sure why we decided to call it that.
But that just was kind of what we ended up
calling it internally, the streaming brain.
And amusing side note, when we'd have meetings around it,
there was one guy who, one of our project manager guys,
who loved to use emoji.
And he was trying to come up with emoji representation
of streaming brain.
And the best thing he could do is, while streaming,
he used the shower emoji.
And then brain, he used the robot.
So it was like robot in a shower.
And if you go to our online store,
I think we actually sell a t-shirt that's
a robot taking a shower.
Yeah, it's like the robot from, oh,
what was that old sci-fi movie with Hitchhiker's Guide?
No, no, the one with Leslie Nielsen in it.
Oh, it's a classic.
I can't believe I'm blanking on it.
It's in my Plex library, so I really should know.
Forbidden planet.
Yes.
Yes.
I'll put a link to the blog post that has a picture of it.
It's so good.
We'll have that in the show notes.
Yeah, that's our illustrator, Craig.
He is a brilliant, super talented guy.
And you'll see a lot of his work on our t-shirts.
That's awesome.
We always joke about pivoting to clothing.
You know, I'm saying, if it all looked like that,
that actually would be probably a lucrative side business,
a little Plex side hustle.
Move over, threadless.
Yeah.
Yeah.
I thoroughly enjoyed that, and I hope
we get an opportunity to chat with him in the future
and just sort of check in on things.
But you did promise we'd talk about Ghost.
Ghost is a blogging platform that has exploded
over the last few years.
Last week, 4,286 new sites were made with Ghost.
And that's just last week.
And they have a brand new release.
I ain't afraid of no Ghost.
I can't believe you.
I suppose it had to be done.
It's one week away from Halloween.
You've got to embrace my new country.
That's right.
Good for you.
Yeah, OK, fair enough.
We are talking about Ghost near Halloween,
and somebody had to put it in there.
So you're a big fan, though.
I have daydreamed about using Ghost,
but never had enough reason to move off of WordPress,
another favorite of the open source community.
But you, you did.
You just have no WordPress for me.
Well, it was when Linux server was in the early days,
and I was doing a lot of blogging over there.
And it's just, I don't know, like, WordPress is fine,
but I always felt like it was an extremely big, heavyweight
application for what I wanted to achieve, which was just
write some text with a couple of images
and a couple of categories and tags and that kind of thing.
I don't need any of the CMS.
I don't need any of the e-commerce type stuff.
And Ghost fitted that bill really, really well.
It had a beautiful typography, because fonts do matter.
And the writer's interface, as well, is super clean.
So what do you consider notable about the new, what is it,
3.0 release they just announced?
There's a few things.
So firstly is they are looking to give creators
a way to receive money without relying
on a third party middleman like Patreon or something like that.
And what's particularly interesting about this
is it doesn't require the Ghost company
to remain in business either.
So there is a direct way for readers of a blog
to contribute to the writer of a blog, which is really nice.
The payments all go through Stripe.
So so long as Stripe stay in business,
then this mechanism will continue to work just fine.
There's another new feature in the release,
which changes the way in which the sites are generated.
And there's a lot more support now for static site generation
frameworks for things like Gatsby, Next.js, et cetera,
et cetera.
There's dozens of dozens of changes there around that stuff.
And if you want proof of the pudding,
the entire ghost.org website is actually a Gatsby.js app
hosted on top of Ghost.
The other change that I'm super excited about
is the way in which themes used to be developed.
So before this release, you had to upload themes as a zip file,
apply the change, and then pray that it worked.
Well, now with a combination of the JAMstack work
that they have, you can actually combine that with GitHub
Actions and then sync custom ghost themes
to your live production site with each commit
you make to Git.
All right, I might give that a go in the future.
You've tempted me, Alex.
And so if you do, it's really easy to get started
with a Docker compose file.
You can then couple that with an nginx image from the Linux
server, guys, and have a let's encrypt TLS HTTPS encrypted
website.
We'll put a link to a sample Docker compose and nginx
config file in the show notes for you.
Ah, you're a gentleman.
Well, just a quick project off-grid update for me.
I've ordered my cameras.
I'll reveal which cameras here in the near future.
And I can tell you and I are going
to need to have a storage chat soon.
We got to talk some storage.
I got to sort my storage out.
That sends shivers down my spine, Christopher.
I love talking about storage, Alex.
Head over to selfhosted.show to send us your feedback,
comments, any other stuff that you think we should
know about in this space.
How I could do storage for multiple Raspberry
Pies in a tiny network with low power requirements.
I'd love to know that.
Selfhosted.show, close contact.
I am at Chris LAS on the Twitter.
He's at Ironic Badger.
Thanks for listening.
That was selfhosted.show slash four.
