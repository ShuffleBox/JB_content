You're now listening to Chris and the Badger, a presentation of the self-hosted podcast
with Chris.
A lot of options out there, but you can use this stack.
I've tested this.
I've refined it over the years.
And Alex.
I don't think there's a better solution really if you're willing to put the effort in.
And featuring special guests, Morgan the Doorbell Guy, Wes Payne, an RV, JDM, what?
Jonathan, hang on a sec, this goes on for a while.
Geerling and your hosts who are celebrating episode, oh, come on, alright.
And Jeff Geerling.
Okay.
Now your host.
Snap Raid and Merger FS and I endorse this media server build here.
Celebrating episode number 50, a long-term relationship with something.
What else could I do with it?
And that single spark is a huge rabbit hole.
Chris and Alex.
Well welcome to episode 50 everybody.
I hope you liked our special intro to celebrate the 50th episode.
Yeah, that's great.
Congratulations Alex to episode 50 and thank you to, oh yeah, in our Discord for making
that awesome intro.
Now he's got to make a special edition show themes all the time.
That was amazing.
And it's here Alex, 50 episodes and it takes a while when you're doing them only twice
a month.
It's been a long haul.
Yeah, 50, huh?
It means, what, nearly two years of doing this with you and to celebrate we've actually
got some merch available for the first time.
This really was all really driven by Alex.
He wanted to see this done.
Of course I wanted to see it too, but Alex really took the lead and made sure we got
something special for you guys for episode 50.
We have it up at JupiterGarage.com.
We've got a couple of special shirts, a Chris and the Badger shirt and a self-hosted logo
shirt if you'd like that.
And we also have a couple of exclusive stickers, a self-hosted square sticker and of course
a Chris and the Badger sticker, which would look great on your machine, I got to say.
Yeah, I think it would too.
I mean, I think it was when Drew, who's our editor sent me a little electronics project
full of parts and it said to the Badger on the corner, I was like, ah, we need to lean
into this a bit more, don't we?
Yeah, we are leaning into it.
I think with episode 50, we're just like, we're doing it.
We're doing it.
And it's because, you know, people kind of came together and helped us make it special.
So that's up there right now.
And if you are a self-hosted SRE, one of our members, then check out the post show and
check out your member feed.
We will have a special promo code for you to take a little bit off the gear, but it's
all actually at a really great price right now.
We're basically running it pretty close to cost as it is because we just wanted to have
something special out there for episode 50.
So all of it is up at JupiterGarage.com.
If I could just take a moment to interject and just say a huge thank you personally to
all of you for listening to all these episodes.
It's a real privilege to do this show with you, Chris, but also be able to present to
the audience that we have who engage on Discord so well and on Twitter and all that kind of
stuff as well.
So it's been a huge privilege for me and a big, big thank you.
And we want to say thank you to A Cloud Guru, the leader in learning for the cloud, Linux
and other modern tech skills.
They have hundreds of courses and thousands of hands-on labs.
So go get certified, get hired and get learning at ACloudGuru.com.
I'd imagine that you're still rebuilding from the great flood of a few weeks ago.
How's that going?
It is indeed an ongoing process, Alex.
We'll just say that, I guess.
I actually did pick up a couple of quick tips that I'll share in a bit in the show from
this entire experience.
So I guess there's a bit of a silver lining there to it, but I haven't replaced everything.
I have successfully saved a couple of items.
So that's awesome.
But for the most part, I'd say like 90% of everything was a loss.
Damn.
I mean, I hope you had insurance.
Well some of it's just old gear, you know, some of it's just old stuff like chargers
and whatnot.
I suppose I could probably try to do the insurance thing.
I have a box in the attic full of old English for some reason.
They made it across the channel, ocean.
I have a box full of English power adapters.
And so they're the sort of things that just hang around forever.
So maybe it's a good thing that you doused them all with, you know, 17 gallons worth
of water.
And I do need to kind of like change up my charging situation because see what I got
going in this area is a charging station, you could say, for all of the kids iPads and
switches and controllers.
And so this whole situation's actually inspired the wife and I to cap the water pipes at that
area, remove the faucet completely.
And then after we get back on the impending Denver road trip, we're going to build a shelving
system in there where the kids can slide their devices in the shelves and they'll have power
cords pre-run.
So the whole, the whole incident's actually inspired us to really kind of up our game
instead of just having like this loose area where we stash stuff near a sink.
But it just took the disaster to kick our butts into gear, I guess.
You know, one of these days I might convince you to get a 3D printer and custom print the
right size inserts for the devices.
There's been a couple of fixes and a couple of projects for this road trip a couple of
times now because this is one of the bigger trips because we're going to be on the road
for probably about 40 days straight.
If you think about that in terms of just wear and tear on a vehicle and the house box that
is running on top of that vehicle, that's a lot.
And so there's been a lot of things we're doing to prepare for it.
And I've thought a couple of times, a few things I'm replacing, like trying to get a
magnet on my door so that lines up with the sensor and trying to just position that magnet
just right.
If I could have built a little 3D housing for that, to just position it where I needed
it, it would have been job done.
It's on my mind.
It may happen.
You have a few options of cheap 3D printers.
I mean, there's a Prusa one that's the Prusa mini, it's about 400 bucks delivered.
I could make some, Creality makes some as well, but I had bad experiences with the Chineseium
printers.
And personally, I'm a huge fan boy of Prusa because they open source everything and nine
times out of 10, the print just works, which is what I'm in 3D printing for.
I'm not really in it to tinker and 3D print new parts for my printer.
I want to print cool stuff.
I just figured I'd wait for you to upgrade your current rig and then I'd buy this one
off you used.
That does tend to happen.
Yeah.
We'll see.
We'll see.
But we will be in Denver soon.
We're going to have a meetup.
Alex is going to be there running trivia night.
So go to meetup.com slash Jupiter broadcasting.
I think it's August 20th, a Friday that we're going to be in Denver doing the meetup.
There's also a meetup coming up in Salt Lake City.
Just only I will be there.
Alex won't be making it to that one, but details for that are at meetup.com slash Jupiter broadcasting.
It's going to be weird getting on a plane, I'll tell you that.
How long of a flight is it to Denver for you guys?
About three or four hours, I think.
It really is just the perfect midpoint between you and me, isn't it?
It's like right there smack dab in the middle.
Yeah.
It's either that or the middle of Arkansas.
Most of the crew is flying out with the exception of myself, of course my wife and Brent.
Brent, you know, from Brunch with Brent is flying into Seattle and then he is going to
caravan out with the family and I in Lady Jubes.
Oh, I'm so jealous.
Brent is a precious resource that we have to share out carefully.
We do.
Yeah.
Yeah.
Well, he'll have his fill of us, I think, by the time we're in.
I mean, you know, it's actually going to be pretty great.
The kids are excited.
This is going to totally, this is going to enshrine him as Uncle Brent at the end of
this road trip, you know, so that'll be pretty great and I'm really looking forward to it.
Well, I'm extremely jealous of that and I hope you have a great time on the road.
I've always wanted to do Salt Lake City.
I never quite made it that far north in Utah.
We did Arches and Dead Horse State Park and that kind of stuff near Moab a couple of years
ago.
That was amazing.
If you're ever in that area, amazing, amazing stuff.
Absolutely love it.
Totally.
You're absolutely right.
It's like another world.
It feels like you're on a set of Star Trek when you're in Moab.
Mars.
You know, Salt Lake City was a promise I made to the audience because it's not like exactly
on our way to Denver, but I made a promise to the audience that when we could, we'd return
to Salt Lake City because we had to skip it.
We had a whole thing planned and we had to skip it.
So this is making good on a promise to the audience in Salt Lake City.
Perhaps this is an entirely gross misrepresentation of Salt Lake City, but it's kind of colored
to me by the Book of Mormon, if you've seen that.
I mean, you know, it actually just sort of tangentially related to that.
When we were trying to book a venue, we had to listen to a whole bunch of rules about
alcohol that we have never had to sit through from any other state.
It's a thing.
It's a thing.
Well, when you've had one too many beers after a meetup, the last thing you want is to be
fumbling around for a phone in your pocket or trying to remember what voice command you
programmed into the lady cylinder this week.
Have you got a solution to that?
I had a fire tablet that worked pretty well before it got water destroyed because it fell
out.
It was off the wall.
It fell into the water bath.
But also, you know, Brent's going to be on board and he doesn't know all those special
commands, and he's going to want to control things.
So I wanted to get that tablet on the wall replaced, which runs my home assistant dashboard
24-7 because it makes it easier for the family and it makes it easier for guests.
And yeah, it makes it easier when you just can't remember what, you know, what did I
call that group of lights again?
I can't remember.
So out of a bit of, I'd say maybe laziness, and out of a bit of budget concerns, I've
been picking up the Amazon Fire tablets.
And I don't really want to invest in a system where I need to reflash these things.
It's not that I'm against it.
I used to love doing that.
It's just kind of, it crosses an effort line for me that I'm willing to put into this kind
of device.
Beyond that, I'd rather just get like a used iPad.
Well, we talked a little bit about flashing lineage on to my old Kindle Fire a little
while ago.
Right.
And for me, it's just not quite worth the effort.
The tablets kind of suck already.
And so if I have to do all this extra work, it kind of like loses the value for me a little
bit.
I wanted to see if I could find a nice sweet spot where I could still pick up a Fire tablet
for a great price off of Amazon and then just easily and quickly modify it for my needs,
which is mount it to a wall and run home assistant dashboard all day.
And so a couple of projects that I found made it exactly what I was shooting for that kind
of like that sweet spot in the middle.
And I picked up a 10 inch Amazon Fire tablet.
I opted to go for the ad free one because again, I'm not going to reflash this thing.
But if you were going to reflash the thing, you could, you could save a few bucks and
you could get the version that comes with ads on the lock screen, which is so obnoxious.
In fact, I've bought the no ads version in the past and still received the version that
comes with the ad so I could totally understand if you wanted to reflash it.
But I that wasn't what I wanted to do.
I wanted to use this app that I found called wall panel.
It's an Android application for web based dashboards, like home assistant, like that's
what's in a lot of their screenshots.
And you could sideload it if you want.
But they've also submitted wall panel to the Google Play Store and to the Amazon App Store,
which means it makes it stupid easy to get it up and going on a Fire tablet.
It has really great fast camera motion detection to so now what I can do is sleep my screen.
And then when the front facing camera detects motion, it wakes the screen up.
And that's actually surprisingly handy.
You approach the tablet and as you're approaching it, the screen just becomes available.
And then I have it set to like a three minute sleep window.
You can have a pin code option in there to kind of lock the screen out if you don't want
to just give anyone access to your dashboard.
And with the ease of access and installing this thing and the power options for keeping
the screen awake and all that kind of stuff, it gets me 90% of the way there with a stock
Amazon Fire tablet.
So it's wall panel.
I'll have a link in the show notes for that.
So what if I did want to reflash it or tinker with it?
What can I do there?
There are a couple of options there.
The one that I think I'd recommend like the next step up from wall panel.
You may have seen this over at the XDA forums, it's called the Amazon Fire Toolbox.
And this uses the Android debug bridge to apply tweaks to the Fire tablet from completely
reflashing them to just doing things like maybe installing Google Play, or removing
some of Amazon's annoying software that's on there to just completely replacing the
version of Android if you like.
The downside is you got to use Windows and I just don't really have access to a Windows
machine.
It's a basic app.
They say they're going to work on Linux support, but Datastream33 who kind of hangs out over
the XDA forums, he's a senior member over there.
It's his project or their project and they're a Windows user right now.
So they're making it for Windows.
So it's not really something that I have quick access to.
But the idea is you plug your Fire tablet into your Windows box, you load this toolbox
up and then it gives you a GUI with a bunch of options in there that just kind of can
go in there and lobotomize the Amazon stuff out of the tablet if you want and give it
actual genuine Google Play Store APIs.
Who doesn't want to lobotomize a tablet, huh?
Well, I mean, have you seen the neg where they put on these things?
They want you to buy everything that Amazon makes and they want to turn it into an Alexa
and they also want you to turn it into an Audible station and they also want you to
turn it into a Prime streaming machine and they put all this stuff all over it.
And I just want it to run one single app.
You know, I was worried about this kind of thing because in days past you had to root
things and reflash bootloaders and that kind of stuff.
And I read a long time ago that warranty claims were refused if people had done modifications
like this to these ad supported devices.
Is that still the case now?
So the nice thing about the toolbox that we were just talking about from XDA, that's not
messing with like the system restore partition on your fire tablet.
So you could go in there and like lobotomize the Amazon stuff out of the image.
And then if you needed to reset it to factory defaults and it just restores it to a stock
fire tablet.
So your warranty is good if you just did that before you sent it in.
Yeah, that makes sense.
I mean, it's just software, isn't it?
I mean, unless there's like an intrusion detection in the firmware, I don't see how they'd ever
know.
Well, yeah, they could do that, I suppose, but thankfully they're not.
But that's where wall panel is kind of this nice starting point.
And you could just start with that for these on wall dashboard.
This is, I think, such a great way to make home automation more accessible to your family
is a visual way for them to control things.
And with the home assistant dashboard setup, you could make something really appealing
to people and it renders really great on a 10 inch tablet.
And wall panel has an option to turn on by default when the tablet boots.
So it kind of just launches immediately and kind of papers over all that Amazon stuff.
And it really gets you like 90 percent of the way there.
Super quick.
What's the last 10 percent?
I think the last 10 percent would be replacing the OS, you know, because then you could put
something a little more modern on there because Amazon's fire Android OS space is often behind
mainline Android.
Well, yeah, I mean, I saw today just in the J.B. Telegram chat that people were talking
about the I think it's like a 12 year old Kindle is getting Internet access revoked
or something by Amazon, turning it into a waste essentially.
You know, that's a tricky one.
The cellular networks eventually get shut down.
I think things like on the 3G network or something, right, because it's it's pretty old.
I mean, yeah, eventually they got to shut down the network.
But that's it really kind of does make you think like if you want something to last a
really, really long time, you've got to look at ways of self-hosting it.
And maybe some some devices just aren't aren't the right fit, although you could argue 12
years is a pretty good value proposition when you consider new Kindles are like 100 bucks.
Like back then, those Kindles were not that cheap, but new Kindles are a lot cheaper.
Well, very good.
I think next time there's a Black Friday sale or some kind of Amazon invented Prime Day
thing, I might pick up a Fire tablet and just give that a go.
The one that I flash with Lineage a little while ago has been doing perfect duty, actually,
because we've been using one of the Wyze Cam V3s with that Lineage OS 7 inch Fire tablet
from half a decade plus ago as our baby monitor, and it's been working brilliantly well.
So you can breathe new life into old dogs with this stuff.
As part of the episode 50 festivities, I wanted to complete a project that I've been kind
of working on in the evenings off and on over the last six months or so, which was a searchable
archive of our show notes.
And a huge thanks goes out to the orange one from Discord who rewrote, I think, something
like all but three lines of my code to scrape the Flyerside website and ingest the HTML
and the XML feeds and spit out what eventually turns out to be an MKDocs based searchable
archive of the entire Jupiter broadcasting suite of shows.
That's so great.
I feel like he kept those three lines of code in there just to be nice to you.
But it's so quick and snappy, and it makes it really quick to find stuff that eventually
this is going to get integrated into the site itself.
But for right now, it's just a great way to like, I know we talked about something.
When did we talk about it?
Like it's good for that kind of stuff.
I can't tell you how many times a week I get pinged with, when did you talk about X or
when did you?
Yeah.
You know, great example is the Lineage flashing of the 7 inch Fire tablet.
As we were talking just then, I just typed into the search bar LineageOS and boom, up
came episode 44 of Self-Hosted.
There we go.
Job done.
So it's already working for me.
Now you can find this thing at notes.jupitabroadcasting.com.
We've got Coder Radio, Jupiter Extras, Linux Action News, Linux Unplugged, and of course
this here Self-Hosted podcast.
All right.
Well, this is the Self-Hosted show.
So you got to tell us a little bit about how you set it up and what's running.
Well, one of the coolest things that Orange managed to do was dynamic theming between
the different shows.
So I don't know if you're on the site right now, but if you click between the different
shows, you'll notice the top header changes.
So Self-Hosted is orange, Coder Radio.
I do like that.
Yeah.
That's so cool.
Linux Action News is red.
It's all backed by MKDocs and he's done a bit of dynamic CSS switching between the different
tabs, which is pretty cool.
But what we're doing is we scrape all of the show information that's on Fireside and we
use Fireside as our podcasting publishing platform and we use that as a source of truth.
And this Python script then takes that scraped data, uses what's called a Ginger 2 template
to substitute things like the tags in there, the hosts, any of the links that we put in
the episodes, that kind of thing, and it spits out a plain markdown file.
MKDocs then ingests that plain markdown file and bada bing, bada boom, we have an MKDocs
site.
Very nice.
But we are relying on a small element of non-self-hosted software.
We're using GitHub Actions and we're running it through a con job.
So at five or six a.m. every day, it just goes and scrapes the JB site.
So you'll see that these show notes are getting automatically updated.
This website gets automatically updated every day.
So it's never out of date.
Linode.com slash SSH.
Go there to get $100 in 60-day credit towards a new account and you go there to support
the show.
So it's Linode.com slash SSH.
And yeah, of course, notes.jupiterbroadcasting.com is running on Linode.
Everything we build that we want the audience to be able to use, we host that on Linode
because their infrastructure is killer.
And the price is great, too.
In fact, Linode is 30 to 50 percent less than the other big hyperscalers out there.
And they've been around since 2003 doing this.
So for 18 years, they have remained focused on building out the greatest cloud that you
could possibly ever want as a Linux geek.
I mean, it's like a playground.
I go up there and sometimes when I just want to try out a couple of different projects
for talking about on the show, like, how do you know if something is worth proceeding
with?
How do you know if it's going to work for you when you're building out something like
you have a project?
Like, how do you know if this is the stack you want to use?
Well, I deploy it on Linode often with some of their one-click deployments.
And I'll test it out and I'll run it for a couple of days and see how it works.
And often, I keep one out of two or three things and that eventually turns into a show.
And then we create a project around it and we end up putting it in production.
And the entire time from beginning to end, we're doing it all with Linode because they
just make it simple, it's affordable, and it's easy to work with the team too.
And then on top of that, they have a really handy API that you can either use directly
yourself dramatically or do like I do and just kind of take the lazy route and use their
command line client.
So I'll do this to like pop a file up on their S3 compatible object storage and I can market
public and generate the URL in like three or four seconds.
And this is awesome when we're trying to get clips ready for a show or something like that
or we're collaborating on a project or recently, I sent a big batch of files to somebody and
we were going back and forth like, how are we going to even share this file?
I'm like, hold on a second here, I'll get you a little zip file with the URL.
I did that with a video of my daughter the other day that was like 170 meg to a parent
and Telegram was like, nope.
So I just used the object storage and it worked great.
Yeah.
And the command line client is like the pro way to get things up there because what I
do cause I'm such a nerd is I have a awake dropdown terminal where it's always like in
one of the tabs.
So it's like up, up, change a couple of things, hit enter.
It's great.
But on top of that, they've got cloud firewalls, they've got VLAN support, they have a really
powerful DNS manager.
They're beginning to roll out bare metal servers and they also work with infrastructure management.
So if you want to plug in with Kubernetes and Terraform, maybe you want to even just
use Linode as part of a multi-cloud strategy.
They're great for that too.
But 66% of companies will save money working with a mix of alternative cloud providers instead
of just relying on like one big hyperscaler.
So it's worth just looking into that.
Linode could be part of your multi-cloud strategy.
And if you ever run into any trouble, you ever need any help, they've got the best customer
service in the business.
And when your business is running on Linode, it's nice to know that's available.
And their support for the community runs deep.
They're making it possible for our team to get together in Denver.
They're making the whole road trip possible.
That's pretty awesome.
And not only that, but they're going to be bringing swag and giveaways like raspberry
pies and all kinds of awesome shirts they've made just for the trip.
It's just going to be a whole party made possible by Linode.
And they're doing that just to have a chance to connect because like us, they miss seeing
people.
It's been a while.
And Linode has been so enthusiastic about supporting our reunion.
But there's so many things I could go on about, you just got to go check it out for yourself.
You got to get your hands on it and see it.
So go use that $100, maybe learn something and support the show, linode.com slash SSH.
Now I came across a thread on Reddit a couple of weeks ago that Sure, who's an ISP in Canada,
was blocking Plex because it thought it was suspicious, which tingled my spidey sense
a little bit.
Because I often tell people that I share my Plex server with that the ISPs don't care.
It's all just encrypted traffic.
They have no idea what is going on, right?
And so I dug into it a little bit and one of the comments has some really interesting
information about how the Plex web app works, which I thought might be interesting to share
with you all.
Now Sure Protected Browsing uses a service called Zvelo, which happens to flag app.plex.tv.
And the way that the Plex app works in your web browser is it downloads the code to the
browser and then runs it locally.
So if you can't access or the web URL is blocked by an ad blocker or some kind of safe browsing
plugin, it just can't download the code and you can't run it.
And because of this, it could affect things running a web app on a TV, for example, might
suffer the same fate.
And I just thought it was really interesting that these apps aren't local, they're not
locally rendered, which is why when Plex update their UI, you don't have to download anything.
It just automatically happens.
Plex clients for Android, Android TV, iOS, TVOS, et cetera, aren't affected because they
are full versions of the app.
So if you have a smart TV or hosted Plex web app.plex.tv, you're probably going to want
to find a way to route it around something like Zvelo, which is what Shure uses to avoid
this issue.
It's hard to not be skeptical, safe browsing, that just sounds like they're trying to reduce
load on their network, doesn't it?
Or perhaps encourage people to sign up for streaming packages.
I absolutely find it abhorrent that Verizon or AT&T, they all do it here, have different
quality profiles of Netflix videos or YouTube videos and they lock you into certain quality
profiles unless you pay them more money.
This is one of the reasons I decided to set up my PEP Wave with their Fusion Hub VPN solution
because it routes my traffic through a VPN and they can't tell what it is and so they
don't re-encode the video for me or actually what AT&T does, each provider does a little
bit differently.
And AT&T is particularly frustrating because they just sort of brute force it so that way
the YouTube client and the Netflix client, they just sit there and bang their head against
the video streaming service asking for the best quality and it keeps failing and failing
and failing.
And then when the client finally to say, okay, fine, I'll go down to the next lower quality,
it tries that, that fails.
And then when it finally goes down to 480p, then it plays.
So you just sit there waiting while your carrier is blocking these connections.
You wait with your little spinner on the screen.
It's so frustrating.
And to see Shaw do this for Plex, it really, it stinks.
It stinks because the reality is they know what's going on over that Plex port.
They know it's not some sort of attack or some sort of weird malware.
They know it's video streaming.
And my reading of the law is the copyright violation really happens when you download
the file.
I think, I don't know, I could be wrong if anybody wants to let me know in a clear, explain
it to me like I'm a five-year-old way, cellphones.show.com, but my understanding is you're not actually
violating copyright.
If you stream it, that can't be right.
But either way, I don't know how Plex scoots around that particular issue, but regardless,
it's not Shaw's place to enforce copyright law.
It's just not, or, or IP law.
It's just, they should just be passing the bits.
Yeah.
I don't expect my water company to choose which bits of water I get.
Yeah.
Although you do want them to keep the bad stuff out of the water.
So that might be a bad analogy.
I know Alex, you are, you are very organized compared to me in your Plex collection.
Like you have collections for everything.
You've got nice consistent album art.
Like at some point in time, you must've just sat back, had a drink and spent like hours
organizing all of your metadata.
Well, I am now.
This week I've found possibly my new favorite Plex pick of the year, Plex Metamanager.
This is a Python script and it is awesome.
So this thing will go through using the Plex API of your local Plex server.
It uses the token that you can generate by going to view XML and get the little token
from up the address bar.
And what it will do is it will basically match the TMDB ID of the movie against a list of
different collections.
So it's built me in my Plex library, for example, a bunch of different collections based on
genres.
Okay.
Yes, I already had genre filtering, but this is using Plex's smart search.
It's just really cool.
You've got to go check it out.
I've got now a nineties, a noughties, a tensies, a twenties collection in my Plex library as
well.
It's just really, really cool.
But what got me looking at this in the first place was my wife and I were browsing through,
I've got about a thousand movies or so on my server.
And we were just browsing through the other night saying, what should we watch?
And neither of us could come to any kind of agreement about what we should watch.
I know it's so true.
Well, first of all, why don't I have a bunch of collections of stuff that's recently added
is one thing that Plex does out of the box, but there's no real kind of trending kind
of collection like there is through the Plex meta manager, like a Netflix or Amazon prime
would give me.
And with this, I'm able to sort of say, Oh, Hey, yeah, that, that new Wonder Woman movie.
Okay, cool.
I could go and watch that tonight.
So that was really the motivation behind it.
But this, this script takes a little bit of elbow grease to get set up.
The documentation is very good, but it's also very verbose.
So it almost put me off, but I'm very glad it didn't.
You need to configure a couple of YAML files and then they actually provide a Docker contain
that you can run the Python script out of, which just floats my boat.
I have it set to run every day through a system D timer.
And the main reason that actually we wanted to go into refreshing all the metadata every
day was because of the critic ratings that Plex has.
I noticed that several of the movies that I had, the critics rating and the rotten tomatoes
rating didn't really seem to line up with what I thought the movie was, like not even
a little bit.
And it turns out that it was just a few thousand votes on those really early scores.
And so the Plex meta manager goes through every day and refreshes things like critic
ratings.
It has a cache, which you can configure, and I think I've got mindset to 30 days.
So it's not going to go and scrape every movie every day, but you know, once a month, I think
updating my critic ratings is probably worthwhile.
So this Python script, you set it up to run through system D every night, and then it
goes out and gets all the updated information, and then it writes it to the Plex database
directly?
Yeah.
So if you're running Plex in a container, are you running this script in that container?
How's that working?
You supply the Plex server URL.
So in my case, it was just 192.168.port.32.400.
So it's talking Plex.
It's not like crawling the file system.
No.
Gotcha.
And then how does it get access to the database though?
Through a token.
So when you go into your media library, there is a Plex token that you can get.
You can click on, I think it's get info and then view raw XML.
And as part of that XML payload up in the address bar, there is a, it's like a 20 character
long token.
You give this script that token and then it authenticates against the Plex API and off
it goes.
That is so cool, Alex, man.
I love the idea of going out and getting the updated ratings because I have observed that
same exact thing and I'm really glad you dug into it because I had wondered how exactly
does that work?
That is so cool that it goes out there and gets the trending stuff too.
I noticed too that you came across Movie Match, which is what I actually thought was going
to do some of this.
Yeah, it's like Tinder, this thing.
Not that I've ever used Tinder because I've been married for 10 years, but.
Now you're more of a Grindr guy.
Oh man.
No, I'm not.
I'm not, but it is like, it's actually more of like, uh, it's more of matching tastes
up with a group, right?
It's more about like, Hey, what do we all want to watch together?
And when again, going back to that problem, when you've got like a thousand movies in
your library, it's harder.
If a group of us were here in the studio legitimately, if we were all just hanging out, you, me and
everybody were hanging out on the couch and we were just flipping through live TV and
like Star Wars was like on one of the cable channels, we would just watch it.
There wouldn't even really be a debate.
That's what we would put on.
But when you actually have to choose and you want a group of people to decide, it's a real
first world problem.
Me so like Star Wars.
Those ones even.
Yeah.
I was a kid when that came out.
Episode one, I was, uh, I was like nine or 10 when that came out.
And I remember we were on, this is one for the British audience.
We were on a Norfolk Broads holiday and we were in lowest off that night and we all,
I remember walking down the road with my dad to go to the cinema from the boat to go and
watch episode one.
And it's just one of those things that stuck in my memory.
Ah, that's great.
How can you not love pod racing?
It's just the coolest thing ever.
Yeah, that's true.
The pod racing was super awesome.
Yeah.
I mean, I enjoy the Star Wars movies, the prequels, not as much.
I think the writing's horrible, but I'm more of a Star Trek guy.
I've kind of lost track of what's going on these days.
So speaking of this movie match thing, uh, essentially what you do is you and your partner
or your group of friends set up, uh, this app to talk to your Plex library and it presents
you with a random bunch of movies that you swipe right, swipe left if you like it or
don't like it.
And if you and your group end up with a common set of movies, it will show you at the bottom.
Here are the three movies that you all thought were worth watching.
So you just narrow things down for you.
You could set up like a group chat, like movie night group chat, and you drop that link in
there a couple of nights before and have everybody go through and swipe right and left.
And then when it comes time, use the new Plex watch feature and just watch it all together.
Socially distanced movie night.
Hey, it could be a thing again.
And now we, now we have the tools we need.
This is really cool.
So we'll have a link in the show notes or you could just Google search for movie match.
It's just one word, but links will be at selfhosted.show slash 50.
Now my final Plex pick for this week is a no spoilers script.
Have you ever been watching a TV show and seen an episode, three or four episodes ahead
in Plex and you see a character whose current storyline doesn't fit with that thumbnail?
Yes.
Well, this script will blur out the future episodes you haven't yet watched.
That's great.
So is it, it must be going through finding that JPEG and actually like applying a blur
to it.
That's funny.
That's really funny.
It will blur out the episodes based on the user who sets it up.
So for example, my server, let's say Catherine had her own account, my wife, all the episodes
I hadn't watched would be blurred even if she'd watched them.
So it's not perfect, but it's better than nothing.
Mark my words.
Plex will introduce this feature to the Plex client.
My prediction right here on self hosted 50 because in fuse the, that what I've been raving
about recently, which is also a Plex compatible client does this.
It's an option in the settings and it's a game changer.
It's what actually switched us over using infuse and now I've just stuck for all of
the other reasons, but it, it pre blurs the image and the description.
Once you've watched it, it unblurs all that stuff and it's just goes based on the watch
status and there's just one user within fuse.
But if you are on an Apple TV platform and you want to use infuse to watch Plex and would
like to do that, it's just in the settings and we love this feature.
So I got to imagine this is something Plex is going to implement too, just because it's
so fricking handy.
Yeah.
I'm still butthurt about this Nvidia shield update.
I thought I'd get used to it and I thought I wouldn't care too much, but I tell you what
my shield downstairs doesn't have the update, but the one upstairs does.
And the one upstairs is really beginning to grate on me.
So I might have to get an Apple TV soon.
I want to take a moment and thank our friends over to cloud guru for their support.
And I want to mention to you, they have a Linux file sharing course.
It's a deep dive on Linux file sharing.
It's a standalone course, but it's also part of a learning path intended to prepare you
for the LPIC2 Engineer 202 and 450 exam.
In this course, they're going to cover the basics and advanced configurations for Samba
and NFS, including configuring file servers, exporting file shares, user authentication,
client configuration, and mount options.
We'll have a link for that in the show notes, or you can go to cloudguru.com.
And also we have cloudfree.shop sponsoring this week's episode.
You can go to cloudfree.shop to get a pre-flashed TAS motor smart plug, use the coupon code
self-hosted to get a dollar off per smart plug.
And of note, the new version two smart plug has been released recently.
And this one's really cool because it features energy monitoring.
So not only do you have a free and open source firmware on this thing from the factory, but
I can now also monitor how much power my server is using without needing to tie up my kilowatt,
for example.
It's super cool.
So go to cloudfree.shop and use the coupon code self-hosted.
Greg writes into the show, Chris and the Badger, I love the show.
It inspired me to learn Docker this past April and convert all of my self-hosted services
to Docker.
I built one big Docker compose that provides the MariaDB for various components, plus the
swag and SSL for all my external services.
And I've moved over to Airsonic Advanced and Booksonic and Ghost as well.
All tips from the show, but here's my question.
How do I manage updates for the various service images?
Most of the compose entries are built with the latest tag.
Should I move to a specific version and definition and then rebuild it on a regular basis?
And for in-container security updates, how often should I repull the images to keep them
up to date?
Perhaps there is a guide or a white paper on different approaches.
I think Greg just needs some help, Alex.
Well, my advice would be straight off the bat, don't run latest because it's just a
disaster waiting to happen.
As I found out with my next cloud this week, which broke again.
No, no, no way.
Even though I talk about it in the last episode and I've pinned it to a specific version,
you know, a major version.
So 19, 20, 21, something like that.
But within those certain tags, sometimes you've got to watch the developers as well even because
they will just released all the security patches and all the updates for the entire life cycle
of that major version.
So you will get a lot of updates even sometimes when you pin specific versions.
So the only way to be sure is to go to the Docker hub page for a specific image and look
at the list of tags that are available.
And some providers, some developers offer specific tags to the exact specific version,
which ties to a specific commit.
Others like next cloud offer a stable version of a major version, lots of different ways
to do this particular thing.
But for apps that don't matter, maybe you'll get away with latest.
You know, things like traffic, for example, is probably a good idea to run that on latest
because that's public facing.
So you want the latest, you know, CVEs and things patched in that one.
But for the rest of them, I would probably steer away from latest just because at some
point or other, it will bite you.
Bevan writes in and he is looking for a security camera system for a vacation house.
So I think one that he probably isn't attending to be at very often.
He writes, most of the options seem to need a cloud component in order to operate, which
is a bit concerning since the systems are not cheap to install.
I'd be interested to know what you guys use and maybe what other listeners might have
installed.
Cheers.
Love the show.
You can go up notes.jupitabroadcasting.com and type in Blue Iris because that's going
to be my recommendation.
We've got a couple of episodes where we've talked about it in the past.
Episode 43, episode 28, 36, and we've talked about it quite a few times.
The too long didn't listen, though, is Blue Iris is a Windows app.
So you're going to want to have some kind of a system that has a quick sync enabled
CPU.
So something like the HP290 slim box, which you can pick up off eBay for about $130 at
the time of recording.
That has an eighth gen Intel CPU in it, which has quick sync.
You install Windows on there.
Yes, I know.
Sorry, Windows.
And then Blue Iris on top of that.
And then what you will need to power the hardware is a POE switch connected to POE cameras.
And you can usually get those for anywhere from $10 or $20 from Alibaba, all the way
up to $300, $400 each if you want to buy UniFi gear.
What I tend to stick with is the price point of around $50 a camera, unless I absolutely
need 4K.
And then it's about $100 a camera.
But it's not terribly expensive.
The cameras are the cheap part, essentially.
Running Ethernet is going to be something of a consideration because that's how the
cameras get their power.
And then also, you might want to upgrade a couple of things in the HP box are recommended.
It comes, I think, the one on eBay with a 500 gig spinning drive, for example.
So you might want an SSD for that as well.
But that's a pretty solid setup.
And there are lots of guides on YouTube on how to set up Blue Iris.
And recently, they've got some really cool features in there with DeepStack to do object
detection and that kind of stuff.
So Blue Iris gets my vote.
Right.
The cameras going over Ethernet are going to be a rock solid setup.
And I think that's really key is a lot of the cloud solutions are all Wi-Fi cameras.
And Wi-Fi cameras are going to work 90% of the time.
But wired cameras are going to work 100% until there's like a hardware failure.
Now with Blue Iris, Alex, because I'm unfamiliar with it, is there a remote viewing component
so we could pull it up on a mobile device?
It's so cool.
There's an app for all the major mobile platforms, as well as a web browser, like a web interface.
So I can just type the URL of my server, which happens to go through my traffic reverse proxy.
And straight away, I'm thrown into a web interface that is HTML5.
And I can see all six of my cameras, boom, right there.
So if I hear a noise, or the doorbell goes, or something like that, I just type in bi.mydomain.com
and boom, straight in the browser, I'm good to go.
And that's another thing about the local wired systems is those camera feeds are going to
come up a lot quicker.
The cloud-based systems are going to have to connect to the service first.
There's usually somewhere, like on a good day, a three-second delay.
Sometimes it can be a 30-second delay.
I don't like it.
Now I normally would sit here and I'd tell you about my Wwise system.
I have the WYZE cams that are going into a Shinobi box.
But I don't love this solution because the cameras are not super reliable.
And so I would not recommend them for a security system like what you have here.
I have it for, we're off-grid somewhere and we come back and somebody's broken into our
rig.
I want to have a good shot that I've caught something on camera.
That's really what I have my system for.
But I don't know if I would trust it to run 24-7 because they're Wi-Fi cameras.
They're doing it over RTMP or RTSP.
It's just not super reliable.
Now I've never used the next system I'm about to talk about so I would not normally recommend
it.
However, I have gotten a couple of emails and people have said that if you want a system
that's kind of like a midway system, I've heard that the Arlo camera system is good
for that kind of thing.
You can get it like on Amazon in like a three to six camera kit.
And what's kind of different about this is it has a base station unit that the cameras
connect back to locally on your LAN and that's where the video is stored.
And so that does seem compelling to me and I guess it has a pretty flexible setup system
and you can get a three camera kit for 385 bucks off of Amazon when it's not on sale.
And I don't know how great it is but the people who've written into the show seem to really
like it.
The cameras seem to work indoors and outdoors.
Never tested it myself but if I had 385 bucks to burn, I may give this a go one day because
I do like the idea of making this as much of an appliance as I can and I am not really
in a situation to run Ethernet and do POE.
Now I do have a couple of those Wyze cameras plugged into Blue Iris as well.
One thing of note though is that the new V3 cameras don't support the RTSP firmware yet.
So if you're thinking about getting those cheap $20, $25 Wyze Cam V2 cameras, just be
aware you'll need to put a custom firmware on there.
Yeah, my advice would be don't do Wyze right now.
The Wyze 2 is just not fast enough to do the feed reliably and the V3, while it has a faster
processor and better optics, doesn't have the firmware yet like you were saying.
And I would hold off on purchasing a Wyze camera system until then because what I like
to do is bring all those feeds back into Shinobi running on my Raspberry Pi.
But with the V2 Wyzes, they drop off several times an hour right now.
It's no good.
There's gaps.
And I think the V3s would be a lot better but you have to wait.
So I'd say hold up when we come back on the show and say we've tested it, go for it.
But in the meantime, if you can, wired is the way to go.
And don't forget, as we talked about at the top of the show, we have a big Jupiter Broadcasting
Meetup coming up very, very soon, both Salt Lake City and Denver.
And don't forget to go to JupiterGarage.com and grab some self-hosted 50 merch.
For the next couple of weeks, we're running member pricing on the store to celebrate Episode
50.
So you got a limited amount of time to get over to JupiterGarage.com and pick yourself
up some stickers or shirts or I don't know.
There's all kinds of stuff over there.
I'm not you.
I don't know what you do.
And if you want to support the show, you can get a self-hosted dot show slash SRE.
I got a memo the other day that we might be doing a special discount for all original
merch.
That's right.
Crazy Self Hosted is giving away prices.
We're dropping prices.
We're slashing prices for members only.
We'll have a discount code that will take a little bit off any original merchandise
items.
And when you go to JupiterGarage.com, there's a products drop down menu.
And if you choose original merch, members are going to get a percentage off all that.
We'll have details in the members only post show coming up.
Absolutely.
Now, for all the ways to go and get in touch with us, you can get a self-hosted dot show
slash contact and you can find me on Twitter at ironic badger.
I'm there too at Chris LAS and this here show for news announcements and whatnots at Self
Hosted Show.
Thanks for listening, everybody.
That was a special episode 50.
