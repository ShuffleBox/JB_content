I'm not sure what it is about you today, Alex.
You just kind of have a glow about you.
This episode of self-hosted is brought to you by the sun.
Solar powered podcasting.
That is awesome.
Yeah, man.
Wow.
Yeah.
And you got quite the solar stuff.
I mean, compared to the one that I have on my RV roof, which is, um, a lot smaller,
you got a lot more roof to work with.
I don't have a need to drive it down the road.
Do I?
So yeah, I've gone for an eight kilowatt solar system on my roof.
That's great.
And so it actually means like legitimately it's running everything.
On a day like today, in the middle of June, when the sun is beating down real
hard all day, I can actually run both my AC units, all my servers, fridges,
the TVs, everything, 100% on solar for about two hours.
And I know something that's on your mind is like eventually putting some
sort of battery solution in there.
There's of course, reasonable solutions, but if you could just Star Trek Q style,
snap your fingers and have a battery solution materialized out of thin air,
what would be your ideal setup?
Uh, you know how I like to make stuff.
I've, I've been watching videos of this guy called, I think, uh, is it Jerry Garcia
or something like that on YouTube for years and he builds his own batteries,
power walls out of old electric car batteries.
Yeah.
That's what I want to do.
I just think that'd be the coolest thing in the world because cars need a very high
peak voltage to accelerate the mass of the vehicle, whereas a house is a much
more constant, much less peaky load than that.
So you can get away with old air quotes, dead car batteries that are
actually suitable for, for houses.
I, you know what I didn't even appreciate earlier is that you had your air
conditioning going.
Two units as well, because, uh, I live in one of these crazy big American houses
that has a unit per, per story.
That's so cool though.
I mean, you're like not even hitting like the power grid
to run air conditioning.
That's that's awesome.
Yeah.
At one point today, the solar was reporting 6.4 kilowatts of power.
So 6,400 Watts, I suppose.
I dream one day of, of building a big, big array, just something, even something
around that size, I think it'd be perfect for what I have envisioned for the future.
24 panels.
I think, um, solar edge is the company that I went with.
Um, yeah, and they've got an online monitoring platform, which home assistant
of course talks to, and my there's a local Zigbee gateway that talks to the
inverter, uh, as well to provide that information.
In fact, when they were installing it, it was kind of funny.
The, uh, the installer knocked on my door and said, Hey, where's your,
where's your router?
And I'm like, hmm.
Is that your yank router?
Why do you want access to my, to my router?
And, uh, he was like, Oh, I've got this Zigbee box.
I want to plug in and I'm like, why?
And he told me about everything it does and I thought, Oh, that's so cool.
And I was like, what do you need?
He goes, I just need an ethernet port.
I'm like, Oh, Oh, okay.
I got you covered.
That's pretty great.
So, uh, now it's connected up and, uh, it all talks back to the equipment over Zigbee.
Wow.
That's wild.
That is, you know, we also learned recently that Zigbee is used on the Mars helicopter
opportunity, or no, I'm sorry, Ingenuity.
And that's how it talks back to the Mars rover is over Zigbee.
Really?
That's cool.
Yeah.
So Zigbee is getting, it's getting used on Mars to communicate with the
little drone helicopter.
Well, that's pretty cool.
I'll be interested to follow your journey to see how that setup evolves.
And then eventually I can't wait to hear stories of you up there on the roof, trying
to clean those panels after some storm or something.
Yeah.
You know, it's coming.
Yeah.
Well, I have a confession to make before we get too far into the show.
So first I want to tell you about our friends at a cloud guru.
This episode is brought to you by them.
They are the leader in learning for the cloud for Linux and other modern tech
skills, hundreds of courses, thousands of hands-on labs, get certified, get hired,
get learning at a cloud guru.com.
So while I was in Montana, I decided to be just, I guess, like extra challenging
and give myself more stress during my trip.
I decided to just to kind of throw a wrench at everything and do a episode of Coder
radio live on the road.
Not that this is impossible, but when you know, I've pre-recorded everything and
I'm only doing one live show on the road.
Like I'm not really in the right head space.
I haven't really checked everything out.
I didn't really think through it methodically.
Like I would, if it was a whole series of shows I'm going to produce.
And one of the things I didn't really have dialed in before I left for Montana.
Was remote desktop control and it has to be remote desktop.
It can't be SSH.
I actually have to see the console because of the audio tools we use in our mixer.
I have to see the console and I, I thought, well, you know what I'll do.
I know I shouldn't do this, but I don't have time.
I'm I'm going to throw team viewer on these machines.
And when I'm in Montana, I'll pull up team viewer and I'll get everything working.
I'll get the stream up over team viewer.
It'll be fine.
And for about five minutes, it was, um, I got re I got remoted in.
I realized, oh, this machine, you know, it's not running quite right.
It needs to be rebooted.
So I restarted the machine I was remoted into, which is fine.
Right.
That's fine.
It comes back up and team viewer, it has like some detective code in there that
detected that I was doing admin like functions, remoting into machine rebooting
and then trying to reconnect to it after a few minutes.
And it detected that I was doing these admin like functions and then disabled
my ability to connect for like 15 minutes.
Now that sucks because I'm an hour out from going live and I want to get the
stream up, I like to get the stream up about an hour before we start.
So people can start, you know, assembly 15 minute time.
Okay.
So I go about and I do my other things.
I set up stuff, other stuff up.
15 minutes goes by and I may be getting the time window wrong.
This was a few weeks ago, but that 15 minutes goes by I reconnect.
Nope.
Sorry.
Admin activity detected.
You have to wait 15 minutes.
Oh man.
So I keep going, setting up now I'm like a half hour, actually I let extra time
go by just in case.
And now I'm like, I'm at the 40 minute mark show starts at the top of the next hour.
So I'm like trying to get connected.
I gave it extra time.
I gave an extra like five, 10 minutes.
I connect again.
Nope.
Admin detected.
Can't connect.
Now I'm starting to get panic.
Now I can't get on.
Now I can't get on the internet.
I can't get on this live stream.
I can't get that going.
You know, Mike doesn't know he's going to be connecting, expecting me to be there.
The audience is starting to show up in the chat room, asking where the stream's at.
It's starting to get stressful.
So, you know, I go into business mode and I think to myself, look, you jackass.
It's like $670 to just buy the commercial license and then you can get access to
your machines and you can do your show.
You're going to be traveling more this year.
Just, just pay the price.
Just pay the damn price.
So I, I think about it.
I know I could self host this.
I know I shouldn't do this, but I want to get on the air.
The show starts in just a few minutes.
So I head over to TeamViewer's site.
I get all logged in, make sure it's all my account stuff is correct.
And I subscribe to the annual like $670 plan.
That's a lot of greenbacks.
Oh, it hurts so bad.
I mean, I've, I've, I've paid more for other subscriptions, but this one in
particular, because of how they got me into it and because I needed, I needed
to just do this once, you know, like the way they got me into this, but I knew,
okay, if I might need to do it more, all right, I'll pay, I'll pay their license.
Fine.
It says instant activation right at the top of the website.
So I think I'm going to be golden.
Well, it was labor day and the TeamViewer staff was off that day, Alex, and nobody
was there to issue me my license.
Wait, that's not automated.
That's not instant either.
And so the time comes, we're like five minutes.
I still haven't gotten activated.
In fact, it took till the next day until I got activated.
I was so angry, but I figured out that if I did a new install on a new Linux
box and connected from the first time from that machine to the other machine
that I was getting blocked on, I could do it from that machine with the free
account and I got the stream up and running with like two minutes to spare.
And I had to then like, just let all of that fade and just focus on the show and,
and sit with the fact that I spent that nearly $700 and still didn't have the
license and I just had to sit with that while I did the show.
And so I, in that moment, to resign myself to find a free self-hostable
replacement for TeamViewer, I would not let this happen to me again.
And I did some shopping, I found a couple of different options.
I don't know.
Have you looked in this area yourself before a TeamViewer replacement?
No, they've never actually got me with that, uh, admin stuff detected.
I used to use it quite a bit to help family members back in the day.
But, uh, lately, I don't know, technology's matured to the point where I don't often
need to remote into their systems anymore.
So, well, and in a lot of cases, something like WireGuard with VNC
would do mostly what you need in, in a lot of cases, but in my case, I sometimes
am behind a double NAT, I need to be able to traverse that.
I need to do it from a mobile device.
I need to be able to do it from a Linux box, a Mac box, you know, anything like that.
Yeah, that's where TeamViewer is really nice.
It just, it just punches through everything.
So if you've never used it before, it's pretty slick actually.
You type in a, like a nine digit code, which identifies the other person's server.
And then they give you a five or six character password that you type in.
And, uh, yeah, that's how you do it.
You just connect like that and punches through every firewall inbound, outbound,
whatever bounces off their servers and just works.
And it makes those remote support situations so much more streamlined with
that code and, uh, it's simple.
I tried a few things and RustDesk came across my, I don't know, maybe it was an
email, but it came across my path.
And, uh, if you did send it to the show, thank you.
Cause I eventually did get a chance to try it out and I really, really like RustDesk.
As the name implies, it is built, it is built in Rust.
The client, the front end is open source.
They have one for basically every major OS, including your Linux is out there.
The front end client is really clean and simple.
It's a lot like a simplified front end for team viewer.
It runs as a backend service on Linux.
So you don't even necessarily have to have, have it up and running on your screen.
It'll install itself as a service.
There is a server component.
Now, by default, you can use their server.
You can use their, their server.
I think there's really no restrictions on it.
I was able to connect to three machines simultaneously using their free server.
They do say though, right on their front page, our server resources are limited.
So please set up your own server.
And that's where this gets a little tricky.
You can pay $200 a year, which is a lot less than 700 for their server, which is
all set up and nice and lets you do all kinds of connections and you can run it
on your own box for a year, but you know, $200 is a lot for some people.
So they've also made a demo server available is what they call it.
Now this demo server is significantly limited.
Only one relay connection allowed, no NAT traversal.
You really kind of have to be prepared for like a very limited experience, but
it's a demo server that's quote unquote free.
It's open source.
You could run it on your machine right now.
They make a Docker container available for it, but because it's open source, the
community could in theory, take their spec implementation and build a more
feature complete self-hostable Rust desk server.
And I think if Rust desk continues to take off and really makes itself an
appealing alternative to team viewer, I could really see the community stepping
up and taking the spec implementation that they make available for free and
building it into something else.
So I'm kind of going all in.
I loaded it on all the machines that I would need to build a
remote support in the studio.
How's the performance?
A lot of these things you mentioned VNC a few minutes ago.
I just have memories of that thing leave just not working very well or not updating
the cursor unless something's moving elsewhere on the screen.
How's this work?
Oh yeah.
Oh yeah, so many old cursor problems with VNC and are watching like the, the, the
screen paint as it, as you wait.
Yeah.
No, it's good.
It's great.
In fact, I'd say it is absolutely comparable with team viewers performance.
I didn't get a chance to dig in under the hood to see what they're using.
If they're using VNC, it is absolutely by far the fastest, bestest, most
incredible implementation of VNC I've ever seen.
I'd suspect it must be something else though, because the performance is great.
There's no mouse ghosting and I was absolutely happy even while having three
connections going simultaneously.
Well, that's the beauty of it being open source, right?
We can go and have a look if we want.
You can, we could go dig around it.
In fact, if the community has another one that they like, I know there's a few out
there that kind of are trying to solve this problem.
Let us know.
Self-hosted.show slash contact.
Now just looking through the source code.
I mean, there there's a file in the source called windows.cc and it mentions
ultra VNC has RDP support.
Do you need to use a normal VNC client for this?
Or do they provide everything that you need?
Yep.
They bring, you install the client on your OS and you can set up a session
ID, you plug it in there and it connects.
Once you connect once it saves it in a recent sessions area.
So you can just double click to reconnect to the machine again.
Then once you're in there, you get a viewer that lets you scale the screen
image or set it to the actual resolution.
And it has a little bar along the top that lets you switch between multiple
monitors.
If you're remoting into a system that has multiple screens, and it also gives
you a few other quick options that you might want, like send a few keystrokes
and, and stuff like that.
And the UI, when you launch it, the remote either to connect to someone, or if you
want to allow an inbound connection, it's just that one UI and it gives you your
ID and you set a password right there.
Very cool.
Yeah.
That looks like a great project.
One caveat though.
Unfortunately, at this time does not support Wayland on Linux.
So why is that always a gotcha like this?
Well, it's the nature of the Linux desktop right now.
Uh, but thankfully all of our studio systems, TeamViewer works on Wayland.
Yes, it does.
It does.
And I'm actually, that is one thing I have to give TeamViewer credit for.
And why I went with it is even though it gets a lot of hate, uh, in the technical
community, legitimately, they have been supporting a Linux release now for
a very long time and they are, they support Wayland, they support Gnome Shell,
Plasma, their integration is top-notch and I got to give them credit for it.
Like they've built a good product.
That's why I was willing to pay for it.
It's just the way that went about the delay and then the fact that I have to
pay that every single year, it's just not my bag and I always prefer to self host
if I can, and now I just have to decide, do I want the spec server or do I want
to pay for the Rust desk server?
I got to make that decision, but I'll play with it some more.
And decide in the future.
All right, very good.
Now, moving on, have you seen this website, shucks.top?
No, I've never heard of this.
Uh, what is this?
Somebody put it in the Discord, of course, and this website lists you all the
different drives that are suitable to be shucked.
You know how I like shucking drives.
I do.
And, uh, normally it's a dashboard of which retailer has which shuckable drive
on sale, but right now, thanks to crypto and this annoying, annoying, annoying
new Chia coin thing that, uh, you can mine coins on hard drives, apparently, uh,
hard drives, just like everything else now are in short supply.
You got to be kidding me.
Really?
Yeah, no, I want storage prices to be going down right now because I have a, I
have a big plan to buy a lot of disc around November.
Dang it.
So, uh, you know, yeah, you're a big shucker.
For those of you who don't know the term, you get a USB enclosure, hard drive,
and you shuck that enclosure and you get the disc out of it.
You know, it's like a coconut.
You get, you get the husk off and you pull out the coconut and, um, sometimes
it's delicious and sometimes it's, uh, not so good.
Well, sometimes it isn't so good.
Actually this week, I, uh, I've had two hard drives sale on me this week,
both shucked Seagates.
Oh no, man.
I've got a bunch of, uh, older Western digital drives, uh,
approaching three years old.
And so what I wanted to start doing was buying a disc every quarter, give or take
to start kind of staggering their dates so that the bathtub curve, um, that I
don't fall victim to that, which is, you know, if every, if everything's the same
age with the same environmental life conditions, the chances that they're going
to fail all at the same time is reasonably high.
So I wanted to try and protect myself from that a little bit.
Um, and so I bought a couple of these Seagate drives earlier in the year.
I think I talked about it on the show and both of these Seagate, 10 terabyte, uh,
what are they Barracuda pros have both just decided this week at exactly the
same time, despite my burn in tests and everything else that, uh, this week was
the week they were going to give up the ghost.
Oh man.
I'm so sorry to hear that.
Uh, nobody ever wants to deal with that.
Any data loss happen?
No, no data loss.
One of the drives was being used in ZFS and the other one was on merger FS.
So snap rate did its thing perfectly and so did ZFS.
So we're all good, baby.
Linode.com slash SSH.
Go there to get $100 in credit and support the show.
No matter what skill level you're at or what technology stack you use Linode can
help your ideas come to life on the web.
You're going to be impressed.
And when you get that $100, you can really try it out.
Alex, I don't think I told you yet, but I set up file run.
You know, you recommended it to us on Linux unplugged.
Oh, good.
Yeah.
Yeah, I set up a Linode, a couple of, well, it's been about a week now for the
elementary development summit and they're using file run to upload all of their
videos and stuff for the summit.
We were going to do a next cloud instance, but just file run seemed to make so much
more sense, a lot more straightforward for the, for the presenters to way simpler.
And it was really easy.
I I've told the story before, but it actually got, I got it all set up using
Linode's one click Docker deployment, which is in my case, I chose Debian, but
you've got a couple options there.
Debian Docker basic set up with Docker compose pre-installed and all of the
right repos set up.
And so I deploy that and then I just grab the Docker compose from the project for
file run and had it up and running before the DNS had switched over for the website.
And it was just like a no brainer.
And then later on, you know, of course, West West is always like, you know, we
could do, we could mount the S3 object storage and then use that for the storage
for file run, so we don't have to worry about them filling up the disk.
And I'm like, of course I'm on board with that.
I love stacking those Linode services together.
Their dashboard makes us really simple and straightforward.
You can use their cloud firewall to protect your system.
Then you can deploy a Linode to run your application, and then you can use object
storage on the backend to essentially have addressable storage that expands as
you need it.
Yeah, there's a lot of ways to crack that.
And if any of that sounds complicated, don't worry.
It's also really simple to just get started with a standard box.
Really easy with just a couple of clicks.
It's a great opportunity to learn with that one hundred dollar credit as well.
They have this powerful system with this simple interface.
So many people make that claim, but it's actually extremely hard to get that
balance right.
And the reason why Linode gets it right is because they've been attempting this
since 2003 and through just working at this and listening to their customers and
building it just focused on delivering the best virtualized cloud computing and
having that focus since 2003, they've gotten to this point where they have this
marvelous system now.
So go use our one hundred dollar credit at linode.com slash SSH to try it out.
And yeah, the performance is fantastic, too.
We love getting your stories.
So let us know how your switch to Linode is going.
Linode.com slash SSH.
Now, I'm reluctant to even bring this up, to be honest with you, because the open
source community is well known for over egging the pudding when it comes to
drama, but the more I dug into this story, the more I felt like it was worth
the discussion on the show.
So this week, Home Assistant developer Frank, you've probably seen his name
everywhere over Home Assistant.
He is a prolific contributor to the project, spelled F-R-E-N-C-K.
He jumped into a NixOS GitHub pull request and made what seems on the face
of it, like a really simple request. He says, as the author of the package, I'm
asking it to not be repackaged here.
Sounds straightforward enough, right?
I suppose.
I mean, it's MIT licensed, so he doesn't really have the authority to make that
request.
Well, that's just it, isn't it?
Yeah.
I mean, there's the spirit of the developer's intention.
And then there's the letter of the law, which says that NixOS, which is a Linux
distribution that's very technical, very niche, and very awesome if you're into
declared systems that are kind of just super, super niche, NixOS is great, but it
is a Linux distribution just like Ubuntu or Debian, they package these things up
into their own repos.
Well, here's the thing as well, right?
Is that NixOS is all about reproducible builds, but for some reason Fedora felt
the need to package this Amby Python library as well. And as the thread
transpired on GitHub, Frank started to get a little more petulant, dare I say, as
time went by, you know, he started off by saying, I have no emotional investment,
no emotional attachment to this issue. And then a few posts later, this by the
way has moved out of GitHub onto the Home Assistant forum by this point. He goes
from saying, I've got no emotional attachment to saying, sorry to hear you
don't respect requests from authors who wrote the source you rely on, the author
that has put in the effort to create it in the first place. Always good to know a
project doesn't care. I mean, come on.
In my opinion, I would characterize a lot of his responses as short and somewhat
hostile and snippy. People ask him like, they come back with very reasonable
counter suggestions and proposals that have been that are well thought out. And
he responds with trite one sentence responses that are sort of demeaning.
Yeah, one example of that is that Nick's OS offered, we will set a config flag in
the OS that reads, except that this package is not supported by upstream
developers, and I will go to Nick's packages to report any issues equals
true. And Frank was still unhappy with that. So
here's what I think here, Alex, because the core argument that Frank had was, he
was concerned this would lead to user support requests on him. He was concerned
that people would install Home Assistant and all of these packages and
dependencies on Nick's OS, run into some problem with their setup at some point
that led them to the Ambly library. And then from there, they would dissect the
source code and the original author, suss out his contact information or his
GitHub, and then file a issue support request or email with Frank. After that
process. Now, I've been in this for quite a while. And I could tell you, I bet you
a good steak dinner that the totality of people that would do that over say, like
a five to 10 year period would probably be a handful, you know, under a dozen
because let's be honest, Nick Nick's OS is an extremely niche Linux distribution.
Then the ability to entertain who the developer is. Well, actually, the ability
to entertain what particular library is even causing you a problem is a niche
skill set. The ability to entertain which developer created that one library
that's creating you a problem is also a niche skill set. So you get my point like
it's his main concern was that he'd be getting support requests when in reality
that just doesn't seem likely. That's not going to that's not going to result
from this inclusion in Nick's OS,
which raises the question, you know, if you don't want your stuff to be used and
packaged by other people, like this, I mean, the whole point of open source
licensing is that you're giving your code away, you still retain intellectual
property over it, you still, air quotes, own it, but you don't own what people can
do with it. And for me, that raises the question why he's even publishing it as
open source code in the first place, if he doesn't want people to do this?
Yeah, that's, that's a good question.
It's a tricky one, because if you think about the way in which Home Assistant
itself is licensed, that uses the permissive Apache two license. And that
doesn't really impose very many strict restrictions at all on derivative works.
If Home Assistant then includes any GPL licensed stuff, at that point, you're
going to, at that point, you then have a whole other can of worms about what
would, what would happen next. And I think, for me, I get a little concerned
when I see how Paulus, who was on the show a couple of episodes ago, jumped
into that Home Assistant thread, all of these links will be in the show notes, by
the way, and basically just locked the thread, closed it, and then delisted it,
like sweeping the whole thing under the rug.
All of this is that behavior of shutting down the forms and not really wanting to
engage in a conversation about it, trying to reduce the amount of heat that Frank
is taking, and Frank's response and being so concerned about additional support
requests that he would go to those, you know, he would essentially get in that
argument in that thread. I think all of these are symptomatic of what you and I
have worried about the project for a long time. And that is that the core
developers who are some of, as you mentioned, the most important developers
to the project are beyond what we would consider burned out and that they are on
their very last nerve. And every time we see a public interaction, we witness what
appears to be an individual who is so far at his end of his rope, he has no time to
deal with people talking back to him. He has no time for the possibility that he
might get additional emails. The idea that he might get more emails is upsetting to
him. And then you see Paulus going around and cleaning up the conversation in the
form. So that way it doesn't inundate Frank with all of this, you know, peanut
gallery chatter about it and just to try to get away from the issue as quickly as
possible because he doesn't have time to deal with it and he wants to stay
focused. And I don't really know what the solution here is because that just seems
to be, even if it's not the case, even if this is just Chris's wild opinion, it's
what the public sees every time. And the issue here is this made it out beyond
just the Home Assistant community this time. It made it onto Hacker News and it
had a very robust conversation over there. It was fired up on the forums like
Alex did. It made it to Reddit. It was in our team Slack where we were discussing
this back and forth. Like it made its rounds around the internet and it's not
a good look. It looks like everybody's hot take is, well, they don't know what
open source is. They don't understand how Linux distributions work. Don't they
know it's MIT licensed? And it's clear they're smart guys. They know all of
those things. There's something else going on here and we're just getting
little glimpses of it. See, I think you have a different take. You worry that
maybe one day these guys, because they don't appreciate and understand open
source, are going to take their cake and their ball and they're going to go home
and eat it. Does that make sense? And they're going to convert it to a
commercial product and we're going to be sitting here going, well, wait, now what
do we do? My concern is more the development team just totally burns out
and leaves the project and abandons it and says, well, it's open source. You take
care of it.
I think both scenarios are probably equally likely at this point, although
perhaps going closed source, I mean, we've got precedent for that with MB. We've
seen other projects do that before. I do think Home Assistant is slightly less
likely to do that because just because of the sheer volume of open source
contributions over the years. I think if there was any talk of Home Assistant
itself going closed source, that would get forked in a heartbeat and, you know,
home lover would come out of it instead or whatever you want to call it. And then
Home Assistant just wouldn't be able to keep up with changes without that open
source support. So I don't think it's hugely likely, but I feel like, you know,
all the moves and it's a difficult one because we talked to Paulus recently and
he paints a very rosy picture about the feature of the product and it's a
sustainable one as well. You know, Frank and Paulus and these guys are getting
paid through Nebuchadnezzar, which oftentimes is a reason that these
developers burn out is because it's a side hustle or a side project. For these
guys, it is their job, you know. So I do think we've come to expect a certain
level of access to open source developers like this because of the way
we conduct all of our business in public. I'm sure if we went and looked in some
internal, you know, company email thread named Big Corp here, we'd see similar
levels of emotional attachment and petulance at times. But the difference
here is that it's out for the world to see.
And there is a bit of a spirit of cooperation in the open source
community. A lot of Home Assistant is built on top of a lot of other great
code. And so when somebody comes along and says, yeah, but don't use our open
source code in your project, it doesn't really sit well and it gets noticed. And
I think to your point that, you know, there are full time employees of
Nebuchadnezzar, money is only part of the solution. It is likely that Frank is
such a talented developer and what he works on is so crucial to Home
Assistant. I bet you there is just an unrelenting, never ending amount of work
for him to take on. And, you know, he did some work with the new ESP Home
release that we'll talk about. And he did. Yeah. Yeah, he's done. He's
involved in more things than ever now. And I think there is only so much that
maybe one developer can take on. And when you're talented like he is, you're
going to get you're going to get worked. And I don't know if you've ever read
The Phoenix Project, which is a book about DevOps. It talks about this
concept of a halo engineer who people are afraid of upsetting or touching
systems because this this one guy knows all of the different incantations you
have to say to make something work. I feel like Frank's maneuvering into that
position. And the Home Assistant project is very dependent on him because of his
skills. It's a difficult problem to solve. And it is not unique to Home
Assistant that you end up with this reliance on one talented guy. But I
don't know what the solution is either. Do we all stop collectively emailing
Frank all at once? Maybe?
That might help. Well, why don't we just really quickly talk about ESP Home?
It's now part of Home Assistant. So they're kind of related. And for those
of you who don't recall those those little ESP, what is it 8266? And the ESP
32? Yeah, there's a couple of them. They're made out of China. There's a
company they're called Espressif. And they make ESP 8266 and ESP 32 devices,
little Arduino compatible single board systems that have a Wi Fi chip in them.
You can use them for for all kinds of things like sensors or controllers,
little MQTT devices. And now it's sort of a perfect fit, as you can imagine,
with Home Assistant, because that's a lot of that's a lot of things you'd
want to do with a Home Assistant installation. And so they've rolled out
version 1.19.0. And I think the biggest thing in here is they've added a
feature that's very similar to commercial smart plugs, where you can give
it your Wi Fi information over Bluetooth le and give it the Wi Fi credentials.
That's a huge feature. That's slick. Yeah, I remember Paula's telling us
about that a couple of weeks ago. It's nice to see it actually land in a
release. Now another improvement they've made is that they've been working hard
on some new tooling to make it easier for everyone to install ESP home and
other firmwares on their devices. And to do that, they've created something
called ESP web tools linked in the show notes. Yeah, that's nice to see. And
gonna make it even simpler for people to approach. But don't worry. They're
also improving the command line experience. So both got some love, which
is great to see. And then the other thing that I think puts this into now
I'm very much going to consider devices based on this is, and this is
something I've been waiting for desperately. They're going to add
attributes from Home Assistant now that you're going to be able to save them
into the local sensor on ESP home. So for example, the brightness of a light
so when the light turns on, it resumes the original brightness, or the
current temperature for a climate device. So that way doesn't have to keep
checking in with Home Assistant all the time. To be able to read attributes from
Home Assistant entities, right into the local sensor, I feel like is a
game changing feature. For them. It's just a bullet point in the new release.
And I'm like, Yes, I'm so happy. I've got this like Jonah Hill kind of I'm so
happy GIF playing right now. Yes. Right. Exactly. I think that's pretty great.
So a new ESP home makes me happy. Now in the spirit of embedded devices,
Tasmota has a new release this week, they've just released 9.5.0. Now there
is a breaking change in this release, and lights using the MQTT discovery
protocol will not work correctly in recent versions of Home Assistant. So
upgrade to 9.5 and use the Tasmota integration to work around that problem.
We want to thank our friends over at a cloud guru for sponsoring this your
program and let you know about their hands on with podman containers on
Linux course, which is free for the month of June. And of course, it'll
still be available for members when you go over there. This course, you're
going to learn what containers are. So you're going to get some basics there,
but also then how to manage them and specifically how to manage them using
podman, how podman interoperates with Kubernetes and system D. And, of course,
because it's the new way now, how to manage podman using cockpit, which is
the web graphical interface that I actually think is pretty great. But
don't mention it to Alex, it upsets him. But you can go over there, we'll have
a link in the show notes. And you can check out hands on with podman
containers on Linux for a cloud guru, which is free in June. But then, of
course, will be available on the platform link in the show notes.
Probably time we need some feedback, eh? Yeah, I think so. I feel like it.
Corey wrote in he wants to get social, but he wants to do without social
media. He says, Hey, longtime listener and even long timer self-hosted. I
love the show. And he says with more and more things going online only in
person interactions are getting to be more sparse. I found lately I need to
put conscious effort into keeping up with friends and family checking in
from time to time and or even taking notes about something they've mentioned
to follow up on. Wow. You know what, Corey? I'm just realizing I should be
doing that. He says Corey goes on to say I was curious if anyone had a tech
solution for this. Some sort of like contact management thing where you
could make notes about a project or vacation they mentioned. So you could
ask them about it later on or or even set reminders like. Hey, self, you
haven't talked to X in four weeks, maybe check in on them or maybe some
sort of reminder about their vacation and asking them how it went. Perhaps
it sounds a bit dumb, but I think I could put it to use, especially after
college or school when friends kind of go their own way. So is there
something out there? What would you guys do? Thanks. Well, at first I
thought the question was about social media, and I kind of had a sinking
feeling that self hosting your own social media kind of defeats the point
of social media. And then as the question carried on, I sort of was
listening and realized that actually what he's looking for is a basically
a customer relationship management system. And there is a really good one
in this space in the self hosted space called Monica at Monica HQ.com. And
this essentially lets you set reminders for all sorts of things like the
names of the children of all of your friends, wedding anniversaries, the
last time you called them and talked to talk to them about the weather or
whatever it might be. Monica lets you quickly and easily log all that
information so you can be a better friend, family member or spouse. I kind
of think this is a great idea, actually. Or I could see it, you know, for
like keeping track of what you guys have going on, you know, for the
JB team members. So that way I'm not like rude and just forgetting the
important things that you guys have going on, you know, like this could
make me a better team member. Well, good news. They have an official
Docker image over at Docker Hub. I might give it a look. If I remember
after the show, I might give it a try. Yeah, essentially it's a digital
Rolodex. Yeah, I think that actually be pretty useful. OK, so the Hom writes
in and this is about cooling Raspberry Pi's in your famous RV server seat
without cutting big holes in it. He's got a couple of suggestions about
using water cooling, actually, to cool the air inside the box rather than
the pies themselves. I had not even considered water cooling a Raspberry
Pi before. That actually be a pretty cool project, wouldn't it? So how
would that work? If you think about it, you'd put a radiator inside the
seat that would act as a heat sink, I suppose, because the thing about
water cooling rigs that I always I've never done water cooling in my
life. I've always wanted to, but it's always just been that notch more
expensive than I'm willing to go. Yeah, whenever I see that Linus Tech Tips
or whoever mucking about with water cooling, they've got these big shiny
copper heat sinks directly attached to the motherboard or whatever to the
CPU. I just how would you transfer the heat from the seat to the radiator?
I guess is the question. That is a good question. I think the way you'd have
to do it is you'd have to get something that sits on the pie. So I'd have to
get rid of my flirt cases that I like and get something that affixes to
the hot components on the pie. Affix it to the flirt cases because
they are a heat sink themselves, right? Maybe, maybe, maybe. I'd also
want like a plate that I could attach to a router. You'd want a couple
of different or maybe something for the switch and you'd run water
cooling through those plates into a radiator that I guess you could maybe
put it in the booth, but I think for better cooling you'd need the radiator
outside the booth. Clearly this needs better planning, but I like where
the home's going with this. It's an idea I actually had not considered and
anything would be better than cutting a hole in the side of my RV. However,
the pies are only part of the problem because the other situation I have
is the electrical system with the Victron equipment and the batteries.
When I'm running solar and so I'm taking in a whole bunch of solar which
generates heat surprisingly and then also running air conditioning so I'm
inverting solar power into air conditioning when it's really hot out.
So like say above 95 degrees or 90 ish even that just generates a lot of
heat in itself. Then you combine that with when I've been driving the
drivetrain is very hot which is behind the power bay. So it's a lot of
ambient heat and what I have to do to keep it running is I have to get
airflow going through there. So I don't think I could water cool the
Victron equipment. So it would only solve the Raspberry Pi problem but definitely
worth considering. I'm going to actually go do a little googling tonight and
see what I can find.
Yeah I mean like maybe with hard drives you don't need a huge amount of
airflow over them you just need some and maybe you could make that fan pull
double duty of doing the water cooling and also blowing air over the
drivetrain and battery bay.
Well Alex I think you better come out here and set a few weeks aside so we
can start getting to work on this project.
Maybe yeah it's episode 50 before we know it.
Yeah maybe that would be fun wouldn't it? I don't know though I'm pretty
nervous about it. Pretty nervous about cutting holes. I'll come to some
solution and when I do I'll share it but in the meantime let's talk about
something that'd be simple. Something maybe I won't have to mess too much
with.
Yeah we've got an app pick for you all this week called Tiny Home. This is a
simple static homepage generator. There's a link to it in the show notes and if
you head on over there you'll see there's a link to an example demo site.
And the demo site is just it's so simple it's just headings with a couple of
buttons on it you know so if you want to put all of your different self-hosted
web apps it's basically a collection of links you know like Heimdall, like
Homer, like Organizer all those kind of things except this is a statically
generated super simple little website.
Yeah and I think it just generates it from bash scripts or some kind of
script so it's really easy for you to manage it and just spit out a static
website. That's pretty nice. That's pretty nice.
Yeah just generate a little CSV file and the static generator will do the
rest.
Gosh that is easy. If you're still mulling over Google photo alternatives
check out Alex on Linux Unplugged 409. He joined us to talk about some of his
favorites and some of the ones we've covered on this show before but with a
few updates that's at linuxunplugged.com 409.
And for all the places to get in touch with us you can go to
selfhosted.show contact.
You can find Alex on the Twitter he's at ironic badger I am at Chris
LAS and this here show is at self-hosted show.
Thanks to our site reliability engineers who keep the show going at
selfhosted.show slash sre stick around if you're a member for your
exclusive post show.
And I have a bit of exciting news for those of you who are
cloudfree.shop customers there will be some new smart plugs coming in stock
this week version 2 with energy monitoring as well as all the
existing TAS motor features and you can still use the coupon code
self-hosted to get 10% off over there.
And thanks for listening everyone that was self-hosted.show slash 47.
