WEBVTT

00:00.000 --> 00:03.880
Think we have something like 70 people signed up for the East Coast meetup so far

00:05.200 --> 00:07.200
69 baby nice

00:07.560 --> 00:11.520
You know, it's gonna go up from there too because it always kind of goes up a few ticks in the last day

00:12.000 --> 00:15.880
Now the question that I I have is this barbecue place gonna have enough meat

00:16.440 --> 00:19.840
Well, I've been emailing them back and forth and it's a little bit complicated

00:19.840 --> 00:23.600
Like we don't want to have to charge everybody like tickets and admission and that kind of thing

00:23.960 --> 00:27.640
but you know a barbecue restaurant they make a certain amount of food in the morning and

00:27.640 --> 00:32.080
Well the night before and once it's gone, it's gone. So yeah

00:32.640 --> 00:37.780
There are a couple of things that we can do to help kind of mitigate that you can pre-order on the website

00:37.780 --> 00:41.500
so, you know when you turn up to the spot you can walk into the restaurant and they'll sort of

00:41.960 --> 00:46.040
Carve your food while while you wait in there without waiting in the normal line

00:46.600 --> 00:52.620
The other thing that we were thinking about doing but we're not sure of the logistics and how it would work is giving them numbers

00:52.620 --> 00:58.180
Before hand so that we can actually make sure there's enough meat for everybody. Well, the way that would work is if people sign up

00:58.180 --> 01:03.500
On the meetup page. Yeah, so it is critical if you are coming, please make sure you sign up on the meetup page

01:03.500 --> 01:08.900
So we have a really accurate idea of numbers and equally if you aren't able to make it, please unsubscribe

01:08.900 --> 01:14.100
Please saying you know, you're not coming anymore. That's really important, too. I love that. We're running into this problem

01:14.860 --> 01:19.900
And this is just a great problem to have we are thrilled to have this problem and we want it to be an even bigger

01:19.900 --> 01:24.980
Problem, so if you can come on come hang out with us on April 9th in Raleigh, North Carolina

01:25.100 --> 01:29.860
We have all the details of meetup comm slash Jupiter broadcasting and don't worry

01:29.860 --> 01:35.200
We're gonna bring some snacks too. So and they're not gonna be meat snacks. So if you're not a meat eater

01:35.660 --> 01:38.940
There will be something for you. You know, I think we're bringing a Brent with us

01:38.940 --> 01:43.020
So we've at least got to take care of him, right? Right? He'll be our vegan advocate

01:43.020 --> 01:47.300
You know, he always stands up for the non meat eaters because he's about the only one in our crowd

01:47.300 --> 01:49.260
I

01:49.260 --> 01:54.780
Was browsing the old hacker news the other day and I came across a docker.com blog post

01:55.180 --> 02:01.360
About a speed boost achievement for docker desktop in 4.6. This is fascinating story Alex

02:01.540 --> 02:06.140
Yeah, I think so too and the performance of docker desktop particularly on the m1

02:06.660 --> 02:09.060
silicon Apple silicon max has been

02:10.660 --> 02:14.440
Bad enough that I have literally stopped using docker on my Mac

02:14.440 --> 02:19.080
And I just SSH into a server and use it there and do all my builds on a remote server

02:19.800 --> 02:21.520
Yeah. Oh

02:21.520 --> 02:26.080
Okay, so, you know, we're gonna talk today about how I'm looking at ditching containers

02:26.080 --> 02:29.480
so we thought we should probably have a little bit of container good news and

02:30.720 --> 02:37.540
This is a neat little happenstance. There was a discovery by the Asahi Linux team Hector Martin

02:38.120 --> 02:40.500
Who's trying to port Linux to the m1?

02:40.500 --> 02:45.680
Discovered that Apple's MV me drivers are really really great

02:46.720 --> 02:50.080
except for a particular function called the f-sync and

02:51.240 --> 02:53.900
Depending on how this is called and when it's called. It's

02:55.040 --> 02:59.080
Horribly slow on Mac OS so Hector discovered that

02:59.880 --> 03:04.740
Talked about it publicly. They've submitted code upstream the Linux kernel to solve it on on Linux

03:04.740 --> 03:09.980
But it isn't necessarily solved on the Mac. And so a docker user noticed this

03:09.980 --> 03:14.700
We'll have a link to the github issue and said hey, by the way, this might help performance

03:14.700 --> 03:21.580
I've done some testing here and I've noticed that if you use the same fix that Hector Martin found and you apply it

03:21.900 --> 03:25.420
You're gonna get this kind of expected performance increase and you know

03:25.420 --> 03:28.640
Just one of these great examples of community helping, you know

03:28.640 --> 03:33.160
Really improving a product like this the docker team took a look at the suggestion and said yeah, you're right

03:33.160 --> 03:38.600
Let's implement it and and now they're saying some operations are like 98% faster

03:39.160 --> 03:41.960
Well, they were pretty slow beforehand. So I mean

03:43.600 --> 03:48.800
They had plenty of headspace to improve that. Yeah. Yeah, it's interesting

03:48.800 --> 03:55.360
And you know as we record the Asahi Linux team just released. I think it was you know a few days ago their first alpha

03:55.960 --> 03:57.600
right and

03:57.600 --> 04:01.360
I'm gonna give it a go this Sunday by the time people are hearing this it'll be just like

04:01.360 --> 04:02.680
probably

04:02.680 --> 04:09.040
The weekend this episode came out, but we tried it at first and there's a there's like some

04:09.840 --> 04:16.680
File-system typical problems you'll fall into that just sort of trap you it's like I don't know if you ever played that game pitfall

04:16.680 --> 04:19.840
You know, yeah, you're running along and also you just fall into a pit

04:20.040 --> 04:22.760
That's what it's like right now trying to get Linux on the m1

04:22.760 --> 04:24.880
but if you solve file system problems

04:24.880 --> 04:31.800
Or you don't have any file system problems and you're trying it on an m1 Mac like like an air or a mini

04:32.360 --> 04:34.360
it seems to be pretty straightforward and

04:35.000 --> 04:37.000
Early benchmarks are showing

04:37.600 --> 04:40.640
Pretty good performance as long as you're not hitting that GPU

04:41.120 --> 04:48.600
Yeah, you know what's interesting is Jeff Gehling released a video this week talking about his experiences with the new Mac Studio and

04:48.600 --> 04:56.080
in that video he did some power comparisons between a recent Ryzen system that he built a Linux gaming PC

04:56.800 --> 04:58.880
compared to the Mac Studio and I

04:59.760 --> 05:05.940
Couldn't quite believe what I was seeing but then at the same time having used the m1 MacBook Air and my m1

05:07.400 --> 05:10.840
Max MacBook Pro god, that's such a stupid name. I

05:12.200 --> 05:14.200
Just called the MacBook max

05:14.200 --> 05:20.200
Okay. Yeah, well, it's still a stupid name. But yeah, who thought max Mac was a good one

05:20.200 --> 05:27.280
Anyway, I know, you know, there's just nobody to say no anymore. Is there anyway, that's a bit of a segue bit of a tangent

05:27.280 --> 05:29.280
bit of a tangent

05:29.280 --> 05:35.280
Yeah, the power draw was a lot better though. You're right the like the wasn't the Ryzen something in the 40 watt neighborhood?

05:35.280 --> 05:42.080
That's right. Yeah. Yeah, the Ryzen was about 38 40 watt something like that and the Mac Studio idle was 6 watts

05:42.080 --> 05:46.760
It's the same as a Raspberry Pi. Yeah, and in the context of Docker desktop, too

05:46.760 --> 05:53.240
you really got a you got to figure the majority of the use case is for development testing and

05:54.280 --> 06:00.120
So this f-sync change doesn't really impact things much other than you know improves performance

06:00.120 --> 06:01.680
I think I'm not sure Alex

06:01.680 --> 06:08.280
But I think there's an argument to be made that it might be slightly less safe the way the way they've changed this operation

06:08.280 --> 06:10.080
but it kind of feels like

06:10.080 --> 06:13.360
You know again for a development Docker setup

06:13.360 --> 06:17.240
It doesn't it doesn't really matter if it's slightly less safe because you're not running your production

06:17.840 --> 06:23.680
Server on this thing. Yeah, it's a similar type of operation to when you make a bunch of rights to a USB Drive, right?

06:24.080 --> 06:25.400
After you've written some data

06:25.400 --> 06:30.680
You need to sync it and make sure that those rights have occurred and the file system tables all been updated that kind of thing

06:30.800 --> 06:38.280
So as it turns out Mac OS actually cheats as you said Chris on Linux f-sync will both flush rights to the drive and ask

06:38.280 --> 06:41.060
It to flush its right cache to stable storage

06:41.320 --> 06:46.800
but on Mac OS f-sync only flushes rights to the drive itself instead they provide a

06:47.760 --> 06:50.920
f-full sync operation to do what f-sync does on Linux

06:51.480 --> 06:55.440
Aha, so you got f-sync and you got f-sync full sync

06:56.960 --> 06:59.720
Now on the laptops I can see why they would do this, right?

06:59.720 --> 07:04.240
Because essentially the laptop has a built-in UPS if you yank the power cord on a MacBook

07:04.240 --> 07:09.640
It's gonna keep on trucking right but on a Mac studio same on the iPhone right same on iPhone

07:09.640 --> 07:13.080
Yeah, absolutely, but on a Mac studio or some kind of other desktop

07:14.000 --> 07:16.120
Once you pull the power cord your toast

07:16.120 --> 07:23.320
So this leads me to wonder what would happen to you know data integrity on a desktop Mac that doesn't have a built-in battery

07:24.240 --> 07:27.840
Yeah, you got to figure Apple must have done the math

07:28.000 --> 07:32.920
But there is that sort of cynical voice in the back of my head that goes well, you know

07:32.920 --> 07:38.440
They may have just designed this for mobile devices because that's their primary device now

07:38.440 --> 07:43.120
And you know when they sell max the the number one Mac they sell are the laptops

07:43.120 --> 07:45.300
So they're probably designing for that, you know

07:45.300 --> 07:48.560
I got that's the voice in the back of my head when I hear that and I think to myself

07:49.040 --> 07:56.420
Maybe APFS needs a few more years before I give it the old production grade for any kind of serious data storage

07:56.420 --> 08:03.480
I mean that said I've experienced zero issues with APFS and the migration was flawless and I

08:03.840 --> 08:08.080
Really give them credit for the migration. I also give them credit for

08:08.840 --> 08:10.840
the really kind of

08:11.120 --> 08:12.280
low-key

08:12.280 --> 08:19.800
But consistent rollout they did over three versions of Mac OS to sort of slice and dice the way that volumes are managed on

08:20.560 --> 08:24.400
APFS like they really executed well on that transition. I'll give them credit there

08:24.400 --> 08:30.280
that that doesn't change the fact though that we haven't seen a lot of

08:31.760 --> 08:36.120
Production server grade edge case uses out there for years, right?

08:36.120 --> 08:38.560
And I don't mean to be the old IT guy in the room

08:38.560 --> 08:43.800
But for me for a file system to really be production grade safe for like server data

08:43.800 --> 08:45.800
I want to see other people

08:46.040 --> 08:50.000
Banging on it for a few years in production in the way I'd be using it

08:50.000 --> 08:54.680
So if it's containers or or whatever it might be, you know, like yeah, they've did they've done

08:54.680 --> 08:59.040
Well, and I think that sets the ground for a pretty good file system that I can trust

08:59.040 --> 09:03.400
But it's still like for it to actually be considered safe in my brain

09:03.400 --> 09:08.080
I got to see people using it the way I'm using it and I got to see that working for a while

09:08.600 --> 09:13.040
Yeah, so with all that in mind, okay. I really hope that Asahi Linux

09:13.040 --> 09:19.760
Works well in a couple of years time and you know with the market is flooded with these cheap

09:19.760 --> 09:25.800
M1 Mac minis that are now obsolete from Apple software and we can all run low power

09:26.240 --> 09:28.240
Linux Apple silicon

09:28.440 --> 09:30.440
home service

09:31.800 --> 09:34.680
Leno comm slash SSH go there to get

09:35.000 --> 09:40.560
$100 in 60-day credit on a new account and you go there to support this here show. Yeah, that's right

09:40.560 --> 09:46.360
This here shows made possible by you taking advantage of our sponsor when it comes time for you or someone

09:46.360 --> 09:50.920
You know or someone you're working with to deploy a server go to Linode comm slash SSH

09:50.920 --> 09:56.080
It's what I use for anything that I deploy in the cloud for like the last two and a half years and it's so much

09:56.080 --> 10:00.400
Nicer than those hyperscalers that just want to lock into their crazy complicated platforms

10:00.400 --> 10:07.260
You know Linode started in 2003 and they've just been moving it forward iterating on making it better and better and now

10:07.600 --> 10:09.600
It's like nearly 19 years later

10:09.600 --> 10:13.320
That's wild Linode is old enough to vote. That's crazy

10:13.320 --> 10:19.440
And they've really just iterated on and making something super great and that's why they're willing to give you $100

10:20.440 --> 10:22.440
$100 is like a confidence statement

10:22.640 --> 10:26.360
They're saying we trust that if we let you actually kick the tires with this thing

10:26.360 --> 10:29.800
You're gonna like what you see and it's just such a great way to support the show, too

10:29.800 --> 10:35.920
So it's Linode comm slash SSH go deploy something go try something go see why they are the absolute best

10:35.920 --> 10:40.920
They make cloud computing simple affordable and accessible to all Linode comm slash

10:41.560 --> 10:43.560
SSH

10:44.760 --> 10:50.800
Now this is a mixture public service announcement slash app pick I think we've mentioned paperless on the show before

10:51.160 --> 10:57.320
It's a document management system that helps you transform physical documents into a searchable online

10:57.520 --> 11:02.740
Archive and I've used this to great effect for my wife actually when when we're traveling and stuff back to England

11:02.740 --> 11:06.540
She does a lot of Skype and zoom music teaching lesson

11:06.540 --> 11:08.060
she's a music teacher and

11:08.060 --> 11:14.840
What we actually did was scanned all of her students music into paperless and then using the OCR that's in there

11:14.840 --> 11:20.140
We can actually search for the specific bit of sheet music that we need when she's in England on my server back here

11:20.140 --> 11:21.820
which is just

11:21.820 --> 11:26.780
Super cool. So anyway for the longest time I've been using paperless dash ng

11:26.780 --> 11:31.460
I think it stood for paperless next-gen not entirely sure to be honest

11:31.460 --> 11:35.900
I like to think the next generation. Yeah, like make it so

11:36.900 --> 11:38.900
You got it

11:39.540 --> 11:47.140
A chap called Jonas Winkler actually took over the original paperless project, which itself had been abandoned now in the last few weeks

11:47.780 --> 11:52.020
There's been a new project come along called paperless dash ng X

11:52.620 --> 11:54.620
next generation X

11:55.180 --> 11:57.180
something like that

11:57.180 --> 12:04.300
And essentially what the community have done is the ng fork of the original code has seemed to go unmaintained

12:04.300 --> 12:06.500
There's actually a github issue which we'll link to in the show notes

12:06.980 --> 12:10.740
Where there's a bunch of people talking about how much value they get from the software

12:10.740 --> 12:13.580
And also how much of a shame it is to see it kind of go to waste

12:14.100 --> 12:16.800
But obviously open source being open source, you know

12:16.800 --> 12:21.020
This discussion thread went on for you know, the best part of two three weeks

12:21.020 --> 12:28.580
Before eventually the community just went okay this Jonas guy. He seems to have fallen off the the radar for now for whatever reason

12:29.060 --> 12:33.340
So we're just gonna fork this thing and call it ng X. Yeah, I sure hope he's okay

12:33.340 --> 12:35.340
You know, I hope it's just a case of burnout

12:35.900 --> 12:40.620
and it is good to see something like this you wouldn't this wouldn't happen with a

12:41.060 --> 12:45.200
Commercial service right when a cloud company is shutting down for whatever reason

12:45.620 --> 12:47.420
The products just kind of gone

12:47.420 --> 12:51.780
but when you have something that you can self host that's open source software

12:52.580 --> 12:54.580
there can be a

12:54.660 --> 13:01.700
Escape hatch when the project kind of starts to fade now this first version doesn't seem like it's introduced a ton of new stuff

13:02.620 --> 13:06.100
They drop support for Python 3 7 so they're kind of moving that forward

13:06.100 --> 13:09.900
They've updated a ton of the docs and the scripts and the containers and the branding

13:10.220 --> 13:14.060
They also had to drop support for ansible playbooks, which is definitely a bummer to see that

13:14.060 --> 13:21.700
But they are hoping maybe somebody would want to help them support that it seems like maybe it's just an issue of things getting out

13:21.700 --> 13:25.340
Of date and the dev team not really having the skill set to manage it

13:25.660 --> 13:29.580
So long as they continue to support Docker, you know, they're all they've got my vote

13:29.940 --> 13:35.780
What's interesting though is if if we look through the the issues on their github, there is one

13:36.420 --> 13:41.340
specifically talking around moving the organization in github forward and

13:41.340 --> 13:45.660
You know, so that right now is probably a really good time to get involved in the project

13:45.660 --> 13:52.580
If you're looking to do any kind of open source contributions, you know clearly they're looking to improve the the project

13:53.100 --> 13:55.100
There is an issue in here

13:55.340 --> 14:02.520
1632 which again will be linked in the show notes where they're talking about how you can make your membership official of the project

14:03.180 --> 14:06.780
It's 100% a community project and they will gladly welcome

14:07.380 --> 14:09.700
contributions from anybody member or not

14:09.700 --> 14:12.460
But you know if you're a member of of it

14:12.460 --> 14:17.560
You can start to have a bit more say over where the direction of the project goes and that kind of thing

14:18.140 --> 14:23.580
Interesting. Yeah, I wish them the best right? This is one of those projects that I think is

14:24.460 --> 14:26.460
Probably not mentioned enough

14:27.180 --> 14:29.580
If you look into it, it's such a no-brainer

14:30.140 --> 14:34.540
I'm I'm implementing this in the future probably at the end of summer

14:34.540 --> 14:41.900
I'm gonna I'm definitely putting this into action and it's amazing there. There's just no way I'm gonna do another year without this system

14:41.900 --> 14:49.020
So paperless ngx go check it out. I'm gonna my plan is to have something set up by the end of summer. So that way I

14:49.660 --> 14:54.220
Know me a big talker right now, but that way at the start of 2023

14:54.220 --> 14:57.340
I could just just use paperless from the beginning of the year. We'll see

14:57.780 --> 15:00.660
I'll tell you where it's really useful is tax season

15:00.660 --> 15:07.180
You know, you get all these 1099s and w2 forms all this kind of crap coming in, you know from yeah all over the place

15:07.340 --> 15:12.180
you just take a picture on your smartphone with one of the scan apps and

15:12.860 --> 15:20.460
It then you can share it from there with paperless, you know, like through the share sheet on iOS or a similar thing on Android

15:20.940 --> 15:25.140
that will basically then upload the file into paperless and then it does its

15:25.140 --> 15:30.300
Optical character recognition OCR on those files and from there

15:30.300 --> 15:33.460
All you need to do when it comes to tax time is search

15:33.900 --> 15:38.860
1099 or tax or whatever it is and you'll just find all the forms boom boom boom boom

15:39.960 --> 15:44.300
Even cooler than that though is you can set up a bunch of ingestion rules

15:44.300 --> 15:46.600
So what we did for the sheet music for example

15:46.600 --> 15:53.360
Was we look for certain keywords like bassoon or piano or that kind of thing and add certain tags to each file

15:53.360 --> 15:59.080
So in our case we added sheet music as a tag or any time I get an email from Google with my Google

15:59.080 --> 16:07.520
Fi bill in it. I have that send the email automatically forward it to an address that will put it into a specific folder and

16:08.560 --> 16:11.120
Paperless will scan that folder ingest the file

16:11.520 --> 16:15.480
Automatically tag it and so when I come to expense my cell phone bill through work

16:15.760 --> 16:20.560
All I need to do is I don't need to log into Google Fi and then spectrum and in all these different

16:20.560 --> 16:25.800
Systems, I log into paperless search for my little keyword to bring up my personal

16:27.320 --> 16:31.680
Internet bills boom just download the PDF done. That's so

16:32.960 --> 16:39.480
Great. I love it. I really really love it. I've been struggling with that very thing today

16:39.480 --> 16:41.480
That's what I was working on earlier today

16:42.120 --> 16:47.440
It's just been one bad news after another including the one that I probably heard from

16:47.440 --> 16:55.040
The most from the audience since our last episode and that is that the matter group has announced a delay

16:55.680 --> 16:58.600
For the matter standard. Yes, that is the one announced in

16:59.200 --> 17:01.920
2019 by Amazon Apple Google and Samsung

17:03.080 --> 17:08.560
The idea is to take ZigBee and make something they could all use together that has a few base

17:08.960 --> 17:13.840
things that could all agree on and of course Alex the industry is trying to

17:13.840 --> 17:20.400
Spin this like the Nanoleaf CEO said quote. I think the three-month delay might actually be a good thing

17:20.400 --> 17:25.720
I feel that now that there's more certainty across the industry. We'll see unity at the time of launch

17:25.720 --> 17:28.280
Yeah, it's a good thing because we can't get enough chips right now

17:28.280 --> 17:31.580
So we'll just push it out and then sell the same amount anyway

17:32.120 --> 17:37.200
Right. Sure. Yeah, I mean it's his job to say it's a good thing, right? I gotta say I'm not too surprised

17:37.200 --> 17:44.240
Um, it really is funny though. Cuz like anybody who like doubts matter. It's like they they took this newsman

17:45.080 --> 17:49.760
They just they were on with it. They like they they sent me the link, you know

17:50.320 --> 17:54.140
And you know, I agree my confidence is slipping

17:54.560 --> 18:01.860
But it just it's so obviously needed that I I hope I hope I hope that this delay

18:01.860 --> 18:03.860
Doesn't throw this whole thing off

18:03.860 --> 18:07.840
track, but it has sent me into a bit of a

18:08.800 --> 18:12.320
Death spiral with my whole home set up now Alex. It's just a disaster

18:12.840 --> 18:13.840
Well, I blame you

18:13.840 --> 18:16.240
I mean we had that feedback a couple of episodes ago saying

18:16.480 --> 18:21.400
should I wait for matter or should I get into Z wave or Zigbee or whatever right now and

18:21.600 --> 18:27.320
If I recall the advice was if you need something now buy it now and I think that advice has just been proven

18:27.920 --> 18:32.040
Right, you know if you need a new smart home widget today

18:32.040 --> 18:33.320
buy

18:33.320 --> 18:36.120
What's on the market today and hope for the best?

18:36.880 --> 18:44.240
Yeah, and for me for me it it sends me into this whole spiral of okay. Now I've got a problem

18:44.860 --> 18:46.960
Because I've got a network of you know

18:47.880 --> 18:49.880
30 Z wave devices and

18:50.600 --> 18:58.840
They are integrated throughout the automations and you know everything from temperature display widgets to

18:58.840 --> 19:04.920
Scripts and automations. I have a Z wave device in there. And so the migration to Z wave JS

19:04.920 --> 19:06.920
Which I've tried in the past for me

19:07.400 --> 19:09.560
Went horribly bad. Nothing worked

19:09.560 --> 19:12.880
I essentially had to just retouch everything in home assistant

19:12.880 --> 19:17.840
And you know one of those things where you load your dashboard and like everything's aired out and not working, right?

19:17.840 --> 19:21.120
Oh, yeah. Yeah, that was my situation

19:21.800 --> 19:26.000
And so my thought was screw it. I'm not gonna migrate to Z wave JS

19:26.000 --> 19:28.960
I'm gonna hold out and just move over to matter and I'll just

19:29.800 --> 19:33.040
Low-key replace the devices over a year and call it good and

19:33.520 --> 19:39.240
That plan came crashing down a couple of months ago when I discovered or a month ago when I discovered that the next release the

19:39.240 --> 19:43.480
One that comes out in really probably a few days from the release of this episode

19:44.200 --> 19:50.440
Will totally disable the Z wave integration that I'm using so I'm kind of stuck in time

19:50.440 --> 19:56.040
With home assistant and now that matter is delayed. It's like a whole nother complicating factor and

19:56.760 --> 20:00.720
I've realized that if I'm going to do this Z wave JS migration

20:01.480 --> 20:04.560
That it's gonna end up being so much work

20:05.800 --> 20:11.000
That I might as well take this opportunity to just redo everything, you know, have you reached that point?

20:11.000 --> 20:11.920
We're like, yeah, okay

20:11.920 --> 20:18.280
This one this one job is essentially so much work that just nuke and paving the entire infrastructure

20:18.280 --> 20:21.040
Is only a minor part of the overall work. I

20:21.640 --> 20:26.480
Feel that way every time I think about implementing a VLAN set up in my house like at the moment

20:26.480 --> 20:32.600
I just run a flat network and I think I would be cool if my cameras are on their own VLAN and then all my

20:32.800 --> 20:34.800
IOT stuff was on its own but you think

20:35.280 --> 20:39.880
I'm gonna have to touch every device here and I just can't be bothered

20:39.880 --> 20:42.720
Let's just stick it in a slash 16 and forget about it

20:42.720 --> 20:47.600
Tailscale comm slash self-hosted go there to get a free personal account for up to 20 devices

20:47.600 --> 20:53.000
And of course you support the show and you can sign up for tail scale tail scale comm slash self-hosted

20:53.000 --> 20:59.360
It is the zero config VPN it installs on any device in minutes. You can manage firewall rules

20:59.360 --> 21:03.840
You can work from anywhere. I have really taken things to the next level

21:03.840 --> 21:08.680
I have recently started adding a couple of my VMs to my tail scale

21:08.680 --> 21:13.920
Network now stick with me here for a second now, I can SSH into the VMs

21:13.920 --> 21:19.120
I have running on my machines here in the studio where I'm working on projects from home. It's so

21:19.880 --> 21:25.200
Great. It is so great. Also, I can confirm that it is

21:25.840 --> 21:30.720
Stupid simple to set up tail scale on Nix OS more details on that in a moment

21:30.720 --> 21:34.160
And what I love about tail scale is it supports two-factor authentication

21:34.160 --> 21:39.280
You're single sign-on and underneath all of it. They're using the stuff that just makes WireGuard

21:39.280 --> 21:44.920
So great the noise protocol and they do a mesh network. So that way it's one flat network between all your machines

21:45.480 --> 21:47.560
It's so simple to get started as well

21:47.560 --> 21:53.440
And they really have installers for like every distro even ARM Linux distros all that kind of stuff

21:53.880 --> 21:56.960
You'd be amazed how fast you can build out a WireGuard network

21:56.960 --> 21:59.520
That's mesh peer-to-peer in just a few minutes

21:59.520 --> 22:04.960
I love it. And you know after you get everything signed up. They all have their own IP

22:04.960 --> 22:10.160
And so I've started setting bookmarks. I have a I have a tail scale folder in my bookmark bar and

22:10.720 --> 22:15.040
All of the different web services that I hit that I have a tail scale IP for now

22:15.040 --> 22:18.640
So from and I of course that syncs across all my Chrome instances

22:18.640 --> 22:24.720
So from every machine I can get access to those web apps and it doesn't matter what your machine is

22:24.720 --> 22:31.440
Every machine I can get access to those web apps. It doesn't matter what it could be Dylan at home

22:31.440 --> 22:35.040
It could be something at the studio. It could be something in the RV. It could be something up on Linode

22:35.040 --> 22:37.040
It's just super powerful

22:37.280 --> 22:43.840
So go try it for yourself support the show and use it up to 20 machines for absolutely free by going to tailscale.com

22:44.560 --> 22:45.840
slash

22:45.840 --> 22:47.840
self-hosted

22:47.840 --> 22:55.600
In the dock, I see a very tantalizing little sentence that says I have a new direction for dupes the no

22:55.600 --> 22:59.040
Container theory. I cannot wait to hear your logic on this

22:59.840 --> 23:04.320
I want more control with this next go-around and I'm looking at what my options are

23:05.120 --> 23:10.080
With any kind of setup that I might redo and maybe to kind of help you understand. I should recap what I have now

23:10.640 --> 23:14.640
So right now I have a couple of Raspberry Pi 4s that are running Ubuntu 20

23:14.640 --> 23:17.280
04 right the previous LTS and

23:19.120 --> 23:22.240
Back when I set that up Alex you could still get

23:22.960 --> 23:28.480
a setup script for home assistant where you could install supervised home assistant

23:29.040 --> 23:32.080
On vanilla Ubuntu, which I don't think they actually support anymore

23:32.640 --> 23:34.320
But in my world

23:34.320 --> 23:38.320
This is the ideal setup because I have home assistant running in containers

23:38.640 --> 23:43.280
But a fully supervised setup so I have access to the add-ons. I can get the hack store

23:43.280 --> 23:46.640
All that kind of stuff. I get the backup manager snapshots, etc, etc

23:47.200 --> 23:49.200
But it's on an OS that I manage

23:49.920 --> 23:52.320
That I update because that's how I prefer to do things

23:53.360 --> 23:57.360
That is no longer a viable option and even now it's kind of

23:58.400 --> 23:59.360
fiddly

23:59.360 --> 24:06.560
Home assistant will often say that I am in an unhealthy state and so it won't let me update add-ons or update the system

24:07.120 --> 24:11.360
And I have to reboot and then it's all of a sudden in a healthy state again

24:11.360 --> 24:13.840
And then I can go about updating things

24:14.160 --> 24:20.400
So it's it's already not perfect and I don't want to go the direction of where I was trending

24:20.400 --> 24:23.440
Which is an x86 machine that would be more powerful

24:24.640 --> 24:26.880
Ideally like a laptop that supports quicksync

24:28.240 --> 24:30.240
And then I would put proxmox on that

24:31.040 --> 24:35.620
And I would run home assistant in its own dedicated virtual machine as just an appliance

24:35.620 --> 24:41.220
And I would just swallow the fact that I am running their OS and I don't really want to do that

24:41.780 --> 24:43.300
But you know what?

24:43.300 --> 24:45.300
It's fine. I told myself

24:46.340 --> 24:52.680
But as the asahi linux team started getting linux on the m1 closer to a reality and I started realizing

24:53.300 --> 24:56.580
that a headless mac mini m1

24:57.380 --> 24:58.420
running

24:58.420 --> 25:00.980
Linux could be a viable home server

25:00.980 --> 25:05.940
And maybe I don't want to go this proxmox route. Maybe I want to go a

25:06.980 --> 25:09.480
Linux host that is running these applications

25:10.980 --> 25:12.980
But then I started thinking

25:13.540 --> 25:17.300
What are my two main problems that I would like to solve with this next round?

25:17.300 --> 25:19.380
Like if I besides performance because that's a given

25:20.340 --> 25:25.060
If I were rebuilding my entire home setup and you got to think about this yourself probably sometimes

25:26.900 --> 25:28.900
What would be the next step

25:28.900 --> 25:31.700
And I realized I would love to solve

25:32.500 --> 25:34.500
reproducibility

25:34.980 --> 25:37.380
Because a year or two into this I don't

25:38.180 --> 25:40.740
Really remember how I have it set up. I have it set up

25:41.540 --> 25:43.620
In a way that it's pretty obvious to figure out

25:44.420 --> 25:47.940
And I do have some documentation, although I haven't touched it in about a year

25:49.060 --> 25:54.100
So I don't really have like a game plan to like rebuild this thing should a rabbit

25:54.100 --> 25:59.940
So I don't really have like a game plan to like rebuild this thing should a raspberry pi crap out

26:00.100 --> 26:02.100
I mean I could probably do it in a couple of days

26:02.820 --> 26:04.820
Then the home assistant stuff would take longer

26:05.060 --> 26:07.060
But you know, it's not ideal

26:07.780 --> 26:10.580
And I started thinking about what I could do to solve this problem

26:11.220 --> 26:14.580
And I started thinking about your favorite ansible, of course

26:15.460 --> 26:20.340
Perhaps like, you know, this was an opportunity and my moment in time to learn ansible

26:20.980 --> 26:22.980
I'm sure you think that's probably a great idea

26:22.980 --> 26:24.980
Well, you're not going to hear anything

26:25.620 --> 26:29.620
Bad about some kind of config management from me. No, no, I think ansible is a

26:30.260 --> 26:31.940
laudable goal

26:31.940 --> 26:37.620
So instead I did a hard right and turned from that and and went down the path of nix

26:38.900 --> 26:45.380
And the reason why I got to nix is I wanted god damn it. I wanted I know i'm sorry. I know it's so close

26:45.700 --> 26:47.700
I wanted something that was

26:48.800 --> 26:50.800
reproducible from the metal

26:50.800 --> 26:56.800
So I could essentially just recreate the same exact setup by just dropping in some config files

26:57.360 --> 26:59.360
And building the system

26:59.360 --> 27:01.360
And that's what nix provides

27:02.080 --> 27:04.000
and then as I start to

27:04.000 --> 27:09.280
Use nix and nix os and I tried nix os versus just putting nix on top of a distro

27:09.920 --> 27:11.920
and really it's just a

27:12.080 --> 27:13.520
it's kind of like

27:13.520 --> 27:16.800
It's a matter of how far do you want to be able to control the system, right?

27:16.800 --> 27:23.280
Are you good with setting up a base distro and keeping its package manager going and then putting nix on there and then rebuilding everything?

27:23.360 --> 27:25.760
Or would you like to build everything from the ground up?

27:26.400 --> 27:28.480
user accounts groups permissions

27:29.180 --> 27:35.360
Everything reproduce everything and that's the route I want to go and that's why I went more than just nix the package manager

27:35.360 --> 27:37.360
I went to nix os

27:37.360 --> 27:42.160
and the nix os way of doing things is extremely compelling because you can

27:42.160 --> 27:47.040
with very simple syntax you can say I want containers and then

27:47.760 --> 27:52.560
You build the system and you can test it before you deploy it and it's reproducible

27:52.560 --> 27:56.720
And it's so great, but you build the system and if you tell it I want containers

27:57.360 --> 28:00.480
It it the nix system figures it all out man

28:00.480 --> 28:06.640
It figures out the software dependencies the services that need to be installed you can make declarations in there for firewall stuff

28:06.720 --> 28:08.720
It's a lot like dr. Compose

28:08.720 --> 28:14.160
But for your entire os it's honestly how linux should be

28:14.480 --> 28:17.440
For a lot for basically every use except for the desktop

28:17.760 --> 28:25.360
This is how linux should work for every container for every server for every iot device out there for any system out there

28:25.360 --> 28:28.240
I'm telling you this as somebody who's used linux for probably almost 25 years

28:28.880 --> 28:33.120
This is how linux should have worked forever. Now. Nix has actually been around for a little while

28:33.120 --> 28:34.560
I'm, just finally getting around to try it

28:34.560 --> 28:41.280
And so what I have discovered alex while using nix is if you can use the nix package manager to install stuff and manage stuff

28:42.240 --> 28:46.720
You've essentially documented your entire system with the config file and made it reproducible

28:46.720 --> 28:51.200
so anytime you could like deploy home assistant through the config file or

28:51.680 --> 28:54.720
A sync thing or plex or you know, whatever

28:55.200 --> 29:01.680
You can essentially run a command on another box and rebuild and recreate that entire system to the exactly how you had it

29:01.680 --> 29:03.680
And you can do that in a rolling way

29:04.720 --> 29:10.320
So what happens when something isn't in the nix way that nix ethos

29:11.280 --> 29:17.200
Yeah, like an example of this actually is paperless ngx. Like I don't think that's been packaged up yet, right?

29:18.080 --> 29:22.640
You can totally do containers and nix like totally is great for that

29:22.640 --> 29:26.000
It's great as a container base and it is great as a container host

29:26.000 --> 29:31.440
And uh, you can do podman and docker on the same system at the same time. Like it's really powerful

29:32.080 --> 29:36.640
And um, I think a lot of listeners that are hearing me right now are probably thinking no chris

29:36.640 --> 29:40.640
Just run the container on nix os. It's so much easier

29:41.200 --> 29:43.200
And that may actually ultimately be the way I go

29:44.560 --> 29:49.040
I may still end up running a few things in containers, but what I have realized is

29:50.320 --> 29:51.840
the benefit

29:51.840 --> 29:56.960
of the way nix manages everything is that I can come back to a system

29:57.760 --> 29:59.760
five years later

29:59.840 --> 30:01.840
And not only will it be fully up to date

30:02.560 --> 30:07.520
But if it just has any problems a super easy to roll back and be super easy to reproduce

30:08.160 --> 30:13.600
Just like done. How often do you do that though five years as your example?

30:14.400 --> 30:18.960
Often I mean usually I don't use hardware past that right? So i'm touching on i'm rebuilding nix

30:18.960 --> 30:24.560
stuff every few years usually I mean speaking about myself. I prefer to

30:25.600 --> 30:28.000
Change stuff every couple of years

30:28.720 --> 30:33.360
So the chances of me sticking with the same system for five whole years is is quite slim

30:33.360 --> 30:38.480
Have you have you ever had like an arch desktop that you install and then like three years later?

30:38.480 --> 30:41.760
You realize it's the same install and you've just been reliably updating it

30:42.080 --> 30:46.720
My arch desktop actually is the one that I installed in london and it travels to the US

30:46.720 --> 30:50.640
It's the one that I installed in london and it traveled across the ocean in a container, you know

30:51.840 --> 30:52.720
I love it, right?

30:52.720 --> 30:56.960
And when you think about how like some desktop linux users, especially mint users

30:56.960 --> 31:02.720
They they actually like reinstall every major for every major version. I know they have it's crazy, right?

31:03.280 --> 31:08.320
Nix is that for everything to the next level and I can pin versions if I need to I can roll back

31:08.720 --> 31:10.480
It's the kind of distro

31:10.480 --> 31:12.480
that you can install it and and

31:12.480 --> 31:16.960
And you can actually reliably let it auto update because it's so simple to recover

31:18.480 --> 31:22.000
It's very compelling and I'm I'm still kind of new to it

31:22.320 --> 31:24.720
So I'm struggling to really put all of it into words

31:24.800 --> 31:28.400
But it's got me excited in a way about deploying software on linux

31:28.880 --> 31:34.800
That essentially docker compose did for containers and I I really don't have a major problem with these

31:35.360 --> 31:39.520
With running these applications in containers, but if I'm being totally honest

31:39.520 --> 31:41.520
I do feel kind of weird about

31:42.080 --> 31:44.080
pulling down like

31:44.080 --> 31:49.840
Essentially an entire software os environment to run sync thing when it's just like, you know

31:50.400 --> 31:52.400
Some binaries and some config files

31:53.040 --> 31:56.480
And I don't really need to run all of that in a container. I don't need to manage the network

31:56.480 --> 31:58.820
I don't need to have like these virtual network interfaces

31:59.360 --> 32:03.840
I don't need any of that. I don't need to like mount storage volumes or any of that

32:03.840 --> 32:05.280
I don't really need it

32:05.280 --> 32:10.160
If I can still get all of the manageability benefits that I got with the software as a container, you know

32:10.160 --> 32:14.800
Being able to pull down specific versions being able to stay current being able to roll back

32:15.120 --> 32:20.800
Being able to isolate data and application stuff like I get all of that with nix without actually having to have in a container

32:21.840 --> 32:27.440
That's compelling to me and it also means that I could probably really eek a lot of performance out of an m1

32:28.000 --> 32:32.960
And the great thing is is there's already people working to get nix os running on the m1 mini

32:32.960 --> 32:37.760
That's running on the m1 mini. So like by the time i'm ready to do this the work's going to be done

32:38.640 --> 32:41.040
Can I play devil's advocate now? Are you done?

32:42.320 --> 32:43.760
soakbox, uh

32:43.760 --> 32:45.760
So so in summary

32:45.760 --> 32:47.760
Boo containers. No. Yeah, go ahead

32:49.360 --> 32:50.720
Why

32:50.720 --> 32:52.720
learn a

32:53.280 --> 32:56.320
Slightly unusual bespoke

32:56.320 --> 33:02.880
Soak deployment configuration system, which is what nix appears to use just from a quick glance. I'll be honest

33:02.880 --> 33:04.800
I'm, not super familiar with it

33:04.800 --> 33:07.200
Uh, and I really you know, I have I have no real opinions

33:07.280 --> 33:13.040
Let me preface everything i'm about to say with no real opinions about nix os at all. I haven't looked at it super closely

33:14.080 --> 33:15.520
but

33:15.520 --> 33:18.580
Devil's advocate time if I am learning ansible

33:20.160 --> 33:23.760
And I want to run it against ubuntu or centos or arch

33:23.760 --> 33:29.680
or mac os or any other system that ansible supports

33:31.120 --> 33:35.600
I've learned a skill that's transferable not only between multiple different operating systems

33:36.240 --> 33:38.080
but also different

33:38.080 --> 33:41.360
Jobs and ansible has been hugely powerful for my career

33:41.440 --> 33:45.760
You know as a springboard where I could start operating at a level that was much higher

33:46.160 --> 33:49.760
Than actually if i'd just been doing everything like a caveman on on the command line

33:49.760 --> 33:53.840
Right simply because people smarter than me had abstracted away a lot of the complexity

33:54.640 --> 33:58.480
And so I look at nix os and I I see their configuration language looks

33:59.200 --> 34:04.880
Pretty easy to understand. It's you know, it's just a standard sort of json type looking configuration thing, right?

34:06.240 --> 34:09.200
And some of the things you said right you you wanted reproducibility

34:09.520 --> 34:14.960
okay, so nix os is clearly that because of the whole ethos of the project, but

34:14.960 --> 34:21.600
Let's say you wanted in five years time to redeploy a specific version of sync thing for whatever reason it might be

34:22.880 --> 34:28.000
You could do that with a container on ansible. You could go through your git commit history

34:28.560 --> 34:31.280
Look up what tag you are running five years ago

34:31.840 --> 34:35.040
Pull that down from docker hub assuming it's still there

34:35.040 --> 34:37.040
But the same is true of nix os, right?

34:37.120 --> 34:41.600
And then deploy that container and you've got everything as it was on that day in history five years ago

34:41.600 --> 34:45.120
And it's all in git. So it's all version controlled and it's all reproducible

34:45.760 --> 34:49.120
I wouldn't be surprised if the more common way of using nix isn't

34:49.760 --> 34:55.760
Ansible deploying like a centos or a rail system or an open to system with the nix package manager installed

34:56.400 --> 34:59.440
uh, because I think the other thing you I don't know if you mentioned it necessarily in there, but

35:00.000 --> 35:02.640
Learning ansible would also be a much more employable skill

35:03.200 --> 35:06.080
You know if you're ever looking for a job, it looks good on the resume

35:06.080 --> 35:13.680
It looks good on the resume. Um, so I actually don't think it precludes me from wanting to learn ansible because I think that's still

35:14.480 --> 35:17.040
Time that would be well spent. Yeah, I do

35:17.760 --> 35:23.520
what I have kind of felt about using nix is um, okay, this is going to be kind of a controversial statement, but

35:24.560 --> 35:30.960
Uh, this is the future of linux and this a lot of what they're solving. It just should be done at the os

35:30.960 --> 35:39.680
anyways, and it doesn't necessarily mean you don't still also need something like ansible maybe for some small scale things, you know,

35:39.680 --> 35:44.480
You're if you have a few boxes maybe with something like nix you could get away without something centralized

35:44.800 --> 35:48.160
But if you have any kind of scale, you're you're obviously going to need tools to manage that

35:48.800 --> 35:54.800
But I I honestly think when I use nix I look at what rail is doing and I don't know how they're going to get there

35:55.520 --> 35:57.520
But they're ultimately going to end up here

35:57.760 --> 36:00.160
And same with what canonical needs to do with ubuntu

36:00.160 --> 36:04.640
uh, and it's so in some ways I like using it because it's just

36:06.000 --> 36:10.080
I I think it's how i'm going to use linux now for the future

36:10.720 --> 36:14.480
When i'm not deploying a desktop system and i'm not even convinced

36:14.880 --> 36:18.480
It may actually ultimately end up using it for a desktop system as well

36:18.720 --> 36:21.360
Especially like a system here in the studio. That's pretty static

36:22.080 --> 36:29.360
I think the counterpoint to that is what redhat for example. I know it well are doing with the uh, redhat core os

36:29.360 --> 36:34.800
Core os operating system at the minute fedora core os if you want to try out the uh, the upstream version

36:35.600 --> 36:37.340
Everything is configured

36:37.340 --> 36:42.960
Declaratively up front, right? So you say I want this nick to have this ip address, right?

36:42.960 --> 36:47.200
I want these storage disks to be configured to this mount point that kind of thing

36:47.920 --> 36:53.280
Uh, that's all done through an ignition config file. You supply that to the vm or to the

36:53.280 --> 36:59.440
The machine when it boots up and it then configures itself based on that

37:00.220 --> 37:02.220
instantiation kind of request

37:03.280 --> 37:09.040
And it seems to me like nix is operating in a similar space where the the operating system is almost like read only

37:09.520 --> 37:12.960
And everything is kind of given to it. It's like this blank canvas

37:13.520 --> 37:16.320
Onto which everything gets painted straight away

37:16.320 --> 37:22.800
Nix os itself managed to make base arch feel bloated. It's really nothing. There's not a lot going on there

37:24.880 --> 37:30.000
So what happens when you need to do a rollback, uh, for example with my home assistant vm

37:30.240 --> 37:32.240
Uh running on top of proxmox

37:32.400 --> 37:34.400
If an upgrade goes sideways

37:34.800 --> 37:41.920
all I do is roll back a specific snapshot which on the zfs backend storage that uh proxmox uses is

37:41.920 --> 37:45.600
Simple what's uh, how does that work in nix? Do you know yet?

37:46.320 --> 37:49.840
See you probably wouldn't quite go through the same scenario

37:49.840 --> 37:56.320
So what i've what i've run into so far is uh, there's two ways you can you can yolo it and just build and deploy

37:57.040 --> 37:59.040
But you can also do like a build

37:59.120 --> 38:04.320
Dash dash test and that does everything and it'll uh, you know, that's where it'll fail out

38:04.320 --> 38:10.800
So they have this sort of switch command that you add. So once you verify that everything's saying the config works and

38:10.800 --> 38:15.680
Like like what software building when it fails to build it'll give you errors and it'll tell you where in the config file

38:15.680 --> 38:17.680
There might be a problem and stuff like that

38:17.920 --> 38:24.560
Um, and then once you've resolved all that you do the switch command and it actually then deploys that as your production system

38:25.360 --> 38:30.800
Um, but by the time you've deployed it, you already know everything works. So there's no, uh, you can roll back but there's

38:31.520 --> 38:37.440
It doesn't really you don't really need to because you just don't it doesn't it doesn't actually switch over unless it actually successfully

38:37.760 --> 38:39.760
Everything works

38:39.760 --> 38:45.440
I mean, that's interesting. Uh, obviously there's a paradigm shift there that I

38:46.080 --> 38:49.920
I and you and we perhaps as a as a show need to go through and kind of figure out

38:50.960 --> 38:57.120
What the future looks like if nix is is the way to go because you're certainly you're certainly peaking my interest as we talk about

38:57.840 --> 39:00.400
I think it is kind of for me. It's a discovery thing, too

39:00.720 --> 39:05.600
Um, i'm thinking about making a nix chat room on the matrix server because I think we have some nix nerds

39:05.600 --> 39:08.960
In the audience, uh, just to kind of wrap this up, uh, alex

39:08.960 --> 39:13.600
What I was thinking is uh with using nix, I would keep things under very tight control

39:14.320 --> 39:17.920
And then I think I kind of want to and maybe you could tell me if i'm on the right track here

39:18.640 --> 39:23.040
I think maybe I might stick with home assistant core. So it's going to be a pretty minimal home assistant

39:23.040 --> 39:25.920
I'm going to get like the minimum viable home assistant rebuilt

39:26.720 --> 39:33.600
And I I wonder if I shouldn't and maybe you could talk me off this ledge consider going with node red

39:33.600 --> 39:40.720
For my automation. So i'm doing all my automations in something separate something else outside of home assistant again kind of

39:41.280 --> 39:43.280
Building these data silos

39:43.520 --> 39:47.360
Um, and i'm also thinking and I don't know how I would even manage to pull all this off at this point

39:47.680 --> 39:53.600
But this is really the time to transition everything to mqtt like anything I can get over mqtt do it including

39:53.920 --> 39:56.480
Like z-wave js to mqtt and all of it

39:57.440 --> 39:59.920
So do you think i'm on the right track is node red too far?

39:59.920 --> 40:03.760
Or is it just like I don't know i'm just if i'm going to redo all this again

40:03.760 --> 40:06.320
I don't really want to have to do it a second time

40:07.600 --> 40:14.720
node red is brilliant for extremely complex automations where there are lots of uh,

40:15.760 --> 40:16.800
tre

40:16.800 --> 40:24.000
If this then that and if this condition is true, then do that, you know, all that kind of really complicated almost like programming logic

40:24.000 --> 40:28.640
Um where it's I think complete overkill is just a simple turn light on at 6 a.m.

40:29.120 --> 40:33.520
Type thing turn heater on at 6 a.m. Whatever it is. Sure. Sure. Yeah, um, and I

40:34.080 --> 40:39.920
I tend to have in my mind as soon as I go beyond like three or four or five kind of steps in an automation

40:40.320 --> 40:46.960
I find the uh home assistant yaml based or the interface based automation is quite cumbersome and that's when I reach for node red

40:48.320 --> 40:51.360
I could see like 80 of our automations wouldn't need to do that

40:51.360 --> 40:54.320
I could see like 80 of our automations wouldn't need that

40:54.880 --> 40:57.040
but there is a niche there like

40:57.600 --> 41:03.120
If so-and-so hasn't been home for so long and so-and-so is this far from here then turn these things off

41:03.680 --> 41:05.680
and then additionally

41:06.000 --> 41:08.000
I hope at some point i'm gonna have

41:08.320 --> 41:14.960
Over mqtt all of my power information from the victron system feeding in and then I would be also looking at solar input

41:15.360 --> 41:19.600
And battery charge level and possibly doing automations based on that as well

41:19.600 --> 41:21.780
Mqtt is just so lightweight and

41:22.340 --> 41:25.060
It's all you it does all you need it to do in a really small

41:25.700 --> 41:30.580
Little lightweight package. So I got an idea. So here's what we're going to do is you and west come out

41:31.220 --> 41:33.220
We'll fly you out for episode 70

41:33.700 --> 41:35.780
And we'll do a bro build at the rv

41:36.900 --> 41:40.100
We'll rebuild everything over the weekend. We'll record it for the show

41:40.980 --> 41:43.300
You know, we'll go do some fancy driving

41:43.540 --> 41:47.700
We'll make a whole thing out of it because I just don't know if I want to take all this on like we got to

41:47.700 --> 41:50.900
Get linux. We got to get nixos going on in m1. I got to

41:51.460 --> 41:56.900
Get everything rebuilt. You got to get all the individual docker services restored got to migrate data

41:57.460 --> 42:00.740
And we got to get everything using mqtt got to get no red going

42:01.620 --> 42:09.060
Just talk about my daily rate, huh? Yeah, I mean, you know, you know, maybe I could pay it in like sandwiches delicious burgers

42:09.060 --> 42:14.020
Oh, i'll tell you what is good in the pacific northwest. There's a little asian place just across the road from the studio

42:14.020 --> 42:19.460
Which yeah, I love that place is good. That's when noah comes in to visit

42:19.460 --> 42:22.100
That's the first place he and I go and if we don't have time

42:22.580 --> 42:25.140
And but I know he's coming i'll order ahead for him

42:25.220 --> 42:29.540
So I remember this is a very old linux action show where he was waxing lyrical

42:29.540 --> 42:32.500
I think about panda express and you're like dude. It's a chain

42:34.020 --> 42:36.980
He does love his chinese food though. I don't know we just think about it

42:36.980 --> 42:41.460
We gotta do something for episode 70 and i'm just saying you come out here. I mean, you know, jb will put you up

42:41.460 --> 42:46.020
Yeah, it's not long is it? It's probably what sort of may june sort of time. Yeah, maybe we'll see

42:46.660 --> 42:48.180
Watch this space

42:48.180 --> 42:50.180
We need to issue a correction on the show

42:50.340 --> 42:56.020
Samuel g writes in about the argon aeon four bay raspberry pi nas case that we covered last episode

42:56.420 --> 43:00.900
Hi guys, I love the show. I think you might have read the argon aeon announcement wrong

43:01.300 --> 43:06.100
You referred to the base model as seven hundred dollars, but I think that's actually an hk money

43:06.100 --> 43:12.580
Uh in u.s. Dollars, it's only about 120 which is a pretty good price if you if you look at it

43:12.660 --> 43:18.020
So yes, thank you for writing in and letting us know that uh, we we can't do currency conversions

43:18.180 --> 43:24.100
No, you know what? It was my bad because I grabbed it and I put it in the dock, but I didn't note the currency

43:24.660 --> 43:28.980
And so I just assumed it was us because it was like, you know had been a couple hours because i'm a dummy

43:29.540 --> 43:31.540
Also samuel sent that in as a boost

43:32.100 --> 43:34.340
With a value for value podcast app

43:34.340 --> 43:40.820
Uh, that's pretty cool very and um gene sent. Oh, I meant to bring it in the studio with me alex, but gene

43:41.460 --> 43:47.140
Uh gene heard about the temperature issues. We've been having in the studio garage server room

43:47.860 --> 43:54.180
Over the summer and he built a wi-fi sensor for me to put in there. That is so cool

43:54.180 --> 43:56.180
I meant to bring it down here for you

43:56.180 --> 44:00.900
Uh, so that way you could look at his handy work. So i'll i'll show it to you, uh after the show

44:00.900 --> 44:06.980
But of course it's using esp home. So it should be uh, no problem to get it working

44:06.980 --> 44:11.300
Uh with home assistant here in the studio and we'll be able to monitor the temperature out there

44:11.300 --> 44:14.740
Which i'm going to get this installed once we have the rack in its final position

44:14.740 --> 44:19.940
So thank you gene for setting that in he sent that in a bit ago and um, the plan is to deploy that soon

44:20.740 --> 44:26.420
Yeah, I mean if I come out there we should do that and deploy. Oh, yeah deploy a fleet of sensors. Not just one

44:26.420 --> 44:33.060
Oh, man, if you actually came out here. Yeah, it would be we'd have a lot with this probably like a dozen things we could do

44:33.540 --> 44:36.580
Um bearded tech sent in something so

44:37.300 --> 44:42.660
Rad and I say rad ironically awesome. I got I got feedback that I should stop saying rad. No

44:44.340 --> 44:46.340
No, I will not

44:46.340 --> 44:50.740
Uh, anyways bearded tech has written this piece of software called fever

44:50.740 --> 44:55.940
And you got to look at this alex. Go look at uh, go look at his github page there. It's a uh,

44:56.260 --> 44:58.660
Frigate event video recorder. Have you seen this?

44:59.140 --> 45:03.700
Yeah, I only because you put it in the dock and it looks awesome. I am going to be uh,

45:04.420 --> 45:09.060
Adding this to my frigate arsenal pretty soon. Yeah, so it lets you store video independently of frigate

45:09.060 --> 45:15.460
But it also has some home assistant integrations for notifications. Um, you can get frames in home assistant

45:15.940 --> 45:19.380
It makes browsing it really easy. He's been working on mobile support. So if you got

45:19.380 --> 45:23.060
One of them internet phones like alex does you can still look at it. Yeah

45:23.060 --> 45:25.720
You can look at your vidjas in the uh web viewer

45:27.540 --> 45:33.140
Like an internet phone is a special thing these days I gotta give you gotta give you crap I guess I don't know

45:34.580 --> 45:41.380
You know have you seen the prices of the coral like the little ai kind of usb sticks that work really well crazy

45:41.700 --> 45:43.700
Yeah, so I paid I think like

45:43.700 --> 45:50.260
$30 or $40 over msrp. They're going for over $200. Oh my gosh, like more than double. It's it's kind of crazy

45:50.820 --> 45:56.740
So, uh bearded tech has a github page up with this fever app on there and it's super cool

45:56.740 --> 45:58.740
He's also got a docker compose

45:59.060 --> 46:01.720
If that's how you you know, if you're still using containers

46:03.220 --> 46:09.620
I mean, I don't use containers anymore. But if you're still using containers, he's got a docker compose good to go

46:09.620 --> 46:14.740
You know, what's interesting is I see in his config file that he's got a whole tail scale section. Oh, yeah

46:16.580 --> 46:19.540
Yeah, he's been he's been dropping me hints about stuff he's working on

46:20.260 --> 46:25.300
It's really good and it's gpl too. So nice. It's free. Yeah, so go check that out

46:25.300 --> 46:27.300
We'll have a link to that in the show notes

46:27.780 --> 46:32.580
Well, very good. I uh, I hope to see lots of you at our meetup on april the 9th in raleigh

46:33.140 --> 46:36.420
Uh, like we said, please make sure you if you are coming your updates are updated

46:36.420 --> 46:41.140
Uh, like we said, please make sure you if you are coming you update the page so we can get a you know

46:41.300 --> 46:45.380
Accurate idea of numbers so we we don't order too much meat or too many uh,

46:46.100 --> 46:48.100
Too many other treats for you

46:48.660 --> 46:50.980
Right, and I want to put the word out there alex

46:50.980 --> 46:56.740
I'd like y'all to join me including you on march 31st at jblive.tv 4 p.m. Seattle time

46:57.380 --> 47:00.580
7 p.m. Alex time 11 p.m. London

47:01.220 --> 47:03.780
We're doing an ama and any of the hosts are welcome

47:03.780 --> 47:08.900
I though nobody's actually said they're showing up but we're gonna do an ama we're gonna help people get set up on matrix and

47:09.540 --> 47:11.060
the big thing

47:11.060 --> 47:15.780
I'm giving away some bitcoin. I'm gonna help you get your value for value podcasting app

47:15.780 --> 47:18.340
So i've been talking about fountain on some of the other shows

47:18.820 --> 47:21.860
It has a little boost feature in there, but the hardest part is getting set up

47:22.340 --> 47:24.980
So i'm going to give away some bitcoin to help people get set up. So that way

47:25.780 --> 47:31.620
they can try out boosting boosting their favorite podcast creators out there and maybe one day free software projects because

47:31.620 --> 47:33.620
the bearded tech

47:33.620 --> 47:39.940
Who's working on fever is integrating lightning payments so you can send a boost to his project to support it. I think that's so cool

47:39.940 --> 47:42.820
So join me ama matrix setup

47:43.300 --> 47:46.580
Bitcoin giveaway and I have a special guest joining me

47:47.060 --> 47:51.380
Do a little interview on the live stream. So it's march 31st 4 p.m. Seattle 7 p.m

47:51.380 --> 47:54.100
New york 11 p.m london at jblive.tv

47:54.660 --> 47:59.060
And for all the ways to get in touch with us, you can go to self hosted dot show slash contacts

47:59.060 --> 48:03.860
There's a form over there. You can fill in and and get your message on the show

48:04.500 --> 48:08.100
Pew pew pew pew you can also hit us up on discord

48:08.420 --> 48:14.760
We got information about that at self host dot show slash discord and the self-hosted matrix rooms at colony dot jupiter broadcasting

48:14.980 --> 48:19.140
Dot com and of course this here podcast is at self-hosted show on twitter

48:19.140 --> 48:28.600
As always, thank you so much for listening everybody. That was self-hosted dot show slash 67

