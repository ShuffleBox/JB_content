Now, I know you're going to give me a really hard time about this, but I actually had to...
I ran out of fingers counting how many golfs I've bought. Yes, I bought another VW Golf.
Okay, so first of all, you do have 10 fingers, so that means it's more than 10 golfs.
Oh, no, okay, I think it's one hand. Let's go with that.
Okay, although I wouldn't be surprised, actually, if you told me it was 10 golfs, I could see it.
You know what I'm just the most upset about is that I didn't take a bet on this.
So that for the listeners that don't know, Alex is a golf enthusiast, you know, Volkswagen Golf
enthusiast. I own one too. We've been golf buddies for a long time. But when the prices
on used vehicles got crazy, Alex did the financially smart thing and sold his golf back.
I did. I mean, that one was a lease. So in fairness to me, like I got out of the lease
basically for free. I had a free car for two, three years, two and a half years or so.
That's not bad, but it ate at you, didn't it? You missed it.
I really missed it. I mean, so I've been test driving vehicles for months now. It started off
when I test drove a Toyota Tundra about three or four months ago. I've driven an F150. I've driven,
I drove a BMW M3 and F80. That thing was amazing, but it was like $70,000. I also drove a Porsche
911 from 2012 and that was $80,000. That's getting a bit rich. You know, that's a lot of money for a
car. And the Golf just fits in that beautiful 40 ish sweet spot. Even, you know, in the current
market, that's stupid money. I know, but it just sits in that beautiful price that I'm willing to
stomach sweet spot, you know? Were you shocked when you filled it up and how much gas has gotten
since the last time you, how expensive it's gotten since the last time you filled it?
Yeah, I mean, it's about a buck, a gallon more or so. It's more expensive.
What I want to know is how tempted were you by the F150? I mean, I'm just trying to picture you
as an F150 driver. Very, yeah. But yeah, I could see it.
Live feedback in the chat room. You seeing this? How many Golfs? Someone screenshot it by YouTube
face. Uh-oh. Yeah, they're getting your YouTube thumbnails ready.
So let me break it down for the audience, right? I mean, I'm very interested in the F150 Lightning.
I will just set it up front, but I don't think the availability is going to be there for two,
three, four years. The electric charging infrastructure isn't going to be there for
a similar length of time, at least. So I will keep that one on the back burner. And for now,
I've got my old Chevy pickup, which will do double duty just fine as like a going to the
dump with boxes in the backside kind of thing.
Like a rock.
Rock. So this is Golf Number 6. I bought the exact, and I do mean identically,
spec'd. The exact same Golf R that I had a year ago.
Amazing. I mean, I know you loved it, so it makes some sense.
I did love it, yeah. It's a 2019 Mark 7.5 Golf R in lapis blue with the English town wheels.
Now we're just trying to figure out when somehow... Alex and I geographically are very far apart,
about 4,000 miles of driving. So we want to go driving. We would love to go driving.
We do, yeah. So this one only had 6,000, well, 5,000 miles on it when I bought it.
Well, put a few more on there and drive up here. What's the big deal?
No, but this is the thing. I've got a low mileage example. I'd like to keep it that way.
So I was looking into shipping the car over to you for Linux Fest Northwest next year.
Ah, here we go. Maybe we could do some canyon carving together up in the old cascades.
That'd be pretty great. You know, I'd always be down. Just a few roads I'd take you on.
So I'll just be very brief. But Golf No. 5 was another Golf R. Golf No. 4 was the one that I
bought when I emigrated here, which was a red GTI, which is the one that you rode in.
No. 3 was a black GTI that I had in England, which is a Mark 7, 2016.
I had one of the Dieselgate 2-liter diesel Mark 6 Golfs. My very first one, though,
was a 1.6 petrol T-Redge from 1997. That was my first Golf, and I loved that thing. It was so great.
Well, what you could do is if you could get all of them again, you could just sort of stack them
end to end and build a bridge over to the UK for your upcoming meetup in August.
I could, yeah. Before I segue into that, though, I'm just going to say, I do want to buy one more.
There's such a good segue, though.
I know.
All right. Okay. All right. We'll let it go.
I want to buy one more Golf, and that is the Mark 4. The Mark 4 R32 in that beautiful blue color.
You know the one. You know the one. It's got the VR6 engine in it, so it sounds like a Wookiee
when it goes.
I think also my son, Dylan, that's... He wants that to be his first car.
He's been looking. He's already looking. Can you believe that? It's a beautiful car.
You went down there. Yeah, you claimed your prize again. You found your one true car love,
and then you drove it home. It's kind of a romantic story in a way.
I had to go to Tampa to get it, but, you know, Tampa's weird. I'll just say that up front, Mike.
No disrespect to anybody that lives there, but, you know, some of the people that spoke to me were
peculiar.
All right. Shall I take you up on your Segway offer now?
Yeah, yeah. I still offer it up.
UK Meetup is still provisionally happening. However, over the weekend, American Airlines
emailed me to say, Hey, Mr. Kretschmar, we've changed your flight. Good news. It's earlier.
And I'm like, that's not good news, because what we planned was to do the meetup on the Saturday
and then fly home immediately on the Sunday so that, you know, if we got sick or anything like
that, there'd be no problems with re-entry or anything like that. So I don't really want to
compromise on that by having the meetup, you know, a week earlier or anything like that,
you know, for obvious reasons. I don't want to be stuck in the UK. That would just be horrendous.
Who could put up with that? So what I'm thinking at this point is we'll probably end up moving it
to the Friday night. So that'll be Friday night, and then we'll be flying back to the UK on Sunday.
Friday the 5th of August. I would implore you to keep an eye on the meetup page,
meetup.com slash Jupiter broadcasting for all the details as they happen in real time,
you know, venue dates, all that kind of stuff. It's all still up in the air right now. So please
don't book anything until we say it's confirmed. Yeah. So keep an eye out there if you are planning
to attend, because there will be an update soon as Alex gets everything sorted out.
Sorry to hear that, man. It's happening to a lot of people right now with the travel stuff. It's
just sort of the situation I think the airlines are in. Yeah, it's a problem with Raleigh as an
airport, I think, because it only gets one direct flight a day. And if for any reason that flight,
you know, the equipment's not available or crews, and it's a bit far out to be worrying about that.
I would have thought if you're American, but I guess not. Thank you for the update,
even if it is sort of it's the good news is the meetup goes on. It's just the date's going to
have to adjust and the location will likely have to adjust. All right. Well, let's shift gears.
We've talked before about this trend of small command line utilities becoming web apps,
and we've covered scrutiny back in what was it, Alex? 28 ish? Episode 28. Yeah. All right. Give
us an update, sir. Well, those of you that remember that far back, episode 28, we talked
about a hard drive monitoring utility called Scrutiny. The developer Analog J was talking
about GitHub sponsors at the time and how if he got enough, he was going to open source it.
That happened, and so he open sourced the project. Great. Some time has elapsed since then,
and he has just released a new big update, version 0.4. It looks really good too. You wouldn't think
there's so much to get out of a tool like this, but if you have a setup with several disks in it,
like we have three servers here at the studio that have a ton of disks in them, this is really handy.
It is actually. One of the things I love about open source is how people like this developer
show up in our Discord and say, hey guys, I'm doing a beta test on this new feature. Can I
have some people to just try this out for me? He was actually in our storage channel talking to
people in the Discord for the last week or two ahead of this release. What he's done is he's
added InfluxDB support, which has lots of really nice features. The biggest of which is that it
now has automatic data down sampling support. What that means in English is rather than having
minute by minute updates of your hard drive stats for 10 years, which am I going to look at minute
by minute stats of my hard drives five years ago? No, probably not. With the data down sampling,
he can significantly reduce the size of the databases and obviously that then increases
performance and everything else that goes with it. One of my other favorite features in this release
is he has made the thresholds that he's using against the Backblaze database, which is what's
underpinning his failure thresholds, he's made those thresholds tweakable. If you see a parameter
in there that you think, yeah, that says failed, but actually I trust that particular parameter,
whatever it might be. CRC cable errors, for example, might trigger a failure in scrutiny
that actually I know was just a bad cable that I've swapped out.
That's slick. It's such a great use of that Backblaze data as well to give you a baseline
to know are these numbers, are these normal or is this a problem? That's pretty great.
Will you get that loaded on our servers here? I mean, come on.
Yeah, I mean, I should do. I actually gave him some feedback about the app and how
drives were identifying themselves. He was using dev slash SDA as the main identifier.
And those of you that have worked with Linux servers for any time know that SDA is not a
guaranteed, you know, that drive could tomorrow when it reboots be SDB or SDQ or whatever it
might be. And so he's actually enabled a bunch of other features as well around disk identification
via label and a bunch of other features, too. So it's a great release. Go and check it over at
GitHub dot com slash analog J slash scrutiny. There'll be a link to that in the show notes.
Indeeds at self hosted dot show slash 72. Well, I think this next I hate to call it app because
it's much more than that. But this next find of yours is going to be one that'll be hit with my
kids. It's called Cartridge. It's a self hosted game library. It's really targeted at folks like
me who have a ridiculous amount of classic roms because I guess I just can't really go beyond the
old games. I don't know. I just still love old retro games so much. I was thinking how perfect
this would be for anybody that's got a steam deck or any kind of gaming handheld. Oh, yeah. Yeah.
So essentially what this thing is, it's a self hosted game library for roms. Read only media.
That's what it stands for, right? In the old days, read only. Yeah, read only memory. Oh,
yeah, probably that. Right now it's quite basic. It's still in its early stages, version 0.1. But
on the roadmap, there's some really interesting features, which I thought we should mention on
the show. So for now, you can scan for rom files and match it with an IGDB game information database.
And you can serve rom download links alongside those game details. But the things that are
coming that actually have me really interested are user creation. So you'd be able to manage
access to games for your kids and say, right, you're not allowed to play Sonic the Hedgehog.
It's too risque. Or users can request games a bit like, you know, Plex requests or what's it called
OMBi, I think these days. But here's the coolest one. He's planning to add support to play select
roms in the browser using JavaScript emulators. That really would make it perfect on the deck
because you got a web browser on the deck. It's just a nice way to display your roms too.
There's that element of it that I think I like is for me, they're all just in a folder that just
sits on my file server. There's nothing really flashy about it. There's no like front end like
I have with my movies and my TV shows. You know, there's no way for the kids really to kind of
review them and select them. It's sort of like dad sets them up with one and lets them go for a
while. So if you're interested in that kind of, you know, retro gaming scene, go and go and check
that out. There'll be a link in the show notes. The app is called cartridge. Now you were checking
out a self-hosted bookmark management tool called service. Yes, I was. And this is something that I
use a lot in my workflow. I find a story, I'm reading a story and I want to capture it while
I'm on the go or something like that. And I want to save it in a bookmark manager. I don't use
bookmarks a lot in my web browser, but I do use bookmarks a lot with services that will capture
the URL and tag them and generate feeds around them. And then on top of that, I even have tooling
internally that will send them, depending on how I tag a link to different channels for different
show production purposes. So a self-hosted bookmark manager has been on my radar for a long time.
And this is one that I think has a lot of potential. It's super easy to get up and going.
They make a Docker image available. They've got an example Docker compose that you replace a few
variables. The application also creates an environment variable folder and a file where
you can go in there and set some environment variables if you need to. The idea is it's a
self-hosted bookmark manager that lets you organize bookmarks with tags, group them together. And then
it also has a really cool command line palette. So you can find them, search through them,
get at them really quickly. This is, it sounds like something you wouldn't need very often, but
sometimes we're two weeks down the road after a story came out and we remember, wasn't there a
story about such and such? It's great for that kind of thing. I mean, I'm curious to know what
your workflow actually is because I do a bunch of, you know, collation, you know, into two weeks in
between each episode. You know, like on Reddit, for example, I'll upvote something or I'll star
it or save it. And then I'll go through and look at the things that I've saved in between, you know,
when we're creating a show doc, for example. I would love it if I could have some way of scraping
those saved Reddit things into a bookmark manager or some description, but also have a way of saving
things outside of Reddit on mobile. Cause that's where I discover, you know, that's where I doom
scroll. Yes, same. Absolutely. I mean, if that is the number one requirement for this workflow for
me. So I have not gotten that far to test this because as I was registering and setting it up,
I started getting server 500 errors and then it was time to do the show and I never got it working
after that. So I don't know what the mobile workflow is, but what I use today, and this is what
this will have to do is I use pinboard and there's apps that you can install on the share sheet. So,
you know, I'm looking at a story on Reddit or I'm in a news reader or I'm on a webpage. Every
application on mobile lets you share the URL. And so you got to have something that works with that.
So right now what I do is I share, send it to pinboard. A lot of times it just auto generates
the title, but sometimes I put a title in and then I give it a tag. So like for this show,
it's SSH, you know, for Linux action news, it's LAN pinboard generates RSS feeds for each one of
those tags. So then I bring that into my feed reader. So I have meta feeds essentially in my
RSS feed reader for each of the shows where I have every link from across every service that I've
collected. So when it's time to sit down and prepare a show doc, I bring up my feed reader,
I bring up my feed reader, I go to self hosted, I've got, you know, Reddit links, I've got emails,
because when an email comes in, I might throw it in our pay stock. And then I'll pinboard that as
well. So I can grab that and I just have it all right there in one list. And so that's what I'd
like to replace with this. That's the way to do it. Yeah, that sounds like a pretty good workflow.
Pinboard you say? Now that is a service I don't mind supporting because it's an independent
developer. You know, he built up his own infrastructure and he kind of created it after
I think it was like Delicious. There was a bookmarking service called Delicious. They
got a whole bunch of people on board and then one day they're like, all right, well, so long. Thanks
for all the fish. See you later, everybody. And we were all just left holding the bag being like,
well, what do we do now? And so this developer came along and said, I'll build something. I
became a user immediately. So I have like some sweetheart price that I pay for it.
That sounds pretty nice. Now a bit of real time feedback in the Discord. Someone has just linked
something called dogsheep.github.io. And this thing looks pretty cool. So it builds itself
as a collection of tools for personal analytics using SQL Lite and Dataset. And it looks like
essentially this thing scrapes all of your cloud services. So Twitter, HealthKit, Google,
GitHub, Hacker News, et cetera, and then puts it all into a central SQLite database.
Wow. I've never even heard of a dog sheep, huh?
Yeah, I thought it was going to be something else for a second, but no dog sheep people.
It's not rude. All right. We'll put a link to this in the notes. I haven't tried it,
but this looks pretty cool. This is like a meta collector. Yeah, I definitely want to get all
this on my own storage and that kind of stuff. That's big. Well, if you want somewhere to host
it, you know where we could send people, right? linode.com slash SSH. Go there to get $100 for
60 days on a new account. And you go there to support this here show. Linode is where we build
anything that we're going to deploy in the cloud, especially anything that our listeners are going
to bang on. Or like if we've got a project or today we're live streaming on our own self-hosted
PeerTube instance. Yeah, that runs on Linode. And actually the way I do that is pretty crazy.
Pretty complicated. I'll get into that because we decided to use NixOS on Linode. I'll get into
that another time. But the actual deployment of PeerTube itself, that's really just a bunch
of Docker compose stuff. You got to set a few environment variables for that as well.
And then you can get up and going. And there's even simpler deployments on Linode. They've got
one-click applications and what they call their marketplace. And that lets you deploy an entire
stack of like GitLab or Jitsi if you want to replace Zoom. Tons. I mean, I could go on and
list all of them. They have new stuff they're adding all the time. And they're really super
great about always adding the latest and greatest distributions on there. So in the new Alma Linux
ships, pretty quickly they have it on there, right? So if you want to deploy on CentOS,
they got it over there. Just about any distro you want to deploy on, even Alpine, they got it over
there. And then one of the nice things that we do like with our PeerTube instance and with our
Nextcloud instance is the backing storage is Linode's S3 compatible object storage.
And that's freaking great because now we're not sitting there managing storage all the time.
We're not sitting there worrying about like, you know, is our Nextcloud server going to run
out of disk space, which is how I used to do it. Now we use object storage and that has been such
a game changer for us, especially for something like this. Like, I don't know how large this
file is going to be. I'll put it on object storage and it just lets us grow as we need.
We just maintain that set. It's been dynamite. They've also been rolling out MVME storage
upgrades to some of the rigs that we run. So we just got like a big performance boost.
And there was just a study, you can find it on Linode's Twitter feed. There was just a study
released that compared Linode to all of the other hyperscalers for performance and GPU compute.
And Linode blows them all out of the door, blows them all out. And it's an independent party that
did that. And you can find that on their website. There's performance reasons, there's support
reasons. Plus there's the opportunity to get $100 to support the show, to go deploy something for
yourself or for your business, get $100, kick the tires and try it. With $100, you can really,
really try the feature set. It's like actual real money you can work with to see what the
services like. They wouldn't do that unless they were confident you're going to like it.
Linode makes it simple and affordable and accessible to deploy and manage
your own infrastructure in the cloud. Go to linode.com slash SSH.
Now I see in the chat that we have one of the core developers of Git T
in there today, which is kind of poignant and kind of relevant to the next topic.
I finally, finally got around to diagnosing why my CI broke in February today.
Oh, great. This should be fascinating.
How many months is that? Three? It's been broken?
Oh man.
I mean, okay, so the CI works if I go in and do the build manually. The thing that was broken
was the webhook. It just took me this long to actually be bothered enough to go in and fix it.
So it turns out in version 1.16, Git T introduced a new webhook allowed host list variable.
Written a blog post about it. There'll be a link in the show notes. It's a very simple
one line change in the app.ini file. Once I'd figured it out, and actually gone and
read the logs that told me exactly what the problem was, it was about 10 minutes to go and fix it.
Isn't that funny? Something gets broken, takes months to get to it. And then when you finally
do get to it, it's not that big of a change. But nice. I'm glad to hear you did find this.
I've definitely been there. That may be what ends up happening with my whole Z-Wave conversion with
homo systems. When I finally do pull the trigger, it's like not that bad. And I end up waiting
months before I do it. So I just want to say thanks to 6543, who's in the Discord chat,
in the live chat as we're live streaming. Thanks for all the great work. Git T is a fantastic
Git server. For those of you that haven't used it, go ahead and check it out. It's spelled Git,
G-I-T-E-A, Git T. It looks very similarly themed to GitHub, but it's self-hostable,
and it's a lot more lightweight than GitLab. I just love it. I've run it for years now.
It's a fantastic project. Well, we got a little bit of news in the self-hosted land that's kind
of in my neck of the woods. I'm becoming a bigger and bigger matrix enthusiast. I kind of feel like
the rest of the world hasn't caught on to the fact that it's like the new HTTP protocol and
the new SMT protocol all in one. But I think the folks over at Rocket Chat have figured it out.
Did you see this announcement, Alex? I'm going to answer your question in a second. I totally
thought you were going down the Ron Burgundy route. I'm becoming more and more of kind of a big deal.
I'm bigger and bigger of a matrix kind of guy. I'm a big deal on matrix, Alex.
That's where you went. That's where you went with that. So yeah, there was some really fantastic
news out of the Matrix project today. Well, out of Rocket Chat too, both of them.
So we just wanted to take a moment to welcome Rocket Chat to Matrix. Given the announcement
that they are switching to using Matrix for standards-based interoperable federation,
this is incredible news. Rocket Chat is one of the leading open source collaboration platforms
with over 12 million users. And shortly, they will all have the option to natively
interoperate with the wider Matrix network. This is slick. Rocket Chat is, you could call it a
Slack, open source Slack alternative, just to kind of give you an idea of what it does.
And as most of these platforms, they were facing a demand to federate, to connect with other
instances. And so I got to imagine what happened is they looked at it, they started doing the math
and they said, well, could we just roll this feature out ourselves and interconnect all these
different Rocket Chat instances? And instead of another chat project, creating another set of
standards for another unified federated network, they decided, well, we'll use the Matrix protocols.
And I think this is fantastic because it's going to use the encryption. It's going to mean that if
you have a Matrix compatible client, and there's more and more of them out there, you can chat now
with somebody on Rocket Chat and vice versa. So there's just a lot of benefit, I think, to this.
Plus, it's sort of like when you try to roll your own encryption, you generally don't roll the best
encryption. It's generally pretty unsafe. I think that's probably pretty true with a lot of
communications protocols too. When you roll your own, it tends not to be great, at least for a
while. So if you can instead use something that's an open source standard that's been tested for
years, it's one less thing you have to worry about. It's one less thing you have to be an expert in.
Anyone remember XMPP? Wasn't that supposed to be the future?
I still love XMPP. I still do. There is a low-key movement in podcasting, in the podcasting 2.0
corner, to use XMPP as a back-end real-time comments in podcast apps that would sort of use
XMPP to move it between the various podcast apps on the background. So it may come back
in podcasting. You never know. If you wish hard enough, Alex.
Now, have you ever needed to give anybody access to your server that you weren't completely
comfortable giving them access to, to run a command or something?
Hmm, just that Alan Jude, you know, you put him on one of your boxes, next thing you know, it's a free BSD machine.
That wasn't quite what I meant. What I meant was something like restarting Plex or doing a wake-on-land command or something like that.
Well, I have a project for you if you ever wanted to solve that problem, and it's called Olive Tin.
This project lets you safely give access to commands for less technical people in the web browser.
In the web browser? Yeah, right. So what this does is you configure a bunch of commands under the hood that you want it to execute, and it then displays each command as a different button in its web UI.
Oh, this is slick. Big buttons, too. So it kind of almost like a dashboard, but simplified.
Yeah, be very good and useful for, you know, triggering something. Plex is a good example.
I used to have a Telegram bot that I configured for my family when I was having loads of transcoding issues a couple of years ago.
They would text the Telegram bot and say, you know, slash Plex, and it would restart the Docker container.
But this would be just as good and probably an awful lot easier to set up than a Telegram bot.
Yeah, so essentially it outputs for you a very simple web page with very large buttons, and it looks like you can set like emoticons to add some graphics to it.
I see on the back end, it's just executing some command line script.
I guess it must execute with whatever privileges you're running this application as, so it has to be something that application user has access to.
Well, of course, it runs as Docker or runs in a Docker container.
So, you know, if you want to run commands on the host, you'll have to give it all those various permissions and that kind of thing.
I'll be fine. I just run Docker as root, so I'll be fine. Don't run Docker as root, I kid.
So did you see that Google have done the big 180 on the G Suite legacy edition stuff?
Yeah, they walked this one back. You know, we covered this. We were not very impressed.
And it seems like a lot of people were not very impressed. I'm kind of surprised they walked it back, actually.
Well, what was supposed to happen was by the end of June, June 27th, the G Suite free edition was supposed to be transitioned away to a paid only version.
And it turns out that enough people have either just straight up quit G Suite or have made enough of a stink about it.
Or what I suspect has happened is they didn't actually finish the dev work needed underneath to migrate that number of people to the real paid product.
That could very well be. That's funny.
Yeah, they've now actually just decided to say, well, actually, those of you that did procrastinate for long enough.
Oh, by the way, we're the good guys now. Yeah, isn't this funny how they feel they just, well, we're not going to do it.
They earn points. So it's sort of a win win situation for them. Plus, you know, they can afford it.
But I think we should take it as the warning shot that it should be. I was thinking about this earlier today.
This is one of the reasons why I want to start using PeerTube for some of our video hosting here.
Not only do I like to self host our infrastructure, but as long as we're using YouTube, I have to maintain a Google account.
And I've been thinking, like, how far do I have to go to de-Google?
And it's pretty nuts because on the back end of JB, we're using the Google apps for email, at least in calendaring.
And then for the video publishing, we're using YouTube, which requires a Google account.
And so when you think about how deep that rabbit hole is, these kinds of shifts by large tech companies give some of us an opportunity to reevaluate just how tight in we are.
And I think a lot of people saw their opportunity to break away. Some people aren't as deep in as I am.
And I think they took it as an opportunity to leave. And I think Google saw some bleeding.
So I think it was a bit of they weren't ready to migrate everybody.
And I think they took a big hit and I think people canceled.
If you look at the business model of our sponsor, Talescale, you know, they build in to the business model.
The fact that if you get smart people on board to using your product early, that will have trickle down effects into the enterprise or trickle up, I suppose, more accurately.
You know, you get DevOps engineers using things at home, you get sys admins using things at home.
They'll go into work and be like, hey, let's just use G Suite. It's brilliant.
Yeah, it's just so easy. We don't have to worry about exchange. We don't have to do all this crap.
It just works. And I wonder how much attrition they saw of people in that segment who are savvy enough to go to Fastmail or go to any other self-hosted email solution or, you know, that kind of thing.
I wonder how much attrition they saw. I'd love to know the data. Obviously, we never will.
But I'm sure they didn't lose too much sleep over it, but I bet it was more than they were comfortable with.
I think Fastmail benefited a lot just based on some of the chatter I saw in our community.
It seemed like a lot of that landed for Fastmail.
I moved to Fastmail. It's been great.
But, you know, when you were talking about it, it almost made me feel like there's almost nothing we can do, though, to stop the overall trend.
Because all three of my kids and every one of their friends at school have Chromebooks and they've had them now since kindergarten.
And they've got multiple, they have like a personal Google account and a school Google account and they know how to use all of the Google tools.
And when they need a document editor, the first thing they do is they go to Google Docs now.
They don't launch LibreOffice. He has LibreOffice on his computer. I bet she's never launched it once.
Get them early. Get them young.
Yeah, it's the old Apple technique.
It's smart. I mean, if you were an exec, that's exactly what you'd say.
It'd be like, this is a 20-year strategy, guys, but this is the way to go.
I feel like we're kind of maybe a dying breed.
Definitely. Definitely. I think so.
I mean, I think it's an interesting thing, like self-hosting in general.
I'm well aware that I'm a nerd and I find sitting in front of a computer screen interesting.
There are plenty of people in this world.
The last thing they want to do is spend their weekends on evenings sat in front of a computer screen.
They want to be detailing their car. They want to be doing woodworking.
They want to be walking their dog or whatever it is that you do you find interesting that isn't self-hosting.
And to them, the trade-off of giving up a bit of privacy and all of their data to advertisers is worth that trade-off.
But, you know, those of us who think about these things, good or bad, I would love to de-Googleify, but it's really hard.
I wonder if they do value.
I just saw a survey today. I should have grabbed it for the show.
I just saw a survey go by today that a ginormous percentage of average consumers that were surveyed, something like 85%, said that the trade-off for their privacy was not worth it.
I was shocked. I didn't grab it for the show, but I think it's a lack of options.
I think they care. I think it's in part a lack of time to invest to find the options and the skill set.
Yeah, I mean, you and I have spent 15 years plus building these skills that allow us to run a Linux server.
And it's not a judgment call.
No, not at all. It's not easy either.
Like, you know, if you were to genuinely sit down and try and explain, I'm thinking back to Linux Action Show with Noah's switch to Linux challenge right now.
Right, right.
If you were to walk into Best Buy with an SSD and say to someone, here, go and stick this in your computer.
First of all, how many people would have a computer that could actually take an SSD that isn't soldered onto the motherboard, for example, these days?
I know.
But how many people genuinely would have the first clue what to do next?
And it's such a lot of information that we've learned over, like I say, my whole life.
I built my first computer when I was 13 from parts, and then the first Linux I ran was, I think, Ubuntu 7, whatever that was.
I wonder if this conversation is similar to the conversation that radio enthusiasts had as radios became normalized and car enthusiasts had as cars kind of became sealed up and people didn't do their own oil changes and things like that anymore.
But there's still people that are into that stuff, but it's more of a niche.
And so I feel like it's kind of on us to use this stuff to drive demand and create a market for it, because otherwise, if we don't do it, like literally no one else will.
Well, I mean, the self-hosted subreddit is one of the busiest that I frequent.
So I think self-hosting in general is pretty healthy.
There's lots of people who, you know, don't live in the Western world, for example, that rely on things like this to get around great firewalls and censorship of various different degrees and stuff like that.
You know, it's not just people like you and me who are choosing to reject big tech, for want of a better phrase.
Some people have to to escape governments and, you know, whatever it might be.
So I think there's also the privacy aspect for just a lot of people is becoming more and more even in the West.
I think it's becoming more and more important to them.
It's a bigger and bigger motivator.
I don't think it's the only reason.
I think there's several there's lots of things that drive people into self-hosting.
Sometimes it's like we've said before, you just want to have your own media library and sometimes it's privacy.
Sometimes it's issues with big tech.
It's not going to die, right?
In fact, it'll grow.
It'll continue to grow.
The Google trends and stuff continue to grow at a faster rate, I suppose.
Yeah, this gives me a chance to plug one of my favorite websites, killedbygoogle.com.
Yeah, yes.
But, you know, the self-hosting trend in general, there's lots of trends in the media industry that
push people are pushing people away from legitimate streaming services at present.
Five years ago, maybe the only option in the room was Netflix, maybe an Amazon Prime video.
Yeah.
How many are there now?
It could not even tell you, man.
It's crazy.
And, you know, it's like we just created Cable 2.0.
So I know a lot of people are rejecting that and going to, you know, r slash piracy and
doing all sorts of nefarious things over there.
I feel like we're in a good spot generally as a community.
There's so much open source software that just you could only have dreamt of 10 years ago.
You know, you could legitimately run your whole business using nothing
but open source software without too much compromise, I think.
TailScale.com slash SSH.
Go sign up for TailScale for up to 20 devices for free and support the show.
It's a zero config VPN.
It installs on any device in minutes.
It manages your firewall rules for you.
It works from anywhere, even if you have the dreaded double carrier NAT like I do.
I switch between networks real time.
I'm talking like my neighbor's Wi-Fi, multiple cellular connections and Starlink.
And TailScale keeps up. I don't know how they do it, man.
If you've got like under 10 devices, I bet you could probably get it deployed on all
your systems in under five minutes.
And what I love about TailScale is it's protected by WireGuard's noise protocol.
So they have a backplane that helps you get connected.
But you build a mesh network between all your machines.
That also keeps their costs down, which lets them keep that free account for up to 20 devices.
TailScale rolls out in minutes.
Your devices get connected to your network.
It rolls out in minutes. Your devices get connected directly.
They'll work from any physical location.
I run it on my VMs.
I run it on my Raspberry Pis.
I run it on my mobile devices.
Sometimes when Alex and I want to collaborate for prepping for the show,
he'll create a machine on his network and then he'll just share it to me in TailScale.
And then all of a sudden, now I see one of Alex's machines on my TailScale list.
And you can restrict it to like a specific port.
You've got full control over it, too.
Super great for that kind of thing.
It was pretty cool this week when I flew to Tampa to buy that car.
I wake up in Raleigh and within two hours I'm in Tampa sat in a car dealership
waiting for them to do whatever it is they do in car dealerships.
It takes forever, whatever it is.
Fire up TailScale and it's as if I'm here.
It's such a mind-bending operation and it's a really cool tool.
Yeah. I mean, I'm not new to VPNs, man.
I am not new to VPNs.
I have been using VPNs since I was on dial-up modems.
And I have never had an experience like this.
Nothing beats TailScale.
It changes the way you work.
It's great for connecting friends and family, too, if you want to provide support for them.
It's even better when you're working on the go.
Even just a few of your devices.
You got a mobile device and a desktop and you want to connect them directly together
over a flat network.
Well, TailScale is going to do it.
Go try it out.
20 machines for free and support the show.
TailScale.com
Now, Bronzewing writes in with 9001 SATs talking about 3D printing.
Hi, Chris and the Badger.
I just wanted to thank you for the content that you guys create.
I've listened to every episode and I just recently jumped into the 3D printing world.
Any chance I might hear more of that type of content?
I find 3D printing really complements small board computers and you can make some really
neat stuff that runs Linux.
Well, you're our 3D printing guy, Alex.
Apparently so.
Yeah, it's a question that we've tossed around internally this week after getting this
bit of feedback.
We might do some special episodes on it, you know, around the holidays and things like
that, where we need a week off for travel or whatever it might be.
We don't have any plans really to make it a regular feature, mostly because, Chris,
you don't really know much about 3D printing.
So I suppose if I ever got one, we'd talk about it, right?
You can almost see a whole different show, really.
It could be its own show, really.
It could, absolutely.
Yeah.
I mean, who knows?
We've floated the idea of doing self-hosted weekly for so long now that I don't think
it's ever going to happen.
Who knows?
Who knows?
Watch this space.
We'll see.
Yeah, maybe if we get a few more boosts.
But in the off weeks, for example, there could be space for like a show about maker stuff,
you know, electronics and 3D printing and that kind of stuff.
If you're interested in that kind of thing, give us an idea of how many people listen
to this show would find that interesting because it would be a lot of work to spin up a whole
new show.
But we're not averse to the idea.
I think we'd also be interested if somebody is pretty deep into the stuff and they feel
passionate about it and feel like they could present it.
Yes, that would be interesting to hear from that person as well.
Absolutely.
You know, maybe we build a show around a host at some point.
Turquoise Fox boosted in seven days ago with 2349 sets.
I feel like that's meaningful.
It's a very specific 2349 and he's just sharing some UK meetup hype, which we've got a lot
of that.
What would?
Yeah, yeah.
But as I as I look at the meetup page right now, there's 59 people have accepted.
So I know I'm going to change the date on.
So that might that might fluctuate a little, but be interesting to see how many people
show up.
You've been throwing some parties recently, Alex.
You've been throwing some parties.
I know.
I know I need to slow down and, you know, chill.
Marcel's calling you out seven days ago.
One, two, three, four sets.
Alex, weren't you just criticizing bundled containers in a recent episode?
This is a reference to last week's or last two weeks episode.
So Marcel, my friend, my wonderful pal, there is a difference between a monolithic bastard
of a container like GitLab that pulls down six gigabytes of RAM.
And I think they've changed it now.
I don't think that container exists.
Someone told me I haven't checked.
But anyway, the there's a difference between that kind of bundle container that's running
8000 services in one container and a self-hosted recipes app running a small web server and
the application itself.
Two services versus eight million.
For me, I think it's a pretty obvious.
It's not a hard law.
It's just one that has to be interpreted depending on the application and how many people
and how many things it's bundling.
Our last official message, our boost, our last boostagram, I guess you could call it,
came in from the Golden Dragon seven days ago, like he always does with a row of ducks.
And he says, Pew Pew, thanks for the show.
I've been listening since episode one.
I've started learning self-hosting.
I've gotten brave enough to try Jellyfin and when it works, it works very well.
The learning experience has been great and I learn more and more each episode.
Have to give the recipe apps a try as well.
One question I had was, are there any Wi-Fi enabled e-ink displays that you know of?
Great question.
I could I would love to have a wall mounted e-ink display for home assistant.
Yes, but they're expensive.
So there is a bunch of e-ink screens by a company called Waveshare and they will plug
directly into a Raspberry Pi.
But to give you an idea, a seven and a half inch e-ink display on its own without the Raspberry Pi,
which is on Obtanium right now, of course, is $70.
And for that, you could buy a tablet.
I mean, if it's plugged into a Raspberry Pi, it has to be powered anyway.
It's not going to be on a battery, which is where e-ink would win.
Now you can get e-ink displays that will connect into like ESP devices,
like an ESP32 or something like that, and refresh those.
Because obviously an e-ink display only uses power when it updates.
When it's sat there, you know, displaying whatever it's displaying,
it's not using any energy whatsoever.
So for that use case, e-ink is uniquely brilliant.
But for almost every use case I can think of where I want a permanent screen,
there would be power available.
Even if there isn't power all the time, an Android tablet has a battery and it's probably
going to have like five, six hours of battery life.
So I know this because there are times when we're out boondocking,
and I unplug the tablets to let the batteries drain down too.
But when I plug them in, I'm monitoring how much power draw they are.
And it's totally nothing, right?
It's just nothing.
So yeah, you could get even lower with an e-ink display.
I would love to see that.
I don't know.
Let us know what you would use that display for, GoldenDragon.
Because I could picture it, but maybe only for like status update type things,
weather reports, things that don't change very often.
I'm still using that Kindle Fire that I flash with LineageOS as a baby monitor at the moment.
We run the Wyze cams as our baby monitor because that means we can have as many baby monitors
screens as we want without paying the stupid extortionate prices of those things.
So I put Lineage on an old, really old Kindle Fire tablet a long time ago.
And it just works.
It's just reliable.
It just sits on my wife's nightstand and just does its thing.
She can bring it around with her.
But the other nice thing about having WyzeBridge is, I've noticed too,
she could bring it up on her phone if that's what she has with her as well.
So that's very handy.
I'm interested to know what your impression is of the performance.
Because the performance with the stock Amazon Android image on there is dog doo doo.
It is bad.
It is bad, bad.
I think we paid 25 or 28 pounds for the ad-supported version like seven years ago.
I always pick them up on some ridiculous sale.
That's the best part.
It's only worth it if you can put Lineage on it.
Because then it strips out all the cruft and all the crap.
And performance goes from being complete dog turd to being not great.
I'm sure Amazon loves when you remove the ads from their ad-supported version.
So the newer ones, you can't really do that very easily.
So be careful if you are buying a Kindle Fire with that in mind.
Careful which one you buy.
Go and look at the LineageOS wikis and all that kind of stuff.
And they'll give you some good info about what's supported.
In the before times, I would have considered like a little CM4 powered display system, right?
CM4.
Because where I have one of my screens mounted, it's on a bathroom medicine cabinet that we don't use.
And it doesn't have a mirror, just as a wood medicine cabinet.
So the tablet's mounted to that.
But it would be not really much of a problem to drill a hole through that medicine cabinet.
I could have like a Raspberry Pi mounted at the back of the medicine cabinet.
And then just the display on the front and be a lot cleaner.
I think a lot more responsive.
But these days, compute modules are like, you know, as valuable as plywood and wood and gold.
It's getting ridiculous.
And I just got another I find I, you know, I picked one up recently and I just received it.
And now it's like, what do I do with this thing?
Like, they're so rare and precious.
Whatever job I give this, it's going to be it's got to be like important now.
Like, I've I've totally gone from having a drawer full of Raspberry Pis to now everyone I get is like
precious and limited and can't be wasted.
It's getting bad, Alex.
Maybe when that clears up, maybe then I'll build one.
We got a couple of thank you boosts.
J24 boosted in saying he loves the value for value model and also that he loves using Keybase
for personal repositories.
And then we also got one anonymous thank you boost with no message, just a thank you.
I'd love to take a moment to say thank you to our site reliability engineers over at self hosted
dot show slash SRE.
You subscribers over there make the show possible.
Indeed.
And they let us be picky about who we talk to.
And this is something I'm mentioning just for a short period of time, but we get a lot of
this is something I'm mentioning just for a short period of time, but we get all kinds of weird
sponsor requests and one that happens on the Coder show.
It happens on this show occasionally happens on Coder Radio all the time.
It's people email in that want to pay us to interview them and pretend like they're not
paying us to interview them on the show.
Yeah, which is easy money for a podcaster.
That's easy money.
I could do that all day long.
So the members, they let us not even have to consider that kind of crap.
We get to stay focused on super serving our audience.
That's what the members do.
They give us that runway.
So as a thank you, we've created an ad free version of the show and soon not ready yet
because we're building the back end infrastructure to make it possible.
But soon we're also going to create a live feed for our members.
So the live shows that we're now doing, which is now a regular thing for the self hosted
program, soon our members will have an option between two feeds, the ad free feed that we've
always had and the new live feed.
So that way they can just subscribe to that and they get even more show.
And as a thank you to the ad free version, they also get a post show, which is only available
for our members.
Again, self hosted dot show slash SRE.
Now we're doing this show live at the moment every two weeks, 730 pm Eastern.
Where can people go to find that when we're live, Chris?
You say at the moment, but as far as I know, I think we're doing it going forward, right?
Jupiter dot tube.
And we do it on Wednesdays at 730 pm Eastern for 30 pm Pacific.
And we'll keep it posted over.
We'll have it archived over there, too.
That's the idea is that if you'd like to catch a live version and you'd like to see the video
version, we will have it archived there.
Our focus is going to remain the audio feed that gets released.
But we felt like this was a nice way to kind of interact with our community on a more ongoing
basis, gives everybody an opportunity to show up, say hi, hang out.
Now, most of you already know this, but self hosted dot show slash contact is the place
to go to get in touch with us.
You can find me on Twitter at ironic badger, and I'm in the discord at Alex KTZ.
That's right.
That discord is at self hosted dot show slash discord.
I'm on Twitter at Chris LAS.
The network has a telegram group that you can join.
Jupiter broadcasting dot com slash telegram.
Thanks for listening, everybody.
That was self hosted dot show slash 72.
