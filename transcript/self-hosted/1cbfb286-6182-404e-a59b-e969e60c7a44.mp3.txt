Well, I'm pleased to welcome back to the show. Mr. Chris Fisher. Welcome back, Chris.
Thank you, Alex. I just got done drying everything off only a few moments ago.
We missed you, man. So it's story time. I need to stay a while and listen.
Yes. And first of all, thank you to Morgan for filling in. I, at the last minute,
had to jump out when I realized that my laptop had got soaked and I didn't want to turn it on.
And so I told Alex, you gotta find somebody to fill in for me.
All right. So I was setting up to go camp out in the woods. Brief story.
And I wanted to get out to the woods and get set up in time for the show.
And so I was in a bit of a rush and I thought, because I'm an idiot, I thought, hey, you know,
be a great idea is I'll do some updates on this laptop. And I've got this really old 2013 Mac
book that runs Arch Linux, by the way. And so it's for me, it's like this thrill to boot it
up about once every six months and see if when I do an update, if the installation explodes or not.
Right. So I thought, well, I'm running around packing up the RV. I'll set this thing to do
some updates just so I can, you know, have like a little thing to do for my ADD brain
and check in on it. And so I'm packing up and I go around and I collect all of my electronics because
I, my kids and I had been going through some stuff. And so we had the fire tablets were down
off the wall that we use to control home assistant, our front end and some game controllers were out
and we're going down the road and we want to get there quick. So I just took this basket and like
a good little boy, I picked up everything and put it in my basket. And of course, I don't want that
basket to spill. So I, I set it in the back in the bathroom and finished up my laptop and closed the
lid and went about packing up the rest of the RV. I'm driving down the road for probably 20, 25
minutes. And I realized I should probably get gas because I'm going to be off grid for a while. And
if for some reason we don't get good solar, I'm going to need to be able to run my generator.
So I, I, I pull up to a gas station and I start to pull in, which is a downhill kind of turn in.
And as I pull into the gas station and begin to decline down into the parking lot, I hear like,
like a wave sound behind me. Like, I'm like, is there a noisemaker on? And I, I turn around and
look over my shoulder, Alex, and I see this wave of water coming down the middle of the hallway of
my RV. It sloshes down into the, into the, into the step. Well, it's all over the place. It's
coming down into my feet while I'm driving. It was everywhere. How tight did your asshole
pocket when you saw that Alex in like one motion, I like grabbed the radio and I radioed to my wife
because she's chasing me in the car behind there. You got to get in here quick. We got an emergency.
I throw the radio down. I parked the RV stand up and I began just walking straight to the back. And
as I approach the back of the RV, I hear a sound I immediately recognize it's my water pump and it's
pumping and it's pumping and it's pumping. It shouldn't be on, but in our rush to leave, I had
left it on and didn't notice. And so I flip it off as I opened the door and I look right at the sink
where I just instinctively knew the problem was going to be somehow I knew, and I could immediately
see the entire chain of events. I had left that big old heavy Mac book on the counter. And when I
went down the road, it slid down the counter, slid just right and fell into the sink. And as it fell,
it turned the faucet on, which is where my basket full of electronics was sitting. Oh, that be
turned that that Alex, it turned into a bathtub. Alex, it was, it was so bad. Alex, it soaked
everything and then proceeded to spill out from there into the rest of the RV in about about 17,
17, 15, 20 gallons ish. It's hard to say. Yeah. Got the laptop, got all the fire tablets, got the
game controllers, got all the charging bricks, everything, not to mention flooded the RV. I had
to act quick. And so thankfully I was able to position the RV in such a way that it kind of
tilted it. So I could just get all the water to pour out into one direction. And then I just spent
like two hours drying it up. And then we moved out to our spot in the woods and spend another
couple of hours trying to dry it all out. I lost a lot of devices. A lot of good devices died that
day, Alex, but not that stupid old Mac book. It's still kicking even though it got water in the event
in the vents and all of that, it's still kicking. So the device that caused the problem just ran
away going tee, not today. It's doing great. Yep. Although its power adapter bit the dust. So I
don't know exactly what its long-term plan was. That's like cutting your nose off to spite your
face, isn't it? That's why you should plan and plan to learn. Visit our sponsor, Cloud Guru,
the leader of learning for the cloud, Linux, and other modern tech skills, hundreds of courses
and thousands of hands-on labs. Get certified, get hired, get learning at a cloudguru.com.
You know, that story just hurts me so deeply because water and electronics, you just have
this pathological thing that they don't go, they just don't mix. I've probably missed out on several
experiences in my life because I had a phone in my pocket. I'm like, well, I'm not going to go and
run in the ocean or whatever it is because I've got a phone in my pocket.
And so many devices, obvious statement time, but I really was feeling this,
so many devices have the battery built in. And so there's just nothing I can do.
Yeah. Damn, man. I feel your pain. I really do. Yeah. It was rough. It was rough. And so now I
have to selectively choose what I'm going to replace and what I'm just going to try to live
without. Oh yeah. And you just missed Prime Day. I know! That crossed my mind because I had a couple
of fire tablets in the mix. Gone. Womp womp. All right. So you got something to cheer me up?
Well, I was watching YouTube the other day, as is often the case in my household, and I was
watching a video by Techno Tim and he did an Orthalia introduction. This is a single sign-on
service that basically allows you to have one login cookie get set, which then allows you to
log into all of the services that you select through a set of rules that you configure to say,
right, if I want to access Nextcloud, as long as I've got this token set, then I'm all good. And
then you could do it for a wiki or any of the services that are running on your system.
And the really nice thing is it's configured with a single line of Docker Compose configurations.
So you just add a single line to declare that you want to use Orthalia as what's
called a piece of middleware in the traffic configuration. And you're good to go. And that's
it. I see. So it is, first of all, we should mention it's open source. And it essentially
takes authentication requests using NGINX and provides the authorization for those
authentication requests. Yeah, not just NGINX, it supports traffic as well as a bunch of others.
And it actually more recently supports Kubernetes Ingress controllers, which is nice as well.
All right, I'm checking it out right now. And it actually looks like it has a pretty good interface
too. So this will have linked in the show notes or you can go to AUTHELIA.com. Yeah, you don't
really need a whole bunch of interface for a login client. Essentially what happens when you
have a service that's backed by this, let's say I go to wiki, my personal wiki, my tiddly wiki,
traffic will detect that I've set that piece of middleware as part of the chain of traffic that
it wants to go through. And so AUTHELIA will then pop up a standard web form. I'll type in
my username and password. It does support two-factor authentication. So even for services
that don't have 2FA natively, I can use AUTHELIA to add 2FA to those services as well. And then
just transparently that token lasts for the length and duration of your session. You can
figure how long it is. I think it's five minutes by default. Any other service that has the same
rule on your system, it will reuse that authentication token. So if you're switching
between a bunch of different services on your system, log in once and you're logged into all
of them all at once automatically. Boy, that does seem nice. It has a lot of great features in here.
All right. Well, it sounds like something to check out. We talk about this kind of stuff also
when we talk about things like hosting your own password manager or hosting your own email.
I wonder if there's an audience and I wonder if you out there too, I wonder if there's a portion
of the audience that thinks I'd never want to host this. This crosses a line. This breaks and
things get hosed. And so I wonder if there isn't a discussion to be had there, Alex, about where that
line is for us and if we ever consider dropping something and saying, you know what, I'll just
go with a commercial service for this. Is this grumpy old man Alex coming out here? But my
tolerance for stuff breaking, be it an update, be it a dodgy power cable, whatever the reason,
my tolerance is so low these days. And a couple of episodes ago I mentioned I had my server on
the desk next to me because I was troubleshooting some issues with hard drives failing. Turns out
it wasn't the hard drives failing and I wasted maybe three weeks on trying all sorts of different
drives and cables and disk controllers. No, it was the power cable from the power supply to the
drives. No kidding. I wasted three weeks on that damn thing. And that just left me with a huge
bitter taste in my mouth. And I'm not going to stop self-hosting. Don't worry audience, we're okay.
But there were just moments in that three week period I was like, screw this. I just want to
throw the towel in and just be done and just pay Netflix or whoever it is. Wow. In that same period
of time, I think you also had a certain home assistant update not go so well too. So you
were really getting it from both ends. Yeah, that's the thing. And this week, another example is
that Nextcloud just stopped working for some reason. I have no idea why. I've been sat on
Nextcloud 19 for the last year plus. I haven't touched it. I pull in the regular updates that
they provide to the 19 branch through Docker Hub tagging, but I don't update major versions on
Nextcloud unless I have a good reason to because I don't want all of the new stuff. I just use it
for documents. That's pretty much it. Right. I actually figured this out because I got a notification
on my phone because photo upload had stopped working. It said this server is in maintenance
mode. And I'm like, okay, yeah, I remember. I've had this before. So you Google it. First result
says go into the config file and edit a single line that says change maintenance mode from true
to false in the config.php file. So I did that. It was already set to maintenance mode false.
So I'm like, okay, well, clearly something's going on here. So I then start looking into
the Nextcloud container logs. And then it said something about character encoding, UTF-8 charsets.
And I just, at that point I was like, oh no, here we go. This is going to be a long evening.
Long story short, I ended up having to go into the MySQL container itself with a Docker exec command.
Get into the MySQL nitty-gritty details, delete and change a couple of data types from
varchar to text fields and all this, you know, stuff that's way over the head of most people
doing self-hosting, unless this is your day job. And I just thought to myself, who is this stuff
targeted at? If I was paying for Nextcloud as a hosted service, I mean, these things exist,
like Google drive is similar, OneDrive, you know, all these different cloud file repositories.
If these things broke and I had to jump through all these different hoops to fix them,
I would just migrate to a different service. And yet, because I feel a certain sense of obligation,
partly because of this show, but also partly because of my beliefs towards self-hosting in
general, I power through it. But sometimes I just want to throw the towel in, you know?
Did you ever get to the root of why that Nextcloud issue just cropped up?
I think it was because of the character encoding. So what I ended up doing as part of the
troubleshooting process was like, right, okay, well, I'm in the weeds here. I may as well go to
Nextcloud 22 whilst I'm here. Yeah, that would be my line of thinking too.
Yeah. And then I thought it didn't start because I thought, oh, it's some database
schema changes have probably happened and it's just not tested properly on 19. Okay, fine.
I'll go to the next major release that's stable. Yeah. And so like I said to you, I had to drop to
the MySQL command line, delete a couple of tables that were failing the repair because there's an OCC
command. So you can log into the Nextcloud container and run, there's like a shell,
like a CLI tool built into it called OCC. Own Cloud Client, I would imagine is what it stands for.
Don't quote me on that. And you can do a bunch of maintenance stuff. You can turn maintenance mode
on and off. You can repair things, et cetera, et cetera. And it kept failing on this line item
to do with news articles, which is a plugin I don't even use anymore. I think I enabled it
for testing and then forgot about it. And much like my Home Assistant update, I probably missed
it in the logs because I don't necessarily look at the logs every day because I've got other stuff
to do. And yeah, once I deleted the news, once I'd gone into the correct database table and then
deleted the three or four lines that were causing the schema migrations to fail, then the upgrade
proceeded and it was all fine, but it took me a couple of hours. I've had those moments where I
thought maybe a server was dead and gone. And I thought, I don't know if I ever want to rebuild
this. And then thankfully, they came back and then I thought, okay, I better get my backup game.
I better get my backup figured out. Yeah, because you really got it. You got a hardware failure in
your server. You got a software failure in Nextcloud, a pretty dramatic Home Assistant
failure based on some deprecation and changes. I mean, you got it one after another. I recently
also had a Home Assistant update go south when the OS update didn't complete correctly, the system
locked up and then rebooted and then it couldn't get an IP until I had fiddled with it for quite
a while. And for a brief moment, I thought to myself, should I just bail on this and maybe just
go back to a traditional server and Home Assistant core container and just keep it simple.
And then it gets working again. And then I think, okay, no, this is better. And I like this.
And I think to myself in the grand scheme of things, this is the cost of having full control
over these services. And it does give me a better appreciation of the value that the cloud providers
are offering. And it makes me also understand how valuable my data must be if they can pay for these
services based on mining my information. Like, wow, there must be some real value there because
it's not cheap. And to keep something reliable like file services for a 10-year streak actually
takes an incredible amount of effort. Yeah, you're not wrong. I mean, these guys, they were entire
jobs, site reliability engineers. That's the name of our supporters club that we have. And
there's an entire job dedicated to keeping things up and stable and reliable. And these guys,
they write software, they write scripts, they do all sorts of Ninja magic to keep these services
online. I think part of it, Alex, is giving yourself, and you've done this, the ability
to rebuild fairly quickly. You do that. If you adopt something, you make sure that you can redeploy
it as necessary and those kinds of things, I think they help a lot. But I think this show
should ask the question more often, is there a cloud service that could do that? And I think
is there a cloud service that could do this? And if there is, why are we not choosing to use it?
Because it is a big trade-off every time. And the more critical the service is to you,
I think the more serious you have to consider that. Trying to think of a good example, I suppose
Wiki would be a decent one because you can probably throw some stuff up on GitHub in a
random repository with a bunch of text files and call that a Wiki if you want to. You could also
go to some random website and buy probably Wiki capabilities, but there's nothing quite like
hosting your own and keeping that kind of information in-house because the role of Wiki
in particular fulfills often is to store proprietary custom information, maybe Wi-Fi
passwords for your house or something, or the code to the safe so that your wife can open it
when you're out or something. I don't know what people store in their Wikis, but there could be
some sensitive information in there.
It sounds like you have a code for a safe that if I was ever on your land,
I should try to get that code.
I've got to buy the safe first.
I was like, he has a safe? Oh, okay. But it's a good example. You're right. I have been thinking,
how could I leave my wife notes in a way that is fully secure? And there is this feeling that
I think is actually pretty special and it's this total feel of control. And I feel this when I am
off-grid and I'm generating my own power and I've brought my own food and I don't need anyone to
do anything. For a brief moment, I feel like I'm truly in control. And I have that same sense when
it comes to everything being offline in my RV and being self-contained to the RV and having gone
through this project off-grid where I offloaded a bunch of services and got everything running
locally. When I get access to that stuff, it's this feeling of confidence that we get so sparingly
now with so many cloud services that are integrated with our mobile devices or integrated
with commercial desktops, less and less consumers and technology users have control, less and less.
They have less control than ever of modifying their devices, of controlling their devices,
or even determining who has access to their data or if it can be scanned or any of that.
And so when we have these areas, we can actually exercise that control. We have to keep doing it
or else it will go away. If there's no users of these self-hosted services and if there's no
market demand for this control, eventually the developers and the companies that serve that niche
will dry up. And so it's like you have to always be looking like where can I exercise that control
and where does it matter the most? And that's kind of where I've come down on it. It's like,
okay, this information, like secret stuff I want to give my wife, that is always going to be on my
land. I'm just never going to put it anywhere else. And thankfully, I've come up with a little system
where it's just some markdown files. It's really simple. It's not a big effort to actually do it.
You are right. There are an increasing number of companies doing stuff for this marketplace.
Tuya, we talked about it last episode with Morgan, have announced a native home assistant
integration as part of their product line. So these things are happening and you see,
what's his name? Linus Sebastian has just bought a new house and he's talking about how he's going
to implement smart dampers in every room so he's not air conditioning every room and how there is
lots of proprietary services that could do this stuff and how it's just all so overwhelming. And
I think that's largely what I'm feeling too. It's just a bit overwhelmed by the amount of stuff I
could do. It's not even necessarily just when stuff breaks. It's that feeling of once I put my
daughter to bed or something in the evening of, okay, I've got a couple of hours before I go to
sleep now. I don't want to just sit and veg and watch cartoons necessarily. I'll do that
whilst I'm doing something else. But what out of my huge long list of ideas that I've got,
should I pick? And, oh, I can't be bothered. I'll just watch cartoons.
You know what I've been doing is like the really simple stuff. I went through my home assistant
dashboard and I made individual, I chose like individual icons for each entity. So each light
bulb has like a unique light bulb icon, really just slow kind of paced work while I was watching
Rick and Morty. So it's like not very high cognitive load, but I can sit there and fiddle
with something. And then the other thing that I did recently, it was one of those moments where
I was like, I don't need to build something complicated here. I could just get a couple
of window fans off of Amazon that have manual controls, plug them into some smart plugs,
and I could have some set to input and I could have some set to output. And then I could just
set up automations to turn the smart plugs on and off. And it was one of those moments where
I was like, I could just do something very simple for cooling. And it would probably take me 35
minutes to set it all up. And I was so down in the weeds with all of these things. Like I could
build a new virtualization backend, and then I could set up individual host OSs and then put
containers in there. Like I was going through this entire thing about how I wanted to rebuild
all of the infrastructure. And then I thought, you know what else I could do is I could just
spend 30 minutes doing this tonight. And I'll spend 30 minutes doing that tomorrow. And over
a couple of nights, I got it all done. If it works, it ain't stupid. linode.com slash SSH.
Go there to support the show and get $100 in credit on a new account. Linode is our cloud
hosting provider. When we're building something that we want to experiment with, we do it on
Linode. There's a lot of quick ways to deploy. They have 11 data centers to choose from. They
have crazy fast network connections and a whole range of types of servers. So you can
get like a $5 a month system. But sometimes we want some dedicated CPUs or GPUs. They have a
lot of choices. Roger wrote into the show to say that he used Linode to replace Zoom with
something he can host himself. He says, along with just about everybody else, the Milwaukee
Linux users group had to go to virtual due to COVID-19. And as you might expect from a group
of Linux users, they weren't a big fan of using Zoom. They wanted to use Jitsi. So they looked
around at different providers and they chose Linode. They picked the $5 a month machine,
and they also chose to do the automatic backup service. So that way there's just backups that
are just taken care of. They installed Jitsi Meet on that system, and they're now using it
with Nextcloud Talk to do the video calls for their lug, all running on Linode.
You know, what's really nice about this too is Roger was able to prototype Jitsi and Nextcloud
and try them all out really quickly in environments that are production-style environments. You can
really get a sense for how it's going to perform. And it's pretty great because at one point,
they made a change to Nextcloud just before the lug meeting and it broke. So Roger says they were
able to use the snapshots that they got with the automatic backups and just roll it back.
So it was basically a non-issue. And then after the lug was over, they were able to
continue on with the Nextcloud update. And that's just an example of how you can use Linode, you
know, to run your own Zoom instance. Or they also have a one-click deployment for owncast,
which is essentially a Twitch in a box. You can use it for that as well. There's so many different
choices from hosting your website to their object storage. Like I use it for like a sync thing
instance. Just go try it out, learn something, and experiment with that $100 and support the show
at linode.com slash SSH. Now, in case you haven't heard, we're getting together in Denver. I'm
looking forward to this. And not only is Alex going to be there, but he's going to be our trivia
master at the meetup. So you got to come just to say hi to Alex. Looking forward to that. I've
been working hard on the trivia questions. I promise you there'll be a bunch of Linux questions.
There'll be some, you know, general knowledge stuff, but there's also going to be some like
older, more esoteric hardware questions as well. I've been having a real fun digging out some of
these questions. I'm looking forward to that. So we'll have the meetup details. We have two
meetups actually planned. Alex is going to be at the Denver meetup, but there's also a Salt Lake
City meetup on the books. Details are over at meetup.com slash Jupiter broadcasting. And then
additionally in LadyJupes, my RV, I will have a live tracker and there will be more details
and if it works out, we'll do a little micro meetup. Could just be, you know, just come by
and say hi and we'll have this embedded web page that you'll be able to view over at ColonyTracker.live
that'll show you right where we are at. It's all in the works right now. Just in this last week,
we got the backend set up for own tracks to record where I'm actually going to be at. And
that's a pretty neat deal, Alex. How are you doing that? Is that up on Linode or something?
Oh yeah, of course. Of course. Naturally.
Yeah, yeah, of course. Yeah. Yeah. In fact, we just decided to do a dedicated lower end Linode,
because what we want to do is put a little website on there that has the details and stuff. And then
own tracks itself is kind of like in multiple components. And so the recorder is a Docker image
that you can deploy. And that's like a lightweight backend that stores the location data. And you can
publish your location information to it in two different ways, either over HTTP, or you can
publish your location information to it in two different ways, either over HTTP, or over MQTT.
And then the recorder, as the name implies, records the information and then makes your
location data available, which is all completely under your control via a various set of APIs,
some of which can integrate directly into Home Assistant. So you can actually use own tracks
to provide Home Assistant with your real time location, which is a fantastic way to control
automations. And one way that we use this, not with own tracks today, but soon, is when no one
is at home. If some of the lights, which always happens, get left on, which never fails to get
left on, then if no one's home and a certain amount of time has passed, the lights just
automatically turn off. And that's just a simple way to use the automations. Or in the winter,
if we're approaching and it's cold, the heating turns on. Really simple stuff, stuff that we just
don't want to even have to think about. But the key is getting your location into Home Assistant,
and own tracks can essentially be that source of information. I'm using it for a live embedded map
on a web page, so that way you guys can find me and we can meet up. And I'll be running the own
tracks client, which publishes that information to the recorder on my pixel. That's so cool that it
uses MQTT to do that. Yeah, isn't it? It's clever. It seems like actually a great use of it because
you could see how, when you have maybe a loss of connectivity, it could queue up. And then when you
connect, it can just transmit the bits that were queued while you had no signal. It's really smart.
Perfect. It's exactly what it was designed for. Now, my favorite robot vacuum firmware,
Valitudo, had a big release last month, and I finally got around to updating it and installing
it this week. I'm a glutton for punishment, aren't I? There's lots of stuff breaking and
I still go ahead and install these updates. And guess what? What? Did it break? Well,
I mean, no, the updates went fine, but there'd been some changes to how the vacuums get
communicated with from Home Assistant. They've deprecated the vacuum.send command, which was
what I used to say, hey robot, go, you know, hoover the bedroom or something. And they've
deprecated it for an MQTT publish command. So we're both using MQTT here in wildly different
use cases, but I just think that's so cool how it's the same technology. It is pretty neat. And
just as a side note, I hate it when stuff like that gets deprecated. I think the whole Z-Wave
stack that I'm using in Home Assistant has been deprecated, and I just don't want to reset up my
Z-Wave network. And I don't know what that migration process is like, and I just don't
want to deal with it. And that kind of goes back to your topic earlier. It's working. I don't want
to break it. I don't want to have to do anything with it because it's just so part of my infrastructure
now. It no longer feels like a separate system. It feels like it is part of my home, and I don't like
messing with that stuff anymore. And equally, because it is part of the house, the uptime
needs to be as close to 100% as possible. And then you have to balance that off against applying
updates because it's part of your house. You don't want to not update it for 10 years.
I mean, some people would just say, if it's working, leave it. But I keep it up to date
because I feel like I want to be compatible with future technology and future functionality.
I mentioned to you earlier, I was like, maybe I should rebuild the whole setup and I should base
it on virtualization because the safety that a virtual machine gives me, that snapshot capability
and that holistic restoring of a system or taking a copy of it and setting it on a shelf and saying,
this is known good. That is so appealing to me. And it feels like it gives me a safety net to what
seems like a risky proposition to keep updating all of these systems all the time.
That's where I keep thinking, maybe I got to rethink the way I'm doing stuff. And that's
where I go down the rabbit hole and go, oh, it's too much. Not right now.
Mason Do you use a hypervisor at all for anything?
Ben No. Right now, the system's built around
these Raspberry Pis. There's not a lot of overhead there. So I'm just running containers on Ubuntu
LTS on Pi 4. But I would be willing to replace, you know, the two or three Raspberry Pis it takes
to do this with one fairly low energy x86 machine. And then I'd have sort of my, you know, my choice
of virtualizers at that point. Mason
Well, good news for you. Proxmox have just had a big release.
Version 7 was released on the 6th of July 2021. And it's based on Debian Bullseye number 11.
I'm sure most of you know this bit of trivia, but those of you coming to the Denver meetup
might want to pay attention. I might have given a question away there. Damn it.
Ben I love it. No, that's good. That's good.
Because if they're a listener, they get a heads up and no one else will know.
Mason Free trivia question coming your way.
Which kids movie does Debian name its releases after? Maybe you'll know. Maybe you won't.
It's just the sort of thing you have to come to the meetup and find out about.
Ben All right.
Mason Now what else is included in this release? They've got a bunch of new
versions of stuff. So ZFS is now 2.04. QEMU has been bumped to version 6.
And there's a new kernel 5.11. So it's really good to see that Proxmox are pushing the envelope
here and updating lots of their core systems. The reason I say that in particular is because
Debian has a bit of a reputation for being a bit old and crusty. And you look at the versions of
some of these packages and they're not that far off what is shipping in Arch.
Ben Right. I mean, a 5.11 kernel is older than what's in Arch, but it's newer than what's in
most LTS distros right now. And they've rolled out more recent ButterFS support, which I think
is kind of a big deal. It's nice to see essentially ButterFS and ZFS get near parity support in
Proxmox.
Mason It absolutely is. And I think this comes
back to a point that I hear quite frequently on Linux Unplugged actually is that we need to start
taking ButterFS seriously and stop just treating it as a bit of a joke because Facebook and all
these other massive companies that have things at significant scale are putting a lot of blood,
sweat and tears into the ButterFS subsystems. And it does seem to be cropping up in more and more
places. And for me, I'm actually starting to use Proxmox as my default distro for server OSs,
because it has ZFS baked in. So I don't need to futz about with DKMS or an AUR package to
install a custom kernel. I don't have to worry about the licensing. It's just taken care of.
I mean, the same is true of Ubuntu. But the thing that Proxmox gives me most out of all of this
other stuff is a really slick web UI to manage virtual machines and LXC containers.
Ben Great point. And I think that is something
that you and I probably underplay. I think for a lot of new users, that's like the biggest deal.
Ben Right. Yeah, absolutely.
Ben Yeah, I completely agree on your points about ButterFS too. I think
the thing that you have to remember is what ButterFS offers is a file system that does
copy on write, transparent compression. It can offer encryption, it can offer SSD trim support,
and it's extremely low memory. So it works really good, say like in a Raspberry Pi situation,
or in a laptop with a single SSD. Those are some use cases where ZFS is really not a great
choice there. And I really love the combination of the two. I think it makes for a really reliable
home server. And the way I use it now is ButterFS is on the root file system. So the system can boot
regardless of what's going on with ZFS. If your DKMS module fails to build for some weird reason,
which has happened to me, your system still boots because the core system, the file system,
is ButterFS. And then your really large data sets with your multiple disks that are in some sort of
RAID configuration, that's where I go ZFS. And that mounts almost every time the system reboots.
But if it doesn't, because the root is ButterFS, it's guaranteed I can get in there and get the
system repaired. And we can then get other things online like getting ZFS to mount.
And perhaps the biggest feature that we haven't touched on, the single most important improvement
in Proxmox 7, I can now download ISOs in the web UI. Hooray!
Oh yeah. So you give them a URL and it downloads, or does that mean you can download it to your
machine?
Both. So what happens is you plug the URL into the little form that says I want to
download it to this particular area of storage. And then at the bottom, this is a really nice
feature. It has an optional box at the bottom for you to fill in the MD5 hash in there.
So it will automatically verify the download for you as part of its automated process.
Now, a lot of people seem to think that Proxmox isn't free as in cost. It's open source.
So it's free as in speech and it is also free as in beer. The reason I thought it wasn't free
is because it has this little nag screen that says you do not have a valid subscription for
this server. And all that simply means is you have the enterprise repos enabled, which are
some air quotes, better tested packages. I don't know quite what that testing entails,
but that's what the Proxmox team say anyway. And so you can support the project and give
them money and they will enable your server to get rid of that nag message. Or you could
use automation. You could use, I've written an Ansible role, which several of our community
have now contributed to as well because open source is just that awesome. And what that does
is it goes in and removes the repos for you, changes a couple of lines in the web UI files
on the Proxmox system and removes the nag for you automatically. Just one more use case for automation.
And speaking of automation, we want to mention our friends over at a Cloud Guru have a course
that we'll have linked in the show notes just for you. It's the Red Hat Certified Specialist
in Advanced Automation and Ansible Best Practices. In this course, they're going to cover the topics
on the EX-447 exam as well to make sure you're ready to take that. If you're planning on expanding
your Ansible knowledge, this is a great course for you. You'll have a better understanding
of the topics on the exam and around Ansible and Ansible Tower and managing an Ansible inventory,
and of course, templates as well. So you'll have to go over to our show notes to get the link to
go directly to this course. That, of course, is over at selfhosted.show slash 49. You'll see the
link for ACG and that'll take you to the Red Hat Certified Specialist in Advanced Automation for
Ansible Best Practices. Did you get the update to your Shield yet? Alex, I am so, so disappointed
in this. I loved the Nvidia Shield so much. I've bought three of them in total. I've recommended
them to the audience. And I know that some people out there have also noticed that Nvidia has decided
to improve your experience by taking the top row, which used to be reserved for your favorite
applications, and now put full wide advertisements right there at the top, including folks in bondage,
folks doing all kinds of crazy things, like guns and violence and smoking. I've seen the whole
range. Thankfully, we're not really that kind of... It doesn't really bother me that much,
and it's in my bedroom. It's not like the family uses it all the time. But I really do not like
the fact that I cannot turn it off. And I think it's on my list to replace now, Alex.
I'm really disappointed. It's such a great device. Yeah, it's been a really interesting one to watch
the kind of cancel culture online react to this one. I mean, on the one hand, I don't really care
that much. They've taken an interface that was very clean and just got the job done and didn't
really have any cruft to it whatsoever. And then, as you say, they've polluted it with a bunch of ads.
I mean, that on the one hand sounds pretty terrible. But I mean, on the other hand,
I just don't find myself really caring all that much. I've been browsing the Nvidia Shield
subreddit for the last few years, and there's lots of people now posting custom launchers
that you can install on the Nvidia Shield. I mean, it's just Android underneath, right? So,
you could install a custom launcher if you want to. And I think all this is going to serve to do
is motivate those who do care about such things to release better quality third-party launchers
rather than relying on the Google-provided one. I think I'll probably just switch it to an Apple TV.
I have found that the Apple TVs perform even better than the Nvidia Shield, which I felt like
was pretty well-performant. This is the exact kind of thing that will never happen on the Apple TV
platform. And the UI has been very consistent now for years. The other thing is that it wakes
and it controls the TV more consistently than the Nvidia Shield has too. So, I think I'm just
going to switch it out. I wanted to keep it because I like the idea of having both. And I
really love Kodi. That's a big reason why I keep the Shield is I really love Kodi. But Infuse on
Apple TV, it replaces Kodi. In fact, I actually have to say, I think maybe Infuse is probably
better because it's just a newer app built with more modern technologies. And I think
and they've just steadily added the features you need. It doesn't quite have the plugin ecosystem
that Kodi does, but Infuse is a really great local file playback, play from your file shares,
all that kind of stuff. And it syncs via iCloud to your other Apple TVs. So, your settings,
you set it up once and it's... Oh, and also out of the box supports syncing play status with Plex.
And I can't remember if it does Jellyfin, but it's a really good app. And so, it does the job
that Kodi does. And so, I think it's just time to... I think I'm done with Android TV. I'm going
to keep a couple of Chromecasts around and that's going to be it. Well, if there's one thing we've
learned from the internet, it's the adverts always make everything better. I mean, YouTube's better
because of all the ads. Radio is better because of adverts, right? I mean, I struggle to think
of a single example where an advert makes things better. I think I wouldn't have even minded as
much if it was only showing ads for services that I maybe have active logins for on the device.
But it's showing me advertisements for services that I don't have and will never subscribe to.
So, that drives me crazy. And then I think the other thing is if it was at the bottom of the UI,
if they hadn't taken the row of icons and lowered it. And so, now you have to navigate down and
that would have been better as well. What do you make of the argument that the Nvidia Shield was
a premium device? This is quite a pervasive argument on Reddit that it's a $200 device.
It's a premium device. I've chosen this over something like the Google Chromecast, the new one
with the remote that has this same UI, by the way. What do you make of that argument? Because to me,
I think I kind of agree with it in that, yeah, one of the reasons I paid for the Shield, I paid
the extra money for two of them in this house, was because it was so blazing fast and because
I didn't have this stuff rammed down my throat without asking for it. Nvidia have just patched
this thing for years and years and years, and it's just been very reliable. And unlike you,
I'm left feeling rather deflated about it. Yeah, it feels like a play to get affiliate
revenue for stream signups. And it's like they have a user base out there. They're not selling
them as much anymore because they're not as competitive as they used to be. And there's
cheaper options out there. And I think the Apple TV is starting to eat up some of its market share
as well, because I think other people have realized it's a better box as well. And so I
think Nvidia felt, let's monetize what we've got here because they get some ongoing affiliate
revenue from those subscriptions, depending on the deals they work out. That's too tempting,
I think, for them to say no to. And I do agree that it is a premium device. It absolutely is.
I think $200 is on the cheap end. I think if you buy the... The first one I ever bought was the one
with like the big hard drive and all that, and the controller. I want to say that was like $300
or something. I bought that box because Rokus and cheaper boxes had that kind of crap. It's one of
the reasons I didn't get a Fire is because the Amazon Fire does this as well. It's rows of
advertisement. And so I didn't buy an Amazon Fire. And so I didn't buy a Roku. I bought an Nvidia
Shield specifically because it didn't have this crap on it, right? And so to have them retroactively
add that, like that wasn't the deal, bro. When I spent $300 on your kit, this wasn't the deal.
I just hate it. And I think the custom launcher solution is not a bad one, and maybe one I will
explore, but it's unfortunate. It's sort of like when people tell you to solve the problems with
an Android phone by flashing a custom ROM on there, it's like, come on, man. Yeah, I know you
can do that, but most consumers aren't going to do that. They're just not.
On that note, Will actually wrote in, and that's why we're talking about this, asking if you could
put lineage on the Shield. And I think that's a pretty interesting idea, actually. I don't think
it's supported today, but certainly moving forward, I could see a much more motivated community
emerging around this kind of stuff now. I tell you what, if a decent lineage image showed up for that
thing, I'd try it. Yeah, me too. And I mean, even though I just said most people aren't going to,
the vast majority of consumers who bought this won't. I'd use it. Now, another option you've got
is to replace the TVLauncher.apk via TeamWinRecoveryProject to one of the old versions
of the launcher that doesn't have ads on the home screen. You'll need to unlock your bootloader to
do that, but it doesn't require root or anything like that. Well, David from North Carolina wrote
in, he said, I'd love to know a little more details around the solar panels that Alex recently had
installed, especially since they seem to integrate with Home Assistant. I've been trying to convince
my wife that it would be a worthwhile investment. Love the show and keep up the work. Thanks, David.
And I think he's like extra excited because he's from your home state. Yeah, North Carolina. Hey,
David, how you doing? Is it called a home state now? I mean, your new home state?
Is it? I don't know. I still refer to England as home, and I still watched England crash out of the
Euros in the final, and I still went like a small child when that happened, but you know.
But you also have the first state that you called home in the U.S. It's also the first state where
it's the first place in the world where I had a child. So, you know, there is that. So I think
it's like as far as states go, it's your home state. Yeah, it probably is. So what do you think?
You got details for them? I've got a few, yeah. I don't have, you know, specific model numbers or
anything like that, but I went to a company called NC Solar Now. I looked at Tesla and a few others,
but the NC Solar Now folks were the ones that came out with the, you know, the best overall
price and package and service and financing and all that kind of stuff. And I ended up going for
a SolarEdge system, and this has a home assistant integration which connects to the, they've got
this website, and it will connect through the API to the website for up to 15 times an hour,
I think. It can poll the website through the API. And it was just a case of providing an API key.
It took literally five minutes to set it up. I had to spend an extra few hundred dollars on the
little Zigbee monitoring device to enable the inverter that's outside to talk to the internet,
because by default it doesn't come with any Wi-Fi capabilities. But apart from that, you know,
extra few hundred dollars to get the monitoring capabilities, yeah, it's been very straightforward
to set it up. And not only does it talk to home assistant, but the SolarEdge company also provides
a really nice dashboard and a really pretty slick mobile app as well. So I've got a little widget on
my Android home screen that tells me exactly what my solar is doing right now, which is pretty cool.
That's great. Yeah. I love that they're using Zigbee for that. Just the thing, Zigbee's all
over the place here. Nate wrote into the show asking about security implications for sharing
Ansible playbooks publicly. You know, he sees them on GitHub, all of that. He got thinking about this
after he listened to an episode of the Darknet Diaries, and he wondered if you have any thoughts
on it. Well, all of my stuff's open source on github.com slash ironic badger slash infra.
You know, I have open sourced everything for years now. That's kind of my default policy.
So I sure hope there isn't a privacy implication of doing that, you know?
Good answer. Yeah.
I do encrypt everything using Ansible Vault. So all of my secrets and things like that are
stuck behind AES-256 encryption. So hopefully, unless I commit a secret directly in clear text,
I think I'm okay. Yeah. I just, you know, when I go through your GitHub,
I just look at it. I think, you know, everything looks pretty good except for that passwords.txt
file where you just put all your passwords in there. Well, funny story on that. I actually
published my Gmail password one time to that repo. And I had a guy, a listener in Australia,
message me like it must've been first thing in the morning for him because it was just before
I went to bed saying, hey, by the way, did you know that commit you pushed 12 minutes ago has
your Gmail password in it? And I'm like, okay, first of all, thank you for letting me know. Secondly,
it was 12 minutes ago. Like, were you just waiting for me to push something?
He's got some sort of like alert.
So to get around that, Nick Busey from the Home Lab OS project helped me out with a pre-commit
hook that I have in my Git repo that just checks that my secrets file is encrypted before I push
and do a Git commit and push. That's been very, very useful. It doesn't protect against me actually
putting API keys and variables and stuff like that directly into other files, which, you know,
there comes a point where you've got to be like, right, okay, this, you know, my safety net is
checking that file is encrypted or not. It's not going to go and scan every single file. So yeah,
I guess it's up to you whether you feel comfortable with that risk or not. And I tend to think that
I tend to think that even if you're using a private repo on GitHub, you may as well treat
that as a public repository anyway, because one day it will be whether you like it or not. So.
And it really just means, can you stick to like a good hygiene with that kind of stuff?
If you'd like to get your question in or have a comment or something you think we should check
out, let us know. Go over to self-hosted.show slash contact. And you can go to self-hosted.show
slash SRE to show your support for the show. Yeah. Become a member, get access to the post
show and of course help us keep the show on the tracks. I think this episode, we're going to talk
about the future of the gasoline engine and the internal combustion engine. Oh, I have thoughts
on that. Interesting. Yeah, me too. Now I was browsing some, I always seem to come up with
YouTube on these things, don't I? But anyway, about steam trains the other week. And I found
this union Pacific steam loco called the big boy. And this thing is freaking enormous. And it was
designed in the early part of last century to get over some of the Rocky mountain passes because
they're just so vast here and the trains are so heavy. And so union Pacific have actually restored
one of these big boy steam locos, which is essentially two massive steam locos glued
together. This thing has basically two sets of drive wheels and two full sets of pistons. And
it's just awesome. Just go look it up. Big boy union Pacific steam loco. And it's going on tour
in August around the US. So it's leaving Cheyenne, Wyoming and going all the way down to Houston
past our beloved cheese bacon hometown of Beaumont. I know he lives in Denver now, doesn't he? Okay.
Well, so much for that. You could say it's his original hometown though. So much for that plug.
So yeah, it's going up to, I think, through Dallas at some point and then up through Kansas
city in St. Louis. So if you're in the center of the country, by all means, go take some pictures
for me, cause I'm not going to be able to make that one. But throughout August, it's traversing
the country. That does look like an incredible route actually. We'll have a link in the show notes.
When you go there, they have a map that shows you the route that they're going to be on. Well,
you know, it's either side of our Denver meetup, don't you? So I reckon if you were creative with
your schedule, Chris, you could probably find it for a day. Our route for the Denver meetup in
total is going to be just over 5,000 miles. That's a long way. I drove that myself in 2018. We flew
into Orlando, drove up to DC, drove down to Austin to meet you for the first time, and then up to
Denver. And that was about 5,000 miles. We did that in three weeks in a car. I mean, it wasn't
our house. No, I'm going to be in a land yacht. Yeah, that's for sure. But if you're going to be
in the area, don't forget that we have those meetups coming up and you can get details
at meetup.com slash Jupiter broadcasting. Make sure you don't miss the next episode,
episode 50. We've got some cool stuff lined up for you. And rumor has it there might be some swag.
Hmm. In the meantime, you can find Alex on Twitter. He is at Ironic Badger. I'm at Chris
Elias, and the show is at Self Hosted Show. And thanks for listening, everybody. That was
Self Hosted Show slash 49.
