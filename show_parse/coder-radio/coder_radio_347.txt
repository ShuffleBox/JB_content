{"show": "Coder Radio", "ep_title": "347: Rusty Rubies", "summary": "<p>Mike breaks down what it takes to build a proper iOS build server, and leaves the familiar shallows of Debian for the open waters of openSUSE.</p>\n\n<p>Plus Wes’ reluctant ruby adventures and our pick to ease your javascript packaging woes.</p><p><a href=\"https://jupitersignal.memberful.com/checkout?plan=53334\" rel=\"payment\">Support Coder Radio</a></p><p>Links:</p><ul><li><a href=\"https://github.com/rbenv/rbenv\" rel=\"nofollow\" title=\"rbenv: Groom your app’s Ruby environment\">rbenv: Groom your app’s Ruby environment</a> &mdash; Use rbenv to pick a Ruby version for your application and guarantee that your development environment matches production. Put rbenv to work with Bundler for painless Ruby upgrades and bulletproof deployments.\n\n</li><li><a href=\"https://www.reddit.com/r/CoderRadio/comments/av1j2t/serverless_squabbles_coder_radio_346/ehhy77p/\" rel=\"nofollow\" title=\"Serverless Feedback from TomEnom\">Serverless Feedback from TomEnom</a> &mdash; One thing you left out of your definition of serverless (IMO) that I find important is that it scales to zero. So if your lambda/function is not being used it incurs zero cost. I guess you could say that that is where serverless becomes literal.</li><li><a href=\"http://dominickm.com/install-opensuse-digital-ocean/\" rel=\"nofollow\" title=\"Install openSUSE on Digital Ocean\">Install openSUSE on Digital Ocean</a> &mdash; Unfortunately, Digital does not at present have an option for an openSUSE image. That doesn’t mean that you can’t use openSUSE on Digital Ocean, but it is going to be a little more work than most common Linux distributions.</li><li><a href=\"https://www.pikapkg.com/about\" rel=\"nofollow\" title=\"What is Pika?\">What is Pika?</a> &mdash; Pika's mission is to make modern JavaScript more accessible by making it easier to find, publish, install, and use modern packages on npm.\n</li><li><a href=\"https://www.pikapkg.com/blog/introducing-pika-pack/\" rel=\"nofollow\" title=\"Introducing: pika/pack\">Introducing: pika/pack</a> &mdash; If you’ve recently published a package to npm, you know how much work goes into a modern build process. Transpile JavaScript, compile TypeScript, convert ES Module syntax (ESM) to Common.js, configure your package.json manifest… and that’s just the basics.</li><li><a href=\"https://hacks.mozilla.org/2019/02/rewriting-a-browser-component-in-rust/\" rel=\"nofollow\" title=\"Implications of Rewriting a Browser Component in Rust - Mozilla Hacks\">Implications of Rewriting a Browser Component in Rust - Mozilla Hacks</a></li><li><a href=\"https://www.rust-lang.org/static/pdfs/Rust-npm-Whitepaper.pdf\" rel=\"nofollow\" title=\"Rust use case study in npm [pdf]\">Rust use case study in npm [pdf]</a> &mdash; The npm Registry uses Rust for its CPU-bound bottlenecks.</li></ul>", "published": "Tue, 05 Mar 2019 09:15:00 -0800", "links": [{"rel": "alternate", "type": "text/html", "href": "https://coder.show/347"}, {"length": "34097237", "type": "audio/mp3", "href": "https://aphid.fireside.fm/d/1437767933/b44de5fa-47c1-4e94-bf9e-c72f8d1c8f5d/cd47f625-c8f3-4ba8-90b7-09252e7be499.mp3", "rel": "enclosure"}], "episode": "347"}