{"show": "Coder Radio", "ep_title": "367: 10x Evilgineers", "summary": "<p>Mike rekindles his youthful love affair with Emacs and we debate what makes a &quot;10x engineer&quot;. </p>\n\n<p>Plus the latest Play store revolt and some of your feedback.</p><p><a href=\"https://jupitersignal.memberful.com/checkout?plan=53334\" rel=\"payment\">Support Coder Radio</a></p><p>Links:</p><ul><li><a href=\"https://www.reddit.com/r/CoderRadio/comments/ce1ef7/functional_first_coder_radio_366/eu1qtll/\" title=\"Feedback on Coder Radio 366\" rel=\"nofollow\">Feedback on Coder Radio 366</a> &mdash; As a C++ developer working on a large, primarily OO codebase, I’ve been writing ever more C++ as “just a pipeline of data transformations.” As you guys mentioned, you can get a lot of benefit even in an OO situation from wrapping a functional “core” up in an object “package.”</li><li><a href=\"https://www.destroyallsoftware.com/screencasts/catalog/functional-core-imperative-shell\" title=\"Functional Core, Imperative Shell\" rel=\"nofollow\">Functional Core, Imperative Shell</a> &mdash; In this screencast we look at one method for crossing this divide. We review a Twitter client whose core is functional: managing tweets, syncing timelines to incoming Twitter API data, remembering cursor positions within the tweet list, and rendering tweets to text for display. This functional core is surrounded by a shell of imperative code: it manipulates stdin, stdout, the database, and the network, all based on values produced by the functional core.\n</li><li><a href=\"https://www.youtube.com/watch?v=y_m0ce1rzRI\" title=\"Postmodern immutable data structures\" rel=\"nofollow\">Postmodern immutable data structures</a> &mdash; We are presenting Immer, a C++ library implementing modern and efficient data immutable data structures.\n</li><li><a href=\"https://twitter.com/dominucco/status/1151166107232940034\" title=\"Mike on Twitter\" rel=\"nofollow\">Mike on Twitter</a> &mdash; So when I just was getting started I was an #emacs user but had that beaten out of me. I’m thinking of looking back at it on #macOS and #Linux under GNOME any recommendations?</li><li><a href=\"http://spacemacs.org/\" title=\"Spacemacs: Emacs advanced Kit focused on Evil\" rel=\"nofollow\">Spacemacs: Emacs advanced Kit focused on Evil</a> &mdash; Spacemacs is a new way to experience Emacs -- a sophisticated and polished set-up focused on ergonomics, mnemonics and consistency.</li><li><a href=\"https://www.bloomberg.com/news/articles/2019-07-19/tinder-bypasses-google-play-joining-revolt-against-app-store-fee\" title=\"Tinder Bypasses Google Play, Revolt Against App Store Fee\" rel=\"nofollow\">Tinder Bypasses Google Play, Revolt Against App Store Fee</a> &mdash; Tinder joined a growing backlash against app store taxes by bypassing Google Play in a move that could shake up the billion-dollar industry dominated by Google and Apple Inc.\n\n</li><li><a href=\"https://www.emacswiki.org/emacs/Evil\" title=\"EmacsWiki: Evil\" rel=\"nofollow\">EmacsWiki: Evil</a> &mdash; Evil is an extensible vi layer for Emacs. It provides Vim features like Visual selection and text objects.</li><li><a href=\"http://nibblestew.blogspot.com/2019/07/a-personal-story-about-10-development.html\" title=\"A personal story about 10× development\" rel=\"nofollow\">A personal story about 10× development</a> &mdash; The \"×ness\" of any developer does not exist in a vacuum but depends on many organizational things. The most obvious one is tooling.</li><li><a href=\"https://twitter.com/skirani/status/1149302828420067328\" title=\"Shekhar Kirani on Twitter\" rel=\"nofollow\">Shekhar Kirani on Twitter</a> &mdash; 10x engineers. Founders if you ever come across this rare breed of engineers, grab them. If you have a 10x engineer as part of your first few engineers, you increase the odds of your startup success significantly.</li><li><a href=\"http://antirez.com/news/112\" title=\"The mythical 10x programmer - <antirez>\" rel=\"nofollow\">The mythical 10x programmer - <antirez></a> &mdash; The following is a list of qualities that I believe make the most difference in programmers productivity.\n</li><li><a href=\"https://github.com/rubocop-hq/rubocop\" title=\"rubocop\" rel=\"nofollow\">rubocop</a> &mdash; RuboCop is a Ruby static code analyzer and code formatter. Out of the box it will enforce many of the guidelines outlined in the community Ruby Style Guide.</li></ul>", "published": "Mon, 22 Jul 2019 20:00:00 -0700", "links": [{"rel": "alternate", "type": "text/html", "href": "https://coder.show/367"}, {"length": "24999729", "type": "audio/mp3", "href": "https://aphid.fireside.fm/d/1437767933/b44de5fa-47c1-4e94-bf9e-c72f8d1c8f5d/9bb6449c-388e-48f0-8185-5ce67994e825.mp3", "rel": "enclosure"}], "episode": "367"}